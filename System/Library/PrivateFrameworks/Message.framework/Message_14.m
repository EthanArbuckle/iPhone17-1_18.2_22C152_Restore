uint64_t getEnumTagSinglePayload for DisplayPart(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  v2 = *(void *)(a1 + 40) >> 4;
  if (v2 > 0x80000000) {
    v3 = ~v2;
  }
  else {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for DisplayPart(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 120) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = 16 * -a2;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A88C9120(uint64_t a1)
{
  return *(void *)(a1 + 96) >> 62;
}

uint64_t sub_1A88C912C(uint64_t result)
{
  *(void *)(result + 96) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A88C913C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 96) & 7 | (a2 << 62);
  *(void *)(result + 40) &= 0xFuLL;
  *(void *)(result + 96) = v2;
  return result;
}

ValueMetadata *type metadata accessor for DisplayPart()
{
  return &type metadata for DisplayPart;
}

uint64_t destroy for DisplayPart.Attachment(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A88BFCBC(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DisplayPart.Attachment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88BFB9C(v4, v5, v6, v7, v8);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  v9 = (void *)(a2 + 56);
  unint64_t v10 = *(void *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v10 >= 3)
  {
    *(void *)(a1 + 56) = *v9;
    *(void *)(a1 + 64) = v10;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v9;
  }
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DisplayPart.Attachment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1A88BFB9C(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v13 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1A88BFCBC(v9, v10, v11, v12, v13);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    if (v14 >= 3)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1A88BF590(a1 + 56);
    goto LABEL_6;
  }
  if (v14 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_8:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for DisplayPart.Attachment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1A88BFCBC(v5, v6, v7, v8, v9);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)(a2 + 56);
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    unint64_t v11 = *(void *)(a2 + 64);
    if (v11 >= 3)
    {
      *(void *)(a1 + 56) = *v10;
      *(void *)(a1 + 64) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1A88BF590(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v10;
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for DisplayPart.Attachment()
{
  return &type metadata for DisplayPart.Attachment;
}

unsigned char *storeEnumTagSinglePayload for DisplayPart.AlternativePartStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88C9608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayPart.AlternativePartStrategy()
{
  return &type metadata for DisplayPart.AlternativePartStrategy;
}

ValueMetadata *_s20OutputBufferTooSmallVMa()
{
  return &_s20OutputBufferTooSmallVN;
}

_OWORD *sub_1A88C9650(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  long long v5 = a1[4];
  long long v6 = a1[5];
  long long v7 = a1[7];
  a2[6] = a1[6];
  a2[7] = v7;
  a2[4] = v5;
  a2[5] = v6;
  return a2;
}

double sub_1A88C9678(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xFFFFFFFF0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return result;
}

uint64_t sub_1A88C9698@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 136);
  if (!v7)
  {
    swift_release();
    sub_1A88C9C34(a1);
LABEL_7:
    sub_1A88C9C80(&v62);
    sub_1A8529F8C((uint64_t)&v62, (uint64_t)v92, &qword_1E9743B18);
    return sub_1A8529F8C((uint64_t)v92, a4, &qword_1E9743B18);
  }
  long long v49 = *(_OWORD *)(a1 + 112);
  long long v51 = *(_OWORD *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 128);
  sub_1A8529F8C(a1 + 40, (uint64_t)v82, &qword_1E9743BB8);
  sub_1A8529F8C((uint64_t)v82, (uint64_t)&v85, &qword_1E9743BB8);
  if (!*((void *)&v86 + 1))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_release();
    sub_1A88C9C34(a1);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  long long v87 = v85;
  long long v88 = v86;
  v83[0] = v51;
  v83[1] = v49;
  char v84 = v9;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  sub_1A88C9C98((uint64_t)v82);
  sub_1A88E0D28((uint64_t)v83, (uint64_t)v77);
  uint64_t v52 = v77[0];
  uint64_t v48 = v77[2];
  uint64_t v50 = v77[1];
  uint64_t v47 = v77[3];
  char v46 = v78;
  swift_retain();
  uint64_t v10 = sub_1A88CE99C(v7, a3);
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_1A88C9CC4((uint64_t)&v87, (uint64_t)v89);
  sub_1A88C9CC4((uint64_t)v89, (uint64_t)v90);
  if (v91)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (unsigned __int8 *)v90[0];
    char v13 = (unsigned __int8 *)v90[1];
    swift_retain();
    unint64_t v14 = v13;
    uint64_t v10 = v11;
    uint64_t v15 = sub_1A88CCDF4(v12, v14);
    unint64_t v44 = v16;
  }
  else if (LOBYTE(v90[0]))
  {
    if (LOBYTE(v90[0]) == 1)
    {
      swift_retain();
      uint64_t v15 = 0;
      uint64_t v17 = 1;
    }
    else
    {
      swift_retain();
      uint64_t v15 = 0;
      uint64_t v17 = 2;
    }
    unint64_t v44 = v17;
  }
  else
  {
    swift_retain();
    uint64_t v15 = 0;
    unint64_t v44 = 0;
  }
  uint64_t v18 = *((void *)&v88 + 1);
  swift_retain();
  uint64_t v19 = sub_1A88CE4CC(v18, a3);
  swift_release();
  sub_1A88C9D20((uint64_t)v82);
  uint64_t result = swift_release();
  long long v21 = *(_OWORD *)(a1 + 16);
  long long v79 = *(_OWORD *)a1;
  long long v80 = v21;
  uint64_t v81 = *(void *)(a1 + 32);
  uint64_t v41 = a4;
  uint64_t v42 = v19;
  unsigned __int8 v40 = a2;
  uint64_t v39 = v10;
  uint64_t v45 = v79;
  if (*(unsigned char *)(a1 + 160) == 2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A852CA8C((uint64_t)&v79);
    sub_1A88C9D4C((uint64_t)v77, (void (*)(void, void, void, void, void))sub_1A88BFB9C);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88BC7E8(v15, v44);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v43 = 0;
    uint64_t v22 = 0;
LABEL_21:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_1A88E614C(BYTE8(v79), v80, *((uint64_t *)&v80 + 1), v81);
    uint64_t v35 = v33;
    uint64_t v36 = v34;
    if (v33) {
      uint64_t v37 = v34 - v33;
    }
    else {
      uint64_t v37 = 0;
    }
    uint64_t v38 = sub_1A88C195C(v37, v40);
    swift_release();
    sub_1A88C9C34(a1);
    *(void *)&long long v53 = v45;
    *((void *)&v53 + 1) = v52;
    *(void *)&long long v54 = v50;
    *((void *)&v54 + 1) = v48;
    *(void *)&long long v55 = v47;
    BYTE8(v55) = v46;
    *(void *)&long long v56 = v39;
    *((void *)&v56 + 1) = v15;
    *(void *)&long long v57 = v44;
    *((void *)&v57 + 1) = v42;
    *(void *)&long long v58 = v43;
    *((void *)&v58 + 1) = v22;
    LOBYTE(v59) = v40;
    *((void *)&v59 + 1) = v38;
    *(void *)&long long v60 = v35;
    *((void *)&v60 + 1) = v36;
    sub_1A88C9D8C((uint64_t)&v53);
    swift_bridgeObjectRelease();
    sub_1A88BC834(v15, v44);
    swift_bridgeObjectRelease();
    sub_1A88C9D4C((uint64_t)v77, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
    swift_bridgeObjectRelease();
    sub_1A85276F0((uint64_t)&v79);
    v61[4] = v57;
    v61[5] = v58;
    v61[6] = v59;
    v61[7] = v60;
    v61[0] = v53;
    v61[1] = v54;
    v61[2] = v55;
    v61[3] = v56;
    nullsub_1(v61);
    *(void *)&long long v62 = v45;
    *((void *)&v62 + 1) = v52;
    uint64_t v63 = v50;
    uint64_t v64 = v48;
    uint64_t v65 = v47;
    char v66 = v46;
    uint64_t v67 = v39;
    uint64_t v68 = v15;
    unint64_t v69 = v44;
    uint64_t v70 = v42;
    v71 = v43;
    uint64_t v72 = v22;
    unsigned __int8 v73 = v40;
    uint64_t v74 = v38;
    uint64_t v75 = v35;
    uint64_t v76 = v36;
    sub_1A88C9E38((uint64_t)&v62);
    sub_1A8529F8C((uint64_t)v61, (uint64_t)v92, &qword_1E9743B18);
    a4 = v41;
    return sub_1A8529F8C((uint64_t)v92, a4, &qword_1E9743B18);
  }
  uint64_t v23 = *(void *)(a1 + 144);
  uint64_t v24 = *(void *)(a1 + 152);
  if (v23) {
    uint64_t v25 = v24 - v23;
  }
  else {
    uint64_t v25 = 0;
  }
  if ((v25 & 0x8000000000000000) == 0)
  {
    uint64_t v26 = sub_1A88FA8C0(0, v25, v23, v24);
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    v92[0] = v26;
    v92[1] = v31;
    v92[2] = v27;
    v92[3] = v29;
    MEMORY[0x1F4188790](v26);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A852CA8C((uint64_t)&v79);
    sub_1A88C9D4C((uint64_t)v77, (void (*)(void, void, void, void, void))sub_1A88BFB9C);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88BC7E8(v15, v44);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v43 = sub_1A88F9E40(v28, v30, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88C6A54);
    uint64_t v22 = v32;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88C9BF4(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 96) & 7 | 0x8000000000000000;
  *(void *)(result + 40) &= 0xFuLL;
  *(void *)(result + 96) = v1;
  return result;
}

uint64_t sub_1A88C9C14(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 96) & 7 | 0x4000000000000000;
  *(void *)(result + 40) &= 0xFuLL;
  *(void *)(result + 96) = v1;
  return result;
}

uint64_t sub_1A88C9C34(uint64_t a1)
{
  return a1;
}

double sub_1A88C9C80(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1A88C9C98(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88C9CC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A88C9D20(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88C9D4C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1A88C9D8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 56);
  unint64_t v7 = *(void *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88BFB9C(v2, v3, v4, v5, v8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88BC7E8(v6, v7);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A88C9E38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 56);
  unint64_t v7 = *(void *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 40);
  swift_bridgeObjectRelease();
  sub_1A88BFCBC(v2, v3, v4, v5, v8);
  swift_bridgeObjectRelease();
  sub_1A88BC834(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A88C9EE4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 96) & 7;
  *(void *)(result + 40) &= 0xFuLL;
  *(void *)(result + 96) = v1;
  return result;
}

uint64_t sub_1A88C9F00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A88C9F38(uint64_t a1)
{
  return sub_1A88C7CF4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A88C9F40(uint64_t *a1)
{
  return sub_1A88C7D58(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void (**)(_OWORD *))(v1 + 32));
}

uint64_t sub_1A88C9F60(uint64_t a1)
{
  if ((*(void *)(a1 + 40) >> 4) > 0x80000000) {
    return -(*(void *)(a1 + 40) >> 4);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A88C9F78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88C9FD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (a6 >> 4 != 0xFFFFFFFF || a13 >= 8) {
    return sub_1A88C8CB8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
  return result;
}

uint64_t sub_1A88CA010(uint64_t a1, uint64_t a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for MIMEError()
{
  return &type metadata for MIMEError;
}

uint64_t Message.extractAttachments(lineEnding:writeAttachment:writeWithoutAttachments:cache:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v9[16] = a1;
  uint64_t v10 = a2;
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v14 = a6;
  return sub_1A88E1964(v7, (uint64_t (*)(void))sub_1A88CA0C8, (uint64_t)v9, a7);
}

uint64_t sub_1A88CA0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A88CA114(3u, *(unsigned __int8 *)(v4 + 16), *(void (**)(void *))(v4 + 24), *(void *)(v4 + 32), *(void (**)(uint64_t, char *))(v4 + 40), *(void *)(v4 + 48), *(uint64_t **)(v4 + 56), a1, a2, a3, a4);
}

uint64_t sub_1A88CA114(unsigned int a1, uint64_t a2, void (*a3)(void *), uint64_t a4, void (*a5)(uint64_t, char *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = sub_1A88CB980(a1, a8, a9, a10, a11, a7, (uint64_t)&v31);
  if (!v11)
  {
    uint64_t v18 = v38;
    *(void *)&long long v39 = v31;
    BYTE8(v39) = v32;
    long long v40 = v33;
    long long v41 = v34;
    *(void *)&long long v42 = v35;
    WORD4(v42) = v36;
    uint64_t v43 = v37;
    sub_1A88CA860();
    v52[2] = v41;
    v52[3] = v42;
    uint64_t v53 = v43;
    v52[0] = v39;
    v52[1] = v40;
    sub_1A88CA4F8(a1, a2, a5, a6);
    sub_1A88CBCB8((uint64_t)v52);
    uint64_t v30 = a3;
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      v20 = (_OWORD *)(v18 + 104);
      do
      {
        uint64_t v21 = *((void *)v20 - 8);
        uint64_t v22 = *((void *)v20 - 7);
        char v23 = *((unsigned char *)v20 - 48);
        uint64_t v24 = *((void *)v20 - 5);
        uint64_t v25 = *((void *)v20 - 4);
        uint64_t v27 = *((void *)v20 - 3);
        uint64_t v26 = *((void *)v20 - 2);
        v44[0] = *((void *)v20 - 9);
        v44[1] = v21;
        v44[2] = v22;
        char v45 = v23;
        uint64_t v46 = v24;
        uint64_t v47 = v25;
        uint64_t v48 = v27;
        uint64_t v49 = v26;
        uint64_t v54 = v26;
        char v50 = *((unsigned char *)v20 - 8);
        char v28 = v50;
        long long v29 = *v20;
        v20 = (_OWORD *)((char *)v20 + 88);
        long long v51 = v29;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A88CBCF0(v24, v25, v27, v26, v28);
        v30(v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A88CBD04(v24, v25, v27, v54, v28);
        --v19;
      }
      while (v19);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t UnsafeExtractedAttachment.part.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t UnsafeExtractedAttachment.part.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

double (*UnsafeExtractedAttachment.part.modify())(void)
{
  return nullsub_1;
}

uint64_t UnsafeExtractedAttachment.filename.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t UnsafeExtractedAttachment.filename.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

double (*UnsafeExtractedAttachment.filename.modify())(void)
{
  return nullsub_1;
}

uint64_t UnsafeExtractedAttachment.encoding.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t UnsafeExtractedAttachment.encoding.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

double (*UnsafeExtractedAttachment.encoding.modify())(void)
{
  return nullsub_1;
}

uint64_t UnsafeExtractedAttachment.mediaType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A88CB28C(v1 + 32, a1);
}

uint64_t UnsafeExtractedAttachment.mediaType.setter(uint64_t a1)
{
  return sub_1A88CB2F4(a1, v1 + 32);
}

double (*UnsafeExtractedAttachment.mediaType.modify())(void)
{
  return nullsub_1;
}

uint64_t UnsafeExtractedAttachment.unsafeBytes.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t UnsafeExtractedAttachment.unsafeBytes.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 72) = result;
  *(void *)(v2 + 80) = a2;
  return result;
}

double (*UnsafeExtractedAttachment.unsafeBytes.modify())(void)
{
  return nullsub_1;
}

__n128 UnsafeExtractedAttachment.init(part:filename:encoding:mediaType:unsafeBytes:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_1A8529F8C(a5, (uint64_t)v18, &qword_1E9743BF8);
  char v15 = v19;
  __n128 result = (__n128)v18[0];
  long long v17 = v18[1];
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4;
  *(__n128 *)(a8 + 32) = result;
  *(_OWORD *)(a8 + 48) = v17;
  *(unsigned char *)(a8 + 64) = v15;
  *(void *)(a8 + 72) = a6;
  *(void *)(a8 + 80) = a7;
  return result;
}

uint64_t sub_1A88CA4F8(unsigned int a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4)
{
  unsigned int v41 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v4[8];
  uint64_t v47 = v12;
  uint64_t v40 = *(void *)(v12 + 16);
  if (v40)
  {
    sub_1A8529F8C((uint64_t)(v4 + 5), (uint64_t)v42, &qword_1E9743B30);
    sub_1A8529F8C((uint64_t)v42, (uint64_t)v45, &qword_1E9743B30);
    int v39 = v46;
    if (v46 == 2)
    {
      uint64_t v13 = *v4;
      sub_1A88CBD18();
      swift_allocError();
      *uint64_t v14 = v13;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return swift_willThrow();
    }
    else
    {
      uint64_t v37 = v45[1];
      uint64_t v38 = v45[0];
      int v24 = *((unsigned __int8 *)v4 + 57);
      if (v24 == 1)
      {
        uint64_t v25 = sub_1A88E614C(*((unsigned __int8 *)v4 + 8), v4[2], v4[3], v4[4]);
        if (v25) {
          uint64_t v27 = v26 - v25;
        }
        else {
          uint64_t v27 = 0;
        }
      }
      else
      {
        uint64_t v27 = 1;
      }
      sub_1A88F2634(a2, v27, v24 ^ 1, 0, 0, a3, a4, *((unsigned __int8 *)v4 + 8), v4[2], v4[3], v4[4]);
      uint64_t v29 = v12 + 32;
      uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (uint64_t i = 0; ; ++i)
      {
        v43[0] = *(_OWORD *)v29;
        long long v31 = *(_OWORD *)(v29 + 16);
        long long v32 = *(_OWORD *)(v29 + 32);
        long long v33 = *(_OWORD *)(v29 + 48);
        uint64_t v44 = *(void *)(v29 + 64);
        v43[2] = v32;
        v43[3] = v33;
        v43[1] = v31;
        uint64_t v34 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        uint64_t v35 = v39 & 1;
        sub_1A88CBD6C((uint64_t)v43);
        sub_1A88F2EB4(i == 0, v38, v37, v35, a2, (void (*)(char *, uint64_t *, __n128))a3);
        sub_1A88CA4F8(v41, a2, a3, a4);
        if (v5)
        {
          sub_1A85276F0((uint64_t)&v47);
          return sub_1A88CBCB8((uint64_t)v43);
        }
        uint64_t result = sub_1A88CBCB8((uint64_t)v43);
        v29 += 72;
        if (v34 == v40)
        {
          uint64_t v36 = v39 & 1;
          sub_1A85276F0((uint64_t)&v47);
          return sub_1A88F324C(v38, v37, v36, a2, (void (*)(char *, uint64_t *, __n128))a3);
        }
      }
      __break(1u);
    }
  }
  else
  {
    int v16 = *((unsigned __int8 *)v4 + 57);
    uint64_t v17 = *((unsigned __int8 *)v4 + 8);
    uint64_t v18 = v4[2];
    uint64_t v19 = v4[3];
    uint64_t v20 = v4[4];
    if (v16 == 1)
    {
      uint64_t v21 = sub_1A88E614C(v17, v18, v19, v20);
      if (v21) {
        uint64_t v23 = v22 - v21;
      }
      else {
        uint64_t v23 = 0;
      }
      return sub_1A88F2634(a2, v23, 0, 0, 0, a3, a4, v17, v18, v19, v20);
    }
    else
    {
      uint64_t v28 = type metadata accessor for PartReplacement();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 1, 1, v28);
      sub_1A88F2C40(a2, (uint64_t)v11, a3, a4, (char *)v17, v18, v19, v20);
      return sub_1A88CBDA4((uint64_t)v11);
    }
  }
  return result;
}

void sub_1A88CA860()
{
  uint64_t v1 = *(char **)(v0 + 64);
  unint64_t v2 = *((void *)v1 + 2);
  if (v2)
  {
    unint64_t v3 = 0;
    char v4 = 1;
LABEL_3:
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    uint64_t v6 = -(uint64_t)v5;
    uint64_t v7 = 72 * v3++ + 89;
    do
    {
      if (v6 + v3 == 1)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v1 = sub_1A88BC790((uint64_t)v1);
      }
      if (v3 - 1 >= *((void *)v1 + 2)) {
        goto LABEL_27;
      }
      sub_1A88CA860();
      if (v3 - 1 >= *((void *)v1 + 2)) {
        goto LABEL_28;
      }
      if (v1[v7] == 1)
      {
        char v4 = 0;
        if (v3 != v2) {
          goto LABEL_3;
        }
        goto LABEL_24;
      }
      ++v3;
      v7 += 72;
    }
    while (v3 - v2 != 1);
    *(void *)(v0 + 64) = v1;
    if ((v4 & 1) == 0) {
      return;
    }
  }
  if ((*(unsigned char *)(v0 + 57) & 1) == 0)
  {
    uint64_t v8 = *((void *)v1 + 2);
    if (v8)
    {
      uint64_t v9 = v1 + 96;
      while (!*(void *)(*(void *)v9 + 16))
      {
        v9 += 72;
        if (!--v8) {
          goto LABEL_23;
        }
      }
    }
    else
    {
LABEL_23:
      swift_bridgeObjectRelease();
      uint64_t v1 = (char *)MEMORY[0x1E4FBC860];
LABEL_24:
      *(void *)(v0 + 64) = v1;
    }
  }
}

uint64_t sub_1A88CA9BC(uint64_t *a1, uint64_t a2)
{
  char v4 = (void *)(a2 + 16);
  swift_beginAccess();
  if (!*(void *)(a2 + 16)
    || (uint64_t v5 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0(),
        Swift::Bool v6 = SectionSpecifier.Part.isSubPart(of:)((NIOIMAPCore2::SectionSpecifier::Part)v5),
        swift_bridgeObjectRelease(),
        !v6))
  {
    long long v8 = *(_OWORD *)(a1 + 11);
    long long v9 = *(_OWORD *)(a1 + 15);
    v12[1] = *(_OWORD *)(a1 + 13);
    v13[0] = v9;
    *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)a1 + 129);
    *((void *)&v12[0] + 1) = *((void *)&v8 + 1);
    sub_1A8529F8C((uint64_t)v12 + 8, (uint64_t)v14, &qword_1E9743B78);
    sub_1A8529F8C((uint64_t)v14, (uint64_t)v15, &qword_1E9743B78);
    if (*((void *)&v16 + 1))
    {
      v17[0] = v15[0];
      v17[1] = v15[1];
      v17[2] = v16;
      sub_1A88AF2E4((uint64_t)v17, (uint64_t)v18);
      sub_1A88AF2E4((uint64_t)v18, (uint64_t)v19);
      if (v19[32] <= 0xFu)
      {
        sub_1A88CC024((uint64_t)v19, (uint64_t)v20);
        sub_1A88CC024((uint64_t)v20, (uint64_t)v21);
        if (v22 < 0)
        {
          v22 &= ~0x80u;
          sub_1A8529F8C((uint64_t)v21, (uint64_t)v23, (uint64_t *)&unk_1E9743F40);
        }
        else if (v21[0] == 10 || v21[0] == 4)
        {
          uint64_t v10 = *a1;
          uint64_t v7 = 1;
          swift_beginAccess();
          *char v4 = v10;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_12:
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
    swift_beginAccess();
    uint64_t v7 = 0;
    *char v4 = 0;
    goto LABEL_12;
  }
  return 1;
}

uint64_t sub_1A88CAB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, void *a10)
{
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = a2 + 16;
  sub_1A88CB3FC(a2, a3, a8, a9, (uint64_t)a10);
  uint64_t v31 = v11;
  char v32 = v12;
  uint64_t v33 = v14;
  uint64_t v34 = v13;
  uint64_t v35 = v15;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  char v39 = 2;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  char v43 = 0;
  nullsub_1(&v31);
  swift_beginAccess();
  sub_1A8529F8C(v16, (uint64_t)v44, &qword_1E9743B80);
  sub_1A8529F8C((uint64_t)&v31, v16, &qword_1E9743B80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88CBFC0(v44);
  uint64_t v22 = v11;
  char v23 = v12;
  uint64_t v24 = v14;
  uint64_t v25 = v13;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v26 = v15;
  __int16 v29 = 2;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v18 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, v17))
  {
    swift_beginAccess();
    uint64_t v19 = a10[2];
    a10[2] = v11;
    a10[3] = v12;
    a10[4] = v14;
    a10[5] = v13;
    a10[6] = v15;
    a10[7] = 0;
    a10[8] = 0;
    a10[9] = 2;
    a10[10] = v17;
    sub_1A88CC080(v19);
  }
  else
  {
    swift_beginAccess();
    if (a10[2])
    {
      unint64_t v20 = (2 * *(void *)(v11 + 16)) | 1;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88CAF28((uint64_t)&v22, v11, v11 + 32, 0, v20);
      sub_1A85276F0(a1);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 2;
}

uint64_t sub_1A88CAD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A88C69F8(a1, (uint64_t)v19);
  swift_beginAccess();
  sub_1A8529F8C(a6, (uint64_t)v25, &qword_1E9743B80);
  sub_1A8529F8C((uint64_t)v25, (uint64_t)v26, &qword_1E9743B80);
  uint64_t result = sub_1A8561268(v26);
  if (result != 1)
  {
    uint64_t result = sub_1A88C69F8(a1, (uint64_t)&v20);
    unsigned __int8 v9 = v23;
    switch(v23 >> 59)
    {
      case 0uLL:
        *(unsigned char *)(a6 + 144) = 1;
        break;
      case 5uLL:
        v23 &= 0x7FFFFFFFFFFFFFFuLL;
        long long v10 = v20;
        uint64_t v11 = v21;
        uint64_t v12 = v22;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t result = swift_bridgeObjectRelease();
        *(_OWORD *)(a6 + 40) = v10;
        *(void *)(a6 + 56) = v11;
        *(void *)(a6 + 64) = v12;
        break;
      case 8uLL:
        char v13 = v21;
        *(_OWORD *)(a6 + 72) = v20;
        *(unsigned char *)(a6 + 88) = v13;
        break;
      case 9uLL:
        v23 &= 0x7FFFFFFFFFFFFFFuLL;
        long long v18 = v20;
        uint64_t v14 = v21;
        uint64_t v15 = v22;
        uint64_t v16 = v24;
        uint64_t v17 = v9;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t result = swift_bridgeObjectRelease();
        *(_OWORD *)(a6 + 96) = v18;
        *(void *)(a6 + 112) = v14;
        *(void *)(a6 + 120) = v15;
        *(void *)(a6 + 128) = v17;
        *(void *)(a6 + 136) = v16;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1A88CAF28(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4, unint64_t a5)
{
  if (a5 >> 1 == a4) {
    return result;
  }
  if ((uint64_t)(a5 >> 1) <= a4)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t v7 = sub_1A8901D88(0, v8, 1, v7);
LABEL_8:
    unint64_t v15 = *((void *)v7 + 2);
    unint64_t v14 = *((void *)v7 + 3);
    if (v15 >= v14 >> 1) {
      uint64_t v7 = sub_1A8901D88((char *)(v14 > 1), v15 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v15 + 1;
    uint64_t v16 = &v7[72 * v15];
    *((_OWORD *)v16 + 2) = *(_OWORD *)v9;
    long long v17 = *(_OWORD *)(v9 + 16);
    long long v18 = *(_OWORD *)(v9 + 32);
    long long v19 = *(_OWORD *)(v9 + 48);
    *((void *)v16 + 12) = *(void *)(v9 + 64);
    *((_OWORD *)v16 + 4) = v18;
    *((_OWORD *)v16 + 5) = v19;
    *((_OWORD *)v16 + 3) = v17;
    uint64_t result = swift_unknownObjectRelease();
    *(void *)(v5 + 64) = v7;
    return result;
  }
  uint64_t v5 = v6;
  uint64_t v9 = result;
  int64_t v8 = *(void *)(a3 + 8 * a4);
  int64_t v13 = a4 + 1;
  uint64_t result = sub_1A88F1060(a3, a4 + 1, a5, MEMORY[0x1E4FBC860] + 32, 0, 1uLL);
  if (result)
  {
    uint64_t v7 = *(char **)(v6 + 64);
    if (*((void *)v7 + 2) + 1 != v8) {
      return result;
    }
    swift_unknownObjectRetain();
    sub_1A88CBD6C(v9);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
  if (v8 >= 1)
  {
    uint64_t v20 = *(void *)(v6 + 64);
    if ((unint64_t)v8 <= *(void *)(v20 + 16))
    {
      swift_unknownObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A88BC790(v20);
        uint64_t v20 = result;
      }
      if ((unint64_t)(v8 - 1) >= *(void *)(v20 + 16))
      {
        __break(1u);
      }
      else
      {
        sub_1A88CAF28(v9, a2, a3, v13, a5);
        uint64_t result = swift_unknownObjectRelease();
        *(void *)(v6 + 64) = v20;
      }
    }
  }
  return result;
}

uint64_t sub_1A88CB100(uint64_t result, uint64_t a2, int64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a4 >> 1 == a3)
  {
    *(unsigned char *)(a5 + 57) = a6 & 1;
    char v16 = *(unsigned char *)(a7 + 16);
    *(_OWORD *)(a5 + 40) = *(_OWORD *)a7;
    *(unsigned char *)(a5 + 56) = v16;
    return result;
  }
  if ((uint64_t)(a4 >> 1) <= a3)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v10 = a2;
  uint64_t v17 = *(void *)(a2 + 8 * a3);
  unint64_t v12 = v17 - 1;
  if (v17 >= 1)
  {
    int64_t v8 = *(char **)(a5 + 64);
    if ((unint64_t)v17 <= *((void *)v8 + 2))
    {
      unint64_t v9 = a4;
      uint64_t v7 = result;
      int64_t v11 = a3 + 1;
      char v18 = sub_1A88F1060(a2, a3 + 1, a4, MEMORY[0x1E4FBC860] + 32, 0, 1uLL);
      swift_unknownObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((v18 & 1) == 0)
      {
        if (result)
        {
LABEL_12:
          if (v12 >= *((void *)v8 + 2))
          {
            __break(1u);
            return result;
          }
          sub_1A88CB100(v7, v10, v11, v9, &v8[72 * v12 + 32], a6 & 1, a7);
          goto LABEL_14;
        }
LABEL_20:
        uint64_t result = (uint64_t)sub_1A88BC790((uint64_t)v8);
        int64_t v8 = (char *)result;
        goto LABEL_12;
      }
      if (result)
      {
LABEL_9:
        if (v12 < *((void *)v8 + 2))
        {
          long long v19 = &v8[72 * v12];
          v19[89] = a6 & 1;
          char v20 = *(unsigned char *)(a7 + 16);
          *(_OWORD *)(v19 + 72) = *(_OWORD *)a7;
          v19[88] = v20;
LABEL_14:
          uint64_t result = swift_unknownObjectRelease();
          *(void *)(a5 + 64) = v8;
          return result;
        }
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      int64_t v8 = sub_1A88BC790((uint64_t)v8);
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_1A88CB28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88CB2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88CB368(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy88_8_1(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

ValueMetadata *type metadata accessor for UnsafeExtractedAttachment()
{
  return &type metadata for UnsafeExtractedAttachment;
}

uint64_t *sub_1A88CB3FC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1 + 16;
  swift_beginAccess();
  sub_1A8529F8C(v9, (uint64_t)v75, &qword_1E9743B80);
  sub_1A8529F8C((uint64_t)v75, (uint64_t)&v76, &qword_1E9743B80);
  if (sub_1A8561268((uint64_t *)&v76) != 1)
  {
    v73[6] = v82;
    v73[7] = v83;
    v73[8] = v84;
    char v74 = v85;
    v73[2] = v78;
    v73[3] = v79;
    v73[4] = v80;
    v73[5] = v81;
    v73[0] = v76;
    v73[1] = v77;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    char v62 = 2;
    sub_1A8529F8C((uint64_t)v75, (uint64_t)v63, &qword_1E9743B80);
    sub_1A88C69AC((uint64_t)v63);
    if ((sub_1A88CA9BC((uint64_t *)v73, a2) & 1) != 0
      || (v85 & 1) != 0
      || (v72[0] = v82,
          v72[1] = v83,
          v72[2] = v84,
          (sub_1A88AE354(SBYTE8(v78), v79, SBYTE8(v79), v80, (uint64_t)v72) & 1) == 0))
    {
      int v14 = 0;
      uint64_t v15 = *((void *)&v84 + 1);
      if (!*((void *)&v84 + 1)) {
        goto LABEL_11;
      }
LABEL_10:
      long long v66 = v82;
      long long v67 = v83;
      char v68 = v84;
      uint64_t v69 = v15;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v16 = sub_1A88C3474();
      uint64_t v18 = v17;
      char v20 = v19;
      int v21 = v19;
      swift_bridgeObjectRelease();
      if (v21 != 2)
      {
        uint64_t v60 = v16;
        uint64_t v61 = v18;
        char v62 = v20;
        goto LABEL_14;
      }
LABEL_11:
      if (!v14)
      {
LABEL_16:
        sub_1A88CBFC0(v75);
        sub_1A88CBE94((uint64_t)v58);
        swift_beginAccess();
        sub_1A8529F8C(v9, (uint64_t)v59, &qword_1E9743B80);
        sub_1A8529F8C((uint64_t)v58, v9, &qword_1E9743B80);
        uint64_t v10 = (uint64_t *)v59;
        return sub_1A88CBFC0(v10);
      }
LABEL_14:
      uint64_t v22 = a5 + 16;
      swift_beginAccess();
      if (*(void *)(a5 + 16))
      {
        uint64_t v23 = v76;
        unint64_t v24 = (2 * *(void *)(v76 + 16)) | 1;
        uint64_t v25 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A88CB100(v25, v23 + 32, 0, v24, v22, v14, (uint64_t)&v60);
        swift_bridgeObjectRelease();
      }
      goto LABEL_16;
    }
    uint64_t v47 = *((void *)&v78 + 1);
    uint64_t v11 = v80;
    char v44 = BYTE8(v79);
    uint64_t v45 = v79;
    long long v54 = v83;
    long long v56 = v82;
    long long v12 = v84;
    if (BYTE8(v81) == 2)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char v50 = 5;
      if (*((void *)&v12 + 1))
      {
LABEL_8:
        v70[0] = v56;
        v70[1] = v54;
        char v71 = v12;
        swift_retain();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A88E0D28((uint64_t)v70, (uint64_t)v64);
        uint64_t v57 = v64[0];
        uint64_t v53 = v64[2];
        uint64_t v55 = v64[1];
        uint64_t v52 = v64[3];
        char v51 = v65;
        swift_retain();
        uint64_t v13 = sub_1A88CE99C(*((uint64_t *)&v12 + 1), a3);
        swift_bridgeObjectRelease_n();
        swift_release_n();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v27 = sub_1A88FA8A8(*((uint64_t *)&v80 + 1), v81);
      uint64_t v29 = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char v50 = sub_1A88C1F64(v27, v29);
      if (*((void *)&v12 + 1)) {
        goto LABEL_8;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v57 = 0;
    uint64_t v53 = 0;
    uint64_t v55 = 0;
    uint64_t v52 = 0;
    char v51 = 0;
    uint64_t v13 = 0;
LABEL_20:
    uint64_t v30 = BYTE8(v76);
    uint64_t v31 = *((void *)&v77 + 1);
    uint64_t v46 = v77;
    uint64_t v32 = v78;
    uint64_t v49 = v76;
    if (v11)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v59[0] = v44 & 1;
      int64_t v48 = sub_1A88BD90C(a3, v47, v45, v44 & 1, v11);
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      uint64_t v35 = (char **)(a4 + 16);
      if (v13)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      int64_t v48 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = (char **)(a4 + 16);
      if (v13) {
        goto LABEL_22;
      }
    }
    uint64_t v57 = 0;
    uint64_t v53 = 0;
    uint64_t v55 = 0;
    uint64_t v52 = 0;
    char v51 = -1;
LABEL_25:
    uint64_t v36 = sub_1A88E614C(v30, v46, v31, v32);
    uint64_t v38 = v37;
    swift_beginAccess();
    char v39 = *v35;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v35 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v39 = sub_1A8901EA8(0, *((void *)v39 + 2) + 1, 1, v39);
      *uint64_t v35 = v39;
    }
    unint64_t v42 = *((void *)v39 + 2);
    unint64_t v41 = *((void *)v39 + 3);
    if (v42 >= v41 >> 1)
    {
      char v39 = sub_1A8901EA8((char *)(v41 > 1), v42 + 1, 1, v39);
      *uint64_t v35 = v39;
    }
    *((void *)v39 + 2) = v42 + 1;
    char v43 = &v39[88 * v42];
    *((void *)v43 + 4) = v49;
    *((void *)v43 + 5) = v48;
    *((void *)v43 + 6) = v34;
    v43[56] = v50;
    *((void *)v43 + 8) = v57;
    *((void *)v43 + 9) = v55;
    *((void *)v43 + 10) = v53;
    *((void *)v43 + 11) = v52;
    v43[96] = v51;
    *((void *)v43 + 13) = v36;
    *((void *)v43 + 14) = v38;
    int v14 = 1;
    uint64_t v15 = *((void *)&v84 + 1);
    if (!*((void *)&v84 + 1)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  swift_beginAccess();
  sub_1A8529F8C(v9, (uint64_t)v73, &qword_1E9743B80);
  sub_1A8529F8C((uint64_t)v75, v9, &qword_1E9743B80);
  uint64_t v10 = (uint64_t *)v73;
  return sub_1A88CBFC0(v10);
}

uint64_t sub_1A88CB980@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(void *)(v11 + 80) = 0;
  uint64_t v12 = swift_allocObject();
  sub_1A88CBE94((uint64_t)v51);
  sub_1A8529F8C((uint64_t)v51, v12 + 16, &qword_1E9743B80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  uint64_t v52 = v12;
  uint64_t v37 = v12;
  uint64_t v38 = v14;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  char v43 = a6;
  uint64_t v44 = v13;
  uint64_t v45 = v11;
  uint64_t v35 = v12 + 16;
  char v15 = sub_1A88E7068(a1, a2, a3, a4, a5);
  if (v33)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v46 = MEMORY[0x1E4FBC860];
    char v47 = v15;
    uint64_t v48 = v16;
    uint64_t v49 = v17;
    uint64_t v50 = v18;
    sub_1A88E6824(sub_1A88CBEEC, (uint64_t)v36, (void (*)(void *, char *, char *, uint64_t, uint64_t))sub_1A88CBF24, (uint64_t)v34, 0, 0);
    sub_1A88CB3FC(v52, v14, a6, v13, v11);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v11 + 16);
    if (v20)
    {
      uint64_t v32 = *(void *)(v11 + 80);
      uint64_t v25 = *(void *)(v11 + 64);
      uint64_t v23 = *(void *)(v11 + 48);
      uint64_t v24 = *(void *)(v11 + 56);
      uint64_t v30 = *(void *)(v11 + 40);
      uint64_t v21 = *(void *)(v11 + 32);
      uint64_t v27 = *(void *)(v11 + 72);
      uint64_t v28 = *(void *)(v11 + 24);
      swift_beginAccess();
      uint64_t v22 = *(void *)(v13 + 16);
      sub_1A88CBF80(v20);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      *(void *)a7 = v20;
      *(unsigned char *)(a7 + 8) = v28;
      *(void *)(a7 + 16) = v21;
      *(void *)(a7 + 24) = v30;
      *(void *)(a7 + 32) = v23;
      *(void *)(a7 + 40) = v24;
      *(void *)(a7 + 48) = v25;
      *(unsigned char *)(a7 + 56) = v27;
      *(unsigned char *)(a7 + 57) = BYTE1(v27) & 1;
      *(void *)(a7 + 64) = v32;
      *(void *)(a7 + 72) = v22;
      return result;
    }
    sub_1A88CBF2C();
    swift_allocError();
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A88CBCB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88CBCF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_1A88BFB9C(result, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_1A88CBD04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_1A88BFCBC(result, a2, a3, a4, a5);
  }
  return result;
}

unint64_t sub_1A88CBD18()
{
  unint64_t result = qword_1E974E2C8;
  if (!qword_1E974E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2C8);
  }
  return result;
}

uint64_t sub_1A88CBD6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88CBDA4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A88CBE04()
{
  if (*(void *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1A88CBE48()
{
  if (*(void *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

double sub_1A88CBE94(uint64_t a1)
{
  *(unsigned char *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1A88CBEB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A88CBEEC(uint64_t a1)
{
  return sub_1A88CAB84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(uint64_t **)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t sub_1A88CBF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A88CAD8C(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

unint64_t sub_1A88CBF2C()
{
  unint64_t result = qword_1E974E2D0;
  if (!qword_1E974E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2D0);
  }
  return result;
}

uint64_t sub_1A88CBF80(uint64_t result)
{
  if (result)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t *sub_1A88CBFC0(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1A88CC024(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A88CC080(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9IMAP2MIME25UnsafeExtractedAttachmentVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    return sub_1A88BFCBC(v4, v5, v6, v7, v3);
  }
  return result;
}

uint64_t _s9IMAP2MIME25UnsafeExtractedAttachmentVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v5 = *(unsigned __int8 *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v5 == 255)
  {
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 32);
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = *(void *)(a2 + 48);
    uint64_t v9 = *(void *)(a2 + 56);
    sub_1A88BFB9C(v6, v7, v8, v9, v5);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v9;
    *(unsigned char *)(a1 + 64) = v5;
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t _s9IMAP2MIME25UnsafeExtractedAttachmentVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = (long long *)(a1 + 32);
  int v5 = (long long *)(a2 + 32);
  int v6 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v6 == 255)
    {
      long long v22 = *v5;
      long long v23 = *(_OWORD *)(a2 + 48);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *uint64_t v4 = v22;
      *(_OWORD *)(a1 + 48) = v23;
    }
    else
    {
      uint64_t v16 = *(void *)(a2 + 32);
      uint64_t v17 = *(void *)(a2 + 40);
      uint64_t v18 = *(void *)(a2 + 48);
      uint64_t v19 = *(void *)(a2 + 56);
      sub_1A88BFB9C(v16, v17, v18, v19, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 32) = v16;
      *(void *)(a1 + 40) = v17;
      *(void *)(a1 + 48) = v18;
      *(void *)(a1 + 56) = v19;
      *(unsigned char *)(a1 + 64) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1A88CB368(a1 + 32);
    char v20 = *(unsigned char *)(a2 + 64);
    long long v21 = *(_OWORD *)(a2 + 48);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 48) = v21;
    *(unsigned char *)(a1 + 64) = v20;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 56);
    sub_1A88BFB9C(v7, v8, v9, v10, *(unsigned char *)(a2 + 64));
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 48);
    uint64_t v14 = *(void *)(a1 + 56);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    char v15 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v6;
    sub_1A88BFCBC(v11, v12, v13, v14, v15);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t _s9IMAP2MIME25UnsafeExtractedAttachmentVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 == 255) {
    goto LABEL_5;
  }
  int v6 = *(unsigned __int8 *)(a2 + 64);
  if (v6 == 255)
  {
    sub_1A88CB368(a1 + 32);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 64) = v6;
  sub_1A88BFCBC(v7, v8, v9, v10, v5);
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t _s9IMAP2MIME25UnsafeExtractedAttachmentVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A88CC430(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractAttachments.UnsafeAttachment()
{
  return &type metadata for ExtractAttachments.UnsafeAttachment;
}

ValueMetadata *type metadata accessor for ExtractAttachments.Node.NoTopNodeFound()
{
  return &type metadata for ExtractAttachments.Node.NoTopNodeFound;
}

uint64_t initializeWithCopy for ExtractAttachments.Current(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v3 = *(_OWORD *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v3;
  *(_OWORD *)(a1 + 112) = v4;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ExtractAttachments.Current(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

__n128 __swift_memcpy145_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ExtractAttachments.Current(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtractAttachments.Current(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 145)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtractAttachments.Current(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 145) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractAttachments.Current()
{
  return &type metadata for ExtractAttachments.Current;
}

ValueMetadata *type metadata accessor for ExtractAttachments()
{
  return &type metadata for ExtractAttachments;
}

uint64_t destroy for ExtractAttachments.Node()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtractAttachments.Node(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ExtractAttachments.Node(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8_2(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ExtractAttachments.Node(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ExtractAttachments.Node()
{
  return &type metadata for ExtractAttachments.Node;
}

unsigned char *storeEnumTagSinglePayload for ExtractAttachments.Node.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88CCA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractAttachments.Node.Action()
{
  return &type metadata for ExtractAttachments.Node.Action;
}

uint64_t destroy for ExtractAttachments.UnsafeNodeHeaders()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtractAttachments.UnsafeNodeHeaders(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ExtractAttachments.UnsafeNodeHeaders(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  long long v5 = a2[2];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  long long v6 = *(long long *)((char *)a2 + 56);
  long long v7 = *(long long *)((char *)a2 + 72);
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  return a1;
}

__n128 __swift_memcpy105_8_0(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ExtractAttachments.UnsafeNodeHeaders(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtractAttachments.UnsafeNodeHeaders(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 105)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtractAttachments.UnsafeNodeHeaders(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractAttachments.UnsafeNodeHeaders()
{
  return &type metadata for ExtractAttachments.UnsafeNodeHeaders;
}

unint64_t sub_1A88CCD9C()
{
  unint64_t result = qword_1E974E2D8;
  if (!qword_1E974E2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2D8);
  }
  return result;
}

uint64_t sub_1A88CCDF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v3 = a1;
  if (a1) {
    int64_t v4 = a2 - a1;
  }
  else {
    int64_t v4 = 0;
  }
  MEMORY[0x1AD0DF770](v4);
  uint64_t result = 0;
  unint64_t v6 = 0xE000000000000000;
  if (v3) {
    goto LABEL_7;
  }
  if (a2)
  {
    unint64_t v3 = 0;
    do
    {
      int v7 = *v3++;
      if ((v7 - 1) < 0x7E)
      {
        uint64_t v8 = result;
        unint64_t v9 = v6;
        sub_1A8A766D8();
        uint64_t result = v8;
        unint64_t v6 = v9;
      }
LABEL_7:
      ;
    }
    while (!a2 || v3 != a2);
  }
  return result;
}

uint64_t sub_1A88CCE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = *MEMORY[0x1E4F143B8];
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = a1;
    uint64_t v59 = a2;
    uint64_t v60 = 0;
    uint64_t v4 = 32;
    uint64_t v58 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    while (1)
    {
      long long v10 = *(_OWORD *)(v3 + v4 + 48);
      long long v71 = *(_OWORD *)(v3 + v4 + 32);
      long long v72 = v10;
      long long v11 = *(_OWORD *)(v3 + v4 + 80);
      long long v73 = *(_OWORD *)(v3 + v4 + 64);
      long long v74 = v11;
      long long v12 = *(_OWORD *)(v3 + v4 + 16);
      long long v69 = *(_OWORD *)(v3 + v4);
      long long v70 = v12;
      sub_1A88CFFB8((uint64_t)&v69);
      if (v4 != 32) {
        sub_1A8A767E8();
      }
      sub_1A8529F8C((uint64_t)&v69, (uint64_t)v75, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v75, (uint64_t)&v76, (uint64_t *)&unk_1E9743F08);
      if (!*((void *)&v76 + 1)) {
        break;
      }
      uint64_t v13 = HIBYTE(*((void *)&v76 + 1)) & 0xFLL;
      if ((*((void *)&v76 + 1) & 0x2000000000000000) == 0) {
        uint64_t v13 = v76 & 0xFFFFFFFFFFFFLL;
      }
      if (!v13 || v70 == v76 || (sub_1A8A78588() & 1) != 0) {
        break;
      }
      unint64_t v64 = sub_1A88C52B0();
      uint64_t v65 = v53;
      sub_1A8A767E8();
      sub_1A88C4768(v59);
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      sub_1A8A767E8();
      sub_1A88D0064((uint64_t)&v69);
LABEL_5:
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      v4 += 96;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return v66;
      }
    }
    if (*((void *)&v73 + 1) >> 14 < (unint64_t)v73 >> 14)
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v14 = sub_1A8A77938();
    unint64_t v16 = v15;
    unint64_t v18 = v17;
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    LODWORD(v64) = 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t NFCInstance = unorm2_getNFCInstance();
    int v22 = v64;
    uint64_t v63 = v2;
    uint64_t v62 = v4;
    if (!NFCInstance || (int)v64 > 0)
    {
      sub_1A88D0010();
      uint64_t v31 = (void *)swift_allocError();
      *(_DWORD *)uint64_t v32 = v22;
      *(unsigned char *)(v32 + 4) = 0;
      swift_willThrow();
LABEL_29:
      uint64_t v33 = MEMORY[0x1AD0DF750](v14, v16, v18, v20);
      unint64_t v34 = v39;
      swift_bridgeObjectRelease();

LABEL_30:
      uint64_t v40 = v59;
      if (*(unsigned char *)(v59 + 96))
      {
        LODWORD(v64) = 0;
        uint64_t v41 = MEMORY[0x1AD0E5010](60, &v64);
      }
      else
      {
        uint64_t v41 = *(void *)(v59 + 88);
      }
      uint64_t v68 = v41;
      sub_1A88D0DB4((uint64_t)&v68, v33, v34, (uint64_t *)&v64);
      long long v42 = v71;
      long long v43 = v72;
      *(void *)(v40 + 88) = v41;
      *(unsigned char *)(v40 + 96) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v44 = v64;
      LODWORD(v64) = 0;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v45 = unorm2_getNFCInstance();
      int v46 = v64;
      unint64_t v61 = v44;
      if (v45 && (int)v64 <= 0)
      {
        unint64_t v47 = sub_1A88F9224(v42, *((unint64_t *)&v42 + 1), v43, *((unint64_t *)&v43 + 1));
        if ((uint64_t)(v47 + 0x4000000000000000) < 0) {
          goto LABEL_54;
        }
        if (((2 * v47) & 0x8000000000000000) != 0) {
          goto LABEL_57;
        }
        if ((uint64_t)(2 * v47 + 0x4000000000000000) < 0) {
          goto LABEL_58;
        }
        uint64_t v48 = 4 * v47;
        uint64_t isStackAllocationSafe = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v48 < 1025
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          uint64_t v7 = sub_1A88FA41C((uint64_t *)((char *)&v58 - v50), v42, *((unint64_t *)&v42 + 1), v43, *((unint64_t *)&v43 + 1));
          uint64_t v9 = v51;
        }
        else
        {
          uint64_t v52 = (_WORD *)swift_slowAlloc();
          uint64_t v7 = sub_1A88FA41C(v52, v42, *((unint64_t *)&v42 + 1), v43, *((unint64_t *)&v43 + 1));
          uint64_t v9 = v55;
          MEMORY[0x1AD0E4D00](v52, -1, -1);
        }
        swift_bridgeObjectRelease();
        uint64_t v60 = 0;
        if (!v9)
        {
          uint64_t v7 = MEMORY[0x1AD0DF750](v42, *((void *)&v42 + 1), v43, *((void *)&v43 + 1));
          uint64_t v9 = v56;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1A88D0010();
        long long v5 = (void *)swift_allocError();
        *(_DWORD *)uint64_t v6 = v46;
        *(unsigned char *)(v6 + 4) = 0;
        swift_willThrow();
        uint64_t v60 = 0;
        uint64_t v7 = MEMORY[0x1AD0DF750](v42, *((void *)&v42 + 1), v43, *((void *)&v43 + 1));
        uint64_t v9 = v8;
        swift_bridgeObjectRelease();
      }
      uint64_t v2 = v63;
      unint64_t v64 = v7;
      uint64_t v65 = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A88D0064((uint64_t)&v69);
      uint64_t v3 = v58;
      uint64_t v4 = v62;
      goto LABEL_5;
    }
    unint64_t v23 = sub_1A88F9224(v14, v16, v18, v20);
    if ((uint64_t)(v23 + 0x4000000000000000) < 0) {
      goto LABEL_53;
    }
    if (((2 * v23) & 0x8000000000000000) != 0) {
      goto LABEL_55;
    }
    if ((uint64_t)(2 * v23 + 0x4000000000000000) < 0) {
      goto LABEL_56;
    }
    uint64_t v24 = 4 * v23;
    uint64_t v25 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v24 < 1025 || (uint64_t v25 = swift_stdlib_isStackAllocationSafe(), (v25 & 1) != 0))
    {
      MEMORY[0x1F4188790](v25);
      uint64_t v27 = v60;
      uint64_t v28 = sub_1A88FA41C((uint64_t *)((char *)&v58 - v26), v14, v16, v18, v20);
      uint64_t v30 = v27;
      if (v27)
      {
        swift_willThrow();
LABEL_28:
        swift_bridgeObjectRelease();
        uint64_t v31 = v30;
        goto LABEL_29;
      }
      uint64_t v33 = v28;
      unint64_t v34 = v29;
    }
    else
    {
      uint64_t v35 = (_WORD *)swift_slowAlloc();
      uint64_t v36 = v60;
      uint64_t v37 = sub_1A88FA41C(v35, v14, v16, v18, v20);
      uint64_t v30 = v36;
      if (v36)
      {
        MEMORY[0x1AD0E4D00](v35, -1, -1);
        goto LABEL_28;
      }
      uint64_t v33 = v37;
      unint64_t v34 = v38;
      MEMORY[0x1AD0E4D00](v35, -1, -1);
    }
    swift_bridgeObjectRelease();
    if (!v34)
    {
      uint64_t v33 = MEMORY[0x1AD0DF750](v14, v16, v18, v20);
      unint64_t v34 = v54;
    }
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  return 0;
}

uint64_t sub_1A88CD63C(long long *a1, long long *a2)
{
  sub_1A88CE49C(a1, (uint64_t)v4);
  sub_1A88CE49C(a2, (uint64_t)v5);
  return _s9IMAP2MIME6HeaderO21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5) & 1;
}

unint64_t Header.field.getter()
{
  sub_1A88CE49C(v0, (uint64_t)&v3);
  unint64_t v1 = 0xD000000000000016;
  switch(v4)
  {
    case 1:
      unint64_t v1 = 0x6275732D6F747561;
      break;
    case 2:
      unint64_t v1 = 6513506;
      break;
    case 3:
      unint64_t v1 = 25443;
      break;
    case 4:
    case 5:
      unint64_t v1 = 0xD000000000000013;
      break;
    case 6:
      unint64_t v1 = 0x2D746E65746E6F63;
      break;
    case 7:
      unint64_t v1 = 0xD000000000000010;
      break;
    case 8:
      sub_1A8529F8C((uint64_t)&v3, (uint64_t)&v5, &qword_1E9743BB0);
      unint64_t v1 = 0xD000000000000019;
      break;
    case 9:
      unint64_t v1 = 0x2D746E65746E6F63;
      break;
    case 10:
      unint64_t v1 = 1702125924;
      break;
    case 11:
      unint64_t v1 = 1836020326;
      break;
    case 12:
      unint64_t v1 = 0x64692D7473696CLL;
      break;
    case 13:
      unint64_t v1 = 0x2D6567617373656DLL;
      break;
    case 14:
      unint64_t v1 = 0x7265762D656D696DLL;
      break;
    case 15:
      unint64_t v1 = 0x69726F6972702D78;
      break;
    case 16:
      unint64_t v1 = 0x6465766965636572;
      break;
    case 17:
      unint64_t v1 = 0x702D6E7275746572;
      break;
    case 18:
      unint64_t v1 = 0x7463656A627573;
      break;
    case 19:
      unint64_t v1 = 28532;
      break;
    case 20:
      unint64_t v1 = v3;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t Header.value(cache:)(uint64_t a1)
{
  sub_1A88CE49C(v1, (uint64_t)v11);
  sub_1A88CE49C(v1, (uint64_t)&v12);
  switch(v18)
  {
    case 1:
      uint64_t v5 = 0x6E65672D6F747561;
      if (v12 != 1) {
        uint64_t v5 = 0x7065722D6F747561;
      }
      if ((_BYTE)v12) {
        return v5;
      }
      else {
        return 28526;
      }
    case 2:
    case 3:
    case 19:
      uint64_t v4 = sub_1A88CCE9C(v12, a1);
      goto LABEL_24;
    case 5:
      long long v6 = v12;
      uint64_t v7 = v13;
      sub_1A88BC7E8(v12, *((unint64_t *)&v12 + 1));
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v4 = _sSS9IMAP2MIMEEySSAA18ContentDispositionVcfC_0(v6, *((uint64_t *)&v6 + 1), v7);
      goto LABEL_24;
    case 8:
      unint64_t v3 = 1953063479;
      switch((char)v12)
      {
        case 1:
          unint64_t v3 = 1953063480;
          break;
        case 2:
          unint64_t v3 = 0x7972616E6962;
          break;
        case 3:
          unint64_t v3 = 0xD000000000000010;
          break;
        case 4:
          unint64_t v3 = 0x343665736162;
          break;
        case 5:
          unint64_t v3 = 0;
          break;
        default:
          return v3;
      }
      return v3;
    case 9:
      long long v19 = v12;
      long long v20 = v13;
      long long v21 = v14;
      sub_1A88BFB40((uint64_t)&v19, (uint64_t)v25);
      v26[0] = *((void *)&v21 + 1);
      sub_1A88C3F64((uint64_t)v25);
      sub_1A852CA8C((uint64_t)v26);
      uint64_t v4 = _sSS9IMAP2MIMEEySSAA11ContentTypeVcfC_0((uint64_t)&v19);
      goto LABEL_24;
    case 10:
      unint64_t v3 = v12;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return v3;
    case 11:
      long long v21 = v14;
      long long v22 = v15;
      long long v23 = v16;
      long long v24 = v17;
      long long v19 = v12;
      long long v20 = v13;
      sub_1A8529F8C((uint64_t)&v19, (uint64_t)v26, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v26, (uint64_t)v25, (uint64_t *)&unk_1E9743F08);
      if (!*((void *)&v25[0] + 1)) {
        goto LABEL_21;
      }
      uint64_t v8 = HIBYTE(*((void *)&v25[0] + 1)) & 0xFLL;
      if ((*((void *)&v25[0] + 1) & 0x2000000000000000) == 0) {
        uint64_t v8 = *(void *)&v25[0] & 0xFFFFFFFFFFFFLL;
      }
      if (v8 && v20 != v25[0] && (sub_1A8A78588() & 1) == 0)
      {
        unint64_t v10 = sub_1A88C52B0();
        sub_1A8A767E8();
        sub_1A88C4768(a1);
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        sub_1A8A767E8();
        unint64_t v3 = v10;
      }
      else
      {
LABEL_21:
        uint64_t v4 = sub_1A88C4768(a1);
LABEL_24:
        unint64_t v3 = v4;
      }
      break;
    case 12:
      *(void *)&long long v19 = 60;
      *((void *)&v19 + 1) = 0xE100000000000000;
      sub_1A8A767E8();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      return v19;
    case 15:
      LOBYTE(v19) = v12;
      uint64_t v4 = sub_1A8A784D8();
      goto LABEL_24;
    case 20:
      unint64_t v3 = v13;
      goto LABEL_3;
    default:
      unint64_t v3 = v12;
LABEL_3:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
  }
  return v3;
}

uint64_t _s9IMAP2MIME6HeaderO21__derived_enum_equalsySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  sub_1A88CE49C(a1, (uint64_t)&v67);
  switch(v76)
  {
    case 1:
      int v5 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 1) {
        goto LABEL_105;
      }
      if (v5)
      {
        if (v5 == 1)
        {
          uint64_t v6 = 0x6E65672D6F747561;
          unint64_t v7 = 0xEE00646574617265;
        }
        else
        {
          uint64_t v6 = 0x7065722D6F747561;
          unint64_t v7 = 0xEC0000006465696CLL;
        }
      }
      else
      {
        unint64_t v7 = 0xE200000000000000;
        uint64_t v6 = 28526;
      }
      uint64_t v39 = 0x6E65672D6F747561;
      unint64_t v40 = 0xEE00646574617265;
      if (v57 != 1)
      {
        uint64_t v39 = 0x7065722D6F747561;
        unint64_t v40 = 0xEC0000006465696CLL;
      }
      if ((_BYTE)v57) {
        uint64_t v41 = v39;
      }
      else {
        uint64_t v41 = 28526;
      }
      if ((_BYTE)v57) {
        unint64_t v42 = v40;
      }
      else {
        unint64_t v42 = 0xE200000000000000;
      }
      if (v6 == v41 && v7 == v42)
      {
        swift_bridgeObjectRelease_n();
        char v24 = 1;
      }
      else
      {
        char v24 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return v24 & 1;
    case 2:
      uint64_t v8 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 2) {
        goto LABEL_105;
      }
      goto LABEL_70;
    case 3:
      uint64_t v8 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 3) {
        goto LABEL_70;
      }
      goto LABEL_105;
    case 4:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 4) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 5:
      long long v77 = v67;
      *(void *)&long long v78 = v68;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 5) {
        goto LABEL_105;
      }
      long long v54 = v57;
      *(void *)&long long v55 = v58;
      sub_1A88CA010((uint64_t)&v77, (uint64_t)v82);
      sub_1A88CA010((uint64_t)&v54, (uint64_t)v85);
      sub_1A88CA010((uint64_t)v82, (uint64_t)&v83);
      uint64_t v30 = v84;
      if (v84 == 2)
      {
        sub_1A88CA010((uint64_t)v85, (uint64_t)&v80);
        if (v81 != 2) {
          goto LABEL_105;
        }
      }
      else if (v84 == 1)
      {
        sub_1A88CA010((uint64_t)v85, (uint64_t)&v80);
        if (v81 != 1) {
          goto LABEL_105;
        }
      }
      else if (v84)
      {
        uint64_t v43 = v83;
        sub_1A88CA010((uint64_t)v85, (uint64_t)&v80);
        if (v81 < 3 || (v43 != v80 || v30 != v81) && (sub_1A8A78588() & 1) == 0) {
          goto LABEL_105;
        }
      }
      else
      {
        sub_1A88CA010((uint64_t)v85, (uint64_t)&v80);
        if (v81) {
          goto LABEL_105;
        }
      }
      if ((sub_1A88BCE0C(v78, v55) & 1) == 0) {
        goto LABEL_105;
      }
      goto LABEL_104;
    case 6:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 6) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 7:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 7) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 8:
      uint64_t v31 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 8) {
        goto LABEL_105;
      }
      if (v31 == 5)
      {
        if (v57 != 5) {
          goto LABEL_105;
        }
      }
      else if (v57 == 5 || (sub_1A88D00BC(v31, v57) & 1) == 0)
      {
        goto LABEL_105;
      }
      goto LABEL_104;
    case 9:
      long long v77 = v67;
      long long v78 = v68;
      long long v79 = v69;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 9)
      {
        long long v54 = v57;
        long long v55 = v58;
        long long v56 = v59;
        sub_1A88BFB40((uint64_t)&v77, (uint64_t)&v80);
        sub_1A88BFB40((uint64_t)&v54, (uint64_t)&v83);
        if ((_s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)&v80, (uint64_t)&v83) & 1) != 0
          && (sub_1A88BCF6C(*((uint64_t *)&v79 + 1), *((uint64_t *)&v56 + 1)) & 1) != 0)
        {
          goto LABEL_104;
        }
      }
      goto LABEL_105;
    case 10:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 10) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 11:
      long long v9 = v67;
      long long v10 = v68;
      long long v11 = v69;
      uint64_t v12 = v70;
      uint64_t v13 = v71;
      unint64_t v14 = v72;
      uint64_t v52 = v74;
      unint64_t v53 = v73;
      uint64_t v51 = v75;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 11) {
        goto LABEL_105;
      }
      unint64_t v50 = v14;
      long long v15 = v58;
      unint64_t v17 = *((void *)&v59 + 1);
      unint64_t v16 = v59;
      uint64_t v18 = v60;
      uint64_t v19 = v61;
      unint64_t v48 = v63;
      unint64_t v49 = v62;
      uint64_t v46 = v65;
      uint64_t v47 = v64;
      if (*((void *)&v9 + 1))
      {
        if (!*((void *)&v57 + 1)) {
          goto LABEL_105;
        }
        if (v9 != v57)
        {
          uint64_t v45 = v61;
          long long v20 = v59;
          uint64_t v21 = v60;
          char v22 = sub_1A8A78588();
          uint64_t v19 = v45;
          unint64_t v16 = v20;
          uint64_t v18 = v21;
          unint64_t v17 = *((void *)&v20 + 1);
          if ((v22 & 1) == 0) {
            goto LABEL_105;
          }
        }
      }
      else if (*((void *)&v57 + 1))
      {
        goto LABEL_105;
      }
      if (v10 == v15) {
        goto LABEL_79;
      }
      unint64_t v34 = v16;
      unint64_t v35 = v17;
      uint64_t v36 = v18;
      uint64_t v37 = v19;
      char v38 = sub_1A8A78588();
      uint64_t v19 = v37;
      uint64_t v18 = v36;
      unint64_t v17 = v35;
      unint64_t v16 = v34;
      if (v38)
      {
LABEL_79:
        if ((sub_1A88D133C(v11, *((unint64_t *)&v11 + 1), v12, v13, v16, v17, v18, v19) & 1) != 0
          && (sub_1A88D133C(v50, v53, v52, v51, v49, v48, v47, v46) & 1) != 0)
        {
LABEL_104:
          char v24 = 1;
          return v24 & 1;
        }
      }
LABEL_105:
      char v24 = 0;
      return v24 & 1;
    case 12:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 12) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 13:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 13) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 14:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 14) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 15:
      int v23 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 15) {
        goto LABEL_105;
      }
      char v24 = v23 == v57;
      return v24 & 1;
    case 16:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 16) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 17:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 17) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 18:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 == 18) {
        goto LABEL_64;
      }
      goto LABEL_105;
    case 19:
      uint64_t v8 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 19) {
        goto LABEL_105;
      }
LABEL_70:
      char v33 = sub_1A88BCBCC(v8, v57);
      goto LABEL_71;
    case 20:
      long long v25 = v67;
      long long v26 = v68;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66 != 20) {
        goto LABEL_105;
      }
      long long v27 = v58;
      if ((void)v25 != (void)v57 || *((void *)&v25 + 1) != *((void *)&v57 + 1))
      {
        char v24 = 0;
        if ((sub_1A8A78588() & 1) == 0) {
          return v24 & 1;
        }
      }
      if ((void)v26 == (void)v27 && *((void *)&v26 + 1) == *((void *)&v27 + 1)) {
        goto LABEL_104;
      }
LABEL_68:
      char v33 = sub_1A8A78588();
LABEL_71:
      char v24 = v33;
      return v24 & 1;
    default:
      uint64_t v4 = *((void *)&v67 + 1);
      uint64_t v3 = v67;
      sub_1A88CE49C(a2, (uint64_t)&v57);
      if (v66) {
        goto LABEL_105;
      }
LABEL_64:
      if (v3 != (void)v57 || v4 != *((void *)&v57 + 1)) {
        goto LABEL_68;
      }
      goto LABEL_104;
  }
}

uint64_t sub_1A88CE49C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  *(_OWORD *)(a2 + 16) = a1[1];
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)a2 = v2;
  long long v4 = a1[3];
  long long v5 = a1[4];
  long long v6 = a1[5];
  *(unsigned char *)(a2 + 96) = *((unsigned char *)a1 + 96);
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 48) = v4;
  return a2;
}

uint64_t sub_1A88CE4CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v43 = a2;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v47 = MEMORY[0x1E4FBC860];
    sub_1A8902A14(0, v2, 0);
    uint64_t v3 = v47;
    long long v5 = (uint64_t *)(a1 + 80);
    do
    {
      long long v6 = (unsigned __int8 *)*(v5 - 6);
      char v7 = *((unsigned char *)v5 - 32);
      uint64_t v8 = (unsigned __int8 *)*(v5 - 3);
      int v9 = *((unsigned __int8 *)v5 - 8);
      uint64_t v10 = *v5;
      unint64_t v42 = (unsigned __int8 *)*(v5 - 2);
      if ((v7 & 1) == 0)
      {
        switch((char)v6)
        {
          case 1:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = 0;
            uint64_t v14 = 1;
            if (!v9) {
              goto LABEL_49;
            }
            goto LABEL_28;
          case 2:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = 0;
            uint64_t v14 = 2;
            if (!v9) {
              goto LABEL_49;
            }
            goto LABEL_28;
          case 3:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = 0;
            uint64_t v14 = 3;
            if (!v9) {
              goto LABEL_49;
            }
            goto LABEL_28;
          case 4:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = 0;
            uint64_t v14 = 4;
            if (!v9) {
              goto LABEL_49;
            }
            goto LABEL_28;
          case 5:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = 0;
            uint64_t v14 = 5;
            if (!v9) {
              goto LABEL_49;
            }
            goto LABEL_28;
          default:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = 0;
            uint64_t v14 = 0;
            if (!v9) {
              goto LABEL_49;
            }
            goto LABEL_28;
        }
      }
      uint64_t v41 = v8;
      long long v11 = (unsigned __int8 *)*(v5 - 5);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      if (v6) {
        int64_t v12 = v11 - v6;
      }
      else {
        int64_t v12 = 0;
      }
      swift_bridgeObjectRetain_n();
      swift_retain();
      MEMORY[0x1AD0DF770](v12);
      uint64_t v13 = v48;
      uint64_t v14 = v49;
      if (v6)
      {
        while (!v11 || v6 != v11)
        {
LABEL_23:
          int v15 = *v6++;
          if ((v15 - 1) <= 0x7D)
          {
            uint64_t v45 = v13;
            unint64_t v46 = v14;
            sub_1A8A766D8();
            uint64_t v13 = v45;
            uint64_t v14 = v46;
          }
        }
      }
      else if (v11)
      {
        long long v6 = 0;
        goto LABEL_23;
      }
      uint64_t v8 = v41;
      if (v9)
      {
LABEL_28:
        if (*(void *)(v10 + 16) == 1 && (*(_WORD *)(v10 + 48) & 0x8100) == 0x8000)
        {
          uint64_t v16 = *(void *)(v10 + 32);
          uint64_t v17 = *(void *)(v10 + 40);
          if (v16) {
            uint64_t v18 = v17 - v16;
          }
          else {
            uint64_t v18 = 0;
          }
          if (v18 < 0)
          {
            __break(1u);
LABEL_60:
            __break(1u);
          }
          unint64_t v42 = v13;
          uint64_t v19 = sub_1A88FACDC(0, v18, v16, v17);
          if (v21) {
            uint64_t v22 = v21 + v20;
          }
          else {
            uint64_t v22 = 0;
          }
          if (v21) {
            uint64_t v23 = v21 + v19;
          }
          else {
            uint64_t v23 = 0;
          }
          uint64_t v45 = 0;
          unint64_t v46 = 0xE000000000000000;
          uint64_t v24 = v22 - v23;
          if (v23) {
            uint64_t v25 = v22 - v23;
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t isStackAllocationSafe = MEMORY[0x1AD0DF770](v25);
          char v44 = 0;
          if (v23)
          {
            if (v24 < 0) {
              goto LABEL_60;
            }
            if (v24 >= 1025)
            {
              uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
              if ((isStackAllocationSafe & 1) == 0)
              {
                uint64_t v27 = swift_slowAlloc();
                unint64_t v48 = (unsigned __int8 *)v27;
                unint64_t v49 = v22 - v23;
                uint64_t v50 = 0;
                uint64_t v28 = v40;
                sub_1A88EABBC((int64_t)&v48, (int64_t *)&v45, v23, v22, v43, &v44);
                if (v28)
                {
                  MEMORY[0x1AD0E4D00](v27, -1, -1);
                  goto LABEL_63;
                }
                uint64_t v40 = 0;
                MEMORY[0x1AD0E4D00](v27, -1, -1);
LABEL_57:
                uint64_t v30 = v42;
                swift_release();
                swift_bridgeObjectRelease_n();
                int64_t v31 = (int64_t)v45;
                unint64_t v32 = v46;
                goto LABEL_50;
              }
            }
          }
          else
          {
            uint64_t v24 = 0;
          }
          MEMORY[0x1F4188790](isStackAllocationSafe);
          unint64_t v48 = (unsigned __int8 *)&v39 - v36;
          unint64_t v49 = v24;
          uint64_t v50 = 0;
          uint64_t v37 = v40;
          sub_1A88EABBC((int64_t)&v48, (int64_t *)&v45, v23, v22, v43, &v44);
          if (v37)
          {
            swift_willThrow();
LABEL_63:
            swift_release();
            __break(1u);
            JUMPOUT(0x1A88CE984);
          }
          uint64_t v40 = 0;
          goto LABEL_57;
        }
      }
LABEL_49:
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      unint64_t v29 = v13;
      sub_1A88ED9A0((uint64_t)v8, (uint64_t)v42, v9, v10, v8, v42, v9, v10, v43, (uint64_t)&v48);
      swift_bridgeObjectRelease_n();
      uint64_t v30 = v29;
      swift_release();
      int64_t v31 = (int64_t)v48;
      unint64_t v32 = v49;
LABEL_50:
      uint64_t v47 = v3;
      unint64_t v34 = *(void *)(v3 + 16);
      unint64_t v33 = *(void *)(v3 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1A8902A14((char *)(v33 > 1), v34 + 1, 1);
        uint64_t v3 = v47;
      }
      *(void *)(v3 + 16) = v34 + 1;
      unint64_t v35 = (void *)(v3 + 32 * v34);
      v35[4] = v30;
      v35[5] = v14;
      v35[6] = v31;
      v35[7] = v32;
      v5 += 7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A88CE99C(uint64_t a1, uint64_t *a2)
{
  uint64_t v43 = a2;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v47 = MEMORY[0x1E4FBC860];
    sub_1A8902A34(0, v2, 0);
    uint64_t v3 = v47;
    long long v5 = (uint64_t *)(a1 + 80);
    do
    {
      long long v6 = (unsigned __int8 *)*(v5 - 6);
      char v7 = *((unsigned char *)v5 - 32);
      uint64_t v8 = (unsigned __int8 *)*(v5 - 3);
      int v9 = *((unsigned __int8 *)v5 - 8);
      uint64_t v10 = *v5;
      unint64_t v42 = (unsigned __int8 *)*(v5 - 2);
      if ((v7 & 1) == 0)
      {
        switch((char)v6)
        {
          case 1:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xEB00000000657079;
            uint64_t v14 = 0x742D737365636361;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 2:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE800000000000000;
            uint64_t v14 = 0x797261646E756F62;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 3:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE700000000000000;
            uint64_t v14 = 0x74657372616863;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 4:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE500000000000000;
            uint64_t v14 = 0x70736C6564;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 5:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE600000000000000;
            uint64_t v14 = 0x7265626D756ELL;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 6:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE500000000000000;
            uint64_t v14 = 0x6C61746F74;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 7:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE200000000000000;
            uint64_t v14 = 25705;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 8:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xEB000000006E6F69;
            uint64_t v14 = 0x7469736F70736964;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 9:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE800000000000000;
            uint64_t v14 = 0x6C6F636F746F7270;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 10:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE600000000000000;
            uint64_t v14 = 0x636C6167696DLL;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 11:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE700000000000000;
            uint64_t v14 = 0x746E656D6D6F63;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          case 12:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE600000000000000;
            uint64_t v14 = 0x74616D726F66;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
          default:
            swift_bridgeObjectRetain_n();
            swift_retain();
            uint64_t v13 = (unsigned __int8 *)0xE400000000000000;
            uint64_t v14 = 1701667182;
            if (!v9) {
              goto LABEL_63;
            }
            goto LABEL_42;
        }
      }
      uint64_t v41 = v8;
      long long v11 = (unsigned __int8 *)*(v5 - 5);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      if (v6) {
        int64_t v12 = v11 - v6;
      }
      else {
        int64_t v12 = 0;
      }
      swift_bridgeObjectRetain_n();
      swift_retain();
      MEMORY[0x1AD0DF770](v12);
      uint64_t v14 = (uint64_t)v48;
      uint64_t v13 = (unsigned __int8 *)v49;
      if (v6)
      {
        while (!v11 || v6 != v11)
        {
LABEL_37:
          int v15 = *v6++;
          if ((v15 - 1) <= 0x7D)
          {
            int64_t v45 = v14;
            unint64_t v46 = (unint64_t)v13;
            sub_1A8A766D8();
            uint64_t v14 = v45;
            uint64_t v13 = (unsigned __int8 *)v46;
          }
        }
      }
      else if (v11)
      {
        long long v6 = 0;
        goto LABEL_37;
      }
      uint64_t v8 = v41;
      if (v9)
      {
LABEL_42:
        if (*(void *)(v10 + 16) == 1 && (*(_WORD *)(v10 + 48) & 0x8100) == 0x8000)
        {
          uint64_t v16 = *(void *)(v10 + 32);
          uint64_t v17 = *(void *)(v10 + 40);
          if (v16) {
            uint64_t v18 = v17 - v16;
          }
          else {
            uint64_t v18 = 0;
          }
          if (v18 < 0)
          {
            __break(1u);
LABEL_74:
            __break(1u);
          }
          unint64_t v42 = v13;
          uint64_t v19 = sub_1A88FACDC(0, v18, v16, v17);
          if (v21) {
            uint64_t v22 = v21 + v20;
          }
          else {
            uint64_t v22 = 0;
          }
          if (v21) {
            uint64_t v23 = v21 + v19;
          }
          else {
            uint64_t v23 = 0;
          }
          int64_t v45 = 0;
          unint64_t v46 = 0xE000000000000000;
          uint64_t v24 = v22 - v23;
          if (v23) {
            uint64_t v25 = v22 - v23;
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t isStackAllocationSafe = MEMORY[0x1AD0DF770](v25);
          char v44 = 0;
          if (v23)
          {
            if (v24 < 0) {
              goto LABEL_74;
            }
            if (v24 >= 1025)
            {
              uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
              if ((isStackAllocationSafe & 1) == 0)
              {
                uint64_t v27 = swift_slowAlloc();
                unint64_t v48 = (char *)v27;
                unint64_t v49 = v22 - v23;
                uint64_t v50 = 0;
                uint64_t v28 = v40;
                sub_1A88EABBC((int64_t)&v48, &v45, v23, v22, v43, &v44);
                if (v28)
                {
                  MEMORY[0x1AD0E4D00](v27, -1, -1);
                  goto LABEL_77;
                }
                uint64_t v40 = 0;
                MEMORY[0x1AD0E4D00](v27, -1, -1);
LABEL_71:
                uint64_t v30 = v42;
                swift_release();
                swift_bridgeObjectRelease_n();
                int64_t v31 = v45;
                unint64_t v32 = v46;
                goto LABEL_64;
              }
            }
          }
          else
          {
            uint64_t v24 = 0;
          }
          MEMORY[0x1F4188790](isStackAllocationSafe);
          unint64_t v48 = (char *)&v39 - v36;
          unint64_t v49 = v24;
          uint64_t v50 = 0;
          uint64_t v37 = v40;
          sub_1A88EABBC((int64_t)&v48, &v45, v23, v22, v43, &v44);
          if (v37)
          {
            swift_willThrow();
LABEL_77:
            swift_release();
            __break(1u);
            JUMPOUT(0x1A88CEFD4);
          }
          uint64_t v40 = 0;
          goto LABEL_71;
        }
      }
LABEL_63:
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      unint64_t v29 = v13;
      sub_1A88ED9A0((uint64_t)v8, (uint64_t)v42, v9, v10, v8, v42, v9, v10, v43, (uint64_t)&v48);
      swift_bridgeObjectRelease_n();
      uint64_t v30 = v29;
      swift_release();
      int64_t v31 = (int64_t)v48;
      unint64_t v32 = v49;
LABEL_64:
      uint64_t v47 = v3;
      unint64_t v34 = *(void *)(v3 + 16);
      unint64_t v33 = *(void *)(v3 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1A8902A34((char *)(v33 > 1), v34 + 1, 1);
        uint64_t v3 = v47;
      }
      *(void *)(v3 + 16) = v34 + 1;
      unint64_t v35 = (void *)(v3 + 32 * v34);
      v35[4] = v14;
      v35[5] = v30;
      v35[6] = v31;
      v35[7] = v32;
      v5 += 7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A88CF008(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  switch(a13)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 10:
    case 12:
    case 13:
    case 14:
    case 16:
    case 17:
    case 18:
    case 19:
      goto LABEL_6;
    case 5:
      sub_1A88BC7E8(result, a2);
      goto LABEL_6;
    case 9:
      sub_1A88BFB9C(result, a2, a3, a4, a5);
      goto LABEL_6;
    case 11:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_6;
    case 20:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_6:
      uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for Header(uint64_t a1)
{
  return sub_1A88CF184(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
}

uint64_t sub_1A88CF184(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  switch(a13)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 10:
    case 12:
    case 13:
    case 14:
    case 16:
    case 17:
    case 18:
    case 19:
      goto LABEL_6;
    case 5:
      sub_1A88BC834(result, a2);
      goto LABEL_6;
    case 9:
      sub_1A88BFCBC(result, a2, a3, a4, a5);
      goto LABEL_6;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 20:
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for Header(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  char v16 = *(unsigned char *)(a2 + 96);
  sub_1A88CF008(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 96) = v16;
  return a1;
}

uint64_t assignWithCopy for Header(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  char v28 = *(unsigned char *)(a2 + 96);
  sub_1A88CF008(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 88);
  char v23 = *(unsigned char *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(unsigned char *)(a1 + 96) = v28;
  sub_1A88CF184(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Header(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 96);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  char v15 = *(unsigned char *)(a1 + 96);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  *(unsigned char *)(a1 + 96) = v3;
  sub_1A88CF184(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Header(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEC && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 236);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 0x14) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Header(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEB)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 236;
    if (a3 >= 0xEC) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xEC) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A88CF5EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 96);
}

uint64_t sub_1A88CF5F4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 96) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Header()
{
  return &type metadata for Header;
}

uint64_t sub_1A88CF60C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A88C69F8(a1, (uint64_t)&v70);
  char v6 = v72;
  switch((unint64_t)v72 >> 59)
  {
    case 1uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      sub_1A8A76618();
      swift_bridgeObjectRelease();
      unint64_t v7 = sub_1A8A782F8();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      BOOL v20 = v7 >= 3;
      if (v7 >= 3) {
        unint64_t v7 = 0;
      }
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      if (v20) {
        char v17 = -1;
      }
      else {
        char v17 = 1;
      }
      break;
    case 2uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      uint64_t v21 = sub_1A88FA8A8(v70, *((uint64_t *)&v70 + 1));
      uint64_t v23 = v22;
      swift_retain();
      sub_1A88EB78C(v21, v23, a2);
      unint64_t v7 = sub_1A88C4B4C();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 2;
      break;
    case 3uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      uint64_t v24 = sub_1A88FA8A8(v70, *((uint64_t *)&v70 + 1));
      uint64_t v26 = v25;
      swift_retain();
      sub_1A88EB78C(v24, v26, a2);
      unint64_t v7 = sub_1A88C4B4C();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 3;
      break;
    case 4uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v27;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 4;
      break;
    case 5uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      long long v63 = v70;
      long long v64 = v71;
      sub_1A88C9CC4((uint64_t)&v63, (uint64_t)v59);
      sub_1A88C9CC4((uint64_t)v59, (uint64_t)v61);
      if (v62)
      {
        unint64_t v7 = sub_1A88CCDF4(v61[0], v61[1]);
        uint64_t v9 = v28;
      }
      else
      {
        unint64_t v7 = 0;
        uint64_t v9 = LOBYTE(v61[0]);
      }
      uint64_t v58 = *((void *)&v64 + 1);
      swift_retain();
      uint64_t v11 = sub_1A88CE4CC(v58, a2);
      swift_release_n();
      uint64_t result = sub_1A88CFF5C(a1);
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 5;
      break;
    case 6uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v29;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 6;
      break;
    case 7uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v30;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 7;
      break;
    case 8uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      uint64_t v31 = sub_1A88FA8A8(v70, *((uint64_t *)&v70 + 1));
      LOBYTE(v7) = sub_1A88C1F64(v31, v32);
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      unint64_t v7 = v7;
      long long v19 = 0uLL;
      char v17 = 8;
      break;
    case 9uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      long long v63 = v70;
      long long v64 = v71;
      *(_OWORD *)uint64_t v65 = v72;
      sub_1A88AF2E4((uint64_t)&v63, (uint64_t)v61);
      sub_1A88E0D28((uint64_t)v61, (uint64_t)v59);
      unint64_t v7 = v59[0];
      uint64_t v9 = v59[1];
      uint64_t v11 = v59[2];
      uint64_t v12 = v59[3];
      uint64_t v13 = v60;
      uint64_t v33 = *(void *)&v65[8];
      swift_retain();
      uint64_t v34 = sub_1A88CE99C(v33, a2);
      swift_release_n();
      uint64_t result = sub_1A88CFF5C(a1);
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v19 = 0uLL;
      long long v18 = (unint64_t)v34;
      char v17 = 9;
      break;
    case 0xAuLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      if ((void)v70) {
        uint64_t v35 = *((void *)&v70 + 1) - v70;
      }
      else {
        uint64_t v35 = 0;
      }
      if (v35 < 0)
      {
        __break(1u);
        JUMPOUT(0x1A88CFF08);
      }
      uint64_t v36 = sub_1A88FA8C0(0, v35, v70, *((uint64_t *)&v70 + 1));
      unint64_t v7 = sub_1A88FB518(v36, v37, v38, v39);
      uint64_t v9 = v40;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 10;
      break;
    case 0xBuLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      sub_1A88C4A10(v70, *((uint64_t *)&v70 + 1), a2, (uint64_t)v61);
      uint64_t result = sub_1A8529F8C((uint64_t)v61, (uint64_t)&v63, &qword_1E9746B70);
      uint64_t v12 = *((void *)&v64 + 1);
      if (!*((void *)&v64 + 1))
      {
        unint64_t v7 = 0;
        uint64_t v9 = 0;
        uint64_t v11 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        long long v18 = 0uLL;
        goto LABEL_41;
      }
      uint64_t v9 = *((void *)&v63 + 1);
      unint64_t v7 = v63;
      uint64_t v11 = v64;
      uint64_t v13 = *(void *)v65;
      long long v18 = *(_OWORD *)&v65[8];
      uint64_t v14 = v66;
      long long v19 = v67;
      char v17 = 11;
      uint64_t v15 = v68;
      uint64_t v16 = v69;
      break;
    case 0xCuLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = sub_1A88DB820(v70, *((uint64_t *)&v70 + 1));
      uint64_t v9 = v41;
      uint64_t result = swift_release();
      long long v18 = 0uLL;
      if (!v9)
      {
        unint64_t v7 = 0;
        goto LABEL_40;
      }
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v19 = 0uLL;
      char v17 = 12;
      break;
    case 0xDuLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v42;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 13;
      break;
    case 0xEuLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v43;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 14;
      break;
    case 0xFuLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      sub_1A88D0CF8(v70, *((uint64_t *)&v70 + 1));
      LOWORD(v7) = v44;
      uint64_t result = swift_release();
      long long v18 = 0uLL;
      if ((v7 & 0x100) != 0)
      {
        unint64_t v7 = 0;
        uint64_t v9 = 0;
LABEL_40:
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
LABEL_41:
        long long v19 = 0uLL;
        char v17 = -1;
      }
      else
      {
        uint64_t v9 = 0;
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        unint64_t v7 = v7;
        long long v19 = 0uLL;
        char v17 = 15;
      }
      break;
    case 0x10uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v45;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 16;
      break;
    case 0x11uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v46;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 17;
      break;
    case 0x12uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      uint64_t v47 = sub_1A88FA8A8(v70, *((uint64_t *)&v70 + 1));
      uint64_t result = sub_1A88EB78C(v47, v48, a2);
      unint64_t v7 = result;
      uint64_t v9 = v49;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 18;
      break;
    case 0x13uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      uint64_t v50 = sub_1A88FA8A8(v70, *((uint64_t *)&v70 + 1));
      uint64_t v52 = v51;
      swift_retain();
      sub_1A88EB78C(v50, v52, a2);
      unint64_t v7 = sub_1A88C4B4C();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 19;
      break;
    case 0x14uLL:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      char v53 = v6 & 1;
      uint64_t v55 = *((void *)&v71 + 1);
      long long v54 = (void *)v71;
      unint64_t v7 = sub_1A88CCDF4((unsigned __int8 *)v70, *((unsigned __int8 **)&v70 + 1));
      uint64_t v9 = v56;
      uint64_t v11 = (uint64_t)sub_1A88FBAF0(v54, v55, v53);
      uint64_t v12 = v57;
      uint64_t result = swift_release();
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      char v17 = 20;
      break;
    default:
      *(void *)&long long v72 = v72 & 0x7FFFFFFFFFFFFFFLL;
      unint64_t v7 = (unint64_t)sub_1A88FBAF0((void *)v70, *((uint64_t *)&v70 + 1), v71 & 1);
      uint64_t v9 = v8;
      uint64_t result = swift_release();
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      char v17 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      break;
  }
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v11;
  *(void *)(a3 + 24) = v12;
  *(void *)(a3 + 32) = v13;
  *(_OWORD *)(a3 + 40) = v18;
  *(void *)(a3 + 56) = v14;
  *(_OWORD *)(a3 + 64) = v19;
  *(void *)(a3 + 80) = v15;
  *(void *)(a3 + 88) = v16;
  *(unsigned char *)(a3 + 96) = v17;
  return result;
}

uint64_t sub_1A88CFF5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88CFF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a5 >> 59 == 5 || a5 >> 59 == 9) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A88CFFB8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A88D0010()
{
  unint64_t result = qword_1E974E2E0;
  if (!qword_1E974E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2E0);
  }
  return result;
}

uint64_t sub_1A88D0064(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88D00C0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E65672D6F747561;
    }
    else {
      uint64_t v3 = 0x7065722D6F747561;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEE00646574617265;
    }
    else {
      unint64_t v4 = 0xEC0000006465696CLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E65672D6F747561;
      }
      else {
        uint64_t v6 = 0x7065722D6F747561;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEE00646574617265;
      }
      else {
        unint64_t v7 = 0xEC0000006465696CLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE200000000000000;
    uint64_t v3 = 28526;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE200000000000000;
  if (v3 != 28526)
  {
LABEL_21:
    char v8 = sub_1A8A78588();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A88D01F0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x656D686361747461;
    }
    else {
      uint64_t v3 = 0x7461642D6D726F66;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA0000000000746ELL;
    }
    else {
      unint64_t v4 = 0xE900000000000061;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x656D686361747461;
      }
      else {
        uint64_t v6 = 0x7461642D6D726F66;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA0000000000746ELL;
      }
      else {
        unint64_t v7 = 0xE900000000000061;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x656E696C6E69;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x656E696C6E69)
  {
LABEL_21:
    char v8 = sub_1A8A78588();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A88D0314(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656D616E656C6966;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656D616E656C6966;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6E6F697461657263;
      unint64_t v3 = 0xED0000657461642DLL;
      break;
    case 2:
      unint64_t v3 = 0x80000001A8B3E080;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 3:
      unint64_t v5 = 0x7461642D64616572;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1702521203;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701667182;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED0000657461642DLL;
      if (v5 == 0x6E6F697461657263) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0x80000001A8B3E080;
      if (v5 != 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x7461642D64616572) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1702521203;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701667182) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1A88D0528(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 1953063479;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1953063479;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 1953063480;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x7972616E6962;
      break;
    case 3:
      unint64_t v3 = 0x80000001A8B3E0C0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x343665736162;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 1953063480) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x7972616E6962) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x80000001A8B3E0C0;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x343665736162) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t Header.AutoSubmitted.rawValue.getter(char a1)
{
  if (!a1) {
    return 28526;
  }
  if (a1 == 1) {
    return 0x6E65672D6F747561;
  }
  return 0x7065722D6F747561;
}

uint64_t sub_1A88D0720(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A88D00C0(*a1, *a2);
}

uint64_t sub_1A88D072C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9IMAP2MIME6HeaderO13AutoSubmittedO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1A88D075C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xEE00646574617265;
  uint64_t v5 = 0x6E65672D6F747561;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7065722D6F747561;
    unint64_t v4 = 0xEC0000006465696CLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 28526;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A88D07C4()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88D0870()
{
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88D0908()
{
  return sub_1A8A787C8();
}

uint64_t _s9IMAP2MIME6HeaderO13AutoSubmittedO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A88D0A00()
{
  unint64_t result = qword_1E974E2E8;
  if (!qword_1E974E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2E8);
  }
  return result;
}

unsigned char *_s13AutoSubmittedOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88D0B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Header.AutoSubmitted()
{
  return &type metadata for Header.AutoSubmitted;
}

BOOL static Header.Priority.__derived_struct_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Header.Priority.init(_:)(unint64_t a1)
{
  int v1 = a1;
  int v3 = a1 > 0xFF || a1 - 6 < 0xFFFFFFFB;
  if (v3) {
    int v1 = 0;
  }
  return v1 | (v3 << 8);
}

uint64_t Header.Priority.hash(into:)()
{
  return sub_1A8A78778();
}

uint64_t Header.Priority.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t Header.Priority.description.getter()
{
  return sub_1A8A784D8();
}

uint64_t sub_1A88D0C44()
{
  return sub_1A8A784D8();
}

uint64_t Int.init(_:)(uint64_t result)
{
  return result;
}

unint64_t sub_1A88D0C94()
{
  unint64_t result = qword_1E974E2F0;
  if (!qword_1E974E2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Header.Priority()
{
  return &type metadata for Header.Priority;
}

void sub_1A88D0CF8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = a2 - a1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3 < 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v6 = sub_1A88FA8C0(0, v3, a1, a2);
  uint64_t v7 = v4;
  sub_1A88DC558();
  if ((v5 & 1) == 0 && v6 != v7 && v6 >= v7) {
    goto LABEL_11;
  }
}

ValueMetadata *type metadata accessor for IDNA()
{
  return &type metadata for IDNA;
}

void sub_1A88D0DB4(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = (UIDNA **)isStackAllocationSafe;
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t isStackAllocationSafe = sub_1A8A76848();
    uint64_t v9 = isStackAllocationSafe;
    if (isStackAllocationSafe < 0) {
      __break(1u);
    }
  }
  else if ((a3 & 0x2000000000000000) != 0)
  {
    uint64_t v9 = HIBYTE(a3) & 0xF;
  }
  else
  {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v9 > 1024)
  {
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (!isStackAllocationSafe)
    {
      uint64_t v13 = (char *)swift_slowAlloc();
      sub_1A88D0F84(v13, v9, v7, &v17);
      if (!v4)
      {
        MEMORY[0x1AD0E4D00](v13, -1, -1);
        uint64_t v11 = v17;
        uint64_t v12 = v18;
        goto LABEL_13;
      }
      MEMORY[0x1AD0E4D00](v13, -1, -1);
      goto LABEL_12;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  sub_1A88D0F84((char *)&v16[-1] - v10, v9, v7, v16);
  if (v4)
  {
    swift_willThrow();
LABEL_12:
    uint64_t v17 = a2;
    uint64_t v18 = a3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v11 = sub_1A8A76958();
    uint64_t v12 = v14;

    goto LABEL_13;
  }
  uint64_t v11 = v16[0];
  uint64_t v12 = v16[1];
LABEL_13:
  *a4 = v11;
  a4[1] = v12;
}

uint64_t sub_1A88D0F84@<X0>(char *a1@<X0>, uint64_t a2@<X1>, UIDNA **a3@<X4>, uint64_t *a4@<X8>)
{
  v19[1] = *MEMORY[0x1E4F143B8];
  if (!a1) {
    goto LABEL_16;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A77DD8();
  if (v9) {
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *a3;
  uint64_t result = sub_1A88D1198(a1, a2, 0, 0, 1, v10);
  if (v4) {
    return result;
  }
  if ((result & 0x80000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = (int)result;
  if ((int)result >= 1025)
  {
    uint64_t result = swift_stdlib_isStackAllocationSafe();
    if ((result & 1) == 0)
    {
      uint64_t v17 = (char *)swift_slowAlloc();
      if ((sub_1A88D1198(a1, a2, v17, v12, 0, v10) & 0x80000000) == 0)
      {
        uint64_t v14 = sub_1A8A766E8();
        uint64_t v16 = v18;
        uint64_t result = MEMORY[0x1AD0E4D00](v17, -1, -1);
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  MEMORY[0x1F4188790](result);
  if ((sub_1A88D1198(a1, a2, (char *)v19 - v13, v12, 0, v10) & 0x80000000) != 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  uint64_t result = sub_1A8A766E8();
  uint64_t v14 = result;
  uint64_t v16 = v15;
LABEL_11:
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_1A88D1198(char *name, uint64_t length, char *dest, uint64_t capacity, char a5, UIDNA *idna)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  UErrorCode pErrorCode = U_ZERO_ERROR;
  pInfo.size = 16;
  *(void *)&pInfo.isTransitionalDifferent = 0;
  *(void *)&pInfo.reservedI2 = 0;
  if (length < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (length > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((a5 & 1) == 0)
  {
    if (capacity >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (capacity <= 0x7FFFFFFF) {
        goto LABEL_7;
      }
LABEL_16:
      __break(1u);
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  LODWORD(capacity) = 0;
  dest = 0;
LABEL_7:
  uint64_t v9 = uidna_nameToASCII_UTF8(idna, name, length, dest, capacity, &pInfo, &pErrorCode);
  UErrorCode v10 = pErrorCode;
  if (((a5 & 1) == 0 || pErrorCode != U_BUFFER_OVERFLOW_ERROR) && (pErrorCode > U_ZERO_ERROR || pInfo.errors))
  {
    sub_1A88D12D8();
    swift_allocError();
    *uint64_t v11 = v10;
    swift_willThrow();
  }
  return v9;
}

unint64_t sub_1A88D12D8()
{
  unint64_t result = qword_1E974E2F8;
  if (!qword_1E974E2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIDNAError()
{
  return &type metadata for UIDNAError;
}

uint64_t sub_1A88D133C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 == a7 && a4 == a8 && a1 >> 16 == a5 >> 16 && a2 >> 16 == a6 >> 16) {
    return 1;
  }
  else {
    return sub_1A8A784C8() & 1;
  }
}

uint64_t IndexableMessageInfo.bcc.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t IndexableMessageInfo.bcc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v1 = a1;
  return result;
}

double (*IndexableMessageInfo.bcc.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.cc.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t IndexableMessageInfo.cc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

double (*IndexableMessageInfo.cc.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for IndexableMessageInfo(0);
  return sub_1A8511A9C(v1 + *(int *)(v3 + 24), a1, &qword_1E9741358);
}

uint64_t type metadata accessor for IndexableMessageInfo(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9743B98);
}

uint64_t IndexableMessageInfo.date.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexableMessageInfo(0);
  return sub_1A887BF50(a1, v1 + *(int *)(v3 + 24), &qword_1E9741358);
}

double (*IndexableMessageInfo.date.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.from.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for IndexableMessageInfo(0);
  return sub_1A8511A9C(v1 + *(int *)(v3 + 28), a1, &qword_1E9746B70);
}

uint64_t IndexableMessageInfo.from.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexableMessageInfo(0);
  return sub_1A887BF50(a1, v1 + *(int *)(v3 + 28), &qword_1E9746B70);
}

double (*IndexableMessageInfo.from.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.messageID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 32));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t IndexableMessageInfo.messageID.setter(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)(v2 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *char v5 = a1;
  v5[1] = a2;
  return result;
}

double (*IndexableMessageInfo.messageID.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.subject.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 36));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t IndexableMessageInfo.subject.setter(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)(v2 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *char v5 = a1;
  v5[1] = a2;
  return result;
}

double (*IndexableMessageInfo.subject.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.to.getter()
{
  type metadata accessor for IndexableMessageInfo(0);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t IndexableMessageInfo.to.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for IndexableMessageInfo(0) + 40);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

double (*IndexableMessageInfo.to.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.priority.getter()
{
  uint64_t v1 = type metadata accessor for IndexableMessageInfo(0);
  return *(unsigned __int8 *)(v0 + *(int *)(v1 + 44)) | (*(unsigned __int8 *)(v0 + *(int *)(v1 + 44) + 1) << 8);
}

uint64_t IndexableMessageInfo.priority.setter(__int16 a1)
{
  uint64_t result = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v4 = (unsigned char *)(v1 + *(int *)(result + 44));
  *uint64_t v4 = a1;
  v4[1] = HIBYTE(a1) & 1;
  return result;
}

double (*IndexableMessageInfo.priority.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.hasDistributionListInTo.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 48));
}

uint64_t IndexableMessageInfo.hasDistributionListInTo.setter(char a1)
{
  uint64_t result = type metadata accessor for IndexableMessageInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

double (*IndexableMessageInfo.hasDistributionListInTo.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.hasDistributionListInCC.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 52));
}

uint64_t IndexableMessageInfo.hasDistributionListInCC.setter(char a1)
{
  uint64_t result = type metadata accessor for IndexableMessageInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

double (*IndexableMessageInfo.hasDistributionListInCC.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.isAutoReplied.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 56));
}

uint64_t IndexableMessageInfo.isAutoReplied.setter(char a1)
{
  uint64_t result = type metadata accessor for IndexableMessageInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

double (*IndexableMessageInfo.isAutoReplied.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.content.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 60);
  uint64_t v2 = *(void *)v1;
  sub_1A88D1B58(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  return v2;
}

uint64_t sub_1A88D1B58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return OUTLINED_FUNCTION_4_24();
  }
  return result;
}

uint64_t IndexableMessageInfo.content.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = v3 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 60);
  uint64_t result = sub_1A88D1BC4(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a2;
  *(unsigned char *)(v7 + 16) = a3;
  return result;
}

uint64_t sub_1A88D1BC4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1A8759C20();
  }
  return result;
}

double (*IndexableMessageInfo.content.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.attachments.getter()
{
  type metadata accessor for IndexableMessageInfo(0);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t IndexableMessageInfo.attachments.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for IndexableMessageInfo(0) + 64);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

double (*IndexableMessageInfo.attachments.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.init(bcc:cc:date:from:messageID:subject:to:priority:hasDistributionListInTo:hasDistributionListInCC:isAutoReplied:content:attachments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11, char a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v21 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v22 = (uint64_t)a9 + v21[6];
  uint64_t v23 = sub_1A8A74C38();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = (_OWORD *)((char *)a9 + v21[7]);
  v24[4] = 0u;
  v24[5] = 0u;
  v24[2] = 0u;
  v24[3] = 0u;
  *uint64_t v24 = 0u;
  v24[1] = 0u;
  uint64_t v25 = (void *)((char *)a9 + v21[8]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = (void *)((char *)a9 + v21[9]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v27 = (char *)a9 + v21[11];
  *(_WORD *)uint64_t v27 = 256;
  uint64_t v28 = (char *)a9 + v21[15];
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 1) = 0;
  v28[16] = -1;
  *a9 = a1;
  a9[1] = a2;
  sub_1A887BF50(a3, v22, &qword_1E9741358);
  sub_1A887BF50(a4, (uint64_t)v24, &qword_1E9746B70);
  swift_bridgeObjectRelease();
  *uint64_t v25 = a5;
  v25[1] = a6;
  swift_bridgeObjectRelease();
  *uint64_t v26 = a7;
  v26[1] = a8;
  *(void *)((char *)a9 + v21[10]) = a10;
  *uint64_t v27 = a11;
  v27[1] = a12 & 1;
  *((unsigned char *)a9 + v21[12]) = a13;
  *((unsigned char *)a9 + v21[13]) = a14;
  *((unsigned char *)a9 + v21[14]) = a15;
  uint64_t result = sub_1A88D1BC4(*(void *)v28, *((void *)v28 + 1), v28[16]);
  *(void *)uint64_t v28 = a16;
  *((void *)v28 + 1) = a17;
  v28[16] = a18;
  *(void *)((char *)a9 + v21[16]) = a19;
  return result;
}

uint64_t IndexableMessageInfo.Content.data.getter()
{
  uint64_t v0 = sub_1A8A765E8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8A765C8();
  uint64_t v4 = sub_1A8A76568();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t static IndexableMessageInfo.Content.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1A88D46CC(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

uint64_t sub_1A88D1FEC(uint64_t a1, uint64_t a2)
{
  return sub_1A88D46CC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t IndexableMessageInfo.Content.byteCount.getter(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    return sub_1A8A76848();
  }
  if ((a2 & 0x2000000000000000) != 0) {
    return HIBYTE(a2) & 0xF;
  }
  return a1 & 0xFFFFFFFFFFFFLL;
}

uint64_t IndexableMessageInfo.Attachment.mediaType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A88C24DC(v1, a1);
}

uint64_t IndexableMessageInfo.Attachment.mediaType.setter(uint64_t a1)
{
  return sub_1A88C2540(a1, v1);
}

double (*IndexableMessageInfo.Attachment.mediaType.modify())(void)
{
  return nullsub_1;
}

uint64_t IndexableMessageInfo.Attachment.filename.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t IndexableMessageInfo.Attachment.filename.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

double (*IndexableMessageInfo.Attachment.filename.modify())(void)
{
  return nullsub_1;
}

uint64_t static IndexableMessageInfo.Attachment.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1A88BFB40(a1, (uint64_t)v8);
  sub_1A88BFB40(a2, (uint64_t)v7);
  if (_s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v8, (uint64_t)v7))
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a2 + 48);
    if (v4)
    {
      if (v5 && (*(void *)(a1 + 40) == *(void *)(a2 + 40) && v4 == v5 || (sub_1A8A78588() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1A88D2174(uint64_t a1, uint64_t a2)
{
  sub_1A88BFB40(a1, (uint64_t)v9);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  sub_1A88BFB40(a2, (uint64_t)v10);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (_s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v10))
  {
    if (v4)
    {
      if (v6 && (v5 == v7 && v4 == v6 || (sub_1A8A78588() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t IndexableMessageInfo.init(message:maximumTextCount:cache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740D78);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  UErrorCode v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v36 = *((void *)v13 - 1);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v35 = (uint64_t)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v34 = (uint64_t)&v34 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  BOOL v20 = (char *)&v34 - v19;
  uint64_t v21 = (char *)&v34 + *(int *)(v18 + 24) - v19;
  uint64_t v22 = sub_1A8A74C38();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v37 = v21;
  v23(v21, 1, 1, v22);
  uint64_t v24 = &v20[v13[7]];
  *((_OWORD *)v24 + 4) = 0u;
  *((_OWORD *)v24 + 5) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  *((_OWORD *)v24 + 3) = 0u;
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  uint64_t v25 = &v20[v13[8]];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  uint64_t v26 = &v20[v13[9]];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  uint64_t v38 = v26;
  *(_WORD *)&v20[v13[11]] = 256;
  uint64_t v27 = &v20[v13[15]];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v27[16] = -1;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  sub_1A88E1D74(a1, (uint64_t (*)(void))sub_1A88D5000, (uint64_t)v40, (uint64_t)v12);
  uint64_t v28 = v36;
  sub_1A88D51A8(a1, type metadata accessor for Message);
  swift_release();
  sub_1A8529F8C((uint64_t)v12, (uint64_t)v10, &qword_1E9740D78);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v10, 1, v13) == 1)
  {
    sub_1A8511B00((uint64_t)v10, &qword_1E9740D78);
    sub_1A8511B00((uint64_t)v37, &qword_1E9741358);
    sub_1A88D507C(*(void *)v24, *((void *)v24 + 1), *((void *)v24 + 2), *((void *)v24 + 3));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A88D1BC4(*(void *)v27, *((void *)v27 + 1), v27[16]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v28 + 56))(v39, 1, 1, v13);
  }
  else
  {
    uint64_t v30 = v34;
    sub_1A88D50E0((uint64_t)v10, v34);
    uint64_t v31 = v30;
    uint64_t v32 = v35;
    sub_1A88D50E0(v31, v35);
    sub_1A8511B00((uint64_t)v37, &qword_1E9741358);
    sub_1A88D507C(*(void *)v24, *((void *)v24 + 1), *((void *)v24 + 2), *((void *)v24 + 3));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A88D1BC4(*(void *)v27, *((void *)v27 + 1), v27[16]);
    sub_1A88D50E0(v32, (uint64_t)v20);
    uint64_t v33 = v39;
    sub_1A88D5144((uint64_t)v20, v39);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v28 + 56))(v33, 0, 1, v13);
    return sub_1A88D51A8((uint64_t)v20, type metadata accessor for IndexableMessageInfo);
  }
}

uint64_t sub_1A88D2628@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v87 = a5;
  uint64_t v88 = a6;
  uint64_t v83 = a3;
  uint64_t v84 = a4;
  char v85 = (char *)a1;
  long long v86 = a2;
  uint64_t v81 = a7;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexableMessageInfo.InfoAndListID(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  v90 = (char **)((char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v80 = *((void *)v13 - 1);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v75 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v75 - v17;
  uint64_t v19 = (char *)&v75 + *(int *)(v16 + 24) - v17;
  uint64_t v20 = sub_1A8A74C38();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  long long v82 = v19;
  v21(v19, 1, 1, v20);
  uint64_t v22 = (uint64_t *)&v18[v13[7]];
  memset(v94, 0, 96);
  sub_1A8529F8C((uint64_t)v94, (uint64_t)v22, &qword_1E9746B70);
  uint64_t v23 = &v18[v13[8]];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  long long v77 = v23;
  uint64_t v24 = &v18[v13[9]];
  *(void *)uint64_t v24 = 0;
  *((void *)v24 + 1) = 0;
  long long v78 = v24;
  *(_WORD *)&v18[v13[11]] = 256;
  v89 = v13;
  uint64_t v25 = &v18[v13[15]];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  long long v79 = v25;
  v25[16] = -1;
  v21(v9, 1, 1, v20);
  uint64_t v26 = v90;
  IndexableMessageInfo.init(bcc:cc:date:from:messageID:subject:to:priority:hasDistributionListInTo:hasDistributionListInCC:isAutoReplied:content:attachments:)(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], (uint64_t)v9, (uint64_t)v94, 0, 0, 0, 0, v90, MEMORY[0x1E4FBC860], 0, 1, 0, 0, 0, 0, 0, 255, MEMORY[0x1E4FBC860]);
  uint64_t v76 = *(int *)(v11 + 28);
  *(void *)((char *)v26 + v76) = MEMORY[0x1E4FBC870];
  char v93 = 0;
  uint64_t v28 = (uint64_t)v85;
  uint64_t v27 = v86;
  uint64_t v29 = v83;
  uint64_t v30 = v84;
  unint64_t v31 = sub_1A88E9574(0, (uint64_t)v85, (uint64_t)v86, v83, v84);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  v92[2] = v26;
  v92[3] = v87;
  v92[4] = v88;
  v91[2] = &v93;
  v91[3] = v26;
  v91[4] = v88;
  sub_1A88C5A44(3, (uint64_t (*)(void *))sub_1A88C9F38, v32, (uint64_t (*)(_OWORD *))sub_1A88D695C, (uint64_t)v92, (uint64_t)sub_1A88D6998, (uint64_t)v91, v28, (uint64_t)v27, v29, v30);
  swift_release();
  if (v93 == 1)
  {
    char v85 = v18;
    long long v86 = v22;
    uint64_t v33 = v89;
    uint64_t v34 = *(void *)((char *)v26 + v89[10]);
    uint64_t v35 = *(void *)(v34 + 16);
    uint64_t v36 = v76;
    if (v35)
    {
      uint64_t v87 = v34 + 32;
      uint64_t v37 = *(void *)((char *)v26 + v76);
      uint64_t v38 = v37 + 56;
      uint64_t v84 = v34;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (uint64_t i = 0; i != v35; ++i)
      {
        if (*(void *)(v37 + 16))
        {
          uint64_t v40 = v87 + 96 * i;
          uint64_t v42 = *(void *)(v40 + 16);
          uint64_t v41 = *(void *)(v40 + 24);
          sub_1A8A78738();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8A762A8();
          uint64_t v43 = sub_1A8A787C8();
          uint64_t v44 = -1 << *(unsigned char *)(v37 + 32);
          unint64_t v45 = v43 & ~v44;
          if ((*(void *)(v38 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45))
          {
            uint64_t v46 = *(void *)(v37 + 48);
            uint64_t v47 = (void *)(v46 + 16 * v45);
            BOOL v48 = *v47 == v42 && v47[1] == v41;
            if (v48 || (sub_1A8A78588() & 1) != 0)
            {
LABEL_20:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v33 = v89;
              uint64_t v26 = v90;
              uint64_t v36 = v76;
              swift_bridgeObjectRelease();
              *((unsigned char *)v26 + v33[12]) = 1;
              goto LABEL_21;
            }
            uint64_t v49 = ~v44;
            while (1)
            {
              unint64_t v45 = (v45 + 1) & v49;
              if (((*(void *)(v38 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
                break;
              }
              uint64_t v50 = (void *)(v46 + 16 * v45);
              BOOL v51 = *v50 == v42 && v50[1] == v41;
              if (v51 || (sub_1A8A78588() & 1) != 0) {
                goto LABEL_20;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v33 = v89;
      uint64_t v26 = v90;
      uint64_t v36 = v76;
    }
LABEL_21:
    uint64_t v52 = v26[1];
    uint64_t v53 = *(void *)(v52 + 16);
    if (v53)
    {
      uint64_t v87 = v52 + 32;
      uint64_t v54 = *(void *)((char *)v26 + v36);
      uint64_t v55 = v54 + 56;
      uint64_t v84 = v52;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (uint64_t j = 0; j != v53; ++j)
      {
        if (*(void *)(v54 + 16))
        {
          uint64_t v57 = v87 + 96 * j;
          uint64_t v59 = *(void *)(v57 + 16);
          uint64_t v58 = *(void *)(v57 + 24);
          sub_1A8A78738();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8A762A8();
          uint64_t v60 = sub_1A8A787C8();
          uint64_t v61 = -1 << *(unsigned char *)(v54 + 32);
          unint64_t v62 = v60 & ~v61;
          if ((*(void *)(v55 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62))
          {
            uint64_t v63 = *(void *)(v54 + 48);
            long long v64 = (void *)(v63 + 16 * v62);
            BOOL v65 = *v64 == v59 && v64[1] == v58;
            if (v65 || (sub_1A8A78588() & 1) != 0)
            {
LABEL_39:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v70 = v80;
              uint64_t v69 = v81;
              uint64_t v33 = v89;
              uint64_t v26 = v90;
              uint64_t v71 = (uint64_t)v85;
              uint64_t v72 = (uint64_t)v75;
              unint64_t v73 = v79;
              swift_release();
              swift_bridgeObjectRelease();
              *((unsigned char *)v26 + v33[13]) = 1;
              goto LABEL_43;
            }
            uint64_t v66 = ~v61;
            while (1)
            {
              unint64_t v62 = (v62 + 1) & v66;
              if (((*(void *)(v55 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
                break;
              }
              long long v67 = (void *)(v63 + 16 * v62);
              BOOL v68 = *v67 == v59 && v67[1] == v58;
              if (v68 || (sub_1A8A78588() & 1) != 0) {
                goto LABEL_39;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v70 = v80;
      uint64_t v69 = v81;
      uint64_t v33 = v89;
      uint64_t v26 = v90;
    }
    else
    {
      swift_release();
      uint64_t v70 = v80;
      uint64_t v69 = v81;
    }
    uint64_t v71 = (uint64_t)v85;
    uint64_t v72 = (uint64_t)v75;
    unint64_t v73 = v79;
LABEL_43:
    sub_1A88D5144((uint64_t)v26, v72);
    sub_1A8511B00((uint64_t)v82, &qword_1E9741358);
    sub_1A88D507C(*v86, v86[1], v86[2], v86[3]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A88D1BC4(*(void *)v73, *((void *)v73 + 1), v73[16]);
    sub_1A88D50E0(v72, v71);
    sub_1A88D51A8((uint64_t)v26, type metadata accessor for IndexableMessageInfo.InfoAndListID);
    sub_1A88D5144(v71, v69);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v70 + 56))(v69, 0, 1, v33);
    return sub_1A88D51A8(v71, type metadata accessor for IndexableMessageInfo);
  }
  else
  {
    swift_release();
    sub_1A88D51A8((uint64_t)v26, type metadata accessor for IndexableMessageInfo.InfoAndListID);
    sub_1A8511B00((uint64_t)v82, &qword_1E9741358);
    sub_1A88D507C(*v22, v22[1], v22[2], v22[3]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A88D1BC4(*(void *)v79, *((void *)v79 + 1), v79[16]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v80 + 56))(v81, 1, 1, v89);
  }
}

uint64_t sub_1A88D2E78(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  if (a1 <= 1000000000)
  {
    uint64_t v6 = a1;
    uint64_t v7 = v3 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 60);
    int v8 = *(unsigned __int8 *)(v7 + 16);
    if (v8 == 255)
    {
      uint64_t v12 = v6;
    }
    else
    {
      uint64_t v10 = *(void *)v7;
      uint64_t v9 = *(void *)(v7 + 8);
      OUTLINED_FUNCTION_4_24();
      uint64_t v11 = sub_1A8A76778();
      sub_1A88D1BC4(v10, v9, v8);
      uint64_t v12 = v6 - v11;
      if (__OFSUB__(v6, v11))
      {
        __break(1u);
        goto LABEL_12;
      }
    }
    uint64_t v13 = (unsigned __int128)(v12 * (__int128)5) >> 64;
    uint64_t v14 = 5 * v12;
    if (v13 != v14 >> 63)
    {
      __break(1u);
LABEL_41:
      uint64_t result = (uint64_t)sub_1A8901FC8(0, *(void *)(a3 + 16) + 1, 1, (char *)a3);
      a3 = result;
      goto LABEL_32;
    }
    uint64_t v6 = v14 & ~(v14 >> 63);
  }
  else
  {
    uint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
  }
  sub_1A8529F8C((uint64_t)(a2 + 21), (uint64_t)v57, &qword_1E9743B28);
  uint64_t result = sub_1A8529F8C((uint64_t)v57, (uint64_t)v62, &qword_1E9743B28);
  if (v62[16] != 2) {
    return result;
  }
  sub_1A8529F8C((uint64_t)(a2 + 12), (uint64_t)v56, &qword_1E9743B78);
  sub_1A8529F8C((uint64_t)v56, (uint64_t)v63, &qword_1E9743B78);
  if (v64)
  {
    sub_1A88C69AC((uint64_t)a2);
    swift_retain();
    sub_1A88C8024((uint64_t)v56, (uint64_t)a2, v6, (uint64_t *)a3, (uint64_t)v50);
    goto LABEL_20;
  }
LABEL_12:
  uint64_t v16 = *a2;
  sub_1A88C69AC((uint64_t)a2);
  swift_retain();
  sub_1A88C69AC((uint64_t)a2);
  swift_retain();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v16, MEMORY[0x1E4FBC860]) & 1) == 0)
  {
    swift_release();
    sub_1A88C9C34((uint64_t)a2);
    sub_1A88C9C34((uint64_t)a2);
    swift_release();
    sub_1A88C9678((uint64_t)v58);
    sub_1A8529F8C((uint64_t)v58, (uint64_t)v50, &qword_1E9743B20);
    goto LABEL_21;
  }
  unint64_t v18 = sub_1A88EEEF8((unint64_t)"text/plain", (uint64_t)"", 0);
  long long v21 = 0uLL;
  if (v20)
  {
    uint64_t v22 = v20;
    sub_1A88DF9BC(v18, v19, (uint64_t)v51);
    sub_1A8529F8C((uint64_t)v51, (uint64_t)v54, &qword_1E9743B70);
    uint64_t v23 = v55;
    if (v55 <= 0xFDuLL)
    {
      long long v44 = v54[1];
      long long v45 = v54[0];
      *(void *)&v58[0] = v17;
      sub_1A88EBA30(v22, (char **)v58);
      swift_bridgeObjectRelease();
      long long v25 = v44;
      long long v21 = v45;
      uint64_t v24 = *(void *)&v58[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      long long v25 = 0uLL;
      long long v21 = 0uLL;
    }
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    long long v25 = 0uLL;
  }
  v59[0] = v21;
  v59[1] = v25;
  uint64_t v60 = v23;
  uint64_t v61 = v24;
  sub_1A88C8024((uint64_t)v59, (uint64_t)a2, v6, (uint64_t *)a3, (uint64_t)v50);
  swift_bridgeObjectRelease();
  sub_1A88C9C34((uint64_t)a2);
  swift_release();
LABEL_20:
  sub_1A88C9C34((uint64_t)a2);
  swift_release();
LABEL_21:
  sub_1A8529F8C((uint64_t)v50, (uint64_t)v48, &qword_1E9743B20);
  sub_1A8529F8C((uint64_t)v48, (uint64_t)v49, &qword_1E9743B20);
  uint64_t result = sub_1A88C9F60((uint64_t)v49);
  if (result == 1) {
    return result;
  }
  sub_1A8529F8C((uint64_t)v48, (uint64_t)v46, &qword_1E9743B20);
  uint64_t v26 = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v27 = v3 + *(int *)(v26 + 60);
  uint64_t v29 = *(void *)v27;
  uint64_t v28 = *(void *)(v27 + 8);
  int v30 = *(unsigned __int8 *)(v27 + 16);
  sub_1A88C9650(v46, v47);
  int v31 = sub_1A88C9120((uint64_t)v47);
  if (!v31)
  {
    uint64_t result = sub_1A88C912C((uint64_t)v47);
    uint64_t v34 = *(void *)(result + 8);
    if (v30 == 255)
    {
      *(void *)uint64_t v27 = *(void *)result;
      *(void *)(v27 + 8) = v34;
      *(unsigned char *)(v27 + 16) = 0;
    }
    else if (v30)
    {
      return sub_1A88C9F78((uint64_t)v48);
    }
    else
    {
      *(void *)&v58[0] = v29;
      *((void *)&v58[0] + 1) = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      sub_1A88C9F78((uint64_t)v48);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1A88D1BC4(v29, v28, v30);
      uint64_t v35 = *((void *)&v58[0] + 1);
      *(void *)uint64_t v27 = *(void *)&v58[0];
      *(void *)(v27 + 8) = v35;
      *(unsigned char *)(v27 + 16) = 0;
    }
    return result;
  }
  if (v31 == 1)
  {
    uint64_t result = sub_1A88C912C((uint64_t)v47);
    uint64_t v33 = *(void *)result;
    uint64_t v32 = *(void *)(result + 8);
    if (v30 != 255)
    {
      if (v30)
      {
        *(void *)&v58[0] = v29;
        *((void *)&v58[0] + 1) = v28;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A767E8();
        sub_1A88C9F78((uint64_t)v48);
        uint64_t result = sub_1A88D1BC4(v29, v28, v30);
        uint64_t v43 = *((void *)&v58[0] + 1);
        *(void *)uint64_t v27 = *(void *)&v58[0];
        *(void *)(v27 + 8) = v43;
        goto LABEL_37;
      }
      uint64_t result = sub_1A88D1BC4(v29, v28, v30);
    }
    *(void *)uint64_t v27 = v33;
    *(void *)(v27 + 8) = v32;
LABEL_37:
    *(unsigned char *)(v27 + 16) = 1;
    return result;
  }
  uint64_t v36 = (_OWORD *)sub_1A88C912C((uint64_t)v47);
  v58[4] = v36[4];
  v58[5] = v36[5];
  v58[6] = v36[6];
  v58[7] = v36[7];
  v58[0] = *v36;
  v58[1] = v36[1];
  v58[2] = v36[2];
  v58[3] = v36[3];
  sub_1A88D6A28((uint64_t)v58, (uint64_t)v52);
  sub_1A88C9F78((uint64_t)v48);
  uint64_t v6 = *(int *)(v26 + 64);
  a3 = *(void *)(v3 + v6);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_41;
  }
LABEL_32:
  unint64_t v38 = *(void *)(a3 + 16);
  unint64_t v37 = *(void *)(a3 + 24);
  if (v38 >= v37 >> 1)
  {
    uint64_t result = (uint64_t)sub_1A8901FC8((char *)(v37 > 1), v38 + 1, 1, (char *)a3);
    a3 = result;
  }
  *(void *)(a3 + 16) = v38 + 1;
  unint64_t v39 = a3 + 56 * v38;
  long long v40 = v52[0];
  long long v41 = v52[1];
  long long v42 = v52[2];
  *(void *)(v39 + 80) = v53;
  *(_OWORD *)(v39 + 48) = v41;
  *(_OWORD *)(v39 + 64) = v42;
  *(_OWORD *)(v39 + 32) = v40;
  *(void *)(v3 + v6) = a3;
  return result;
}

uint64_t sub_1A88D33F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, uint64_t *a8)
{
  *a6 = 1;
  uint64_t result = sub_1A88C69F8(a1, (uint64_t)v15);
  if (((1 << (v16 >> 59)) & 0x1343F1) == 0)
  {
    v16 &= 0x7FFFFFFFFFFFFFFuLL;
    swift_retain();
    sub_1A88D69A4(a1);
    sub_1A88CF60C(a1, a8, (uint64_t)v11);
    uint64_t result = sub_1A8529F8C((uint64_t)v11, (uint64_t)v12, &qword_1E9746BB0);
    if (v13 != 255)
    {
      sub_1A88CE49C(v12, (uint64_t)v14);
      sub_1A88D34DC(v14);
      return sub_1A88D6AD4((uint64_t)v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A88D6A00);
    }
  }
  return result;
}

uint64_t sub_1A88D34DC(long long *a1)
{
  sub_1A88CE49C(a1, (uint64_t)v63);
  uint64_t v60 = v64;
  uint64_t v58 = v65;
  uint64_t v59 = v66;
  uint64_t v2 = sub_1A8A74C38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v49 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t result = sub_1A88CE49C(a1, (uint64_t)v67);
  switch(v70)
  {
    case 1:
      int v19 = LOBYTE(v67[0]);
      uint64_t result = type metadata accessor for IndexableMessageInfo(0);
      uint64_t v20 = *(int *)(result + 56);
      if (v19) {
        *((unsigned char *)v61 + v20) = 1;
      }
      else {
        *((unsigned char *)v61 + v20) = 0;
      }
      break;
    case 2:
      uint64_t v21 = *(void *)&v67[0];
      uint64_t v22 = v61;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v22 = v21;
      break;
    case 3:
      uint64_t v23 = *(void *)&v67[0];
      uint64_t v24 = (uint64_t)v61;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v24 + 8) = v23;
      break;
    case 8:
      uint64_t result = sub_1A8529F8C((uint64_t)v67, (uint64_t)v62, &qword_1E9743BB0);
      break;
    case 10:
      long long v25 = v67[0];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v60 = v25;
      sub_1A88D97D8(v25, *((uint64_t *)&v25 + 1), v12);
      sub_1A88D6AD4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A88CF184);
      uint64_t v26 = v3;
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
      if (v27(v12, 1, v2) == 1)
      {
        sub_1A88D8198(v60, *((uint64_t *)&v25 + 1), v15);
        sub_1A8511B00((uint64_t)v12, &qword_1E9741358);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v15, v12, v2);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v15, 0, 1, v2);
      }
      uint64_t v46 = (uint64_t)v61;
      sub_1A8511A9C((uint64_t)v15, (uint64_t)v9, &qword_1E9741358);
      uint64_t v47 = 1;
      if (v27(v9, 1, v2) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v5, v9, v2);
        sub_1A8A74B58();
        sub_1A8A74B48();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v2);
        uint64_t v47 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v17, v47, 1, v2);
      sub_1A8511B00((uint64_t)v15, &qword_1E9741358);
      uint64_t v48 = type metadata accessor for IndexableMessageInfo(0);
      uint64_t result = sub_1A887BF50((uint64_t)v17, v46 + *(int *)(v48 + 24), &qword_1E9741358);
      break;
    case 11:
      long long v57 = v67[0];
      long long v56 = v67[1];
      long long v55 = v67[2];
      long long v54 = v67[3];
      long long v53 = v67[4];
      uint64_t v28 = v68;
      uint64_t v52 = v69;
      uint64_t v29 = (char *)v61 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 28);
      uint64_t v61 = *(void **)v29;
      uint64_t v51 = *((void *)v29 + 1);
      uint64_t v30 = *((void *)v29 + 3);
      uint64_t v50 = *((void *)v29 + 2);
      long long v49 = *((_OWORD *)v29 + 4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t result = sub_1A88D507C((uint64_t)v61, v51, v50, v30);
      long long v31 = v56;
      *(_OWORD *)uint64_t v29 = v57;
      *((_OWORD *)v29 + 1) = v31;
      long long v32 = v54;
      *((_OWORD *)v29 + 2) = v55;
      *((_OWORD *)v29 + 3) = v32;
      *((_OWORD *)v29 + 4) = v53;
      uint64_t v33 = v52;
      *((void *)v29 + 10) = v28;
      *((void *)v29 + 11) = v33;
      break;
    case 12:
      long long v34 = v67[0];
      type metadata accessor for IndexableMessageInfo.InfoAndListID(0);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88D3C00(v62, v34, *((uint64_t *)&v34 + 1));
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 13:
      long long v35 = v67[0];
      uint64_t v36 = (_OWORD *)((char *)v61 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 32));
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v36 = v35;
      break;
    case 15:
      char v37 = v67[0];
      uint64_t result = type metadata accessor for IndexableMessageInfo(0);
      unint64_t v38 = (char *)v61 + *(int *)(result + 44);
      *unint64_t v38 = v37;
      v38[1] = 0;
      break;
    case 18:
      sub_1A88D6AD4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A88CF008);
      uint64_t v39 = sub_1A88FC104();
      uint64_t v41 = v40;
      long long v42 = (void *)((char *)v61 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 36));
      uint64_t result = swift_bridgeObjectRelease();
      *long long v42 = v39;
      v42[1] = v41;
      break;
    case 19:
      uint64_t v43 = *(void *)&v67[0];
      uint64_t v44 = *(int *)(type metadata accessor for IndexableMessageInfo(0) + 40);
      uint64_t v45 = (uint64_t)v61;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v45 + v44) = v43;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88D3C00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1A8A787C8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A8A78588() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A8A78588() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88D40B0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1A88D3DC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E300);
  uint64_t v3 = sub_1A8A77D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1A8A78738();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A762A8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1A8A787C8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A88D40B0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1A88D3DC0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1A88D425C();
      goto LABEL_22;
    }
    sub_1A88D4410();
  }
  uint64_t v11 = *v4;
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A8A787C8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1A8A78588(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1A8A78698();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1A8A78588();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1A88D425C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E300);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A77D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A88D4410()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E300);
  uint64_t v3 = sub_1A8A77D58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1A8A78738();
    swift_bridgeObjectRetain_n();
    sub_1A8A762A8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A8A787C8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A88D46CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return sub_1A8A78588();
  }
}

uint64_t _s9IMAP2MIME20IndexableMessageInfoV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1A8A74C38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97413B0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
  MEMORY[0x1F4188790](v11 - 8);
  int64_t v13 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  int64_t v16 = (char *)&v98 - v15;
  MEMORY[0x1F4188790](v17);
  BOOL v19 = (char *)&v98 - v18;
  if ((sub_1A88BCBCC(*a1, *a2) & 1) == 0 || (sub_1A88BCBCC(a1[1], a2[1]) & 1) == 0) {
    goto LABEL_20;
  }
  v111 = v7;
  uint64_t v20 = v5;
  uint64_t v21 = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v22 = *(int *)(v21 + 24);
  v113 = a1;
  sub_1A8511A9C((uint64_t)a1 + v22, (uint64_t)v19, &qword_1E9741358);
  v112 = (int *)v21;
  uint64_t v23 = *(int *)(v21 + 24);
  uint64_t v24 = v20;
  v114 = a2;
  sub_1A8511A9C((uint64_t)a2 + v23, (uint64_t)v16, &qword_1E9741358);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1A8511A9C((uint64_t)v19, (uint64_t)v10, &qword_1E9741358);
  sub_1A8511A9C((uint64_t)v16, v25, &qword_1E9741358);
  unint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v26((uint64_t)v10, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v16, &qword_1E9741358);
    sub_1A8511B00((uint64_t)v19, &qword_1E9741358);
    if (v26(v25, 1, v4) == 1)
    {
      sub_1A8511B00((uint64_t)v10, &qword_1E9741358);
      goto LABEL_10;
    }
LABEL_8:
    sub_1A8511B00((uint64_t)v10, &qword_1E97413B0);
    goto LABEL_20;
  }
  sub_1A8511A9C((uint64_t)v10, (uint64_t)v13, &qword_1E9741358);
  if (v26(v25, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v16, &qword_1E9741358);
    sub_1A8511B00((uint64_t)v19, &qword_1E9741358);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v4);
    goto LABEL_8;
  }
  BOOL v27 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 32);
  uint64_t v28 = v111;
  v27(v111, v25, v4);
  sub_1A88D6C60();
  char v29 = sub_1A8A76498();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  v30(v28, v4);
  sub_1A8511B00((uint64_t)v16, &qword_1E9741358);
  sub_1A8511B00((uint64_t)v19, &qword_1E9741358);
  v30(v13, v4);
  sub_1A8511B00((uint64_t)v10, &qword_1E9741358);
  if ((v29 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_10:
  long long v31 = v112;
  uint64_t v32 = v112[7];
  uint64_t v33 = v113;
  uint64_t v34 = *(uint64_t *)((char *)v113 + v32);
  uint64_t v35 = *(uint64_t *)((char *)v113 + v32 + 8);
  uint64_t v36 = *(uint64_t *)((char *)v113 + v32 + 16);
  uint64_t v37 = *(uint64_t *)((char *)v113 + v32 + 24);
  unint64_t v39 = *(uint64_t *)((char *)v113 + v32 + 32);
  unint64_t v38 = *(uint64_t *)((char *)v113 + v32 + 40);
  uint64_t v41 = *(uint64_t *)((char *)v113 + v32 + 48);
  uint64_t v40 = *(uint64_t *)((char *)v113 + v32 + 56);
  uint64_t v42 = *(uint64_t *)((char *)v113 + v32 + 64);
  uint64_t v43 = *(uint64_t *)((char *)v113 + v32 + 72);
  uint64_t v45 = *(uint64_t *)((char *)v113 + v32 + 80);
  uint64_t v44 = *(uint64_t *)((char *)v113 + v32 + 88);
  uint64_t v46 = v114;
  uint64_t v47 = (uint64_t *)((char *)v114 + v32);
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  uint64_t v50 = v47[2];
  uint64_t v51 = v47[3];
  unint64_t v52 = v47[4];
  unint64_t v53 = v47[5];
  uint64_t v54 = v47[6];
  uint64_t v55 = v47[7];
  uint64_t v56 = v47[8];
  uint64_t v57 = v47[9];
  uint64_t v59 = v47[10];
  uint64_t v58 = v47[11];
  if (!v37)
  {
    if (!v51)
    {
LABEL_28:
      uint64_t v75 = v31[8];
      uint64_t v76 = (uint64_t *)((char *)v33 + v75);
      uint64_t v77 = *(uint64_t *)((char *)v33 + v75 + 8);
      long long v78 = (uint64_t *)((char *)v46 + v75);
      uint64_t v79 = v78[1];
      if (v77)
      {
        if (!v79) {
          goto LABEL_20;
        }
        if (*v76 != *v78 || v77 != v79)
        {
          char v80 = sub_1A8A78588();
          char v65 = 0;
          if ((v80 & 1) == 0) {
            return v65 & 1;
          }
        }
      }
      else if (v79)
      {
        goto LABEL_20;
      }
      uint64_t v81 = v31[9];
      long long v82 = (uint64_t *)((char *)v33 + v81);
      uint64_t v83 = *(uint64_t *)((char *)v33 + v81 + 8);
      uint64_t v84 = (uint64_t *)((char *)v46 + v81);
      uint64_t v85 = v84[1];
      if (v83)
      {
        if (!v85) {
          goto LABEL_20;
        }
        if (*v82 != *v84 || v83 != v85)
        {
          char v86 = sub_1A8A78588();
          char v65 = 0;
          if ((v86 & 1) == 0) {
            return v65 & 1;
          }
        }
      }
      else if (v85)
      {
        goto LABEL_20;
      }
      if (sub_1A88BCBCC(*(uint64_t *)((char *)v33 + v31[10]), *(uint64_t *)((char *)v46 + v31[10])))
      {
        uint64_t v87 = v31[11];
        uint64_t v88 = (unsigned __int8 *)v33 + v87;
        char v89 = *((unsigned char *)v33 + v87 + 1);
        v90 = (unsigned __int8 *)v46 + v87;
        int v91 = *((unsigned __int8 *)v46 + v87 + 1);
        if (v89)
        {
          if (!v91) {
            goto LABEL_20;
          }
        }
        else
        {
          if (*v88 != *v90) {
            LOBYTE(v91) = 1;
          }
          if (v91) {
            goto LABEL_20;
          }
        }
        if (*((unsigned __int8 *)v33 + v31[12]) != *((unsigned __int8 *)v46 + v31[12])
          || *((unsigned __int8 *)v33 + v31[13]) != *((unsigned __int8 *)v46 + v31[13])
          || *((unsigned __int8 *)v33 + v31[14]) != *((unsigned __int8 *)v46 + v31[14]))
        {
          goto LABEL_20;
        }
        uint64_t v92 = v31[15];
        char v93 = (uint64_t *)((char *)v33 + v92);
        int v94 = *((unsigned __int8 *)v33 + v92 + 16);
        v95 = (uint64_t *)((char *)v46 + v92);
        int v96 = *((unsigned __int8 *)v46 + v92 + 16);
        if (v94 == 255)
        {
          if (v96 == 255) {
            goto LABEL_63;
          }
        }
        else if (v96 != 255)
        {
          if (v94)
          {
            if ((v96 & 1) == 0) {
              goto LABEL_20;
            }
          }
          else if (v96)
          {
            goto LABEL_20;
          }
          uint64_t v46 = v114;
          uint64_t v33 = v113;
          long long v31 = v112;
          if (*v93 != *v95 || v93[1] != v95[1])
          {
            char v97 = sub_1A8A78588();
            char v65 = 0;
            if ((v97 & 1) == 0) {
              return v65 & 1;
            }
          }
LABEL_63:
          char v65 = sub_1A88BD034(*(uint64_t *)((char *)v33 + v31[16]), *(uint64_t *)((char *)v46 + v31[16]));
          return v65 & 1;
        }
      }
LABEL_20:
      char v65 = 0;
      return v65 & 1;
    }
LABEL_19:
    v115[0] = v34;
    v115[1] = v35;
    v115[2] = v36;
    v115[3] = v37;
    v115[4] = v39;
    v115[5] = v38;
    v115[6] = v41;
    v115[7] = v40;
    v115[8] = v42;
    v115[9] = v43;
    v115[10] = v45;
    v115[11] = v44;
    v115[12] = v48;
    v115[13] = v49;
    v115[14] = v50;
    v115[15] = v51;
    v115[16] = v52;
    v115[17] = v53;
    v115[18] = v54;
    v115[19] = v55;
    v115[20] = v56;
    v115[21] = v57;
    v115[22] = v59;
    v115[23] = v58;
    uint64_t v110 = v50;
    v111 = (char *)v55;
    uint64_t v66 = v48;
    sub_1A88D6B38(v34, v35, v36, v37);
    sub_1A88D6B38(v66, v49, v110, v51);
    sub_1A88D6B9C(v115);
    goto LABEL_20;
  }
  if (!v51) {
    goto LABEL_19;
  }
  if (!v35)
  {
    unint64_t v104 = v43;
    uint64_t v105 = v58;
    unint64_t v106 = v42;
    uint64_t v107 = v59;
    unint64_t v108 = v57;
    unint64_t v109 = v56;
    if (v49) {
      goto LABEL_20;
    }
    goto LABEL_23;
  }
  if (!v49) {
    goto LABEL_20;
  }
  unint64_t v104 = v43;
  uint64_t v105 = v58;
  unint64_t v106 = v42;
  uint64_t v107 = v59;
  unint64_t v108 = v57;
  unint64_t v109 = v56;
  if (v34 == v48 && v35 == v49) {
    goto LABEL_23;
  }
  uint64_t v110 = v50;
  unint64_t v103 = v52;
  v111 = (char *)v55;
  uint64_t v102 = v44;
  uint64_t v60 = v54;
  uint64_t v101 = v45;
  unint64_t v99 = v53;
  uint64_t v61 = v40;
  uint64_t v100 = v41;
  unint64_t v62 = v38;
  char v63 = sub_1A8A78588();
  uint64_t v50 = v110;
  unint64_t v38 = v62;
  uint64_t v41 = v100;
  unint64_t v52 = v103;
  uint64_t v40 = v61;
  unint64_t v53 = v99;
  uint64_t v45 = v101;
  uint64_t v54 = v60;
  uint64_t v44 = v102;
  uint64_t v55 = (uint64_t)v111;
  char v64 = v63;
  char v65 = 0;
  if (v64)
  {
LABEL_23:
    if (v36 != v50 || v37 != v51)
    {
      unint64_t v103 = v52;
      v111 = (char *)v55;
      uint64_t v68 = v54;
      unint64_t v69 = v53;
      uint64_t v102 = v44;
      uint64_t v70 = v40;
      uint64_t v71 = v41;
      unint64_t v72 = v38;
      char v73 = sub_1A8A78588();
      unint64_t v38 = v72;
      uint64_t v41 = v71;
      unint64_t v52 = v103;
      uint64_t v40 = v70;
      uint64_t v44 = v102;
      unint64_t v53 = v69;
      uint64_t v54 = v68;
      uint64_t v55 = (uint64_t)v111;
      char v74 = v73;
      char v65 = 0;
      if ((v74 & 1) == 0) {
        return v65 & 1;
      }
    }
    if ((sub_1A88D133C(v39, v38, v41, v40, v52, v53, v54, v55) & 1) == 0
      || (sub_1A88D133C(v106, v104, v45, v44, v109, v108, v107, v105) & 1) == 0)
    {
      goto LABEL_20;
    }
    goto LABEL_28;
  }
  return v65 & 1;
}

uint64_t sub_1A88D5000@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v11 = *(void *)(v5 + 24);
  swift_retain();
  return sub_1A88D2628(a1, a2, a3, a4, v12, v11, a5);
}

uint64_t sub_1A88D507C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A88D50E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexableMessageInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88D5144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexableMessageInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88D51A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for IndexableMessageInfo(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_1A8A74C38();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v14;
    int64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *((void *)v16 + 3);
    if (v17)
    {
      uint64_t v18 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v18;
      *((void *)v15 + 2) = *((void *)v16 + 2);
      *((void *)v15 + 3) = v17;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      uint64_t v19 = *((void *)v16 + 7);
      *((void *)v15 + 6) = *((void *)v16 + 6);
      *((void *)v15 + 7) = v19;
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      uint64_t v20 = *((void *)v16 + 11);
      *((void *)v15 + 10) = *((void *)v16 + 10);
      *((void *)v15 + 11) = v20;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      long long v21 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v21;
      long long v22 = *((_OWORD *)v16 + 5);
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      *((_OWORD *)v15 + 5) = v22;
      long long v23 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v23;
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    unint64_t v26 = (void *)((char *)v7 + v24);
    BOOL v27 = (void *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *unint64_t v26 = *v27;
    v26[1] = v28;
    char v29 = (void *)((char *)v7 + v25);
    uint64_t v30 = (void *)((char *)a2 + v25);
    uint64_t v31 = v30[1];
    *char v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a3[11];
    *(void *)((char *)v7 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(_WORD *)((char *)v7 + v32) = *(_WORD *)((char *)a2 + v32);
    uint64_t v33 = a3[13];
    *((unsigned char *)v7 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v7 + v33) = *((unsigned char *)a2 + v33);
    uint64_t v34 = a3[15];
    *((unsigned char *)v7 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    uint64_t v35 = (char *)v7 + v34;
    uint64_t v36 = (char *)a2 + v34;
    int v37 = *((unsigned __int8 *)a2 + v34 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v37 == 255)
    {
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      v35[16] = v36[16];
    }
    else
    {
      uint64_t v38 = *(void *)v36;
      uint64_t v39 = *((void *)v36 + 1);
      OUTLINED_FUNCTION_4_24();
      *(void *)uint64_t v35 = v38;
      *((void *)v35 + 1) = v39;
      v35[16] = v37 & 1;
    }
    *(void *)((char *)v7 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v7;
}

uint64_t destroy for IndexableMessageInfo(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1A8A74C38();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(a1 + a2[7] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + a2[15] + 16) != 255) {
    sub_1A8759C20();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IndexableMessageInfo(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 3);
  if (v16)
  {
    uint64_t v17 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v17;
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v16;
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    uint64_t v18 = *((void *)v15 + 7);
    *((void *)v14 + 6) = *((void *)v15 + 6);
    *((void *)v14 + 7) = v18;
    *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
    uint64_t v19 = *((void *)v15 + 11);
    *((void *)v14 + 10) = *((void *)v15 + 10);
    *((void *)v14 + 11) = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    long long v20 = *((_OWORD *)v15 + 3);
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 3) = v20;
    long long v21 = *((_OWORD *)v15 + 5);
    *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
    *((_OWORD *)v14 + 5) = v21;
    long long v22 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v22;
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)((char *)a1 + v23);
  unint64_t v26 = (void *)((char *)a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)((char *)a1 + v24);
  char v29 = (void *)((char *)a2 + v24);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(_WORD *)((char *)a1 + v31) = *(_WORD *)((char *)a2 + v31);
  uint64_t v32 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v32) = *((unsigned char *)a2 + v32);
  uint64_t v33 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  int v36 = *((unsigned __int8 *)a2 + v33 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v36 == 255)
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    unsigned char v34[16] = v35[16];
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    uint64_t v38 = *((void *)v35 + 1);
    OUTLINED_FUNCTION_4_24();
    *(void *)uint64_t v34 = v37;
    *((void *)v34 + 1) = v38;
    unsigned char v34[16] = v36 & 1;
  }
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *assignWithCopy for IndexableMessageInfo(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = *(void *)((char *)a1 + v15 + 24);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
  if (v18)
  {
    if (v19)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      uint64_t v16[2] = v17[2];
      v16[3] = v17[3];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v16[4] = v17[4];
      v16[5] = v17[5];
      v16[6] = v17[6];
      v16[7] = v17[7];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v16[8] = v17[8];
      v16[9] = v17[9];
      v16[10] = v17[10];
      v16[11] = v17[11];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A88D5D64((uint64_t)v16);
      long long v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v20;
      long long v21 = *((_OWORD *)v17 + 5);
      long long v23 = *((_OWORD *)v17 + 2);
      long long v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v21;
      *((_OWORD *)v16 + 2) = v23;
      *((_OWORD *)v16 + 3) = v22;
    }
  }
  else if (v19)
  {
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    uint64_t v16[2] = v17[2];
    v16[3] = v17[3];
    v16[4] = v17[4];
    v16[5] = v17[5];
    v16[6] = v17[6];
    v16[7] = v17[7];
    v16[8] = v17[8];
    v16[9] = v17[9];
    v16[10] = v17[10];
    v16[11] = v17[11];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    long long v24 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v24;
    long long v25 = *((_OWORD *)v17 + 2);
    long long v26 = *((_OWORD *)v17 + 3);
    long long v27 = *((_OWORD *)v17 + 5);
    *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
    *((_OWORD *)v16 + 5) = v27;
    *((_OWORD *)v16 + 2) = v25;
    *((_OWORD *)v16 + 3) = v26;
  }
  uint64_t v28 = a3[8];
  char v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *char v29 = *v30;
  v29[1] = v30[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v34 = a3[15];
  uint64_t v35 = (uint64_t)a1 + v34;
  int v36 = (char *)a2 + v34;
  int v37 = *((unsigned __int8 *)a1 + v34 + 16);
  int v38 = *((unsigned __int8 *)a2 + v34 + 16);
  if (v37 == 255)
  {
    if (v38 == 255)
    {
      long long v40 = *(_OWORD *)v36;
      *(unsigned char *)(v35 + 16) = v36[16];
      *(_OWORD *)uint64_t v35 = v40;
    }
    else
    {
      char v44 = v38 & 1;
      uint64_t v45 = *(void *)v36;
      uint64_t v46 = *((void *)v36 + 1);
      OUTLINED_FUNCTION_4_24();
      *(void *)uint64_t v35 = v45;
      *(void *)(v35 + 8) = v46;
      *(unsigned char *)(v35 + 16) = v44;
    }
  }
  else if (v38 == 255)
  {
    sub_1A88D5DB8(v35);
    char v39 = v36[16];
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *(unsigned char *)(v35 + 16) = v39;
  }
  else
  {
    char v41 = v38 & 1;
    uint64_t v42 = *(void *)v36;
    uint64_t v43 = *((void *)v36 + 1);
    OUTLINED_FUNCTION_4_24();
    *(void *)uint64_t v35 = v42;
    *(void *)(v35 + 8) = v43;
    *(unsigned char *)(v35 + 16) = v41;
    sub_1A8759C20();
  }
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A88D5D64(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88D5DB8(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for IndexableMessageInfo(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (_OWORD *)((char *)a1 + v12);
  uint64_t v15 = (_OWORD *)((char *)a2 + v12);
  long long v16 = v15[3];
  v14[2] = v15[2];
  v14[3] = v16;
  long long v17 = v15[5];
  v14[4] = v15[4];
  v14[5] = v17;
  long long v18 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v18;
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v19 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[12];
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  uint64_t v21 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  uint64_t v22 = a3[15];
  uint64_t v23 = a3[16];
  long long v24 = (char *)a1 + v22;
  long long v25 = (char *)a2 + v22;
  *(_OWORD *)long long v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  return a1;
}

void *assignWithTake for IndexableMessageInfo(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (uint64_t)a1 + v15;
  long long v17 = (char *)a2 + v15;
  if (*(void *)((char *)a1 + v15 + 24))
  {
    if (*((void *)v17 + 3))
    {
      uint64_t v18 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *((void *)v17 + 3);
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      *(void *)(v16 + 24) = v19;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
      uint64_t v20 = *((void *)v17 + 7);
      *(void *)(v16 + 48) = *((void *)v17 + 6);
      *(void *)(v16 + 56) = v20;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v16 + 64) = *((_OWORD *)v17 + 4);
      uint64_t v21 = *((void *)v17 + 11);
      *(void *)(v16 + 80) = *((void *)v17 + 10);
      *(void *)(v16 + 88) = v21;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1A88D5D64(v16);
  }
  long long v22 = *((_OWORD *)v17 + 3);
  *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
  *(_OWORD *)(v16 + 48) = v22;
  long long v23 = *((_OWORD *)v17 + 5);
  *(_OWORD *)(v16 + 64) = *((_OWORD *)v17 + 4);
  *(_OWORD *)(v16 + 80) = v23;
  long long v24 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v24;
LABEL_12:
  uint64_t v25 = a3[8];
  long long v26 = (void *)((char *)a1 + v25);
  long long v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *long long v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[12];
  *(_WORD *)((char *)a1 + a3[11]) = *(_WORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v35) = *((unsigned char *)a2 + v35);
  uint64_t v36 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  uint64_t v37 = a3[15];
  uint64_t v38 = (uint64_t)a1 + v37;
  char v39 = (char *)a2 + v37;
  if (*((unsigned __int8 *)a1 + v37 + 16) != 255)
  {
    int v40 = v39[16];
    if (v40 != 255)
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      *(unsigned char *)(v38 + 16) = v40 & 1;
      sub_1A8759C20();
      goto LABEL_17;
    }
    sub_1A88D5DB8(v38);
  }
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(unsigned char *)(v38 + 16) = v39[16];
LABEL_17:
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IndexableMessageInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88D62C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IndexableMessageInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void *sub_1A88D638C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A88D6438()
{
  sub_1A88D6510();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A88D6510()
{
  if (!qword_1E9741398)
  {
    sub_1A8A74C38();
    unint64_t v0 = sub_1A8A77898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9741398);
    }
  }
}

uint64_t destroy for IndexableMessageInfo.Content()
{
  return sub_1A8759C20();
}

uint64_t _s9IMAP2MIME20IndexableMessageInfoV7ContentOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  OUTLINED_FUNCTION_4_24();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IndexableMessageInfo.Content(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  OUTLINED_FUNCTION_4_24();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A8759C20();
  return a1;
}

uint64_t assignWithTake for IndexableMessageInfo.Content(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A8759C20();
  return a1;
}

ValueMetadata *type metadata accessor for IndexableMessageInfo.Content()
{
  return &type metadata for IndexableMessageInfo.Content;
}

uint64_t destroy for IndexableMessageInfo.Attachment(uint64_t a1)
{
  sub_1A88BFCBC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IndexableMessageInfo.Attachment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_1A88BFB9C(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for IndexableMessageInfo.Attachment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_1A88BFB9C(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1A88BFCBC(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IndexableMessageInfo.Attachment(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1A88BFCBC(v5, v6, v7, v8, v10);
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IndexableMessageInfo.Attachment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IndexableMessageInfo.Attachment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IndexableMessageInfo.Attachment()
{
  return &type metadata for IndexableMessageInfo.Attachment;
}

uint64_t type metadata accessor for IndexableMessageInfo.InfoAndListID(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9746B98);
}

uint64_t sub_1A88D6924()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A88D695C(uint64_t *a1)
{
  sub_1A88D2E78(*(void *)(v1 + 24), a1, *(void *)(v1 + 32));
  return 2;
}

uint64_t sub_1A88D6998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A88D33F8(a1, a2, a3, a4, a5, *(unsigned char **)(v5 + 16), *(void *)(v5 + 24), *(uint64_t **)(v5 + 32));
}

uint64_t sub_1A88D69A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88D69DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a5 >> 59 == 5 || a5 >> 59 == 9) {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A88D6A00(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255) {
    return sub_1A88CF184(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
  return result;
}

uint64_t sub_1A88D6A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while (*(v6 - 2))
    {
      v6 += 4;
      if (!--v5) {
        goto LABEL_5;
      }
    }
    uint64_t v7 = *(v6 - 1);
    uint64_t v8 = *v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
LABEL_5:
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  uint64_t result = sub_1A88BFB9C(v9, v10, v11, v12, v13);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  return result;
}

uint64_t sub_1A88D6AD4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 96);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v4);
  return a1;
}

uint64_t sub_1A88D6B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t *sub_1A88D6B9C(uint64_t *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v6 = a1[12];
  uint64_t v3 = a1[14];
  uint64_t v4 = a1[15];
  sub_1A88D507C(*a1, a1[1], a1[2], a1[3]);
  sub_1A88D507C(v6, v2, v3, v4);
  return a1;
}

unint64_t sub_1A88D6C60()
{
  unint64_t result = qword_1E9741320;
  if (!qword_1E9741320)
  {
    sub_1A8A74C38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9741320);
  }
  return result;
}

void *sub_1A88D6CB8(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    a1[1] = a2[1];
    uint64_t v7 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v8 = v7[6];
    __dst = (char *)v6 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_1A8A74C38();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v14 = v7[7];
    uint64_t v15 = (char *)v6 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *((void *)v16 + 3);
    if (v17)
    {
      uint64_t v18 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v18;
      *((void *)v15 + 2) = *((void *)v16 + 2);
      *((void *)v15 + 3) = v17;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      uint64_t v19 = *((void *)v16 + 7);
      *((void *)v15 + 6) = *((void *)v16 + 6);
      *((void *)v15 + 7) = v19;
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      uint64_t v20 = *((void *)v16 + 11);
      *((void *)v15 + 10) = *((void *)v16 + 10);
      *((void *)v15 + 11) = v20;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      long long v21 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v21;
      long long v22 = *((_OWORD *)v16 + 5);
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      *((_OWORD *)v15 + 5) = v22;
      long long v23 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v23;
    }
    uint64_t v24 = v7[8];
    uint64_t v25 = (void *)((char *)v6 + v24);
    long long v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = v7[9];
    uint64_t v29 = (void *)((char *)v6 + v28);
    uint64_t v30 = (void *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    *(void *)((char *)v6 + v7[10]) = *(void *)((char *)a2 + v7[10]);
    *(_WORD *)((char *)v6 + v7[11]) = *(_WORD *)((char *)a2 + v7[11]);
    *((unsigned char *)v6 + v7[12]) = *((unsigned char *)a2 + v7[12]);
    *((unsigned char *)v6 + v7[13]) = *((unsigned char *)a2 + v7[13]);
    *((unsigned char *)v6 + v7[14]) = *((unsigned char *)a2 + v7[14]);
    uint64_t v32 = v7[15];
    uint64_t v33 = (char *)v6 + v32;
    uint64_t v34 = (char *)a2 + v32;
    int v35 = *((unsigned __int8 *)a2 + v32 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v35 == 255)
    {
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      v33[16] = v34[16];
    }
    else
    {
      uint64_t v36 = *(void *)v34;
      uint64_t v37 = *((void *)v34 + 1);
      OUTLINED_FUNCTION_4_24();
      *(void *)uint64_t v33 = v36;
      *((void *)v33 + 1) = v37;
      v33[16] = v35 & 1;
    }
    *(void *)((char *)v6 + v7[16]) = *(void *)((char *)a2 + v7[16]);
    *(void *)((char *)v6 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return v6;
}

uint64_t sub_1A88D6FCC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = sub_1A8A74C38();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  if (*(void *)(a1 + v2[7] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + v2[15] + 16) != 255) {
    sub_1A8759C20();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1A88D7138(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v7 = v6[6];
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v13 = v6[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 3);
  if (v16)
  {
    uint64_t v17 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v17;
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v16;
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    uint64_t v18 = *((void *)v15 + 7);
    *((void *)v14 + 6) = *((void *)v15 + 6);
    *((void *)v14 + 7) = v18;
    *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
    uint64_t v19 = *((void *)v15 + 11);
    *((void *)v14 + 10) = *((void *)v15 + 10);
    *((void *)v14 + 11) = v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    long long v20 = *((_OWORD *)v15 + 3);
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 3) = v20;
    long long v21 = *((_OWORD *)v15 + 5);
    *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
    *((_OWORD *)v14 + 5) = v21;
    long long v22 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v22;
  }
  uint64_t v23 = v6[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = v6[9];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(_WORD *)((char *)a1 + v6[11]) = *(_WORD *)((char *)a2 + v6[11]);
  *((unsigned char *)a1 + v6[12]) = *((unsigned char *)a2 + v6[12]);
  *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
  *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
  uint64_t v31 = v6[15];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  int v34 = *((unsigned __int8 *)a2 + v31 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v34 == 255)
  {
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
  }
  else
  {
    uint64_t v35 = *(void *)v33;
    uint64_t v36 = *((void *)v33 + 1);
    OUTLINED_FUNCTION_4_24();
    *(void *)uint64_t v32 = v35;
    *((void *)v32 + 1) = v36;
    v32[16] = v34 & 1;
  }
  *(void *)((char *)a1 + v6[16]) = *(void *)((char *)a2 + v6[16]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *sub_1A88D73F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = *(void *)((char *)a1 + v15 + 24);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
  if (v18)
  {
    if (v19)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      uint64_t v16[2] = v17[2];
      v16[3] = v17[3];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v16[4] = v17[4];
      v16[5] = v17[5];
      v16[6] = v17[6];
      v16[7] = v17[7];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      v16[8] = v17[8];
      v16[9] = v17[9];
      v16[10] = v17[10];
      v16[11] = v17[11];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A88D5D64((uint64_t)v16);
      long long v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v20;
      long long v21 = *((_OWORD *)v17 + 5);
      long long v23 = *((_OWORD *)v17 + 2);
      long long v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v21;
      *((_OWORD *)v16 + 2) = v23;
      *((_OWORD *)v16 + 3) = v22;
    }
  }
  else if (v19)
  {
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    uint64_t v16[2] = v17[2];
    v16[3] = v17[3];
    v16[4] = v17[4];
    v16[5] = v17[5];
    v16[6] = v17[6];
    v16[7] = v17[7];
    v16[8] = v17[8];
    v16[9] = v17[9];
    v16[10] = v17[10];
    v16[11] = v17[11];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    long long v24 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v24;
    long long v25 = *((_OWORD *)v17 + 2);
    long long v26 = *((_OWORD *)v17 + 3);
    long long v27 = *((_OWORD *)v17 + 5);
    *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
    *((_OWORD *)v16 + 5) = v27;
    *((_OWORD *)v16 + 2) = v25;
    *((_OWORD *)v16 + 3) = v26;
  }
  uint64_t v28 = v5[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v31 = v5[9];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_WORD *)((char *)a1 + v5[11]) = *(_WORD *)((char *)a2 + v5[11]);
  *((unsigned char *)a1 + v5[12]) = *((unsigned char *)a2 + v5[12]);
  *((unsigned char *)a1 + v5[13]) = *((unsigned char *)a2 + v5[13]);
  *((unsigned char *)a1 + v5[14]) = *((unsigned char *)a2 + v5[14]);
  uint64_t v34 = v5[15];
  uint64_t v35 = (uint64_t)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  int v37 = *((unsigned __int8 *)a1 + v34 + 16);
  int v38 = *((unsigned __int8 *)a2 + v34 + 16);
  if (v37 == 255)
  {
    if (v38 == 255)
    {
      long long v40 = *(_OWORD *)v36;
      *(unsigned char *)(v35 + 16) = v36[16];
      *(_OWORD *)uint64_t v35 = v40;
    }
    else
    {
      char v44 = v38 & 1;
      uint64_t v45 = *(void *)v36;
      uint64_t v46 = *((void *)v36 + 1);
      OUTLINED_FUNCTION_4_24();
      *(void *)uint64_t v35 = v45;
      *(void *)(v35 + 8) = v46;
      *(unsigned char *)(v35 + 16) = v44;
    }
  }
  else if (v38 == 255)
  {
    sub_1A88D5DB8(v35);
    char v39 = v36[16];
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *(unsigned char *)(v35 + 16) = v39;
  }
  else
  {
    char v41 = v38 & 1;
    uint64_t v42 = *(void *)v36;
    uint64_t v43 = *((void *)v36 + 1);
    OUTLINED_FUNCTION_4_24();
    *(void *)uint64_t v35 = v42;
    *(void *)(v35 + 8) = v43;
    *(unsigned char *)(v35 + 16) = v41;
    sub_1A8759C20();
  }
  *(void *)((char *)a1 + v5[16]) = *(void *)((char *)a2 + v5[16]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1A88D78C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A8A74C38();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[7];
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  long long v16 = v15[3];
  v14[2] = v15[2];
  v14[3] = v16;
  long long v17 = v15[5];
  v14[4] = v15[4];
  v14[5] = v17;
  long long v18 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v18;
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(_WORD *)((char *)a1 + v6[11]) = *(_WORD *)((char *)a2 + v6[11]);
  *((unsigned char *)a1 + v6[12]) = *((unsigned char *)a2 + v6[12]);
  *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
  *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
  uint64_t v19 = v6[15];
  long long v20 = (char *)a1 + v19;
  long long v21 = (char *)a2 + v19;
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  v20[16] = v21[16];
  *(void *)((char *)a1 + v6[16]) = *(void *)((char *)a2 + v6[16]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1A88D7AA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[7];
  uint64_t v16 = (uint64_t)a1 + v15;
  long long v17 = (char *)a2 + v15;
  if (*(void *)((char *)a1 + v15 + 24))
  {
    if (*((void *)v17 + 3))
    {
      uint64_t v18 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *((void *)v17 + 3);
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      *(void *)(v16 + 24) = v19;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
      uint64_t v20 = *((void *)v17 + 7);
      *(void *)(v16 + 48) = *((void *)v17 + 6);
      *(void *)(v16 + 56) = v20;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v16 + 64) = *((_OWORD *)v17 + 4);
      uint64_t v21 = *((void *)v17 + 11);
      *(void *)(v16 + 80) = *((void *)v17 + 10);
      *(void *)(v16 + 88) = v21;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1A88D5D64(v16);
  }
  long long v22 = *((_OWORD *)v17 + 3);
  *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
  *(_OWORD *)(v16 + 48) = v22;
  long long v23 = *((_OWORD *)v17 + 5);
  *(_OWORD *)(v16 + 64) = *((_OWORD *)v17 + 4);
  *(_OWORD *)(v16 + 80) = v23;
  long long v24 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v24;
LABEL_12:
  uint64_t v25 = v5[8];
  long long v26 = (void *)((char *)a1 + v25);
  long long v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *long long v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = v5[9];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
  swift_bridgeObjectRelease();
  *(_WORD *)((char *)a1 + v5[11]) = *(_WORD *)((char *)a2 + v5[11]);
  *((unsigned char *)a1 + v5[12]) = *((unsigned char *)a2 + v5[12]);
  *((unsigned char *)a1 + v5[13]) = *((unsigned char *)a2 + v5[13]);
  *((unsigned char *)a1 + v5[14]) = *((unsigned char *)a2 + v5[14]);
  uint64_t v35 = v5[15];
  uint64_t v36 = (uint64_t)a1 + v35;
  int v37 = (char *)a2 + v35;
  if (*((unsigned __int8 *)a1 + v35 + 16) != 255)
  {
    int v38 = v37[16];
    if (v38 != 255)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      *(unsigned char *)(v36 + 16) = v38 & 1;
      sub_1A8759C20();
      goto LABEL_17;
    }
    sub_1A88D5DB8(v36);
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(unsigned char *)(v36 + 16) = v37[16];
LABEL_17:
  *(void *)((char *)a1 + v5[16]) = *(void *)((char *)a2 + v5[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A88D7DEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88D7E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1A88D7EC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88D7ED4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A88D7F90()
{
  uint64_t result = type metadata accessor for IndexableMessageInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t InternetMessageDate.parse()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88D97D8(a1, a2, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A88D8198(a1, a2, a3);
    return sub_1A8511B00((uint64_t)v8, &qword_1E9741358);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a3, v8, v9);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
  }
}

uint64_t sub_1A88D8198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = sub_1A8A74C38();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v48 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  long long v17 = (char *)&v45 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = qword_1E974E1D0;
  uint64_t v54 = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = *((void *)off_1E974E310 + 2);
  if (!v21) {
    goto LABEL_17;
  }
  uint64_t v46 = v19;
  uint64_t v47 = v12;
  uint64_t v50 = a3;
  uint64_t v51 = v8;
  unint64_t v52 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  long long v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  long long v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v49 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v24 = v49 + 40;
  do
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    id v25 = sub_1A88D9CA0();
    long long v26 = (void *)sub_1A8A76538();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_setDateFormat_, v26);

    objc_msgSend(v25, sel_setLenient_, 0);
    long long v27 = (void *)sub_1A8A76538();
    id v28 = objc_msgSend(v25, sel_dateFromString_, v27);

    if (v28)
    {
      sub_1A8A74C08();

      uint64_t v29 = *v52;
      (*v52)(v10, v17, v11);
      uint64_t v30 = *v22;
      (*v22)(v10, 0, 1, v11);
      if ((*v23)(v10, 1, v11) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v46;
        v29(v46, v10, v11);
        uint64_t v32 = v50;
        v29(v50, v31, v11);
        return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v30)(v32, 0, 1, v11);
      }
    }
    else
    {

      (*v22)(v10, 1, 1, v11);
    }
    v24 += 16;
    sub_1A8511B00((uint64_t)v10, &qword_1E9741358);
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)off_1E974E310 + 2);
  a3 = v50;
  uint64_t v12 = v47;
  if (v34)
  {
    uint64_t v49 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v35 = v49 + 40;
    do
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      id v38 = sub_1A88D9CA0();
      char v39 = (void *)sub_1A8A76538();
      swift_bridgeObjectRelease();
      objc_msgSend(v38, sel_setDateFormat_, v39);

      objc_msgSend(v38, sel_setLenient_, 1);
      long long v40 = (void *)sub_1A8A76538();
      id v41 = objc_msgSend(v38, sel_dateFromString_, v40);

      if (v41)
      {
        sub_1A8A74C08();

        uint64_t v37 = (uint64_t)v51;
        uint64_t v42 = *v52;
        (*v52)(v51, v17, v11);
        uint64_t v36 = *v22;
        (*v22)((char *)v37, 0, 1, v11);
        if ((*v23)((char *)v37, 1, v11) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v43 = v48;
          v42(v48, (char *)v37, v11);
          char v44 = v50;
          v42(v50, v43, v11);
          return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v36)(v44, 0, 1, v11);
        }
      }
      else
      {

        uint64_t v36 = *v22;
        uint64_t v37 = (uint64_t)v51;
        (*v22)(v51, 1, 1, v11);
      }
      v35 += 16;
      sub_1A8511B00(v37, &qword_1E9741358);
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v36)(v50, 1, 1, v11);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a3, 1, 1, v11);
  }
}

uint64_t InternetMessageDate.init(from:calendar:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A88D880C(a2);
  uint64_t v5 = sub_1A8A74D58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  uint64_t v6 = sub_1A8A74C38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v4;
}

uint64_t sub_1A88D880C(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1A8A76D48();
  *(void *)(v2 + 16) = 80;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  sub_1A88D8938(a1, (uint64_t)&v6);
  sub_1A88D8F64(v2 + 32, &v6, 0x50uLL, &v5);
  if (v5 && *(void *)(v2 + 16) >= v5)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v3 = sub_1A8A76818();
    swift_bridgeObjectRelease_n();
    return v3;
  }
  else
  {
    uint64_t result = sub_1A8A780F8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A88D8938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741418);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v56 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A8A74E88();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A74668();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745910);
  uint64_t v10 = sub_1A8A74D48();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A8AD9270;
  uint64_t v15 = *(void (**)(unint64_t, void, uint64_t))(v11 + 104);
  v15(v14 + v13, *MEMORY[0x1E4F27C50], v10);
  v15(v14 + v13 + v12, *MEMORY[0x1E4F27C48], v10);
  v15(v14 + v13 + 2 * v12, *MEMORY[0x1E4F27C10], v10);
  v15(v14 + v13 + 3 * v12, *MEMORY[0x1E4F27BF0], v10);
  v15(v14 + v13 + 4 * v12, *MEMORY[0x1E4F27C30], v10);
  v15(v14 + v13 + 5 * v12, *MEMORY[0x1E4F27C20], v10);
  v15(v14 + v13 + 6 * v12, *MEMORY[0x1E4F27C68], v10);
  v15(v14 + v13 + 7 * v12, *MEMORY[0x1E4F27C80], v10);
  sub_1A88DA064(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1A8A74D18();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A8A74628();
  if (v17) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = result;
  }
  if (v18 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v18 > 0x7FFFFFFF)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t result = sub_1A8A74618();
  if (v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = result;
  }
  if (v20 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_44;
  }
  if (v20 > 0x7FFFFFFF)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t result = sub_1A8A745E8();
  if (v21) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = result;
  }
  if (v22 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_46;
  }
  if (v22 > 0x7FFFFFFF)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t result = sub_1A8A745D8();
  if (v23) {
    uint64_t v24 = 1;
  }
  else {
    uint64_t v24 = result;
  }
  if (v24 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_48;
  }
  if (v24 > 0x7FFFFFFF)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t result = sub_1A8A74608();
  if (v25) {
    uint64_t v26 = 1;
  }
  else {
    uint64_t v26 = result;
  }
  if (v26 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_50;
  }
  if (v26 > 0x7FFFFFFF)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  int v27 = v26 - 1;
  if (__OFSUB__(v26, 1))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t result = sub_1A8A745F8();
  uint64_t v29 = 100;
  if ((v28 & 1) == 0) {
    uint64_t v29 = result;
  }
  if (v29 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_53;
  }
  if (v29 > 0x7FFFFFFF)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  int v30 = v29 - 1900;
  if (__OFSUB__(v29, 1900))
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t result = sub_1A8A74638();
  if (v31) {
    uint64_t v32 = 1;
  }
  else {
    uint64_t v32 = result;
  }
  if (v32 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_56;
  }
  if (v32 > 0x7FFFFFFF)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  BOOL v33 = __OFSUB__(v32, 1);
  int v34 = v32 - 1;
  if (v33)
  {
LABEL_58:
    __break(1u);
    return result;
  }
  int v51 = v34;
  LODWORD(v57) = v30;
  uint64_t v35 = v56;
  sub_1A8A74658();
  uint64_t v36 = (uint64_t)v35;
  uint64_t v37 = v54;
  id v38 = v35;
  uint64_t v39 = v55;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1, v55) == 1)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v53);
    uint64_t result = sub_1A8511B00(v36, (uint64_t *)&unk_1E9741418);
    uint64_t v40 = 0;
  }
  else
  {
    id v41 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
    uint64_t v49 = a2;
    int v42 = v24;
    int v43 = v22;
    int v44 = v20;
    int v45 = v27;
    int v46 = v18;
    uint64_t v18 = (uint64_t)v50;
    v41(v50, v36, v39);
    uint64_t v40 = sub_1A8A74E58();
    uint64_t v47 = v18;
    LODWORD(v18) = v46;
    int v27 = v45;
    LODWORD(v20) = v44;
    LODWORD(v22) = v43;
    LODWORD(v24) = v42;
    a2 = v49;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v47, v39);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v9, v53);
  }
  *(_DWORD *)a2 = v18;
  *(_DWORD *)(a2 + 4) = v20;
  *(_DWORD *)(a2 + 8) = v22;
  *(_DWORD *)(a2 + 12) = v24;
  int v48 = v57;
  *(_DWORD *)(a2 + 16) = v27;
  *(_DWORD *)(a2 + 20) = v48;
  *(_DWORD *)(a2 + 24) = v51;
  *(void *)(a2 + 28) = 0xFFFFFFFF00000000;
  *(void *)(a2 + 40) = v40;
  *(void *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_1A88D8F64@<X0>(uint64_t result@<X0>, tm *a2@<X2>, size_t a3@<X1>, uint64_t *a4@<X8>)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v6 = (char *)result;
  if (qword_1E974E1C8 != -1) {
    swift_once();
  }
  uint64_t result = strftime_l(v6, a3, "%a, %d %b %Y %H:%M:%S %z", a2, (locale_t)qword_1E974E308);
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v8 = result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a2->tm_gmtoff / 60 % 60 + 100 * (a2->tm_gmtoff / 3600);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97485F0);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1A8AD8F00;
    uint64_t v10 = MEMORY[0x1E4FBC1C0];
    *(void *)(result + 56) = MEMORY[0x1E4FBC150];
    *(void *)(result + 64) = v10;
    if (v9 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (v9 <= 0x7FFFFFFF)
      {
        *(_DWORD *)(result + 32) = v9;
        int v11 = sub_1A8A75628();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v12 = v8 + v11;
        if (!__OFADD__(v8, v11)) {
          goto LABEL_12;
        }
        __break(1u);
LABEL_11:
        uint64_t v12 = 0;
LABEL_12:
        *a4 = v12;
        return result;
      }
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

locale_t sub_1A88D910C()
{
  locale_t result = newlocale(63, 0, 0);
  if (result) {
    qword_1E974E308 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A88D9140@<X0>(const char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  sub_1A8A744A8();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A74C38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  int v43 = (char *)v36 - v13;
  MEMORY[0x1F4188790](v12);
  id v41 = (char *)v36 - v14;
  if (qword_1E9743B90 != -1) {
    swift_once();
  }
  uint64_t v15 = *((void *)off_1E9743B88 + 2);
  if (!v15) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
  }
  int v42 = v11;
  v36[1] = v4;
  uint64_t v39 = a2;
  uint64_t v40 = v2;
  int v45 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  int v46 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  p_tm_gmtoff = &v57.tm_gmtoff;
  uint64_t v37 = v8;
  int v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v38 = v16;
  char v17 = (unint64_t *)(v16 + 40);
  uint64_t v18 = v41;
  while (1)
  {
    uint64_t v19 = *(v17 - 1);
    unint64_t v20 = *v17;
    MEMORY[0x1F4188790](v16);
    v36[-4] = v50;
    v36[-3] = v19;
    v36[-2] = v20;
    if ((v20 & 0x1000000000000000) != 0) {
      goto LABEL_33;
    }
    if ((v20 & 0x2000000000000000) != 0)
    {
      *(void *)uint64_t v55 = v19;
      uint64_t v56 = v20 & 0xFFFFFFFFFFFFFFLL;
      memset(&v57, 0, 36);
      uint64_t v26 = p_tm_gmtoff;
      uint64_t *p_tm_gmtoff = 0;
      v26[1] = 0;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      int v27 = strptime_l(v50, v55, &v57, 0);
      if (!v27)
      {
LABEL_20:
        uint64_t v30 = 1;
LABEL_29:
        (*v49)(v6, v30, 1, v7);
        goto LABEL_30;
      }
      char v28 = v27;
      mktime(&v57);
      uint64_t v29 = v42;
      sub_1A8A74BD8();
      if (*v28)
      {
        uint64_t v53 = v19;
        unint64_t v54 = v20;
        uint64_t v51 = 31269;
        unint64_t v52 = 0xE200000000000000;
        sub_1A88BFD94();
        if ((sub_1A8A77A68() & 1) == 0 || (sub_1A88D9A78() & 1) == 0)
        {
          (*v45)(v42, v7);
          uint64_t v30 = 1;
LABEL_25:
          uint64_t v18 = v41;
          goto LABEL_29;
        }
        (*v46)(v6, v42, v7);
      }
      else
      {
        (*v46)(v6, v29, v7);
      }
      uint64_t v30 = 0;
      goto LABEL_25;
    }
    if ((v19 & 0x1000000000000000) != 0)
    {
      memset(&v57, 0, 36);
      char v21 = p_tm_gmtoff;
      uint64_t *p_tm_gmtoff = 0;
      v21[1] = 0;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v22 = strptime_l(v50, (const char *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32), &v57, 0);
      if (v22)
      {
        char v23 = v22;
        int v44 = v36;
        uint64_t v24 = v18;
        mktime(&v57);
        char v25 = v43;
        sub_1A8A74BD8();
        if (*v23)
        {
          *(void *)uint64_t v55 = v19;
          uint64_t v56 = v20;
          uint64_t v53 = 31269;
          unint64_t v54 = 0xE200000000000000;
          sub_1A88BFD94();
          if ((sub_1A8A77A68() & 1) == 0 || (sub_1A88D9A78() & 1) == 0)
          {
            (*v45)(v43, v7);
            uint64_t v30 = 1;
LABEL_28:
            uint64_t v18 = v24;
            goto LABEL_29;
          }
          (*v46)(v6, v43, v7);
        }
        else
        {
          (*v46)(v6, v25, v7);
        }
        uint64_t v30 = 0;
        goto LABEL_28;
      }
      goto LABEL_20;
    }
LABEL_33:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v33 = v40;
    sub_1A8A77D98();
    uint64_t v40 = v33;
LABEL_30:
    swift_bridgeObjectRelease();
    if ((*v48)(v6, 1, v7) != 1) {
      break;
    }
    uint64_t v16 = sub_1A8511B00((uint64_t)v6, &qword_1E9741358);
LABEL_6:
    v17 += 2;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      a2 = v39;
      uint64_t v8 = v37;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
    }
  }
  char v31 = *v46;
  (*v46)(v18, v6, v7);
  sub_1A8A74B58();
  if (v32 <= -900000000.0)
  {
    uint64_t v16 = (*v45)(v18, v7);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = v39;
  v31(v39, v18, v7);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))*v49)(v35, 0, 1, v7);
}

uint64_t sub_1A88D97D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_8;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v5[0] = a1;
    v5[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v3 = (const char *)v5;
    return sub_1A88D9140(v3, a3);
  }
  if ((a1 & 0x1000000000000000) == 0)
  {
LABEL_8:
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
    return sub_1A8A77D98();
  }
  uint64_t v3 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  return sub_1A88D9140(v3, a3);
}

uint64_t sub_1A88D9884@<X0>(const char *a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1A8A74C38();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(&v19, 0, 36);
  v19.tm_gmtoff = 0;
  v19.tm_zone = 0;
  uint64_t v14 = strptime_l(a2, a1, &v19, 0);
  if (!v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v14;
  mktime(&v19);
  sub_1A8A74BD8();
  if (*v15)
  {
    _OWORD v18[2] = a3;
    v18[3] = a4;
    v18[0] = 31269;
    v18[1] = 0xE200000000000000;
    sub_1A88BFD94();
    if ((sub_1A8A77A68() & 1) == 0 || (sub_1A88D9A78() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_7:
      uint64_t v16 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a5, v16, 1, v10);
    }
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5, v13, v10);
  uint64_t v16 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a5, v16, 1, v10);
}

id sub_1A88D9A78()
{
  uint64_t v0 = sub_1A8A744A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8A76808();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28FE8]);
  uint64_t v5 = (void *)sub_1A8A76538();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithString_, v5);

  sub_1A8A77838();
  swift_bridgeObjectRelease();
  sub_1A8A77818();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_5;
  }
  sub_1A8A74478();
  sub_1A8A77828();
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v3, v0);
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_5;
  }
  sub_1A8A77818();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_1A8A74488();
    sub_1A8A77828();
    swift_bridgeObjectRelease();
    v11(v3, v0);
    id v14 = objc_msgSend(v6, sel_isAtEnd);
  }
  else
  {
LABEL_5:

    return 0;
  }
  return v14;
}

void sub_1A88D9C58()
{
  off_1E974E310 = &unk_1EFE905C8;
}

void sub_1A88D9C6C()
{
  off_1E9743B88 = &unk_1EFE90158;
}

uint64_t sub_1A88D9C80@<X0>(const char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A88D9884(a1, *(const char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

id sub_1A88D9CA0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741418);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A8A74CE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88DA400(0, &qword_1E9745168);
  uint64_t v7 = (void *)sub_1A8A777F8();
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_currentThread);
  id v10 = objc_msgSend(v9, sel_threadDictionary);

  id v11 = v7;
  id v12 = objc_msgSend(v10, sel_objectForKeyedSubscript_, v11);

  if (v12)
  {
    sub_1A8A77B38();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_1A88DA398((uint64_t)v23, (uint64_t)v24);
  if (v25)
  {
    sub_1A88DA400(0, (unint64_t *)&unk_1E9744B80);
    if (swift_dynamicCast())
    {

      return (id)v22[1];
    }
  }
  else
  {
    sub_1A8511B00((uint64_t)v24, &qword_1E9746080);
  }
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1A8A74C98();
  id v14 = (void *)sub_1A8A74CA8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v13, sel_setLocale_, v14);

  sub_1A8A74E68();
  uint64_t v15 = sub_1A8A74E88();
  uint64_t v16 = *(void *)(v15 - 8);
  char v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v2, 1, v15) != 1)
  {
    char v17 = (void *)sub_1A8A74E78();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v15);
  }
  objc_msgSend(v13, sel_setTimeZone_, v17);

  id v18 = objc_msgSend(v8, sel_currentThread);
  id v19 = objc_msgSend(v18, sel_threadDictionary);

  id v20 = v11;
  objc_msgSend(v19, sel_setObject_forKeyedSubscript_, v13, v20);

  return v13;
}

uint64_t sub_1A88DA064(uint64_t a1)
{
  uint64_t v2 = sub_1A8A74D48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451D0);
    uint64_t v9 = sub_1A8A77D78();
    uint64_t v10 = 0;
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    char v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1A88DA354(&qword_1E97413D0);
      uint64_t v16 = sub_1A8A76218();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1A88DA354(&qword_1E97413E0);
          char v23 = sub_1A8A76498();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1A88DA354(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A8A74D48();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A88DA398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88DA400(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeInternetMessageDate()
{
  return &type metadata for UnsafeInternetMessageDate;
}

uint64_t sub_1A88DA44C(char a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (a1 == 1) {
      char v1 = 13;
    }
    else {
      char v1 = 10;
    }
    char v6 = v1;
    uint64_t v3 = &v6;
    uint64_t v4 = (char *)v7;
    uint64_t v2 = MEMORY[0x1E4FBB2B8];
    uint64_t v8 = MEMORY[0x1E4FBB2B8];
    uint64_t v9 = MEMORY[0x1E4F27EF0];
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBB2B8];
    uint64_t v8 = MEMORY[0x1E4FBB2B8];
    uint64_t v9 = MEMORY[0x1E4F27EF0];
    uint64_t v3 = "\r\n";
    uint64_t v4 = "";
  }
  v7[0] = v3;
  v7[1] = v4;
  __swift_project_boxed_opaque_existential_1_0(v7, v2);
  sub_1A8A74A28();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_1A88DA520(char a1, uint64_t (*a2)(char *, char *))
{
  return sub_1A88DA578(a1, a2);
}

uint64_t sub_1A88DA578(char a1, uint64_t (*a2)(char *, char *))
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (a1 == 1)
    {
      char v6 = 13;
      uint64_t v3 = &v7;
      uint64_t v4 = &v6;
    }
    else
    {
      char v7 = 10;
      uint64_t v3 = (char *)&v8;
      uint64_t v4 = &v7;
    }
  }
  else
  {
    uint64_t v4 = "\r\n";
    uint64_t v3 = "";
  }
  return a2(v4, v3);
}

BOOL static LineEnding.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t LineEnding.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t _s9IMAP2MIME15InputLineEndingO9hashValueSivg_0()
{
  return sub_1A8A787C8();
}

uint64_t Message.streamWithConvertedLineEndings(input:output:ensureTrailingNewline:_:)(unsigned int a1, int a2, char a3, void (*a4)(uint64_t, char *), uint64_t a5)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = sub_1A8A75E28();
  uint64_t v43 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v39 = a1;
  int v40 = a2;
  v50[16] = a1;
  v50[17] = a2;
  char v17 = a3;
  v50[18] = a3;
  id v41 = a4;
  uint64_t v42 = a5;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t result = Message.isEmpty.getter();
  if (result) {
    return result;
  }
  sub_1A88DB3F8(v5, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = v43;
    uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))(v13, v16, v11);
    MEMORY[0x1F4188790](v20);
    *(&v38 - 4) = (uint64_t)v13;
    *(&v38 - 3) = (uint64_t)sub_1A88DAB04;
    uint64_t v37 = v50;
    sub_1A8A75D88();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, v11);
  }
  uint64_t v22 = *(void *)v16;
  unint64_t v21 = *((void *)v16 + 1);
  switch(v21 >> 62)
  {
    case 1uLL:
      if (v22 >> 32 < (int)v22)
      {
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      sub_1A8512DFC(*(void *)v16, *((void *)v16 + 1));
      uint64_t v23 = sub_1A8A74588();
      if (v23)
      {
        uint64_t v24 = sub_1A8A745B8();
        if (__OFSUB__((int)v22, v24)) {
          goto LABEL_37;
        }
        v23 += (int)v22 - v24;
      }
      uint64_t v25 = sub_1A8A745A8();
      if (v25 >= (v22 >> 32) - (int)v22) {
        uint64_t v26 = (v22 >> 32) - (int)v22;
      }
      else {
        uint64_t v26 = v25;
      }
      if (v23) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v27 < 0)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
      }
      sub_1A88DAB60((char *)v39, v40, a3 & 1, v41, v42, 0, (char *)v27, v23);
      sub_1A85135AC(v22, v21);
      return sub_1A85135AC(v22, v21);
    case 2uLL:
      uint64_t v28 = *(void *)(v22 + 16);
      uint64_t v29 = *(void *)(v22 + 24);
      swift_retain();
      swift_retain();
      uint64_t v30 = sub_1A8A74588();
      if (!v30) {
        goto LABEL_21;
      }
      uint64_t v31 = sub_1A8A745B8();
      if (__OFSUB__(v28, v31)) {
        goto LABEL_36;
      }
      v30 += v28 - v31;
LABEL_21:
      BOOL v32 = __OFSUB__(v29, v28);
      uint64_t v33 = v29 - v28;
      if (v32) {
        goto LABEL_33;
      }
      uint64_t v34 = sub_1A8A745A8();
      if (v34 >= v33) {
        uint64_t v35 = (char *)v33;
      }
      else {
        uint64_t v35 = (char *)v34;
      }
      if (v30) {
        uint64_t v36 = v35;
      }
      else {
        uint64_t v36 = 0;
      }
      if (((unint64_t)v36 & 0x8000000000000000) != 0) {
        goto LABEL_35;
      }
      sub_1A88DAB60((char *)v39, v40, v17 & 1, v41, v42, 0, v36, v30);
      swift_release();
      swift_release();
      return sub_1A85135AC(v22, v21);
    case 3uLL:
      return sub_1A85135AC(v22, v21);
    default:
      uint64_t v44 = *(void *)v16;
      __int16 v45 = v21;
      char v46 = BYTE2(v21);
      char v47 = BYTE3(v21);
      char v48 = BYTE4(v21);
      char v49 = BYTE5(v21);
      sub_1A88DAB60((char *)v39, v40, a3 & 1, v41, v42, 0, (char *)BYTE6(v21), (uint64_t)&v44);
      return sub_1A85135AC(v22, v21);
  }
}

char *sub_1A88DAB04(char *result, uint64_t a2)
{
  if (result) {
    uint64_t v3 = (char *)(a2 - (void)result);
  }
  else {
    uint64_t v3 = 0;
  }
  if (((unint64_t)v3 & 0x8000000000000000) == 0) {
    return sub_1A88DAB60((char *)*(unsigned __int8 *)(v2 + 16), *(unsigned char *)(v2 + 17), *(unsigned char *)(v2 + 18), *(void (**)(uint64_t, char *))(v2 + 24), *(void *)(v2 + 32), 0, v3, (uint64_t)result);
  }
  __break(1u);
  return result;
}

char *sub_1A88DAB60(char *result, char a2, char a3, void (*a4)(uint64_t, char *), uint64_t a5, char *a6, char *a7, uint64_t a8)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  if (a6 == a7) {
    return result;
  }
  uint64_t v10 = (uint64_t)a6;
  if (a2 != 2)
  {
    if (a2 != 1) {
      goto LABEL_111;
    }
    char v62 = 13;
    uint64_t v13 = &v63;
    uint64_t v14 = result;
    while (2)
    {
      switch(v14)
      {
        case 1:
          if (!a8) {
            goto LABEL_164;
          }
          uint64_t v20 = a8 + v10;
          uint64_t result = (char *)memchr((void *)(a8 + v10), 13, (size_t)&a7[-v10]);
          if (!result) {
            goto LABEL_164;
          }
          unint64_t v21 = &result[-v20];
          if ((uint64_t)&result[-v20] < 0) {
            goto LABEL_164;
          }
          uint64_t v22 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            goto LABEL_190;
          }
          if ((uint64_t)&a7[-v10] < (uint64_t)v22) {
            goto LABEL_164;
          }
          unint64_t v18 = &v21[v10];
          if (__OFADD__(v21, v10)) {
            goto LABEL_203;
          }
          uint64_t v19 = &v22[v10];
          if (__OFADD__(v22, v10)) {
            goto LABEL_204;
          }
          if ((uint64_t)v22 < (uint64_t)v21 || (uint64_t)v19 < (uint64_t)v18) {
            goto LABEL_226;
          }
          goto LABEL_50;
        case 2:
          if (!a8) {
            goto LABEL_164;
          }
          uint64_t v23 = a8 + v10;
          uint64_t result = (char *)memchr((void *)(a8 + v10), 10, (size_t)&a7[-v10]);
          if (!result) {
            goto LABEL_164;
          }
          uint64_t v24 = &result[-v23];
          if ((uint64_t)&result[-v23] < 0) {
            goto LABEL_164;
          }
          uint64_t v25 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_191;
          }
          if ((uint64_t)&a7[-v10] < (uint64_t)v25) {
            goto LABEL_164;
          }
          unint64_t v18 = &v24[v10];
          if (__OFADD__(v24, v10)) {
            goto LABEL_205;
          }
          uint64_t v19 = &v25[v10];
          if (__OFADD__(v25, v10)) {
            goto LABEL_206;
          }
          if ((uint64_t)v25 < (uint64_t)v24 || (uint64_t)v19 < (uint64_t)v18) {
            goto LABEL_227;
          }
          goto LABEL_50;
        case 3:
          if (!a8) {
            goto LABEL_164;
          }
          uint64_t v26 = a8 + v10;
          uint64_t result = (char *)memchr((void *)(a8 + v10), 10, (size_t)&a7[-v10]);
          if (!result) {
            goto LABEL_164;
          }
          uint64_t v27 = &result[-v26];
          if ((uint64_t)&result[-v26] < 0) {
            goto LABEL_164;
          }
          uint64_t v28 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_192;
          }
          if ((uint64_t)&a7[-v10] < (uint64_t)v28) {
            goto LABEL_164;
          }
          unint64_t v18 = &v27[v10];
          if (__OFADD__(v27, v10)) {
            goto LABEL_207;
          }
          uint64_t v19 = &v28[v10];
          if (__OFADD__(v28, v10)) {
            goto LABEL_208;
          }
          if ((uint64_t)v28 < (uint64_t)v27 || (uint64_t)v19 < (uint64_t)v18) {
            goto LABEL_228;
          }
          if (v10 >= (uint64_t)v18) {
            goto LABEL_50;
          }
          if ((uint64_t)v18 > (uint64_t)a7) {
            goto LABEL_237;
          }
          if (v18[a8 - 1] == 13) {
            --v18;
          }
LABEL_50:
          if ((uint64_t)v18 < v10)
          {
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            __break(1u);
LABEL_218:
            __break(1u);
LABEL_219:
            __break(1u);
LABEL_220:
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            __break(1u);
LABEL_223:
            __break(1u);
LABEL_224:
            __break(1u);
LABEL_225:
            __break(1u);
LABEL_226:
            __break(1u);
LABEL_227:
            __break(1u);
LABEL_228:
            __break(1u);
LABEL_229:
            __break(1u);
LABEL_230:
            __break(1u);
LABEL_231:
            __break(1u);
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
LABEL_234:
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
          }
          if ((uint64_t)v18 > (uint64_t)a7) {
            goto LABEL_183;
          }
          if (v18 != (char *)v10) {
            a4(a8 + v10, &v18[a8]);
          }
          uint64_t result = (char *)((uint64_t (*)(char *, char *))a4)(&v62, &v63);
          if ((uint64_t)v19 > (uint64_t)a7) {
            goto LABEL_186;
          }
          BOOL v29 = (uint64_t)v19 < v10;
          uint64_t v10 = (uint64_t)v19;
          if (!v29) {
            continue;
          }
          __break(1u);
          break;
        default:
          if (!a8) {
            goto LABEL_164;
          }
          uint64_t v15 = a8 + v10;
          uint64_t result = (char *)memmem((const void *)(a8 + v10), (size_t)&a7[-v10], "\r\n", 2uLL);
          if (!result) {
            goto LABEL_164;
          }
          uint64_t v16 = &result[-v15];
          if ((uint64_t)&result[-v15] < 0) {
            goto LABEL_164;
          }
          char v17 = v16 + 2;
          if (__OFADD__(v16, 2)) {
            goto LABEL_189;
          }
          if ((uint64_t)&a7[-v10] < (uint64_t)v17) {
            goto LABEL_164;
          }
          unint64_t v18 = &v16[v10];
          if (__OFADD__(v16, v10)) {
            goto LABEL_201;
          }
          uint64_t v19 = &v17[v10];
          if (__OFADD__(v17, v10)) {
            goto LABEL_202;
          }
          if ((uint64_t)v17 < (uint64_t)v16 || (uint64_t)v19 < (uint64_t)v18) {
            goto LABEL_225;
          }
          goto LABEL_50;
      }
      break;
    }
  }
  char v63 = 10;
  uint64_t v30 = result;
  while (2)
  {
    switch(v30)
    {
      case 1:
        if (!a8) {
          goto LABEL_169;
        }
        uint64_t v36 = a8 + v10;
        uint64_t result = (char *)memchr((void *)(a8 + v10), 13, (size_t)&a7[-v10]);
        if (!result) {
          goto LABEL_169;
        }
        uint64_t v37 = &result[-v36];
        if ((uint64_t)&result[-v36] < 0) {
          goto LABEL_169;
        }
        uint64_t v38 = v37 + 1;
        if (__OFADD__(v37, 1)) {
          goto LABEL_194;
        }
        if ((uint64_t)&a7[-v10] < (uint64_t)v38) {
          goto LABEL_169;
        }
        uint64_t v34 = &v37[v10];
        if (__OFADD__(v37, v10)) {
          goto LABEL_211;
        }
        uint64_t v35 = &v38[v10];
        if (__OFADD__(v38, v10)) {
          goto LABEL_212;
        }
        if ((uint64_t)v38 < (uint64_t)v37 || (uint64_t)v35 < (uint64_t)v34) {
          goto LABEL_230;
        }
        goto LABEL_103;
      case 2:
        if (!a8) {
          goto LABEL_169;
        }
        uint64_t v39 = a8 + v10;
        uint64_t result = (char *)memchr((void *)(a8 + v10), 10, (size_t)&a7[-v10]);
        if (!result) {
          goto LABEL_169;
        }
        int v40 = &result[-v39];
        if ((uint64_t)&result[-v39] < 0) {
          goto LABEL_169;
        }
        id v41 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          goto LABEL_195;
        }
        if ((uint64_t)&a7[-v10] < (uint64_t)v41) {
          goto LABEL_169;
        }
        uint64_t v34 = &v40[v10];
        if (__OFADD__(v40, v10)) {
          goto LABEL_213;
        }
        uint64_t v35 = &v41[v10];
        if (__OFADD__(v41, v10)) {
          goto LABEL_214;
        }
        if ((uint64_t)v41 < (uint64_t)v40 || (uint64_t)v35 < (uint64_t)v34) {
          goto LABEL_231;
        }
        goto LABEL_103;
      case 3:
        if (!a8) {
          goto LABEL_169;
        }
        uint64_t v42 = a8 + v10;
        uint64_t result = (char *)memchr((void *)(a8 + v10), 10, (size_t)&a7[-v10]);
        if (!result) {
          goto LABEL_169;
        }
        uint64_t v43 = &result[-v42];
        if ((uint64_t)&result[-v42] < 0) {
          goto LABEL_169;
        }
        uint64_t v44 = v43 + 1;
        if (__OFADD__(v43, 1)) {
          goto LABEL_196;
        }
        if ((uint64_t)&a7[-v10] < (uint64_t)v44) {
          goto LABEL_169;
        }
        uint64_t v34 = &v43[v10];
        if (__OFADD__(v43, v10)) {
          goto LABEL_215;
        }
        uint64_t v35 = &v44[v10];
        if (__OFADD__(v44, v10)) {
          goto LABEL_216;
        }
        if ((uint64_t)v44 < (uint64_t)v43 || (uint64_t)v35 < (uint64_t)v34) {
          goto LABEL_232;
        }
        if (v10 >= (uint64_t)v34) {
          goto LABEL_103;
        }
        if ((uint64_t)v34 > (uint64_t)a7) {
          goto LABEL_238;
        }
        if (v34[a8 - 1] == 13) {
          --v34;
        }
        goto LABEL_103;
      default:
        if (!a8) {
          goto LABEL_169;
        }
        uint64_t v31 = a8 + v10;
        uint64_t result = (char *)memmem((const void *)(a8 + v10), (size_t)&a7[-v10], "\r\n", 2uLL);
        if (!result) {
          goto LABEL_169;
        }
        BOOL v32 = &result[-v31];
        if ((uint64_t)&result[-v31] < 0) {
          goto LABEL_169;
        }
        uint64_t v33 = v32 + 2;
        if (__OFADD__(v32, 2)) {
          goto LABEL_193;
        }
        if ((uint64_t)&a7[-v10] < (uint64_t)v33)
        {
LABEL_169:
          if (a7 == (char *)v10) {
            return result;
          }
          if (a8) {
            uint64_t result = (char *)((uint64_t (*)(uint64_t, char *))a4)(a8 + v10, &a7[a8]);
          }
          if ((a3 & 1) == 0) {
            return result;
          }
          uint64_t v60 = &v63;
          uint64_t v61 = (char *)&v64;
          return (char *)((uint64_t (*)(char *, char *))a4)(v60, v61);
        }
        uint64_t v34 = &v32[v10];
        if (__OFADD__(v32, v10)) {
          goto LABEL_209;
        }
        uint64_t v35 = &v33[v10];
        if (__OFADD__(v33, v10)) {
          goto LABEL_210;
        }
        if ((uint64_t)v33 < (uint64_t)v32 || (uint64_t)v35 < (uint64_t)v34) {
          goto LABEL_229;
        }
LABEL_103:
        if ((uint64_t)v34 < v10) {
          goto LABEL_181;
        }
        if ((uint64_t)v34 > (uint64_t)a7) {
          goto LABEL_184;
        }
        if (v34 != (char *)v10) {
          a4(a8 + v10, &v34[a8]);
        }
        uint64_t result = (char *)((uint64_t (*)(char *, uint64_t *))a4)(&v63, &v64);
        if ((uint64_t)v35 > (uint64_t)a7) {
          goto LABEL_187;
        }
        BOOL v29 = (uint64_t)v35 < v10;
        uint64_t v10 = (uint64_t)v35;
        if (!v29) {
          continue;
        }
        __break(1u);
LABEL_111:
        uint64_t v45 = result;
        uint64_t v13 = "\r\n";
        while (2)
        {
          switch(v45)
          {
            case 1:
              if (!a8) {
                goto LABEL_174;
              }
              uint64_t v51 = a8 + v10;
              uint64_t result = (char *)memchr((void *)(a8 + v10), 13, (size_t)&a7[-v10]);
              if (!result) {
                goto LABEL_174;
              }
              uint64_t v52 = &result[-v51];
              if ((uint64_t)&result[-v51] < 0) {
                goto LABEL_174;
              }
              uint64_t v53 = v52 + 1;
              if (__OFADD__(v52, 1)) {
                goto LABEL_198;
              }
              if ((uint64_t)&a7[-v10] < (uint64_t)v53) {
                goto LABEL_174;
              }
              char v49 = &v52[v10];
              if (__OFADD__(v52, v10)) {
                goto LABEL_219;
              }
              uint64_t v50 = &v53[v10];
              if (__OFADD__(v53, v10)) {
                goto LABEL_220;
              }
              if ((uint64_t)v53 < (uint64_t)v52 || (uint64_t)v50 < (uint64_t)v49) {
                goto LABEL_234;
              }
              goto LABEL_156;
            case 2:
              if (!a8) {
                goto LABEL_174;
              }
              uint64_t v54 = a8 + v10;
              uint64_t result = (char *)memchr((void *)(a8 + v10), 10, (size_t)&a7[-v10]);
              if (!result) {
                goto LABEL_174;
              }
              uint64_t v55 = &result[-v54];
              if ((uint64_t)&result[-v54] < 0) {
                goto LABEL_174;
              }
              uint64_t v56 = v55 + 1;
              if (__OFADD__(v55, 1)) {
                goto LABEL_199;
              }
              if ((uint64_t)&a7[-v10] < (uint64_t)v56) {
                goto LABEL_174;
              }
              char v49 = &v55[v10];
              if (__OFADD__(v55, v10)) {
                goto LABEL_221;
              }
              uint64_t v50 = &v56[v10];
              if (__OFADD__(v56, v10)) {
                goto LABEL_222;
              }
              if ((uint64_t)v56 < (uint64_t)v55 || (uint64_t)v50 < (uint64_t)v49) {
                goto LABEL_235;
              }
              goto LABEL_156;
            case 3:
              if (!a8) {
                goto LABEL_174;
              }
              uint64_t v57 = a8 + v10;
              uint64_t result = (char *)memchr((void *)(a8 + v10), 10, (size_t)&a7[-v10]);
              if (!result) {
                goto LABEL_174;
              }
              uint64_t v58 = &result[-v57];
              if ((uint64_t)&result[-v57] < 0) {
                goto LABEL_174;
              }
              uint64_t v59 = v58 + 1;
              if (__OFADD__(v58, 1)) {
                goto LABEL_200;
              }
              if ((uint64_t)&a7[-v10] < (uint64_t)v59) {
                goto LABEL_174;
              }
              char v49 = &v58[v10];
              if (__OFADD__(v58, v10)) {
                goto LABEL_223;
              }
              uint64_t v50 = &v59[v10];
              if (__OFADD__(v59, v10)) {
                goto LABEL_224;
              }
              if ((uint64_t)v59 < (uint64_t)v58 || (uint64_t)v50 < (uint64_t)v49) {
                goto LABEL_236;
              }
              if (v10 >= (uint64_t)v49) {
                goto LABEL_156;
              }
              if ((uint64_t)v49 > (uint64_t)a7) {
                goto LABEL_239;
              }
              if (v49[a8 - 1] == 13) {
                --v49;
              }
              goto LABEL_156;
            default:
              if (!a8) {
                goto LABEL_174;
              }
              uint64_t v46 = a8 + v10;
              uint64_t result = (char *)memmem((const void *)(a8 + v10), (size_t)&a7[-v10], "\r\n", 2uLL);
              if (!result) {
                goto LABEL_174;
              }
              char v47 = &result[-v46];
              if ((uint64_t)&result[-v46] < 0) {
                goto LABEL_174;
              }
              char v48 = v47 + 2;
              if (__OFADD__(v47, 2)) {
                goto LABEL_197;
              }
              if ((uint64_t)&a7[-v10] < (uint64_t)v48)
              {
LABEL_174:
                if (a7 == (char *)v10) {
                  return result;
                }
                if (a8) {
                  uint64_t result = (char *)((uint64_t (*)(uint64_t, char *))a4)(a8 + v10, &a7[a8]);
                }
                if ((a3 & 1) == 0) {
                  return result;
                }
                uint64_t v61 = "";
                uint64_t v60 = "\r\n";
                return (char *)((uint64_t (*)(char *, char *))a4)(v60, v61);
              }
              char v49 = &v47[v10];
              if (__OFADD__(v47, v10)) {
                goto LABEL_217;
              }
              uint64_t v50 = &v48[v10];
              if (__OFADD__(v48, v10)) {
                goto LABEL_218;
              }
              if ((uint64_t)v48 < (uint64_t)v47 || (uint64_t)v50 < (uint64_t)v49) {
                goto LABEL_233;
              }
LABEL_156:
              if ((uint64_t)v49 < v10) {
                goto LABEL_182;
              }
              if ((uint64_t)v49 > (uint64_t)a7) {
                goto LABEL_185;
              }
              if (v49 != (char *)v10) {
                a4(a8 + v10, &v49[a8]);
              }
              uint64_t result = (char *)((uint64_t (*)(const char *, char *))a4)("\r\n", "");
              if ((uint64_t)v50 > (uint64_t)a7) {
                goto LABEL_188;
              }
              BOOL v29 = (uint64_t)v50 < v10;
              uint64_t v10 = (uint64_t)v50;
              if (!v29) {
                continue;
              }
              __break(1u);
LABEL_164:
              if (a7 != (char *)v10)
              {
                if (a8) {
                  uint64_t result = (char *)((uint64_t (*)(uint64_t, char *))a4)(a8 + v10, &a7[a8]);
                }
                if (a3)
                {
                  uint64_t v60 = &v62;
                  uint64_t v61 = v13;
                  return (char *)((uint64_t (*)(void, void))a4)(v60, v61);
                }
              }
              return result;
          }
        }
    }
  }
}

uint64_t sub_1A88DB3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message.Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88DB45C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  return a3(a1, a1 + v5);
}

uint64_t sub_1A88DB4C0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24);
  uint64_t v4 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  return v3(a1, a1 + v4);
}

unint64_t sub_1A88DB528()
{
  unint64_t result = qword_1E974E318;
  if (!qword_1E974E318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E318);
  }
  return result;
}

unint64_t sub_1A88DB580()
{
  unint64_t result = qword_1E974E320;
  if (!qword_1E974E320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E320);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InputLineEnding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88DB6A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputLineEnding()
{
  return &type metadata for InputLineEnding;
}

unsigned char *storeEnumTagSinglePayload for LineEnding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88DB7A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineEnding()
{
  return &type metadata for LineEnding;
}

uint64_t sub_1A88DB7DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return sub_1A88DB45C(a1, a2, a3);
}

uint64_t static ListID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1A8A78588();
  }
}

uint64_t sub_1A88DB820(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (!result) {
    uint64_t v2 = 0;
  }
  if (v2 < 0)
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    return result;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  while (1)
  {
    if (v3 >= v2)
    {
      __break(1u);
      goto LABEL_70;
    }
    int v4 = *(unsigned __int8 *)(result + v3);
    if (v4 == 34 || v4 == 60) {
      goto LABEL_10;
    }
    uint64_t v9 = v3 + 1;
    uint64_t v5 = v2;
    if (v3 + 1 == v2) {
      break;
    }
    if (v3 + 1 >= v2) {
      goto LABEL_81;
    }
    LODWORD(v5) = *(unsigned __int8 *)(result + v9);
    if (v5 != 34 && v5 != 60)
    {
      uint64_t v10 = v3;
      while (1)
      {
        uint64_t v5 = v10 + 2;
        if (__OFADD__(v10 + 1, 1)) {
          goto LABEL_72;
        }
        if (v2 < v5) {
          goto LABEL_73;
        }
        if (v5 < ++v10) {
          goto LABEL_74;
        }
        if (v5 == v2)
        {
          uint64_t v5 = v2;
          goto LABEL_18;
        }
        int v11 = *(unsigned __int8 *)(result + v5);
        if (v11 == 34 || v11 == 60) {
          goto LABEL_18;
        }
      }
    }
LABEL_23:
    uint64_t v3 = v9;
    if (v2 < v9) {
      goto LABEL_51;
    }
LABEL_10:
    if (v3 == v2) {
      return 0;
    }
    if (v3 >= v2) {
      goto LABEL_71;
    }
    LODWORD(v5) = *(unsigned __int8 *)(result + v3);
    if (v5 != 34) {
      goto LABEL_52;
    }
    uint64_t v6 = v3 + 1;
    uint64_t v7 = v2;
    if (v3 + 1 != v2)
    {
      if (v3 + 1 >= v2) {
        goto LABEL_80;
      }
      if (*(unsigned char *)(result + v6) == 34)
      {
        uint64_t v8 = v3 + 1;
      }
      else
      {
        uint64_t v8 = v2;
        if (v3 + 2 == v2)
        {
LABEL_26:
          if (v8 <= v3) {
            goto LABEL_75;
          }
        }
        else
        {
          if (v3 + 2 >= v2) {
            goto LABEL_83;
          }
          uint64_t v8 = v3 + 2;
          if (*(unsigned char *)(result + v3 + 2) != 34)
          {
            while (1)
            {
              uint64_t v8 = v6 + 2;
              if (__OFADD__(v6 + 1, 1)) {
                goto LABEL_77;
              }
              if (v2 < v8) {
                goto LABEL_78;
              }
              if (v8 < ++v6) {
                goto LABEL_79;
              }
              if (v8 == v2)
              {
                uint64_t v8 = v2;
                goto LABEL_26;
              }
              if (*(unsigned char *)(result + v8) == 34) {
                goto LABEL_26;
              }
            }
          }
        }
      }
      if (v2 < v8) {
        goto LABEL_76;
      }
      uint64_t v7 = v2;
      if (v8 != v2)
      {
        if (v8 >= v2) {
          goto LABEL_82;
        }
        uint64_t v7 = v8 + 1;
      }
    }
    uint64_t v3 = v7;
    if (v7 == v2) {
      return 0;
    }
  }
LABEL_18:
  uint64_t v9 = v5;
  if (v5 >= v3) {
    goto LABEL_23;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  if (v5 == 60)
  {
    uint64_t v25 = v3 + 1;
    uint64_t v26 = v2;
    uint64_t v27 = result;
    uint64_t v28 = a2;
    unint64_t result = sub_1A88DC7E4(0x3Eu);
    if (result != v12 && v25 != v26)
    {
      if (v25 >= v26) {
        goto LABEL_86;
      }
      if (*(unsigned char *)(v27 + v25) == 62)
      {
        uint64_t v15 = result;
        uint64_t v16 = v12;
        uint64_t v17 = v13;
        uint64_t v23 = 0;
        unint64_t v24 = 0xE000000000000000;
        ++v25;
        if (v13) {
          uint64_t v18 = v14 - v13;
        }
        else {
          uint64_t v18 = 0;
        }
        uint64_t v19 = result;
        while (v19 < v16)
        {
          if (v15 < 0 || v19 >= v18) {
            goto LABEL_85;
          }
          uint64_t v20 = *(unsigned __int8 *)(v17 + v19);
          if ((v20 - 127) < 0xFFFFFFA2)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          ++v19;
          uint64_t v22 = v20;
          uint64_t v21 = MEMORY[0x1AD0DF7E0](&v22, 1);
          MEMORY[0x1AD0DF8C0](v21);
          unint64_t result = swift_bridgeObjectRelease();
          if (v16 == v19) {
            return v23;
          }
        }
        goto LABEL_84;
      }
    }
  }
  return 0;
}

uint64_t ListID.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t ListID.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88DBBF4()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88DBC50()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88DBCA8(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1A8A78588();
  }
}

uint64_t ListID.description.getter(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A88DBD10()
{
  unint64_t result = qword_1E974E328;
  if (!qword_1E974E328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E328);
  }
  return result;
}

ValueMetadata *type metadata accessor for ListID()
{
  return &type metadata for ListID;
}

size_t sub_1A88DBD74(uint64_t isStackAllocationSafe, uint64_t a2, size_t a3, uint64_t a4)
{
  size_t v5 = a3;
  uint64_t v7 = isStackAllocationSafe;
  v18[1] = *MEMORY[0x1E4F143B8];
  if (a2 == isStackAllocationSafe)
  {
LABEL_13:
    if (a3) {
      unint64_t v12 = a3 + a2;
    }
    else {
      unint64_t v12 = 0;
    }
    if (a3) {
      size_t v13 = a3 + isStackAllocationSafe;
    }
    else {
      size_t v13 = 0;
    }
    return sub_1A88F45B8(v13, v12);
  }
  uint64_t v8 = a4 - a3;
  if (!a3) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = isStackAllocationSafe;
  while (1)
  {
    if (v9 >= a2)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (isStackAllocationSafe < 0 || v9 >= v8) {
      goto LABEL_30;
    }
    int v10 = *(unsigned __int8 *)(a3 + v9);
    if (v10 == 13 || v10 == 10) {
      break;
    }
    if (a2 == ++v9) {
      goto LABEL_13;
    }
  }
  if (v8 < a2)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  if (a2 - isStackAllocationSafe < 0) {
    goto LABEL_32;
  }
  if (a2 - isStackAllocationSafe < 1025
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    size_t v16 = sub_1A88DD230((size_t)v18 - v15, v7, a2, v5);
    if (v4) {
      swift_willThrow();
    }
    else {
      return v16;
    }
  }
  else
  {
    size_t v17 = swift_slowAlloc();
    size_t v5 = sub_1A88DD230(v17, v7, a2, v5);
    MEMORY[0x1AD0E4D00](v17, -1, -1);
  }
  return v5;
}

unsigned __int8 *sub_1A88DBF44(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = isStackAllocationSafe;
  v20[2] = *MEMORY[0x1E4F143B8];
  if (a2 == isStackAllocationSafe)
  {
LABEL_13:
    if (a3) {
      unint64_t v12 = (unsigned __int8 *)(a3 + a2);
    }
    else {
      unint64_t v12 = 0;
    }
    if (a3) {
      size_t v13 = (unsigned __int8 *)(a3 + isStackAllocationSafe);
    }
    else {
      size_t v13 = 0;
    }
    sub_1A88BB094(v13, v12, v20);
    if (!v4) {
      return (unsigned __int8 *)v20[0];
    }
    return (unsigned __int8 *)v5;
  }
  uint64_t v8 = a4 - a3;
  if (!a3) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = isStackAllocationSafe;
  while (1)
  {
    if (v9 >= a2)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (isStackAllocationSafe < 0 || v9 >= v8) {
      goto LABEL_33;
    }
    int v10 = *(unsigned __int8 *)(a3 + v9);
    if (v10 == 13 || v10 == 10) {
      break;
    }
    if (a2 == ++v9) {
      goto LABEL_13;
    }
  }
  if (v8 < a2)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  if (a2 - isStackAllocationSafe < 0) {
    goto LABEL_35;
  }
  if (a2 - isStackAllocationSafe < 1025
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v15 = sub_1A88DD2CC((unsigned __int8 *)&v20[-1] - v14, v7, a2, v5);
    if (v4) {
      swift_willThrow();
    }
    else {
      return v15;
    }
  }
  else
  {
    size_t v16 = (unsigned __int8 *)swift_slowAlloc();
    size_t v17 = sub_1A88DD2CC(v16, v7, a2, v5);
    if (!v4) {
      uint64_t v5 = (uint64_t)v17;
    }
    MEMORY[0x1AD0E4D00](v16, -1, -1);
  }
  return (unsigned __int8 *)v5;
}

uint64_t sub_1A88DC134(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v9 = isStackAllocationSafe;
  v21[1] = *MEMORY[0x1E4F143B8];
  if (a2 == isStackAllocationSafe)
  {
LABEL_13:
    if (a3) {
      uint64_t v15 = a3 + a2;
    }
    else {
      uint64_t v15 = 0;
    }
    if (a3) {
      uint64_t v16 = a3 + isStackAllocationSafe;
    }
    else {
      uint64_t v16 = 0;
    }
    return a5(v16, v15);
  }
  uint64_t v11 = a4 - a3;
  if (!a3) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = isStackAllocationSafe;
  while (1)
  {
    if (v12 >= a2)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (isStackAllocationSafe < 0 || v12 >= v11) {
      goto LABEL_29;
    }
    int v13 = *(unsigned __int8 *)(a3 + v12);
    if (v13 == 13 || v13 == 10) {
      break;
    }
    if (a2 == ++v12) {
      goto LABEL_13;
    }
  }
  if (v11 < a2)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  uint64_t v18 = a2 - isStackAllocationSafe;
  if (a2 - isStackAllocationSafe < 0) {
    goto LABEL_31;
  }
  if (v18 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t result = sub_1A88DCF1C((uint64_t)v21 - v19, (uint64_t)v21 + v18 - v19, v9, a2, a3, a4, a5);
    if (v5) {
      return swift_willThrow();
    }
  }
  else
  {
    uint64_t v20 = swift_slowAlloc();
    sub_1A88DCF1C(v20, v20 + v18, v9, a2, a3, a4, a5);
    return MEMORY[0x1AD0E4D00](v20, -1, -1);
  }
  return result;
}

uint64_t sub_1A88DC32C(char a1)
{
  switch(a1)
  {
    case 1:
      goto LABEL_19;
    case 2:
      int64_t v8 = *v1;
      int64_t v10 = v1[1];
      if (*v1 == v10) {
        return 0;
      }
      if (*v1 >= v10) {
        goto LABEL_59;
      }
      if (*(unsigned char *)(v1[2] + v8) == 10) {
        goto LABEL_26;
      }
      return 0;
    case 3:
      int64_t v11 = *v1;
      int64_t v7 = v1[2];
      if (v7) {
        int64_t v12 = v1[3] - v7;
      }
      else {
        int64_t v12 = 0;
      }
      if (v11 < 0 || v12 < v11) {
        goto LABEL_54;
      }
      unint64_t v13 = v1[1];
      if ((v13 & 0x8000000000000000) != 0 || v12 < (uint64_t)v13) {
        goto LABEL_55;
      }
      if ((uint64_t)(v13 - v11) < 2)
      {
        if (v13 - v11 != 1) {
          return 0;
        }
        goto LABEL_45;
      }
      if (v13 <= v11)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      if (*(unsigned char *)(v7 + v11) == 13)
      {
        if (v11 + 1 >= v13)
        {
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        if (*(unsigned char *)(v7 + v11 + 1) == 10)
        {
          int64_t v7 = v11 + 2;
          if (__OFADD__(v11, 2))
          {
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          if ((uint64_t)v13 < v7)
          {
LABEL_70:
            __break(1u);
            JUMPOUT(0x1A88DC548);
          }
          if (v7 < v11)
          {
            __break(1u);
            goto LABEL_45;
          }
LABEL_50:
          *uint64_t v1 = v7;
          return 1;
        }
      }
LABEL_45:
      if (v13 <= v11)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      if (*(unsigned char *)(v7 + v11) == 10)
      {
        int64_t v7 = v11 + 1;
        if (!__OFADD__(v11, 1))
        {
          if ((uint64_t)v13 >= v7)
          {
            if (v7 >= v11) {
              goto LABEL_50;
            }
            goto LABEL_63;
          }
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      return 0;
    default:
      int64_t v2 = *v1;
      int64_t v3 = v1[2];
      int64_t v4 = v1[3] - v3;
      if (!v3) {
        int64_t v4 = 0;
      }
      if (v2 < 0 || v4 < v2)
      {
        __break(1u);
      }
      else
      {
        int64_t v5 = v1[1];
        if ((v5 & 0x8000000000000000) == 0 && v4 >= v5)
        {
          if (v5 - v2 < 2) {
            return 0;
          }
          if (v5 <= (unint64_t)v2) {
            goto LABEL_57;
          }
          if (*(unsigned char *)(v3 + v2) != 13) {
            return 0;
          }
          int64_t v6 = v2 + 1;
          if (__OFADD__(v2, 1))
          {
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          if (v6 < v2 || v6 >= v5) {
            goto LABEL_65;
          }
          if (*(unsigned char *)(v3 + v6) != 10) {
            return 0;
          }
          int64_t v7 = v2 + 2;
          if (__OFADD__(v2, 2))
          {
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
          if (v5 < v7)
          {
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
          if (v7 < v2)
          {
            __break(1u);
LABEL_19:
            int64_t v8 = *v1;
            int64_t v9 = v1[1];
            if (*v1 == v9) {
              return 0;
            }
            if (*v1 >= v9) {
              goto LABEL_58;
            }
            if (*(unsigned char *)(v1[2] + v8) != 13) {
              return 0;
            }
LABEL_26:
            int64_t v7 = v8 + 1;
          }
          goto LABEL_50;
        }
      }
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
  }
}

void sub_1A88DC558()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = *v0;
  if (*v0 == v2) {
    goto LABEL_7;
  }
  if (*v0 >= v2)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v5 = *v0;
  if (*(unsigned __int8 *)(v3 + v1) - 58 < 0xFFFFFFF6) {
    goto LABEL_7;
  }
  uint64_t v5 = v1 + 1;
  if (v1 + 1 == v2)
  {
LABEL_5:
    uint64_t v5 = v2;
LABEL_6:
    *uint64_t v0 = v5;
    if (v5 < v1) {
      goto LABEL_38;
    }
LABEL_7:
    if (v2 >= v5) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
  if (v1 + 1 >= v2)
  {
LABEL_45:
    __break(1u);
    return;
  }
  if (*(unsigned __int8 *)(v3 + v5) - 58 >= 0xFFFFFFF6) {
    goto LABEL_28;
  }
  *uint64_t v0 = v5;
  if (v2 < v5)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    uint64_t v12 = v1;
    while (1)
    {
      uint64_t v5 = v12 + 2;
      if (__OFADD__(v12 + 1, 1)) {
        goto LABEL_39;
      }
      if (v2 < v5) {
        goto LABEL_40;
      }
      if (v5 < ++v12) {
        goto LABEL_41;
      }
      if (v5 == v2) {
        goto LABEL_5;
      }
      if (*(unsigned __int8 *)(v3 + v5) - 58 < 0xFFFFFFF6) {
        goto LABEL_6;
      }
    }
  }
LABEL_8:
  uint64_t v6 = v5 - v1;
  if (v5 == v1) {
    return;
  }
  uint64_t v7 = v4 - v3;
  if (!v3) {
    uint64_t v7 = 0;
  }
  if (v1 < 0 || v7 < v1) {
    goto LABEL_43;
  }
  if (v5 < 0 || v7 < v5) {
    goto LABEL_44;
  }
  if (v6 > 8)
  {
    *uint64_t v0 = v1;
    return;
  }
  unint64_t v8 = 0;
  if (v3)
  {
    int64_t v9 = (unsigned __int8 *)(v3 + v1);
    while (is_mul_ok(v8, 0xAuLL))
    {
      int v10 = *v9 - 48;
      if ((v10 & 0xFFFFFF00) != 0) {
        goto LABEL_36;
      }
      BOOL v11 = __CFADD__(10 * v8, v10);
      unint64_t v8 = 10 * v8 + v10;
      if (v11) {
        goto LABEL_37;
      }
      ++v9;
      if (!--v6) {
        return;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
}

char *sub_1A88DC6D8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(a1)
  {
    case 1:
      unsigned __int8 v8 = 13;
      return sub_1A88DC91C(v8, a2, a3, a4);
    case 2:
      unsigned __int8 v8 = 10;
      return sub_1A88DC91C(v8, a2, a3, a4);
    case 3:
      uint64_t result = sub_1A88DC91C(0xAu, a2, a3, a4);
      if ((v10 & 1) != 0 || (uint64_t)result <= a2) {
        return result;
      }
      if ((uint64_t)result > a3)
      {
        __break(1u);
        goto LABEL_14;
      }
      if (result[a4 - 1] != 13) {
        return result;
      }
      if (v9 < (uint64_t)(result - 1))
      {
LABEL_14:
        __break(1u);
        JUMPOUT(0x1A88DC7D4);
      }
      return --result;
    default:
      return sub_1A88DC870("\r\n", 2uLL, a2, a3, a4);
  }
}

uint64_t sub_1A88DC7E4(unsigned __int8 a1)
{
  uint64_t result = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = *v1;
  if (*v1 != v4)
  {
    if (*v1 >= v4)
    {
LABEL_16:
      __break(1u);
      return result;
    }
    uint64_t v6 = *v1;
    if (*(unsigned __int8 *)(v5 + result) != a1)
    {
      uint64_t v6 = *v1;
      while (1)
      {
        if (v4 <= v6)
        {
          __break(1u);
          goto LABEL_14;
        }
        if (v4 - 1 == v6) {
          break;
        }
        int v7 = *(unsigned __int8 *)(v5 + 1 + v6++);
        if (v7 == a1) {
          goto LABEL_10;
        }
      }
      uint64_t v6 = v1[1];
LABEL_10:
      *uint64_t v1 = v6;
      if (v6 >= result) {
        goto LABEL_11;
      }
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
  }
LABEL_11:
  if (v4 < v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

char *sub_1A88DC870(void *__little, size_t __little_len, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a5) {
    return 0;
  }
  uint64_t v7 = a5 + a3;
  uint64_t v8 = a4 - a3;
  uint64_t result = (char *)memmem((const void *)(a5 + a3), a4 - a3, __little, __little_len);
  if (!result) {
    return result;
  }
  char v10 = &result[-v7];
  if ((uint64_t)&result[-v7] < 0) {
    return 0;
  }
  BOOL v11 = &v10[__little_len];
  if (__OFADD__(v10, __little_len))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v8 < (uint64_t)v11) {
    return 0;
  }
  uint64_t result = &v10[a3];
  if (__OFADD__(v10, a3)) {
    goto LABEL_14;
  }
  if (__OFADD__(v11, a3))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  if ((uint64_t)v11 < (uint64_t)v10 || (uint64_t)&v11[a3] < (uint64_t)result) {
    goto LABEL_16;
  }
  return result;
}

char *sub_1A88DC91C(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4) {
    return 0;
  }
  uint64_t v5 = a4 + a2;
  uint64_t v6 = a3 - a2;
  uint64_t result = (char *)memchr((void *)(a4 + a2), a1, a3 - a2);
  if (!result) {
    return result;
  }
  uint64_t v8 = &result[-v5];
  if ((uint64_t)&result[-v5] < 0) {
    return 0;
  }
  uint64_t v9 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v6 < (uint64_t)v9) {
    return 0;
  }
  uint64_t result = &v8[a2];
  if (__OFADD__(v8, a2)) {
    goto LABEL_14;
  }
  if (__OFADD__(v9, a2))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  if ((uint64_t)v9 < (uint64_t)v8 || (uint64_t)&v9[a2] < (uint64_t)result) {
    goto LABEL_16;
  }
  return result;
}

char *sub_1A88DC9C0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(a1)
  {
    case 1:
      uint64_t v7 = "\r\r";
      goto LABEL_5;
    case 2:
      uint64_t v7 = "\n\n";
LABEL_5:
      size_t v8 = 2;
      return sub_1A88DC870(v7, v8, a2, a3, a4);
    case 3:
      if (!a4) {
        return 0;
      }
      uint64_t v10 = a4 + a2;
      uint64_t v11 = a3 - a2;
      uint64_t v12 = (char *)memchr((void *)(a4 + a2), 10, a3 - a2);
      if (!v12) {
        return 0;
      }
      uint64_t v14 = &v12[-v10];
      if ((uint64_t)&v12[-v10] < 0) {
        return 0;
      }
      uint64_t v15 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_45;
      }
      if (v11 < (uint64_t)v15) {
        return 0;
      }
      uint64_t v9 = (uint64_t)&v14[a2];
      if (__OFADD__(v14, a2)) {
        goto LABEL_46;
      }
      uint64_t v17 = (uint64_t)&v15[a2];
      if (__OFADD__(v15, a2)) {
        goto LABEL_47;
      }
      if ((uint64_t)v15 < (uint64_t)v14 || v17 < v9) {
        goto LABEL_48;
      }
      if (v9 <= a2) {
        goto LABEL_22;
      }
      if (v9 > a3) {
        goto LABEL_50;
      }
      if (*(unsigned char *)(a4 + v9 - 1) == 13) {
        --v9;
      }
LABEL_22:
      if (v17 > a3) {
        goto LABEL_49;
      }
      if (v17 < a2) {
        goto LABEL_40;
      }
      break;
    default:
      uint64_t v7 = "\r\n\r\n";
      size_t v8 = 4;
      return sub_1A88DC870(v7, v8, a2, a3, a4);
  }
  while (1)
  {
    uint64_t v18 = a4 + v17;
    uint64_t v19 = (char *)memchr((void *)(a4 + v17), 10, a3 - v17);
    if (!v19) {
      return 0;
    }
    uint64_t v20 = &v19[-v18];
    if ((uint64_t)&v19[-v18] < 0) {
      return 0;
    }
    uint64_t v21 = (uint64_t)(v20 + 1);
    if (__OFADD__(v20, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (a3 - v17 < v21) {
      return 0;
    }
    uint64_t v22 = (uint64_t)&v20[v17];
    if (__OFADD__(v20, v17)) {
      goto LABEL_46;
    }
    uint64_t v13 = v21 + v17;
    if (__OFADD__(v21, v17)) {
      goto LABEL_47;
    }
    if (v21 < (uint64_t)v20 || v13 < v22) {
      goto LABEL_48;
    }
    if (v17 < v22)
    {
      if (v22 > a3) {
        goto LABEL_50;
      }
      if (*(unsigned char *)(a4 + v22 - 1) == 13) {
        --v22;
      }
    }
    if (v17 == v22) {
      goto LABEL_41;
    }
    if (v13 > a3) {
      goto LABEL_49;
    }
    uint64_t v9 = v22;
    BOOL v23 = __OFSUB__(v13, v17);
    v17 += v21;
    if (v21 < 0 != v23)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      if (v13 >= v9 && v13 <= a3)
      {
        if (v13 >= v17) {
          return (char *)v9;
        }
LABEL_52:
        __break(1u);
        JUMPOUT(0x1A88DCBD0);
      }
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
  }
}

void sub_1A88DCBE0(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  long long v4 = 0uLL;
  if (*v1 == v3)
  {
LABEL_9:
    uint64_t v2 = 0;
    uint64_t v12 = 0;
    char v13 = 1;
LABEL_10:
    *(void *)a1 = v2;
    *(void *)(a1 + 8) = v12;
    *(_OWORD *)(a1 + 16) = v4;
    *(unsigned char *)(a1 + 32) = v13;
    return;
  }
  if (*v1 < v3)
  {
    long long v5 = *((_OWORD *)v1 + 1);
    uint64_t v6 = v1[2];
    int v7 = *(unsigned __int8 *)(v6 + v2);
    if ((v7 - 127) >= 0xFFFFFFA2)
    {
      unsigned int v8 = v7 - 34;
      BOOL v9 = v8 > 0x3B;
      uint64_t v10 = (1 << v8) & 0xE0000007F0024C1;
      if (v9 || v10 == 0)
      {
        uint64_t v14 = v2 + 1;
        uint64_t v15 = *v1;
        while (1)
        {
          uint64_t v12 = v14;
          if (v3 <= v14 - 1) {
            goto LABEL_24;
          }
          if (v3 == v14) {
            break;
          }
          ++v15;
          int v16 = *(unsigned __int8 *)(v6 + v14);
          if ((v16 - 127) < 0xFFFFFFA2)
          {
            uint64_t v12 = v15;
LABEL_19:
            *uint64_t v1 = v12;
            if (v2 == v12) {
              goto LABEL_9;
            }
            if (v12 >= v2)
            {
              char v13 = 0;
              long long v4 = v5;
              goto LABEL_10;
            }
            goto LABEL_25;
          }
          ++v14;
          unsigned int v17 = v16 - 34;
          BOOL v9 = v17 > 0x3B;
          uint64_t v18 = (1 << v17) & 0xE0000007F0024C1;
          if (!v9 && v18 != 0) {
            goto LABEL_19;
          }
        }
        uint64_t v12 = v1[1];
        goto LABEL_19;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1A88DCCE0(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v7 = v1[1];
      if (*v1 == v7) {
        return 0;
      }
      uint64_t v8 = v7 - 1;
      if (__OFSUB__(v7, 1)) {
        goto LABEL_59;
      }
      uint64_t v9 = v1[2];
      uint64_t v10 = v1[3] - v9;
      if (!v9) {
        uint64_t v10 = 0;
      }
      BOOL v11 = v8 >= v7 || v8 < *v1;
      if (v11 || v8 < 0 || v8 >= v10) {
        goto LABEL_60;
      }
      if (*(unsigned char *)(v9 + v8) == 13) {
        goto LABEL_48;
      }
      return 0;
    case 2:
      uint64_t v12 = v1[1];
      if (*v1 == v12) {
        return 0;
      }
      uint64_t v8 = v12 - 1;
      if (__OFSUB__(v12, 1)) {
        goto LABEL_61;
      }
      uint64_t v13 = v1[2];
      uint64_t v14 = v1[3] - v13;
      if (!v13) {
        uint64_t v14 = 0;
      }
      BOOL v15 = v8 >= v12 || v8 < *v1;
      if (v15 || v8 < 0 || v8 >= v14) {
        goto LABEL_62;
      }
      if (*(unsigned char *)(v13 + v8) != 10) {
        return 0;
      }
      goto LABEL_48;
    case 3:
      uint64_t v16 = *v1;
      uint64_t v17 = v1[2];
      uint64_t v18 = v1[3];
      uint64_t v19 = v18 - v17;
      if (!v17) {
        uint64_t v19 = 0;
      }
      if (v16 < 0 || v19 < v16) {
        goto LABEL_56;
      }
      uint64_t v20 = v1[1];
      if (v20 < 0 || v19 < v20) {
        goto LABEL_57;
      }
      if (v20 - v16 < 2) {
        goto LABEL_49;
      }
      uint64_t v8 = v20 - 2;
      if (v20 - 2 < v16) {
        goto LABEL_63;
      }
      if (*(unsigned char *)(v17 + v8) == 13 && *(unsigned char *)(v20 + v17 - 1) == 10)
      {
LABEL_48:
        v1[1] = v8;
        return 1;
      }
LABEL_49:
      if ((sub_1A88FA98C(*v1, v1[1], v1[2], v1[3]) & 0x1FF) != 0xA) {
        return 0;
      }
      if (v20 > (unint64_t)v16)
      {
        *uint64_t v1 = v16;
        v1[1] = v20 - 1;
        v1[2] = v17;
        v1[3] = v18;
        return 1;
      }
      goto LABEL_64;
    default:
      uint64_t v2 = *v1;
      uint64_t v3 = v1[2];
      if (v3) {
        uint64_t v4 = v1[3] - v3;
      }
      else {
        uint64_t v4 = 0;
      }
      if (v2 < 0 || v4 < v2)
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      uint64_t v5 = v1[1];
      if (v5 < 0 || v4 < v5) {
        goto LABEL_55;
      }
      if (v5 - v2 < 2) {
        return 0;
      }
      uint64_t v6 = v5 - 2;
      if (v5 - 2 < v2)
      {
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        JUMPOUT(0x1A88DCF0CLL);
      }
      if (*(unsigned char *)(v3 + v6) == 13 && *(unsigned char *)(v5 + v3 - 1) == 10)
      {
        v1[1] = v6;
        return 1;
      }
      return 0;
  }
}

uint64_t sub_1A88DCF1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  uint64_t v7 = a4 - a3;
  if (a4 <= a3)
  {
LABEL_11:
    if (!result)
    {
      uint64_t v14 = 0;
      return a7(result, v14);
    }
    uint64_t v8 = 0;
LABEL_15:
    uint64_t v14 = result + v8;
    return a7(result, v14);
  }
  uint64_t v8 = 0;
  uint64_t v9 = (unsigned __int8 *)(a5 + a3);
  do
  {
    int v11 = *v9++;
    int v10 = v11;
    if (v11 != 13 && v10 != 10)
    {
      *(unsigned char *)(result + v8) = v10;
      if (__OFADD__(v8++, 1))
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    --v7;
  }
  while (v7);
  if (result)
  {
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_15;
    }
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = 0;
    uint64_t result = 0;
    return a7(result, v14);
  }
  __break(1u);
  return result;
}

void *sub_1A88DCFB8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, void *(*a5)(uint64_t *__return_ptr))
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - a2;
  if (a3 <= a2) {
    goto LABEL_12;
  }
  uint64_t v8 = (unsigned __int8 *)(a4 + a2);
  while (1)
  {
    int v10 = *v8++;
    int v9 = v10;
    if (v10 != 13 && v9 != 10)
    {
      *((unsigned char *)result + v6) = v9;
      if (__OFADD__(v6++, 1)) {
        break;
      }
    }
    if (!--v7) {
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
LABEL_12:
    uint64_t result = a5(&var1);
    if (!v5) {
      return (void *)var1;
    }
  }
  return result;
}

void *sub_1A88DD040(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t, uint64_t), void *a6)
{
  uint64_t v11 = isStackAllocationSafe;
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (a2 == isStackAllocationSafe)
  {
LABEL_13:
    if (a3) {
      uint64_t v16 = a3 + a2;
    }
    else {
      uint64_t v16 = 0;
    }
    if (a3) {
      uint64_t v17 = a3 + isStackAllocationSafe;
    }
    else {
      uint64_t v17 = 0;
    }
    a5((uint64_t *)((char *)&v22 + 7), v17, v16);
    if (!v6) {
      return (void *)HIBYTE(v22);
    }
    return a6;
  }
  uint64_t v12 = a4 - a3;
  if (!a3) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = isStackAllocationSafe;
  while (1)
  {
    if (v13 >= a2)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (isStackAllocationSafe < 0 || v13 >= v12) {
      goto LABEL_31;
    }
    int v14 = *(unsigned __int8 *)(a3 + v13);
    if (v14 == 13 || v14 == 10) {
      break;
    }
    if (a2 == ++v13) {
      goto LABEL_13;
    }
  }
  if (v12 < a2)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  if (a2 - isStackAllocationSafe < 0) {
    goto LABEL_33;
  }
  if (a2 - isStackAllocationSafe < 1025
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v19 = sub_1A88DCFB8((uint64_t *)((char *)&v22 - v18), v11, a2, a3, (void *(*)(uint64_t *__return_ptr))a5);
    if (v6) {
      swift_willThrow();
    }
    else {
      return v19;
    }
  }
  else
  {
    uint64_t v20 = (void *)swift_slowAlloc();
    a6 = sub_1A88DCFB8(v20, v11, a2, a3, (void *(*)(uint64_t *__return_ptr))a5);
    MEMORY[0x1AD0E4D00](v20, -1, -1);
  }
  return a6;
}

size_t sub_1A88DD230(size_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3 - a2;
  if (a3 <= a2)
  {
LABEL_11:
    if (!result)
    {
      unint64_t v11 = 0;
      return sub_1A88F45B8(result, v11);
    }
    uint64_t v5 = 0;
LABEL_15:
    unint64_t v11 = result + v5;
    return sub_1A88F45B8(result, v11);
  }
  uint64_t v5 = 0;
  uint64_t v6 = (unsigned __int8 *)(a4 + a2);
  do
  {
    int v8 = *v6++;
    int v7 = v8;
    if (v8 != 13 && v7 != 10)
    {
      *(unsigned char *)(result + v5) = v7;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    --v4;
  }
  while (v4);
  if (result)
  {
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_15;
    }
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v11 = 0;
    uint64_t result = 0;
    return sub_1A88F45B8(result, v11);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A88DD2CC(unsigned __int8 *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = 0;
  uint64_t v6 = a3 - a2;
  if (a3 <= a2) {
    goto LABEL_12;
  }
  int v7 = (unsigned __int8 *)(a4 + a2);
  while (1)
  {
    int v9 = *v7++;
    int v8 = v9;
    if (v9 != 13 && v8 != 10)
    {
      result[v5] = v8;
      if (__OFADD__(v5++, 1)) {
        break;
      }
    }
    if (!--v6) {
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
LABEL_12:
    uint64_t v12 = &result[v5];
    if (result) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t result = (unsigned __int8 *)sub_1A88BB094(result, v13, &v14);
    if (!v4) {
      return (unsigned __int8 *)v14;
    }
  }
  return result;
}

unsigned char *sub_1A88DD34C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result | 0x20;
  return result;
}

uint64_t MediaType.init(type:subtype:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_1A8A76618();
  uint64_t v12 = v10;
  if ((v11 != 0x72617069746C756DLL || v10 != 0xE900000000000074) && (sub_1A8A78588() & 1) == 0)
  {
    if (v11 == 0x746163696C707061 && v12 == 0xEB000000006E6F69 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 1;
    }
    else if (v11 == 0x6F69647561 && v12 == 0xE500000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 2;
    }
    else if (v11 == 0x6567616D69 && v12 == 0xE500000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 3;
    }
    else if (v11 == 0x6567617373656DLL && v12 == 0xE700000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 4;
    }
    else if (v11 == 1954047348 && v12 == 0xE400000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 5;
    }
    else if (v11 == 0x6F65646976 && v12 == 0xE500000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 6;
    }
    else if (v11 == 1953394534 && v12 == 0xE400000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 7;
    }
    else if (v11 == 0x656C706D617865 && v12 == 0xE700000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 8;
    }
    else
    {
      if (v11 == 0x6C65646F6DLL && v12 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = sub_1A8A78588();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          char v17 = 10;
          goto LABEL_25;
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      char v17 = 9;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v15 = sub_1A8A76618();
    uint64_t v16 = v14;
    if (v15 == 0x646578696DLL && v14 == 0xE500000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 1;
      goto LABEL_25;
    }
    if (v15 == 0x747365676964 && v16 == 0xE600000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 2;
      goto LABEL_25;
    }
    if (v15 == 0x74616E7265746C61 && v16 == 0xEB00000000657669 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 3;
      goto LABEL_25;
    }
    if (v15 == 0x646574616C6572 && v16 == 0xE700000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 4;
      goto LABEL_25;
    }
    if (v15 == 0x74726F706572 && v16 == 0xE600000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 5;
      goto LABEL_25;
    }
    if (v15 == 0x64656E676973 && v16 == 0xE600000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 6;
      goto LABEL_25;
    }
    if (v15 == 0x6574707972636E65 && v16 == 0xE900000000000064 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 7;
      goto LABEL_25;
    }
    if (v15 == 0x7461642D6D726F66 && v16 == 0xE900000000000061 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 8;
      goto LABEL_25;
    }
    if (v15 == 0x2D646578696D2D78 && v16 == 0xEF6563616C706572 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 9;
      goto LABEL_25;
    }
    if (v15 == 0x676E617265747962 && v16 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
LABEL_103:
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a3 = 0;
      a4 = 0;
      char v17 = 0;
      a2 = 10;
      goto LABEL_25;
    }
    char v19 = sub_1A8A78588();
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_103;
    }
    char v17 = 0;
LABEL_16:
    a1 = a3;
    a2 = a4;
    a3 = 0;
    a4 = 0;
    goto LABEL_25;
  }
  a2 = 0;
  char v17 = 0;
  a1 = a3;
  a3 = 0;
LABEL_25:
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 32) = v17;
  return result;
}

uint64_t sub_1A88DDD2C(char a1)
{
  uint64_t result = 0x74616E7265746C61;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x756F64656C707061;
      break;
    case 2:
      uint64_t result = 0x676E617265747962;
      break;
    case 3:
      uint64_t result = 0x747365676964;
      break;
    case 4:
      uint64_t result = 0x6574707972636E65;
      break;
    case 5:
      uint64_t result = 0x7461642D6D726F66;
      break;
    case 6:
      uint64_t result = 0x646578696DLL;
      break;
    case 7:
      uint64_t result = 0x2D646578696D2D78;
      break;
    case 8:
      uint64_t result = 0x646574616C6572;
      break;
    case 9:
      uint64_t result = 0x74726F706572;
      break;
    case 10:
      uint64_t result = 0x64656E676973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88DDEA8(uint64_t *a1, uint64_t *a2)
{
  return _s9IMAP2MIME9MediaTypeO9MultipartO21__derived_enum_equalsySbAE_AEtFZ_0(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1A88DDEBC(uint64_t a1, uint64_t a2)
{
  sub_1A88AF2E4(a1, (uint64_t)v4);
  sub_1A88AF2E4(a2, (uint64_t)v5);
  return _s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1A88DDF08(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A88DE104(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A88DDD2C);
}

uint64_t sub_1A88DDF20(uint64_t a1, uint64_t a2)
{
  return sub_1A88DE1B4(a1, a2, (void (*)(uint64_t))sub_1A88DDD2C);
}

uint64_t sub_1A88DDF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A88DE238(a1, a2, a3, (void (*)(void))sub_1A88DDD2C);
}

uint64_t sub_1A88DDF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A88DE2A8(a1, a2, a3, (void (*)(uint64_t))sub_1A88DDD2C);
}

uint64_t sub_1A88DDF68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A88E13E4();
  *a1 = result;
  return result;
}

uint64_t sub_1A88DDF98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A88DDD2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A88DDFC4(char a1)
{
  uint64_t result = 0x72617069746C756DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x746163696C707061;
      break;
    case 2:
      uint64_t result = 0x6F69647561;
      break;
    case 3:
      uint64_t result = 0x6567616D69;
      break;
    case 4:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 5:
      uint64_t result = 1954047348;
      break;
    case 6:
      uint64_t result = 0x6F65646976;
      break;
    case 7:
      uint64_t result = 1953394534;
      break;
    case 8:
      uint64_t result = 0x656C706D617865;
      break;
    case 9:
      uint64_t result = 0x6C65646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88DE0EC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A88DE104(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A88DDFC4);
}

uint64_t sub_1A88DE104(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1A8A78588();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1A88DE19C(uint64_t a1, uint64_t a2)
{
  return sub_1A88DE1B4(a1, a2, (void (*)(uint64_t))sub_1A88DDFC4);
}

uint64_t sub_1A88DE1B4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1A8A78738();
  a3(v5);
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  return sub_1A8A787C8();
}

uint64_t sub_1A88DE220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A88DE238(a1, a2, a3, (void (*)(void))sub_1A88DDFC4);
}

uint64_t sub_1A88DE238(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88DE290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A88DE2A8(a1, a2, a3, (void (*)(uint64_t))sub_1A88DDFC4);
}

uint64_t sub_1A88DE2A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1A8A78738();
  a4(v6);
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  return sub_1A8A787C8();
}

uint64_t sub_1A88DE310@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A88E1430();
  *a1 = result;
  return result;
}

uint64_t sub_1A88DE340@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A88DDFC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t static MediaType.uniformType(filename:mimeType:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char *a3@<X8>)
{
  char v49 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748778);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  char v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v50 = sub_1A8A75298();
  uint64_t v10 = *(void *)(v50 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v50);
  uint64_t v45 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)&v43 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v46 = (char *)&v43 - v15;
  uint64_t v16 = (void *)sub_1A8A76538();
  id v17 = objc_msgSend(v16, sel_pathExtension);

  sub_1A8A76558();
  uint64_t v44 = sub_1A8A76618();
  uint64_t v48 = v18;
  swift_bridgeObjectRelease();
  char v19 = (void *)sub_1A8A76538();
  id v20 = objc_msgSend(v19, sel_pathExtension);

  sub_1A8A76558();
  uint64_t v21 = sub_1A8A76618();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v52 = a1;
  if ((a1 != 0x746163696C707061 || a2 != 0xEF70697A2F6E6F69) && (sub_1A8A78588() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24 || v21 == 7367034 && v23 == 0xE300000000000000 || (sub_1A8A78588() & 1) != 0)
  {
    uint64_t v25 = (void *)sub_1A8A76538();
    id v26 = objc_msgSend(v25, sel_stringByDeletingPathExtension);

    if (!v26)
    {
      sub_1A8A76558();
      id v26 = (id)sub_1A8A76538();
      swift_bridgeObjectRelease();
    }
    id v27 = objc_msgSend(v26, sel_pathExtension);

    sub_1A8A76558();
    uint64_t v21 = sub_1A8A76618();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v23 = v29;
    uint64_t v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0) {
      uint64_t v30 = v21 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v31 = v50;
    if (!v30)
    {
      uint64_t v21 = 7367034;
      swift_bridgeObjectRelease();
      unint64_t v23 = 0xE300000000000000;
    }
  }
  else
  {
LABEL_16:
    uint64_t v31 = v50;
  }
  uint64_t v32 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v32 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (!v32)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  String.declaredUTTypeFromExtension.getter(v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v31) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A88E0814((uint64_t)v9);
LABEL_23:
    uint64_t v33 = (uint64_t)v47;
LABEL_24:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A751E8();
    sub_1A8A75108();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v33, 1, v31) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1A88E0814(v33);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v49, 1, 1, v31);
    }
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v35 = v45;
    v34(v45, v33, v31);
    char v36 = sub_1A8A75278();
    swift_bridgeObjectRelease();
    if (v36)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v31);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v49, 1, 1, v31);
    }
    uint64_t v42 = v49;
    v34(v49, (uint64_t)v35, v31);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v42, 0, 1, v31);
  }
  uint64_t v50 = a2;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v38(v46, v9, v31);
  uint64_t v39 = v51;
  sub_1A8A75268();
  char v40 = sub_1A8A75248();
  id v41 = *(void (**)(char *, uint64_t))(v10 + 8);
  v41(v39, v31);
  if ((v40 & 1) == 0 && (v21 != v44 || v23 != v48) && (sub_1A8A78588() & 1) == 0)
  {
    if ((sub_1A8A78588() & 1) == 0)
    {
      String.declaredUTTypeFromExtension.getter(v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(char *, uint64_t))v41)(v46, v31);
    }
    v41(v46, v31);
    swift_bridgeObjectRelease();
    uint64_t v33 = (uint64_t)v47;
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v49;
  v38(v49, v46, v31);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v42, 0, 1, v31);
}

uint64_t String.declaredUTTypeFromExtension.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748778);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A8A75298();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A751E8();
  sub_1A8A75148();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A88E0814((uint64_t)v4);
LABEL_5:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A75238();
    return sub_1A8A75148();
  }
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v10(v9, v4, v5);
  if (sub_1A8A75278())
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    goto LABEL_5;
  }
  v10(a1, v9, v5);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
}

uint64_t MediaType.description.getter()
{
  sub_1A88BFC7C(v0, (void (*)(void, void, void, void, void))sub_1A88BFB9C);
  return _sSS9IMAP2MIMEEySSAA9MediaTypeOcfC_0(v0);
}

uint64_t sub_1A88DEC70()
{
  sub_1A88AF2E4(v0, (uint64_t)v2);
  sub_1A88BFC7C((uint64_t)v2, (void (*)(void, void, void, void, void))sub_1A88BFB9C);
  return _sSS9IMAP2MIMEEySSAA9MediaTypeOcfC_0((uint64_t)v2);
}

uint64_t MediaType.Multipart.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0x646578696DLL;
  switch(a2)
  {
    case 0:
      sub_1A88BFD7C(a1, 0);
      uint64_t result = 0;
      break;
    case 1:
      return result;
    case 2:
      uint64_t result = 0x747365676964;
      break;
    case 3:
      uint64_t result = 0x74616E7265746C61;
      break;
    case 4:
      uint64_t result = 0x646574616C6572;
      break;
    case 5:
      uint64_t result = 0x74726F706572;
      break;
    case 6:
      uint64_t result = 0x64656E676973;
      break;
    case 7:
      uint64_t result = 0x6574707972636E65;
      break;
    case 8:
      uint64_t result = 0x7461642D6D726F66;
      break;
    case 9:
      uint64_t result = 0x2D646578696D2D78;
      break;
    case 10:
      uint64_t result = 0x676E617265747962;
      break;
    case 11:
      uint64_t result = 0x756F64656C707061;
      break;
    default:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t result = a1;
      break;
  }
  return result;
}

uint64_t sub_1A88DF04C()
{
  return MediaType.Multipart.description.getter(*v0, v0[1]);
}

uint64_t sub_1A88DF054(uint64_t a1, uint64_t a2)
{
  char v4 = sub_1A88C1C9C(0, a1, a2);
  char v5 = sub_1A88C1C9C(1, a1, a2);
  char v6 = sub_1A88C1C9C(2, a1, a2);
  char v7 = sub_1A88C1C9C(3, a1, a2);
  if (v4 == 109 && v5 == 117 && v6 == 108 && v7 == 116)
  {
    uint64_t v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  if (v4 == 105)
  {
    if (v5 == 109 && v6 == 97 && v7 == 103)
    {
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 3;
      goto LABEL_6;
    }
  }
  else
  {
    if (v4 != 97)
    {
      BOOL v12 = v5 == 101;
      if (v4 == 109 && v5 == 101 && v6 == 115 && v7 == 115)
      {
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 4;
        goto LABEL_6;
      }
      goto LABEL_29;
    }
    if (v5 == 117)
    {
      if (v6 == 100 && v7 == 105)
      {
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 2;
        goto LABEL_6;
      }
    }
    else if (v5 == 112 && v6 == 112 && v7 == 108)
    {
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 1;
      goto LABEL_6;
    }
  }
  BOOL v12 = v5 == 101;
LABEL_29:
  switch(v4)
  {
    case 'e':
      if (v5 != 120 || v6 != 97 || v7 != 109) {
        return 10;
      }
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 8;
      break;
    case 'f':
      if (v5 != 111 || v6 != 110 || v7 != 116) {
        return 10;
      }
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 7;
      break;
    case 't':
      if (v6 != 120) {
        BOOL v12 = 0;
      }
      if (!v12 || v7 != 116) {
        return 10;
      }
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 5;
      break;
    case 'v':
      if (v5 != 105 || v6 != 100 || v7 != 101) {
        return 10;
      }
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 6;
      break;
    default:
      if (v4 != 109 || v5 != 111 || v6 != 100 || v7 != 101) {
        return 10;
      }
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 9;
      break;
  }
LABEL_6:
  uint64_t result = sub_1A88C05D4(v8, v9, v10);
  if (result == 10) {
    return 10;
  }
  return result;
}

uint64_t sub_1A88DF3A0(uint64_t a1, uint64_t a2)
{
  char v4 = sub_1A88C1C9C(0, a1, a2);
  char v5 = sub_1A88C1C9C(1, a1, a2);
  char v6 = sub_1A88C1C9C(2, a1, a2);
  char v7 = sub_1A88C1C9C(3, a1, a2);
  if (v4 == 100)
  {
    if (v5 == 105 && v6 == 103 && v7 == 101)
    {
      uint64_t v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 3;
      goto LABEL_16;
    }
  }
  else if (v4 == 109 && v5 == 105 && v6 == 120 && v7 == 101)
  {
    uint64_t v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 6;
    goto LABEL_16;
  }
  if (v4 == 97 && v5 == 108 && v6 == 116 && v7 == 101)
  {
    uint64_t v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 0;
  }
  else
  {
    switch(v4)
    {
      case 'b':
        if (v5 != 121 || v6 != 116 || v7 != 101) {
          return 11;
        }
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 2;
        break;
      case 'e':
        if (v5 != 110 || v6 != 99 || v7 != 114) {
          return 11;
        }
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 4;
        break;
      case 'f':
        if (v5 != 111 || v6 != 114 || v7 != 109) {
          return 11;
        }
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 5;
        break;
      case 'r':
        if (v5 != 101) {
          return 11;
        }
        if (v6 != 112)
        {
          if (v6 == 108 && v7 == 97)
          {
            uint64_t v8 = (char *)a1;
            uint64_t v9 = (char *)a2;
            uint64_t v10 = 8;
            break;
          }
          return 11;
        }
        if (v7 != 111) {
          return 11;
        }
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 9;
        break;
      case 's':
        if (v5 != 105 || v6 != 103 || v7 != 110) {
          return 11;
        }
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 10;
        break;
      case 'x':
        if (v5 != 45 || v6 != 109 || v7 != 105) {
          return 11;
        }
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 7;
        break;
      default:
        if (v4 != 97 || v5 != 112 || v6 != 112 || v7 != 108) {
          return 11;
        }
        uint64_t v8 = (char *)a1;
        uint64_t v9 = (char *)a2;
        uint64_t v10 = 1;
        break;
    }
  }
LABEL_16:
  uint64_t result = sub_1A88C0474(v8, v9, v10);
  if (result == 11) {
    return 11;
  }
  return result;
}

uint64_t sub_1A88DF710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8 = a2;
  uint64_t v9 = a1;
  uint64_t v11 = a5 & 1;
  uint64_t result = sub_1A88DF054(a1, a2);
  switch((char)result)
  {
    case 1:
      uint64_t v15 = 0;
      char v13 = 16;
      goto LABEL_14;
    case 2:
      uint64_t v15 = 0;
      char v13 = 32;
      goto LABEL_14;
    case 3:
      uint64_t v15 = 0;
      char v13 = 48;
      goto LABEL_14;
    case 4:
      uint64_t v15 = 0;
      char v13 = 64;
      goto LABEL_14;
    case 5:
      uint64_t v15 = 0;
      char v13 = 80;
      goto LABEL_14;
    case 6:
      uint64_t v15 = 0;
      char v13 = 96;
      goto LABEL_14;
    case 7:
      uint64_t v15 = 0;
      char v13 = 112;
      goto LABEL_14;
    case 8:
      uint64_t v15 = 0;
      char v13 = 0x80;
      goto LABEL_14;
    case 9:
      uint64_t v15 = 0;
      char v13 = -112;
LABEL_14:
      uint64_t v9 = a3;
      uint64_t v8 = a4;
      uint64_t v14 = v11;
      break;
    case 10:
      char v13 = v11 | 0xA0;
      uint64_t v14 = a3;
      uint64_t v15 = a4;
      break;
    default:
      if (v11)
      {
LABEL_17:
        uint64_t v15 = 0;
        char v13 = 0;
        uint64_t v14 = v11 | 0x80;
        uint64_t v9 = a3;
        uint64_t v8 = a4;
      }
      else
      {
        uint64_t result = sub_1A88DF3A0(a3, a4);
        uint64_t v9 = result;
        char v13 = 0;
        uint64_t v8 = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        switch((char)result)
        {
          case 1:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 1;
            break;
          case 2:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 2;
            break;
          case 3:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 3;
            break;
          case 4:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 4;
            break;
          case 5:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 5;
            break;
          case 6:
            goto LABEL_15;
          case 7:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 7;
            break;
          case 8:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 8;
            break;
          case 9:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 9;
            break;
          case 10:
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            uint64_t v9 = 10;
            break;
          case 11:
            goto LABEL_17;
          default:
            uint64_t v9 = 0;
            uint64_t v8 = 0;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v13 = 0;
            break;
        }
      }
      break;
  }
LABEL_15:
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v8;
  *(void *)(a6 + 16) = v14;
  *(void *)(a6 + 24) = v15;
  *(unsigned char *)(a6 + 32) = v13;
  return result;
}

uint64_t sub_1A88DF9BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a2 - result;
  if (!result) {
    uint64_t v4 = 0;
  }
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v4;
    uint64_t v21 = (unsigned char *)result;
    sub_1A88DCBE0((uint64_t)v22);
    uint64_t result = sub_1A8529F8C((uint64_t)v22, (uint64_t)v28, &qword_1E9745F70);
    long long v5 = 0uLL;
    if (v29) {
      goto LABEL_5;
    }
    uint64_t v8 = v28[0];
    uint64_t v9 = v28[1];
    uint64_t v10 = v28[2];
    if (!v20)
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      int v14 = 1;
      goto LABEL_14;
    }
    if (v20 > 0)
    {
      if (*v21 != 47) {
        goto LABEL_5;
      }
      sub_1A88DCBE0((uint64_t)v23);
      uint64_t v13 = v23[0];
      uint64_t v12 = v23[1];
      uint64_t v11 = v23[2];
      int v14 = v24;
      uint64_t result = sub_1A8529F8C((uint64_t)v23, (uint64_t)v27, &qword_1E9745F70);
      if (v27[32])
      {
        char v6 = -2;
        long long v7 = 0uLL;
        long long v5 = 0uLL;
        goto LABEL_30;
      }
      long long v5 = 0uLL;
      if (v20 != 1)
      {
LABEL_5:
        char v6 = -2;
        long long v7 = 0uLL;
LABEL_30:
        *(_OWORD *)a3 = v5;
        *(_OWORD *)(a3 + 16) = v7;
        *(unsigned char *)(a3 + 32) = v6;
        return result;
      }
LABEL_14:
      if (v10) {
        uint64_t v15 = v10 + v9;
      }
      else {
        uint64_t v15 = 0;
      }
      if (v10) {
        uint64_t v16 = v10 + v8;
      }
      else {
        uint64_t v16 = 0;
      }
      if (v11) {
        int v17 = v14;
      }
      else {
        int v17 = 1;
      }
      if (v17) {
        uint64_t v18 = 0;
      }
      else {
        uint64_t v18 = v11 + v13;
      }
      if (v17) {
        uint64_t v19 = 0;
      }
      else {
        uint64_t v19 = v11 + v12;
      }
      uint64_t result = sub_1A88DF710(v16, v15, v18, v19, v14, (uint64_t)v25);
      long long v5 = v25[0];
      long long v7 = v25[1];
      char v6 = v26;
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t _s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1A88AF2E4(a2, (uint64_t)v15);
  sub_1A88AF2E4(a1, (uint64_t)&v20);
  switch(v23)
  {
    case 1:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 1) {
        return 0;
      }
      goto LABEL_23;
    case 2:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 2) {
        return 0;
      }
      goto LABEL_23;
    case 3:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 3) {
        return 0;
      }
      goto LABEL_23;
    case 4:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 4) {
        return 0;
      }
      goto LABEL_23;
    case 5:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 5) {
        return 0;
      }
      goto LABEL_23;
    case 6:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 6) {
        return 0;
      }
      goto LABEL_23;
    case 7:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 7) {
        return 0;
      }
      goto LABEL_23;
    case 8:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 8) {
        return 0;
      }
      goto LABEL_23;
    case 9:
      unint64_t v6 = *((void *)&v20 + 1);
      unint64_t v7 = v20;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 9) {
        return 0;
      }
LABEL_23:
      if (!v6)
      {
        if (*((void *)&v16 + 1)) {
          return 0;
        }
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        return 1;
      }
      if (!*((void *)&v16 + 1)) {
        return 0;
      }
      if (__PAIR128__(v6, v7) == v16) {
        return 1;
      }
      goto LABEL_26;
    case 10:
      long long v9 = v20;
      uint64_t v11 = v21;
      uint64_t v10 = v22;
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19 != 10) {
        return 0;
      }
      uint64_t v13 = v17;
      uint64_t v12 = v18;
      if (v9 != v16)
      {
        char v14 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
      if (v10)
      {
        if (v12)
        {
          if (v11 != v13 || v10 != v12)
          {
LABEL_26:
            if ((sub_1A8A78588() & 1) == 0) {
              return 0;
            }
          }
          return 1;
        }
      }
      else if (!v12)
      {
        return 1;
      }
      return 0;
    default:
      sub_1A88E0EB8(&v20, &v24);
      sub_1A88AF2E4(a2, (uint64_t)&v16);
      if (v19) {
        return 0;
      }
      unint64_t v4 = *((void *)&v16 + 1);
      unint64_t v5 = v16;
      sub_1A88E0EB8(&v24, &v25);
      switch(*((void *)&v25 + 1))
      {
        case 1:
          return v4 == 1;
        case 2:
          return v4 == 2;
        case 3:
          return v4 == 3;
        case 4:
          return v4 == 4;
        case 5:
          return v4 == 5;
        case 6:
          return v4 == 6;
        case 7:
          return v4 == 7;
        case 8:
          return v4 == 8;
        case 9:
          return v4 == 9;
        case 0xALL:
          return v4 == 10;
        case 0xBLL:
          return v4 == 11;
        default:
          if (v4 - 1 < 0xB) {
            return 0;
          }
          if (!*((void *)&v25 + 1))
          {
            if (!v4) {
              return 1;
            }
            sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
            return 0;
          }
          if (!v4) {
            return 0;
          }
          if (v25 == __PAIR128__(v4, v5)) {
            return 1;
          }
          break;
      }
      goto LABEL_26;
  }
}

uint64_t _s9IMAP2MIME9MediaTypeO9MultipartO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(a2)
  {
    case 1:
      return a4 == 1;
    case 2:
      return a4 == 2;
    case 3:
      return a4 == 3;
    case 4:
      return a4 == 4;
    case 5:
      return a4 == 5;
    case 6:
      return a4 == 6;
    case 7:
      return a4 == 7;
    case 8:
      return a4 == 8;
    case 9:
      return a4 == 9;
    case 10:
      return a4 == 10;
    case 11:
      return a4 == 11;
    default:
      if ((unint64_t)(a4 - 1) < 0xB) {
        return 0;
      }
      if (a2) {
        return a4 && (a1 == a3 && a2 == a4 || (sub_1A8A78588() & 1) != 0);
      }
      if (!a4) {
        return 1;
      }
      sub_1A88BFD7C(a1, 0);
      return 0;
  }
}

uint64_t _sSS9IMAP2MIMEEySSAA9MediaTypeOcfC_0(uint64_t a1)
{
  sub_1A88AF2E4(a1, (uint64_t)&v9);
  switch(v12)
  {
    case 1:
      uint64_t v2 = 0x746163696C707061;
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        strcpy((char *)v8, "application/");
        BYTE5(v8[1]) = 0;
        HIWORD(v8[1]) = -5120;
        goto LABEL_26;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      break;
    case 2:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v3 = 0x2F6F69647561;
        goto LABEL_24;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      uint64_t v2 = 0x6F69647561;
      break;
    case 3:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v3 = 0x2F6567616D69;
        goto LABEL_24;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      uint64_t v2 = 0x6567616D69;
      break;
    case 4:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v4 = 0x67617373656DLL;
        goto LABEL_21;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      uint64_t v2 = 0x6567617373656DLL;
      break;
    case 5:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v5 = 1954047348;
        goto LABEL_18;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      uint64_t v2 = 1954047348;
      break;
    case 6:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v3 = 0x2F6F65646976;
        goto LABEL_24;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      uint64_t v2 = 0x6F65646976;
      break;
    case 7:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v5 = 1953394534;
LABEL_18:
        uint64_t v3 = v5 & 0xFFFF0000FFFFFFFFLL | 0x2F00000000;
        unint64_t v6 = 0xE500000000000000;
        goto LABEL_25;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      uint64_t v2 = 1953394534;
      break;
    case 8:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v4 = 0x6C706D617865;
LABEL_21:
        uint64_t v3 = v4 & 0xFFFFFFFFFFFFLL | 0x2F65000000000000;
        unint64_t v6 = 0xE800000000000000;
        goto LABEL_25;
      }
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      uint64_t v2 = 0x656C706D617865;
      break;
    case 9:
      sub_1A8529F8C((uint64_t)&v9, (uint64_t)v13, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v13, (uint64_t)&v14, (uint64_t *)&unk_1E9743F08);
      if (v15)
      {
        uint64_t v3 = 0x2F6C65646F6DLL;
LABEL_24:
        unint64_t v6 = 0xE600000000000000;
LABEL_25:
        v8[0] = v3;
        v8[1] = v6;
LABEL_26:
        sub_1A8A767E8();
        sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
        uint64_t v2 = v8[0];
      }
      else
      {
        sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
        uint64_t v2 = 0x6C65646F6DLL;
      }
      break;
    case 10:
      uint64_t v2 = v9;
      if (v11)
      {
        uint64_t v14 = v9;
        unint64_t v15 = v10;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A767E8();
        sub_1A8A767E8();
        goto LABEL_43;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      break;
    default:
      if (v10)
      {
        uint64_t v14 = 0x72617069746C756DLL;
        unint64_t v15 = 0xEA00000000002F74;
        switch(v10)
        {
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
          case 6uLL:
          case 7uLL:
          case 8uLL:
          case 9uLL:
          case 0xAuLL:
          case 0xBuLL:
            break;
          default:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            break;
        }
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
LABEL_43:
        sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
        uint64_t v2 = v14;
      }
      else
      {
        uint64_t v2 = 0x72617069746C756DLL;
        sub_1A88BFC7C(a1, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      }
      break;
  }
  return v2;
}

uint64_t sub_1A88E0814(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748778);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for MediaType(uint64_t a1)
{
  return sub_1A88BFCBC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for MediaType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A88BFB9C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MediaType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A88BFB9C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1A88BFCBC(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MediaType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1A88BFCBC(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 246);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0xA) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF5)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 246;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A88E0A50(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaType()
{
  return &type metadata for MediaType;
}

unint64_t destroy for MediaType.Multipart(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9IMAP2MIME9MediaTypeO9MultipartOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

void *assignWithCopy for MediaType.Multipart(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  unsigned int v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  unsigned int v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MediaType.Multipart(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if ((v5 + 1) > 1) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaType.Multipart(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF3 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483636);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 0xC) {
    return (v3 - 11);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MediaType.Multipart(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF4)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483636;
    if (a3 >= 0x7FFFFFF4) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF4) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 11;
    }
  }
  return result;
}

uint64_t sub_1A88E0CC8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1A88E0CE8(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaType.Multipart()
{
  return &type metadata for MediaType.Multipart;
}

uint64_t sub_1A88E0D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A88AF2E4(a1, (uint64_t)&v16);
  unsigned __int8 v3 = v20;
  int v4 = v20 >> 4;
  switch(v4)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      v20 &= 0xFu;
      int v5 = &v16;
      goto LABEL_3;
    case 10:
      v20 &= 0xFu;
      long long v8 = v16;
      char v9 = v17;
      if (v3) {
        goto LABEL_6;
      }
      uint64_t v14 = v18;
      uint64_t v13 = v19;
      uint64_t v6 = sub_1A88CCDF4(v16, v17);
      uint64_t v7 = v15;
      uint64_t result = sub_1A88CCDF4(v14, v13);
      break;
    default:
      v20 &= 0xFu;
      sub_1A88CC024((uint64_t)&v16, (uint64_t)v21);
      sub_1A88CC024((uint64_t)v21, (uint64_t)v22);
      if (v23 < 0)
      {
        v23 &= ~0x80u;
        int v5 = (unsigned __int8 **)v22;
LABEL_3:
        sub_1A8529F8C((uint64_t)v5, (uint64_t)v24, (uint64_t *)&unk_1E9743F40);
        sub_1A8529F8C((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_1E9743F40);
        if (v26)
        {
          uint64_t v6 = 0;
          uint64_t v7 = 0;
        }
        else
        {
          long long v8 = (unsigned __int8 *)v25[0];
          char v9 = (unsigned __int8 *)v25[1];
LABEL_6:
          uint64_t v6 = sub_1A88CCDF4(v8, v9);
          uint64_t v7 = v10;
        }
        uint64_t result = 0;
        uint64_t v12 = 0;
      }
      else
      {
        uint64_t v6 = 0;
        uint64_t result = 0;
        uint64_t v12 = 0;
        uint64_t v7 = qword_1A8B04120[v22[0]];
      }
      break;
  }
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = result;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v4;
  return result;
}

_OWORD *sub_1A88E0EB8(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t getEnumTagSinglePayload for UnsafeMediaType.Multipart(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for UnsafeMediaType.Multipart(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1A88E0F6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1A88E0F78(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1A88E0F88(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for UnsafeMediaType.Multipart()
{
  return &type metadata for UnsafeMediaType.Multipart;
}

uint64_t getEnumTagSinglePayload for UnsafeMediaType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x76 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 118);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 32) >> 4) & 0xFFFFFF8F | (16 * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 7))) ^ 0x7F;
  if (v3 >= 0x75) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for UnsafeMediaType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x75)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 118;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x76) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x76) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 4) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1A88E105C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 4;
}

uint64_t sub_1A88E1068(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0xFu;
  return result;
}

uint64_t sub_1A88E1078(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (16 * a2);
  return result;
}

ValueMetadata *type metadata accessor for UnsafeMediaType()
{
  return &type metadata for UnsafeMediaType;
}

unsigned char *storeEnumTagSinglePayload for UnsafeMediaType.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88E1168);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeMediaType.Kind()
{
  return &type metadata for UnsafeMediaType.Kind;
}

uint64_t getEnumTagSinglePayload for UnsafeMediaType.Multipart.Known(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UnsafeMediaType.Multipart.Known(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88E12FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeMediaType.Multipart.Known()
{
  return &type metadata for UnsafeMediaType.Multipart.Known;
}

unint64_t sub_1A88E1338()
{
  unint64_t result = qword_1E974E330;
  if (!qword_1E974E330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E330);
  }
  return result;
}

unint64_t sub_1A88E1390()
{
  unint64_t result = qword_1E974E338;
  if (!qword_1E974E338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E338);
  }
  return result;
}

uint64_t sub_1A88E13E4()
{
  unint64_t v0 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A88E1430()
{
  unint64_t v0 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A88E147C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void v5[2] = a3;
  v5[3] = a1;
  v5[4] = a2;
  return sub_1A88E25A4(sub_1A88E5A7C, (uint64_t)v5, a3, a4);
}

uint64_t Message.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for Message.Data(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for Message.Data(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9743BC0);
}

uint64_t sub_1A88E1524(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1A8A75E28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)&v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (Message.isEmpty.getter())
  {
    a1((uint64_t *)&v25, 0, 0);
    if (v3) {
      return v14 & 1;
    }
    goto LABEL_21;
  }
  sub_1A88DB3F8(v2, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v17 = *v13;
    unint64_t v16 = v13[1];
    switch(v16 >> 62)
    {
      case 1uLL:
        if (v17 >> 32 < (int)v17) {
          __break(1u);
        }
        swift_retain();
        char v18 = sub_1A88E3E0C((int)v17, v17 >> 32, a1);
        sub_1A85135AC(v17, v16);
        goto LABEL_14;
      case 2uLL:
        uint64_t v20 = *(void *)(v17 + 16);
        uint64_t v19 = *(void *)(v17 + 24);
        swift_retain();
        swift_retain();
        char v18 = sub_1A88E3E0C(v20, v19, a1);
        swift_release();
        swift_release();
LABEL_14:
        sub_1A85135AC(v17, v16);
        if (!v4) {
          goto LABEL_20;
        }
        return v14 & 1;
      case 3uLL:
        memset(v24, 0, sizeof(v24));
        a1((uint64_t *)&v23, (uint64_t)v24, (uint64_t)v24);
        if (v3)
        {
          sub_1A85135AC(v17, v16);
          return v14 & 1;
        }
        sub_1A85135AC(v17, v16);
LABEL_19:
        char v18 = v23;
LABEL_20:
        char v25 = v18 & 1;
        break;
      default:
        *(void *)long long v24 = *v13;
        *(_WORD *)&v24[8] = v16;
        v24[10] = BYTE2(v16);
        v24[11] = BYTE3(v16);
        v24[12] = BYTE4(v16);
        v24[13] = BYTE5(v16);
        a1((uint64_t *)&v23, (uint64_t)v24, (uint64_t)&v24[BYTE6(v16)]);
        sub_1A85135AC(v17, v16);
        if (!v3) {
          goto LABEL_19;
        }
        return v14 & 1;
    }
    goto LABEL_21;
  }
  uint64_t v15 = (*(uint64_t (**)(unsigned char *, uint64_t *, uint64_t))(v8 + 32))(v10, v13, v7);
  MEMORY[0x1F4188790](v15);
  *(void *)&v22[-32] = v10;
  *(void *)&v22[-24] = a1;
  *(void *)&v22[-16] = a2;
  sub_1A8A75D88();
  if (!v3)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_21:
    char v14 = v25;
    return v14 & 1;
  }
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  return v14 & 1;
}

uint64_t sub_1A88E1964@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1A8A75E28();
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = a2;
  uint64_t v28 = a3;
  if (Message.isEmpty.getter()) {
    return ((uint64_t (*)(void, void, void, void))a2)(0, 0, 0, 0);
  }
  v23[1] = a3;
  _OWORD v23[2] = a4;
  sub_1A88DB3F8(a1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v24;
    uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v8);
    MEMORY[0x1F4188790](v16);
    v23[-4] = v10;
    v23[-3] = sub_1A88E5B9C;
    v23[-2] = &v26;
    sub_1A8A75D88();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v8);
  }
  else
  {
    uint64_t v18 = *(void *)v13;
    unint64_t v17 = *((void *)v13 + 1);
    switch(v17 >> 62)
    {
      case 1uLL:
        if (v18 >> 32 < (int)v18) {
          __break(1u);
        }
        sub_1A8512DFC(*(void *)v13, *((void *)v13 + 1));
        sub_1A88E3EC0((int)v18, v18 >> 32, v17 & 0x3FFFFFFFFFFFFFFFLL, a2);
        sub_1A85135AC(v18, v17);
        break;
      case 2uLL:
        uint64_t v21 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        swift_retain();
        swift_retain();
        sub_1A88E3EC0(v21, v22, v17 & 0x3FFFFFFFFFFFFFFFLL, a2);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v25, 0, 14);
        uint64_t v20 = (char *)v25;
        uint64_t v19 = 0;
        goto LABEL_11;
      default:
        v25[0] = *(void *)v13;
        LOWORD(v25[1]) = v17;
        BYTE2(v25[1]) = BYTE2(v17);
        BYTE3(v25[1]) = BYTE3(v17);
        uint64_t v19 = BYTE6(v17);
        BYTE4(v25[1]) = BYTE4(v17);
        uint64_t v20 = (char *)v25 + BYTE6(v17);
        BYTE5(v25[1]) = BYTE5(v17);
LABEL_11:
        ((void (*)(void, uint64_t, void *, char *))a2)(0, v19, v25, v20);
        break;
    }
    return sub_1A85135AC(v18, v17);
  }
}

uint64_t sub_1A88E1D74@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1A8A75E28();
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = a2;
  uint64_t v28 = a3;
  if (Message.isEmpty.getter()) {
    return ((uint64_t (*)(void, void, void, void))a2)(0, 0, 0, 0);
  }
  v23[1] = a3;
  _OWORD v23[2] = a4;
  sub_1A88DB3F8(a1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v24;
    uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v8);
    MEMORY[0x1F4188790](v16);
    v23[-4] = v10;
    v23[-3] = sub_1A88E3DD4;
    v23[-2] = &v26;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740D78);
    sub_1A8A75D88();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v8);
  }
  else
  {
    uint64_t v18 = *(void *)v13;
    unint64_t v17 = *((void *)v13 + 1);
    switch(v17 >> 62)
    {
      case 1uLL:
        if (v18 >> 32 < (int)v18) {
          __break(1u);
        }
        sub_1A8512DFC(*(void *)v13, *((void *)v13 + 1));
        sub_1A88E3EC0((int)v18, v18 >> 32, v17 & 0x3FFFFFFFFFFFFFFFLL, a2);
        sub_1A85135AC(v18, v17);
        break;
      case 2uLL:
        uint64_t v21 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        swift_retain();
        swift_retain();
        sub_1A88E3EC0(v21, v22, v17 & 0x3FFFFFFFFFFFFFFFLL, a2);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v25, 0, 14);
        uint64_t v20 = (char *)v25;
        uint64_t v19 = 0;
        goto LABEL_11;
      default:
        v25[0] = *(void *)v13;
        LOWORD(v25[1]) = v17;
        BYTE2(v25[1]) = BYTE2(v17);
        BYTE3(v25[1]) = BYTE3(v17);
        uint64_t v19 = BYTE6(v17);
        BYTE4(v25[1]) = BYTE4(v17);
        uint64_t v20 = (char *)v25 + BYTE6(v17);
        BYTE5(v25[1]) = BYTE5(v17);
LABEL_11:
        ((void (*)(void, uint64_t, void *, char *))a2)(0, v19, v25, v20);
        break;
    }
    return sub_1A85135AC(v18, v17);
  }
}

uint64_t sub_1A88E218C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1A8A75E28();
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = a2;
  uint64_t v28 = a3;
  if (Message.isEmpty.getter()) {
    return ((uint64_t (*)(void, void, void, void))a2)(0, 0, 0, 0);
  }
  v23[1] = a3;
  _OWORD v23[2] = a4;
  sub_1A88DB3F8(a1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v24;
    uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v8);
    MEMORY[0x1F4188790](v16);
    v23[-4] = v10;
    v23[-3] = sub_1A88E3DD4;
    v23[-2] = &v26;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E340);
    sub_1A8A75D88();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v8);
  }
  else
  {
    uint64_t v18 = *(void *)v13;
    unint64_t v17 = *((void *)v13 + 1);
    switch(v17 >> 62)
    {
      case 1uLL:
        if (v18 >> 32 < (int)v18) {
          __break(1u);
        }
        sub_1A8512DFC(*(void *)v13, *((void *)v13 + 1));
        sub_1A88E3EC0((int)v18, v18 >> 32, v17 & 0x3FFFFFFFFFFFFFFFLL, a2);
        sub_1A85135AC(v18, v17);
        break;
      case 2uLL:
        uint64_t v21 = *(void *)(v18 + 16);
        uint64_t v22 = *(void *)(v18 + 24);
        swift_retain();
        swift_retain();
        sub_1A88E3EC0(v21, v22, v17 & 0x3FFFFFFFFFFFFFFFLL, a2);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v25, 0, 14);
        uint64_t v20 = (char *)v25;
        uint64_t v19 = 0;
        goto LABEL_11;
      default:
        v25[0] = *(void *)v13;
        LOWORD(v25[1]) = v17;
        BYTE2(v25[1]) = BYTE2(v17);
        BYTE3(v25[1]) = BYTE3(v17);
        uint64_t v19 = BYTE6(v17);
        BYTE4(v25[1]) = BYTE4(v17);
        uint64_t v20 = (char *)v25 + BYTE6(v17);
        BYTE5(v25[1]) = BYTE5(v17);
LABEL_11:
        ((void (*)(void, uint64_t, void *, char *))a2)(0, v19, v25, v20);
        break;
    }
    return sub_1A85135AC(v18, v17);
  }
}

uint64_t sub_1A88E25A4@<X0>(uint64_t (*a1)(void, void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v8 = sub_1A8A75E28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v12);
  char v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (Message.isEmpty.getter()) {
    return a1(0, 0);
  }
  uint64_t v21 = a4;
  uint64_t v22 = a2;
  char v23 = a1;
  uint64_t v16 = v24;
  sub_1A88DB3F8(v4, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v11, v14, v8);
    MEMORY[0x1F4188790](v17);
    *(&v21 - 4) = v16;
    *(&v21 - 3) = (uint64_t)v11;
    uint64_t v18 = v22;
    *(&v21 - 2) = (uint64_t)v23;
    *(&v21 - 1) = v18;
    sub_1A8A75D88();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v19 = *v14;
    unint64_t v20 = v14[1];
    sub_1A8A74A38();
    return sub_1A85135AC(v19, v20);
  }
}

uint64_t Message.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for Message.Data(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static Message.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  v3[2] = a2;
  return sub_1A88E1524((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88E2CDC, (uint64_t)v3) & 1;
}

uint64_t sub_1A88E28D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  char v36 = a4;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  unint64_t v8 = sub_1A8A75E28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t result = Message.isEmpty.getter();
  if ((result & 1) == 0)
  {
    sub_1A88DB3F8(a3, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = (*(uint64_t (**)(uint64_t, char *, unint64_t))(v9 + 32))(v11, v14, v8);
      MEMORY[0x1F4188790](v17);
      *(&v36 - 4) = (BOOL *)v11;
      *(&v36 - 3) = (BOOL *)sub_1A88E5AE0;
      *(&v36 - 2) = (BOOL *)&v38;
      sub_1A8A75D88();
      if (!v4)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t))(v9 + 8))(v11, v8);
        BOOL v16 = v37;
        goto LABEL_46;
      }
      uint64_t v34 = (*(uint64_t (**)(uint64_t, unint64_t))(v9 + 8))(v11, v8);
      __break(1u);
      goto LABEL_52;
    }
    uint64_t v11 = *(void *)v14;
    unint64_t v8 = *((void *)v14 + 1);
    BOOL v16 = 0;
    switch(v8 >> 62)
    {
      case 1uLL:
        if (v11 >> 32 < (int)v11)
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
        }
        else
        {
          sub_1A8512DFC(*(void *)v14, *((void *)v14 + 1));
          uint64_t v18 = sub_1A8A74588();
          if (!v18) {
            goto LABEL_11;
          }
          uint64_t v19 = sub_1A8A745B8();
          if (!__OFSUB__((int)v11, v19))
          {
            v18 += (int)v11 - v19;
LABEL_11:
            uint64_t v20 = sub_1A8A745A8();
            uint64_t v21 = a2 - a1;
            if (!a1) {
              uint64_t v21 = 0;
            }
            if (v18)
            {
              BOOL v16 = 0;
              if (v20 >= (v11 >> 32) - (int)v11) {
                uint64_t v22 = (v11 >> 32) - (int)v11;
              }
              else {
                uint64_t v22 = v20;
              }
              if (!a1 || v21 != v22) {
                goto LABEL_37;
              }
              BOOL v23 = a1 == v18;
            }
            else
            {
              BOOL v23 = (v21 | a1) == 0;
            }
            BOOL v16 = v23;
LABEL_37:
            uint64_t v34 = v11;
            unint64_t v35 = v8;
            if (v4)
            {
LABEL_52:
              sub_1A85135AC(v34, v35);
LABEL_54:
              sub_1A85135AC(v11, v8);
              __break(1u);
              JUMPOUT(0x1A88E2CCCLL);
            }
            sub_1A85135AC(v11, v8);
LABEL_45:
            uint64_t result = sub_1A85135AC(v11, v8);
            goto LABEL_46;
          }
        }
        __break(1u);
        return result;
      case 2uLL:
        uint64_t v24 = *(void *)(v11 + 16);
        uint64_t v25 = *(void *)(v11 + 24);
        swift_retain();
        swift_retain();
        uint64_t v26 = sub_1A8A74588();
        if (!v26) {
          goto LABEL_23;
        }
        uint64_t v27 = sub_1A8A745B8();
        if (__OFSUB__(v24, v27)) {
          goto LABEL_49;
        }
        v26 += v24 - v27;
LABEL_23:
        BOOL v28 = __OFSUB__(v25, v24);
        uint64_t v29 = v25 - v24;
        if (v28) {
          goto LABEL_48;
        }
        uint64_t v30 = sub_1A8A745A8();
        uint64_t v31 = a2 - a1;
        if (!a1) {
          uint64_t v31 = 0;
        }
        if (v26)
        {
          BOOL v16 = 0;
          if (v30 >= v29) {
            uint64_t v32 = v29;
          }
          else {
            uint64_t v32 = v30;
          }
          if (!a1 || v31 != v32)
          {
LABEL_43:
            if (v4)
            {
              swift_release();
              swift_release();
              goto LABEL_54;
            }
            swift_release();
            swift_release();
            goto LABEL_45;
          }
          BOOL v33 = a1 == v26;
        }
        else
        {
          BOOL v33 = (v31 | a1) == 0;
        }
        BOOL v16 = v33;
        goto LABEL_43;
      default:
        goto LABEL_45;
    }
  }
  BOOL v16 = a1 == 0;
LABEL_46:
  *char v36 = v16;
  return result;
}

uint64_t sub_1A88E2CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  return sub_1A88E28D8(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_1A88E2CF8(uint64_t a1, uint64_t a2)
{
  v3[2] = a2;
  return sub_1A88E1524((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88E5D30, (uint64_t)v3) & 1;
}

BOOL Message.isEmpty.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A8A75E28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88DB3F8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1A88E2F78();
    sub_1A8A77198();
    sub_1A8A771E8();
    BOOL v9 = v15[1] == v15[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v10 = *(void *)v8;
    unint64_t v11 = *((void *)v8 + 1);
    switch(v11 >> 62)
    {
      case 1uLL:
        sub_1A85135AC(*(void *)v8, *((void *)v8 + 1));
        uint64_t v12 = (int)v10;
        uint64_t v13 = v10 >> 32;
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(v10 + 16);
        uint64_t v13 = *(void *)(v10 + 24);
        sub_1A85135AC(v10, v11);
        break;
      case 3uLL:
        sub_1A85135AC(*(void *)v8, *((void *)v8 + 1));
        uint64_t v13 = 0;
        uint64_t v12 = 0;
        break;
      default:
        sub_1A85135AC(*(void *)v8, *((void *)v8 + 1));
        uint64_t v12 = 0;
        uint64_t v13 = BYTE6(v11);
        break;
    }
    return v12 == v13;
  }
  return v9;
}

unint64_t sub_1A88E2F78()
{
  unint64_t result = qword_1E9743AA0;
  if (!qword_1E9743AA0)
  {
    sub_1A8A75E28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743AA0);
  }
  return result;
}

uint64_t Message.count.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A8A75E28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88DB3F8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v9 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v11 = *(void *)v8;
    unint64_t v10 = *((void *)v8 + 1);
    switch(v10 >> 62)
    {
      case 1uLL:
        sub_1A85135AC(v11, v10);
        if (__OFSUB__(HIDWORD(v11), v11))
        {
          __break(1u);
          JUMPOUT(0x1A88E31BCLL);
        }
        uint64_t v9 = HIDWORD(v11) - (int)v11;
        break;
      case 2uLL:
        uint64_t v13 = *(void *)(v11 + 16);
        uint64_t v12 = *(void *)(v11 + 24);
        sub_1A85135AC(v11, v10);
        BOOL v14 = __OFSUB__(v12, v13);
        uint64_t v9 = v12 - v13;
        if (v14)
        {
          __break(1u);
          goto LABEL_10;
        }
        break;
      case 3uLL:
LABEL_10:
        sub_1A85135AC(v11, v10);
        uint64_t v9 = 0;
        break;
      default:
        sub_1A85135AC(*(void *)v8, *((void *)v8 + 1));
        uint64_t v9 = BYTE6(v10);
        break;
    }
  }
  return v9;
}

uint64_t *initializeBufferWithCopyOfBuffer for Message(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for Message.Data(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      uint64_t v8 = *a2;
      unint64_t v7 = a2[1];
      sub_1A8512DFC(v8, v7);
      *a1 = v8;
      a1[1] = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Message(uint64_t *a1)
{
  type metadata accessor for Message.Data(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1A8A75E28();
    uint64_t v3 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    uint64_t v5 = *a1;
    unint64_t v6 = a1[1];
    return sub_1A85135AC(v5, v6);
  }
}

uint64_t *initializeWithCopy for Message(uint64_t *a1, uint64_t *a2)
{
  type metadata accessor for Message.Data(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1A8A75E28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v6 = *a2;
    unint64_t v5 = a2[1];
    sub_1A8512DFC(v6, v5);
    *a1 = v6;
    a1[1] = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for Message(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1A88E350C((uint64_t)a1);
    type metadata accessor for Message.Data(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      uint64_t v6 = *a2;
      unint64_t v5 = a2[1];
      sub_1A8512DFC(v6, v5);
      *a1 = v6;
      a1[1] = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A88E350C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Message.Data(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for Message(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for Message.Data(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1A8A75E28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Message(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1A88E350C((uint64_t)a1);
    uint64_t v4 = type metadata accessor for Message.Data(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1A8A75E28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Message()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88E370C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message.Data(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Message()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88E378C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message.Data(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Message(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9743BD0);
}

uint64_t sub_1A88E381C()
{
  uint64_t result = type metadata accessor for Message.Data(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A88E38A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v9 = *a2;
      unint64_t v8 = a2[1];
      sub_1A8512DFC(v9, v8);
      *a1 = v9;
      a1[1] = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A88E39B0(uint64_t *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1A8A75E28();
    uint64_t v3 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    uint64_t v5 = *a1;
    unint64_t v6 = a1[1];
    return sub_1A85135AC(v5, v6);
  }
}

uint64_t *sub_1A88E3A40(uint64_t *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1A8A75E28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v6 = *a2;
    unint64_t v5 = a2[1];
    sub_1A8512DFC(v6, v5);
    *a1 = v6;
    a1[1] = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1A88E3AF8(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1A88E350C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      uint64_t v6 = *a2;
      unint64_t v5 = a2[1];
      sub_1A8512DFC(v6, v5);
      *a1 = v6;
      a1[1] = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1A88E3BC0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1A8A75E28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1A88E3C78(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A88E350C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1A8A75E28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A88E3D40()
{
  uint64_t result = sub_1A8A75E28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A88E3DD4(uint64_t a1, uint64_t a2)
{
  return sub_1A88E5B9C(a1, a2);
}

uint64_t sub_1A88E3DEC(uint64_t a1)
{
  return sub_1A88DB7DC(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
}

uint64_t sub_1A88E3E0C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_1A8A74588();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_1A8A745B8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v11 = sub_1A8A745A8();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = v8 + v12;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  a3(&v16, v8, v14);
  if (!v3) {
    char v15 = v16;
  }
  return v15 & 1;
}

uint64_t sub_1A88E3EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = sub_1A8A74588();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_1A8A745B8();
    if (__OFSUB__(a1, result)) {
      goto LABEL_15;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1A8A745A8();
    if (result >= v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = result;
    }
    if (v8) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    if ((v12 & 0x8000000000000000) == 0) {
      return a4(0);
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1A88E3F80(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  uint64_t v4 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  return v3(a1, a1 + v4);
}

void *sub_1A88E3FE4(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, void), void *a3)
{
  void *(*v24)(uint64_t *__return_ptr, void);
  void *v25;
  uint64_t v26;

  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1A8A75E28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v22[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  if (Message.isEmpty.getter())
  {
    uint64_t v14 = a3;
    ((void (*)(void *__return_ptr, void, void, void, void))a2)(v22, 0, 0, 0, 0);
    if (!v3) {
      return (void *)v22[0];
    }
  }
  else
  {
    sub_1A88DB3F8(a1, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      MEMORY[0x1F4188790](v15);
      *(&v21 - 4) = v10;
      *(&v21 - 3) = sub_1A88E5A4C;
      *(&v21 - 2) = &v23;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E348);
      uint64_t v14 = v10;
      sub_1A8A75D88();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if (!v3) {
        return (void *)v22[2];
      }
    }
    else
    {
      uint64_t v17 = *(void *)v13;
      unint64_t v16 = *((void *)v13 + 1);
      switch(v16 >> 62)
      {
        case 1uLL:
          if (v17 >> 32 < (int)v17) {
            __break(1u);
          }
          sub_1A8512DFC(*(void *)v13, *((void *)v13 + 1));
          uint64_t v14 = sub_1A88E4464((int)v17, v17 >> 32, v16 & 0x3FFFFFFFFFFFFFFFLL, a2);
          sub_1A85135AC(v17, v16);
          goto LABEL_16;
        case 2uLL:
          uint64_t v19 = *(void *)(v17 + 16);
          uint64_t v18 = *(void *)(v17 + 24);
          swift_retain();
          swift_retain();
          uint64_t v14 = sub_1A88E4464(v19, v18, v16 & 0x3FFFFFFFFFFFFFFFLL, a2);
          swift_release();
          swift_release();
          goto LABEL_16;
        case 3uLL:
          memset(v22, 0, 14);
          uint64_t v14 = a3;
          ((void (*)(void **__return_ptr, void, void, void *, void *))a2)(&v21, 0, 0, v22, v22);
          if (v3)
          {
LABEL_16:
            sub_1A85135AC(v17, v16);
          }
          else
          {
            sub_1A85135AC(v17, v16);
LABEL_18:
            uint64_t v14 = v21;
          }
          break;
        default:
          v22[0] = *(void *)v13;
          LOWORD(v22[1]) = v16;
          BYTE2(v22[1]) = BYTE2(v16);
          BYTE3(v22[1]) = BYTE3(v16);
          BYTE4(v22[1]) = BYTE4(v16);
          BYTE5(v22[1]) = BYTE5(v16);
          uint64_t v14 = a3;
          ((void (*)(void **__return_ptr, void, void, void *, char *))a2)(&v21, 0, BYTE6(v16), v22, (char *)v22 + BYTE6(v16));
          sub_1A85135AC(v17, v16);
          if (!v3) {
            goto LABEL_18;
          }
          return v14;
      }
    }
  }
  return v14;
}

void *sub_1A88E4464(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void))
{
  uint64_t result = (void *)sub_1A8A74588();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = (void *)sub_1A8A745B8();
    if (__OFSUB__(a1, result))
    {
LABEL_17:
      __break(1u);
      return result;
    }
    uint64_t v9 = (void *)((char *)v9 + a1 - (void)result);
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = (void *)sub_1A8A745A8();
  if ((uint64_t)result >= v11) {
    uint64_t v12 = (void *)v11;
  }
  else {
    uint64_t v12 = result;
  }
  if (v9) {
    unint64_t v13 = (unint64_t)v12;
  }
  else {
    unint64_t v13 = 0;
  }
  if ((v13 & 0x8000000000000000) != 0) {
    goto LABEL_16;
  }
  uint64_t result = a4(&v14, 0);
  if (!v4) {
    return (void *)v14;
  }
  return result;
}

void *sub_1A88E452C(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, void), void *a3)
{
  void *(*v22)(uint64_t *__return_ptr, void);
  void *v23;
  void *v24;
  void v25[4];

  v25[3] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1A8A75E28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = a2;
  char v23 = a3;
  if (Message.isEmpty.getter())
  {
    uint64_t v14 = a3;
    ((void (*)(void *__return_ptr, void, void, void, void))a2)(v25, 0, 0, 0, 0);
    if (!v3) {
      return (void *)v25[0];
    }
  }
  else
  {
    sub_1A88DB3F8(a1, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v13, v7);
      MEMORY[0x1F4188790](v15);
      *(void *)&v21[-32] = v10;
      *(void *)&v21[-24] = sub_1A88E5A4C;
      *(void *)&v21[-16] = v21;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97483C8);
      uint64_t v14 = v10;
      sub_1A8A75D88();
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      if (!v3) {
        return (void *)v25[2];
      }
    }
    else
    {
      uint64_t v17 = *(void *)v13;
      unint64_t v16 = *((void *)v13 + 1);
      switch(v16 >> 62)
      {
        case 1uLL:
          if (v17 >> 32 < (int)v17) {
            __break(1u);
          }
          sub_1A8512DFC(*(void *)v13, *((void *)v13 + 1));
          uint64_t v14 = sub_1A88E4464((int)v17, v17 >> 32, v16 & 0x3FFFFFFFFFFFFFFFLL, a2);
          sub_1A85135AC(v17, v16);
          goto LABEL_16;
        case 2uLL:
          uint64_t v19 = *(void *)(v17 + 16);
          uint64_t v18 = *(void *)(v17 + 24);
          swift_retain();
          swift_retain();
          uint64_t v14 = sub_1A88E4464(v19, v18, v16 & 0x3FFFFFFFFFFFFFFFLL, a2);
          swift_release();
          swift_release();
          goto LABEL_16;
        case 3uLL:
          memset(v25, 0, 14);
          uint64_t v14 = a3;
          ((void (*)(void **__return_ptr, void, void, void *, void *))a2)(&v24, 0, 0, v25, v25);
          if (v3)
          {
LABEL_16:
            sub_1A85135AC(v17, v16);
          }
          else
          {
            sub_1A85135AC(v17, v16);
LABEL_18:
            uint64_t v14 = v24;
          }
          break;
        default:
          v25[0] = *(void *)v13;
          LOWORD(v25[1]) = v16;
          BYTE2(v25[1]) = BYTE2(v16);
          BYTE3(v25[1]) = BYTE3(v16);
          BYTE4(v25[1]) = BYTE4(v16);
          BYTE5(v25[1]) = BYTE5(v16);
          uint64_t v14 = a3;
          ((void (*)(void **__return_ptr, void, void, void *, char *))a2)(&v24, 0, BYTE6(v16), v25, (char *)v25 + BYTE6(v16));
          sub_1A85135AC(v17, v16);
          if (!v3) {
            goto LABEL_18;
          }
          return v14;
      }
    }
  }
  return v14;
}

uint64_t sub_1A88E49AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, char *), uint64_t a9)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  sub_1A8645080(a5, sub_1A86409B8);
  uint64_t v15 = sub_1A8A74588();
  if (v15)
  {
    uint64_t v16 = sub_1A8A745B8();
    if (__OFSUB__(a1, v16)) {
      goto LABEL_21;
    }
    v15 += a1 - v16;
  }
  BOOL v17 = __OFSUB__(a2, a1);
  uint64_t v18 = a2 - a1;
  if (v17)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  uint64_t v19 = sub_1A8A745A8();
  if (v19 >= v18) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v19;
  }
  if (v15) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  if (v21 < 0) {
    goto LABEL_20;
  }
  uint64_t v22 = v15 + v20;
  uint64_t v23 = a6;
  if (v15) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = 0;
  }
  sub_1A8645080(a5, sub_1A86409B8);
  sub_1A88DC9C0(a4, 0, v21, v15);
  if (v26) {
    uint64_t v27 = v21;
  }
  else {
    uint64_t v27 = v25;
  }
  sub_1A88E7008(a4, 0, v21, v15, v24, v27);
  unsigned int v39 = v28;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_1A8644F84(a5, (uint64_t)v42);
  BOOL v35 = sub_1A8644FF4((uint64_t)v42) != 1;
  nullsub_1(v42);
  uint64_t v41 = 0;
  char v36 = a8;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = &v41;
  sub_1A8645080(a5, sub_1A86409B8);
  sub_1A88F466C(v23, v35, 1, (void (*)(void))sub_1A88E5D2C, v37, v36, a9, v39, v30, v32, v34, a5, v23, a7, (uint64_t (*)(unint64_t, unint64_t))v36, a9);
  sub_1A8645080(a5, sub_1A856B460);
  swift_release();
  sub_1A8645080(a5, sub_1A856B460);
  sub_1A8645080(a5, sub_1A856B460);
  return v41;
}

uint64_t sub_1A88E4C10(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, void (*a6)(uint64_t, char *), uint64_t a7)
{
  uint64_t v67 = a7;
  unint64_t v68 = a1;
  v81[23] = *MEMORY[0x1E4F143B8];
  uint64_t v12 = sub_1A8A75E28();
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v61 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A8645080(a3, sub_1A86409B8);
  v71[16] = a2;
  uint64_t v72 = a3;
  unsigned int v64 = a4;
  char v73 = a4;
  uint64_t v17 = a5;
  uint64_t v74 = a5;
  uint64_t v75 = a6;
  char v65 = a6;
  uint64_t v18 = v67;
  uint64_t v76 = v67;
  unint64_t v69 = sub_1A88B3F24;
  uint64_t v70 = v71;
  sub_1A8645080(a3, sub_1A86409B8);
  sub_1A8645080(a3, sub_1A86409B8);
  sub_1A8645080(a3, sub_1A86409B8);
  uint64_t v19 = v68;
  sub_1A8645080(a3, sub_1A86409B8);
  if (Message.isEmpty.getter())
  {
    sub_1A8645080(a3, sub_1A86409B8);
    sub_1A88DC9C0(a2, 0, 0, 0);
    if ((v21 & 1) == 0 && v20)
    {
      __break(1u);
LABEL_26:
      __break(1u);
    }
    sub_1A8644F84(a3, (uint64_t)v79);
    BOOL v22 = sub_1A8644FF4((uint64_t)v79) != 1;
    nullsub_1(v79);
    v78[0] = 0;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v78;
    sub_1A8645080(a3, sub_1A86409B8);
    sub_1A88F466C(v64, v22, 1, (void (*)(void))sub_1A88E5D2C, v23, v65, v18, a2, 0, 0, 0, a3, v64, v17, (uint64_t (*)(unint64_t, unint64_t))v65, v18);
    sub_1A8645080(a3, sub_1A856B460);
    swift_release();
    sub_1A8645080(a3, sub_1A856B460);
    uint64_t v24 = v78[0];
    uint64_t v25 = a3;
LABEL_23:
    sub_1A8645080(v25, sub_1A856B460);
  }
  else
  {
    sub_1A88DB3F8(v19, (uint64_t)v16);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v31 = *v16;
      unint64_t v30 = v16[1];
      switch(v30 >> 62)
      {
        case 1uLL:
          if (v31 >> 32 < (int)v31) {
            goto LABEL_26;
          }
          unint64_t v68 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          unint64_t v45 = v30;
          sub_1A8645080(a3, sub_1A86409B8);
          sub_1A8512DFC(v31, v45);
          uint64_t v24 = sub_1A88E49AC((int)v31, v31 >> 32, v68, a2, a3, v64, v17, v65, v18);
          sub_1A8645080(a3, sub_1A856B460);
          sub_1A85135AC(v31, v45);
          sub_1A85135AC(v31, v45);
LABEL_16:
          sub_1A8645080(a3, sub_1A856B460);
          goto LABEL_24;
        case 2uLL:
          uint64_t v46 = v30 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v47 = *(void *)(v31 + 16);
          uint64_t v48 = *(void *)(v31 + 24);
          unint64_t v68 = v30;
          sub_1A8645080(a3, sub_1A86409B8);
          swift_retain();
          swift_retain();
          uint64_t v24 = sub_1A88E49AC(v47, v48, v46, a2, a3, v64, v17, v65, v18);
          sub_1A8645080(a3, sub_1A856B460);
          swift_release();
          swift_release();
          sub_1A85135AC(v31, v68);
          goto LABEL_16;
        case 3uLL:
          memset(v78, 0, 14);
          unint64_t v68 = v30;
          sub_1A8645080(a3, sub_1A86409B8);
          uint64_t v63 = v31;
          sub_1A88DC9C0(a2, 0, 0, (uint64_t)v78);
          if (v50) {
            uint64_t v51 = 0;
          }
          else {
            uint64_t v51 = v49;
          }
          sub_1A88E7008(a2, 0, 0, (uint64_t)v78, (uint64_t)v78, v51);
          unsigned int v53 = v52;
          uint64_t v55 = v54;
          uint64_t v61 = v57;
          uint64_t v62 = v56;
          sub_1A8644F84(a3, (uint64_t)v80);
          BOOL v58 = sub_1A8644FF4((uint64_t)v80) != 1;
          nullsub_1(v80);
          uint64_t v77 = 0;
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = &v77;
          sub_1A8645080(a3, sub_1A86409B8);
          sub_1A88F466C(v64, v58, 1, (void (*)(void))sub_1A88E5D2C, v59, v65, v18, v53, v55, v62, v61, a3, v64, v17, (uint64_t (*)(unint64_t, unint64_t))v65, v18);
          goto LABEL_22;
        default:
          v78[0] = *v16;
          LOWORD(v78[1]) = v30;
          BYTE2(v78[1]) = BYTE2(v30);
          BYTE3(v78[1]) = BYTE3(v30);
          uint64_t v32 = BYTE6(v30);
          BYTE4(v78[1]) = BYTE4(v30);
          uint64_t v33 = (char *)v78 + BYTE6(v30);
          BYTE5(v78[1]) = BYTE5(v30);
          unint64_t v68 = v30;
          sub_1A8645080(a3, sub_1A86409B8);
          uint64_t v63 = v31;
          sub_1A88DC9C0(a2, 0, v32, (uint64_t)v78);
          if (v35) {
            uint64_t v36 = v32;
          }
          else {
            uint64_t v36 = v34;
          }
          sub_1A88E7008(a2, 0, v32, (uint64_t)v78, (uint64_t)v33, v36);
          unsigned int v38 = v37;
          uint64_t v40 = v39;
          uint64_t v61 = v42;
          uint64_t v62 = v41;
          sub_1A8644F84(a3, (uint64_t)v81);
          BOOL v43 = sub_1A8644FF4((uint64_t)v81) != 1;
          nullsub_1(v81);
          uint64_t v77 = 0;
          uint64_t v44 = swift_allocObject();
          *(void *)(v44 + 16) = &v77;
          sub_1A8645080(a3, sub_1A86409B8);
          sub_1A88F466C(v64, v43, 1, (void (*)(void))sub_1A88E5CF4, v44, v65, v18, v38, v40, v62, v61, a3, v64, v17, (uint64_t (*)(unint64_t, unint64_t))v65, v18);
LABEL_22:
          sub_1A8645080(a3, sub_1A856B460);
          swift_release();
          sub_1A8645080(a3, sub_1A856B460);
          sub_1A85135AC(v63, v68);
          uint64_t v24 = v77;
          uint64_t v25 = a3;
          goto LABEL_23;
      }
    }
    uint64_t v27 = v61;
    uint64_t v26 = v62;
    uint64_t v24 = v63;
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v62 + 32))(v61, v16, v63);
    MEMORY[0x1F4188790](v28);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97483C8);
    uint64_t v29 = v66;
    sub_1A8A75D88();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v24);
    sub_1A8645080(a3, sub_1A856B460);
    if (!v29) {
      uint64_t v24 = v78[2];
    }
  }
LABEL_24:
  sub_1A8645080(a3, sub_1A856B460);
  sub_1A8645080(a3, sub_1A856B460);
  sub_1A8645080(a3, sub_1A856B460);
  sub_1A8645080(a3, sub_1A856B460);
  return v24;
}

void *sub_1A88E55CC(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, void), void *a3)
{
  void *(*v24)(uint64_t *__return_ptr, void);
  void *v25;
  uint64_t v26;

  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1A8A75E28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v22[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  if (Message.isEmpty.getter())
  {
    uint64_t v14 = a3;
    ((void (*)(void *__return_ptr, void, void, void, void))a2)(v22, 0, 0, 0, 0);
    if (!v3) {
      return (void *)v22[0];
    }
  }
  else
  {
    sub_1A88DB3F8(a1, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      MEMORY[0x1F4188790](v15);
      *(&v21 - 4) = v10;
      *(&v21 - 3) = sub_1A88E5A4C;
      *(&v21 - 2) = &v23;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744548);
      uint64_t v14 = v10;
      sub_1A8A75D88();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if (!v3) {
        return (void *)v22[2];
      }
    }
    else
    {
      uint64_t v17 = *(void *)v13;
      unint64_t v16 = *((void *)v13 + 1);
      switch(v16 >> 62)
      {
        case 1uLL:
          if (v17 >> 32 < (int)v17) {
            __break(1u);
          }
          sub_1A8512DFC(*(void *)v13, *((void *)v13 + 1));
          uint64_t v14 = sub_1A88E4464((int)v17, v17 >> 32, v16 & 0x3FFFFFFFFFFFFFFFLL, a2);
          sub_1A85135AC(v17, v16);
          goto LABEL_16;
        case 2uLL:
          uint64_t v19 = *(void *)(v17 + 16);
          uint64_t v18 = *(void *)(v17 + 24);
          swift_retain();
          swift_retain();
          uint64_t v14 = sub_1A88E4464(v19, v18, v16 & 0x3FFFFFFFFFFFFFFFLL, a2);
          swift_release();
          swift_release();
          goto LABEL_16;
        case 3uLL:
          memset(v22, 0, 14);
          uint64_t v14 = a3;
          ((void (*)(void **__return_ptr, void, void, void *, void *))a2)(&v21, 0, 0, v22, v22);
          if (v3)
          {
LABEL_16:
            sub_1A85135AC(v17, v16);
          }
          else
          {
            sub_1A85135AC(v17, v16);
LABEL_18:
            uint64_t v14 = v21;
          }
          break;
        default:
          v22[0] = *(void *)v13;
          LOWORD(v22[1]) = v16;
          BYTE2(v22[1]) = BYTE2(v16);
          BYTE3(v22[1]) = BYTE3(v16);
          BYTE4(v22[1]) = BYTE4(v16);
          BYTE5(v22[1]) = BYTE5(v16);
          uint64_t v14 = a3;
          ((void (*)(void **__return_ptr, void, void, void *, char *))a2)(&v21, 0, BYTE6(v16), v22, (char *)v22 + BYTE6(v16));
          sub_1A85135AC(v17, v16);
          if (!v3) {
            goto LABEL_18;
          }
          return v14;
      }
    }
  }
  return v14;
}

void *sub_1A88E5A4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1A88E5C08(a1, a2, a3);
}

void *sub_1A88E5A64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1A88E5C6C(a1, a2);
}

uint64_t sub_1A88E5A7C(uint64_t result, uint64_t a2)
{
  if (result) {
    uint64_t v3 = a2 - result;
  }
  else {
    uint64_t v3 = 0;
  }
  if ((v3 & 0x8000000000000000) == 0) {
    return (*(uint64_t (**)(void))(v2 + 24))(0);
  }
  __break(1u);
  return result;
}

void *sub_1A88E5AC8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A88E5B24(a1, a2);
}

uint64_t sub_1A88E5AE0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24) - v4;
  if (!v4) {
    uint64_t v5 = 0;
  }
  BOOL v6 = (v5 | v4) == 0;
  if (v4) {
    BOOL v7 = v5 == a2 - result;
  }
  else {
    BOOL v7 = 0;
  }
  BOOL v8 = v7 && v4 == result;
  if (!result) {
    BOOL v8 = v6;
  }
  *a3 = v8;
  return result;
}

void *sub_1A88E5B24@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  void *(*v6)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  void *result;
  uint64_t v9;

  BOOL v6 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 24);
  BOOL v7 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  uint64_t result = v6(&v9, a1, a1 + v7);
  if (!v3) {
    *a2 = v9;
  }
  return result;
}

uint64_t sub_1A88E5B9C(uint64_t result, uint64_t a2)
{
  if (result) {
    uint64_t v3 = a2 - result;
  }
  else {
    uint64_t v3 = 0;
  }
  if ((v3 & 0x8000000000000000) == 0) {
    return (*(uint64_t (**)(void))(v2 + 16))(0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88E5BE8(uint64_t a1)
{
  return sub_1A88DB45C(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
}

void *sub_1A88E5C08@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (result) {
    uint64_t v6 = a2 - (void)result;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (*(void *(**)(uint64_t *__return_ptr, void))(v3 + 16))(&v7, 0);
    if (!v4) {
      *a3 = v7;
    }
  }
  return result;
}

void *sub_1A88E5C6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void *(*v6)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  void *result;
  uint64_t v9;

  uint64_t v6 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 24);
  uint64_t v7 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  uint64_t result = v6(&v9, a1, a1 + v7);
  if (!v3) {
    *a2 = v9;
  }
  return result;
}

uint64_t sub_1A88E5CE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A88E5CF4(uint64_t a1)
{
  return sub_1A88B3554(a1, *(void **)(v1 + 16));
}

uint64_t sub_1A88E5CFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A88E5D0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A88E5D1C()
{
  return swift_deallocObject();
}

uint64_t sub_1A88E5D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  return sub_1A88E2CDC(a1, a2, a3);
}

uint64_t Message.withMessageHeader<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void v5[2] = a3;
  v5[3] = a1;
  v5[4] = a2;
  return sub_1A88E147C((uint64_t)sub_1A88E5D88, (uint64_t)v5, a3, a4);
}

uint64_t sub_1A88E5D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A88E5DB4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24), *(void *)(v4 + 32), a1, a2, a3, a4);
}

uint64_t sub_1A88E5DB4(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_1A88E7068(3, a3, a4, a5, a6);
  if (!v6)
  {
    if (v10 < 0)
    {
      __break(1u);
    }
    else
    {
      if (v9) {
        uint64_t v11 = v9 + v10;
      }
      else {
        uint64_t v11 = 0;
      }
      return a1(v9, v11);
    }
  }
  return result;
}

uint64_t sub_1A88E5E28(uint64_t isStackAllocationSafe, uint64_t a2)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  size_t v2 = a2 - isStackAllocationSafe;
  if (isStackAllocationSafe) {
    uint64_t v3 = a2 - isStackAllocationSafe;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_18:
    __break(1u);
  }
  if (v4 < 0) {
    goto LABEL_18;
  }
  uint64_t v5 = (const void *)isStackAllocationSafe;
  if (v4 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v7 = (char *)v12 - v6;
    if (v5) {
      memmove((char *)v12 - v6, v5, v2);
    }
    else {
      size_t v2 = 0;
    }
    v7[v2] = 0;
    return CompactEncDet_EncodingNameAliasToEncoding(v7);
  }
  else
  {
    uint64_t v9 = (char *)swift_slowAlloc();
    uint64_t v10 = v9;
    if (v5) {
      memmove(v9, v5, v2);
    }
    else {
      size_t v2 = 0;
    }
    v10[v2] = 0;
    uint64_t v8 = CompactEncDet_EncodingNameAliasToEncoding(v10);
    MEMORY[0x1AD0E4D00](v10, -1, -1);
  }
  return v8;
}

uint64_t sub_1A88E5F70()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8A767E8();
  sub_1A8A78028();
  sub_1A8A767E8();
  sub_1A88E6184(v4, v1, v2, v3);
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t initializeWithCopy for Part(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for Part(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy40_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Part(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Part()
{
  return &type metadata for Part;
}

uint64_t sub_1A88E614C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    if (a3 - a2 >= a4) {
      return a2 + a4;
    }
    __break(1u);
  }
  else if (a4 <= 0)
  {
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88E6184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return 0x3E6C696E3CLL;
  }
  if (a3 - a2 < a4)
  {
    __break(1u);
  }
  else
  {
    sub_1A8A78028();
    sub_1A8A767E8();
    sub_1A8A78028();
    sub_1A8A767E8();
    sub_1A8A78028();
    return 0;
  }
  return result;
}

uint64_t sub_1A88E628C(uint64_t a1)
{
  return sub_1A88E6184(a1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A88E6298(unsigned __int8 a1, uint64_t a2, int64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 == a3) {
    return 0;
  }
  int64_t v7 = a3;
  uint64_t v8 = a2;
  unint64_t v9 = 0;
  uint64_t v50 = a5 - a4;
  if (a4) {
    uint64_t v10 = a5 - a4;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v51 = a1;
  uint64_t v52 = v10;
  while (2)
  {
    switch(v51)
    {
      case 1:
        if (!a4) {
          goto LABEL_43;
        }
        uint64_t v16 = a4 + v8;
        uint64_t v17 = (char *)memchr((void *)(a4 + v8), 13, v7 - v8);
        if (!v17) {
          goto LABEL_43;
        }
        uint64_t v18 = &v17[-v16];
        if ((uint64_t)&v17[-v16] < 0) {
          goto LABEL_43;
        }
        uint64_t v19 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_145;
        }
        if (v7 - v8 < (uint64_t)v19) {
          goto LABEL_43;
        }
        int64_t v15 = (int64_t)&v18[v8];
        if (__OFADD__(v18, v8)) {
          goto LABEL_153;
        }
        uint64_t v5 = (uint64_t)&v19[v8];
        if (__OFADD__(v19, v8)) {
          goto LABEL_154;
        }
        if ((uint64_t)v19 < (uint64_t)v18 || v5 < v15) {
          goto LABEL_155;
        }
        goto LABEL_106;
      case 2:
        if (!a4) {
          goto LABEL_43;
        }
        uint64_t v20 = a4 + v8;
        char v21 = (char *)memchr((void *)(a4 + v8), 10, v7 - v8);
        if (!v21) {
          goto LABEL_43;
        }
        BOOL v22 = &v21[-v20];
        if ((uint64_t)&v21[-v20] < 0) {
          goto LABEL_43;
        }
        char v23 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_146;
        }
        if (v7 - v8 < (uint64_t)v23) {
          goto LABEL_43;
        }
        int64_t v15 = (int64_t)&v22[v8];
        if (__OFADD__(v22, v8)) {
          goto LABEL_156;
        }
        uint64_t v5 = (uint64_t)&v23[v8];
        if (__OFADD__(v23, v8)) {
          goto LABEL_157;
        }
        if ((uint64_t)v23 < (uint64_t)v22 || v5 < v15) {
          goto LABEL_158;
        }
        goto LABEL_106;
      case 3:
        if (!a4) {
          goto LABEL_43;
        }
        uint64_t v24 = a4 + v8;
        uint64_t v25 = (char *)memchr((void *)(a4 + v8), 10, v7 - v8);
        if (!v25) {
          goto LABEL_43;
        }
        uint64_t v26 = &v25[-v24];
        if ((uint64_t)&v25[-v24] < 0) {
          goto LABEL_43;
        }
        uint64_t v27 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_147;
        }
        if (v7 - v8 < (uint64_t)v27) {
          goto LABEL_43;
        }
        int64_t v15 = (int64_t)&v26[v8];
        if (__OFADD__(v26, v8)) {
          goto LABEL_159;
        }
        uint64_t v5 = (uint64_t)&v27[v8];
        if (__OFADD__(v27, v8)) {
          goto LABEL_160;
        }
        if ((uint64_t)v27 < (uint64_t)v26 || v5 < v15) {
          goto LABEL_161;
        }
        if (v8 >= v15) {
          goto LABEL_106;
        }
        if (v15 > v7) {
          goto LABEL_163;
        }
        if (*(unsigned char *)(a4 + v15 - 1) == 13) {
          --v15;
        }
        goto LABEL_106;
      default:
        if (!a4) {
          goto LABEL_43;
        }
        uint64_t v11 = a4 + v8;
        uint64_t v12 = (char *)memmem((const void *)(a4 + v8), v7 - v8, "\r\n", 2uLL);
        if (!v12) {
          goto LABEL_43;
        }
        uint64_t v13 = &v12[-v11];
        if ((uint64_t)&v12[-v11] < 0) {
          goto LABEL_43;
        }
        uint64_t v14 = v13 + 2;
        if (__OFADD__(v13, 2)) {
          goto LABEL_144;
        }
        if (v7 - v8 < (uint64_t)v14)
        {
LABEL_43:
          uint64_t v5 = 0;
          char v28 = 1;
          int64_t v15 = v7;
          int64_t v29 = v7 - v8;
          if (v7 == v8) {
            goto LABEL_119;
          }
        }
        else
        {
          int64_t v15 = (int64_t)&v13[v8];
          if (__OFADD__(v13, v8)) {
            goto LABEL_150;
          }
          uint64_t v5 = (uint64_t)&v14[v8];
          if (__OFADD__(v14, v8)) {
            goto LABEL_151;
          }
          if ((uint64_t)v14 < (uint64_t)v13 || v5 < v15) {
            goto LABEL_152;
          }
LABEL_106:
          if (v15 < v8) {
            goto LABEL_136;
          }
          if (v15 > v7)
          {
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
            goto LABEL_162;
          }
          char v28 = 0;
          int64_t v29 = v15 - v8;
          if (v15 == v8) {
            goto LABEL_119;
          }
        }
        if (v8 < 0 || v52 < v8) {
          goto LABEL_125;
        }
        if (v15 < 0 || v52 < v15) {
          goto LABEL_126;
        }
        if (a4)
        {
          if (v29 <= 399)
          {
            unint64_t v30 = (unsigned __int8 *)(a4 + v8);
            int64_t v31 = v7;
            char v32 = v28;
            uint64_t v33 = memchr((void *)(a4 + v8), 58, v29);
            char v28 = v32;
            int64_t v7 = v31;
            if (v33)
            {
              int64_t v34 = v33 - v30;
              if (v33 - v30 >= 0)
              {
                int64_t v35 = v34 + 1;
                if (__OFADD__(v34, 1)) {
                  goto LABEL_135;
                }
                if (v29 >= v35)
                {
                  int64_t v36 = v34 + v8;
                  if (__OFADD__(v34, v8)) {
                    goto LABEL_138;
                  }
                  if (__OFADD__(v35, v8)) {
                    goto LABEL_139;
                  }
                  if (v35 < v34 || v35 + v8 < v36) {
                    goto LABEL_140;
                  }
                  if (v50 < v8) {
                    goto LABEL_141;
                  }
                  if (v36 < 0) {
                    goto LABEL_142;
                  }
                  if (v50 < v36) {
                    goto LABEL_143;
                  }
                  if ((unint64_t)(v34 - 61) >= 0xFFFFFFFFFFFFFFC4)
                  {
                    if (v36 < (unint64_t)v8) {
                      goto LABEL_148;
                    }
                    if (v15 < (unint64_t)v36) {
                      goto LABEL_149;
                    }
                    if (v36 == v8) {
                      goto LABEL_90;
                    }
                    unsigned int v37 = *v30;
                    if (v37 > 0x20 || ((1 << v37) & 0x100002600) == 0)
                    {
                      uint64_t v45 = v8 + 1;
                      if (v8 + 1 == v36) {
                        goto LABEL_90;
                      }
                      while (v45 < v36)
                      {
                        unsigned int v46 = *(unsigned __int8 *)(a4 + v45);
                        BOOL v42 = v46 > 0x20;
                        uint64_t v47 = (1 << v46) & 0x100002600;
                        if (!v42 && v47 != 0) {
                          goto LABEL_67;
                        }
                        if (v36 == ++v45) {
                          goto LABEL_90;
                        }
                      }
LABEL_164:
                      __break(1u);
                      JUMPOUT(0x1A88E6814);
                    }
                  }
                }
              }
            }
          }
        }
LABEL_67:
        if (!v9) {
          return 0;
        }
        if (v29 > 399) {
          return v8;
        }
        if (v15 <= (unint64_t)v8) {
          goto LABEL_127;
        }
        unsigned int v38 = *(unsigned __int8 *)(a4 + v8);
        uint64_t v39 = v8;
        if (v38 > 0x20) {
          goto LABEL_81;
        }
        uint64_t v39 = v8;
        if (((1 << v38) & 0x100002600) == 0) {
          goto LABEL_81;
        }
        uint64_t v40 = v8 + 1;
        uint64_t v39 = v15;
        if (v8 + 1 == v15)
        {
LABEL_80:
          if (v39 < v8) {
            goto LABEL_128;
          }
          goto LABEL_81;
        }
        while (1)
        {
          if (v40 >= v15)
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
            goto LABEL_128;
          }
          unsigned int v41 = *(unsigned __int8 *)(a4 + v40);
          BOOL v42 = v41 > 0x20;
          uint64_t v43 = (1 << v41) & 0x100002600;
          if (v42 || v43 == 0) {
            break;
          }
          if (v15 == ++v40)
          {
            uint64_t v39 = v15;
            goto LABEL_80;
          }
        }
        uint64_t v39 = v40;
        if (v40 < v8)
        {
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
LABEL_81:
        if (v15 < v39) {
          goto LABEL_129;
        }
        if (a4)
        {
          if (v50 < v8) {
            goto LABEL_133;
          }
          if (v50 < v39) {
            goto LABEL_130;
          }
        }
        else
        {
          if (v8 > 0) {
            goto LABEL_134;
          }
          if (v39 > 0) {
            goto LABEL_130;
          }
        }
        if (v39 == v15 || (unint64_t)(v39 - v8 - 13) < 0xFFFFFFFFFFFFFFF4)
        {
LABEL_119:
          if (v9) {
            return v8;
          }
          return 0;
        }
LABEL_90:
        if (v28)
        {
          if (v7 >= v8) {
            return v7;
          }
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        if (v5 > v7) {
          goto LABEL_131;
        }
        if (v5 < v8) {
          goto LABEL_132;
        }
        if (v9 <= 0x12)
        {
          ++v9;
          uint64_t v8 = v5;
          if (v5 != v7) {
            continue;
          }
        }
        return v5;
    }
  }
}

uint64_t sub_1A88E6824(uint64_t (*a1)(uint64_t), uint64_t a2, void (*a3)(void *, char *, char *, uint64_t, uint64_t), uint64_t a4, uint64_t (*a5)(void *), uint64_t a6)
{
  uint64_t v8 = v6;
  uint64_t result = a1(v6);
  if (!v7 && (_BYTE)result)
  {
    if (result == 1)
    {
      if ((*(void *)(v6 + 32) & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        if (*(void *)(v6 + 16)) {
          uint64_t v17 = *(void *)(v6 + 32);
        }
        else {
          uint64_t v17 = 0;
        }
        if ((v17 & 0x8000000000000000) == 0)
        {
          uint64_t v18 = sub_1A88FE9DC();
          if (v21 != 2)
          {
            BOOL v22 = (char *)v18;
            char v23 = v19;
            uint64_t v24 = v20;
            do
            {
              uint64_t v25 = v21 & 1;
              sub_1A88FE1A8(v22, v23, v24, v21 & 1, v48);
              a3(v48, v22, v23, v24, v25);
              sub_1A88CFF5C((uint64_t)v48);
              BOOL v22 = (char *)sub_1A88FE9DC();
              char v23 = v26;
              uint64_t v24 = v27;
            }
            while (v21 != 2);
          }
          return 2;
        }
      }
      __break(1u);
      return result;
    }
    sub_1A88E7274(*(unsigned __int8 *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 32), a3, (uint64_t)v49);
    sub_1A8529F8C((uint64_t)&v50, (uint64_t)v53, &qword_1E9743B78);
    sub_1A8529F8C((uint64_t)v53, (uint64_t)v54, &qword_1E9743B78);
    if (!*((void *)&v55 + 1)) {
      return 2;
    }
    v56[0] = v54[0];
    v56[1] = v54[1];
    v56[2] = v55;
    sub_1A88AF2E4((uint64_t)v56, (uint64_t)v60);
    sub_1A88AF2E4((uint64_t)v60, (uint64_t)v61);
    if (v61[32] >= 0x10u)
    {
      sub_1A88E74C0((uint64_t)v49);
      return 2;
    }
    sub_1A88CC024((uint64_t)v61, (uint64_t)v62);
    sub_1A88E74C0((uint64_t)v49);
    sub_1A8529F8C((uint64_t)&v51, (uint64_t)v52, &qword_1E9743B30);
    sub_1A8529F8C((uint64_t)v52, (uint64_t)&v57, &qword_1E9743B30);
    char v28 = v59;
    if (v59 == 2) {
      return 2;
    }
    int64_t v29 = v57;
    uint64_t v30 = v58;
    if (!a5)
    {
      unint64_t v33 = 0;
      char v34 = 1;
      return (uint64_t)sub_1A88E6C84(v29, v30, v28 & 1, v33, v34, (uint64_t)a1, a2, (uint64_t)a3, a4, (uint64_t)a5, a6);
    }
    char v46 = v59;
    uint64_t v47 = v58;
    uint64_t v66 = v57;
    sub_1A88CC024((uint64_t)v62, (uint64_t)v63);
    if (v64 < 0)
    {
      v64 &= ~0x80u;
      sub_1A8529F8C((uint64_t)v63, (uint64_t)v65, (uint64_t *)&unk_1E9743F40);
    }
    else if (!v63[0])
    {
      int64_t v31 = *(void **)v6;
      swift_retain();
      uint64_t v32 = a5(v31);
      unint64_t v33 = v32;
      if (v32)
      {
        if (v32 != 1)
        {
          if (v32 == 2)
          {
            sub_1A85489D0((uint64_t)a5);
            return 0;
          }
          uint64_t v35 = v31[2];
          if (v35 + 1 != *(void *)(v32 + 16)) {
            goto LABEL_44;
          }
          unint64_t v45 = v32;
          if (v35)
          {
            if (v31[4] != *(void *)(v32 + 32))
            {
LABEL_43:
              sub_1A852CA8C(v8);
              unint64_t v33 = v45;
              sub_1A85118C8(v45);
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
LABEL_44:
              sub_1A85489D0((uint64_t)a5);
              sub_1A8511968(v33);
              return 2;
            }
            if (v35 != 1)
            {
              int64_t v36 = v31 + 5;
              uint64_t v37 = v35 - 2;
              unsigned int v38 = (uint64_t *)(v32 + 40);
              do
              {
                uint64_t v39 = v37;
                uint64_t v41 = *v36++;
                uint64_t v40 = v41;
                uint64_t v42 = *v38++;
                if (v40 != v42) {
                  goto LABEL_43;
                }
                uint64_t v37 = v39 - 1;
              }
              while (v39);
            }
          }
          uint64_t v44 = v32 + 32;
          sub_1A852CA8C(v8);
          sub_1A85118C8(v45);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v43 = *(void *)(v45 + 16);
          if (!v43)
          {
            sub_1A85489D0((uint64_t)a5);
            sub_1A8511968(v45);
            return 2;
          }
          unint64_t v33 = *(void *)(v44 + 8 * v43 - 8);
          sub_1A85489D0((uint64_t)a5);
          sub_1A8511968(v45);
          char v34 = 0;
          goto LABEL_30;
        }
        sub_1A85489D0((uint64_t)a5);
        return 2;
      }
      sub_1A85489D0((uint64_t)a5);
LABEL_29:
      char v34 = 1;
LABEL_30:
      int64_t v29 = v66;
      uint64_t v30 = v47;
      char v28 = v46;
      return (uint64_t)sub_1A88E6C84(v29, v30, v28 & 1, v33, v34, (uint64_t)a1, a2, (uint64_t)a3, a4, (uint64_t)a5, a6);
    }
    unint64_t v33 = 0;
    goto LABEL_29;
  }
  return result;
}

void *sub_1A88E6C84(void *result, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v13[3] = a4;
  char v14 = a5 & 1;
  uint64_t v15 = a6;
  uint64_t v16 = a7;
  uint64_t v17 = a8;
  uint64_t v18 = a9;
  uint64_t v19 = a10;
  uint64_t v20 = a11;
  if ((a3 & 1) == 0) {
    return (void *)sub_1A88E6D3C((Swift::Int)result, a2, a4, a5 & 1, a6, a7, a8, a9, a10, a11);
  }
  if (result) {
    uint64_t v12 = a2 - (void)result;
  }
  else {
    uint64_t v12 = 0;
  }
  if ((v12 & 0x8000000000000000) == 0) {
    return sub_1A88DD040(0, v12, (uint64_t)result, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88E74EC, v13);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1A88E6D3C(Swift::Int result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = v11;
  uint64_t v40 = (void *)result;
  unsigned int v43 = *(unsigned __int8 *)(v10 + 8);
  uint64_t v14 = *(void *)(v10 + 16);
  uint64_t v15 = *(void *)(v10 + 32);
  if (v14)
  {
    uint64_t v16 = *(void *)(v10 + 24) - v14;
    if (v16 < v15)
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v17 = v16 - v15;
    if (v16 - v15 < 0)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v18 = v14 + v15;
    uint64_t v19 = *(void *)(v10 + 24);
  }
  else
  {
    if (v15 >= 1)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    uint64_t v18 = 0;
  }
  uint64_t result = (Swift::Int)sub_1A88BB478(0, v17, v18, v19, v43, (void *)result, a2);
  if (v21 == -1) {
    return 2;
  }
  uint64_t v22 = v20;
  if (v21) {
    goto LABEL_26;
  }
  uint64_t v39 = v19;
  if (v17 < v20)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v20 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t v32 = 0;
    if (v17 < v22)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      uint64_t result = swift_bridgeObjectRelease();
      if (v33 >= v12)
      {
        if (v12 >= v22) {
          return result;
        }
        __break(1u);
        if (v33 >= v12)
        {
          if (v12 >= v22) {
            return result;
          }
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
LABEL_27:
    if (v22 >= v32) {
      return 2;
    }
    goto LABEL_45;
  }
  uint64_t v23 = 0;
  uint64_t v33 = v17;
  while (1)
  {
    uint64_t v24 = v13;
    uint64_t v25 = v18;
    uint64_t result = (Swift::Int)sub_1A88BB478(v22, v17, v18, v39, v43, v40, a2);
    if (v27 == -1) {
      return 2;
    }
    uint64_t v28 = result;
    if (result < v22) {
      goto LABEL_41;
    }
    uint64_t result = v23 + 1;
    if (__OFADD__(v23, 1)) {
      goto LABEL_42;
    }
    uint64_t v12 = v26;
    char v29 = v27;
    if ((a4 & 1) == 0 && result != a3)
    {
      uint64_t v13 = v24;
      if (v27) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
    SectionSpecifier.Part.appending(_:)(result);
    sub_1A88E7068(v43, v22, v28, v25, v39);
    if (v24) {
      goto LABEL_32;
    }
    char v30 = sub_1A88E6824(a5, a6, a7, a8, a9, a10);
    uint64_t v13 = 0;
    uint64_t result = swift_bridgeObjectRelease();
    if (!v30) {
      break;
    }
    uint64_t v17 = v33;
    if (v29)
    {
LABEL_30:
      uint64_t v32 = v22;
      uint64_t v22 = v12;
      if (v17 >= v12) {
        goto LABEL_27;
      }
      goto LABEL_31;
    }
LABEL_22:
    if (v17 < v12) {
      goto LABEL_40;
    }
    uint64_t v18 = v25;
    ++v23;
    BOOL v31 = v12 < v22;
    uint64_t v22 = v12;
    if (v31) {
      goto LABEL_25;
    }
  }
  if (v33 < v12) {
    goto LABEL_50;
  }
  if (v12 >= v22) {
    return 0;
  }
LABEL_51:
  __break(1u);
  return result;
}

void sub_1A88E7008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = a5 - a4;
  if (a4)
  {
    uint64_t v8 = a4 + a3;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  if (a4) {
    uint64_t v9 = a4 + a2;
  }
  else {
    uint64_t v9 = 0;
  }
  if (a2 < 0 || v7 < a2)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  if (a6 < 0 || v7 < a6) {
    goto LABEL_16;
  }
  uint64_t v10 = a6 - a2;
  uint64_t v11 = v8 - v9;
  if (!v9) {
    uint64_t v11 = 0;
  }
  if (v11 < v10) {
    goto LABEL_17;
  }
}

uint64_t sub_1A88E7068(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = result;
  if (a2 != a3)
  {
    if (a2 >= a3) {
      goto LABEL_32;
    }
    int v11 = *(unsigned __int8 *)(a4 + a2);
    if (v11 == 10 || v11 == 13)
    {
      sub_1A88DC32C(result);
      uint64_t v13 = a2;
    }
    else
    {
      sub_1A88DC9C0(result, a2, a3, a4);
      if (v21)
      {
        if ((sub_1A88DCCE0(v8) & 1) != 0 && sub_1A870361C(a2, a3, a4, a5) <= 1499)
        {
          uint64_t v14 = v8;
          uint64_t v15 = a2;
          uint64_t v16 = a3;
          uint64_t v17 = a4;
          uint64_t v18 = a5;
          uint64_t v13 = a3;
          goto LABEL_15;
        }
        uint64_t v22 = sub_1A88E6298(v8, a2, a3, a4, a5);
        if (v23)
        {
          if (a4) {
            uint64_t v24 = a4 + a3;
          }
          else {
            uint64_t v24 = 0;
          }
          if (a4) {
            uint64_t v8 = a4 + a2;
          }
          else {
            uint64_t v8 = 0;
          }
          sub_1A88E7220();
          swift_allocError();
          *uint64_t v25 = v8;
          v25[1] = v24;
          swift_willThrow();
          return v8;
        }
        uint64_t v13 = v22;
      }
      else
      {
        uint64_t v13 = v20;
      }
    }
    uint64_t v14 = v8;
    uint64_t v15 = a2;
    uint64_t v16 = a3;
    uint64_t v17 = a4;
    uint64_t v18 = a5;
LABEL_15:
    sub_1A88E7008(v14, v15, v16, v17, v18, v13);
    return v19;
  }
  uint64_t v9 = a5 - a4;
  if (!a4) {
    uint64_t v9 = 0;
  }
  if ((a2 & 0x8000000000000000) == 0 && v9 >= a2) {
    return v8;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_1A88E7220()
{
  unint64_t result = qword_1E974E350;
  if (!qword_1E974E350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E350);
  }
  return result;
}

uint64_t sub_1A88E7274@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void *, char *, char *, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  if (a3 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  if (a2) {
    uint64_t v6 = a3;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6 < 0) {
    goto LABEL_20;
  }
  unint64_t result = sub_1A88FE9DC();
  if (v10 == 2)
  {
    char v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    long long v16 = 0uLL;
    long long v17 = 0uLL;
    char v18 = 2;
    goto LABEL_18;
  }
  uint64_t v19 = (char *)result;
  uint64_t v20 = v8;
  uint64_t v21 = v9;
  uint64_t v22 = 0;
  uint64_t v15 = 0;
  uint64_t v13 = 0;
  uint64_t v12 = 0;
  char v11 = 0;
  long long v16 = 0uLL;
  long long v17 = 0uLL;
  char v18 = 2;
  while (2)
  {
    uint64_t v33 = v15;
    uint64_t v34 = v22;
    long long v35 = v17;
    long long v37 = v16;
    uint64_t v32 = v12;
    while (1)
    {
      uint64_t v25 = v10 & 1;
      sub_1A88FE1A8(v19, v20, v21, v10 & 1, v39);
      a4(v39, v19, v20, v21, v25);
      sub_1A88C69F8((uint64_t)v39, (uint64_t)&v40);
      unsigned __int8 v26 = v42;
      if ((unint64_t)v42 >> 59 != 14) {
        break;
      }
      *(void *)&long long v42 = v42 & 0x7FFFFFFFFFFFFFFLL;
      char v11 = 1;
LABEL_11:
      unint64_t result = sub_1A88FE9DC();
      uint64_t v19 = (char *)result;
      uint64_t v20 = v23;
      uint64_t v21 = v24;
      if (v10 == 2)
      {
        uint64_t v15 = v33;
        uint64_t v14 = v34;
        long long v17 = v35;
        long long v16 = v37;
        uint64_t v12 = v32;
        goto LABEL_18;
      }
    }
    if ((unint64_t)v42 >> 59 != 9)
    {
      sub_1A88CFF5C((uint64_t)v39);
      goto LABEL_11;
    }
    *(void *)&long long v42 = v42 & 0x7FFFFFFFFFFFFFFLL;
    long long v36 = v41;
    long long v38 = v40;
    long long v43 = v40;
    long long v44 = v41;
    long long v45 = v42;
    uint64_t v14 = *((void *)&v42 + 1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1A88C3474();
    uint64_t v28 = v27;
    char v18 = v29;
    sub_1A88CFF5C((uint64_t)v39);
    unint64_t result = sub_1A88FE9DC();
    long long v17 = v36;
    long long v16 = v38;
    uint64_t v15 = v26;
    uint64_t v19 = (char *)result;
    uint64_t v20 = v30;
    uint64_t v12 = v28;
    uint64_t v21 = v31;
    uint64_t v22 = v14;
    if (v10 != 2) {
      continue;
    }
    break;
  }
LABEL_18:
  *(unsigned char *)a5 = v11 & 1;
  *(_OWORD *)(a5 + 8) = v16;
  *(_OWORD *)(a5 + 24) = v17;
  *(void *)(a5 + 40) = v15;
  *(void *)(a5 + 48) = v14;
  *(void *)(a5 + 56) = v13;
  *(void *)(a5 + 64) = v12;
  *(unsigned char *)(a5 + 72) = v18;
  return result;
}

uint64_t sub_1A88E74C0(uint64_t a1)
{
  return a1;
}

Swift::Int sub_1A88E74EC@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  Swift::Int result = sub_1A88E6D3C(a1, a2, *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80));
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UnsafePartBuffer(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[32]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UnsafePartBuffer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)Swift::Int result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)Swift::Int result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafePartBuffer()
{
  return &type metadata for UnsafePartBuffer;
}

unint64_t sub_1A88E75D8()
{
  unint64_t result = qword_1E974E358;
  if (!qword_1E974E358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E358);
  }
  return result;
}

uint64_t sub_1A88E762C(uint64_t a1, char **a2)
{
  uint64_t v3 = a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)&v18[0];
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  sub_1A8529F8C(a1 + 96, (uint64_t)v17, &qword_1E9743B78);
  LOBYTE(v3) = *(unsigned char *)(v3 + 184) != 2;
  sub_1A852CA8C((uint64_t)v18);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88C24A4((uint64_t)v17);
  char v10 = sub_1A88E96F0(v5, v7, v8, v9, (uint64_t)v17, v3);
  char v11 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v11 = sub_1A89021EC(0, *((void *)v11 + 2) + 1, 1, v11);
    *a2 = v11;
  }
  unint64_t v14 = *((void *)v11 + 2);
  unint64_t v13 = *((void *)v11 + 3);
  if (v14 >= v13 >> 1)
  {
    char v11 = sub_1A89021EC((char *)(v13 > 1), v14 + 1, 1, v11);
    *a2 = v11;
  }
  *((void *)v11 + 2) = v14 + 1;
  uint64_t v15 = &v11[16 * v14];
  *((void *)v15 + 4) = v6;
  v15[40] = v10;
  return 2;
}

uint64_t sub_1A88E776C(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!v2) {
    return !v3;
  }
  if (v2 == 1) {
    return v3 == 1;
  }
  if (v3 < 2) {
    return 0;
  }
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v2, v3);
}

uint64_t sub_1A88E77AC(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)a2) & (v2 == v3);
}

uint64_t sub_1A88E77F0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v4 = v2 - 1;
    uint64_t v5 = a2 + 32;
    uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v7 = 0;
    while (!__OFSUB__(v4, v7))
    {
      unint64_t v8 = v7 + (v4 - v7) / 2;
      if (__OFADD__(v7, (v4 - v7) / 2)) {
        goto LABEL_16;
      }
      if (v8 >= v2) {
        goto LABEL_17;
      }
      uint64_t v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      BOOL v10 = static SectionSpecifier.Part.< infix(_:_:)(v9, a1);
      uint64_t result = swift_bridgeObjectRelease();
      if (v10)
      {
        uint64_t v7 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_18;
        }
        if (v4 < v7) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v11 = *(void *)(v5 + 16 * v8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        BOOL v12 = static SectionSpecifier.Part.< infix(_:_:)(a1, v11);
        uint64_t result = swift_bridgeObjectRelease();
        if (!v12) {
          goto LABEL_13;
        }
        uint64_t v4 = v8 - 1;
        if ((uint64_t)(v8 - 1) < v7)
        {
LABEL_11:
          unint64_t v8 = 0;
LABEL_13:
          swift_bridgeObjectRelease();
          return v8;
        }
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

Swift::Int sub_1A88E791C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 8 * v8 + 24);
    SectionSpecifier.Part.dropLast()();
    Swift::Int result = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      return result;
    }
    v11.array._rawValue = SectionSpecifier.Part.appending(_:)(result).array._rawValue;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11.array._rawValue = 0;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  Swift::Int result = sub_1A88E77F0(a2, a1);
  if (v12) {
    Swift::Int result = *(void *)(a1 + 16);
  }
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = result;
  *(NIOIMAPCore2::SectionSpecifier::Part *)(a4 + 24) = v11;
  *(unsigned char *)(a4 + 32) = a3 & 1;
  return result;
}

void sub_1A88E79D0()
{
  int64_t v1 = v0[2];
  uint64_t v2 = *v0;
  int64_t v3 = *(void *)(*v0 + 16);
  if (v1 < v3)
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = v2 + 16 * v1 + 40;
    while (v1 < (unint64_t)v3)
    {
      uint64_t v6 = *(void *)(v5 - 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v4)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        BOOL v7 = static SectionSpecifier.Part.< infix(_:_:)(v6, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v7)
        {
          swift_bridgeObjectRelease();
LABEL_11:
          v0[2] = v1 + 1;
          return;
        }
      }
      if (*((unsigned char *)v0 + 32) != 1) {
        goto LABEL_11;
      }
      v8.array._rawValue = (void *)v0[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      LOBYTE(v8.array._rawValue) = SectionSpecifier.Part.isChildPart(of:)(v8);
      swift_bridgeObjectRelease();
      if ((uint64_t)v8.array._rawValue) {
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      v0[2] = ++v1;
      int64_t v3 = *(void *)(v2 + 16);
      v5 += 16;
      if (v1 >= v3) {
        return;
      }
    }
    __break(1u);
  }
}

void sub_1A88E7AF8(uint64_t a1@<X8>)
{
  sub_1A88E79D0();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

double sub_1A88E7B24@<D0>(uint64_t a1@<X8>)
{
  sub_1A88E791C(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), (uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  return result;
}

uint64_t sub_1A88E7B90()
{
  uint64_t v1 = sub_1A88E9068(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A88E7BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A88E935C(a1, a2, a3, *(void *)v3, *(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
}

Swift::Int sub_1A88E7BEC(Swift::Int result, unsigned __int8 a2, char a3, void *a4, uint64_t a5)
{
  if (a2 - 2 < 5) {
    return result;
  }
  uint64_t v7 = result;
  unsigned int v71 = a3 & 1;
  if (a2)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v74 = *a4;
    *a4 = 0x8000000000000000;
    sub_1A88E8BA0(0, v7, isUniquelyReferenced_nonNull_native);
    uint64_t v66 = a4;
    *a4 = v74;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v40 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88E791C(v40, v7, 1, (uint64_t)&v74);
    swift_bridgeObjectRelease();
    uint64_t v41 = a5;
    swift_bridgeObjectRelease();
    uint64_t v43 = v74;
    v42.array._rawValue = v75;
    uint64_t v80 = v74;
    int64_t v44 = v76;
    double result = sub_1A8529F8C((uint64_t)&v77, (uint64_t)v79, &qword_1E9741990);
    uint64_t v45 = *(void *)(v43 + 16);
    if (v44 >= v45)
    {
LABEL_84:
      sub_1A85276F0((uint64_t)&v80);
      swift_bridgeObjectRelease();
      return sub_1A85276F0((uint64_t)v79);
    }
    if (v44 < 0)
    {
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    char v46 = v78;
    while (1)
    {
      if ((unint64_t)v44 >= *(void *)(v43 + 16)) {
        goto LABEL_94;
      }
      uint64_t v47 = v43 + 32 + 16 * v44;
      uint64_t v48 = *(void *)v47;
      uint64_t v49 = *(unsigned __int8 *)(v47 + 8);
      sub_1A8529F8C((uint64_t)v79, (uint64_t)v81, &qword_1E9741990);
      uint64_t v50 = v81[0];
      if (v81[0])
      {
        swift_bridgeObjectRetain_n();
        sub_1A852CA8C((uint64_t)v79);
        BOOL v51 = static SectionSpecifier.Part.< infix(_:_:)(v48, v50);
        sub_1A85276F0((uint64_t)v79);
        swift_bridgeObjectRelease();
        if (!v51)
        {
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
        if ((v46 & 1) == 0)
        {
LABEL_71:
          ++v44;
          sub_1A88E7BEC(v48, v49, v71, v66, v41);
          double result = swift_bridgeObjectRelease();
          if (v44 >= v45) {
            goto LABEL_84;
          }
          goto LABEL_72;
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((v46 & 1) == 0) {
          goto LABEL_71;
        }
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      Swift::Bool v52 = SectionSpecifier.Part.isChildPart(of:)(v42);
      swift_bridgeObjectRelease();
      if (v52) {
        goto LABEL_71;
      }
      double result = swift_bridgeObjectRelease();
      if (++v44 >= v45) {
        goto LABEL_84;
      }
LABEL_72:
      if (v44 < 0) {
        goto LABEL_93;
      }
    }
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88E791C(v8, v7, 1, (uint64_t)&v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9.array._rawValue = v75;
  uint64_t v80 = v74;
  uint64_t v10 = v76;
  double result = sub_1A8529F8C((uint64_t)&v77, (uint64_t)v79, &qword_1E9741990);
  uint64_t v11 = v80;
  uint64_t v69 = *(void *)(v80 + 16);
  if (v10 >= v69) {
    goto LABEL_84;
  }
  uint64_t v12 = 0;
  unsigned int v62 = 0;
  char v68 = v78;
  uint64_t v13 = v80 + 40;
  uint64_t v58 = a5 + 56;
  rawValue = v9.array._rawValue;
  uint64_t v63 = a5 + 32;
  uint64_t v64 = v80 + 40;
  while (2)
  {
    unint64_t v14 = (unsigned __int8 *)(v13 + 16 * v10);
    unint64_t v15 = v10;
    unint64_t v70 = v10;
    while (1)
    {
      if (v10 < 0) {
        goto LABEL_95;
      }
      if (v15 >= *(void *)(v11 + 16)) {
        goto LABEL_96;
      }
      uint64_t v16 = *((void *)v14 - 1);
      unsigned int v67 = *v14;
      sub_1A8529F8C((uint64_t)v79, (uint64_t)v81, &qword_1E9741990);
      uint64_t v17 = v81[0];
      if (v81[0])
      {
        swift_bridgeObjectRetain_n();
        sub_1A852CA8C((uint64_t)v79);
        BOOL v18 = static SectionSpecifier.Part.< infix(_:_:)(v16, v17);
        sub_1A85276F0((uint64_t)v79);
        swift_bridgeObjectRelease();
        if (!v18)
        {
          swift_bridgeObjectRelease();
LABEL_87:
          uint64_t v29 = v62;
          goto LABEL_88;
        }
        if ((v68 & 1) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((v68 & 1) == 0) {
          goto LABEL_17;
        }
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      Swift::Bool v19 = SectionSpecifier.Part.isChildPart(of:)(v9);
      swift_bridgeObjectRelease();
      if (v19) {
        break;
      }
      double result = swift_bridgeObjectRelease();
      ++v15;
      v14 += 16;
      uint64_t v10 = v70;
      if ((uint64_t)v15 >= v69) {
        goto LABEL_87;
      }
    }
    unint64_t v70 = v15;
LABEL_17:
    uint64_t v20 = *(void *)(v16 + 16);
    uint64_t v13 = v64;
    if (v20)
    {
      uint64_t v21 = *(void *)(v16 + 8 * v20 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      SectionSpecifier.Part.dropLast()();
      double result = v21 + 1;
      if (__OFADD__(v21, 1))
      {
LABEL_98:
        __break(1u);
        return result;
      }
      v22.array._rawValue = SectionSpecifier.Part.appending(_:)(result).array._rawValue;
      swift_bridgeObjectRelease();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v22.array._rawValue = 0;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v23 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v24 = sub_1A88E77F0(v23, a5);
    uint64_t v61 = v12;
    if (v25) {
      uint64_t v26 = *(void *)(a5 + 16);
    }
    else {
      uint64_t v26 = v24;
    }
    swift_bridgeObjectRelease();
    double result = swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(a5 + 16);
    if (v26 >= v27)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      double result = swift_bridgeObjectRelease();
      uint64_t v29 = v62;
      uint64_t v12 = v61;
      goto LABEL_28;
    }
    uint64_t v55 = v7;
    uint64_t v56 = a5;
    char v65 = a4;
    if (v26 >= (unint64_t)v27)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    char v57 = 0;
    char v60 = 0;
    uint64_t v28 = *(void *)(a5 + 16);
    while (1)
    {
      uint64_t v31 = v63 + 16 * v26;
      int v32 = *(unsigned __int8 *)(v31 + 8);
      if (v22.array._rawValue)
      {
        uint64_t v33 = *(void *)v31;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        BOOL v34 = static SectionSpecifier.Part.< infix(_:_:)(v33, (uint64_t)v22.array._rawValue);
        swift_bridgeObjectRelease();
        double result = swift_bridgeObjectRelease();
        if (!v34) {
          goto LABEL_62;
        }
      }
      uint64_t v30 = v26 + 1;
      if (!v71)
      {
        if (v32 == 2) {
          goto LABEL_57;
        }
        if (v32 != 3) {
          goto LABEL_30;
        }
        goto LABEL_44;
      }
      if (v32 != 2) {
        break;
      }
LABEL_44:
      if (v30 >= v27)
      {
LABEL_59:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a5 = v56;
        swift_bridgeObjectRelease();
        a4 = v65;
        uint64_t v7 = v55;
        if (v60) {
          goto LABEL_92;
        }
LABEL_64:
        double result = swift_bridgeObjectRelease();
        uint64_t v12 = v16;
        v9.array._rawValue = rawValue;
        uint64_t v29 = v67;
        goto LABEL_65;
      }
      long long v35 = (unsigned __int8 *)(v58 + 16 * v26);
      while (1)
      {
        if (v28 == v30) {
          goto LABEL_97;
        }
        int v36 = *v35;
        if (v22.array._rawValue)
        {
          uint64_t v37 = *((void *)v35 - 1);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          BOOL v38 = static SectionSpecifier.Part.< infix(_:_:)(v37, (uint64_t)v22.array._rawValue);
          swift_bridgeObjectRelease();
          double result = swift_bridgeObjectRelease();
          if (!v38)
          {
            char v57 = 1;
            uint64_t v13 = v64;
            goto LABEL_62;
          }
        }
        if (!v71) {
          break;
        }
        if (v36 != 2)
        {
          if (v36 == 3) {
            goto LABEL_56;
          }
LABEL_29:
          ++v30;
          char v57 = 1;
          uint64_t v13 = v64;
          goto LABEL_30;
        }
LABEL_47:
        ++v30;
        v35 += 16;
        uint64_t v13 = v64;
        if (v30 >= v27) {
          goto LABEL_59;
        }
      }
      if (v36 == 3) {
        goto LABEL_47;
      }
      if (v36 != 2) {
        goto LABEL_29;
      }
LABEL_56:
      ++v30;
      char v57 = 1;
      uint64_t v13 = v64;
LABEL_57:
      if (v30 >= v27)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a5 = v56;
        swift_bridgeObjectRelease();
        a4 = v65;
        uint64_t v7 = v55;
        goto LABEL_92;
      }
      char v60 = 1;
LABEL_31:
      uint64_t v26 = v30;
      if (v30 <= (unint64_t)v27) {
        uint64_t v28 = v27;
      }
      else {
        uint64_t v28 = v30;
      }
      if (v30 >= (unint64_t)v27) {
        goto LABEL_97;
      }
    }
    if (v32 == 3) {
      goto LABEL_57;
    }
LABEL_30:
    if (v30 < v27) {
      goto LABEL_31;
    }
LABEL_62:
    swift_bridgeObjectRelease();
    a5 = v56;
    swift_bridgeObjectRelease();
    a4 = v65;
    uint64_t v7 = v55;
    uint64_t v12 = v61;
    swift_bridgeObjectRelease();
    if ((v60 & 1) == 0)
    {
      if (v57) {
        goto LABEL_64;
      }
      double result = swift_bridgeObjectRelease();
      uint64_t v29 = v62;
LABEL_28:
      v9.array._rawValue = rawValue;
LABEL_65:
      uint64_t v10 = v70 + 1;
      unsigned int v62 = v29;
      if ((uint64_t)(v70 + 1) >= v69)
      {
LABEL_88:
        sub_1A85276F0((uint64_t)&v80);
        swift_bridgeObjectRelease();
        double result = sub_1A85276F0((uint64_t)v79);
        if (v12)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          char v53 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v72 = *a4;
          *a4 = 0x8000000000000000;
          sub_1A88E8BA0(v12, v7, v53);
          *a4 = v72;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A88E7BEC(v12, v29, v71, a4, a5);
          return swift_bridgeObjectRelease();
        }
        return result;
      }
      continue;
    }
    break;
  }
LABEL_92:
  sub_1A85276F0((uint64_t)&v80);
  swift_bridgeObjectRelease();
  sub_1A85276F0((uint64_t)v79);
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v73 = *a4;
  *a4 = 0x8000000000000000;
  sub_1A88E8BA0(v16, v7, v54);
  *a4 = v73;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A88E7BEC(v16, v67, v71, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88E8424(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97456C0);
  char v37 = a2;
  uint64_t v6 = sub_1A8A781D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    NIOIMAPCore2::SectionSpecifier::Part v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    if ((v37 & 1) == 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    sub_1A8A78738();
    SectionSpecifier.Part.hash(into:)((uint64_t)v38, v29);
    uint64_t result = sub_1A8A787C8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v29;
    BOOL v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
    *BOOL v18 = v31;
    v18[1] = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  NIOIMAPCore2::SectionSpecifier::Part v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *NIOIMAPCore2::SectionSpecifier::Part v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A88E8734(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97456B8);
  char v36 = a2;
  uint64_t v6 = sub_1A8A781D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v34 = v2;
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v35 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void *)(*(void *)(v5 + 48) + v30);
    unint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((v36 & 1) == 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A85170D0(v32);
    }
    sub_1A8A78738();
    SectionSpecifier.Part.hash(into:)((uint64_t)v37, v31);
    uint64_t result = sub_1A8A787C8();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A88E8A38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A88F0E38(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A88E8D04();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A88E8424(v15, a4 & 1);
  unint64_t v21 = sub_1A88F0E38(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A8A786A8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  *(void *)(v18[6] + 8 * v12) = a3;
  unint64_t v23 = (void *)(v18[7] + 16 * v12);
  *unint64_t v23 = a1;
  v23[1] = a2;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v26;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A88E8BA0(uint64_t a1, uint64_t a2, char a3)
{
  long long v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1A88F0E38(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1A88E8EBC();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = sub_1A8517120(*(void *)(v17 + 8 * v10));
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A88E8734(v13, a3 & 1);
  unint64_t v19 = sub_1A88F0E38(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A8A786A8();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v21 = 8 * v10;
  *(void *)(v16[6] + v21) = a2;
  *(void *)(v16[7] + v21) = a1;
  uint64_t v22 = v16[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16[2] = v24;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void *sub_1A88E8D04()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97456C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A781C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v20;
    v22[1] = v21;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A88E8EBC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97456B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A781C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = (void *)sub_1A85170D0(v17);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A88E9068(uint64_t a1, uint64_t a2, char a3)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88E791C(a1, a2, a3, (uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v42[0];
  v6.array._rawValue = (void *)v42[1];
  uint64_t v45 = v42[0];
  uint64_t v8 = v42[2];
  uint64_t result = sub_1A8529F8C((uint64_t)v43, (uint64_t)v44, &qword_1E9741990);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  if (v8 >= v10)
  {
    uint64_t v12 = 0;
    goto LABEL_34;
  }
  uint64_t v12 = 0;
  char v13 = v43[8];
  uint64_t v14 = v7 + 40;
  uint64_t v38 = MEMORY[0x1E4FBC860] + 32;
  while (2)
  {
    uint64_t v39 = v12;
    uint64_t v41 = v11;
    unint64_t v15 = (unsigned char *)(v14 + 16 * v8);
    unint64_t v16 = v8;
    while (1)
    {
      if (v8 < 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      if (v16 >= *(void *)(v7 + 16)) {
        goto LABEL_39;
      }
      uint64_t v17 = *((void *)v15 - 1);
      char v18 = *v15;
      sub_1A8529F8C((uint64_t)v44, (uint64_t)&v46, &qword_1E9741990);
      uint64_t v19 = v46;
      if (v46)
      {
        swift_bridgeObjectRetain_n();
        sub_1A852CA8C((uint64_t)v44);
        BOOL v20 = static SectionSpecifier.Part.< infix(_:_:)(v17, v19);
        sub_1A85276F0((uint64_t)v44);
        uint64_t result = swift_bridgeObjectRelease();
        if (!v20)
        {
          swift_bridgeObjectRelease();
LABEL_33:
          uint64_t v12 = v39;
          uint64_t v11 = v41;
          goto LABEL_34;
        }
        if ((v13 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((v13 & 1) == 0) {
          goto LABEL_15;
        }
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      Swift::Bool v21 = SectionSpecifier.Part.isChildPart(of:)(v6);
      uint64_t result = swift_bridgeObjectRelease();
      if (v21) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v16;
      v15 += 16;
      if ((uint64_t)v16 >= v10) {
        goto LABEL_33;
      }
    }
    uint64_t v8 = v16;
LABEL_15:
    uint64_t v22 = v39;
    uint64_t v11 = v41;
    uint64_t v14 = v7 + 40;
    if (!v39)
    {
      unint64_t v23 = *((void *)v41 + 3);
      if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_42;
      }
      int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
      if (v24 <= 1) {
        uint64_t v25 = 1;
      }
      else {
        uint64_t v25 = v24;
      }
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DC0);
      uint64_t v26 = (char *)swift_allocObject();
      int64_t v27 = _swift_stdlib_malloc_size_0(v26);
      uint64_t v28 = v27 - 32;
      if (v27 < 32) {
        uint64_t v28 = v27 - 17;
      }
      uint64_t v29 = v28 >> 4;
      *((void *)v26 + 2) = v25;
      *((void *)v26 + 3) = 2 * (v28 >> 4);
      uint64_t v30 = v26 + 32;
      uint64_t v31 = *((void *)v41 + 3) >> 1;
      size_t v32 = 16 * v31;
      if (*((void *)v41 + 2))
      {
        uint64_t v33 = v41 + 32;
        if (v26 != v41 || v30 >= &v33[v32])
        {
          uint64_t v40 = v28 >> 4;
          memmove(v26 + 32, v33, v32);
          uint64_t v30 = v26 + 32;
          uint64_t v29 = v40;
        }
        *((void *)v41 + 2) = 0;
      }
      uint64_t v38 = (uint64_t)&v30[v32];
      uint64_t v22 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
      uint64_t result = swift_release();
      uint64_t v11 = v26;
      uint64_t v14 = v7 + 40;
    }
    BOOL v34 = __OFSUB__(v22, 1);
    uint64_t v12 = v22 - 1;
    if (v34) {
      goto LABEL_40;
    }
    ++v8;
    *(void *)uint64_t v38 = v17;
    *(unsigned char *)(v38 + 8) = v18;
    v38 += 16;
    if (v8 < v10) {
      continue;
    }
    break;
  }
LABEL_34:
  sub_1A85276F0((uint64_t)&v45);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A85276F0((uint64_t)v44);
  unint64_t v35 = *((void *)v11 + 3);
  if (v35 < 2) {
    return (uint64_t)v11;
  }
  unint64_t v36 = v35 >> 1;
  BOOL v34 = __OFSUB__(v36, v12);
  uint64_t v37 = v36 - v12;
  if (!v34)
  {
    *((void *)v11 + 2) = v37;
    return (uint64_t)v11;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A88E935C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_1A88E791C(a4, a5, a6, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!a2)
  {
    a3 = 0;
    long long v24 = v34;
    *(_OWORD *)a1 = v33;
    *(_OWORD *)(a1 + 16) = v24;
    unsigned __int8 v25 = v35;
LABEL_26:
    *(unsigned char *)(a1 + 32) = v25;
    return a3;
  }
  long long v10 = v33;
  uint64_t v11 = *((void *)&v34 + 1);
  uint64_t v12 = v34;
  int v32 = v35;
  if (!a3)
  {
LABEL_25:
    *(_OWORD *)a1 = v10;
    *(void *)(a1 + 16) = v12;
    *(void *)(a1 + 24) = v11;
    unsigned __int8 v25 = v32;
    goto LABEL_26;
  }
  if (a3 < 0)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v31 = a1;
  uint64_t v13 = *(void *)(v33 + 16);
  if ((uint64_t)v34 >= v13)
  {
    uint64_t v23 = 0;
    goto LABEL_23;
  }
  uint64_t v14 = 0;
  uint64_t v15 = v33 + 40;
  uint64_t v16 = 1;
  uint64_t v26 = v33 + 40;
  uint64_t v27 = a3;
  while (2)
  {
    uint64_t v28 = v14;
    uint64_t v29 = v16;
    uint64_t v30 = a2;
    uint64_t v17 = (unsigned char *)(v15 + 16 * v12);
    uint64_t v18 = v12;
    while (1)
    {
      if (v12 < 0)
      {
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if ((unint64_t)v18 >= *(void *)(v10 + 16)) {
        goto LABEL_29;
      }
      uint64_t v19 = *((void *)v17 - 1);
      char v20 = *v17;
      uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v11)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        BOOL v21 = static SectionSpecifier.Part.< infix(_:_:)(v19, v11);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = v18 + 1;
          goto LABEL_22;
        }
      }
      if (!v32) {
        goto LABEL_16;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      Swift::Bool v22 = SectionSpecifier.Part.isChildPart(of:)(*(NIOIMAPCore2::SectionSpecifier::Part *)((char *)&v10 + 8));
      uint64_t result = swift_bridgeObjectRelease();
      if (v22) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v18;
      v17 += 16;
      if (v18 >= v13)
      {
        uint64_t v12 = v18;
LABEL_22:
        uint64_t v23 = v28;
        goto LABEL_23;
      }
    }
    uint64_t v12 = v18;
LABEL_16:
    ++v12;
    uint64_t v23 = v29;
    *(void *)uint64_t v30 = v19;
    *(unsigned char *)(v30 + 8) = v20;
    uint64_t v15 = v26;
    a3 = v27;
    if (v29 == v27)
    {
      a1 = v31;
      goto LABEL_25;
    }
    uint64_t v16 = v29 + 1;
    a2 = v30 + 16;
    uint64_t v14 = v29;
    if (v12 < v13) {
      continue;
    }
    break;
  }
LABEL_23:
  *(_OWORD *)uint64_t v31 = v10;
  *(void *)(v31 + 16) = v12;
  *(void *)(v31 + 24) = v11;
  a3 = v23;
  *(unsigned char *)(v31 + 32) = v32;
  return a3;
}

unint64_t sub_1A88E9574(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v15 = &v21;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  sub_1A88C5A44(3, (uint64_t (*)(void *))OUTLINED_FUNCTION_6_4, 0, (uint64_t (*)(_OWORD *))sub_1A88E96CC, (uint64_t)v14, (uint64_t)nullsub_1, 0, a2, a3, a4, a5);
  uint64_t v7 = v21;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A88E77F0(v6, v7);
  if (v9)
  {
    unint64_t v13 = sub_1A88AE694(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease_n();
    return v13;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v7 + 16))
  {
    unint64_t v10 = v7 + 16 * result;
    Swift::Int v11 = *(void *)(v10 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v10 + 40);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v20 = sub_1A88AE694(MEMORY[0x1E4FBC860]);
    sub_1A88E7BEC(v11, v12, a1 & 1, &v20, v7);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88E96CC(uint64_t a1)
{
  return sub_1A88E762C(a1, *(char ***)(v1 + 16));
}

uint64_t sub_1A88E96F0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_1A88C2478(a5);
    swift_bridgeObjectRelease();
    return 5;
  }
  sub_1A8529F8C(a5, (uint64_t)v19, &qword_1E9743B78);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_10;
  }
  v21[0] = v19[0];
  v21[1] = v19[1];
  void v21[2] = v20;
  sub_1A88AF2E4((uint64_t)v21, (uint64_t)v22);
  sub_1A88AF2E4((uint64_t)v22, (uint64_t)v23);
  int v12 = v24 >> 4;
  if (v12 == 5)
  {
    v24 &= 0xFu;
    sub_1A8529F8C((uint64_t)v23, (uint64_t)v26, (uint64_t *)&unk_1E9743F40);
    sub_1A8529F8C((uint64_t)v26, (uint64_t)v28, (uint64_t *)&unk_1E9743F40);
    if (v29) {
      goto LABEL_10;
    }
    uint64_t v16 = sub_1A88CCDF4(v28[0], v28[1]);
    uint64_t v17 = v15;
    if (v16 == 1819112552 && v15 == 0xE400000000000000 || (sub_1A8A78588() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1A88C2478(a5);
      swift_bridgeObjectRelease();
      return 2;
    }
    if (v16 == 0x6E69616C70 && v17 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
LABEL_10:
        char v14 = sub_1A88AE354(a1, a2, a3, a4, a5);
        sub_1A88C2478(a5);
        swift_bridgeObjectRelease();
        if (v14) {
          return 4;
        }
        else {
          return 6;
        }
      }
    }
    sub_1A88C2478(a5);
    swift_bridgeObjectRelease();
    return 3;
  }
  if (v12) {
    goto LABEL_10;
  }
  v24 &= 0xFu;
  sub_1A88CC024((uint64_t)v23, (uint64_t)v25);
  sub_1A88CC024((uint64_t)v25, (uint64_t)v26);
  if (v27 < 0)
  {
    v27 &= ~0x80u;
    sub_1A8529F8C((uint64_t)v26, (uint64_t)v28, (uint64_t *)&unk_1E9743F40);
    sub_1A88C2478(a5);
    swift_bridgeObjectRelease();
  }
  else
  {
    int v13 = v26[0];
    sub_1A88C2478(a5);
    swift_bridgeObjectRelease();
    if (!v13) {
      return 0;
    }
  }
  return 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ConnectionUsage.NonMailboxUsage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for MailboxOfInterest.LocalModification(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for ConnectionUsage.NonMailboxUsage(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for ConnectionUsage.NonMailboxUsage(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionUsage.NonMailboxUsage(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionUsage.NonMailboxUsage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

void *sub_1A88E9B84(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MultipartChoice()
{
  return &type metadata for MultipartChoice;
}

uint64_t sub_1A88E9BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DisplayPartTree.ChildNodes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for DisplayPartTree.ChildNodes(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for DisplayPartTree.ChildNodes()
{
  return &type metadata for DisplayPartTree.ChildNodes;
}

ValueMetadata *type metadata accessor for DisplayPartTree()
{
  return &type metadata for DisplayPartTree;
}

ValueMetadata *type metadata accessor for DisplayPartTree.Node()
{
  return &type metadata for DisplayPartTree.Node;
}

uint64_t initializeWithCopy for DisplayPartTree.ChildNodes.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DisplayPartTree.ChildNodes.Iterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for DisplayPartTree.ChildNodes.Iterator(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayPartTree.ChildNodes.Iterator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayPartTree.ChildNodes.Iterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayPartTree.ChildNodes.Iterator()
{
  return &type metadata for DisplayPartTree.ChildNodes.Iterator;
}

unsigned char *storeEnumTagSinglePayload for DisplayPartTree.Node.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88E9F78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayPartTree.Node.Kind()
{
  return &type metadata for DisplayPartTree.Node.Kind;
}

unint64_t sub_1A88E9FB4()
{
  unint64_t result = qword_1E974E360;
  if (!qword_1E974E360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E360);
  }
  return result;
}

BOOL static DisplayPart.PlainTextLineKind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t DisplayPart.PlainTextLineKind.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t DisplayPart.PlainTextLineKind.hashValue.getter()
{
  return sub_1A8A787C8();
}

unint64_t sub_1A88EA090()
{
  unint64_t result = qword_1E974E368;
  if (!qword_1E974E368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E368);
  }
  return result;
}

unsigned char *_s14descr1EFE6B889O17PlainTextLineKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88EA1B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayPart.PlainTextLineKind()
{
  return &type metadata for DisplayPart.PlainTextLineKind;
}

uint64_t sub_1A88EA1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4)
  {
    if (*(void *)(a4 + 16) == 1)
    {
      uint64_t v9 = *(void *)(a4 + 32);
      uint64_t v10 = *(void *)(a4 + 40);
      int v11 = *(__int16 *)(a4 + 48);
      uint64_t result = swift_bridgeObjectRelease();
      if (v11 < 0)
      {
        if (v9) {
          uint64_t v13 = v10 - v9;
        }
        else {
          uint64_t v13 = 0;
        }
        if (v13 < 0)
        {
          __break(1u);
LABEL_24:
          __break(1u);
          return result;
        }
        sub_1A88FAC28("flowed", 6, 0, v13, v9, v10, &v19);
        if (v19 == 1)
        {
          if (a8)
          {
            if (*(void *)(a8 + 16) == 1)
            {
              uint64_t v14 = *(void *)(a8 + 32);
              uint64_t v15 = *(void *)(a8 + 40);
              int v16 = *(__int16 *)(a8 + 48);
              uint64_t result = swift_bridgeObjectRelease();
              if (v16 < 0)
              {
                if (v14) {
                  uint64_t v17 = v15 - v14;
                }
                else {
                  uint64_t v17 = 0;
                }
                if ((v17 & 0x8000000000000000) == 0)
                {
                  sub_1A88FAC28("yes", 3, 0, v17, v14, v15, &v18);
                  if (v18) {
                    return 2;
                  }
                  return 1;
                }
                goto LABEL_24;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          return 1;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A88EA308(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = a2 - result;
  if (a3) {
    uint64_t v7 = (char *)(a3 + result);
  }
  else {
    uint64_t v7 = 0;
  }
  if (a3) {
    uint64_t v8 = a2 - result;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8 < 0)
  {
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  uint64_t v53 = 0;
  uint64_t v54 = v8;
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  uint64_t v9 = a6 - a5;
  if (a5) {
    uint64_t v10 = a6 - a5;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10 < 0) {
    goto LABEL_128;
  }
  uint64_t v11 = a3;
  if (v10)
  {
    uint64_t v46 = a4;
    unint64_t v47 = a2 - result;
    uint64_t v48 = result;
    unint64_t v49 = a2;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    char v14 = 2;
    Swift::Bool v52 = v7;
    do
    {
      if (!a5)
      {
        uint64_t v12 = 0;
        uint64_t v18 = 0;
        char v14 = 2;
        goto LABEL_82;
      }
      uint64_t v15 = a5;
      int v16 = (unsigned __int8 *)&v13[a5];
      uint64_t v17 = v9;
      uint64_t v18 = (uint64_t)v13;
      uint64_t v19 = v9 - (void)v13;
      uint64_t result = (uint64_t)memchr(&v13[a5], 10, v9 - (void)v13);
      if (!result) {
        goto LABEL_80;
      }
      long long v20 = (char *)(result - (void)v16);
      if (result - (uint64_t)v16 < 0) {
        goto LABEL_80;
      }
      uint64_t v21 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_116;
      }
      if (v19 < (uint64_t)v21) {
        goto LABEL_80;
      }
      Swift::Bool v22 = &v20[v18];
      if (__OFADD__(v20, v18)) {
        goto LABEL_117;
      }
      uint64_t v13 = &v21[v18];
      if (__OFADD__(v21, v18))
      {
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
        goto LABEL_127;
      }
      if ((uint64_t)v21 < (uint64_t)v20 || (uint64_t)v13 < (uint64_t)v22) {
        goto LABEL_119;
      }
      uint64_t v9 = v17;
      a5 = v15;
      uint64_t v7 = v52;
      if (v18 < (uint64_t)v22)
      {
        if ((uint64_t)v22 > v9) {
          goto LABEL_124;
        }
        if (v22[v15 - 1] == 13) {
          --v22;
        }
      }
      uint64_t v23 = (uint64_t)&v22[-v18];
      if ((uint64_t)v22 < v18) {
        goto LABEL_120;
      }
      if (v9 < (uint64_t)v22) {
        goto LABEL_121;
      }
      if (v14 != 2 && (v14 & 1) == 0 && v12 != v8)
      {
        v52[v12++] = 10;
        if (v8 < v12) {
          goto LABEL_125;
        }
      }
      unsigned __int8 v24 = (unsigned __int8 *)&v22[v15];
      if (v22 == (char *)v18)
      {
        char v14 = 0;
      }
      else
      {
        if (v23 < 1) {
          goto LABEL_126;
        }
        unsigned __int8 v25 = &v16[v23 - 1];
        int v26 = *v25;
        char v14 = v26 == 61;
        if (v26 == 61) {
          unsigned __int8 v24 = v25;
        }
      }
      char v27 = (unsigned __int8 *)(v24 - v16);
      if (v24 - v16 < 0) {
        goto LABEL_122;
      }
      if (v24 != v16)
      {
        uint64_t v28 = 0;
        do
        {
          char v29 = v28 + 1;
          if ((uint64_t)v27 < (uint64_t)(v28 + 1))
          {
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
            goto LABEL_118;
          }
          int v30 = v28[(void)v16];
          if (v30 == 9 || v30 == 32)
          {
            if (v12 == v8)
            {
              uint64_t v12 = v8;
LABEL_62:
              ++v28;
              continue;
            }
            v52[v12++] = 32;
            ++v28;
            if (v8 < v12) {
              goto LABEL_111;
            }
          }
          else if (v30 == 61)
          {
            if (v29 == v27) {
              break;
            }
            uint64_t v31 = v28 + 2;
            if ((uint64_t)v27 < (uint64_t)(v28 + 2)) {
              goto LABEL_112;
            }
            if (v31 == v27) {
              break;
            }
            v28 += 3;
            if ((uint64_t)v27 < (uint64_t)v28) {
              goto LABEL_113;
            }
            unsigned __int8 v32 = v29[(void)v16];
            unsigned __int8 v33 = v31[(void)v16];
            if ((v32 - 58) > 0xF5u)
            {
              char v34 = -48;
            }
            else if ((v32 - 71) > 0xF9u)
            {
              char v34 = -55;
            }
            else
            {
              if ((v32 - 103) <= 0xF9u) {
                continue;
              }
              char v34 = -87;
            }
            if ((v33 - 58) > 0xF5u)
            {
              char v36 = -48;
              if (v12 == v8) {
                goto LABEL_73;
              }
            }
            else if ((v33 - 71) > 0xF9u)
            {
              char v36 = -55;
              if (v12 == v8)
              {
LABEL_73:
                uint64_t v12 = v8;
                continue;
              }
            }
            else
            {
              if ((v33 - 103) < 0xFAu) {
                continue;
              }
              char v36 = -87;
              if (v12 == v8) {
                goto LABEL_73;
              }
            }
            v52[v12++] = (v33 + v36) | (16 * (v32 + v34));
            if (v8 < v12) {
              goto LABEL_115;
            }
          }
          else
          {
            if ((v30 - 127) < 0xFFFFFFA1 || v12 == v8) {
              goto LABEL_62;
            }
            v52[v12++] = v30;
            ++v28;
            if (v8 < v12) {
              goto LABEL_114;
            }
          }
        }
        while (v28 != v27);
      }
      if (v10 < (uint64_t)v13) {
        goto LABEL_123;
      }
    }
    while ((uint64_t)v13 >= v18);
    __break(1u);
LABEL_80:
    a5 = v15;
    uint64_t v7 = v52;
LABEL_82:
    char v57 = v14;
    uint64_t v53 = v12;
    if (v18 != v10)
    {
      if (a5) {
        uint64_t v37 = a5 + v10;
      }
      else {
        uint64_t v37 = 0;
      }
      if (a5) {
        uint64_t v38 = a5 + v18;
      }
      else {
        uint64_t v38 = 0;
      }
      sub_1A88EAAE8(v38, v37, 1, &v57, &v53);
      if (v51) {
        return (uint64_t)v7;
      }
      char v14 = v57;
    }
    if (v14 == 2 || (v14 & 1) != 0 || (uint64_t v39 = v53, v40 = v54, v53 == v54))
    {
      a2 = v49;
      uint64_t v11 = v50;
      unint64_t v6 = v47;
      uint64_t result = v48;
      a4 = v46;
      goto LABEL_97;
    }
    v55[v53] = 10;
    uint64_t v41 = v39 + 1;
    a2 = v49;
    uint64_t v11 = v50;
    unint64_t v6 = v47;
    uint64_t result = v48;
    a4 = v46;
    if (v40 >= v41)
    {
      uint64_t v53 = v41;
      goto LABEL_97;
    }
    goto LABEL_136;
  }
LABEL_97:
  uint64_t v42 = a4 - v11;
  if (!v11) {
    uint64_t v42 = 0;
  }
  if (result < 0 || v42 < result) {
    goto LABEL_129;
  }
  if ((a2 & 0x8000000000000000) != 0 || v42 < (uint64_t)a2) {
    goto LABEL_130;
  }
  unint64_t v43 = v6 - (v54 - v53);
  if (__OFSUB__(v6, v54 - v53))
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  BOOL v44 = __OFADD__(result, v43);
  unint64_t v45 = result + v43;
  if (v44)
  {
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  if ((v45 & 0x8000000000000000) != 0 || v42 < (uint64_t)v45) {
    goto LABEL_133;
  }
  if (v45 >= result)
  {
    if (v45 <= a2) {
      return (uint64_t)v7;
    }
    goto LABEL_135;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
  return result;
}

uint64_t sub_1A88EA7D8(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = a2 - result;
  if (a3) {
    uint64_t v8 = a3 + result;
  }
  else {
    uint64_t v8 = 0;
  }
  if (a3) {
    unint64_t v9 = a2 - result;
  }
  else {
    unint64_t v9 = 0;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v13 = result;
  uint64_t v18 = 0;
  unint64_t v19 = v9;
  uint64_t v20 = v8;
  unint64_t v21 = v9;
  uint64_t result = sub_1A88EA8E4(1, &v18, a5, a6);
  if (v6) {
    return v8;
  }
  uint64_t v14 = a4 - a3;
  if (!a3) {
    uint64_t v14 = 0;
  }
  if (v13 < 0 || v14 < v13) {
    goto LABEL_23;
  }
  if ((a2 & 0x8000000000000000) != 0 || v14 < (uint64_t)a2) {
    goto LABEL_24;
  }
  unint64_t v15 = v7 - (v19 - v18);
  if (__OFSUB__(v7, v19 - v18))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  BOOL v16 = __OFADD__(v13, v15);
  unint64_t v17 = v13 + v15;
  if (v16)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v17 & 0x8000000000000000) != 0 || v14 < (uint64_t)v17) {
    goto LABEL_27;
  }
  if (v17 < v13)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v17 <= a2) {
    return v8;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A88EA8E4(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 - a3;
  if (!a3) {
    uint64_t v4 = 0;
  }
  if (v4 < 0) {
    goto LABEL_54;
  }
  if (v4)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v5 + 1;
      if (v4 < v5 + 1)
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        return result;
      }
      int v7 = *(unsigned __int8 *)(a3 + v5);
      if (v7 == 61)
      {
        if (v6 == v4) {
          return result;
        }
        uint64_t v8 = v5 + 2;
        if (v4 < v5 + 2) {
          goto LABEL_50;
        }
        if (v8 == v4) {
          return result;
        }
        uint64_t v9 = v5 + 3;
        if (v4 < v5 + 3) {
          goto LABEL_51;
        }
        char v10 = *(unsigned char *)(a3 + v6);
        char v11 = *(unsigned char *)(a3 + v8);
        if ((v10 - 58) > 0xF5u)
        {
          char v12 = -48;
        }
        else
        {
          if ((v10 - 71) <= 0xF9u)
          {
            if ((v10 - 103) >= 0xFAu)
            {
              char v12 = -87;
              goto LABEL_39;
            }
LABEL_6:
            uint64_t v6 = v9;
            goto LABEL_7;
          }
          char v12 = -55;
        }
LABEL_39:
        if ((v11 - 58) > 0xF5u)
        {
          char v20 = -48;
        }
        else if ((v11 - 71) > 0xF9u)
        {
          char v20 = -55;
        }
        else
        {
          if ((v11 - 103) < 0xFAu) {
            goto LABEL_6;
          }
          char v20 = -87;
        }
        uint64_t v21 = *a2;
        uint64_t v14 = a2[1];
        if (*a2 != v14)
        {
          char v22 = (v11 + v20) | (16 * (v10 + v12));
          uint64_t v15 = a2[2];
          *(unsigned char *)(v15 + v21) = v22;
          uint64_t v16 = v21 + 1;
          if (v14 < v21 + 1) {
            goto LABEL_52;
          }
          goto LABEL_47;
        }
        goto LABEL_6;
      }
      if (result)
      {
        if (v7 != 9 && v7 != 32)
        {
          if (v7 != 95) {
            goto LABEL_34;
          }
          uint64_t v13 = *a2;
          uint64_t v14 = a2[1];
          if (*a2 != v14)
          {
            uint64_t v15 = a2[2];
            *(unsigned char *)(v15 + v13) = 32;
            uint64_t v16 = v13 + 1;
            if (v14 < v13 + 1) {
              goto LABEL_56;
            }
            goto LABEL_32;
          }
          goto LABEL_7;
        }
      }
      else if (v7 != 32 && v7 != 9)
      {
LABEL_34:
        if ((v7 - 127) < 0xFFFFFFA1) {
          goto LABEL_7;
        }
        uint64_t v19 = *a2;
        uint64_t v14 = a2[1];
        if (*a2 == v14) {
          goto LABEL_7;
        }
        uint64_t v15 = a2[2];
        *(unsigned char *)(v15 + v19) = v7;
        uint64_t v16 = v19 + 1;
        if (v14 < v16) {
          goto LABEL_55;
        }
LABEL_32:
        uint64_t v9 = v6;
LABEL_47:
        *a2 = v16;
        a2[1] = v14;
        uint64_t v6 = v9;
        a2[2] = v15;
        goto LABEL_7;
      }
      uint64_t v18 = *a2;
      uint64_t v14 = a2[1];
      if (*a2 != v14)
      {
        uint64_t v15 = a2[2];
        *(unsigned char *)(v15 + v18) = 32;
        uint64_t v16 = v18 + 1;
        if (v14 < v18 + 1) {
          goto LABEL_53;
        }
        goto LABEL_32;
      }
LABEL_7:
      uint64_t v5 = v6;
    }
    while (v6 != v4);
  }
  return result;
}

uint64_t sub_1A88EAAE8(uint64_t result, uint64_t a2, char a3, unsigned char *a4, uint64_t *a5)
{
  uint64_t v5 = a2;
  int v6 = *a4;
  if (v6 != 2 && (v6 & 1) == 0)
  {
    uint64_t v9 = *a5;
    uint64_t v8 = a5[1];
    if (*a5 != v8)
    {
      uint64_t v10 = a5[2];
      *(unsigned char *)(v10 + v9) = 10;
      uint64_t v11 = v9 + 1;
      if (v8 < v11) {
        goto LABEL_22;
      }
      *a5 = v11;
      a5[1] = v8;
      a5[2] = v10;
    }
  }
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v12 = a2 - result;
  if (a2 == result) {
    goto LABEL_16;
  }
  uint64_t v13 = v12 - 1;
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
  }
  else if ((v13 & 0x8000000000000000) == 0 && v13 < v12)
  {
    uint64_t v14 = (unsigned char *)(result + v13);
    if (*v14 == 61)
    {
      *a4 = 1;
      uint64_t v5 = (uint64_t)v14;
      return sub_1A88EA8E4(0, a5, result, v5);
    }
LABEL_16:
    if (a3) {
      *a4 = 2;
    }
    else {
      *a4 = 0;
    }
    return sub_1A88EA8E4(0, a5, result, v5);
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1A88EABBC(int64_t a1, int64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, char *a6)
{
  uint64_t v76 = a5;
  uint64_t v90 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = a4 - a3;
  if (a3) {
    uint64_t v8 = a4 - a3;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8 < 0) {
    goto LABEL_104;
  }
  uint64_t v9 = v6;
  uint64_t v10 = (uint64_t)a2;
  uint64_t v11 = (uint64_t *)a1;
  uint64_t v81 = 0;
  uint64_t v82 = v8;
  uint64_t v83 = a3;
  uint64_t v84 = a4;
  if (v8)
  {
    uint64_t v13 = 0;
    uint64_t v74 = a2;
    while (v13 < v7)
    {
      unsigned int v16 = *(unsigned __int8 *)(a3 + v13);
      if (v16 == 61)
      {
        sub_1A88EB330(a1, a2, v85);
        a1 = sub_1A88EB6D0((uint64_t)v85, (uint64_t)v86);
        char v17 = v87;
        if (v87 != 2)
        {
          char v22 = (unsigned __int8 *)v86[1];
          uint64_t v75 = (unsigned __int8 *)v86[0];
          unsigned __int8 v24 = v88;
          uint64_t v23 = v89;
          sub_1A88F6E8C(v10);
          if (v24) {
            int64_t v25 = v23 - v24;
          }
          else {
            int64_t v25 = 0;
          }
          int64_t v26 = v25 + 1;
          BOOL v27 = __OFADD__(v25, 1);
          if ((v17 & 1) == 0)
          {
            if (v27) {
              goto LABEL_97;
            }
            if (v26 < 0) {
              goto LABEL_102;
            }
            uint64_t v73 = v22;
            uint64_t isStackAllocationSafe = swift_retain();
            if (v26 < 1025
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              uint64_t v30 = sub_1A88AFACC((uint64_t)v24, (uint64_t)v23, (uint64_t)&v73 - v29, (uint64_t)&v73 + v26 - v29, 0);
              if (!v9)
              {
                if ((v32 & 1) == 0)
                {
                  unsigned __int8 v33 = (int8x8_t *)v30;
                  uint64_t v34 = v31;
                  unsigned __int8 v35 = v76;
                  swift_retain();
                  sub_1A88FA030(v75, v73, 0, 0, 0, v35, v33, v34);
                  if (!v36)
                  {
LABEL_81:
                    uint64_t v79 = 0;
                    unint64_t v80 = 0xE000000000000000;
                    MEMORY[0x1AD0DF770](v25);
                    uint64_t v69 = v79;
                    unint64_t v70 = v80;
                    if (v24)
                    {
                      uint64_t v10 = (uint64_t)v74;
                      goto LABEL_87;
                    }
                    uint64_t v10 = (uint64_t)v74;
                    if (v23)
                    {
                      unsigned __int8 v24 = 0;
                      do
                      {
                        int v71 = *v24++;
                        if ((v71 - 1) <= 0x7D)
                        {
                          uint64_t v77 = v69;
                          unint64_t v78 = v70;
                          sub_1A8A766D8();
                          uint64_t v69 = v77;
                          unint64_t v70 = v78;
                        }
LABEL_87:
                        ;
                      }
                      while (!v23 || v24 != v23);
                    }
                    swift_bridgeObjectRelease();
                    goto LABEL_85;
                  }
LABEL_70:
                  swift_release();
                  uint64_t v10 = (uint64_t)v74;
LABEL_86:
                  sub_1A8A767E8();
                  a1 = swift_bridgeObjectRelease();
                  *a6 = 1;
                  uint64_t v18 = v81;
                  uint64_t v7 = v82;
                  goto LABEL_13;
                }
                sub_1A88EB738();
                uint64_t v9 = (void *)swift_allocError();
                swift_willThrow();
              }
              swift_willThrow();
            }
            else
            {
              uint64_t v53 = swift_slowAlloc();
              uint64_t v54 = sub_1A88AFACC((uint64_t)v24, (uint64_t)v23, v53, v53 + v26, 0);
              if (!v9)
              {
                if ((v56 & 1) == 0)
                {
                  char v57 = (int8x8_t *)v54;
                  uint64_t v58 = v55;
                  char v59 = v76;
                  swift_retain();
                  sub_1A88FA030(v75, v73, 0, 0, 0, v59, v57, v58);
                  uint64_t v61 = v60;
                  MEMORY[0x1AD0E4D00](v53, -1, -1);
                  if (!v61) {
                    goto LABEL_81;
                  }
                  goto LABEL_70;
                }
                sub_1A88EB738();
                uint64_t v9 = (void *)swift_allocError();
                swift_willThrow();
              }
              MEMORY[0x1AD0E4D00](v53, -1, -1);
            }

            uint64_t v9 = 0;
            goto LABEL_81;
          }
          if (v27) {
            goto LABEL_98;
          }
          if (v26 < 0) {
            goto LABEL_103;
          }
          uint64_t v41 = v22;
          uint64_t v42 = swift_retain();
          if (v26 < 1025 || (uint64_t v42 = swift_stdlib_isStackAllocationSafe(), (v42 & 1) != 0))
          {
            unint64_t v43 = &v73;
            MEMORY[0x1F4188790](v42);
            uint64_t v45 = sub_1A88EA7D8(0, v26, (uint64_t)&v73 - v44, (uint64_t)&v73 + v26 - v44, (uint64_t)v24, (uint64_t)v23);
            if (v9) {
              goto LABEL_108;
            }
            if (v47)
            {
              sub_1A88EB738();
              swift_allocError();
              swift_willThrow();
LABEL_108:
              swift_willThrow();
              __break(1u);
LABEL_109:
              sub_1A88EB738();
              swift_allocError();
              swift_willThrow();
LABEL_110:
              MEMORY[0x1AD0E4D00](v43, -1, -1);
              __break(1u);
              JUMPOUT(0x1A88EB320);
            }
            uint64_t v48 = (int8x8_t *)v45;
            uint64_t v49 = v46;
            uint64_t v50 = v76;
            swift_retain();
            sub_1A88FA030(v75, v41, 0, 0, 0, v50, v48, v49);
            uint64_t v52 = v51;
          }
          else
          {
            unint64_t v43 = (unsigned __int8 **)swift_slowAlloc();
            uint64_t v62 = sub_1A88EA7D8(0, v26, (uint64_t)v43, (uint64_t)v43 + v26, (uint64_t)v24, (uint64_t)v23);
            if (v9) {
              goto LABEL_110;
            }
            if (v64) {
              goto LABEL_109;
            }
            char v65 = (int8x8_t *)v62;
            uint64_t v66 = v63;
            unsigned int v67 = v76;
            swift_retain();
            sub_1A88FA030(v75, v41, 0, 0, 0, v67, v65, v66);
            uint64_t v52 = v68;
            MEMORY[0x1AD0E4D00](v43, -1, -1);
          }
          uint64_t v10 = (uint64_t)v74;
          if (!v52) {
            sub_1A88BB254(v24, v23, 0);
          }
LABEL_85:
          swift_release();
          goto LABEL_86;
        }
        uint64_t v13 = v81;
        uint64_t v7 = v82;
      }
      uint64_t v18 = v7;
      if (v13 != v7)
      {
        if (v13 >= v7) {
          goto LABEL_94;
        }
        uint64_t v19 = v84 - v83;
        if (!v83) {
          uint64_t v19 = 0;
        }
        if (v13 < 0 || v13 >= v19) {
          goto LABEL_95;
        }
        uint64_t v18 = v13 + 1;
        uint64_t v81 = v13 + 1;
      }
      switch(*a6)
      {
        case 1:
          if (v16 > 0x20 || ((1 << v16) & 0x100002600) == 0)
          {
            if (v16 < 0x21) {
              goto LABEL_13;
            }
            uint64_t v40 = v11[2];
            if (v40 >= v11[1]) {
              goto LABEL_105;
            }
            goto LABEL_53;
          }
          char v15 = 2;
          break;
        case 2:
          if (v16 < 0x21) {
            goto LABEL_13;
          }
          *a6 = 0;
          uint64_t v38 = v11[1];
          uint64_t v37 = v11[2];
          if (v37 >= v38) {
            goto LABEL_99;
          }
          uint64_t v39 = *v11;
          *(unsigned char *)(*v11 + v37) = 32;
          v11[2] = v37 + 1;
          if (v37 + 1 >= v38) {
            goto LABEL_101;
          }
          *(unsigned char *)(v39 + v37 + 1) = v16;
          v11[2] = v37 + 2;
          goto LABEL_13;
        case 3:
          if (v16 < 0x21) {
            goto LABEL_13;
          }
          *a6 = 0;
          uint64_t v40 = v11[2];
          if (v40 < v11[1]) {
            goto LABEL_53;
          }
          goto LABEL_100;
        default:
          if (v16 > 0x20 || ((1 << v16) & 0x100002600) == 0)
          {
            if (v16 < 0x21) {
              goto LABEL_13;
            }
            uint64_t v40 = v11[2];
            if (v40 >= v11[1]) {
              goto LABEL_106;
            }
LABEL_53:
            *(unsigned char *)(*v11 + v40) = v16;
            v11[2] = v40 + 1;
            goto LABEL_13;
          }
          uint64_t v21 = v11[2];
          if (v21 >= v11[1]) {
            goto LABEL_96;
          }
          *(unsigned char *)(*v11 + v21) = 32;
          v11[2] = v21 + 1;
          char v15 = 3;
          break;
      }
      *a6 = v15;
LABEL_13:
      a3 = v83;
      uint64_t v13 = v18;
      if (v18 == v7) {
        return sub_1A88F6E8C(v10);
      }
    }
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
  }
  return sub_1A88F6E8C(v10);
}

int64_t sub_1A88EB330@<X0>(int64_t result@<X0>, int64_t *a2@<X1>, int64_t *a3@<X8>)
{
  int64_t v11 = *v10;
  int64_t v12 = v10[1];
  if (*v10 == v12) {
    goto LABEL_28;
  }
  if (*v10 >= v12)
  {
    __break(1u);
    goto LABEL_58;
  }
  int64_t v3 = v10[2];
  if (*(unsigned char *)(v3 + v11) != 61) {
    goto LABEL_28;
  }
  int64_t v4 = v10[3];
  int64_t v5 = v11 + 1;
  *uint64_t v10 = v11 + 1;
  if (v11 + 1 == v12) {
    goto LABEL_28;
  }
  if (v11 + 1 >= v12)
  {
    __break(1u);
LABEL_80:
    int64_t v25 = result;
    uint64_t v10 = a2;
    while (1)
    {
      int64_t v23 = v25 + 2;
      if (__OFADD__(v25 + 1, 1)) {
        goto LABEL_97;
      }
      if (v12 < v23) {
        goto LABEL_98;
      }
      if (v23 < ++v25) {
        goto LABEL_99;
      }
      if (v23 == v12) {
        goto LABEL_88;
      }
      if (*(unsigned char *)(v3 + v23) == 63) {
        goto LABEL_59;
      }
    }
  }
  if (*(unsigned char *)(v3 + v5) != 63) {
    goto LABEL_28;
  }
  uint64_t v6 = v11 + 2;
  *uint64_t v10 = v11 + 2;
  if (v11 + 2 == v12) {
    goto LABEL_28;
  }
  if (v11 + 2 >= v12)
  {
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  int64_t v5 = v3 + v6;
  unsigned int v13 = *(unsigned __int8 *)(v3 + v6);
  BOOL v17 = v13 > 0x3F;
  int64_t v7 = (1 << v13) & 0x8000000000102600;
  if (!v17 && v7 != 0)
  {
    int64_t v8 = v11 + 2;
    goto LABEL_17;
  }
  int64_t v8 = v11 + 3;
  int64_t v7 = v12;
  BOOL v17 = v11 + 3 < v12;
  if (v11 + 3 == v12)
  {
LABEL_31:
    *uint64_t v10 = v7;
    int64_t v8 = v7;
    BOOL v17 = v7 < v6;
    if (v7 >= v6) {
      goto LABEL_17;
    }
    __break(1u);
  }
  if (!v17) {
    goto LABEL_91;
  }
  unsigned int v18 = *(unsigned __int8 *)(v3 + v8);
  if (v18 > 0x3F || (int64_t v7 = 1 << v18, v9 = 0x8000000000102600, (v7 & 0x8000000000102600) == 0))
  {
    unint64_t v9 = 0x8000000000102600;
    uint64_t result = v11 + 2;
    while (1)
    {
      int64_t v7 = result + 2;
      if (__OFADD__(result + 1, 1)) {
        goto LABEL_92;
      }
      if (v12 < v7) {
        goto LABEL_93;
      }
      if (v7 < ++result) {
        goto LABEL_94;
      }
      if (v7 == v12)
      {
        int64_t v7 = v12;
        goto LABEL_31;
      }
      unsigned int v20 = *(unsigned __int8 *)(v3 + v7);
      BOOL v17 = v20 > 0x3F;
      unint64_t v21 = (1 << v20) & 0x8000000000102600;
      if (!v17 && v21 != 0) {
        goto LABEL_31;
      }
    }
  }
  *uint64_t v10 = v8;
LABEL_17:
  if (v12 >= v8)
  {
    if (v8 != v12)
    {
      if (v8 >= v12) {
        goto LABEL_89;
      }
      int64_t v7 = v3 + v8;
      if (*(unsigned char *)(v3 + v8) == 63 && v6 != v8 && v8 + 1 != v12)
      {
        if (v8 + 1 >= v12)
        {
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
        uint64_t v6 = 0;
        uint64_t result = *(unsigned __int8 *)(v3 + v8 + 1);
        int64_t v15 = v8 + 2;
        *uint64_t v10 = v8 + 2;
        if ((int)result > 97)
        {
          if (result == 98) {
            goto LABEL_41;
          }
          if (result != 113) {
            goto LABEL_78;
          }
        }
        else
        {
          if (result == 66) {
            goto LABEL_41;
          }
          if (result != 81) {
            goto LABEL_78;
          }
        }
        uint64_t v6 = 1;
LABEL_41:
        if (v15 != v12)
        {
          if (v15 < v12)
          {
            if (*(unsigned char *)(v3 + v15) != 63) {
              goto LABEL_78;
            }
            uint64_t result = v8 + 3;
            *uint64_t v10 = v8 + 3;
            v10[1] = v12;
            v10[2] = v3;
            v10[3] = v4;
            if (v8 + 3 == v12) {
              goto LABEL_78;
            }
            if (v8 + 3 >= v12) {
              goto LABEL_100;
            }
            unint64_t v9 = v3 + result;
            if (*(unsigned char *)(v3 + result) == 63)
            {
              int64_t v19 = v8 + 3;
              goto LABEL_65;
            }
LABEL_58:
            int64_t v19 = v8 + 4;
            int64_t v23 = v12;
            BOOL v24 = v19 < v12;
            if (v19 != v12) {
              goto LABEL_61;
            }
            goto LABEL_59;
          }
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
LABEL_78:
        int64_t v5 = 0;
        int64_t v7 = 0;
        unint64_t v9 = 0;
        int64_t v16 = 0;
        *uint64_t v10 = v11;
        v10[1] = v12;
        uint64_t v6 = 2;
        v10[2] = v3;
        v10[3] = v4;
        goto LABEL_29;
      }
    }
LABEL_28:
    int64_t v5 = 0;
    int64_t v7 = 0;
    unint64_t v9 = 0;
    int64_t v16 = 0;
    *uint64_t v10 = v11;
    uint64_t v6 = 2;
LABEL_29:
    *a3 = v5;
    a3[1] = v7;
    a3[2] = v6;
    a3[3] = v9;
    a3[4] = v16;
    return result;
  }
  __break(1u);
LABEL_88:
  int64_t v23 = v12;
LABEL_59:
  *uint64_t v10 = v23;
  v10[2] = v3;
  int64_t v19 = v23;
  BOOL v24 = v23 < result;
  if (v23 >= result) {
    goto LABEL_65;
  }
  __break(1u);
LABEL_61:
  if (!v24) {
    goto LABEL_102;
  }
  a2 = v10;
  if (*(unsigned char *)(v3 + v19) != 63) {
    goto LABEL_80;
  }
  *uint64_t v10 = v19;
  v10[2] = v3;
LABEL_65:
  if (v12 < v19)
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  if (v19 == v12) {
    goto LABEL_78;
  }
  if (v19 >= v12)
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  uint64_t result = v3 + v19;
  if (*(unsigned char *)(v3 + v19) != 63) {
    goto LABEL_78;
  }
  *uint64_t v10 = v19 + 1;
  v10[1] = v12;
  v10[2] = v3;
  v10[3] = v4;
  if (v19 + 1 == v12) {
    goto LABEL_78;
  }
  if (v19 + 1 < v12)
  {
    if (*(unsigned char *)(v3 + v19 + 1) == 61)
    {
      *uint64_t v10 = v19 + 2;
      v10[2] = v3;
      if (v3)
      {
        int64_t v16 = v3 + v19;
      }
      else
      {
        int64_t v7 = 0;
        int64_t v5 = 0;
        int64_t v16 = 0;
      }
      if (!v3) {
        unint64_t v9 = 0;
      }
      goto LABEL_29;
    }
    goto LABEL_78;
  }
LABEL_103:
  __break(1u);
  return result;
}

uint64_t sub_1A88EB6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A88EB738()
{
  unint64_t result = qword_1E974E370;
  if (!qword_1E974E370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E370);
  }
  return result;
}

int64_t sub_1A88EB78C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  if (a1) {
    uint64_t v6 = a2 - a1;
  }
  else {
    uint64_t v6 = 0;
  }
  MEMORY[0x1AD0DF770](v6);
  char v8 = 0;
  sub_1A88F7278(v6, v9, a1, a2, a3, &v8);
  return v9[0];
}

ValueMetadata *type metadata accessor for OutputBufferTooSmall()
{
  return &type metadata for OutputBufferTooSmall;
}

ValueMetadata *type metadata accessor for RFC_2047()
{
  return &type metadata for RFC_2047;
}

uint64_t getEnumTagSinglePayload for RFC_2047.EncodedWord(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RFC_2047.EncodedWord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RFC_2047.EncodedWord()
{
  return &type metadata for RFC_2047.EncodedWord;
}

unsigned char *storeEnumTagSinglePayload for RFC_2047.Encoding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88EB9A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RFC_2047.Encoding()
{
  return &type metadata for RFC_2047.Encoding;
}

unint64_t sub_1A88EB9DC()
{
  unint64_t result = qword_1E974E378;
  if (!qword_1E974E378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E378);
  }
  return result;
}

uint64_t sub_1A88EBA30(uint64_t a1, char **a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = (char *)MEMORY[0x1E4FBC860];
  if (v2)
  {
    unsigned int v4 = (char *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 65);
    do
    {
      unsigned int v6 = *(unsigned char **)(v4 - 33);
      uint64_t v7 = *(void *)(v4 - 25);
      uint64_t v8 = *(void *)(v4 - 17);
      uint64_t v9 = *(void *)(v4 - 9);
      char v71 = *(v4 - 1);
      char v69 = *v4;
      sub_1A88EE330(v6, v7);
      if (v12 != 2)
      {
        uint64_t v13 = v10;
        uint64_t v14 = v11;
        int v15 = v12;
        uint64_t v68 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v3 = sub_1A8901500(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v17 = *((void *)v3 + 2);
        unint64_t v16 = *((void *)v3 + 3);
        unsigned int v18 = v3;
        if (v17 >= v16 >> 1) {
          unsigned int v18 = sub_1A8901500((char *)(v16 > 1), v17 + 1, 1, v3);
        }
        *((void *)v18 + 2) = v17 + 1;
        int v3 = v18;
        uint64_t v5 = &v18[64 * v17];
        *((void *)v5 + 4) = v13;
        *((void *)v5 + 5) = v14;
        v5[48] = v15 & 1;
        v5[49] = BYTE1(v15);
        v5[50] = ((v15 & 0xFFFFFFu) >> 16) & 1;
        *((void *)v5 + 7) = v6;
        *((void *)v5 + 8) = v7;
        *((void *)v5 + 9) = v68;
        *((void *)v5 + 10) = v9;
        v5[88] = v71;
        v5[89] = v69;
      }
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v72 = *((void *)v3 + 2);
  if (v72)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v19 = 0;
    unint64_t v20 = 0;
    unint64_t v70 = v3;
    while (1)
    {
      int64_t v23 = &v3[v19];
      uint64_t v25 = *(void *)&v3[v19 + 32];
      BOOL v24 = *(unsigned __int8 **)&v3[v19 + 40];
      if (v3[v19 + 50] == 1)
      {
        int v26 = v23[48];
        BOOL v27 = (unsigned char *)*((void *)v23 + 9);
        uint64_t v28 = *((void *)v23 + 10);
        int v29 = v23[88];
        __int16 v30 = v23[89];
        if (v26)
        {
          sub_1A88ED640(v27, v28, (uint64_t)v77);
          sub_1A8529F8C((uint64_t)v77, (uint64_t)v78, &qword_1E974E388);
          if ((v79 & 1) == 0)
          {
            uint64_t v52 = v78[0];
            uint64_t v66 = v78[1];
            uint64_t v53 = v78[4];
            uint64_t v54 = v78[5];
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E08);
            uint64_t v32 = swift_allocObject();
            *(_OWORD *)(v32 + 16) = xmmword_1A8AD8F00;
            *(void *)(v32 + 32) = v53;
            *(void *)(v32 + 40) = v54;
            *(_WORD *)(v32 + 48) = 0;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            unsigned __int8 v55 = sub_1A88C36DC(v25, (uint64_t)v24);
            unsigned __int8 v56 = v55;
            if (v55 == 13) {
              uint64_t v57 = v25;
            }
            else {
              uint64_t v57 = v55;
            }
            if (v55 == 13) {
              uint64_t v58 = v24;
            }
            else {
              uint64_t v58 = 0;
            }
            char v59 = *a2;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a2 = v59;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              char v59 = sub_1A8901B34(0, *((void *)v59 + 2) + 1, 1, v59);
              *a2 = v59;
            }
            unint64_t v62 = *((void *)v59 + 2);
            unint64_t v61 = *((void *)v59 + 3);
            if (v62 >= v61 >> 1)
            {
              char v59 = sub_1A8901B34((char *)(v61 > 1), v62 + 1, 1, v59);
              *a2 = v59;
            }
            *((void *)v59 + 2) = v62 + 1;
            unint64_t v21 = &v59[56 * v62];
            *((void *)v21 + 4) = v57;
            *((void *)v21 + 5) = v58;
            v21[48] = v56 == 13;
            *((void *)v21 + 7) = v52;
            *((void *)v21 + 8) = v66;
            v21[72] = 0;
            goto LABEL_15;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E08);
        uint64_t v31 = swift_allocObject();
        uint64_t v32 = v31;
        *(_OWORD *)(v31 + 16) = xmmword_1A8AD8F00;
        if (v29) {
          __int16 v33 = -32512;
        }
        else {
          __int16 v33 = 0x8000;
        }
        __int16 v34 = v33 | v30;
        if (v26) {
          __int16 v34 = 0;
        }
        *(void *)(v31 + 32) = v27;
        *(void *)(v31 + 40) = v28;
        *(_WORD *)(v31 + 48) = v34;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        unsigned __int8 v35 = sub_1A88C36DC(v25, (uint64_t)v24);
        unsigned __int8 v36 = v35;
        if (v35 == 13) {
          uint64_t v37 = v25;
        }
        else {
          uint64_t v37 = v35;
        }
        if (v35 == 13) {
          uint64_t v38 = v24;
        }
        else {
          uint64_t v38 = 0;
        }
        uint64_t v39 = *a2;
        char v40 = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v39;
        if ((v40 & 1) == 0)
        {
          uint64_t v39 = sub_1A8901B34(0, *((void *)v39 + 2) + 1, 1, v39);
          *a2 = v39;
        }
        unint64_t v42 = *((void *)v39 + 2);
        unint64_t v41 = *((void *)v39 + 3);
        if (v42 >= v41 >> 1)
        {
          uint64_t v39 = sub_1A8901B34((char *)(v41 > 1), v42 + 1, 1, v39);
          *a2 = v39;
        }
        *((void *)v39 + 2) = v42 + 1;
        unint64_t v21 = &v39[56 * v42];
        *((void *)v21 + 4) = v37;
        *((void *)v21 + 5) = v38;
        v21[48] = v36 == 13;
        *((void *)v21 + 7) = 0;
        *((void *)v21 + 8) = 0;
        char v22 = 1;
      }
      else
      {
        if (v23[49]) {
          goto LABEL_16;
        }
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        char v76 = 1;
        uint64_t v73 = MEMORY[0x1E4FBC860];
        sub_1A88ECE8C(v25, v24, v20, (uint64_t)v3, (uint64_t)&v74, &v73);
        uint64_t v43 = v74;
        uint64_t v65 = v75;
        char v64 = v76;
        uint64_t v32 = v73;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        unsigned __int8 v44 = sub_1A88C36DC(v25, (uint64_t)v24);
        unsigned __int8 v45 = v44;
        if (v44 == 13) {
          uint64_t v46 = v25;
        }
        else {
          uint64_t v46 = v44;
        }
        if (v44 == 13) {
          char v47 = v24;
        }
        else {
          char v47 = 0;
        }
        uint64_t v48 = *a2;
        char v49 = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v48;
        if ((v49 & 1) == 0)
        {
          uint64_t v48 = sub_1A8901B34(0, *((void *)v48 + 2) + 1, 1, v48);
          *a2 = v48;
        }
        unint64_t v51 = *((void *)v48 + 2);
        unint64_t v50 = *((void *)v48 + 3);
        if (v51 >= v50 >> 1)
        {
          uint64_t v48 = sub_1A8901B34((char *)(v50 > 1), v51 + 1, 1, v48);
          *a2 = v48;
        }
        *((void *)v48 + 2) = v51 + 1;
        unint64_t v21 = &v48[56 * v51];
        *((void *)v21 + 4) = v46;
        *((void *)v21 + 5) = v47;
        v21[48] = v45 == 13;
        *((void *)v21 + 7) = v43;
        *((void *)v21 + 8) = v65;
        char v22 = v64;
      }
      v21[72] = v22;
LABEL_15:
      *((void *)v21 + 10) = v32;
      swift_bridgeObjectRelease();
      int v3 = v70;
LABEL_16:
      ++v20;
      v19 += 64;
      if (v72 == v20) {
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88EBFC0(uint64_t a1, char **a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = (char *)MEMORY[0x1E4FBC860];
  if (v2)
  {
    unsigned int v4 = (char *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 65);
    do
    {
      unsigned int v6 = *(unsigned char **)(v4 - 33);
      uint64_t v7 = *(void *)(v4 - 25);
      uint64_t v8 = *(void *)(v4 - 17);
      uint64_t v9 = *(void *)(v4 - 9);
      char v71 = *(v4 - 1);
      char v69 = *v4;
      sub_1A88EE330(v6, v7);
      if (v12 != 2)
      {
        uint64_t v13 = v10;
        uint64_t v14 = v11;
        int v15 = v12;
        uint64_t v68 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v3 = sub_1A8901500(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v17 = *((void *)v3 + 2);
        unint64_t v16 = *((void *)v3 + 3);
        unsigned int v18 = v3;
        if (v17 >= v16 >> 1) {
          unsigned int v18 = sub_1A8901500((char *)(v16 > 1), v17 + 1, 1, v3);
        }
        *((void *)v18 + 2) = v17 + 1;
        int v3 = v18;
        uint64_t v5 = &v18[64 * v17];
        *((void *)v5 + 4) = v13;
        *((void *)v5 + 5) = v14;
        v5[48] = v15 & 1;
        v5[49] = BYTE1(v15);
        v5[50] = ((v15 & 0xFFFFFFu) >> 16) & 1;
        *((void *)v5 + 7) = v6;
        *((void *)v5 + 8) = v7;
        *((void *)v5 + 9) = v68;
        *((void *)v5 + 10) = v9;
        v5[88] = v71;
        v5[89] = v69;
      }
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v72 = *((void *)v3 + 2);
  if (v72)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v19 = 0;
    unint64_t v20 = 0;
    unint64_t v70 = v3;
    while (1)
    {
      int64_t v23 = &v3[v19];
      uint64_t v25 = *(void *)&v3[v19 + 32];
      BOOL v24 = *(unsigned __int8 **)&v3[v19 + 40];
      if (v3[v19 + 50] == 1)
      {
        int v26 = v23[48];
        BOOL v27 = (unsigned char *)*((void *)v23 + 9);
        uint64_t v28 = *((void *)v23 + 10);
        int v29 = v23[88];
        __int16 v30 = v23[89];
        if (v26)
        {
          sub_1A88ED640(v27, v28, (uint64_t)v77);
          sub_1A8529F8C((uint64_t)v77, (uint64_t)v78, &qword_1E974E388);
          if ((v79 & 1) == 0)
          {
            uint64_t v52 = v78[0];
            uint64_t v66 = v78[1];
            uint64_t v53 = v78[4];
            uint64_t v54 = v78[5];
            __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E08);
            uint64_t v32 = swift_allocObject();
            *(_OWORD *)(v32 + 16) = xmmword_1A8AD8F00;
            *(void *)(v32 + 32) = v53;
            *(void *)(v32 + 40) = v54;
            *(_WORD *)(v32 + 48) = 0;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            unsigned __int8 v55 = sub_1A88BDF14(v25, (uint64_t)v24);
            unsigned __int8 v56 = v55;
            if (v55 == 6) {
              uint64_t v57 = v25;
            }
            else {
              uint64_t v57 = v55;
            }
            if (v55 == 6) {
              uint64_t v58 = v24;
            }
            else {
              uint64_t v58 = 0;
            }
            char v59 = *a2;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a2 = v59;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              char v59 = sub_1A8901B20(0, *((void *)v59 + 2) + 1, 1, v59);
              *a2 = v59;
            }
            unint64_t v62 = *((void *)v59 + 2);
            unint64_t v61 = *((void *)v59 + 3);
            if (v62 >= v61 >> 1)
            {
              char v59 = sub_1A8901B20((char *)(v61 > 1), v62 + 1, 1, v59);
              *a2 = v59;
            }
            *((void *)v59 + 2) = v62 + 1;
            unint64_t v21 = &v59[56 * v62];
            *((void *)v21 + 4) = v57;
            *((void *)v21 + 5) = v58;
            v21[48] = v56 == 6;
            *((void *)v21 + 7) = v52;
            *((void *)v21 + 8) = v66;
            v21[72] = 0;
            goto LABEL_15;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E08);
        uint64_t v31 = swift_allocObject();
        uint64_t v32 = v31;
        *(_OWORD *)(v31 + 16) = xmmword_1A8AD8F00;
        if (v29) {
          __int16 v33 = -32512;
        }
        else {
          __int16 v33 = 0x8000;
        }
        __int16 v34 = v33 | v30;
        if (v26) {
          __int16 v34 = 0;
        }
        *(void *)(v31 + 32) = v27;
        *(void *)(v31 + 40) = v28;
        *(_WORD *)(v31 + 48) = v34;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        unsigned __int8 v35 = sub_1A88BDF14(v25, (uint64_t)v24);
        unsigned __int8 v36 = v35;
        if (v35 == 6) {
          uint64_t v37 = v25;
        }
        else {
          uint64_t v37 = v35;
        }
        if (v35 == 6) {
          uint64_t v38 = v24;
        }
        else {
          uint64_t v38 = 0;
        }
        uint64_t v39 = *a2;
        char v40 = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v39;
        if ((v40 & 1) == 0)
        {
          uint64_t v39 = sub_1A8901B20(0, *((void *)v39 + 2) + 1, 1, v39);
          *a2 = v39;
        }
        unint64_t v42 = *((void *)v39 + 2);
        unint64_t v41 = *((void *)v39 + 3);
        if (v42 >= v41 >> 1)
        {
          uint64_t v39 = sub_1A8901B20((char *)(v41 > 1), v42 + 1, 1, v39);
          *a2 = v39;
        }
        *((void *)v39 + 2) = v42 + 1;
        unint64_t v21 = &v39[56 * v42];
        *((void *)v21 + 4) = v37;
        *((void *)v21 + 5) = v38;
        v21[48] = v36 == 6;
        *((void *)v21 + 7) = 0;
        *((void *)v21 + 8) = 0;
        char v22 = 1;
      }
      else
      {
        if (v23[49]) {
          goto LABEL_16;
        }
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        char v76 = 1;
        uint64_t v73 = MEMORY[0x1E4FBC860];
        sub_1A88ECE8C(v25, v24, v20, (uint64_t)v3, (uint64_t)&v74, &v73);
        uint64_t v43 = v74;
        uint64_t v65 = v75;
        char v64 = v76;
        uint64_t v32 = v73;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        unsigned __int8 v44 = sub_1A88BDF14(v25, (uint64_t)v24);
        unsigned __int8 v45 = v44;
        if (v44 == 6) {
          uint64_t v46 = v25;
        }
        else {
          uint64_t v46 = v44;
        }
        if (v44 == 6) {
          char v47 = v24;
        }
        else {
          char v47 = 0;
        }
        uint64_t v48 = *a2;
        char v49 = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v48;
        if ((v49 & 1) == 0)
        {
          uint64_t v48 = sub_1A8901B20(0, *((void *)v48 + 2) + 1, 1, v48);
          *a2 = v48;
        }
        unint64_t v51 = *((void *)v48 + 2);
        unint64_t v50 = *((void *)v48 + 3);
        if (v51 >= v50 >> 1)
        {
          uint64_t v48 = sub_1A8901B20((char *)(v50 > 1), v51 + 1, 1, v48);
          *a2 = v48;
        }
        *((void *)v48 + 2) = v51 + 1;
        unint64_t v21 = &v48[56 * v51];
        *((void *)v21 + 4) = v46;
        *((void *)v21 + 5) = v47;
        v21[48] = v45 == 6;
        *((void *)v21 + 7) = v43;
        *((void *)v21 + 8) = v65;
        char v22 = v64;
      }
      v21[72] = v22;
LABEL_15:
      *((void *)v21 + 10) = v32;
      swift_bridgeObjectRelease();
      int v3 = v70;
LABEL_16:
      ++v20;
      v19 += 64;
      if (v72 == v20) {
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88EC550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v33 = a1;
  __int16 v34 = a4;
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12)
  {
    uint64_t isStackAllocationSafe = swift_retain_n();
    uint64_t v14 = 0;
    goto LABEL_28;
  }
  uint64_t v32 = v7;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = *(void *)(a2 + 16);
  while (1)
  {
    if (!v15)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(a2 + v13 + 40);
    uint64_t v17 = *(void *)(a3 + v13 + 32);
    unint64_t v18 = *(void *)(a3 + v13 + 40);
    if ((v16 & 0x1000000000000000) != 0)
    {
      v31[1] = a6;
      uint64_t v23 = sub_1A8A76848();
      BOOL v20 = __OFADD__(v14, v23);
      uint64_t v21 = v14 + v23;
      if (v20) {
        goto LABEL_33;
      }
    }
    else
    {
      if ((v16 & 0x2000000000000000) != 0) {
        uint64_t v19 = HIBYTE(v16) & 0xF;
      }
      else {
        uint64_t v19 = *(void *)(a2 + v13 + 32) & 0xFFFFFFFFFFFFLL;
      }
      BOOL v20 = __OFADD__(v14, v19);
      uint64_t v21 = v14 + v19;
      if (v20) {
        goto LABEL_33;
      }
    }
    if ((v18 & 0x1000000000000000) == 0) {
      break;
    }
    uint64_t v24 = sub_1A8A76848();
    BOOL v20 = __OFADD__(v21, v24);
    uint64_t v14 = v21 + v24;
    if (v20) {
      goto LABEL_21;
    }
LABEL_14:
    --v15;
    v13 += 16;
    if (!--v12) {
      goto LABEL_22;
    }
  }
  if ((v18 & 0x2000000000000000) != 0) {
    uint64_t v22 = HIBYTE(v18) & 0xF;
  }
  else {
    uint64_t v22 = v17 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v20 = __OFADD__(v21, v22);
  uint64_t v14 = v21 + v22;
  if (!v20) {
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  if (v14 < 0) {
LABEL_34:
  }
    __break(1u);
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v14 < 1025)
  {
    uint64_t v7 = v32;
  }
  else
  {
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    uint64_t v7 = v32;
    if ((isStackAllocationSafe & 1) == 0)
    {
      uint64_t v26 = swift_slowAlloc();
      swift_retain();
      sub_1A88ECFFC(v26, v26 + v14, v33, a2, a3, v34, a5);
      MEMORY[0x1AD0E4D00](v26, -1, -1);
      goto LABEL_30;
    }
  }
LABEL_28:
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v28 = (char *)v31 - v27;
  int v29 = (char *)v31 + v14 - v27;
  swift_retain();
  sub_1A88ECFFC((uint64_t)v28, (uint64_t)v29, v33, a2, a3, v34, a5);
  if (!v7) {
    return swift_release_n();
  }
  swift_willThrow();
LABEL_30:
  swift_release_n();
  return swift_release();
}

unint64_t sub_1A88EC7CC(unint64_t a1, unint64_t a2, char *a3, char *a4, void (*a5)(uint64_t *__return_ptr, void *))
{
  uint64_t v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v27 = v9;
  uint64_t v26 = 4 * v9;
  uint64_t v10 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v10) = 1;
  }
  uint64_t v11 = 4 << v10;
  uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v22 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v12 = 15;
  uint64_t v25 = a4;
  while (1)
  {
    if (a3)
    {
      if (!a4 || a3 != a4) {
        goto LABEL_17;
      }
    }
    else if (a4)
    {
      a3 = 0;
LABEL_17:
      char v14 = *a3++;
      LOBYTE(v28[0]) = v14;
      a5(&v29, v28);
      if (v26 == v12 >> 14) {
        goto LABEL_37;
      }
      int v15 = v29;
      char v16 = 1;
      goto LABEL_21;
    }
    if (v26 == v12 >> 14)
    {
      uint64_t v21 = 1;
      goto LABEL_39;
    }
    char v16 = 0;
    int v15 = 0;
LABEL_21:
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v11) {
      unint64_t result = sub_1A85D0E10(v12, a1, a2);
    }
    unint64_t v19 = result >> 16;
    if (result >> 16 >= v27) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1A8A76888();
      unsigned __int8 v20 = result;
      if (v17 == v11) {
        goto LABEL_29;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v28[0] = a1;
      v28[1] = v23;
      unsigned __int8 v20 = *((unsigned char *)v28 + v19);
      if (v17 == v11) {
        goto LABEL_29;
      }
    }
    else
    {
      unint64_t result = v22;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1A8A77E88();
      }
      unsigned __int8 v20 = *(unsigned char *)(result + v19);
      if (v17 == v11)
      {
LABEL_29:
        unint64_t result = sub_1A85D0E10(v12, a1, a2);
        unint64_t v12 = result;
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_33;
        }
        goto LABEL_6;
      }
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_33:
      if (v27 <= v12 >> 16) {
        goto LABEL_41;
      }
      unint64_t v12 = sub_1A8A76858();
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_7:
    if (v15 == v20) {
      char v13 = v16;
    }
    else {
      char v13 = 0;
    }
    a4 = v25;
    if ((v13 & 1) == 0)
    {
LABEL_37:
      uint64_t v21 = 0;
LABEL_39:
      swift_release();
      swift_bridgeObjectRelease();
      return v21;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A88ECA08(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  do
  {
    if (a3)
    {
      if (!a4 || a3 != a4)
      {
LABEL_6:
        char v5 = 0;
        int v6 = *a3++;
        int v4 = v6;
        if (!a1) {
          goto LABEL_12;
        }
        goto LABEL_7;
      }
      int v4 = 0;
    }
    else
    {
      if (a4) {
        goto LABEL_6;
      }
      int v4 = 0;
      a3 = 0;
    }
    char v5 = 1;
    if (!a1)
    {
LABEL_12:
      if (a2) {
        goto LABEL_13;
      }
      int v7 = 0;
      a1 = 0;
      goto LABEL_16;
    }
LABEL_7:
    if (!a2 || a1 != a2)
    {
LABEL_13:
      uint64_t v8 = 0;
      int v9 = *a1++;
      int v7 = v9;
      if (v5) {
        return v8;
      }
      goto LABEL_17;
    }
    int v7 = 0;
LABEL_16:
    uint64_t v8 = 1;
    if (v5) {
      return v8;
    }
LABEL_17:
    if (v4 != v7) {
      LODWORD(v8) = 1;
    }
  }
  while (v8 != 1);
  return 0;
}

uint64_t sub_1A88ECA94@<X0>(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X7>, unsigned char *a6@<X8>, unsigned __int8 *a7, unsigned __int8 *a8, char a9, uint64_t a10, uint64_t *a11, uint64_t a12)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v15 = a2 - isStackAllocationSafe;
  if (!isStackAllocationSafe) {
    uint64_t v15 = 0;
  }
  if (v15 < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v17 = isStackAllocationSafe;
  v43[0] = 0;
  v43[1] = v15;
  v43[2] = isStackAllocationSafe;
  v43[3] = a2;
  uint64_t v18 = *a3;
  uint64_t v19 = *a4;
  if (*a4 < *a3)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v20 = v13;
  uint64_t v21 = a11;
  uint64_t v39 = a10;
  if (v18 == v19)
  {
    uint64_t v22 = 0;
LABEL_24:
    uint64_t v34 = v17 + v22;
    if (!v17)
    {
      uint64_t v22 = 0;
      uint64_t v34 = 0;
    }
    *(void *)&long long v44 = 0;
    *((void *)&v44 + 1) = v22;
    uint64_t v45 = v17;
    uint64_t v46 = v34;
    char v47 = 0;
    char v35 = sub_1A88ED7F4(&v44, a7, a8, a9 & 1, v21, a12);
    swift_bridgeObjectRelease();
    *a6 = v35 & 1;
    return swift_release();
  }
  uint64_t v37 = a11;
  uint64_t v38 = a6;
  uint64_t v23 = *(void *)(a5 + 16);
  if (v23 <= v18) {
    uint64_t v23 = v18;
  }
  uint64_t v41 = v18;
  uint64_t v42 = v23;
  uint64_t v24 = (__int16 *)(a5 + 24 * v18 + 48);
  uint64_t v25 = v18;
  uint64_t v40 = v19;
  while (1)
  {
    if (v25 >= v19)
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v18 < 0) {
      goto LABEL_28;
    }
    if (v42 == v25) {
      goto LABEL_29;
    }
    if (*v24 < 0) {
      break;
    }
    uint64_t v29 = v17;
    uint64_t v30 = *((void *)v24 - 2);
    uint64_t v31 = *((void *)v24 - 1);
    if (v30)
    {
      uint64_t v26 = v31 - v30;
      if (v31 - v30 < 0) {
        goto LABEL_30;
      }
      if (v26 >= 1025)
      {
        uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
        if ((isStackAllocationSafe & 1) == 0)
        {
          unint64_t v12 = (void *)swift_slowAlloc();
          uint64_t v32 = v31 - v30;
          uint64_t v33 = v30;
          uint64_t v17 = v29;
          sub_1A88FAD80((uint64_t)v12, v32, v33, v31, v43, v29, a2);
          if (v20) {
            goto LABEL_36;
          }
          uint64_t v20 = 0;
          uint64_t isStackAllocationSafe = MEMORY[0x1AD0E4D00](v12, -1, -1);
          goto LABEL_12;
        }
      }
    }
    else
    {
      uint64_t v26 = 0;
    }
    unint64_t v12 = &v37;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v28 = v30;
    uint64_t v17 = v29;
    uint64_t isStackAllocationSafe = sub_1A88FAD80((uint64_t)&v37 - v27, v26, v28, v31, v43, v29, a2);
    if (v20) {
      goto LABEL_35;
    }
LABEL_12:
    uint64_t v19 = v40;
    uint64_t v18 = v41;
    ++v25;
    v24 += 12;
    if (v40 == v25)
    {
      uint64_t v22 = v43[0];
      uint64_t v21 = v37;
      a6 = v38;
      if ((v43[0] & 0x8000000000000000) == 0) {
        goto LABEL_24;
      }
LABEL_33:
      __break(1u);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A8A780F8();
  __break(1u);
LABEL_35:
  swift_willThrow();
  __break(1u);
LABEL_36:
  uint64_t result = MEMORY[0x1AD0E4D00](v12, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1A88ECD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F60);
  sub_1A88EE0A4();
  sub_1A8A744B8();
  uint64_t v13 = *a5;
  uint64_t result = sub_1A870361C(a1, a2, a3, a4);
  uint64_t v15 = v13 + result;
  if (__OFADD__(v13, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = a7 - a6;
    if (!a6) {
      uint64_t v16 = 0;
    }
    if (v16 >= v15)
    {
      *a5 = v15;
      a5[1] = v16;
      a5[2] = a6;
      a5[3] = a7;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88ECE8C(uint64_t result, unsigned __int8 *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v23 = (unsigned __int8 *)result;
  if ((a3 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(a4 + 16);
  if (v8 <= a3)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t result = sub_1A88EE1F4(*(unsigned char *)(a4 + (a3 << 6) + 48), *(unsigned char **)(a4 + (a3 << 6) + 72), *(void *)(a4 + (a3 << 6) + 80), *(unsigned char *)(a4 + (a3 << 6) + 88), *(unsigned char *)(a4 + (a3 << 6) + 89), a5, a6);
  uint64_t v9 = a3 + 1;
  if (a3 + 1 == v8) {
    return result;
  }
  uint64_t v22 = a4;
  uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unsigned __int8 v21 = 0;
  uint64_t v10 = a3 << 6;
  while (1)
  {
    if (v9 >= (uint64_t)v8)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    char v11 = *(unsigned char *)(v22 + v10 + 112);
    int v12 = *(unsigned __int8 *)(v22 + v10 + 113);
    char v13 = *(unsigned char *)(v22 + v10 + 114);
    char v14 = *(unsigned char **)(v22 + v10 + 136);
    uint64_t v15 = *(void *)(v22 + v10 + 144);
    char v16 = *(unsigned char *)(v22 + v10 + 152);
    char v17 = *(unsigned char *)(v22 + v10 + 153);
    uint64_t result = sub_1A88ECA08(v23, a2, *(unsigned __int8 **)(v22 + v10 + 96), *(unsigned __int8 **)(v22 + v10 + 104));
    if (result) {
      break;
    }
LABEL_6:
    ++v9;
    v10 += 64;
    if (v8 == v9) {
      goto LABEL_12;
    }
  }
  if (v13) {
    goto LABEL_12;
  }
  unsigned int v18 = v21 + 1;
  if ((v18 >> 8)) {
    goto LABEL_16;
  }
  if (v12 == v18)
  {
    uint64_t result = sub_1A88EE1F4(v11, v14, v15, v16, v17, a5, a6);
    unsigned __int8 v21 = v12;
    goto LABEL_6;
  }
LABEL_12:
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88ECFFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int64_t *a6, uint64_t *a7)
{
  uint64_t v7 = a2 - result;
  if (!result) {
    uint64_t v7 = 0;
  }
  if (v7 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  unint64_t v8 = a7;
  uint64_t v9 = a6;
  uint64_t v10 = a5;
  uint64_t v11 = *(void *)(a5 + 16);
  if (v11)
  {
    uint64_t v12 = a4;
    uint64_t v13 = *(void *)(a4 + 16);
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v14 = 0;
    uint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t v34 = v10;
    while (v13)
    {
      unint64_t v15 = *(void *)(v12 + v14 + 32);
      unint64_t v16 = *(void *)(v12 + v14 + 40);
      unint64_t v18 = *(void *)(v10 + v14 + 32);
      unint64_t v17 = *(void *)(v10 + v14 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v19 = sub_1A88ED24C(v15, v16);
      if (v21)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = v20;
        uint64_t v36 = v19;
        uint64_t v22 = v12;
        uint64_t v23 = sub_1A88ED24C(v18, v17);
        uint64_t v25 = v24;
        char v27 = v26;
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v27)
        {
          uint64_t v12 = v22;
          uint64_t v10 = v34;
        }
        else
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1A89015F8(0, *(void *)(v37 + 16) + 1, 1, (char *)v37);
            uint64_t v37 = result;
          }
          uint64_t v12 = v22;
          unint64_t v29 = *(void *)(v37 + 16);
          unint64_t v28 = *(void *)(v37 + 24);
          uint64_t v10 = v34;
          if (v29 >= v28 >> 1)
          {
            uint64_t result = (uint64_t)sub_1A89015F8((char *)(v28 > 1), v29 + 1, 1, (char *)v37);
            uint64_t v37 = result;
          }
          *(void *)(v37 + 16) = v29 + 1;
          unint64_t v30 = v37 + 40 * v29;
          *(void *)(v30 + 32) = v36;
          *(void *)(v30 + 40) = v35;
          *(void *)(v30 + 48) = v23;
          *(void *)(v30 + 56) = v25;
          *(_WORD *)(v30 + 64) = 0;
        }
      }
      --v13;
      v14 += 16;
      if (!--v11)
      {
        swift_release();
        swift_release();
        swift_release();
        unint64_t v8 = a7;
        uint64_t v9 = a6;
        uint64_t v31 = v37;
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v31 = MEMORY[0x1E4FBC860];
LABEL_19:
  swift_retain();
  sub_1A88EE480(v31, v9, v8);
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1A88ED24C(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v5 = sub_1A8A76848();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else
  {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v9 = v2[3];
  if (sub_1A870361C(*v2, v6, v8, v9) < v5) {
    return 0;
  }
  if (v8) {
    uint64_t v11 = v8 + v7;
  }
  else {
    uint64_t v11 = 0;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88ED3A0(a1, a2, v11);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v13 = v9 - v8;
  if (!v8) {
    uint64_t v13 = 0;
  }
  if (v12 < 0 || v13 < v12) {
    goto LABEL_22;
  }
  if (v12 < v7)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v6 < v12)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  *uint64_t v2 = v12;
  v2[1] = v6;
  v2[2] = v8;
  v2[3] = v9;
  if (v8) {
    return v8 + v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A88ED394(unsigned __int8 **a1, unsigned __int8 **a2)
{
  return sub_1A88ECA08(*a2, a2[1], *a1, a1[1]);
}

unint64_t sub_1A88ED3A0(unint64_t result, unint64_t a2, uint64_t a3)
{
  unint64_t v21 = result;
  unint64_t v22 = a2;
  if (!a3) {
    return result;
  }
  MEMORY[0x1F4188790](result);
  v17[2] = &v21;
  _OWORD v17[3] = a3;
  v17[4] = v4;
  v17[5] = a3;
  uint64_t result = (unint64_t)sub_1A88ED59C((void *(*)(uint64_t *__return_ptr, void *, uint64_t))sub_1A88EF8A4, (uint64_t)v17, v5, v6);
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v7 = v21;
  uint64_t v8 = v22;
  unint64_t v9 = (v22 & 0x2000000000000000) != 0 ? HIBYTE(v22) & 0xF : v21 & 0xFFFFFFFFFFFFLL;
  if (!v9) {
    return result;
  }
  uint64_t v10 = 0;
  uint64_t v11 = (v21 >> 59) & 1;
  if ((v22 & 0x1000000000000000) == 0) {
    LOBYTE(v11) = 1;
  }
  uint64_t v12 = 4 << v11;
  uint64_t v18 = (v22 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v19 = v22 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v13 = 15;
  while (1)
  {
    unint64_t v14 = v13 & 0xC;
    uint64_t result = v13;
    if (v14 == v12) {
      uint64_t result = sub_1A85D0E10(v13, v7, v8);
    }
    unint64_t v15 = result >> 16;
    if (result >> 16 >= v9) {
      break;
    }
    if ((v8 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1A8A76888();
      char v16 = result;
      if (v14 != v12) {
        goto LABEL_20;
      }
    }
    else if ((v8 & 0x2000000000000000) != 0)
    {
      v20[0] = v7;
      v20[1] = v19;
      char v16 = *((unsigned char *)v20 + v15);
      if (v14 != v12) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = v18;
      if ((v7 & 0x1000000000000000) == 0) {
        uint64_t result = sub_1A8A77E88();
      }
      char v16 = *(unsigned char *)(result + v15);
      if (v14 != v12)
      {
LABEL_20:
        if ((v8 & 0x1000000000000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_24;
      }
    }
    uint64_t result = sub_1A85D0E10(v13, v7, v8);
    unint64_t v13 = result;
    if ((v8 & 0x1000000000000000) == 0)
    {
LABEL_21:
      unint64_t v13 = (v13 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_26;
    }
LABEL_24:
    if (v9 <= v13 >> 16) {
      goto LABEL_31;
    }
    uint64_t result = sub_1A8A76858();
    unint64_t v13 = result;
LABEL_26:
    if (__OFADD__(v10, 1)) {
      goto LABEL_30;
    }
    *(unsigned char *)(a3 + v10++) = v16;
    if (4 * v9 == v13 >> 14) {
      return result;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void *sub_1A88ED59C(void *(*a1)(uint64_t *__return_ptr, void *, uint64_t), uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0) {
    return (void *)((a4 & 0x1000000000000000) >> 60);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    uint64_t v8 = HIBYTE(a4) & 0xF;
    v10[0] = a3;
    v10[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = v10;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (void *)sub_1A8A77E88();
  }
  uint64_t result = a1(&v11, v7, v8);
  if (!v4) {
    return (void *)((a4 & 0x1000000000000000) >> 60);
  }
  return result;
}

unsigned char *sub_1A88ED640@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2 - (void)result;
  if (result) {
    uint64_t v4 = a2 - (void)result;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4 < 0)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (!v4)
  {
    uint64_t result = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    uint64_t v10 = 0;
LABEL_37:
    char v16 = 1;
LABEL_38:
    *(void *)a3 = result;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v8;
    *(void *)(a3 + 24) = v9;
    *(void *)(a3 + 32) = v10;
    *(void *)(a3 + 40) = v4;
    *(unsigned char *)(a3 + 48) = v16;
    return result;
  }
  if (*result == 39)
  {
    uint64_t v5 = 0;
    uint64_t v4 = a2 - (void)result;
    BOOL v6 = v3 > 0;
    if (!v3) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v11 = 1;
    do
    {
      if (v4 <= v11 - 1)
      {
        __break(1u);
        goto LABEL_41;
      }
      if (v4 == v11) {
        goto LABEL_36;
      }
      int v12 = result[v11++];
    }
    while (v12 != 39);
    uint64_t v5 = v11 - 1;
    BOOL v6 = v11 - 1 < v4;
    if (v11 - 1 == v4) {
      goto LABEL_36;
    }
  }
  if (!v6) {
    goto LABEL_45;
  }
  uint64_t v7 = &result[v5];
  if (result[v5] != 39) {
    goto LABEL_36;
  }
  uint64_t v13 = v5 + 1;
  uint64_t v14 = v4;
  if (v5 + 1 != v4)
  {
    if (v5 + 1 >= v4)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v14 = v5 + 1;
    if (result[v13] != 39)
    {
      uint64_t v15 = v5;
      while (1)
      {
        uint64_t v14 = v15 + 2;
        if (__OFADD__(v15 + 1, 1)) {
          goto LABEL_42;
        }
        if (v4 < v14) {
          goto LABEL_43;
        }
        if (v14 < ++v15) {
          goto LABEL_44;
        }
        if (v14 == v4)
        {
          uint64_t v14 = v4;
LABEL_29:
          if (v14 <= v5) {
            goto LABEL_46;
          }
          break;
        }
        if (result[v14] == 39) {
          goto LABEL_29;
        }
      }
    }
  }
  if (v4 < v14)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v14 == v4)
  {
LABEL_36:
    uint64_t result = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v4 = 0;
    goto LABEL_37;
  }
  if (v14 < v4)
  {
    unint64_t v9 = &result[v14];
    if (result[v14] == 39)
    {
      if (result)
      {
        char v16 = 0;
        uint64_t v8 = &result[v13];
        uint64_t v10 = (uint64_t)&result[v14 + 1];
        v4 += (uint64_t)result;
      }
      else
      {
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        unint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v4 = 0;
        char v16 = 0;
      }
      goto LABEL_38;
    }
    goto LABEL_36;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1A88ED7F4(long long *a1, unsigned __int8 *a2, unsigned __int8 *a3, char a4, uint64_t *a5, uint64_t a6)
{
  sub_1A88EE118(a1, (uint64_t)&v24);
  if (v28)
  {
    if (v26)
    {
      sub_1A88FAF5C((uint64_t)v24, (uint64_t)v25, a6, BYTE1(v26) & 1);
      return 0;
    }
    sub_1A88BB254(v24, v25, BYTE1(v26) & 1);
    sub_1A8A767E8();
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  char v11 = a4 & 1;
  uint64_t v12 = (uint64_t)v24;
  uint64_t v13 = v25;
  uint64_t v15 = v26;
  uint64_t v14 = v27;
  if (v26) {
    char v16 = &v25[v26];
  }
  else {
    char v16 = 0;
  }
  if (v26) {
    unint64_t v17 = (int8x8_t *)&v24[v26];
  }
  else {
    unint64_t v17 = 0;
  }
  swift_retain();
  sub_1A88FA030(a2, a3, v11, 0, 0, a5, v17, (uint64_t)v16);
  if (v18
    || (uint64_t v19 = sub_1A870361C(v12, (uint64_t)v13, v15, v14),
        MEMORY[0x1AD0DF770](v19),
        uint64_t result = 0,
        (unsigned __int8 *)v12 == v13))
  {
LABEL_14:
    sub_1A8A767E8();
    goto LABEL_15;
  }
  if (v12 < (uint64_t)v13)
  {
    if (v15) {
      uint64_t v21 = v14 - v15;
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v22 = v12;
    while ((v12 & 0x8000000000000000) == 0 && v22 < v21)
    {
      if (*(unsigned __int8 *)(v15 + v22) - 1 <= 0x7D)
      {
        uint64_t v23 = result;
        sub_1A8A766D8();
        uint64_t result = v23;
      }
      if (v13 == (unsigned __int8 *)++v22) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88ED9A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned __int8 *a5, unsigned __int8 *a6, int a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  int v56 = a7;
  uint64_t v54 = a5;
  unsigned __int8 v55 = a6;
  int v53 = a3;
  uint64_t v52 = a2;
  uint64_t v51 = a1;
  v64[1] = *MEMORY[0x1E4F143B8];
  v64[0] = 0;
  uint64_t v11 = *(void *)(a4 + 16);
  if (!v11)
  {
    swift_retain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_66;
  }
  uint64_t v57 = a10;
  uint64_t v58 = a4 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = swift_retain_n();
  uint64_t v14 = 0;
  uint64_t v50 = a4 + 72;
  uint64_t v49 = a4;
  uint64_t v48 = a4 + 48;
  while (1)
  {
    if (v14 >= (unint64_t)v11) {
      goto LABEL_69;
    }
    uint64_t v15 = (unsigned __int8 **)(v58 + 24 * v14);
    unint64_t v17 = *v15;
    uint64_t v16 = (uint64_t)v15[1];
    int v18 = *((__int16 *)v15 + 8);
    if ((v18 & 0x80000000) == 0) {
      break;
    }
    __int16 v25 = v18;
    if (v18)
    {
      uint64_t isStackAllocationSafe = sub_1A88FAF5C((uint64_t)v17, v16, v57, BYTE1(v18) & 1);
      BOOL v32 = __OFADD__(v14++, 1);
      if (v32) {
        goto LABEL_63;
      }
    }
    else
    {
      uint64_t v61 = 0;
      unint64_t v62 = 0xE000000000000000;
      if (v17) {
        uint64_t v26 = v16 - (void)v17;
      }
      else {
        uint64_t v26 = 0;
      }
      MEMORY[0x1AD0DF770](v26);
      uint64_t v27 = v61;
      unint64_t v28 = v62;
      if (v17)
      {
LABEL_58:
        char v29 = 0;
        while (!v16 || v17 != (unsigned __int8 *)v16)
        {
LABEL_53:
          int v45 = *v17++;
          int v44 = v45;
          if ((v45 - 1) > 0x7D) {
            goto LABEL_58;
          }
          if ((v25 & 0x100) != 0 && v44 == 92)
          {
            char v46 = v29 ^ 1;
            char v29 = 1;
            if (v46) {
              continue;
            }
          }
          uint64_t v59 = v27;
          unint64_t v60 = v28;
          sub_1A8A766D8();
          char v29 = 0;
          uint64_t v27 = v59;
          unint64_t v28 = v60;
        }
      }
      else if (v16)
      {
        char v29 = 0;
        unint64_t v17 = 0;
        goto LABEL_53;
      }
      sub_1A8A767E8();
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v14 = v64[0] + 1;
      if (__OFADD__(v64[0], 1))
      {
LABEL_63:
        __break(1u);
LABEL_64:
        swift_release_n();
        swift_bridgeObjectRelease_n();
LABEL_66:
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
    }
LABEL_51:
    v64[0] = v14;
    if (v14 >= v11) {
      goto LABEL_64;
    }
  }
  uint64_t v19 = v14 + 1;
  uint64_t v61 = v14 + 1;
  if (v14 + 1 < v11)
  {
    uint64_t v20 = (__int16 *)(v50 + 24 * v14);
    while (1)
    {
      int v21 = *v20;
      v20 += 12;
      if (v21 < 0) {
        break;
      }
      if (v11 == ++v19)
      {
        uint64_t v19 = v11;
        break;
      }
    }
    uint64_t v61 = v19;
  }
  uint64_t v22 = v19 - v14;
  if (__OFSUB__(v19, v14)) {
    goto LABEL_70;
  }
  if (v22 == 1)
  {
    if (!v17) {
      goto LABEL_46;
    }
    if (v16 - (uint64_t)v17 < 0) {
      goto LABEL_73;
    }
    if (v16 - (uint64_t)v17 < 1025
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
    {
LABEL_46:
      MEMORY[0x1F4188790](isStackAllocationSafe);
      uint64_t v41 = (char *)&v48 - v40;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      char v42 = sub_1A88FB2F4((uint64_t)v41, (uint64_t)v17, v16, v54, v55, v56 & 1, a8, a9, v57);
      swift_bridgeObjectRelease();
      uint64_t isStackAllocationSafe = swift_release();
      if (v42) {
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v23 = swift_slowAlloc();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      char v24 = sub_1A88FB2F4(v23, (uint64_t)v17, v16, v54, v55, v56 & 1, a8, a9, v57);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t isStackAllocationSafe = MEMORY[0x1AD0E4D00](v23, -1, -1);
      if (v24) {
        goto LABEL_64;
      }
    }
LABEL_50:
    BOOL v32 = __OFADD__(v14++, 1);
    if (v32) {
      goto LABEL_63;
    }
    goto LABEL_51;
  }
  if (v19 < v14) {
    goto LABEL_71;
  }
  if (v14 == v19)
  {
    uint64_t v30 = 0;
    uint64_t v31 = v49;
LABEL_41:
    if (v30 < 0) {
      goto LABEL_72;
    }
    if (v30 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      uint64_t v38 = (char *)&v48 - v37;
      uint64_t v39 = (char *)&v48 + v30 - v37;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      uint64_t isStackAllocationSafe = sub_1A88ECA94((uint64_t)v38, (uint64_t)v39, v64, &v61, v31, &v63, v54, v55, v56 & 1, a8, a9, v57);
      if (v63 == 1) {
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v43 = swift_slowAlloc();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      sub_1A88ECA94(v43, v43 + v30, v64, &v61, v31, &v59, v54, v55, v56 & 1, a8, a9, v57);
      uint64_t isStackAllocationSafe = MEMORY[0x1AD0E4D00](v43, -1, -1);
      if (v59) {
        goto LABEL_64;
      }
    }
    uint64_t v14 = v19 - 1;
    goto LABEL_50;
  }
  uint64_t v30 = 0;
  uint64_t v33 = v11 - v14;
  if (v11 < (unint64_t)v14) {
    uint64_t v33 = 0;
  }
  uint64_t v34 = (__int16 *)(v48 + 24 * v14);
  uint64_t v31 = v49;
  while (1)
  {
    if (!v33)
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
    }
    if (*v34 < 0) {
      break;
    }
    uint64_t v35 = *((void *)v34 - 2);
    uint64_t v36 = *((void *)v34 - 1) - v35;
    if (!v35) {
      uint64_t v36 = 0;
    }
    BOOL v32 = __OFADD__(v30, v36);
    v30 += v36;
    if (v32) {
      goto LABEL_68;
    }
    --v33;
    v34 += 12;
    if (!--v22) {
      goto LABEL_41;
    }
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
  sub_1A8A780F8();
  __break(1u);
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_willThrow();

  __break(1u);
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_willThrow();
  __break(1u);
  swift_bridgeObjectRelease_n();
  swift_release_n();
  uint64_t result = MEMORY[0x1AD0E4D00](v30, -1, -1);
  __break(1u);
  return result;
}

unint64_t sub_1A88EE0A4()
{
  unint64_t result = qword_1E974E380;
  if (!qword_1E974E380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E9745F60);
    sub_1A88BAC68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E380);
  }
  return result;
}

uint64_t sub_1A88EE118(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

int64_t sub_1A88EE130(unsigned __int8 *a1, unsigned __int8 *a2, char a3, uint64_t a4, uint64_t *a5)
{
  if ((a3 & 1) != 0 && *(void *)(a4 + 16) == 1 && (*(_WORD *)(a4 + 48) & 0x8100) == 0x8000)
  {
    uint64_t v6 = sub_1A88FABBC(*(void *)(a4 + 32), *(void *)(a4 + 40));
    int64_t v8 = sub_1A88EB78C(v6, v7, a5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_1A88ED9A0((uint64_t)a1, (uint64_t)a2, a3 & 1, a4, a1, a2, a3 & 1, a4, a5, (uint64_t)v10);
    swift_bridgeObjectRelease();
    swift_release();
    return v10[0];
  }
  return v8;
}

uint64_t sub_1A88EE1F4(char a1, unsigned char *a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v8 = a3;
  unint64_t v9 = a2;
  if (a1)
  {
    if (*(unsigned char *)(a6 + 16) == 1
      && (sub_1A88ED640(a2, a3, (uint64_t)v18),
          sub_1A8529F8C((uint64_t)v18, (uint64_t)&v19, &qword_1E974E388),
          (v22 & 1) == 0))
    {
      __int16 v11 = 0;
      unint64_t v9 = v20;
      uint64_t v8 = v21;
      *(_OWORD *)a6 = v19;
      *(unsigned char *)(a6 + 16) = 0;
    }
    else
    {
      __int16 v11 = 0;
    }
  }
  else
  {
    if (a4) {
      __int16 v12 = -32512;
    }
    else {
      __int16 v12 = 0x8000;
    }
    __int16 v11 = v12 & 0xFFFE | a5 & 1;
  }
  uint64_t v13 = *a7;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a7 = v13;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A89022F0(0, *(void *)(v13 + 16) + 1, 1, (char *)v13);
    uint64_t v13 = result;
    *a7 = result;
  }
  unint64_t v16 = *(void *)(v13 + 16);
  unint64_t v15 = *(void *)(v13 + 24);
  if (v16 >= v15 >> 1)
  {
    uint64_t result = (uint64_t)sub_1A89022F0((char *)(v15 > 1), v16 + 1, 1, (char *)v13);
    uint64_t v13 = result;
  }
  *(void *)(v13 + 16) = v16 + 1;
  unint64_t v17 = v13 + 24 * v16;
  *(void *)(v17 + 32) = v9;
  *(void *)(v17 + 40) = v8;
  *(_WORD *)(v17 + 48) = v11;
  *a7 = v13;
  return result;
}

void sub_1A88EE330(unsigned char *a1, uint64_t a2)
{
  uint64_t v2 = a2 - (void)a1;
  if (!a1) {
    uint64_t v2 = 0;
  }
  if (v2 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    __break(1u);
    return;
  }
  uint64_t v3 = v2;
  sub_1A88DC7E4(0x2Au);
  if (!v3) {
    return;
  }
  if (v3 <= 0) {
    goto LABEL_10;
  }
  if (*a1 == 42) {
    sub_1A88DC558();
  }
}

uint64_t sub_1A88EE480(uint64_t a1, int64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (char *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 65);
    uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v8 = *(unsigned char **)(v4 - 33);
      uint64_t v9 = *(void *)(v4 - 25);
      uint64_t v10 = *(void *)(v4 - 17);
      uint64_t v11 = *(void *)(v4 - 9);
      char v12 = *(v4 - 1);
      char v13 = *v4;
      sub_1A88EE330(v8, v9);
      if (v16 != 2)
      {
        int v17 = v16;
        uint64_t v100 = v15;
        uint64_t v103 = v14;
        uint64_t v104 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1A8901500(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v19 = *((void *)v5 + 2);
        unint64_t v18 = *((void *)v5 + 3);
        uint64_t v20 = v5;
        uint64_t v21 = v11;
        if (v19 < v18 >> 1)
        {
          char v6 = v12;
        }
        else
        {
          char v22 = sub_1A8901500((char *)(v18 > 1), v19 + 1, 1, v5);
          uint64_t v21 = v11;
          char v6 = v12;
          uint64_t v20 = v22;
        }
        *((void *)v20 + 2) = v19 + 1;
        uint64_t v5 = v20;
        uint64_t v7 = &v20[64 * v19];
        *((void *)v7 + 4) = v103;
        *((void *)v7 + 5) = v100;
        v7[48] = v17 & 1;
        v7[49] = BYTE1(v17);
        v7[50] = ((v17 & 0xFFFFFFu) >> 16) & 1;
        *((void *)v7 + 7) = v8;
        *((void *)v7 + 8) = v9;
        *((void *)v7 + 9) = v104;
        *((void *)v7 + 10) = v21;
        v7[88] = v6;
        v7[89] = v13;
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v23 = *((void *)v5 + 2);
    if (v23) {
      goto LABEL_12;
    }
LABEL_106:
    return swift_bridgeObjectRelease();
  }
  uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v23) {
    goto LABEL_106;
  }
LABEL_12:
  uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  __int16 v25 = v5 + 32;
  unint64_t v26 = 0;
  uint64_t v99 = v23;
  uint64_t v105 = v5 + 32;
  int v94 = v5;
  while (1)
  {
    unint64_t v27 = v26;
    unint64_t v28 = &v25[64 * v26];
    uint64_t v30 = *(char **)v28;
    char v29 = (char *)*((void *)v28 + 1);
    int v31 = v28[16];
    BOOL v32 = (unsigned char *)*((void *)v28 + 5);
    uint64_t v33 = *((void *)v28 + 6);
    int v34 = v28[56];
    __int16 v35 = v28[57];
    ++v26;
    if (v28[18] == 1)
    {
      unint64_t v106 = v26;
      if ((v31 & 1) != 0
        && (sub_1A88ED640(v32, v33, (uint64_t)v110),
            sub_1A8529F8C((uint64_t)v110, (uint64_t)v113, &qword_1E974E388),
            (v114 & 1) == 0))
      {
        char v47 = (unsigned __int8 *)v113[0];
        uint64_t v48 = (unsigned __int8 *)v113[1];
        uint64_t v49 = v113[4];
        uint64_t v50 = v113[5];
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E08);
        uint64_t v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_1A8AD8F00;
        *(void *)(v51 + 32) = v49;
        *(void *)(v51 + 40) = v50;
        *(_WORD *)(v51 + 48) = 0;
        if (!v30)
        {
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v23 = v99;
          goto LABEL_30;
        }
        uint64_t v23 = v99;
        if (v29 - v30 != 8
          || (sub_1A88EC7CC(0x656D616E656C6966uLL, 0xE800000000000000, v30, v29, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C) & 1) == 0)
        {
LABEL_29:
          uint64_t result = swift_bridgeObjectRelease();
LABEL_30:
          __int16 v25 = v105;
          unint64_t v26 = v106;
          goto LABEL_14;
        }
        int64_t v108 = 0;
        unint64_t v109 = 0xE000000000000000;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        sub_1A88ED9A0((uint64_t)v47, (uint64_t)v48, 0, v51, v47, v48, 0, v51, a3, (uint64_t)&v108);
        swift_bridgeObjectRelease();
        swift_release();
        unint64_t v52 = v109;
        *a2 = v108;
        a2[1] = v52;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E08);
        uint64_t v36 = swift_allocObject();
        uint64_t v37 = v36;
        *(_OWORD *)(v36 + 16) = xmmword_1A8AD8F00;
        if (v34) {
          __int16 v38 = -32512;
        }
        else {
          __int16 v38 = 0x8000;
        }
        __int16 v39 = v38 | v35;
        if (v31) {
          __int16 v39 = 0;
        }
        *(void *)(v36 + 32) = v32;
        *(void *)(v36 + 40) = v33;
        *(_WORD *)(v36 + 48) = v39;
        if (!v30
          || v29 - v30 != 8
          || (sub_1A88EC7CC(0x656D616E656C6966uLL, 0xE800000000000000, v30, v29, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C) & 1) == 0)
        {
          goto LABEL_29;
        }
        if (*(void *)(v37 + 16) == 1 && (*(_WORD *)(v37 + 48) & 0x8100) == 0x8000)
        {
          uint64_t v40 = sub_1A88FABBC(*(void *)(v37 + 32), *(void *)(v37 + 40));
          uint64_t v42 = v41;
          swift_retain();
          uint64_t v23 = v99;
          int64_t v43 = sub_1A88EB78C(v40, v42, a3);
        }
        else
        {
          int64_t v108 = 0;
          unint64_t v109 = 0xE000000000000000;
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A88ED9A0(0, 0, 1, v37, 0, 0, 1, v37, a3, (uint64_t)&v108);
          swift_bridgeObjectRelease();
          swift_release();
          int64_t v43 = v108;
          unint64_t v44 = v109;
        }
        *a2 = v43;
        a2[1] = v44;
      }
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    if (v28[17]) {
      goto LABEL_14;
    }
    unint64_t v45 = *((void *)v5 + 2);
    if (v27 >= v45) {
      goto LABEL_111;
    }
    if ((v31 & 1) == 0)
    {
      char v97 = 0;
      uint64_t v98 = 0;
      if (v28[56]) {
        __int16 v53 = -32512;
      }
      else {
        __int16 v53 = 0x8000;
      }
      __int16 v46 = v53 | v35;
      goto LABEL_43;
    }
    sub_1A88ED640(v32, v33, (uint64_t)v111);
    sub_1A8529F8C((uint64_t)v111, (uint64_t)v117, &qword_1E974E388);
    if (v118 == 1)
    {
      __int16 v46 = 0;
      char v97 = 0;
      uint64_t v98 = 0;
LABEL_43:
      int v101 = 1;
      goto LABEL_47;
    }
    __int16 v46 = 0;
    int v101 = 0;
    char v97 = (unsigned __int8 *)v117[1];
    uint64_t v98 = (unsigned __int8 *)v117[0];
    BOOL v32 = (unsigned char *)v117[4];
    uint64_t v33 = v117[5];
LABEL_47:
    uint64_t v54 = sub_1A89022F0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v56 = *((void *)v54 + 2);
    unint64_t v55 = *((void *)v54 + 3);
    if (v56 >= v55 >> 1) {
      uint64_t v54 = sub_1A89022F0((char *)(v55 > 1), v56 + 1, 1, v54);
    }
    *((void *)v54 + 2) = v56 + 1;
    uint64_t v57 = &v54[24 * v56];
    *((void *)v57 + 4) = v32;
    *((void *)v57 + 5) = v33;
    *((_WORD *)v57 + 24) = v46;
    if (v26 == v45) {
      goto LABEL_90;
    }
    uint64_t v58 = v54;
    uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v59 = (uint64_t)v58;
    uint64_t v60 = 0;
    unint64_t v61 = v26;
    unint64_t v62 = v105;
    uint64_t v107 = v30;
    int v63 = v101;
LABEL_53:
    if (v61 >= v45) {
      break;
    }
    uint64_t v65 = (unsigned __int8 **)&v62[64 * v61];
    unsigned int v67 = *v65;
    uint64_t v66 = v65[1];
    int v68 = *((unsigned __int8 *)v65 + 16);
    uint64_t v64 = *((unsigned __int8 *)v65 + 17);
    char v69 = *((unsigned char *)v65 + 18);
    unint64_t v70 = v65[5];
    uint64_t v71 = (uint64_t)v65[6];
    int v72 = *((unsigned __int8 *)v65 + 56);
    ++v61;
    uint64_t v73 = v30;
    __int16 v74 = *((unsigned __int8 *)v65 + 57);
    while (1)
    {
      if (v67)
      {
        if (v66 && v67 == v66)
        {
          int v77 = 0;
          char v76 = 1;
          if (!v73) {
            goto LABEL_55;
          }
          goto LABEL_69;
        }
LABEL_66:
        char v76 = 0;
        int v78 = *v67++;
        int v77 = v78;
        if (!v73) {
          goto LABEL_55;
        }
        goto LABEL_69;
      }
      if (v66) {
        goto LABEL_66;
      }
      int v77 = 0;
      unsigned int v67 = 0;
      char v76 = 1;
      if (!v73)
      {
LABEL_55:
        if (!v29) {
          break;
        }
        uint64_t v73 = 0;
        goto LABEL_57;
      }
LABEL_69:
      if (v29 && v73 == v29) {
        break;
      }
LABEL_57:
      unsigned int v75 = *v73++;
      uint64_t result = v75;
      if (v77 != v75) {
        char v76 = 1;
      }
      if (v76) {
        goto LABEL_51;
      }
    }
    if ((v76 & 1) == 0)
    {
LABEL_51:
      uint64_t v64 = v60;
      goto LABEL_52;
    }
    if ((v69 & 1) == 0)
    {
      unsigned int v79 = v60 + 1;
      if ((v79 >> 8)) {
        goto LABEL_110;
      }
      if (v64 == v79)
      {
        if (v68)
        {
          if (v63)
          {
            uint64_t v80 = v59;
            sub_1A88ED640(v70, v71, (uint64_t)v112);
            uint64_t result = sub_1A8529F8C((uint64_t)v112, (uint64_t)v115, &qword_1E974E388);
            unint64_t v81 = v26;
            __int16 v82 = 0;
            if (v116 == 1)
            {
              int v63 = 1;
            }
            else
            {
              int v63 = 0;
              char v97 = (unsigned __int8 *)v115[1];
              uint64_t v98 = (unsigned __int8 *)v115[0];
              unint64_t v70 = (unsigned __int8 *)v115[4];
              uint64_t v71 = v115[5];
            }
            unint64_t v62 = v105;
            uint64_t v59 = v80;
          }
          else
          {
            unint64_t v81 = v26;
            __int16 v82 = 0;
            int v63 = 0;
          }
        }
        else
        {
          unint64_t v81 = v26;
          if (v72) {
            __int16 v83 = -32512;
          }
          else {
            __int16 v83 = 0x8000;
          }
          __int16 v82 = v83 | v74;
        }
        unint64_t v85 = *(void *)(v59 + 16);
        unint64_t v84 = *(void *)(v59 + 24);
        if (v85 >= v84 >> 1)
        {
          int v102 = v63;
          uint64_t result = (uint64_t)sub_1A89022F0((char *)(v84 > 1), v85 + 1, 1, (char *)v59);
          int v63 = v102;
          unint64_t v62 = v105;
          uint64_t v59 = result;
        }
        *(void *)(v59 + 16) = v85 + 1;
        unint64_t v86 = v59 + 24 * v85;
        *(void *)(v86 + 32) = v70;
        *(void *)(v86 + 40) = v71;
        *(_WORD *)(v86 + 48) = v82;
        unint64_t v26 = v81;
        uint64_t v30 = v107;
LABEL_52:
        uint64_t v60 = v64;
        if (v61 != v45) {
          goto LABEL_53;
        }
      }
    }
    LOBYTE(v101) = v63;
    uint64_t v5 = v94;
    char v87 = (char *)v59;
    swift_bridgeObjectRelease();
    uint64_t v54 = v87;
LABEL_90:
    uint64_t v23 = v99;
    if (v30 && v29 - v30 == 8)
    {
      uint64_t v88 = (uint64_t)v54;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (sub_1A88EC7CC(0x656D616E656C6966uLL, 0xE800000000000000, v30, v29, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C))
      {
        if ((v101 & 1) != 0 && *(void *)(v88 + 16) == 1 && (*(_WORD *)(v88 + 48) & 0x8100) == 0x8000)
        {
          uint64_t v89 = sub_1A88FABBC(*(void *)(v88 + 32), *(void *)(v88 + 40));
          uint64_t v91 = v90;
          swift_retain();
          uint64_t v23 = v99;
          int64_t v92 = sub_1A88EB78C(v89, v91, a3);
        }
        else
        {
          int64_t v108 = 0;
          unint64_t v109 = 0xE000000000000000;
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A88ED9A0((uint64_t)v98, (uint64_t)v97, v101 & 1, v88, v98, v97, v101 & 1, v88, a3, (uint64_t)&v108);
          swift_bridgeObjectRelease();
          swift_release();
          int64_t v92 = v108;
          unint64_t v93 = v109;
        }
        *a2 = v92;
        a2[1] = v93;
        swift_bridgeObjectRelease_n();
        goto LABEL_97;
      }
      uint64_t result = swift_bridgeObjectRelease_n();
      __int16 v25 = v105;
    }
    else
    {
LABEL_97:
      uint64_t result = swift_bridgeObjectRelease();
      __int16 v25 = v105;
    }
LABEL_14:
    if (v26 == v23) {
      return swift_bridgeObjectRelease_n();
    }
  }
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
  return result;
}

unint64_t sub_1A88EEDB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = swift_beginAccess();
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  if (*a1 != v12)
  {
    if (*a1 >= v12)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if (*(unsigned char *)(a1[2] + v11) == 59)
    {
      *a1 = v11 + 1;
      return 1;
    }
  }
  unint64_t result = swift_beginAccess();
  if (v11 != v12 && *(void *)(*(void *)a2 + 16) != 0)
  {
    if (__OFADD__(a3, 1)) {
      goto LABEL_25;
    }
    if (a3 + 1 < v11)
    {
      uint64_t v14 = v11 - 2;
      if (__OFSUB__(v11, 2))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v14 < a3 || v14 >= a4) {
        goto LABEL_27;
      }
      unsigned int v15 = *(unsigned __int8 *)(a5 + v14);
      BOOL v16 = v15 > 0x20;
      uint64_t v17 = (1 << v15) & 0x100002600;
      if (!v16 && v17 != 0)
      {
        if (v11 <= a3 || v11 > a4) {
          goto LABEL_28;
        }
        unsigned int v19 = *(unsigned __int8 *)(v11 + a5 - 1);
        if (v19 < 0x21) {
          return (0x100002600uLL >> v19) & 1;
        }
      }
    }
  }
  return 0;
}

unint64_t sub_1A88EEEF8(unint64_t result, uint64_t a2, char a3)
{
  uint64_t i = a2 - result;
  if (result) {
    uint64_t v12 = a2 - result;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v12 < 0) {
    goto LABEL_210;
  }
  if (!v12) {
    return 0;
  }
  uint64_t v9 = result;
  unsigned int v13 = *(unsigned __int8 *)result;
  BOOL v14 = v13 > 0x20;
  uint64_t v15 = (1 << v13) & 0x100002600;
  if (v14 || v15 == 0)
  {
    uint64_t v10 = 0;
  }
  else
  {
    if (v12 == 1)
    {
      uint64_t v17 = 1;
      uint64_t v67 = 1;
      uint64_t v10 = 1;
      uint64_t v18 = 1;
      for (uint64_t i = 1; ; uint64_t i = v12)
      {
        while (1)
        {
          uint64_t v68 = v17;
          uint64_t v69 = v9;
          uint64_t v70 = a2;
          if (v10 == v18) {
            return 0;
          }
LABEL_32:
          if (i != v12)
          {
            if (v12 <= i) {
              uint64_t v3 = i;
            }
            else {
              uint64_t v3 = v12;
            }
            if (i >= v12) {
              goto LABEL_209;
            }
            unsigned int v23 = *(unsigned __int8 *)(v9 + i);
            if (v23 <= 0x20 && ((1 << v23) & 0x100002600) != 0)
            {
              uint64_t v5 = i + 1;
              uint64_t v70 = a2;
              uint64_t v17 = v12;
              uint64_t i = v12;
              if (v5 != v12)
              {
                uint64_t v4 = 0x100002600;
                uint64_t i = v5;
                do
                {
                  if (v3 == i) {
                    goto LABEL_208;
                  }
                  unsigned int v24 = *(unsigned __int8 *)(v9 + i);
                  BOOL v14 = v24 > 0x20;
                  uint64_t v5 = (1 << v24) & 0x100002600;
                  if (v14 || v5 == 0) {
                    goto LABEL_48;
                  }
                  ++i;
                }
                while (v12 != i);
                uint64_t i = v12;
LABEL_48:
                uint64_t v70 = a2;
                uint64_t v17 = v12;
              }
            }
            uint64_t v67 = i;
            uint64_t v68 = v17;
            uint64_t v69 = v9;
          }
          char v62 = a3;
          unint64_t v66 = MEMORY[0x1E4FBC860];
          unint64_t result = sub_1A88EEDB0(&v67, (uint64_t)&v66, 0, v12, v9);
          if ((result & 1) == 0) {
            goto LABEL_152;
          }
          while (1)
          {
            uint64_t v27 = v67;
            uint64_t v26 = v68;
            if (v67 != v68)
            {
              uint64_t v28 = v69;
              if (v68 <= v67) {
                uint64_t v29 = v67;
              }
              else {
                uint64_t v29 = v68;
              }
              do
              {
                if (v29 == v27)
                {
                  uint64_t v67 = v27;
                  __break(1u);
LABEL_195:
                  uint64_t v67 = v28;
                  uint64_t v68 = v26;
                  __break(1u);
LABEL_196:
                  uint64_t v3 = 0x800000100002600;
                  uint64_t v4 = v10;
                  while (1)
                  {
                    uint64_t i = v4 + 2;
                    if (__OFADD__(v4 + 1, 1)) {
                      goto LABEL_237;
                    }
                    if (v12 < i) {
                      goto LABEL_238;
                    }
                    if (i < ++v4) {
                      goto LABEL_239;
                    }
                    if (i == v12) {
                      goto LABEL_219;
                    }
                    unsigned int v60 = *(unsigned __int8 *)(v9 + i);
                    BOOL v14 = v60 > 0x3B;
                    uint64_t v5 = (1 << v60) & 0x800000100002600;
                    if (!v14 && v5 != 0) {
                      goto LABEL_167;
                    }
                  }
                }
                unsigned int v30 = *(unsigned __int8 *)(v69 + v27);
                BOOL v14 = v30 > 0x20;
                uint64_t v5 = (1 << v30) & 0x100002600;
                if (v14 || v5 == 0) {
                  break;
                }
                ++v27;
              }
              while (v68 != v27);
              uint64_t v67 = v27;
            }
            sub_1A88DCBE0((uint64_t)v71);
            unint64_t result = sub_1A8529F8C((uint64_t)v71, (uint64_t)v75, &qword_1E9745F70);
            uint64_t i = v76;
            if ((v76 & 1) != 0 || (uint64_t v5 = v67, v3 = v68, v67 == v68))
            {
LABEL_152:
              if (v9) {
                return v9 + v10;
              }
              else {
                return 0;
              }
            }
            if (v67 >= v68) {
              goto LABEL_211;
            }
            uint64_t i = v69;
            if (*(unsigned char *)(v69 + v67) != 61) {
              goto LABEL_152;
            }
            unint64_t result = v75[0];
            uint64_t v32 = v75[1];
            uint64_t v33 = v75[2];
            uint64_t v4 = v70;
            uint64_t v34 = ++v67;
            if (v5 + 1 == v68) {
              goto LABEL_76;
            }
            if (v5 + 1 >= v68)
            {
              __break(1u);
LABEL_220:
              __break(1u);
LABEL_221:
              __break(1u);
LABEL_222:
              uint64_t v4 = v8;
              uint64_t i = v7;
              uint64_t v3 = v6;
              goto LABEL_223;
            }
            if (*(unsigned char *)(v69 + v34) != 34)
            {
LABEL_76:
              unint64_t v36 = v75[0];
              sub_1A88DCBE0((uint64_t)v72);
              sub_1A8529F8C((uint64_t)v72, (uint64_t)v73, &qword_1E9745F70);
              if (v74 == 1) {
                goto LABEL_164;
              }
              char v64 = 0;
              char v65 = 0;
              uint64_t v34 = v73[0];
              uint64_t v5 = v73[1];
              uint64_t i = v73[2];
              unint64_t result = v36;
              goto LABEL_99;
            }
            uint64_t v34 = v5 + 2;
            uint64_t v67 = v5 + 2;
            if (v5 + 2 == v68) {
              goto LABEL_164;
            }
            uint64_t v6 = v68;
            uint64_t v7 = v69;
            uint64_t v8 = v70;
            if (v34 >= v68) {
              goto LABEL_222;
            }
            if (*(unsigned char *)(v69 + v34) != 34) {
              break;
            }
            uint64_t v4 = v70;
            uint64_t v35 = v5 + 2;
            v5 += 2;
LABEL_93:
            uint64_t v67 = v35;
            uint64_t v68 = v6;
            uint64_t v69 = v7;
            uint64_t v70 = v4;
            if (v5 < v34) {
              goto LABEL_220;
            }
            if (v3 < v5) {
              goto LABEL_221;
            }
            if (v5 == v3) {
              goto LABEL_164;
            }
            if (v5 >= v3) {
              goto LABEL_224;
            }
            if (*(unsigned char *)(i + v5) != 34) {
              goto LABEL_164;
            }
            uint64_t v67 = v5 + 1;
            char v64 = v62;
            char v65 = 1;
LABEL_99:
            uint64_t v37 = v33 + v32;
            if (!v33) {
              uint64_t v37 = 0;
            }
            uint64_t v63 = v37;
            if (v33) {
              uint64_t v38 = v33 + result;
            }
            else {
              uint64_t v38 = 0;
            }
            uint64_t v39 = i + v34;
            if (i) {
              uint64_t v40 = i + v5;
            }
            else {
              uint64_t v40 = 0;
            }
            if (i) {
              uint64_t v41 = v39;
            }
            else {
              uint64_t v41 = 0;
            }
            unint64_t v42 = v66;
            unint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if (result)
            {
              unint64_t v43 = v42;
            }
            else
            {
              unint64_t result = (unint64_t)sub_1A89015F8(0, *(void *)(v42 + 16) + 1, 1, (char *)v42);
              unint64_t v43 = result;
            }
            unint64_t v45 = *(void *)(v43 + 16);
            unint64_t v44 = *(void *)(v43 + 24);
            if (v45 >= v44 >> 1)
            {
              unint64_t result = (unint64_t)sub_1A89015F8((char *)(v44 > 1), v45 + 1, 1, (char *)v43);
              unint64_t v43 = result;
            }
            *(void *)(v43 + 16) = v45 + 1;
            unint64_t v46 = v43 + 40 * v45;
            *(void *)(v46 + 32) = v38;
            *(void *)(v46 + 40) = v63;
            *(void *)(v46 + 48) = v41;
            *(void *)(v46 + 56) = v40;
            *(unsigned char *)(v46 + 64) = v65;
            *(unsigned char *)(v46 + 65) = v64 & 1;
            unint64_t v66 = v43;
            uint64_t v28 = v67;
            uint64_t v26 = v68;
            if (v67 == v68) {
              goto LABEL_52;
            }
            if (v68 <= v67) {
              uint64_t v5 = v67;
            }
            else {
              uint64_t v5 = v68;
            }
            uint64_t v47 = v67 + 1;
            while (1)
            {
              if (v5 == v28) {
                goto LABEL_195;
              }
              unsigned int v48 = *(unsigned __int8 *)(v69 + v28);
              BOOL v14 = v48 > 0x20;
              uint64_t v49 = (1 << v48) & 0x100002600;
              if (v14 || v49 == 0) {
                break;
              }
              ++v28;
              ++v47;
              if (v68 == v28)
              {
                uint64_t v67 = v28;
                goto LABEL_52;
              }
            }
            uint64_t v67 = v28;
            if (v68 != v28)
            {
              if (v28 >= v68) {
                goto LABEL_229;
              }
              if (*(unsigned char *)(v69 + v28) == 40)
              {
                uint64_t v51 = v28 + 1;
                uint64_t v67 = v28 + 1;
                if (v68 - 1 == v28)
                {
                  uint64_t v51 = v68;
                }
                else
                {
                  if (v51 >= v68) {
                    goto LABEL_240;
                  }
                  if (*(unsigned char *)(v69 + v28 + 1) != 41)
                  {
                    if (v68 - 2 == v28)
                    {
LABEL_134:
                      uint64_t v51 = v68;
LABEL_135:
                      uint64_t v67 = v51;
                      if (v51 <= v28) {
                        goto LABEL_234;
                      }
                    }
                    else
                    {
                      uint64_t v51 = v28 + 2;
                      if (v28 + 2 >= v68) {
                        goto LABEL_242;
                      }
                      if (*(unsigned char *)(v69 + v28 + 2) != 41)
                      {
                        while (1)
                        {
                          uint64_t v51 = v47 + 2;
                          if (__OFADD__(v47 + 1, 1)) {
                            break;
                          }
                          if (v68 < v51) {
                            goto LABEL_232;
                          }
                          if (v51 < ++v47) {
                            goto LABEL_233;
                          }
                          if (v51 == v68) {
                            goto LABEL_134;
                          }
                          if (*(unsigned char *)(v69 + v51) == 41) {
                            goto LABEL_135;
                          }
                        }
LABEL_231:
                        __break(1u);
LABEL_232:
                        __break(1u);
LABEL_233:
                        __break(1u);
LABEL_234:
                        __break(1u);
LABEL_235:
                        __break(1u);
LABEL_236:
                        __break(1u);
LABEL_237:
                        __break(1u);
LABEL_238:
                        __break(1u);
LABEL_239:
                        __break(1u);
LABEL_240:
                        __break(1u);
LABEL_241:
                        __break(1u);
LABEL_242:
                        __break(1u);
                        goto LABEL_243;
                      }
                      uint64_t v67 = v28 + 2;
                    }
                  }
                }
                if (v68 < v51) {
                  goto LABEL_230;
                }
                if (v51 == v68) {
                  goto LABEL_164;
                }
                if (v51 >= v68) {
                  goto LABEL_235;
                }
                if (*(unsigned char *)(v69 + v51) != 41)
                {
LABEL_164:
                  swift_bridgeObjectRelease();
                  return 0;
                }
                uint64_t v67 = v51 + 1;
              }
            }
LABEL_52:
            unint64_t result = sub_1A88EEDB0(&v67, (uint64_t)&v66, 0, v12, v9);
            if ((result & 1) == 0) {
              goto LABEL_152;
            }
          }
          uint64_t v35 = v5 + 3;
          if (__OFADD__(v5, 3)) {
            goto LABEL_225;
          }
          if (v68 < v35)
          {
            uint64_t v4 = v70;
            uint64_t i = v69;
            uint64_t v3 = v68;
            goto LABEL_216;
          }
          if (v35 < v34)
          {
            uint64_t v4 = v70;
            uint64_t i = v69;
            uint64_t v3 = v68;
            goto LABEL_218;
          }
          if (v35 == v68)
          {
LABEL_90:
            uint64_t v7 = v69;
            uint64_t v6 = v68;
            uint64_t v5 = v68;
            goto LABEL_93;
          }
          while (1)
          {
            uint64_t v6 = v5 + 3;
            if (v5 + 3 >= v68) {
              goto LABEL_212;
            }
            uint64_t v7 = *(unsigned __int8 *)(v69 + v5 + 3);
            if (v7 == 34)
            {
              if (v34 >= v6)
              {
                uint64_t v35 = v5 + 3;
LABEL_92:
                uint64_t v7 = v69;
                uint64_t v6 = v68;
                uint64_t v5 = v35;
                goto LABEL_93;
              }
              uint64_t v7 = *(unsigned __int8 *)(v69 + v5 + 2);
              if (v7 != 92) {
                goto LABEL_92;
              }
            }
            uint64_t v35 = v5 + 4;
            if (__OFADD__(v6, 1)) {
              break;
            }
            if (v68 < v35) {
              goto LABEL_215;
            }
            if (v35 < v6) {
              goto LABEL_217;
            }
            ++v5;
            if (v35 == v68) {
              goto LABEL_90;
            }
          }
          uint64_t v34 = v5 + 3;
LABEL_214:
          uint64_t v67 = v34;
          uint64_t v68 = v3;
          uint64_t v69 = i;
          uint64_t v70 = v4;
          __break(1u);
LABEL_215:
          uint64_t v34 = v5 + 3;
LABEL_216:
          uint64_t v67 = v34;
          uint64_t v68 = v3;
          uint64_t v69 = i;
          uint64_t v70 = v4;
          __break(1u);
LABEL_217:
          uint64_t v34 = v5 + 3;
LABEL_218:
          uint64_t v67 = v34;
          uint64_t v68 = v3;
          uint64_t v69 = i;
          uint64_t v70 = v4;
          __break(1u);
LABEL_219:
          uint64_t i = v12;
LABEL_167:
          uint64_t v67 = i;
          uint64_t v69 = v9;
          uint64_t v18 = i;
          if (i >= v10) {
            break;
          }
          __break(1u);
LABEL_169:
          uint64_t v67 = i;
          uint64_t v68 = v12;
          uint64_t v69 = v9;
          uint64_t v70 = a2;
          if (i == v12) {
            goto LABEL_31;
          }
          if (i >= v12) {
            goto LABEL_241;
          }
          if (*(unsigned char *)(v9 + i) == 61)
          {
            uint64_t v67 = ++i;
            uint64_t v69 = v9;
          }
          if (i == v12) {
            goto LABEL_31;
          }
          if (v12 <= i) {
            uint64_t v55 = i;
          }
          else {
            uint64_t v55 = v12;
          }
          if (i >= v12) {
            goto LABEL_228;
          }
          unsigned int v56 = *(unsigned __int8 *)(v9 + i);
          if (v56 <= 0x20)
          {
            uint64_t v4 = 0x100002600;
            if (((1 << v56) & 0x100002600) != 0)
            {
              uint64_t v5 = i + 1;
              uint64_t i = v12;
              if (v5 != v12)
              {
                uint64_t i = v5;
                while (v55 != i)
                {
                  unsigned int v57 = *(unsigned __int8 *)(v9 + i);
                  BOOL v14 = v57 > 0x20;
                  uint64_t v5 = (1 << v57) & 0x100002600;
                  if (v14 || v5 == 0) {
                    goto LABEL_189;
                  }
                  if (v12 == ++i)
                  {
                    uint64_t i = v12;
                    goto LABEL_189;
                  }
                }
LABEL_228:
                __break(1u);
LABEL_229:
                __break(1u);
LABEL_230:
                __break(1u);
                goto LABEL_231;
              }
            }
          }
LABEL_189:
          uint64_t v67 = i;
          uint64_t v17 = v12;
        }
LABEL_29:
        if (v12 < v18)
        {
          __break(1u);
LABEL_208:
          uint64_t v70 = a2;
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          uint64_t v34 = v6;
LABEL_223:
          uint64_t v67 = v34;
          uint64_t v68 = v3;
          uint64_t v69 = i;
          uint64_t v70 = v4;
          __break(1u);
LABEL_224:
          __break(1u);
LABEL_225:
          uint64_t v4 = v8;
          uint64_t i = v7;
          uint64_t v3 = v6;
          goto LABEL_214;
        }
        if (v18 == v12)
        {
LABEL_31:
          uint64_t v17 = v12;
          uint64_t i = v12;
          if (v10 == v18) {
            return 0;
          }
          goto LABEL_32;
        }
        unsigned int v52 = *(unsigned __int8 *)(v9 + v18);
        uint64_t i = v18;
        if (v52 > 0x20) {
          goto LABEL_169;
        }
        uint64_t i = v18;
        if (((1 << v52) & 0x100002600) == 0) {
          goto LABEL_169;
        }
        uint64_t i = v18 + 1;
        if (v18 + 1 != v12)
        {
          do
          {
            unsigned int v53 = *(unsigned __int8 *)(v9 + i);
            BOOL v14 = v53 > 0x20;
            uint64_t v4 = (1 << v53) & 0x100002600;
            if (v14 || v4 == 0) {
              goto LABEL_169;
            }
          }
          while (v12 != ++i);
        }
        uint64_t v67 = v12;
        uint64_t v17 = v12;
      }
    }
    uint64_t v10 = 1;
    while (1)
    {
      unsigned int v19 = *(unsigned __int8 *)(result + v10);
      BOOL v14 = v19 > 0x20;
      uint64_t v3 = (1 << v19) & 0x100002600;
      if (v14 || v3 == 0) {
        break;
      }
      if (v12 == ++v10) {
        return 0;
      }
    }
  }
  uint64_t v67 = v10;
  uint64_t v68 = v12;
  uint64_t v69 = result;
  uint64_t v70 = a2;
  if (v10 == v12)
  {
    uint64_t v18 = v12;
    goto LABEL_31;
  }
  if (v10 < v12)
  {
    unsigned int v21 = *(unsigned __int8 *)(result + v10);
    BOOL v14 = v21 > 0x3B;
    uint64_t i = (1 << v21) & 0x800000100002600;
    BOOL v22 = v14 || i == 0;
    uint64_t v18 = v10;
    if (!v22) {
      goto LABEL_29;
    }
    uint64_t v18 = v10 + 1;
    uint64_t i = v12;
    if (v10 + 1 == v12) {
      goto LABEL_167;
    }
    if (v10 + 1 < v12)
    {
      unsigned int v59 = *(unsigned __int8 *)(result + v18);
      if (v59 > 0x3B) {
        goto LABEL_196;
      }
      uint64_t i = 1 << v59;
      if ((i & 0x800000100002600) == 0) {
        goto LABEL_196;
      }
      uint64_t v67 = v10 + 1;
      uint64_t v69 = result;
      goto LABEL_29;
    }
    goto LABEL_236;
  }
LABEL_243:
  __break(1u);
  return result;
}

void *sub_1A88EF8A4(void *__src, size_t __len)
{
  if (__src)
  {
    if ((__len & 0x8000000000000000) != 0) {
      __break(1u);
    }
    else {
      return memmove(*(void **)(v2 + 40), __src, __len);
    }
  }
  return __src;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RFC_2231.UnsafeNameValuePair(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RFC_2231.UnsafeNameValuePair(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RFC_2231.UnsafeNameValuePair()
{
  return &type metadata for RFC_2231.UnsafeNameValuePair;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RFC_2231.UnsafeAttributeName(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 19)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RFC_2231.UnsafeAttributeName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RFC_2231.UnsafeAttributeName()
{
  return &type metadata for RFC_2231.UnsafeAttributeName;
}

uint64_t getEnumTagSinglePayload for RFC_2231.EncodedWithCharacterSetAndLanguage(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RFC_2231.EncodedWithCharacterSetAndLanguage(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RFC_2231.EncodedWithCharacterSetAndLanguage()
{
  return &type metadata for RFC_2231.EncodedWithCharacterSetAndLanguage;
}

ValueMetadata *type metadata accessor for RFC_2231()
{
  return &type metadata for RFC_2231;
}

ValueMetadata *type metadata accessor for RFC_2231.UnsafeAttributeValue()
{
  return &type metadata for RFC_2231.UnsafeAttributeValue;
}

__n128 __swift_memcpy18_8_1(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RFC_2231.UnsafeAttributeValue.Element(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (*(_WORD *)(a1 + 16) & 0xFE | (*(unsigned __int16 *)(a1 + 16) >> 15) | (*(unsigned __int16 *)(a1 + 16) >> 1) & 0x3F00) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RFC_2231.UnsafeAttributeValue.Element(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2)
    {
      unsigned int v3 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(_WORD *)(result + 16) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_1A88EFBB4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 16) >> 15;
}

uint64_t sub_1A88EFBC0(uint64_t result)
{
  *(_WORD *)(result + 16) &= ~0x8000u;
  return result;
}

uint64_t sub_1A88EFBD0(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x101 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for RFC_2231.UnsafeAttributeValue.Element()
{
  return &type metadata for RFC_2231.UnsafeAttributeValue.Element;
}

uint64_t getEnumTagSinglePayload for RFC_2231.UnsafeAttributeValue.DecodedRange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for RFC_2231.UnsafeAttributeValue.DecodedRange()
{
  return &type metadata for RFC_2231.UnsafeAttributeValue.DecodedRange;
}

ValueMetadata *type metadata accessor for RFC_2231.UnsafeBaseName()
{
  return &type metadata for RFC_2231.UnsafeBaseName;
}

uint64_t getEnumTagSinglePayload for RFC_2231.UnsafeAttributeValue.Element.Unencoded(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RFC_2231.UnsafeAttributeValue.Element.Unencoded(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RFC_2231.UnsafeAttributeValue.Element.Unencoded()
{
  return &type metadata for RFC_2231.UnsafeAttributeValue.Element.Unencoded;
}

uint64_t sub_1A88EFD04(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v20 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1)) {
      break;
    }
    if (v11 >= v20) {
      goto LABEL_27;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v20) {
        goto LABEL_27;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 2;
        if (v11 + 2 >= v20) {
          goto LABEL_27;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v11 + 3;
          if (v11 + 3 >= v20) {
            goto LABEL_27;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v11 + 4;
            if (v11 + 4 >= v20)
            {
LABEL_27:
              swift_release();
              char v19 = 0;
              return v19 & 1;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_30;
                }
                if (v11 >= v20) {
                  goto LABEL_27;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v11);
                ++v16;
                if (v15) {
                  goto LABEL_18;
                }
              }
            }
          }
        }
      }
      int64_t v11 = v16;
    }
LABEL_18:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_19:
    uint64_t v21 = *(void *)(*(void *)(a3 + 48) + 8 * v13);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v17 = a1(&v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v19 & 1;
    }
    char v18 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    if (v18)
    {
      swift_release();
      char v19 = 1;
      return v19 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A88EFEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a4;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v33 = a1;
  uint64_t v8 = type metadata accessor for ReplacementNode();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  BOOL v14 = (char *)&v33 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B68);
  MEMORY[0x1F4188790](v15 - 8);
  char v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  int64_t v20 = (char *)&v33 - v19;
  *(void *)(a6 + 40) = 0;
  *(void *)(a6 + 48) = 0;
  *(unsigned char *)(a6 + 56) = 2;
  uint64_t v21 = a6 + *(int *)(v8 + 24);
  uint64_t v22 = type metadata accessor for PartReplacement();
  unsigned int v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v38 = v21;
  v23(v21, 1, 1, v22);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v20, 1, 1, v8);
  uint64_t v51 = 0;
  unint64_t v43 = &v51;
  uint64_t v44 = a5;
  unint64_t v45 = v20;
  uint64_t v40 = &v51;
  uint64_t v41 = v20;
  uint64_t v24 = (uint64_t)v37;
  char v25 = sub_1A88E7068(3, v33, v34, v35, v36);
  if (v24)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = v14;
    uint64_t v46 = MEMORY[0x1E4FBC860];
    char v47 = v25;
    uint64_t v48 = v26;
    uint64_t v49 = v27;
    uint64_t v50 = v28;
    sub_1A88E6824((uint64_t (*)(uint64_t))sub_1A88F0820, (uint64_t)v42, (void (*)(void *, char *, char *, uint64_t, uint64_t))sub_1A88F096C, (uint64_t)v39, 0, 0);
    swift_bridgeObjectRelease();
    sub_1A8511A9C((uint64_t)v20, (uint64_t)v17, &qword_1E9743B68);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) != 1)
    {
      uint64_t v32 = (uint64_t)v37;
      sub_1A88F0FFC((uint64_t)v17, (uint64_t)v37);
      sub_1A88F0FFC(v32, (uint64_t)v11);
      sub_1A8511B00(v38, &qword_1E9743B48);
      sub_1A88F0FFC((uint64_t)v11, a6);
      swift_bridgeObjectRelease();
      uint64_t v29 = &qword_1E9743B68;
      uint64_t v30 = (uint64_t)v20;
      return sub_1A8511B00(v30, v29);
    }
    sub_1A8511B00((uint64_t)v17, &qword_1E9743B68);
    sub_1A88F0FA8();
    swift_allocError();
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  sub_1A8511B00((uint64_t)v20, &qword_1E9743B68);
  uint64_t v29 = &qword_1E9743B48;
  uint64_t v30 = v38;
  return sub_1A8511B00(v30, v29);
}

uint64_t type metadata accessor for ReplacementNode()
{
  uint64_t result = qword_1E9743B58;
  if (!qword_1E9743B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A88F02AC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = type metadata accessor for ReplacementNode();
  uint64_t v46 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v49 = (uint64_t)&v44 - v17;
  uint64_t v18 = *a1;
  *a2 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v50 = v4;
  uint64_t v45 = a3;
  if (v19)
  {
    uint64_t v20 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v21 = sub_1A88F0E38(v20);
    if (v22)
    {
      unint64_t v23 = v21;
      uint64_t v44 = *(void *)(a3 + 56);
      uint64_t v24 = type metadata accessor for PartReplacement();
      uint64_t v25 = *(void *)(v24 - 8);
      sub_1A88F11D4(v44 + *(void *)(v25 + 72) * v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartReplacement);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v12, 0, 1, v24);
    }
    else
    {
      uint64_t v24 = type metadata accessor for PartReplacement();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 1, 1, v24);
    }
  }
  else
  {
    uint64_t v24 = type metadata accessor for PartReplacement();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 1, 1, v24);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  uint64_t v26 = (uint64_t)&v15[*(int *)(v13 + 24)];
  type metadata accessor for PartReplacement();
  uint64_t v27 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v26, 1, 1, v24);
  long long v28 = *((_OWORD *)a1 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)a1;
  *((_OWORD *)v15 + 1) = v28;
  uint64_t v29 = a1[4];
  *((void *)v15 + 5) = 0;
  *((void *)v15 + 6) = 0;
  *((void *)v15 + 4) = v29;
  v15[56] = 2;
  sub_1A88F1134((uint64_t)v12, v26);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  *(void *)&v15[*(int *)(v13 + 28)] = MEMORY[0x1E4FBC860];
  uint64_t v31 = (uint64_t)v15;
  uint64_t v32 = v49;
  sub_1A88F0FFC(v31, v49);
  if (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, v30))
  {
    uint64_t v33 = v47;
    sub_1A8511B00(v47, &qword_1E9743B68);
    sub_1A88F11D4(v32, v33, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v33, 0, 1, v13);
  }
  else if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v13))
  {
    uint64_t v34 = *(void *)v32;
    uint64_t v35 = *(void *)v32 + 32;
    size_t v36 = (2 * *(void *)(*(void *)v32 + 16)) | 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88F0974(v32, v34, v35, 0, v36);
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = v32 + *(int *)(v13 + 24);
  uint64_t v38 = v48;
  sub_1A8511A9C(v37, v48, &qword_1E9743B48);
  int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v38, 1, v24);
  uint64_t v40 = sub_1A8511B00(v38, &qword_1E9743B48);
  if (v39 == 1)
  {
    MEMORY[0x1F4188790](v40);
    *(&v44 - 2) = v32;
    uint64_t v41 = v45;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v42 = sub_1A88EFD04((uint64_t (*)(uint64_t *))sub_1A88F119C, (uint64_t)(&v44 - 4), v41);
    swift_bridgeObjectRelease();
    sub_1A88F1C9C(v32, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    if (v42) {
      return 2;
    }
    else {
      return 1;
    }
  }
  else
  {
    sub_1A88F1C9C(v32, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    return 1;
  }
}

uint64_t sub_1A88F0820(uint64_t *a1)
{
  return sub_1A88F02AC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1A88F0840(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7 = *a6;
  if (*a6)
  {
    uint64_t result = sub_1A88C69F8(result, (uint64_t)v17);
    if ((unint64_t)v18 >> 59 == 9)
    {
      *(void *)&long long v18 = v18 & 0x7FFFFFFFFFFFFFFLL;
      long long v19 = v17[0];
      long long v20 = v17[1];
      long long v21 = v18;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v9 = sub_1A88C3474();
      if (v11 != 2)
      {
        size_t v12 = v9;
        uint64_t v13 = v10;
        char v14 = v11;
        uint64_t v15 = type metadata accessor for ReplacementNode();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(a7, 1, v15))
        {
          unint64_t v16 = (2 * *(void *)(v7 + 16)) | 1;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A88F0BF4(v12, v13, v14 & 1, v7, v7 + 32, 0, v16);
          swift_bridgeObjectRelease();
        }
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1A88F096C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A88F0840(a1, a2, a3, a4, a5, *(uint64_t **)(v5 + 16), *(void *)(v5 + 24));
}

void sub_1A88F0974(uint64_t a1, uint64_t a2, uint64_t a3, int64_t a4, size_t a5)
{
  uint64_t v7 = v5;
  uint64_t v13 = type metadata accessor for ReplacementNode();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5 >> 1 == a4) {
    return;
  }
  if ((uint64_t)(a5 >> 1) <= a4)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    a5 = sub_1A89023FC(0, v6, 1, (void *)a5);
LABEL_8:
    unint64_t v19 = *(void *)(a5 + 16);
    unint64_t v18 = *(void *)(a5 + 24);
    if (v19 >= v18 >> 1) {
      a5 = sub_1A89023FC(v18 > 1, v19 + 1, 1, (void *)a5);
    }
    *(void *)(a5 + 16) = v19 + 1;
    sub_1A88F0FFC((uint64_t)v16, a5+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v19);
    swift_unknownObjectRelease();
    *(void *)(v7 + a3) = a5;
    return;
  }
  int64_t v6 = *(void *)(a3 + 8 * a4);
  uint64_t v17 = a4 + 1;
  if (sub_1A88F1060(a3, v17, a5, MEMORY[0x1E4FBC860] + 32, 0, 1uLL))
  {
    a3 = *(int *)(v13 + 28);
    a5 = *(void *)(v7 + a3);
    if (*(void *)(a5 + 16) + 1 != v6) {
      return;
    }
    sub_1A88F11D4(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    swift_unknownObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
  if (v6 >= 1)
  {
    uint64_t v20 = *(int *)(v13 + 28);
    long long v21 = *(void **)(v7 + v20);
    if ((unint64_t)v6 <= v21[2])
    {
      unint64_t v22 = v6 - 1;
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v21 = (void *)sub_1A88BC7A4(v21);
      }
      if (v22 >= v21[2])
      {
        __break(1u);
      }
      else
      {
        sub_1A88F0974(a1, a2, a3, v17, a5);
        swift_unknownObjectRelease();
        *(void *)(v7 + v20) = v21;
      }
    }
  }
}

size_t sub_1A88F0BF4(size_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int64_t a6, unint64_t a7)
{
  uint64_t v12 = v7;
  size_t v15 = result;
  if (a7 >> 1 == a6)
  {
    *(void *)(v7 + 40) = result;
    *(void *)(v7 + 48) = a2;
    *(unsigned char *)(v7 + 56) = a3 & 1;
    return result;
  }
  if ((uint64_t)(a7 >> 1) <= a6)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(a7 >> 1, a6))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v10 = a5;
  uint64_t v17 = *(void *)(a5 + 8 * a6);
  unint64_t v22 = v17 - 1;
  uint64_t v23 = a4;
  if (v17 >= 1)
  {
    unint64_t v9 = a7;
    uint64_t result = type metadata accessor for ReplacementNode();
    uint64_t v8 = *(void **)(v12 + *(int *)(result + 28));
    if ((unint64_t)v17 <= v8[2])
    {
      size_t v11 = result;
      uint64_t v21 = *(int *)(result + 28);
      int64_t v20 = a6 + 1;
      char v18 = sub_1A88F1060(v10, a6 + 1, v9, MEMORY[0x1E4FBC860] + 32, 0, 1uLL);
      swift_unknownObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((v18 & 1) == 0)
      {
        if (result)
        {
LABEL_12:
          if (v22 >= v8[2])
          {
            __break(1u);
            return result;
          }
          sub_1A88F0BF4(v15, a2, a3 & 1, v23, v10, v20, v9);
          goto LABEL_14;
        }
LABEL_20:
        uint64_t result = sub_1A88BC7A4(v8);
        uint64_t v8 = (void *)result;
        goto LABEL_12;
      }
      if (result)
      {
LABEL_9:
        if (v22 < v8[2])
        {
          unint64_t v19 = (unint64_t)v8
              + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80))
              + *(void *)(*(void *)(v11 - 8) + 72) * v22;
          *(void *)(v19 + 40) = v15;
          *(void *)(v19 + 48) = a2;
          *(unsigned char *)(v19 + 56) = a3 & 1;
LABEL_14:
          uint64_t result = swift_unknownObjectRelease();
          *(void *)(v12 + v21) = v8;
          return result;
        }
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      uint64_t v8 = (void *)sub_1A88BC7A4(v8);
      goto LABEL_9;
    }
  }
  return result;
}

unint64_t sub_1A88F0E38(uint64_t a1)
{
  sub_1A8A78738();
  SectionSpecifier.Part.hash(into:)((uint64_t)v4, a1);
  uint64_t v2 = sub_1A8A787C8();
  return sub_1A88F0EA4(a1, v2);
}

unint64_t sub_1A88F0EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v8 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v7, a1);
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        uint64_t v10 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        char v11 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v10, a1);
        swift_bridgeObjectRelease();
        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1A88F0FA8()
{
  unint64_t result = qword_1E974E390;
  if (!qword_1E974E390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E390);
  }
  return result;
}

uint64_t sub_1A88F0FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReplacementNode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88F1060(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int64_t v6 = a3 >> 1;
  uint64_t v7 = (a3 >> 1) - a2;
  if (!__OFSUB__(a3 >> 1, a2))
  {
    int64_t v8 = a6 >> 1;
    if (__OFSUB__(a6 >> 1, a5)) {
      goto LABEL_20;
    }
    if (v7 != (a6 >> 1) - a5) {
      return 0;
    }
    if (!v7) {
      return 1;
    }
    uint64_t v9 = (uint64_t *)(result + 8 * a2);
    if (v9 == (uint64_t *)(a4 + 8 * a5) || v6 == a2) {
      return 1;
    }
    if (v6 <= a2) {
      goto LABEL_22;
    }
    uint64_t v10 = a2 + 1;
    uint64_t v11 = *v9;
    if (v6 == a2) {
      return 1;
    }
    uint64_t v12 = a5;
    if (v8 == a5) {
      return 0;
    }
    while (v12 >= a5 && v12 < v8)
    {
      if (v11 != *(void *)(a4 + 8 * v12)) {
        return 0;
      }
      if (v6 == v10) {
        return 1;
      }
      if (v10 >= v6) {
        goto LABEL_21;
      }
      uint64_t v11 = *(void *)(result + 8 * v10++);
      if (v8 == ++v12) {
        return 0;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1A88F1134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_1A88F119C()
{
  return SectionSpecifier.Part.isSubPart(of:)((NIOIMAPCore2::SectionSpecifier::Part)(*(NIOIMAPCore2::SectionSpecifier::Part **)(v0 + 16))->array._rawValue);
}

uint64_t sub_1A88F11D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for ReplacementNode.NoTopNodeFound()
{
  return &type metadata for ReplacementNode.NoTopNodeFound;
}

uint64_t sub_1A88F124C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    uint64_t v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for PartReplacement();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_13:
      *(void *)(v7 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return v7;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    type metadata accessor for Message.Data(0);
    int v16 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v16 != 1)
      {
        uint64_t v19 = *v10;
        unint64_t v18 = v10[1];
        sub_1A8512DFC(v19, v18);
        uint64_t *v9 = v19;
        v9[1] = v18;
        goto LABEL_12;
      }
    }
    else if (v16 != 1)
    {
      uint64_t v20 = *v10;
      unint64_t v21 = v10[1];
      sub_1A8512DFC(*v10, v21);
      uint64_t *v9 = v20;
      v9[1] = v21;
      goto LABEL_12;
    }
    uint64_t v17 = sub_1A8A75E28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(v9, v10, v17);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    goto LABEL_13;
  }
  uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  swift_retain();
  return v7;
}

uint64_t sub_1A88F1500(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for PartReplacement();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_getEnumCaseMultiPayload();
    type metadata accessor for Message.Data(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1A8A75E28();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
    else
    {
      sub_1A85135AC(*(void *)v4, *(void *)(v4 + 8));
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88F160C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (uint64_t *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v9 = type metadata accessor for PartReplacement();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (!v11(v8, 1, v9))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    type metadata accessor for Message.Data(0);
    int v14 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v14 != 1)
      {
        uint64_t v17 = *v8;
        unint64_t v16 = v8[1];
        sub_1A8512DFC(v17, v16);
        *uint64_t v7 = v17;
        v7[1] = v16;
        goto LABEL_10;
      }
    }
    else if (v14 != 1)
    {
      uint64_t v18 = *v8;
      unint64_t v19 = v8[1];
      sub_1A8512DFC(*v8, v19);
      *uint64_t v7 = v18;
      v7[1] = v19;
      goto LABEL_10;
    }
    uint64_t v15 = sub_1A8A75E28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(v7, v8, v15);
LABEL_10:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    goto LABEL_11;
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_11:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A88F1874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = type metadata accessor for PartReplacement();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      type metadata accessor for Message.Data(0);
      int v16 = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        if (v16 != 1)
        {
          uint64_t v23 = *v9;
          unint64_t v22 = v9[1];
          sub_1A8512DFC(v23, v22);
          *uint64_t v8 = v23;
          v8[1] = v22;
          goto LABEL_17;
        }
      }
      else if (v16 != 1)
      {
        uint64_t v24 = *v9;
        unint64_t v25 = v9[1];
        sub_1A8512DFC(*v9, v25);
        *uint64_t v8 = v24;
        v8[1] = v25;
        goto LABEL_17;
      }
      uint64_t v21 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(v8, v9, v21);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_18;
    }
    goto LABEL_8;
  }
  if (!v14)
  {
    if (a1 == a2) {
      goto LABEL_18;
    }
    sub_1A88F1C9C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PartReplacement);
    int v18 = swift_getEnumCaseMultiPayload();
    type metadata accessor for Message.Data(0);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v18 == 1)
    {
      if (v19 == 1)
      {
LABEL_12:
        uint64_t v20 = sub_1A8A75E28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(v8, v9, v20);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
    }
    else if (v19 == 1)
    {
      goto LABEL_12;
    }
    uint64_t v28 = *v9;
    unint64_t v27 = v9[1];
    sub_1A8512DFC(v28, v27);
    *uint64_t v8 = v28;
    v8[1] = v27;
    goto LABEL_22;
  }
  sub_1A88F1C9C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PartReplacement);
LABEL_8:
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_18:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A88F1C9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A88F1CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for PartReplacement();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for Message.Data(0);
    int v15 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v15 == 1)
      {
LABEL_5:
        uint64_t v16 = sub_1A8A75E28();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v8, v9, v16);
        swift_storeEnumTagMultiPayload();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        goto LABEL_9;
      }
    }
    else if (v15 == 1)
    {
      goto LABEL_5;
    }
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_8;
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_9:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1A88F1F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = type metadata accessor for PartReplacement();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v15 = type metadata accessor for Message.Data(0);
      int v16 = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        if (v16 == 1)
        {
LABEL_5:
          uint64_t v17 = sub_1A8A75E28();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v7, v8, v17);
          swift_storeEnumTagMultiPayload();
LABEL_15:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
          goto LABEL_16;
        }
      }
      else if (v16 == 1)
      {
        goto LABEL_5;
      }
      memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  if (!v13)
  {
    if (a1 == a2) {
      goto LABEL_16;
    }
    sub_1A88F1C9C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PartReplacement);
    int v19 = swift_getEnumCaseMultiPayload();
    uint64_t v20 = type metadata accessor for Message.Data(0);
    int v21 = swift_getEnumCaseMultiPayload();
    if (v19 == 1)
    {
      if (v21 == 1)
      {
LABEL_12:
        uint64_t v22 = sub_1A8A75E28();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v7, v8, v22);
        swift_storeEnumTagMultiPayload();
LABEL_20:
        swift_storeEnumTagMultiPayload();
        goto LABEL_16;
      }
    }
    else if (v21 == 1)
    {
      goto LABEL_12;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_20;
  }
  sub_1A88F1C9C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PartReplacement);
LABEL_8:
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_16:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A88F23A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88F23BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A88F2470()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void *sub_1A88F2484(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A88F2530()
{
  sub_1A88F25DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A88F25DC()
{
  if (!qword_1E9743B50)
  {
    type metadata accessor for PartReplacement();
    unint64_t v0 = sub_1A8A77898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9743B50);
    }
  }
}

uint64_t sub_1A88F2634(uint64_t result, uint64_t a2, char a3, void (*a4)(void, void), uint64_t a5, void (*a6)(uint64_t, char *), uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11 < 0)
  {
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a9) {
    uint64_t v11 = a11;
  }
  else {
    uint64_t v11 = 0;
  }
  if (v11 < 0) {
    goto LABEL_64;
  }
  uint64_t v15 = result;
  int v16 = (char *)sub_1A88FE9DC();
  if (v19 == 2) {
    goto LABEL_7;
  }
  uint64_t v29 = v18;
  unsigned int v57 = a4;
  uint64_t v61 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  char v36 = 0;
  unint64_t v37 = 0x1FFFFFFF0ELL;
  while (1)
  {
    char v67 = v36;
    uint64_t v62 = v35;
    uint64_t v63 = v34;
    uint64_t v64 = v33;
    uint64_t v65 = v32;
    unint64_t v66 = v30;
    uint64_t v44 = v16;
    uint64_t v73 = v17;
    sub_1A88FE1A8(v16, v17, v29, v19 & 1, v74);
    uint64_t v68 = v74[0];
    uint64_t v69 = v74[1];
    uint64_t v70 = v74[2];
    uint64_t v71 = v74[3];
    unint64_t v72 = v74[4];
    sub_1A88C69F8((uint64_t)v74, (uint64_t)&v75);
    if (v76 >> 59 == 9)
    {
      v76 &= 0x7FFFFFFFFFFFFFFuLL;
      uint64_t v45 = v44;
      uint64_t v46 = v15;
      uint64_t v47 = a6;
      uint64_t v48 = a7;
      uint64_t v49 = v77;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      uint64_t v61 = v49;
      a7 = v48;
      a6 = v47;
      uint64_t v15 = v46;
      uint64_t v44 = v45;
    }
    if (a9 && !(v67 & 1 | (v44 == 0)) && (uint64_t)&v44[-a9] >= 1) {
      sub_1A88DAB60((char *)a8, v15, 1, a6, a7, 0, &v44[-a9], a9);
    }
    if ((v37 & 0xFFFFFFFFFFFFFF0ELL) == 0x1FFFFFFF0ELL) {
      goto LABEL_17;
    }
    uint64_t v50 = v31 ? (uint64_t)&v66[-v31] : 0;
    if (v50 < 0) {
      break;
    }
    sub_1A88DAB60((char *)a8, v15, 1, a6, a7, 0, (char *)v50, v31);
    sub_1A88F5F08(v62, v63, v64, v65, v37);
LABEL_17:
    int v16 = (char *)sub_1A88FE9DC();
    uint64_t v29 = v38;
    char v36 = 1;
    unint64_t v39 = v72;
    uint64_t v30 = v73;
    uint64_t v31 = (uint64_t)v44;
    unint64_t v37 = v72;
    uint64_t v40 = v70;
    uint64_t v41 = v71;
    uint64_t v32 = v71;
    uint64_t v33 = v70;
    uint64_t v42 = v69;
    uint64_t v34 = v69;
    uint64_t v43 = v68;
    uint64_t v35 = v68;
    if (v19 == 2) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_30:
  if ((v39 & 0xFFFFFFFFFFFFFF0ELL) != 0x1FFFFFFF0ELL)
  {
    uint64_t v51 = (uint64_t)v44;
    a4 = v57;
    uint64_t v20 = v61;
    if (!(v39 >> 59))
    {
      if ((a3 & 1) != 0 && a2)
      {
        if (v61)
        {
          unint64_t result = sub_1A88D69DC(v43, v42, v40, v41, v39);
          unsigned int v52 = v73;
        }
        else
        {
          uint64_t v55 = v43;
          swift_beginAccess();
          unsigned int v52 = v73;
          sub_1A88F5F28(v55, v69, v70, v71, v72);
          unint64_t result = swift_bridgeObjectRelease();
        }
        if (v51) {
          unsigned int v56 = &v52[-v51];
        }
        else {
          unsigned int v56 = 0;
        }
        if (((unint64_t)v56 & 0x8000000000000000) == 0)
        {
          sub_1A88DAB60((char *)a8, v15, 1, a6, a7, 0, v56, v51);
          goto LABEL_10;
        }
        goto LABEL_67;
      }
      if (v61) {
        goto LABEL_8;
      }
LABEL_7:
      swift_beginAccess();
      swift_bridgeObjectRelease();
      uint64_t v20 = 0;
      goto LABEL_8;
    }
    unint64_t result = sub_1A88F5F08(v43, v42, v40, v41, v39);
    if (v51) {
      unsigned int v53 = &v73[-v51];
    }
    else {
      unsigned int v53 = 0;
    }
    if (((unint64_t)v53 & 0x8000000000000000) == 0)
    {
      sub_1A88DAB60((char *)a8, v15, 1, a6, a7, 0, v53, v51);
      if (v61) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  a4 = v57;
  uint64_t v20 = v61;
  if (!v61) {
    goto LABEL_7;
  }
LABEL_8:
  if ((a3 & 1) == 0) {
    sub_1A88B466C((unint64_t)"X-Apple-Content-Length", 22, 2, v15, (uint64_t (*)(unint64_t, unint64_t))a6, a7, (uint64_t)a6, a7);
  }
LABEL_10:
  unint64_t result = sub_1A88DA520(v15, (uint64_t (*)(char *, char *))a6);
  if (!a4) {
    return swift_bridgeObjectRelease();
  }
  if (v20)
  {
    sub_1A88F5EF8((uint64_t)a4);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    size_t v21 = sub_1A88C3474();
    unint64_t v23 = v22;
    unsigned __int8 v25 = v24;
    int v26 = v24;
    unint64_t result = swift_bridgeObjectRelease();
    if (v26 == 2) {
      goto LABEL_50;
    }
    if ((v25 & 1) == 0)
    {
      size_t v27 = sub_1A88F45B8(v21, v23);
      goto LABEL_49;
    }
    if (v21) {
      uint64_t v54 = v23 - v21;
    }
    else {
      uint64_t v54 = 0;
    }
    if ((v54 & 0x8000000000000000) == 0)
    {
      size_t v27 = sub_1A88DBD74(0, v54, v21, v23);
LABEL_49:
      a4(v27, v28);
      swift_bridgeObjectRelease();
LABEL_50:
      sub_1A85489D0((uint64_t)a4);
      return swift_bridgeObjectRelease();
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
  }
  return result;
}

char *sub_1A88F2C40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v25[0] = a8;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Message(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88F5C7C(a2, (uint64_t)v17);
  uint64_t v21 = type metadata accessor for PartReplacement();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v17, 1, v21) == 1)
  {
    sub_1A8511B00((uint64_t)v17, &qword_1E9743B48);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1A88F5BAC((uint64_t)v17, (uint64_t)v20, type metadata accessor for Message);
      MEMORY[0x1F4188790](v22);
      LOBYTE(v25[-8]) = (_BYTE)a5;
      v25[-7] = a6;
      v25[-6] = a7;
      v25[-5] = v25[0];
      LOBYTE(v25[-4]) = a1;
      v25[-3] = (uint64_t)a3;
      v25[-2] = a4;
      sub_1A88E1964((uint64_t)v20, (uint64_t (*)(void))sub_1A88F5CE4, (uint64_t)&v25[-10], (uint64_t)v25);
      return (char *)sub_1A88F5AE4((uint64_t)v20, type metadata accessor for Message);
    }
    sub_1A88F5AE4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PartReplacement);
  }
  uint64_t v24 = v25[0];
  sub_1A88F4194(a1, a2, a3, a4, (uint64_t)a5, a6, a7, v25[0]);
  return sub_1A88F4330(a1, a2, a3, a4, a5, a6, a7, v24);
}

uint64_t sub_1A88F2EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(char *, uint64_t *, __n128))
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  if (a5)
  {
    if (a5 == 1)
    {
      char v29 = 13;
      MEMORY[0x1F4188790](a1);
      __int16 v27 = 11565;
      MEMORY[0x1F4188790](v9);
      v12.n128_f64[0] = MEMORY[0x1F4188790](v10);
      if (v13)
      {
        if (a2) {
          uint64_t v14 = a3 - a2;
        }
        else {
          uint64_t v14 = 0;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          uint64_t v15 = sub_1A88F5F58;
          return sub_1A88DC134(0, v14, a2, a3, (uint64_t (*)(uint64_t, uint64_t))v15);
        }
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      char v29 = 10;
      MEMORY[0x1F4188790](a1);
      __int16 v27 = 11565;
      MEMORY[0x1F4188790](v21);
      v12.n128_f64[0] = MEMORY[0x1F4188790](v22);
      if (v23)
      {
        if (a2) {
          uint64_t v14 = a3 - a2;
        }
        else {
          uint64_t v14 = 0;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          uint64_t v15 = sub_1A88F5D68;
          return sub_1A88DC134(0, v14, a2, a3, (uint64_t (*)(uint64_t, uint64_t))v15);
        }
LABEL_32:
        __break(1u);
      }
    }
    if ((v11 & 1) == 0) {
      a6(&v29, &v30, v12);
    }
    a6((char *)&v27, (uint64_t *)v28, v12);
    ((void (*)(uint64_t, uint64_t))a6)(a2, a3);
    unsigned __int8 v25 = &v29;
    int v26 = (char *)&v30;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    __int16 v27 = 11565;
    MEMORY[0x1F4188790](v16);
    v19.n128_f64[0] = MEMORY[0x1F4188790](v17);
    if (v20)
    {
      if (a2) {
        uint64_t v14 = a3 - a2;
      }
      else {
        uint64_t v14 = 0;
      }
      if ((v14 & 0x8000000000000000) == 0)
      {
        uint64_t v15 = sub_1A88F5F58;
        return sub_1A88DC134(0, v14, a2, a3, (uint64_t (*)(uint64_t, uint64_t))v15);
      }
      goto LABEL_31;
    }
    if ((v18 & 1) == 0) {
      ((void (*)(const char *, char *, double))a6)("\r\n", "", v19.n128_f64[0]);
    }
    a6((char *)&v27, (uint64_t *)v28, v19);
    ((void (*)(uint64_t, uint64_t))a6)(a2, a3);
    int v26 = "";
    unsigned __int8 v25 = "\r\n";
  }
  return ((uint64_t (*)(char *, char *))a6)(v25, v26);
}

uint64_t sub_1A88F324C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(char *, uint64_t *, __n128))
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (a4)
  {
    if (a4 == 1)
    {
      char v23 = 13;
      MEMORY[0x1F4188790](a1);
      __int16 v21 = 11565;
      MEMORY[0x1F4188790](v8);
      v10.n128_f64[0] = MEMORY[0x1F4188790](v9);
      if (v11)
      {
        if (a1) {
          uint64_t v12 = a2 - a1;
        }
        else {
          uint64_t v12 = 0;
        }
        if ((v12 & 0x8000000000000000) == 0) {
          return sub_1A88DC134(0, v12, a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1A88F5F58);
        }
        __break(1u);
        goto LABEL_24;
      }
    }
    else
    {
      char v23 = 10;
      MEMORY[0x1F4188790](a1);
      __int16 v21 = 11565;
      MEMORY[0x1F4188790](v18);
      v10.n128_f64[0] = MEMORY[0x1F4188790](v19);
      if (v20)
      {
        if (a1) {
          uint64_t v12 = a2 - a1;
        }
        else {
          uint64_t v12 = 0;
        }
        if ((v12 & 0x8000000000000000) == 0) {
          return sub_1A88DC134(0, v12, a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1A88F5F58);
        }
LABEL_25:
        __break(1u);
      }
    }
    a5(&v23, &v24, v10);
    ((void (*)(__int16 *, unsigned char *))a5)(&v21, v22);
    ((void (*)(uint64_t, uint64_t))a5)(a1, a2);
    ((void (*)(__int16 *, unsigned char *))a5)(&v21, v22);
    return ((uint64_t (*)(char *, uint64_t *))a5)(&v23, &v24);
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    __int16 v21 = 11565;
    MEMORY[0x1F4188790](v13);
    double v15 = MEMORY[0x1F4188790](v14);
    if (v16)
    {
      if (a1) {
        uint64_t v12 = a2 - a1;
      }
      else {
        uint64_t v12 = 0;
      }
      if ((v12 & 0x8000000000000000) == 0) {
        return sub_1A88DC134(0, v12, a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1A88F5F58);
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    ((void (*)(const char *, char *, double))a5)("\r\n", "", v15);
    ((void (*)(__int16 *, unsigned char *))a5)(&v21, v22);
    ((void (*)(uint64_t, uint64_t))a5)(a1, a2);
    ((void (*)(__int16 *, unsigned char *))a5)(&v21, v22);
    return ((uint64_t (*)(const char *, char *))a5)("\r\n", "");
  }
}

uint64_t PartReplacement.count.getter()
{
  uint64_t v1 = v0;
  uint64_t v34 = sub_1A8A75E28();
  uint64_t v2 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Message.Data(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  __n128 v10 = (char *)&v33 - v9;
  uint64_t v11 = type metadata accessor for Message(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v33 - v15;
  uint64_t v17 = type metadata accessor for PartReplacement();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88F5B44(v1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for PartReplacement);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A88F5BAC((uint64_t)v19, (uint64_t)v13, type metadata accessor for Message);
    sub_1A88F5B44((uint64_t)v13, (uint64_t)v7, type metadata accessor for Message.Data);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = v34;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v34);
      uint64_t v21 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
    }
    else
    {
      uint64_t v24 = *(void *)v7;
      unint64_t v23 = *((void *)v7 + 1);
      switch(v23 >> 62)
      {
        case 1uLL:
          sub_1A85135AC(*(void *)v7, *((void *)v7 + 1));
          if (__OFSUB__(HIDWORD(v24), v24))
          {
            __break(1u);
LABEL_25:
            __break(1u);
            JUMPOUT(0x1A88F3AA4);
          }
          uint64_t v21 = HIDWORD(v24) - (int)v24;
          break;
        case 2uLL:
          uint64_t v28 = *(void *)(v24 + 16);
          uint64_t v27 = *(void *)(v24 + 24);
          sub_1A85135AC(*(void *)v7, *((void *)v7 + 1));
          BOOL v29 = __OFSUB__(v27, v28);
          uint64_t v21 = v27 - v28;
          if (!v29) {
            break;
          }
          __break(1u);
LABEL_15:
          sub_1A85135AC(v24, v23);
          uint64_t v21 = 0;
          break;
        case 3uLL:
          goto LABEL_15;
        default:
          sub_1A85135AC(*(void *)v7, *((void *)v7 + 1));
          uint64_t v21 = BYTE6(v23);
          break;
      }
    }
    char v16 = v13;
  }
  else
  {
    sub_1A88F5BAC((uint64_t)v19, (uint64_t)v16, type metadata accessor for Message);
    sub_1A88F5B44((uint64_t)v16, (uint64_t)v10, type metadata accessor for Message.Data);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = v34;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v10, v34);
      uint64_t v21 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
    }
    else
    {
      uint64_t v26 = *(void *)v10;
      unint64_t v25 = *((void *)v10 + 1);
      switch(v25 >> 62)
      {
        case 1uLL:
          sub_1A85135AC(*(void *)v10, *((void *)v10 + 1));
          if (__OFSUB__(HIDWORD(v26), v26)) {
            goto LABEL_25;
          }
          uint64_t v21 = HIDWORD(v26) - (int)v26;
          break;
        case 2uLL:
          uint64_t v32 = *(void *)(v26 + 16);
          uint64_t v31 = *(void *)(v26 + 24);
          sub_1A85135AC(*(void *)v10, *((void *)v10 + 1));
          BOOL v29 = __OFSUB__(v31, v32);
          uint64_t v21 = v31 - v32;
          if (!v29) {
            break;
          }
          __break(1u);
LABEL_23:
          sub_1A85135AC(v26, v25);
          uint64_t v21 = 0;
          break;
        case 3uLL:
          goto LABEL_23;
        default:
          sub_1A85135AC(*(void *)v10, *((void *)v10 + 1));
          uint64_t v21 = BYTE6(v25);
          break;
      }
    }
  }
  sub_1A88F5AE4((uint64_t)v16, type metadata accessor for Message);
  return v21;
}

uint64_t Message.streamWithPartsReplaced(input:output:replacements:_:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v8[16] = a1;
  v8[17] = a2;
  uint64_t v9 = a3;
  uint64_t v10 = a4;
  uint64_t v11 = a5;
  return sub_1A88E1964(v6, (uint64_t (*)(void))sub_1A88F5170, (uint64_t)v8, a6);
}

uint64_t sub_1A88F3B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, char *), uint64_t a9)
{
  uint64_t v22 = a8;
  uint64_t v17 = type metadata accessor for ReplacementNode();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (uint64_t *)((char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = sub_1A88EFEEC(a1, a2, a3, a4, a7, (uint64_t)v19);
  if (!v9)
  {
    sub_1A88F3C3C(a5, a6, v19, v22, a9, a1, a2, a3, a4);
    return sub_1A88F5AE4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
  }
  return result;
}

char *sub_1A88F3C3C(unsigned int a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v67 = a7;
  uint64_t v68 = a8;
  uint64_t v66 = a6;
  uint64_t v70 = a5;
  unsigned int v65 = a1;
  uint64_t v13 = type metadata accessor for ReplacementNode();
  uint64_t v56 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744A28);
  uint64_t v71 = *(void (**)(uint64_t, char *))(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744A30);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (uint64_t *)((char *)&v53 - v21);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(int *)(v24 + 28);
  if (!*(void *)(*(uint64_t *)((char *)a3 + v27) + 16)) {
    return sub_1A88F2C40(a2, (uint64_t)a3 + *(int *)(v24 + 24), a4, v70, (char *)*((unsigned __int8 *)a3 + 8), a3[2], a3[3], a3[4]);
  }
  unsigned int v69 = a2;
  int v63 = *((unsigned __int8 *)a3 + 56);
  if (v63 == 2)
  {
    uint64_t v28 = *a3;
    sub_1A88CBD18();
    swift_allocError();
    *BOOL v29 = v28;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return (char *)swift_willThrow();
  }
  uint64_t v62 = (unint64_t *)v19;
  uint64_t v59 = a3[6];
  uint64_t v31 = a3[2];
  uint64_t v32 = a3[3];
  uint64_t v33 = a3[5];
  uint64_t v57 = a9;
  uint64_t v58 = v33;
  uint64_t v61 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))a3[4];
  LODWORD(v60) = *((unsigned __int8 *)a3 + 8);
  uint64_t v34 = type metadata accessor for PartReplacement();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v26, 1, 1, v34);
  sub_1A88F4194(v69, (uint64_t)v26, a4, v70, v60, v31, v32, (uint64_t)v61);
  sub_1A8511B00((uint64_t)v26, &qword_1E9743B48);
  uint64_t v35 = *(uint64_t *)((char *)a3 + v27);
  unint64_t v36 = *(void *)(v35 + 16);
  unsigned int v60 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))((char *)v71 + 48);
  uint64_t v61 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))((char *)v71 + 56);
  uint64_t v54 = v35;
  uint64_t result = (char *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v37 = 0;
  uint64_t v71 = a4;
  uint64_t v38 = (uint64_t)v64;
  while (1)
  {
    if (v37 == v36)
    {
      uint64_t v39 = 1;
      unint64_t v37 = v36;
      uint64_t v40 = v62;
      goto LABEL_10;
    }
    uint64_t v40 = v62;
    if (v37 >= *(void *)(v54 + 16)) {
      break;
    }
    uint64_t v41 = (uint64_t)&v55[*(int *)(v15 + 48)];
    sub_1A88F5B44(v54+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v37, v41, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    uint64_t v42 = (uint64_t)v40 + *(int *)(v15 + 48);
    *uint64_t v40 = v37;
    sub_1A88F5BAC(v41, v42, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    uint64_t v39 = 0;
    ++v37;
    a4 = v71;
LABEL_10:
    (*v61)(v40, v39, 1, v15);
    sub_1A88F5C14((uint64_t)v40, (uint64_t)v22);
    if ((*v60)(v22, 1, v15) == 1)
    {
      uint64_t v52 = v63 & 1;
      swift_bridgeObjectRelease();
      return (char *)sub_1A88F324C(v58, v59, v52, v69, (void (*)(char *, uint64_t *, __n128))a4);
    }
    uint64_t v43 = v63 & 1;
    uint64_t v44 = *v22;
    sub_1A88F5BAC((uint64_t)v22 + *(int *)(v15 + 48), v38, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    BOOL v45 = v44 == 0;
    a4 = v71;
    uint64_t v46 = v45;
    uint64_t v47 = v43;
    unint64_t v48 = v36;
    uint64_t v49 = v69;
    uint64_t v50 = v70;
    sub_1A88F2EB4(v46, v58, v59, v47, v69, (void (*)(char *, uint64_t *, __n128))v71);
    uint64_t v51 = v49;
    unint64_t v36 = v48;
    sub_1A88F3C3C(v65, v51, v38, a4, v50, v66, v67, v68, v57);
    uint64_t result = (char *)sub_1A88F5AE4(v38, (uint64_t (*)(void))type metadata accessor for ReplacementNode);
    if (v9) {
      return (char *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88F4194(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88F5C7C(a2, (uint64_t)v18);
  uint64_t v19 = type metadata accessor for PartReplacement();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19) == 1)
  {
    sub_1A8511B00((uint64_t)v18, &qword_1E9743B48);
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1A88F5AE4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PartReplacement);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v24 = 0;
      return sub_1A88F2634(a1, v24, 1, 0, 0, a3, a4, a5, a6, a7, a8);
    }
  }
  uint64_t v21 = sub_1A88E614C(a5, a6, a7, a8);
  if (v21) {
    BOOL v23 = v22 == v21;
  }
  else {
    BOOL v23 = 1;
  }
  uint64_t v24 = v23;
  return sub_1A88F2634(a1, v24, 1, 0, 0, a3, a4, a5, a6, a7, a8);
}

char *sub_1A88F4330(char a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = &v29[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for Message(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = &v29[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A88F5C7C(a2, (uint64_t)v18);
  uint64_t v22 = type metadata accessor for PartReplacement();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v18, 1, v22) == 1)
  {
    uint64_t result = (char *)sub_1A8511B00((uint64_t)v18, &qword_1E9743B48);
    if (a6)
    {
LABEL_3:
      uint64_t v24 = (char *)(a7 - a6 - a8);
      if (a7 - a6 >= a8)
      {
        if (a7 - a6 - a8 >= 0)
        {
          uint64_t v25 = a6 + a8;
          uint64_t v26 = a7;
LABEL_10:
          uint64_t v28 = v26;
          return sub_1A88DAB60(a5, a1, 0, a3, a4, 0, v24, v25);
        }
        __break(1u);
      }
      __break(1u);
LABEL_15:
      __break(1u);
      return result;
    }
LABEL_8:
    if (a8 <= 0)
    {
      uint64_t v26 = 0;
      uint64_t v25 = 0;
      uint64_t v24 = 0;
      goto LABEL_10;
    }
    goto LABEL_15;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t result = (char *)sub_1A88F5AE4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PartReplacement);
    if (a6) {
      goto LABEL_3;
    }
    goto LABEL_8;
  }
  uint64_t v27 = sub_1A88F5BAC((uint64_t)v18, (uint64_t)v21, type metadata accessor for Message);
  MEMORY[0x1F4188790](v27);
  v29[-64] = (_BYTE)a5;
  *(void *)&v29[-56] = a6;
  *(void *)&v29[-48] = a7;
  *(void *)&v29[-40] = a8;
  v29[-32] = a1;
  *(void *)&v29[-24] = a3;
  uint64_t v28 = a4;
  sub_1A88E1964((uint64_t)v21, (uint64_t (*)(void))sub_1A88F5CE4, (uint64_t)&v29[-80], (uint64_t)v29);
  return (char *)sub_1A88F5AE4((uint64_t)v21, type metadata accessor for Message);
}

size_t sub_1A88F45B8(size_t result, unint64_t a2)
{
  if (!result) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return MEMORY[0x1E4FBC860];
  }
  if (v4 < 1)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EC0);
    uint64_t v5 = (void *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size_0(v5);
    _OWORD v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1A88F466C(uint64_t result, uint64_t a2, char a3, void (*a4)(void), uint64_t a5, void (*a6)(uint64_t, char *), uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t (*a15)(unint64_t, unint64_t), uint64_t a16)
{
  if (a11 < 0)
  {
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (a9) {
    uint64_t v16 = a11;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v16 < 0) {
    goto LABEL_65;
  }
  char v20 = result;
  uint64_t v21 = (char *)sub_1A88FE9DC();
  uint64_t v66 = a6;
  if (v24 == 2)
  {
    char v25 = a3;
    goto LABEL_8;
  }
  uint64_t v28 = v23;
  int v63 = a4;
  uint64_t v68 = 0;
  BOOL v29 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  char v35 = 0;
  unint64_t v36 = 0x1FFFFFFF0ELL;
  while (1)
  {
    uint64_t v69 = v33;
    uint64_t v70 = v32;
    uint64_t v71 = v31;
    uint64_t v77 = (uint64_t)v21;
    int v78 = v22;
    sub_1A88FE1A8(v21, v22, v28, v24 & 1, v79);
    uint64_t v72 = v79[0];
    uint64_t v73 = v79[1];
    uint64_t v74 = v79[2];
    uint64_t v75 = v79[3];
    unint64_t v76 = v79[4];
    sub_1A88C69F8((uint64_t)v79, (uint64_t)&v80);
    if (v81 >> 59 == 9)
    {
      v81 &= 0x7FFFFFFFFFFFFFFuLL;
      uint64_t v43 = a7;
      uint64_t v44 = v82;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      uint64_t v68 = v44;
      a7 = v43;
      a6 = v66;
    }
    if (a9 && !(v35 & 1 | (v77 == 0)) && v77 - a9 >= 1) {
      sub_1A88DAB60((char *)a8, v20, 1, a6, a7, 0, (char *)(v77 - a9), a9);
    }
    if ((v36 & 0xFFFFFFFFFFFFFF0ELL) == 0x1FFFFFFF0ELL) {
      goto LABEL_12;
    }
    uint64_t v45 = v30 ? (uint64_t)&v29[-v30] : 0;
    if (v45 < 0) {
      break;
    }
    sub_1A88DAB60((char *)a8, v20, 1, a6, a7, 0, (char *)v45, v30);
    sub_1A88F5F08(v34, v69, v70, v71, v36);
LABEL_12:
    uint64_t v21 = (char *)sub_1A88FE9DC();
    uint64_t v28 = v37;
    char v35 = 1;
    BOOL v29 = v78;
    uint64_t v30 = v77;
    unint64_t v38 = v76;
    unint64_t v36 = v76;
    uint64_t v39 = v74;
    uint64_t v40 = v75;
    uint64_t v31 = v75;
    uint64_t v32 = v74;
    uint64_t v42 = v72;
    uint64_t v41 = v73;
    uint64_t v33 = v73;
    uint64_t v34 = v72;
    if (v24 == 2) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_25:
  if ((v38 & 0xFFFFFFFFFFFFFF0ELL) != 0x1FFFFFFF0ELL)
  {
    a4 = v63;
    char v25 = a3;
    if (!(v38 >> 59))
    {
      if ((a3 & 1) != 0 && a2)
      {
        if (v68)
        {
          uint64_t result = sub_1A88D69DC(v42, v41, v39, v40, v38);
          uint64_t v26 = 0;
          uint64_t v47 = v77;
          uint64_t v46 = v78;
        }
        else
        {
          uint64_t v59 = v41;
          uint64_t v60 = v42;
          sub_1A8645080(a12, sub_1A86409B8);
          uint64_t v61 = v59;
          uint64_t v47 = v77;
          uint64_t v46 = v78;
          sub_1A88F5F28(v60, v61, v74, v75, v76);
          uint64_t v26 = sub_1A88BA720((unint64_t)"Content-Type", 12, 2, a13, a15, a16, a12, (uint64_t (*)(char *, char *))a15, a16, a14);
          sub_1A8645080(a12, sub_1A856B460);
          swift_beginAccess();
          uint64_t result = swift_bridgeObjectRelease();
        }
        if (v47) {
          uint64_t v62 = &v46[-v47];
        }
        else {
          uint64_t v62 = 0;
        }
        if (((unint64_t)v62 & 0x8000000000000000) == 0)
        {
          uint64_t v27 = (uint64_t (*)(char *, char *))v66;
          sub_1A88DAB60((char *)a8, v20, 1, v66, a7, 0, v62, v47);
          goto LABEL_41;
        }
        goto LABEL_67;
      }
LABEL_38:
      if (!v68) {
        goto LABEL_8;
      }
      goto LABEL_39;
    }
    uint64_t result = sub_1A88F5F08(v42, v41, v39, v40, v38);
    if (v77) {
      unint64_t v48 = &v78[-v77];
    }
    else {
      unint64_t v48 = 0;
    }
    if (((unint64_t)v48 & 0x8000000000000000) == 0)
    {
      sub_1A88DAB60((char *)a8, v20, 1, a6, a7, 0, v48, v77);
      goto LABEL_38;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  a4 = v63;
  char v25 = a3;
  if (!v68)
  {
LABEL_8:
    sub_1A8645080(a12, sub_1A86409B8);
    uint64_t v26 = sub_1A88BA720((unint64_t)"Content-Type", 12, 2, a13, a15, a16, a12, (uint64_t (*)(char *, char *))a15, a16, a14);
    sub_1A8645080(a12, sub_1A856B460);
    swift_beginAccess();
    swift_bridgeObjectRelease();
    uint64_t v68 = 0;
    if ((v25 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_40:
    uint64_t v27 = (uint64_t (*)(char *, char *))v66;
    goto LABEL_41;
  }
LABEL_39:
  uint64_t v26 = 0;
  if (v25) {
    goto LABEL_40;
  }
LABEL_9:
  uint64_t v27 = (uint64_t (*)(char *, char *))v66;
  sub_1A88B466C((unint64_t)"X-Apple-Content-Length", 22, 2, v20, (uint64_t (*)(unint64_t, unint64_t))v66, a7, (uint64_t)v66, a7);
LABEL_41:
  uint64_t result = sub_1A88DA520(v20, v27);
  if (!a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (v26)
  {
    sub_1A88F5EF8((uint64_t)a4);
    uint64_t v49 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    a4(v49);
    sub_1A85489D0((uint64_t)a4);
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v68)
  {
    sub_1A88F5EF8((uint64_t)a4);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    size_t v50 = sub_1A88C3474();
    unint64_t v52 = v51;
    unsigned __int8 v54 = v53;
    int v55 = v53;
    uint64_t result = swift_bridgeObjectRelease();
    if (v55 == 2) {
      goto LABEL_55;
    }
    if ((v54 & 1) == 0)
    {
      size_t v56 = sub_1A88F45B8(v50, v52);
      goto LABEL_54;
    }
    if (v50) {
      uint64_t v58 = v52 - v50;
    }
    else {
      uint64_t v58 = 0;
    }
    if ((v58 & 0x8000000000000000) == 0)
    {
      size_t v56 = sub_1A88DBD74(0, v58, v50, v52);
LABEL_54:
      ((void (*)(size_t, uint64_t))a4)(v56, v57);
      swift_bridgeObjectRelease();
LABEL_55:
      sub_1A85489D0((uint64_t)a4);
      return swift_bridgeObjectRelease();
    }
LABEL_68:
    __break(1u);
  }
  return result;
}

uint64_t _s9IMAP2MIME15PartReplacementO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v26[-v8];
  uint64_t v10 = type metadata accessor for PartReplacement();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v26[-v14];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E398);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = (uint64_t)&v18[*(int *)(v19 + 56)];
  sub_1A88F5B44(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PartReplacement);
  sub_1A88F5B44(a2, v20, (uint64_t (*)(void))type metadata accessor for PartReplacement);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A88F5B44((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PartReplacement);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v24 = sub_1A88F5BAC(v20, (uint64_t)v9, type metadata accessor for Message);
      MEMORY[0x1F4188790](v24);
      *(void *)&v26[-16] = v9;
      char v22 = sub_1A88E1524((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88E5D30, (uint64_t)&v26[-32]);
      sub_1A88F5AE4((uint64_t)v9, type metadata accessor for Message);
      uint64_t v23 = (uint64_t)v15;
      goto LABEL_6;
    }
LABEL_8:
    sub_1A88F5AE4((uint64_t)v15, type metadata accessor for Message);
    sub_1A8511B00((uint64_t)v18, &qword_1E974E398);
    char v22 = 0;
    return v22 & 1;
  }
  sub_1A88F5B44((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartReplacement);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v15 = v12;
    goto LABEL_8;
  }
  uint64_t v21 = sub_1A88F5BAC(v20, (uint64_t)v6, type metadata accessor for Message);
  MEMORY[0x1F4188790](v21);
  *(void *)&v26[-16] = v6;
  char v22 = sub_1A88E1524((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88E2CDC, (uint64_t)&v26[-32]);
  sub_1A88F5AE4((uint64_t)v6, type metadata accessor for Message);
  uint64_t v23 = (uint64_t)v12;
LABEL_6:
  sub_1A88F5AE4(v23, type metadata accessor for Message);
  sub_1A88F5AE4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PartReplacement);
  return v22 & 1;
}

uint64_t type metadata accessor for PartReplacement()
{
  uint64_t result = qword_1E9743B38;
  if (!qword_1E9743B38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A88F5170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A88F3B10(a1, a2, a3, a4, *(unsigned __int8 *)(v4 + 16), *(unsigned __int8 *)(v4 + 17), *(void *)(v4 + 24), *(void (**)(uint64_t, char *))(v4 + 32), *(void *)(v4 + 40));
}

uint64_t *initializeBufferWithCopyOfBuffer for PartReplacement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    type metadata accessor for Message.Data(0);
    int v7 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v7 == 1) {
        goto LABEL_7;
      }
    }
    else if (v7 == 1)
    {
LABEL_7:
      uint64_t v9 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v11 = *a2;
    unint64_t v10 = a2[1];
    sub_1A8512DFC(v11, v10);
    *a1 = v11;
    a1[1] = v10;
    goto LABEL_9;
  }
  uint64_t v8 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for PartReplacement(uint64_t *a1)
{
  swift_getEnumCaseMultiPayload();
  type metadata accessor for Message.Data(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1A8A75E28();
    uint64_t v3 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    uint64_t v5 = *a1;
    unint64_t v6 = a1[1];
    return sub_1A85135AC(v5, v6);
  }
}

uint64_t *initializeWithCopy for PartReplacement(uint64_t *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  type metadata accessor for Message.Data(0);
  int v5 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    if (v5 == 1) {
      goto LABEL_5;
    }
LABEL_6:
    uint64_t v8 = *a2;
    unint64_t v7 = a2[1];
    sub_1A8512DFC(v8, v7);
    *a1 = v8;
    a1[1] = v7;
    goto LABEL_7;
  }
  if (v5 != 1) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_7:
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for PartReplacement(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1A88F5AE4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PartReplacement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    type metadata accessor for Message.Data(0);
    int v5 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v5 == 1) {
        goto LABEL_6;
      }
    }
    else if (v5 == 1)
    {
LABEL_6:
      uint64_t v6 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v8 = *a2;
    unint64_t v7 = a2[1];
    sub_1A8512DFC(v8, v7);
    *a1 = v8;
    a1[1] = v7;
    goto LABEL_8;
  }
  return a1;
}

void *initializeWithTake for PartReplacement(void *a1, const void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for Message.Data(0);
  int v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    if (v6 == 1) {
      goto LABEL_3;
    }
LABEL_5:
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    goto LABEL_6;
  }
  if (v6 != 1) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v7 = sub_1A8A75E28();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for PartReplacement(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1A88F5AE4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PartReplacement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for Message.Data(0);
    int v6 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v6 == 1)
      {
LABEL_4:
        uint64_t v7 = sub_1A8A75E28();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v6 == 1)
    {
      goto LABEL_4;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_1A88F5A5C()
{
  uint64_t result = type metadata accessor for Message.Data(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A88F5AE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A88F5B44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A88F5BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A88F5C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88F5C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_1A88F5CE4(char *a1, char *a2, uint64_t a3)
{
  return sub_1A88F5CFC(a1, a2, a3);
}

char *sub_1A88F5CFC(char *a1, char *a2, uint64_t a3)
{
  return sub_1A88DAB60((char *)*(unsigned __int8 *)(v3 + 16), *(unsigned char *)(v3 + 48), 0, *(void (**)(uint64_t, char *))(v3 + 56), *(void *)(v3 + 64), a1, a2, a3);
}

uint64_t sub_1A88F5D50(uint64_t a1, uint64_t a2)
{
  return sub_1A88F5D90(a1, a2);
}

uint64_t sub_1A88F5D68()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A88F5D90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = *(void *)(v2 + 56);
  uint64_t v9 = *(void *)(v2 + 64);
  if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
    v5(*(void *)(v2 + 40), *(void *)(v2 + 48));
  }
  v5(v8, v9);
  v5(a1, a2);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v6, v7);
}

uint64_t sub_1A88F5E34(uint64_t a1, uint64_t a2)
{
  return sub_1A88F5E4C(a1, a2);
}

uint64_t sub_1A88F5E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v2[2];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  v5(v6, v7);
  v5(v8, v9);
  v5(a1, a2);
  v5(v8, v9);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v6, v7);
}

uint64_t sub_1A88F5EF8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1A88F5F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0xFFFFFFFFFFFFFF0ELL) != 0x1FFFFFFF0ELL) {
    return sub_1A88CFF94(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1A88F5F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0xFFFFFFFFFFFFFF0ELL) != 0x1FFFFFFF0ELL) {
    return sub_1A88D69DC(a1, a2, a3, a4, a5);
  }
  return a1;
}

ValueMetadata *type metadata accessor for MultipartWithoutBoundary()
{
  return &type metadata for MultipartWithoutBoundary;
}

uint64_t sub_1A88F5F58()
{
  return sub_1A88F5D68();
}

uint64_t SparsePartInfo.part.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t SparsePartInfo.part.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

double (*SparsePartInfo.part.modify())(void)
{
  return nullsub_1;
}

uint64_t SparsePartInfo.status.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A88F5FD0(v1 + 8, a1);
}

uint64_t sub_1A88F5FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  sub_1A88AF384(*(void *)a1, v4, v5, v6, v7);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  return a2;
}

uint64_t SparsePartInfo.status.setter(uint64_t a1)
{
  return sub_1A88F603C(a1, v1 + 8);
}

uint64_t sub_1A88F603C(uint64_t a1, uint64_t a2)
{
  return a2;
}

double (*SparsePartInfo.status.modify())(void)
{
  return nullsub_1;
}

__n128 SparsePartInfo.init(part:status:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A88EE118(a2, (uint64_t)v8);
  char v5 = v9;
  __n128 result = (__n128)v8[0];
  long long v7 = v8[1];
  *(void *)a3 = a1;
  *(__n128 *)(a3 + 8) = result;
  *(_OWORD *)(a3 + 24) = v7;
  *(unsigned char *)(a3 + 40) = v5;
  return result;
}

uint64_t sub_1A88F60EC(long long *a1, long long *a2)
{
  sub_1A88EE118(a1, (uint64_t)v4);
  sub_1A88EE118(a2, (uint64_t)v5);
  return _s9IMAP2MIME14SparsePartInfoV6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(v4, v5) & 1;
}

uint64_t static SparsePartInfo.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)a1))
  {
    sub_1A88EE118((long long *)(a1 + 8), (uint64_t)v7);
    sub_1A88EE118((long long *)(a2 + 8), (uint64_t)v6);
    char v4 = _s9IMAP2MIME14SparsePartInfoV6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(v7, v6);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1A88F61A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1A88EE118((long long *)(a1 + 1), (uint64_t)v6);
  sub_1A88EE118((long long *)(a2 + 8), (uint64_t)v7);
  if (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v3)) {
    char v4 = _s9IMAP2MIME14SparsePartInfoV6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(v6, v7);
  }
  else {
    char v4 = 0;
  }
  return v4 & 1;
}

BOOL SparsePartInfo.Status.isEmpty.getter()
{
  sub_1A88EE118(v0, (uint64_t)&v2);
  return v6 && (v6 != 3 || v4 | v5 | v2 | v3 && (v2 != 1 || v4 | v5 | v3));
}

void *Message.findPartsMissingData(cache:)(void *a1)
{
  return sub_1A88E55CC(v1, (void *(*)(uint64_t *__return_ptr, void))sub_1A88F69E0, a1);
}

uint64_t sub_1A88F62CC(uint64_t *a1, char **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  sub_1A8529F8C((uint64_t)(a1 + 12), (uint64_t)v60, &qword_1E9743B78);
  sub_1A8529F8C((uint64_t)v60, (uint64_t)v63, &qword_1E9743B78);
  if (*((void *)&v64 + 1))
  {
    v65[0] = v63[0];
    v65[1] = v63[1];
    v65[2] = v64;
    sub_1A88AF2E4((uint64_t)v65, (uint64_t)v68);
    sub_1A88AF2E4((uint64_t)v68, (uint64_t)v69);
    if (v69[32] <= 0xFu)
    {
      sub_1A88CC024((uint64_t)v69, (uint64_t)v61);
      uint64_t v10 = *a1;
      uint64_t v11 = *a2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v11 = sub_1A89025D0(0, *((void *)v11 + 2) + 1, 1, v11);
        *a2 = v11;
      }
      unint64_t v14 = *((void *)v11 + 2);
      unint64_t v13 = *((void *)v11 + 3);
      if (v14 >= v13 >> 1)
      {
        uint64_t v11 = sub_1A89025D0((char *)(v13 > 1), v14 + 1, 1, v11);
        *a2 = v11;
      }
      *((void *)v11 + 2) = v14 + 1;
      uint64_t v15 = &v11[48 * v14];
      *((void *)v15 + 4) = v10;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_OWORD *)(v15 + 56) = 0u;
LABEL_23:
      char v35 = 3;
LABEL_29:
      v15[72] = v35;
      return 2;
    }
  }
  uint64_t v16 = a1[8];
  if (!v16
    || (uint64_t v17 = a1[5], v18 = a1[6], v19 = a1[7], sub_1A8529F8C((uint64_t)v60, (uint64_t)v61, &qword_1E9743B78), !v62)
    || (uint64_t v20 = v19 & 1, (sub_1A88AE354(v17, v18, v20, v16, (uint64_t)v60) & 1) == 0))
  {
    sub_1A8529F8C((uint64_t)(a1 + 21), (uint64_t)v59, &qword_1E9743B28);
    sub_1A8529F8C((uint64_t)v59, (uint64_t)v66, &qword_1E9743B28);
    if (v67 != 2)
    {
      uint64_t v36 = sub_1A88C6254();
      uint64_t v38 = v37 & 1;
      uint64_t v39 = *a1;
      uint64_t v40 = *a2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v40;
      if ((v41 & 1) == 0)
      {
        uint64_t v40 = sub_1A89025D0(0, *((void *)v40 + 2) + 1, 1, v40);
        *a2 = v40;
      }
      unint64_t v43 = *((void *)v40 + 2);
      unint64_t v42 = *((void *)v40 + 3);
      if (v43 >= v42 >> 1)
      {
        uint64_t v40 = sub_1A89025D0((char *)(v42 > 1), v43 + 1, 1, v40);
        *a2 = v40;
      }
      *((void *)v40 + 2) = v43 + 1;
      uint64_t v15 = &v40[48 * v43];
      *((void *)v15 + 4) = v39;
      *((void *)v15 + 5) = v36;
      *((void *)v15 + 7) = 0;
      *((void *)v15 + 8) = 0;
      *((void *)v15 + 6) = v38;
      char v35 = 1;
      goto LABEL_29;
    }
    uint64_t v30 = *a1;
    uint64_t v31 = *a2;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v31;
    if ((v32 & 1) == 0)
    {
      uint64_t v31 = sub_1A89025D0(0, *((void *)v31 + 2) + 1, 1, v31);
      *a2 = v31;
    }
    unint64_t v34 = *((void *)v31 + 2);
    unint64_t v33 = *((void *)v31 + 3);
    if (v34 >= v33 >> 1)
    {
      uint64_t v31 = sub_1A89025D0((char *)(v33 > 1), v34 + 1, 1, v31);
      *a2 = v31;
    }
    *((void *)v31 + 2) = v34 + 1;
    uint64_t v15 = &v31[48 * v34];
    *((void *)v15 + 4) = v30;
    *((void *)v15 + 5) = 1;
    *((void *)v15 + 7) = 0;
    *((void *)v15 + 8) = 0;
    *((void *)v15 + 6) = 0;
    goto LABEL_23;
  }
  int64_t v21 = sub_1A88BD90C(a7, v17, v18, v20 != 0, v16);
  uint64_t v23 = v22;
  sub_1A8529F8C((uint64_t)(a1 + 21), (uint64_t)v59, &qword_1E9743B28);
  sub_1A8529F8C((uint64_t)v59, (uint64_t)v66, &qword_1E9743B28);
  if (v67 != 2)
  {
    uint64_t v45 = sub_1A88C6254();
    uint64_t v47 = v46 & 1;
    uint64_t v48 = *a1;
    uint64_t v49 = *a2;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v49;
    if ((v50 & 1) == 0)
    {
      uint64_t v49 = sub_1A89025D0(0, *((void *)v49 + 2) + 1, 1, v49);
      *a2 = v49;
    }
    unint64_t v51 = *((void *)v49 + 2);
    unint64_t v52 = *((void *)v49 + 3);
    unint64_t v53 = v51 + 1;
    if (v51 >= v52 >> 1)
    {
      uint64_t v58 = v47;
      unint64_t v54 = v51 + 1;
      int v55 = v49;
      unint64_t v56 = *((void *)v49 + 2);
      uint64_t v57 = sub_1A89025D0((char *)(v52 > 1), v51 + 1, 1, v55);
      unint64_t v51 = v56;
      unint64_t v53 = v54;
      uint64_t v47 = v58;
      uint64_t v49 = v57;
      *a2 = v57;
    }
    *((void *)v49 + 2) = v53;
    uint64_t v15 = &v49[48 * v51];
    *((void *)v15 + 4) = v48;
    *((void *)v15 + 5) = v45;
    *((void *)v15 + 6) = v47;
    *((void *)v15 + 7) = v21;
    *((void *)v15 + 8) = v23;
    char v35 = 2;
    goto LABEL_29;
  }
  uint64_t v24 = *a1;
  char v25 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v25;
  if ((v26 & 1) == 0)
  {
    char v25 = sub_1A89025D0(0, *((void *)v25 + 2) + 1, 1, v25);
    *a2 = v25;
  }
  unint64_t v28 = *((void *)v25 + 2);
  unint64_t v27 = *((void *)v25 + 3);
  if (v28 >= v27 >> 1)
  {
    char v25 = sub_1A89025D0((char *)(v27 > 1), v28 + 1, 1, v25);
    *a2 = v25;
  }
  *((void *)v25 + 2) = v28 + 1;
  BOOL v29 = &v25[48 * v28];
  *((void *)v29 + 4) = v24;
  *((void *)v29 + 5) = v21;
  *((void *)v29 + 7) = 0;
  *((void *)v29 + 8) = 0;
  *((void *)v29 + 6) = v23;
  v29[72] = 0;
  return 2;
}

uint64_t _s9IMAP2MIME14SparsePartInfoV6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(long long *a1, long long *a2)
{
  sub_1A88EE118(a2, (uint64_t)v14);
  sub_1A88EE118(a1, (uint64_t)&v18);
  unint64_t v4 = v18;
  switch(v22)
  {
    case 1:
      char v6 = v19;
      sub_1A88EE118(a2, (uint64_t)&v15);
      if (v17 != 1) {
        return 0;
      }
      __int8 v7 = v15.i8[8];
      if (v6)
      {
        if (v15.i8[8]) {
          return 1;
        }
      }
      else
      {
        if (v4 != v15.i64[0]) {
          __int8 v7 = 1;
        }
        if ((v7 & 1) == 0) {
          return 1;
        }
      }
      return 0;
    case 2:
      char v8 = v19;
      unint64_t v9 = v20;
      unint64_t v10 = v21;
      sub_1A88EE118(a2, (uint64_t)&v15);
      if (v17 != 2) {
        return 0;
      }
      __int8 v11 = v15.i8[8];
      if (v8)
      {
        if (!v15.i8[8]) {
          return 0;
        }
      }
      else
      {
        if (v4 != v15.i64[0]) {
          __int8 v11 = 1;
        }
        if (v11) {
          return 0;
        }
      }
      if (!v10)
      {
        if (!v16.i64[1]) {
          goto LABEL_40;
        }
        goto LABEL_38;
      }
      if (!v16.i64[1]) {
        return 0;
      }
      if (__PAIR128__(v10, v9) == *(_OWORD *)&v16) {
        return 1;
      }
      goto LABEL_33;
    case 3:
      if (v20 | v21 | v18 | v19)
      {
        sub_1A88EE118(a2, (uint64_t)&v15);
        if (v17 == 3 && v15.i64[0] == 1 && !(v16.i64[0] | v16.i64[1] | v15.i64[1])) {
          return 1;
        }
      }
      else
      {
        sub_1A88EE118(a2, (uint64_t)&v15);
        if (v17 == 3)
        {
          int8x16_t v12 = vorrq_s8(v15, v16);
          if (!*(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL))) {
            return 1;
          }
        }
      }
      return 0;
    default:
      unint64_t v5 = v19;
      sub_1A88EE118(a2, (uint64_t)&v15);
      if (v17) {
        return 0;
      }
      if (v5)
      {
        if (v15.i64[1])
        {
          if (__PAIR128__(v5, v4) == *(_OWORD *)&v15) {
            return 1;
          }
LABEL_33:
          if (sub_1A8A78588()) {
            return 1;
          }
        }
        return 0;
      }
      if (v15.i64[1])
      {
LABEL_38:
        sub_1A88F6E54((uint64_t)a1);
        return 0;
      }
LABEL_40:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return 1;
  }
}

uint64_t sub_1A88F69E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  char v8 = &v13;
  uint64_t v9 = a1;
  uint64_t v10 = a2;
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  uint64_t result = sub_1A88C5A44(3, 0, 0, (uint64_t (*)(_OWORD *))sub_1A88AF340, (uint64_t)v7, (uint64_t)nullsub_1, 0, a1, a2, a3, a4);
  *a5 = v13;
  return result;
}

uint64_t destroy for SparsePartInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  return sub_1A88AF364(v2, v3, v4, v5, v6);
}

uint64_t initializeWithCopy for SparsePartInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88AF384(v3, v4, v5, v6, v7);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for SparsePartInfo(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_1A88AF384(v4, v5, v6, v7, (char)v2);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v12 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_1A88AF364(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy41_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SparsePartInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1A88AF364(v5, v6, v7, v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for SparsePartInfo()
{
  return &type metadata for SparsePartInfo;
}

uint64_t destroy for SparsePartInfo.Status(uint64_t a1)
{
  return sub_1A88AF364(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for SparsePartInfo.Status(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A88AF384(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SparsePartInfo.Status(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A88AF384(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1A88AF364(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for SparsePartInfo.Status(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1A88AF364(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SparsePartInfo.Status(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SparsePartInfo.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A88F6E10(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 2u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1A88F6E28(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SparsePartInfo.Status()
{
  return &type metadata for SparsePartInfo.Status;
}

uint64_t sub_1A88F6E54(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88F6E8C(uint64_t result)
{
  uint64_t v2 = v1[2];
  if ((v2 & 0x8000000000000000) == 0)
  {
    unsigned int v3 = (uint64_t *)result;
    LODWORD(v4) = 0;
    int v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = *v1;
    while (1)
    {
      while (1)
      {
        int v24 = v4;
        unsigned __int8 v25 = v5;
        if ((_BYTE)v5) {
          break;
        }
        if (v6 == v2) {
          goto LABEL_40;
        }
        int v10 = *(char *)(v7 + v6);
        int v11 = *(unsigned __int8 *)(v7 + v6++);
        if (v10 < 0)
        {
          LODWORD(v4) = v4 & 0xFFFFFF00 | v11;
          int v5 = 8;
          goto LABEL_8;
        }
LABEL_3:
        LODWORD(v4) = v24;
        int v5 = v25;
        uint64_t v8 = v3[1];
        uint64_t v22 = *v3;
        uint64_t v23 = v8;
        __n128 result = sub_1A8A766D8();
        uint64_t v9 = v23;
        *unsigned int v3 = v22;
        v3[1] = v9;
      }
      if ((v4 & 0x80) == 0)
      {
        sub_1A88F73F4();
        __n128 result = (uint64_t)sub_1A87C8E94();
        char v20 = *(unsigned char *)(v19 + 4);
        if (!v20) {
          goto LABEL_42;
        }
        *(_DWORD *)v19 >>= 8;
        *(unsigned char *)(v19 + 4) = v20 - 8;
        ((void (*)(uint64_t *, void))result)(&v22, 0);
        goto LABEL_3;
      }
LABEL_8:
      uint64_t v12 = v6;
      if (v6 == v2)
      {
        int v13 = v5;
        uint64_t v6 = v2;
        goto LABEL_24;
      }
      ++v6;
      LODWORD(v4) = (*(unsigned __int8 *)(v7 + v12) << v5) | ((-255 << v5) - 1) & v4;
      int v13 = v5 + 8;
      if ((v5 + 8) <= 0x1Fu)
      {
        if (v6 == v2)
        {
          uint64_t v6 = v2;
          if ((_BYTE)v5 == 0xF8)
          {
LABEL_40:
            *(void *)(v21 + 16) = 0;
            return result;
          }
        }
        else
        {
          uint64_t v14 = v12 + 2;
          LODWORD(v4) = ((-255 << v13) - 1) & v4 | (*(unsigned __int8 *)(v7 + v6) << v13);
          int v13 = v5 + 16;
          if ((v5 + 8) > 0x17u) {
            goto LABEL_23;
          }
          uint64_t v6 = v2;
          if (v14 == v2) {
            goto LABEL_24;
          }
          int v15 = *(unsigned __int8 *)(v7 + v14);
          uint64_t v14 = v12 + 3;
          LODWORD(v4) = ((-255 << v13) - 1) & v4 | (v15 << v13);
          int v13 = v5 + 24;
          if ((v5 + 16) > 0x17u) {
            goto LABEL_23;
          }
          uint64_t v6 = v2;
          if (v14 == v2) {
            goto LABEL_24;
          }
          int v16 = *(unsigned __int8 *)(v7 + v14);
          uint64_t v14 = v12 + 4;
          LODWORD(v4) = ((-255 << v13) - 1) & v4 | (v16 << v13);
          int v13 = v5 + 32;
          if (v5 < 0xE8u)
          {
LABEL_23:
            uint64_t v6 = v14;
          }
          else
          {
            uint64_t v6 = v2;
            if (v14 != v2)
            {
              uint64_t v17 = v12 + 5;
              LODWORD(v4) = ((-255 << v13) - 1) & v4 | (*(unsigned __int8 *)(v7 + v14) << v13);
              int v13 = v5 + 40;
              if ((v5 + 32) >= 0x18u) {
                uint64_t v6 = v17;
              }
              else {
                uint64_t v6 = v2;
              }
            }
          }
        }
      }
LABEL_24:
      if ((v4 & 0xC0E0) == 0x80C0)
      {
        if ((v4 & 0x1E) != 0)
        {
          char v18 = 16;
LABEL_27:
          int v24 = (unint64_t)v4 >> v18;
          unsigned __int8 v25 = v13 - v18;
          goto LABEL_3;
        }
      }
      else if ((v4 & 0xC0C0F0) == 0x8080E0)
      {
        if ((v4 & 0x200F) != 0 && (v4 & 0x200F) != 0x200D)
        {
          char v18 = 24;
          goto LABEL_27;
        }
      }
      else if ((v4 & 0xC0C0C0F8) == 0x808080F0 && (v4 & 0x3007) != 0 && __rev16(v4 & 0x3007) <= 0x400)
      {
        char v18 = 32;
        goto LABEL_27;
      }
      __n128 result = sub_1A8A78868();
      unint64_t v4 = (unint64_t)v4 >> ((8 * result) & 0x38);
      int v5 = v13 - 8 * result;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A88F7278(uint64_t isStackAllocationSafe, int64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, char *a6)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (isStackAllocationSafe < 0) {
    __break(1u);
  }
  uint64_t v12 = isStackAllocationSafe;
  if (isStackAllocationSafe < 1025
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    int v16 = (char *)&v16 - v13;
    uint64_t v17 = v12;
    uint64_t v18 = 0;
    sub_1A88EABBC((int64_t)&v16, a2, a3, a4, a5, a6);
    if (v6) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v14 = swift_slowAlloc();
    int v16 = (char *)v14;
    uint64_t v17 = v12;
    uint64_t v18 = 0;
    sub_1A88EABBC((int64_t)&v16, a2, a3, a4, a5, a6);
    MEMORY[0x1AD0E4D00](v14, -1, -1);
  }
  return swift_release();
}

unint64_t sub_1A88F73F4()
{
  unint64_t result = qword_1E9741228;
  if (!qword_1E9741228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9741228);
  }
  return result;
}

uint64_t sub_1A88F7448(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1 + 4;
  swift_beginAccess();
  uint64_t v5 = a1[4];
  if (!v5)
  {
    swift_retain();
    uint64_t result = sub_1A88F8830((uint64_t)"euc-cn", (uint64_t)a1);
    if (!result)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v5 = result;
    *unint64_t v4 = result;
  }
  swift_endAccess();
  if (v5 == a2) {
    goto LABEL_20;
  }
  swift_beginAccess();
  uint64_t v7 = a1[5];
  if (!v7)
  {
    swift_retain();
    uint64_t result = sub_1A88F8830((uint64_t)"gb-2312-80", (uint64_t)a1);
    if (!result)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v7 = result;
    a1[5] = result;
  }
  swift_endAccess();
  if (v7 == a2) {
    goto LABEL_20;
  }
  swift_beginAccess();
  uint64_t v8 = a1[6];
  if (!v8)
  {
    swift_retain();
    uint64_t result = sub_1A88F8830((uint64_t)"gbk", (uint64_t)a1);
    if (!result)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v8 = result;
    a1[6] = result;
  }
  swift_endAccess();
  if (v8 == a2) {
    goto LABEL_20;
  }
  swift_beginAccess();
  uint64_t v9 = a1[8];
  if (v9)
  {
LABEL_16:
    swift_endAccess();
    if (v9 != a2) {
      return a2;
    }
    int v10 = a1 + 9;
    swift_beginAccess();
    a2 = a1[9];
    if (a2) {
      goto LABEL_23;
    }
    swift_retain();
    uint64_t result = sub_1A88F8830((uint64_t)"big5-hkscs", (uint64_t)a1);
    if (result)
    {
LABEL_22:
      a2 = result;
      *int v10 = result;
      goto LABEL_23;
    }
    __break(1u);
LABEL_20:
    int v10 = a1 + 7;
    swift_beginAccess();
    a2 = a1[7];
    if (!a2)
    {
      swift_retain();
      uint64_t result = sub_1A88F8830((uint64_t)"gb-18030", (uint64_t)a1);
      if (result) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
LABEL_23:
    swift_endAccess();
    return a2;
  }
  swift_retain();
  uint64_t result = sub_1A88F8830((uint64_t)"big5", (uint64_t)a1);
  if (result)
  {
    uint64_t v9 = result;
    a1[8] = result;
    goto LABEL_16;
  }
LABEL_29:
  __break(1u);
  return result;
}

char *sub_1A88F7670@<X0>(char *result@<X0>, int8x8_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, unsigned __int8 a6@<W5>, unsigned __int8 *a7@<X6>, unsigned char *a8@<X8>)
{
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (a5 == 74) {
    unsigned int v9 = 23;
  }
  else {
    unsigned int v9 = byte_1A8B04B55[a5];
  }
  uint64_t result = (char *)CompactEncDet_detectEncoding(a2, a3, result, a4 & 1, v9, a6, a7);
  *a8 = (_BYTE)result;
  return result;
}

uint64_t sub_1A88F76FC(char *a1, char *a2)
{
  return (byte_1A8B04B55[*a1] == byte_1A8B04B55[*a2]) & (a1[1] ^ a2[1] ^ 1u);
}

uint64_t sub_1A88F7734(char a1)
{
  uint64_t v1 = byte_1A8B04B55[a1];
  uint64_t result = CompactEncDet_EncodingName(v1);
  if (result)
  {
    sub_1A8A76808();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    uint64_t result = CompactEncDet_MimeEncodingName(v1);
    if (result)
    {
      sub_1A8A76808();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      sub_1A8A767E8();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88F7840()
{
  return sub_1A88F7734(*v0);
}

uint64_t sub_1A88F785C()
{
  if (*v0) {
    return 0x656C6261696C6572;
  }
  else {
    return 0x6261696C65726E75;
  }
}

BOOL sub_1A88F789C(char *a1, char *a2)
{
  return byte_1A8B04B55[*a1] == byte_1A8B04B55[*a2];
}

uint64_t sub_1A88F78C0()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88F7910()
{
  return sub_1A8A78778();
}

uint64_t sub_1A88F7948()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88F7994@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A88F7AE0(*a1);
  *a2 = result;
  return result;
}

void sub_1A88F79C0(unsigned char *a1@<X8>)
{
  *a1 = byte_1A8B04B55[*v1];
}

uint64_t sub_1A88F79D8()
{
  uint64_t result = CompactEncDet_EncodingName(byte_1A8B04B55[*v0]);
  if (result)
  {
    return sub_1A8A76808();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A88F7A18@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A88F8560(*a1);
  *a2 = result;
  return result;
}

void sub_1A88F7A44(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A88F7A50()
{
  uint64_t result = CompactEncDet_LanguageName(*v0);
  if (result)
  {
    return sub_1A8A76808();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1A88F7A84(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    uint64_t result = a3(&var2);
    if (!v3) {
      return (void *)var2;
    }
  }
  else
  {
    uint64_t result = ((void *(*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      return (void *)BYTE1(var2);
    }
  }
  return result;
}

uint64_t sub_1A88F7AE0(unsigned __int8 a1)
{
  if (a1 > 0x4Au) {
    return 74;
  }
  else {
    return byte_1A8B04B0A[(char)a1];
  }
}

uint64_t sub_1A88F7B08(int8x8_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, unsigned __int8 a7)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  unsigned __int8 v28 = 0;
  if (a1) {
    uint64_t v7 = a2 - (void)a1;
  }
  else {
    uint64_t v7 = 0;
  }
  if (a5)
  {
    uint64_t v10 = MEMORY[0x1F4188790](a1);
    if ((v11 & 0x1000000000000000) != 0 || !(a5 & 0x2000000000000000 | a4 & 0x1000000000000000))
    {
      type metadata accessor for CompactEncDet_Encoding(0);
      sub_1A8A77D98();
      unsigned __int8 v19 = v27;
      goto LABEL_23;
    }
    uint64_t v12 = (int8x8_t *)MEMORY[0x1F4188790](v10);
    if ((a5 & 0x2000000000000000) == 0)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        uint64_t v17 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v18 = a4 & 0xFFFFFFFFFFFFLL;
LABEL_10:
        unsigned __int8 v19 = sub_1A88F7A84(v17, v18, (void *(*)(uint64_t *__return_ptr))sub_1A88F7ED8);
        goto LABEL_23;
      }
LABEL_33:
      uint64_t v17 = sub_1A8A77E88();
      goto LABEL_10;
    }
    v26[0] = a4;
    v26[1] = a5 & 0xFFFFFFFFFFFFFFLL;
    if (v13 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v13 <= 0x7FFFFFFF)
    {
      if (v15 == 74) {
        unsigned int v21 = 23;
      }
      else {
        unsigned int v21 = byte_1A8B04B55[v15];
      }
      unsigned __int8 v19 = CompactEncDet_detectEncoding(v12, v13, (char *)v26, v14 & 1, v21, v16, &v28);
      goto LABEL_23;
    }
    __break(1u);
  }
  if (v7 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v7 > 0x7FFFFFFF)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (a6 == 74) {
    unsigned int v20 = 23;
  }
  else {
    unsigned int v20 = byte_1A8B04B55[a6];
  }
  unsigned __int8 v19 = CompactEncDet_detectEncoding(a1, v7, 0, a3 & 1, v20, a7, &v28);
LABEL_23:
  unsigned __int8 v22 = sub_1A88F7AE0(v19);
  if (v28) {
    int v23 = 256;
  }
  else {
    int v23 = 0;
  }
  unsigned int v24 = v23 & 0xFFFFFF00 | v22;
  if (v22 == 74) {
    return 512;
  }
  else {
    return v24;
  }
}

uint64_t sub_1A88F7D84(unsigned __int8 *a1, unsigned __int8 *a2, char a3, int8x8_t *a4, uint64_t a5, char a6, uint64_t *a7)
{
  if (a3)
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    char v14 = 74;
  }
  else
  {
    if (a1 && a2 - a1 > 119 || (unsigned __int8 v13 = sub_1A88E5E28((uint64_t)a1, (uint64_t)a2), v14 = sub_1A88F7AE0(v13), v14 == 74)) {
      char v14 = 74;
    }
    uint64_t v15 = sub_1A88BB254(a1, a2, 0);
    uint64_t v17 = v16;
  }
  __int16 v18 = sub_1A88F7B08(a4, a5, a6 & 1, v15, v17, v14, 0x1Au);
  swift_bridgeObjectRelease();
  if ((v18 & 0xFF00) == 0x200) {
    return 0;
  }
  uint64_t result = CompactEncDet_MimeEncodingName(byte_1A8B04B55[(char)v18]);
  if (result)
  {
    uint64_t v20 = result;
    swift_retain();
    uint64_t result = sub_1A88F8830(v20, (uint64_t)a7);
    if (result) {
      return sub_1A88F7448(a7, result);
    }
  }
  return result;
}

char *sub_1A88F7EAC@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A88F7670(a1, *(int8x8_t **)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(unsigned char *)(v2 + 33), *(unsigned char *)(v2 + 34), *(unsigned __int8 **)(v2 + 40), a2);
}

void *sub_1A88F7ED8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

_WORD *__swift_memcpy2_1_1(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for CharacterSetDetection.DetectedEncoding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88F7FF4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterSetDetection.DetectedEncoding()
{
  return &type metadata for CharacterSetDetection.DetectedEncoding;
}

unsigned char *storeEnumTagSinglePayload for CharacterSetDetection.DetectedEncoding.Reliability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88F80F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterSetDetection.DetectedEncoding.Reliability()
{
  return &type metadata for CharacterSetDetection.DetectedEncoding.Reliability;
}

uint64_t getEnumTagSinglePayload for CharacterSetDetection.Encoding(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xB7) {
    goto LABEL_17;
  }
  if (a2 + 73 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 73) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 73;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 73;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 73;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x4A;
  int v8 = v6 - 74;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacterSetDetection.Encoding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 73 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 73) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xB7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xB6)
  {
    unsigned int v6 = ((a2 - 183) >> 8) + 1;
    *uint64_t result = a2 + 73;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88F828CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 73;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterSetDetection.Encoding()
{
  return &type metadata for CharacterSetDetection.Encoding;
}

uint64_t getEnumTagSinglePayload for CharacterSetDetection.Language(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x60) {
    goto LABEL_17;
  }
  if (a2 + 160 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 160) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 160;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 160;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 160;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA1;
  int v8 = v6 - 161;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacterSetDetection.Language(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 160 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 160) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x60) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x5F)
  {
    unsigned int v6 = ((a2 - 96) >> 8) + 1;
    *uint64_t result = a2 - 96;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88F8420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 - 96;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterSetDetection.Language()
{
  return &type metadata for CharacterSetDetection.Language;
}

unint64_t sub_1A88F845C()
{
  unint64_t result = qword_1E974E3A0;
  if (!qword_1E974E3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3A0);
  }
  return result;
}

unint64_t sub_1A88F84B4()
{
  unint64_t result = qword_1E974E3A8;
  if (!qword_1E974E3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3A8);
  }
  return result;
}

unint64_t sub_1A88F850C()
{
  unint64_t result = qword_1E974E3B0;
  if (!qword_1E974E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3B0);
  }
  return result;
}

uint64_t sub_1A88F8560(uint64_t result)
{
  if ((char)result >= -95) {
    unsigned int v1 = -95;
  }
  else {
    unsigned int v1 = (char)result;
  }
  if ((result & 0x80u) == 0) {
    return result;
  }
  else {
    return v1;
  }
}

ValueMetadata *type metadata accessor for CharacterSetDetection()
{
  return &type metadata for CharacterSetDetection;
}

uint64_t getEnumTagSinglePayload for ICUCanonicalConverterName(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ICUCanonicalConverterName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)unint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICUCanonicalConverterName()
{
  return &type metadata for ICUCanonicalConverterName;
}

uint64_t sub_1A88F861C()
{
  int v0 = ucnv_countAvailable();
  uint64_t result = (uint64_t)sub_1A8901928(0, v0 & ~(v0 >> 31), 0, MEMORY[0x1E4FBC860]);
  if ((v0 & 0x80000000) == 0)
  {
    uint64_t v2 = result;
    if (!v0) {
      return v2;
    }
    int v3 = 0;
    while (v0 != v3)
    {
      uint64_t result = ucnv_getAvailableName();
      if (result)
      {
        uint64_t v4 = result;
        unint64_t v6 = *(void *)(v2 + 16);
        unint64_t v5 = *(void *)(v2 + 24);
        if (v6 >= v5 >> 1)
        {
          uint64_t result = (uint64_t)sub_1A8901928((char *)(v5 > 1), v6 + 1, 1, (char *)v2);
          uint64_t v2 = result;
        }
        *(void *)(v2 + 16) = v6 + 1;
        *(void *)(v2 + 8 * v6 + 32) = v4;
      }
      if (v0 == ++v3) {
        return v2;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A88F86EC()
{
  unint64_t result = qword_1E974E3B8;
  if (!qword_1E974E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3B8);
  }
  return result;
}

uint64_t sub_1A88F8740()
{
  uint64_t v0 = sub_1A8A765E8();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1A8A765D8();
  uint64_t result = sub_1A8A765A8();
  if (!v2) {
    return 0;
  }
  return result;
}

uint64_t sub_1A88F87CC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88F8830(uint64_t a1, uint64_t a2)
{
  uint64_t CanonicalName = ucnv_getCanonicalName();
  if (CanonicalName)
  {
    uint64_t v4 = CanonicalName;
    if (*(void *)(a2 + 16))
    {
      uint64_t v5 = *(void *)(a2 + 16);
    }
    else
    {
      uint64_t v5 = sub_1A88F861C();
      *(void *)(a2 + 16) = v5;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    char v6 = sub_1A88F87CC(v4, v5);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_36;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(v7 + 16);
      if (v9)
      {
LABEL_8:
        uint64_t v10 = *(void *)(v8 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (!ucnv_compareNames())
        {
          uint64_t v4 = v10;
LABEL_35:
          swift_bridgeObjectRelease_n();
LABEL_36:
          swift_release();
          return v4;
        }
        if (v9 != 1)
        {
          uint64_t v11 = 5;
          while (1)
          {
            uint64_t v12 = v11 - 3;
            if (__OFADD__(v11 - 4, 1)) {
              __break(1u);
            }
            uint64_t v13 = *(void *)(v8 + 8 * v11);
            if (!ucnv_compareNames()) {
              break;
            }
            ++v11;
            if (v12 == v9) {
              goto LABEL_14;
            }
          }
          uint64_t v4 = v13;
          goto LABEL_35;
        }
LABEL_14:
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v8 = sub_1A88F861C();
      *(void *)(a2 + 16) = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9) {
        goto LABEL_8;
      }
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_17:
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14)
  {
    uint64_t v15 = sub_1A88F861C();
    *(void *)(a2 + 16) = v15;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16) {
      goto LABEL_20;
    }
LABEL_31:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(v14 + 16);
  if (!v16) {
    goto LABEL_31;
  }
LABEL_20:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v17 = 0;
  while (1)
  {
    uint64_t v4 = *(void *)(v15 + 32 + 8 * v17);
    unsigned int v18 = ucnv_countAliases();
    if (!v18) {
      goto LABEL_22;
    }
    unsigned int v19 = v18;
    uint64_t v20 = v18 + 1;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743EC8);
    unsigned int v21 = (void *)sub_1A8A76D48();
    void v21[2] = v20;
    v21[4] = 0;
    bzero(v21 + 5, 8 * v19);
    ucnv_getAliases();
    uint64_t v22 = v21[2];
    if (v22) {
      break;
    }
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    if (++v17 == v16)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  uint64_t v23 = 0;
  while (!v21[v23 + 4] || ucnv_compareNames())
  {
    if (v22 == ++v23) {
      goto LABEL_21;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1A88F8B78(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  v17[1] = 0;
  if (!unorm2_getNFCInstance())
  {
    sub_1A88D0010();
    swift_allocError();
    *(_DWORD *)uint64_t v14 = 0;
    *(unsigned char *)(v14 + 4) = 0;
    swift_willThrow();
    return a3;
  }
  unint64_t v9 = sub_1A88F9224(a1, a2, a3, a4);
  if ((uint64_t)(v9 + 0x4000000000000000) < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((2 * v9) & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if ((uint64_t)(2 * v9 + 0x4000000000000000) < 0) {
    goto LABEL_16;
  }
  uint64_t v10 = 4 * v9;
  uint64_t isStackAllocationSafe = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v10 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v13 = sub_1A88FA41C((_DWORD *)((char *)v17 - v12), a1, a2, a3, a4);
    if (v4) {
      swift_willThrow();
    }
    else {
      a3 = v13;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = (_WORD *)swift_slowAlloc();
    a3 = sub_1A88FA41C(v16, a1, a2, a3, a4);
    MEMORY[0x1AD0E4D00](v16, -1, -1);
    swift_bridgeObjectRelease();
  }
  return a3;
}

uint64_t sub_1A88F8D8C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t result = sub_1A88F8FD0((uint64_t)a1, a2);
  if (v3) {
    return result;
  }
  uint64_t v8 = result;
  if (result >= a2)
  {
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  if (a2 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (2 * a2 < 0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  if (2 * a2 + 0x4000000000000000 < 0) {
    goto LABEL_17;
  }
  if (4 * a2 <= 1024 || (uint64_t result = swift_stdlib_isStackAllocationSafe(), result))
  {
    MEMORY[0x1F4188790](result);
    uint64_t v20 = sub_1A88F90A8(a1, a2, (char *)&v19 - v9, 2 * a2, v8);
    uint64_t v21 = v10;
    uint64_t v22 = v11;
    uint64_t v23 = v12;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E3C0);
    sub_1A88F9528();
    sub_1A88F9584();
    uint64_t result = sub_1A8A76658();
    if (v13)
    {
      *a3 = result;
      a3[1] = v13;
      return result;
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = (void *)swift_slowAlloc();
  uint64_t v20 = sub_1A88F90A8(a1, a2, v14, 2 * a2, v8);
  uint64_t v21 = v15;
  uint64_t v22 = v16;
  uint64_t v23 = v17;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E3C0);
  sub_1A88F9528();
  sub_1A88F9584();
  uint64_t result = sub_1A8A76658();
  if (!v18)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  *a3 = result;
  a3[1] = v18;
  return MEMORY[0x1AD0E4D00](v14, -1, -1);
}

uint64_t sub_1A88F8FD0(uint64_t a1, uint64_t a2)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (a2 > 0x7FFFFFFF) {
    goto LABEL_5;
  }
  return (int)unorm2_spanQuickCheckYes();
}

uint64_t sub_1A88F90A8(void *__src, uint64_t a2, void *__dst, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a5 && a4)
  {
    if (a5 >= a4) {
      uint64_t v8 = a4;
    }
    else {
      uint64_t v8 = a5;
    }
    memcpy(__dst, __src, 2 * v8);
  }
  if (a2 < a5) {
    goto LABEL_16;
  }
  if ((unint64_t)a5 >> 31)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a4 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a4 > 0x7FFFFFFF)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a2 - a5 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  if ((unorm2_normalizeSecondAndAppend() & 0x80000000) != 0) {
    goto LABEL_21;
  }
  return 0;
}

unint64_t sub_1A88F9224(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = sub_1A888BA50(a1, a3, a4);
  unint64_t result = sub_1A888BA50(a2, a3, a4);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1A8A76698();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1A8A77E88();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1A8A766A8();
        unint64_t v7 = result;
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1A8A77E88();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_36;
  }
  return 0;
}

unint64_t sub_1A88F9438(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v2 = sub_1A8A76968();
  unint64_t v4 = v3;
  unint64_t v6 = v5;
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  unint64_t v9 = sub_1A88F8B78(v2, v4, v6, v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    return v9;
  }
  return a1;
}

unint64_t sub_1A88F9528()
{
  unint64_t result = qword_1E974E3C8;
  if (!qword_1E974E3C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E974E3C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3C8);
  }
  return result;
}

unint64_t sub_1A88F9584()
{
  unint64_t result = qword_1E9746070;
  if (!qword_1E9746070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9746070);
  }
  return result;
}

uint64_t sub_1A88F95D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v9 = *a1;
  ucnv_setFallback();
  if (a2) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t result = sub_1A88F965C(a2, v10, 1, v9, (uint64_t)a1, 1);
  if (!v4)
  {
    uint64_t v12 = a1[3];
    *a4 = a1[2];
    a4[1] = v12;
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A88F965C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v7 = a2 - a1;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7 < 0) {
    goto LABEL_31;
  }
  uint64_t v12 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = v7;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  while (1)
  {
    if (v25) {
      uint64_t v15 = v26 - v25;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v12 < 0 || v15 < v12)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
    }
    if (v7 < 0 || v15 < v7) {
      goto LABEL_26;
    }
    uint64_t MinCharSize = ucnv_getMinCharSize();
    if (!MinCharSize) {
      goto LABEL_27;
    }
    uint64_t v17 = (v7 - v12) / (int)MinCharSize;
    BOOL v18 = __OFADD__(v17, 3);
    uint64_t v19 = v17 + 3;
    if (v18) {
      goto LABEL_28;
    }
    if (v19 + 0x4000000000000000 < 0) {
      goto LABEL_29;
    }
    uint64_t v20 = 2 * v19;
    if (2 * v19 < 0) {
      goto LABEL_30;
    }
    if (v20 < 1025) {
      break;
    }
    uint64_t MinCharSize = swift_stdlib_isStackAllocationSafe();
    if (MinCharSize) {
      break;
    }
    uint64_t v21 = swift_slowAlloc();
    sub_1A88F984C(&v23, v21, v21 + v20, a3 & 1, a4, a5, a6 & 1);
    uint64_t result = MEMORY[0x1AD0E4D00](v21, -1, -1);
    if (v6) {
      return result;
    }
LABEL_7:
    uint64_t v12 = v23;
    uint64_t v7 = v24;
    if (v23 == v24) {
      return result;
    }
  }
  MEMORY[0x1F4188790](MinCharSize);
  uint64_t result = sub_1A88F984C(&v23, (uint64_t)&v22 - v13, (uint64_t)&v22 + v20 - v13, a3 & 1, a4, a5, a6 & 1);
  if (!v6) {
    goto LABEL_7;
  }
  return swift_willThrow();
}

uint64_t sub_1A88F984C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[3];
  if (v13) {
    uint64_t v15 = v13 + *a1;
  }
  else {
    uint64_t v15 = 0;
  }
  ucnv_toUnicode();
  if (v15)
  {
    uint64_t v16 = v14 - v13;
    if (!v13) {
      uint64_t v16 = 0;
    }
    if (v12 < 0 || v16 < v12)
    {
      __break(1u);
    }
    else if (v11 >= v12)
    {
      *a1 = v12;
      a1[1] = v11;
      a1[2] = v13;
      a1[3] = v14;
      goto LABEL_11;
    }
    __break(1u);
    __break(1u);
    goto LABEL_21;
  }
LABEL_11:
  if (a2)
  {
    if (!a2)
    {
      uint64_t v17 = 0;
LABEL_16:
      uint64_t result = sub_1A88F9A48(a2, v17, a6, a7 & 1);
      if (v7) {
        return result;
      }
      return 1;
    }
    if (a2 - a2 >= -1)
    {
      uint64_t v17 = (a2 - a2) / 2;
      goto LABEL_16;
    }
LABEL_21:
    __break(1u);
  }
  return 1;
}

uint64_t sub_1A88F9A48(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (unsigned __int16 *)result;
  if (*(unsigned char *)(a3 + 13) != 1 && (a4 & 1) != 0 && a2 >= 201)
  {
    uint64_t v24 = result;
    uint64_t v25 = a2;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743ED0);
    sub_1A851154C(&qword_1E9743ED8, &qword_1E9743ED0);
    sub_1A88F9584();
    uint64_t result = sub_1A8A76658();
    if (!v6) {
      goto LABEL_43;
    }
    sub_1A8A767E8();
    return swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a3 + 13) = 1;
  if (result) {
    uint64_t v7 = (unsigned __int16 *)(result + 2 * a2);
  }
  else {
    uint64_t v7 = 0;
  }
  while (1)
  {
    LODWORD(v12) = *(_DWORD *)(a3 + 8);
    unsigned int v13 = *(unsigned __int8 *)(a3 + 12);
    int v26 = v12;
    char v27 = v13;
    if (v13) {
      break;
    }
    if (!v5 || v5 == v7)
    {
      unsigned int v15 = v12;
LABEL_41:
      *(_DWORD *)(a3 + 8) = v15;
      *(unsigned char *)(a3 + 12) = 0;
      return result;
    }
    uint64_t result = *v5;
    uint64_t v14 = v5 + 1;
    if ((*v5 & 0xF800) != 0xD800)
    {
      char v8 = 0;
      ++v5;
      goto LABEL_10;
    }
    LODWORD(v12) = v12 & 0xFFFF0000 | result;
    unsigned int v13 = 16;
    ++v5;
    if (v14 == v7)
    {
LABEL_28:
      unsigned int v15 = v12;
      goto LABEL_29;
    }
LABEL_16:
    unint64_t v5 = v14 + 1;
    unsigned int v15 = ((-65535 << v13) - 1) & v12 | (*v14 << v13);
    char v16 = v13 + 16;
    if ((v13 + 16) < 0x20u)
    {
      if (v5 == v7) {
        goto LABEL_21;
      }
      unint64_t v5 = v14 + 2;
      unsigned int v15 = ((-65535 << v16) - 1) & v15 | (v14[1] << v16);
      char v16 = v13 + 32;
      if (v13 >= 0xE0)
      {
        if (v5 == v7
          || (unsigned int v15 = ((-65535 << v13) - 1) & v15 | (v14[2] << v13), v16 = v13 + 48, (v13 + 48) < 0x20u))
        {
LABEL_21:
          LOBYTE(v13) = v16;
          unint64_t v5 = v7;
          if (!v16) {
            goto LABEL_41;
          }
          goto LABEL_29;
        }
        unint64_t v5 = v14 + 3;
      }
    }
    LOBYTE(v13) = v16;
LABEL_29:
    unsigned int v17 = v15 & 0xFC00FC00;
    if ((v15 & 0xFC00FC00) == 0xDC00D800) {
      char v18 = 32;
    }
    else {
      char v18 = 16;
    }
    char v8 = v13 - v18;
    BOOL v19 = v17 == -603924480;
    if (v17 == -603924480) {
      char v20 = 32;
    }
    else {
      char v20 = 16;
    }
    unint64_t v12 = (unint64_t)v15 >> v20;
    if (!v19)
    {
      *(_DWORD *)(a3 + 8) = v12;
      *(unsigned char *)(a3 + 12) = v8;
      sub_1A88D0010();
      swift_allocError();
      *(_DWORD *)uint64_t v23 = 0;
      *(unsigned char *)(v23 + 4) = 1;
      return swift_willThrow();
    }
LABEL_10:
    *(_DWORD *)(a3 + 8) = v12;
    *(unsigned char *)(a3 + 12) = v8;
    uint64_t v9 = *(void *)(a3 + 24);
    uint64_t v24 = *(void *)(a3 + 16);
    uint64_t v25 = v9;
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0xE000000000000000;
    sub_1A8A766D8();
    uint64_t v11 = v24;
    uint64_t v10 = v25;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    *(void *)(a3 + 16) = v11;
    *(void *)(a3 + 24) = v10;
    uint64_t result = swift_bridgeObjectRelease();
  }
  if ((v12 & 0xF800) == 0xD800)
  {
    if (!v5) {
      goto LABEL_28;
    }
    uint64_t v14 = v5;
    if (v5 == v7) {
      goto LABEL_28;
    }
    goto LABEL_16;
  }
  sub_1A88FA3C8();
  uint64_t result = (uint64_t)sub_1A87C8E94();
  char v22 = *(unsigned char *)(v21 + 4);
  if (v22)
  {
    *(_DWORD *)uint64_t v21 = *(unsigned __int16 *)(v21 + 2);
    *(unsigned char *)(v21 + 4) = v22 - 16;
    ((void (*)(uint64_t *, void))result)(&v24, 0);
    LODWORD(v12) = v26;
    char v8 = v27;
    goto LABEL_10;
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1A88F9DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1AD0DFC90](a1, a2, AssociatedTypeWitness);
  uint64_t result = sub_1A8A766E8();
  *a3 = result;
  a3[1] = v8;
  return result;
}

void *sub_1A88F9E40(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

unint64_t sub_1A88F9E94(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  char v9 = (a5 & 0x1000000000000000) == 0 || (a4 & 0x800000000000000) != 0;
  unint64_t v10 = result & 0xC;
  uint64_t v11 = 4 << v9;
  if ((result & 1) == 0 || v10 == v11)
  {
LABEL_9:
    if (v10 == v11) {
      uint64_t result = sub_1A85D0E10(result, a4, a5);
    }
    if (result >> 14 < a2 >> 14 || result >> 14 >= a3 >> 14)
    {
      __break(1u);
    }
    else if (result)
    {
      return result;
    }
    return result & 0xC | sub_1A8884764(result, a4, a5) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  unint64_t v10 = result >> 14;
  if (result >> 14 < a2 >> 14 || (uint64_t v11 = a3 >> 14, v10 >= a3 >> 14))
  {
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void *sub_1A88F9F64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void *(*a3)(void *__return_ptr, uint64_t, void *)@<X3>, void *a4@<X8>)
{
  char v18 = a4;
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = sub_1A870361C(0, *a2, v10, v9);
  uint64_t result = (void *)sub_1A870361C(v7, v8, v10, v9);
  if (__OFADD__(v11, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  unsigned int v13 = result;
  if ((uint64_t)result + v11 < v11)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (a1) {
    uint64_t v14 = a1 + v11;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t result = a3(v17, v14, v13);
  if (!v4)
  {
    uint64_t v15 = v17[1];
    char v16 = v18;
    *char v18 = v17[0];
    v16[1] = v15;
  }
  return result;
}

uint64_t sub_1A88FA030(unsigned __int8 *a1, unsigned __int8 *a2, char a3, uint64_t a4, char a5, uint64_t *a6, int8x8_t *a7, uint64_t a8)
{
  if (!a7
    || (uint64_t v11 = a8 - (void)a7, (int8x8_t *)a8 == a7)
    || (uint64_t v13 = sub_1A88F7D84(a1, a2, a3 & 1, a7, a8, a5 & 1, a6)) == 0)
  {
    swift_release();
    return 0;
  }
  uint64_t v14 = v13;
  swift_beginAccess();
  uint64_t v15 = a6[3];
  if (v15)
  {
LABEL_8:
    uint64_t v17 = swift_endAccess();
    if (v15 == v14)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F60);
      void v23[3] = v18;
      void v23[4] = sub_1A851154C(&qword_1E9745F58, &qword_1E9745F60);
      BOOL v19 = (void *)swift_allocObject();
      v23[0] = v19;
      _OWORD v19[2] = 0;
      v19[3] = v11;
      v19[4] = a7;
      v19[5] = a8;
      char v20 = __swift_project_boxed_opaque_existential_1_0(v23, v18);
      MEMORY[0x1F4188790](v20);
      uint64_t v21 = MEMORY[0x1F4188790](v19[4]);
      uint64_t v12 = (uint64_t)sub_1A88F9E40(v21, v22, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88C6A54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      swift_release();
    }
    else
    {
      MEMORY[0x1F4188790](v17);
      uint64_t v12 = sub_1A88BC320(v14, (uint64_t)a6, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1A88FA2D8);
      swift_release();
    }
    return v12;
  }
  swift_retain();
  uint64_t result = sub_1A88F8830((uint64_t)"utf-8", (uint64_t)a6);
  if (result)
  {
    uint64_t v15 = result;
    a6[3] = result;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88FA2D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1A88F95D8(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1A88FA2F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A88FA308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A88F9DC8(a1, a2, a3);
}

unint64_t sub_1A88FA374()
{
  unint64_t result = qword_1E9746060;
  if (!qword_1E9746060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9746060);
  }
  return result;
}

unint64_t sub_1A88FA3C8()
{
  unint64_t result = qword_1E974E3D0;
  if (!qword_1E974E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3D0);
  }
  return result;
}

uint64_t sub_1A88FA41C(_WORD *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v31 = a1;
  unint64_t v6 = a3 >> 14;
  if (a3 >> 14 != a2 >> 14)
  {
    uint64_t v24 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = (a4 >> 59) & 1;
    if ((a5 & 0x1000000000000000) == 0) {
      LOBYTE(v11) = 1;
    }
    uint64_t v12 = 4 << v11;
    if ((a5 & 0x2000000000000000) != 0) {
      uint64_t v13 = HIBYTE(a5) & 0xF;
    }
    else {
      uint64_t v13 = a4 & 0xFFFFFFFFFFFFLL;
    }
    unint64_t v26 = v13;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v14 = 0;
    unint64_t v15 = a2;
    while (1)
    {
      sub_1A88F9E94(v15, a2, a3, a4, a5);
      if ((a5 & 0x1000000000000000) != 0)
      {
        uint64_t result = sub_1A8A77DB8();
      }
      else
      {
        if ((a5 & 0x2000000000000000) != 0)
        {
          unint64_t v28 = a4;
          uint64_t v29 = v25;
        }
        else if ((a4 & 0x1000000000000000) == 0)
        {
          sub_1A8A77E88();
        }
        uint64_t result = sub_1A8A77E98();
      }
      unsigned int v17 = result;
      if (v15 & 0xC) != v12 && (v15) {
        break;
      }
      if ((v15 & 0xC) == v12)
      {
        uint64_t result = sub_1A85D0E10(v15, a4, a5);
        unint64_t v15 = result;
      }
      if (v26 <= v15 >> 16) {
        goto LABEL_44;
      }
      if (v15) {
        goto LABEL_24;
      }
      unint64_t v15 = v15 & 0xC | sub_1A8884764(v15, a4, a5) & 0xFFFFFFFFFFFFFFF3 | 1;
      if ((a5 & 0x1000000000000000) == 0)
      {
LABEL_25:
        unint64_t v18 = v15 >> 16;
        if ((a5 & 0x2000000000000000) != 0)
        {
          unint64_t v28 = a4;
          uint64_t v29 = v25;
          int v20 = *((unsigned __int8 *)&v28 + v18);
        }
        else
        {
          uint64_t v19 = v24;
          if ((a4 & 0x1000000000000000) == 0) {
            uint64_t v19 = sub_1A8A77E88();
          }
          int v20 = *(unsigned __int8 *)(v19 + v18);
        }
        int v21 = (char)v20;
        unsigned int v22 = __clz(v20 ^ 0xFF) - 24;
        if (v21 >= 0) {
          LOBYTE(v22) = 1;
        }
        unint64_t v15 = ((v18 + v22) << 16) | 5;
        goto LABEL_35;
      }
LABEL_34:
      unint64_t v15 = sub_1A8A76698();
LABEL_35:
      if (v17 >= 0x10000)
      {
        unsigned int v17 = ((v17 + 983040) >> 10) & 0x3FF | ((v17 & 0x3FF) << 16) | 0xDC00D800;
        v31[v14 + 1] = HIWORD(v17);
        uint64_t v23 = 2;
      }
      else
      {
        uint64_t v23 = 1;
      }
      uint64_t v7 = v14 + v23;
      v31[v14] = v17;
      v14 += v23;
      if (v6 == v15 >> 14)
      {
        uint64_t result = swift_bridgeObjectRelease();
        if ((v7 & 0x8000000000000000) == 0) {
          goto LABEL_41;
        }
LABEL_45:
        __break(1u);
        return result;
      }
    }
    if (v26 <= v15 >> 16)
    {
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
LABEL_24:
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_34;
  }
  uint64_t v7 = 0;
LABEL_41:
  uint64_t result = sub_1A88F8D8C(v31, v7, &v30);
  if (!v5) {
    return v30;
  }
  return result;
}

uint64_t sub_1A88FA6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_1A88AF2E4(a1, (uint64_t)v21);
  sub_1A88AF2E4((uint64_t)v21, (uint64_t)v22);
  if ((v23 & 0xF0) != 0x50) {
    goto LABEL_8;
  }
  v23 &= 0xFu;
  sub_1A88FA820((uint64_t)v22, (uint64_t)v24);
  sub_1A88FA820((uint64_t)v24, (uint64_t)v25);
  if (v26) {
    goto LABEL_8;
  }
  if (sub_1A88CCDF4(v25[0], v25[1]) == 1819112552 && v10 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v11 = 1;
    goto LABEL_9;
  }
  char v12 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if (v12) {
    char v11 = 1;
  }
  else {
LABEL_8:
  }
    char v11 = 0;
LABEL_9:
  uint64_t v13 = (unsigned __int8 *)sub_1A88C3204();
  unint64_t v15 = v14;
  char v17 = v16;
  sub_1A88C2478(a1);
  if (a4) {
    uint64_t v18 = a4 + a3;
  }
  else {
    uint64_t v18 = 0;
  }
  if (a4) {
    uint64_t v19 = (int8x8_t *)(a4 + a2);
  }
  else {
    uint64_t v19 = 0;
  }
  return sub_1A88FA030(v13, v15, v17 & 1, 0, v11, a5, v19, v18);
}

uint64_t sub_1A88FA820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ICUError()
{
  return &type metadata for ICUError;
}

ValueMetadata *type metadata accessor for UnsafeConverter()
{
  return &type metadata for UnsafeConverter;
}

uint64_t sub_1A88FA8A8(uint64_t a1, uint64_t a2)
{
  return sub_1A88FABD4(a1, a2, (uint64_t (*)(void))sub_1A88FA8C0);
}

uint64_t sub_1A88FA8C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result == a2)
  {
LABEL_2:
    if (result == a2) {
      return result;
    }
    uint64_t v4 = a4 - a3;
    if (!a3) {
      uint64_t v4 = 0;
    }
    while (1)
    {
      uint64_t v5 = a2 - 1;
      if (__OFSUB__(a2, 1)) {
        break;
      }
      if (v5 >= a2 || v5 < result || v5 < 0 || v5 >= v4) {
        goto LABEL_28;
      }
      unsigned int v6 = *(unsigned __int8 *)(a3 + v5);
      BOOL v7 = v6 > 0x20;
      uint64_t v8 = (1 << v6) & 0x100002600;
      if (!v7 && v8 != 0)
      {
        --a2;
        if (result != v5) {
          continue;
        }
      }
      return result;
    }
  }
  else
  {
    if (a2 <= result) {
      uint64_t v10 = result;
    }
    else {
      uint64_t v10 = a2;
    }
    while (v10 != result)
    {
      unsigned int v11 = *(unsigned __int8 *)(a3 + result);
      BOOL v7 = v11 > 0x20;
      uint64_t v12 = (1 << v11) & 0x100002600;
      if (v7 || v12 == 0) {
        goto LABEL_2;
      }
      if (a2 == ++result) {
        return a2;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A88FA98C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result == a2)
  {
    int v4 = 0;
    return v4 | ((result == a2) << 8);
  }
  uint64_t v5 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a4 - a3;
    if (!a3) {
      uint64_t v6 = 0;
    }
    if (v5 < a2 && v5 >= result && (v5 & 0x8000000000000000) == 0 && v5 < v6)
    {
      int v4 = *(unsigned __int8 *)(a3 + v5);
      return v4 | ((result == a2) << 8);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1A88FA9F0(unint64_t result, uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3)
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a6) {
    uint64_t v7 = a7 - a6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (a4 < 0 || v7 < a4) {
    goto LABEL_18;
  }
  if ((a5 & 0x8000000000000000) != 0 || v7 < (uint64_t)a5) {
    goto LABEL_19;
  }
  if ((uint64_t)(a5 - a4) < a2) {
    return 0;
  }
  unint64_t v8 = a4 + a2;
  if (__OFADD__(a4, a2)) {
    goto LABEL_20;
  }
  if ((v8 & 0x8000000000000000) != 0 || v7 < (uint64_t)v8) {
    goto LABEL_21;
  }
  if (v8 < a4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v8 <= a5) {
    return sub_1A88FAA74(result, a2, a3, a4, a4 + a2, a6, a7, v8);
  }
LABEL_23:
  __break(1u);
  return result;
}

unint64_t sub_1A88FAA74@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X8>)
{
  if ((a3 & 1) == 0)
  {
    if (result)
    {
      sub_1A88FAC28((unsigned __int8 *)result, a2, a4, a5, a6, a7, &v17);
      return v17;
    }
    __break(1u);
    goto LABEL_13;
  }
  a8 = HIDWORD(result);
  if (HIDWORD(result))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (result >> 11 == 27)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  LODWORD(a8) = WORD1(result);
  if (WORD1(result) > 0x10u)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((result & 0xFFFFFF80) != 0)
  {
LABEL_15:
    int v10 = (result & 0x3F) << 8;
    unsigned int v11 = (v10 | (result >> 6)) + 33217;
    unsigned int v12 = (v10 | (result >> 6) & 0x3F) << 8;
    unsigned int v13 = (((v12 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
    unsigned int v14 = (v12 | (result >> 12)) + 8487393;
    if (a8) {
      unsigned int v8 = v13;
    }
    else {
      unsigned int v8 = v14;
    }
    if (result < 0x800) {
      unsigned int v8 = v11;
    }
    goto LABEL_10;
  }
  if (result > 0xFF)
  {
    __break(1u);
    goto LABEL_22;
  }
  unsigned int v8 = (result + 1);
LABEL_10:
  unsigned int v9 = __clz(v8);
  uint64_t v16 = (v8 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (v9 >> 3)) & 7)));
  sub_1A88FAC28((unsigned __int8 *)&v16, 4 - (v9 >> 3), a4, a5, a6, a7, &v15);
  return v15;
}

uint64_t sub_1A88FABBC(uint64_t a1, uint64_t a2)
{
  return sub_1A88FABD4(a1, a2, (uint64_t (*)(void))sub_1A88FACDC);
}

uint64_t sub_1A88FABD4(uint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  if (result) {
    uint64_t v3 = a2 - result;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = a3(0);
    if (v5) {
      return v5 + v4;
    }
    else {
      return 0;
    }
  }
  return result;
}

unsigned __int8 *sub_1A88FAC28@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v7 = &result[a2];
  if (!result) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = a6 - a5;
  if (!a5) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = a3;
  while (1)
  {
    if (v9 == a4)
    {
      int v10 = 0;
      uint64_t v11 = a4;
      if (!result) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    if (v9 < a3 || v9 >= a4) {
      break;
    }
    if (v9 < 0 || v9 >= v8) {
      goto LABEL_25;
    }
    uint64_t v11 = v9 + 1;
    int v10 = *(unsigned __int8 *)(a5 + v9) | 0x20;
    if (!result)
    {
LABEL_17:
      int v13 = 0;
      int v12 = 1;
      if (v9 == a4) {
        goto LABEL_23;
      }
      goto LABEL_18;
    }
LABEL_14:
    if (result == v7) {
      goto LABEL_17;
    }
    int v12 = 0;
    int v14 = *result++;
    int v13 = v14;
    if (v9 == a4) {
      goto LABEL_23;
    }
LABEL_18:
    if (v10 == v13) {
      int v15 = v12;
    }
    else {
      int v15 = 1;
    }
    uint64_t v9 = v11;
    if (v15 == 1)
    {
      LOBYTE(v12) = 0;
LABEL_23:
      *a7 = v12;
      return result;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A88FACDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result == a2)
  {
LABEL_2:
    if (result == a2) {
      return result;
    }
    uint64_t v4 = a4 - a3;
    if (!a3) {
      uint64_t v4 = 0;
    }
    while (1)
    {
      uint64_t v5 = a2 - 1;
      if (__OFSUB__(a2, 1)) {
        break;
      }
      if (v5 >= a2 || v5 < result || v5 < 0 || v5 >= v4) {
        goto LABEL_30;
      }
      int v6 = *(unsigned __int8 *)(a3 + v5);
      if (v6 == 32 || v6 == 9)
      {
        --a2;
        if (result != v5) {
          continue;
        }
      }
      return result;
    }
  }
  else
  {
    if (a2 <= result) {
      uint64_t v8 = result;
    }
    else {
      uint64_t v8 = a2;
    }
    while (v8 != result)
    {
      int v9 = *(unsigned __int8 *)(a3 + result);
      if (v9 != 32 && v9 != 9) {
        goto LABEL_2;
      }
      if (a2 == ++result) {
        return a2;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A88FAD80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  if (a3) {
    uint64_t v7 = a4 - a3;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7 < 0) {
    goto LABEL_47;
  }
  uint64_t v8 = result;
  uint64_t v9 = 0;
  if (!v7)
  {
LABEL_35:
    if (v8) {
      uint64_t v18 = v9;
    }
    else {
      uint64_t v18 = 0;
    }
    if (v8) {
      uint64_t v19 = v8 + v9;
    }
    else {
      uint64_t v19 = 0;
    }
    return sub_1A88ECD88(0, v18, v8, v19, a5, a6, a7);
  }
  uint64_t v10 = 0;
  uint64_t v11 = a3 + 2;
  while (1)
  {
    if (v7 < v10 + 1) {
      goto LABEL_44;
    }
    int v12 = *(unsigned __int8 *)(a3 + v10);
    if (v12 == 37) {
      break;
    }
    ++v10;
LABEL_32:
    *(unsigned char *)(v8 + v9) = v12;
    if (__OFADD__(v9++, 1)) {
      goto LABEL_45;
    }
    if (v10 == v7) {
      goto LABEL_34;
    }
  }
  if (v10 + 1 == v7) {
    goto LABEL_34;
  }
  if (v7 < v10 + 2) {
    goto LABEL_46;
  }
  if (v10 + 2 == v7)
  {
LABEL_34:
    if (v9 < 0) {
      goto LABEL_48;
    }
    goto LABEL_35;
  }
  uint64_t v13 = v10 + 4;
  while (1)
  {
    uint64_t v10 = v13 - 1;
    if (v7 < v13 - 1) {
      break;
    }
    char v14 = *(unsigned char *)(v11 + v13 - 5);
    char v15 = *(unsigned char *)(v11 + v13 - 4);
    if ((v14 - 58) > 0xF5u)
    {
      uint64_t result = 208;
    }
    else if ((v14 - 71) > 0xF9u)
    {
      uint64_t result = 201;
    }
    else
    {
      uint64_t result = (v14 - 103);
      if (result <= 0xF9) {
        goto LABEL_23;
      }
      uint64_t result = 169;
    }
    if ((v15 - 58) > 0xF5u)
    {
      char v16 = -48;
LABEL_31:
      LOBYTE(v12) = (v15 + v16) | (16 * (v14 + result));
      goto LABEL_32;
    }
    if ((v15 - 71) > 0xF9u)
    {
      char v16 = -55;
      goto LABEL_31;
    }
    if ((v15 - 103) >= 0xFAu)
    {
      char v16 = -87;
      goto LABEL_31;
    }
LABEL_23:
    if (v13 - v7 == 1) {
      goto LABEL_34;
    }
    if (v7 < v13) {
      goto LABEL_43;
    }
    v13 += 2;
    if (v13 - v7 == 2) {
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1A88FAF24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A8A766E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A88FAF5C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (result) {
    uint64_t v4 = a2 - result;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4 < 0) {
    goto LABEL_121;
  }
  if (v4)
  {
    uint64_t v6 = result;
    uint64_t v7 = 0;
    do
    {
      if (v7 >= v4)
      {
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
        return result;
      }
      int v8 = *(unsigned __int8 *)(v6 + v7);
      BOOL v9 = v8 == 10 || v8 == 13;
      uint64_t v10 = v7;
      if (!v9)
      {
        uint64_t v10 = v4;
        if (v7 + 1 != v4)
        {
          if (v7 + 1 >= v4) {
            goto LABEL_128;
          }
          int v26 = *(unsigned __int8 *)(v6 + v7 + 1);
          BOOL v27 = v26 == 10 || v26 == 13;
          uint64_t v10 = v7 + 1;
          if (v27) {
            goto LABEL_13;
          }
          uint64_t v28 = v7 + 2;
          while (v4 != v28)
          {
            int v29 = *(unsigned __int8 *)(v6 + v28++);
            if (v29 == 10 || v29 == 13)
            {
              uint64_t v10 = v28 - 1;
              goto LABEL_71;
            }
          }
          uint64_t v10 = v4;
        }
LABEL_71:
        if (v10 < v7)
        {
          __break(1u);
          goto LABEL_111;
        }
      }
LABEL_13:
      if (v4 < v10) {
        goto LABEL_117;
      }
      uint64_t result = v10 - v7;
      if (v10 == v7)
      {
        BOOL v11 = 0;
      }
      else
      {
        uint64_t v12 = v10 - 1;
        if (__OFSUB__(v10, 1)) {
          goto LABEL_122;
        }
        if (v12 >= v10 || v12 < v7 || v12 < 0 || v12 >= v4) {
          goto LABEL_123;
        }
        int v13 = *(unsigned __int8 *)(v6 + v12);
        BOOL v11 = v13 == 32 || v13 == 9;
      }
      if (v7 < 0) {
        goto LABEL_118;
      }
      if (v10 < 0) {
        goto LABEL_119;
      }
      MEMORY[0x1AD0DF770](result);
      uint64_t result = 0;
      uint64_t v15 = v7;
      if (v10 != v7)
      {
        while (v15 >= v7 && v15 < v10)
        {
          int v23 = *(unsigned __int8 *)(v6 + v15);
          uint64_t v24 = v15 + 1;
          if ((v23 - 1) <= 0x7D)
          {
            if (v23 != 92 || (a4 & 1) == 0) {
              goto LABEL_59;
            }
            if (v24 == v10) {
              goto LABEL_30;
            }
            if (v24 >= v10) {
              break;
            }
            int v25 = *(unsigned __int8 *)(v6 + v24);
            uint64_t v24 = v15 + 2;
            if ((v25 - 1) <= 0x7D)
            {
LABEL_59:
              uint64_t v35 = result;
              sub_1A8A766D8();
              uint64_t result = v35;
            }
          }
          uint64_t v15 = v24;
          if (v24 == v10) {
            goto LABEL_30;
          }
        }
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
        goto LABEL_116;
      }
LABEL_30:
      sub_1A8A767E8();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = v4;
      if (v10 == v4) {
        goto LABEL_45;
      }
      if (v10 >= v4) {
        goto LABEL_124;
      }
      int v17 = *(unsigned __int8 *)(v6 + v10);
      if (v17 == 10 || v17 == 13)
      {
        uint64_t v16 = v4;
        if (v10 + 1 != v4)
        {
          uint64_t v16 = v10 + 1;
          while (v16 < v4)
          {
            int v18 = *(unsigned __int8 *)(v6 + v16);
            if (v18 != 13 && v18 != 10) {
              goto LABEL_44;
            }
            if (v4 == ++v16)
            {
              uint64_t v16 = v4;
              goto LABEL_44;
            }
          }
          goto LABEL_113;
        }
LABEL_44:
        if (v16 < v10) {
          goto LABEL_120;
        }
LABEL_45:
        if (v11) {
          goto LABEL_46;
        }
        goto LABEL_87;
      }
      uint64_t v16 = v10;
      if (v11)
      {
LABEL_46:
        if (v16 == v4) {
          return result;
        }
        if (v16 >= v4) {
          goto LABEL_126;
        }
        int v20 = *(unsigned __int8 *)(v6 + v16);
        if (v20 == 9 || v20 == 32)
        {
          uint64_t v7 = v16 + 1;
          if (v16 + 1 == v4) {
            return result;
          }
          while (v7 < v4)
          {
            int v21 = *(unsigned __int8 *)(v6 + v7);
            if (v21 != 32 && v21 != 9)
            {
              if (v7 >= v16) {
                goto LABEL_106;
              }
              goto LABEL_114;
            }
            if (v4 == ++v7) {
              return result;
            }
          }
          goto LABEL_112;
        }
        uint64_t v7 = v16;
        continue;
      }
LABEL_87:
      uint64_t v31 = v4;
      if (v16 != v4)
      {
        if (v16 >= v4) {
          goto LABEL_127;
        }
        int v32 = *(unsigned __int8 *)(v6 + v16);
        if (v32 == 9 || (uint64_t v31 = v16, v32 == 32))
        {
          uint64_t v31 = v4;
          if (v16 + 1 != v4)
          {
            uint64_t v31 = v16 + 1;
            while (v31 < v4)
            {
              int v33 = *(unsigned __int8 *)(v6 + v31);
              if (v33 != 32 && v33 != 9)
              {
                if (v31 < v16) {
                  goto LABEL_125;
                }
                goto LABEL_105;
              }
              if (v4 == ++v31)
              {
                uint64_t v31 = v4;
                goto LABEL_105;
              }
            }
            goto LABEL_115;
          }
        }
      }
LABEL_105:
      uint64_t v7 = v31 - (v16 < v31);
LABEL_106:
      ;
    }
    while (v7 != v4);
  }
  return result;
}

uint64_t sub_1A88FB2F4(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned __int8 *a5, char a6, uint64_t a7, uint64_t *a8, uint64_t a9)
{
  if (a2) {
    uint64_t v9 = a3 - a2;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9 < 0) {
    goto LABEL_43;
  }
  uint64_t v13 = 0;
  if (!v9)
  {
LABEL_35:
    char v23 = a6 & 1;
    uint64_t v24 = result + v13;
    if (!result)
    {
      uint64_t v13 = 0;
      uint64_t v24 = 0;
    }
    *(void *)&long long v26 = 0;
    *((void *)&v26 + 1) = v13;
    uint64_t v27 = result;
    uint64_t v28 = v24;
    char v29 = 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    char v25 = sub_1A88ED7F4(&v26, a4, a5, v23, a8, a9);
    swift_release();
    swift_bridgeObjectRelease();
    return v25 & 1;
  }
  uint64_t v14 = 0;
  uint64_t v15 = a2 + 2;
  while (1)
  {
    if (v9 < v14 + 1) {
      goto LABEL_40;
    }
    int v16 = *(unsigned __int8 *)(a2 + v14);
    if (v16 == 37) {
      break;
    }
    ++v14;
LABEL_32:
    *(unsigned char *)(result + v13) = v16;
    if (__OFADD__(v13++, 1)) {
      goto LABEL_41;
    }
    if (v14 == v9) {
      goto LABEL_34;
    }
  }
  if (v14 + 1 == v9) {
    goto LABEL_34;
  }
  if (v9 < v14 + 2) {
    goto LABEL_42;
  }
  if (v14 + 2 == v9)
  {
LABEL_34:
    if (v13 < 0) {
      goto LABEL_44;
    }
    goto LABEL_35;
  }
  uint64_t v17 = v14 + 4;
  while (1)
  {
    uint64_t v14 = v17 - 1;
    if (v9 < v17 - 1) {
      break;
    }
    char v18 = *(unsigned char *)(v15 + v17 - 5);
    char v19 = *(unsigned char *)(v15 + v17 - 4);
    if ((v18 - 58) > 0xF5u)
    {
      char v20 = -48;
    }
    else if ((v18 - 71) > 0xF9u)
    {
      char v20 = -55;
    }
    else
    {
      if ((v18 - 103) <= 0xF9u) {
        goto LABEL_23;
      }
      char v20 = -87;
    }
    if ((v19 - 58) > 0xF5u)
    {
      char v21 = -48;
LABEL_31:
      LOBYTE(v16) = (v19 + v21) | (16 * (v18 + v20));
      goto LABEL_32;
    }
    if ((v19 - 71) > 0xF9u)
    {
      char v21 = -55;
      goto LABEL_31;
    }
    if ((v19 - 103) >= 0xFAu)
    {
      char v21 = -87;
      goto LABEL_31;
    }
LABEL_23:
    if (v17 - v9 == 1) {
      goto LABEL_34;
    }
    if (v9 < v17) {
      goto LABEL_39;
    }
    v17 += 2;
    if (v17 - v9 == 2) {
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1A88FB518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = sub_1A8A788A8();
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  uint64_t v11 = sub_1A870361C(a1, a2, a3, a4);
  uint64_t result = MEMORY[0x1AD0DF770](v11);
  char v13 = 0;
  LODWORD(v14) = 0;
  int v15 = 0;
  uint64_t v16 = a4 - a3;
  if (!a3) {
    uint64_t v16 = 0;
  }
  uint64_t v33 = a3;
  uint64_t v34 = v16;
  uint64_t v17 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
  int v31 = 8 * a2;
  uint64_t v18 = a1;
  uint64_t v19 = a1;
  while (1)
  {
    while (1)
    {
      char v20 = v13;
      int v37 = v14;
      unsigned __int8 v38 = v15;
      if (!(_BYTE)v15) {
        break;
      }
      if ((v14 & 0x80) == 0)
      {
        sub_1A88F73F4();
        char v29 = sub_1A87C8E94();
        sub_1A8879710(0);
        ((void (*)(uint64_t *, void))v29)(&v35, 0);
        goto LABEL_53;
      }
LABEL_13:
      if (v19 == a2)
      {
        uint64_t v19 = a2;
        goto LABEL_49;
      }
      if (v19 < v18 || v19 >= a2) {
        goto LABEL_71;
      }
      if (v19 < 0 || v19 >= v34) {
        goto LABEL_72;
      }
      uint64_t v22 = v19 + 1;
      LODWORD(v14) = (*(unsigned __int8 *)(v33 + v19) << v15) | ((-255 << v15) - 1) & v14;
      int v23 = v15 + 8;
      if ((v15 + 8) > 0x1Fu)
      {
LABEL_47:
        int v15 = v23;
LABEL_48:
        uint64_t v19 = v22;
        goto LABEL_49;
      }
      if (v22 != a2)
      {
        if (v19 < v18 || v22 >= a2) {
          goto LABEL_71;
        }
        if (v19 < 0 || v22 >= v34) {
          goto LABEL_72;
        }
        int v24 = *(unsigned __int8 *)(v33 + v22);
        uint64_t v22 = v19 + 2;
        LODWORD(v14) = (v24 << v23) | ((-255 << v23) - 1) & v14;
        int v23 = v15 + 16;
        if ((v15 + 16) > 0x1Fu) {
          goto LABEL_47;
        }
        if (v22 != a2)
        {
          if (v19 < v18 || v22 >= a2) {
            goto LABEL_71;
          }
          if (v19 < 0 || v22 >= v34) {
            goto LABEL_72;
          }
          int v25 = *(unsigned __int8 *)(v33 + v22);
          uint64_t v22 = v19 + 3;
          LODWORD(v14) = (v25 << v23) | ((-255 << v23) - 1) & v14;
          int v23 = v15 + 24;
          if ((v15 + 24) > 0x1Fu) {
            goto LABEL_47;
          }
          if (v22 != a2)
          {
            if (v19 < v18 || v22 >= a2) {
              goto LABEL_71;
            }
            if (v19 < 0 || v22 >= v34) {
              goto LABEL_72;
            }
            int v26 = *(unsigned __int8 *)(v33 + v22);
            uint64_t v22 = v19 + 4;
            LODWORD(v14) = (v26 << v23) | ((-255 << v23) - 1) & v14;
            if (v15 < 0xE0u)
            {
              v15 += 32;
              goto LABEL_48;
            }
            if (v22 != a2)
            {
              if (v19 < v18 || v22 >= a2) {
                goto LABEL_71;
              }
              if (v19 < 0 || v22 >= v34) {
                goto LABEL_72;
              }
              LODWORD(v14) = (*(unsigned __int8 *)(v33 + v22) << v15) | ((-255 << v15) - 1) & v14;
              if ((v15 + 40) >= 0x20u)
              {
                v19 += 5;
                v15 += 40;
                goto LABEL_49;
              }
            }
          }
        }
      }
      int v15 = v31 + v15 - 8 * v19;
      uint64_t v19 = a2;
      if (!(_BYTE)v15) {
        return v39;
      }
LABEL_49:
      if ((v14 & 0xC0E0) == 0x80C0)
      {
        if ((v14 & 0x1E) != 0)
        {
          char v27 = 16;
LABEL_52:
          int v37 = (unint64_t)v14 >> v27;
          unsigned __int8 v38 = v15 - v27;
          goto LABEL_53;
        }
      }
      else if ((v14 & 0xC0C0F0) == 0x8080E0)
      {
        if ((v14 & 0x200F) != 0 && (v14 & 0x200F) != 0x200D)
        {
          char v27 = 24;
          goto LABEL_52;
        }
      }
      else if ((v14 & 0xC0C0C0F8) == 0x808080F0 && (v14 & 0x3007) != 0 && __rev16(v14 & 0x3007) <= 0x400)
      {
        char v27 = 32;
        goto LABEL_52;
      }
      uint64_t result = sub_1A8A78868();
      char v13 = 0;
      unint64_t v14 = (unint64_t)v14 >> ((8 * result) & 0x38);
      v15 -= 8 * result;
    }
    if (v19 == a2) {
      return v39;
    }
    if (v19 < v18 || v19 >= a2) {
      break;
    }
    if (v19 < 0 || v19 >= v34) {
      goto LABEL_70;
    }
    int v21 = *(unsigned __int8 *)(v33 + v19++);
    if ((v21 & 0x80) != 0)
    {
      LODWORD(v14) = v14 & 0xFFFFFF00 | v21;
      int v15 = 8;
      goto LABEL_13;
    }
LABEL_53:
    LODWORD(v14) = v37;
    int v15 = v38;
    sub_1A8A788B8();
    char v28 = sub_1A8A78898();
    uint64_t result = (*v17)(v10, v32);
    if (v28)
    {
      char v13 = 1;
      if ((v20 & 1) == 0)
      {
        uint64_t result = sub_1A8A767E8();
        char v13 = 1;
      }
    }
    else
    {
      uint64_t v35 = v39;
      unint64_t v36 = v40;
      uint64_t result = sub_1A8A766D8();
      char v13 = 0;
      uint64_t v39 = v35;
      unint64_t v40 = v36;
    }
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

void *sub_1A88FBAF0(void *result, uint64_t a2, char a3)
{
  if (result) {
    uint64_t v4 = a2 - (void)result;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = sub_1A88FA8C0(0, v4, (uint64_t)result, a2);
    if (a3)
    {
      return (void *)sub_1A88FB518(v6, v7, v8, v9);
    }
    else
    {
      MEMORY[0x1F4188790](v6);
      return sub_1A88F9E40(v10, v11, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88C6A54);
    }
  }
  return result;
}

uint64_t sub_1A88FBBE0()
{
  unint64_t v1 = (unint64_t)v0[1] >> 14;
  if (v1 == (unint64_t)*v0 >> 14) {
    return 0;
  }
  uint64_t v2 = sub_1A8A77928();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v3 = sub_1A8A778E8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v1 >= v3 >> 14)
  {
    uint64_t v5 = sub_1A8A77938();
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    *uint64_t v0 = v5;
    v0[1] = v7;
    v0[2] = v9;
    v0[3] = v11;
    return v2;
  }
  __break(1u);
  return result;
}

void sub_1A88FBCD8()
{
  unint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  if ((v1 ^ *v0) >= 0x4000)
  {
    unint64_t v4 = v0[2];
    unint64_t v3 = v0[3];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v5 = sub_1A8A77928();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (v5 == 91 && v7 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v9 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        return;
      }
    }
    unint64_t v33 = v4;
    unint64_t v34 = v1;
    unint64_t v35 = v3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88FBBE0();
    swift_bridgeObjectRelease();
    unint64_t v10 = v0[1] >> 14;
    if (v10 == *v0 >> 14) {
      goto LABEL_32;
    }
    unint64_t v11 = sub_1A8A77928();
    unint64_t v13 = v12;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v14 = sub_1A8A778E8();
    swift_bridgeObjectRelease();
    if (v10 < v14 >> 14)
    {
LABEL_41:
      __break(1u);
    }
    else
    {
      unint64_t v15 = sub_1A8A77938();
      unint64_t v17 = v16;
      unint64_t v19 = v18;
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      *uint64_t v0 = v15;
      v0[1] = v17;
      v0[2] = v19;
      v0[3] = v21;
      if (v11 == 2573 && v13 == 0xE200000000000000 || (sub_1A8A78588() & 1) != 0 || (sub_1A8A76278() & 1) == 0)
      {
LABEL_31:
        swift_bridgeObjectRelease();
LABEL_32:
        swift_bridgeObjectRelease();
        *uint64_t v0 = v2;
        v0[1] = v34;
        v0[2] = v33;
        v0[3] = v35;
        return;
      }
      char v22 = 0;
      while (1)
      {
        unint64_t v23 = sub_1A8884574(v11, v13);
        if ((v23 & 0x100000000) != 0) {
          break;
        }
        if ((v23 & 0xFFFFFF80) != 0) {
          goto LABEL_31;
        }
        unint64_t v24 = sub_1A8884574(v11, v13);
        if ((v24 & 0x100000000) != 0) {
          goto LABEL_43;
        }
        int v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 0xFFFFFF00) != 0)
        {
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if (v25 == 93)
        {
          if ((v22 & 1) == 0) {
            goto LABEL_32;
          }
          swift_bridgeObjectRelease();
          return;
        }
        if (v25 <= 0x2Fu || v25 >= 0x40u || v17 >> 14 == v15 >> 14) {
          goto LABEL_32;
        }
        unint64_t v11 = sub_1A8A77928();
        unint64_t v13 = v26;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        unint64_t v27 = sub_1A8A778E8();
        swift_bridgeObjectRelease();
        if (v17 >> 14 < v27 >> 14) {
          goto LABEL_40;
        }
        unint64_t v15 = sub_1A8A77938();
        unint64_t v17 = v28;
        unint64_t v30 = v29;
        unint64_t v32 = v31;
        swift_bridgeObjectRelease();
        *uint64_t v0 = v15;
        v0[1] = v17;
        v0[2] = v30;
        v0[3] = v32;
        if ((v11 != 2573 || v13 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
        {
          char v22 = 1;
          if (sub_1A8A76278()) {
            continue;
          }
        }
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
  }
}

uint64_t sub_1A88FC074()
{
  uint64_t v0 = sub_1A8A74CE8();
  __swift_allocate_value_buffer_0(v0, qword_1E9746B50);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1E9746B50);
  return sub_1A8A74C98();
}

void sub_1A88FC0DC()
{
  off_1E9746B88 = &unk_1EFE8F310;
}

void sub_1A88FC0F0()
{
  off_1E9746B78 = &unk_1EFE8E6A0;
}

uint64_t sub_1A88FC104()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746198);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v129 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v3 = sub_1A8A76968();
  unint64_t v5 = v4;
  unint64_t v7 = v6;
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  int v131 = 0;
  unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  int v130 = 1;
  unint64_t v11 = &qword_1E9746000;
  v135 = v2;
  while (1)
  {
LABEL_2:
    v132 = v10;
LABEL_3:
    unint64_t v12 = v5;
    unint64_t v13 = v5 >> 14;
    if (v5 >> 14 == v3 >> 14)
    {
      unint64_t v14 = v7;
      unint64_t v15 = v9;
      goto LABEL_13;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v16 = v7;
    sub_1A8A77928();
    unint64_t v17 = v12;
    swift_bridgeObjectRelease();
    char v18 = sub_1A8A76268();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      unint64_t v14 = v16;
      unint64_t v15 = v9;
      goto LABEL_10;
    }
    sub_1A8A77928();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v19 = sub_1A8A778E8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13 < v19 >> 14)
    {
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      return result;
    }
    unint64_t v21 = v10;
    unint64_t v3 = sub_1A8A77938();
    unint64_t v23 = v22;
    unint64_t v25 = v24;
    unint64_t v15 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v27 = v23 >> 14;
    if (v23 >> 14 == v3 >> 14)
    {
      unint64_t v12 = v23;
      unint64_t v14 = v25;
      unint64_t v11 = &qword_1E9746000;
      goto LABEL_13;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v17 = v23;
    sub_1A8A77928();
    swift_bridgeObjectRelease();
    char v56 = sub_1A8A76268();
    swift_bridgeObjectRelease();
    unint64_t v14 = v25;
    unint64_t v10 = v21;
    unint64_t v11 = &qword_1E9746000;
    if (v56) {
      break;
    }
LABEL_10:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v28 = sub_1A8A77928();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    unint64_t v12 = v17;
    if (v28 == 91 && v30 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v31 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0) {
        goto LABEL_13;
      }
    }
    unint64_t v85 = v3 >> 14;
    unint64_t v11 = (uint64_t *)(v17 >> 14);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v3 >> 14 == v17 >> 14)
    {
      unint64_t v86 = (uint64_t *)(v3 >> 14);
      unint64_t v139 = v17;
      unint64_t v17 = v14;
      unint64_t v14 = v12;
      unint64_t v140 = v17;
      unint64_t v141 = v3;
      unint64_t v33 = v15;
    }
    else
    {
      sub_1A8A77928();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      unint64_t v87 = sub_1A8A778E8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((unint64_t)v11 < v87 >> 14) {
        goto LABEL_137;
      }
      unint64_t v140 = v14;
      unint64_t v141 = v3;
      unint64_t v139 = v17;
      unint64_t v3 = sub_1A8A77938();
      unint64_t v14 = v88;
      unint64_t v17 = v89;
      unint64_t v33 = v90;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v11 = (uint64_t *)(v14 >> 14);
      unint64_t v86 = (uint64_t *)(v3 >> 14);
    }
    v137 = v86;
    if (v86 == v11) {
      goto LABEL_134;
    }
    v136 = (uint64_t *)v85;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (sub_1A8A77928() == 93 && v91 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_84:
      swift_bridgeObjectRelease();
      goto LABEL_85;
    }
    char v92 = sub_1A8A78588();
    swift_bridgeObjectRelease();
    if (v92) {
      goto LABEL_84;
    }
    if (v11 == (uint64_t *)((unint64_t)sub_1A8A778E8() >> 14)) {
      goto LABEL_133;
    }
    if (sub_1A8A77928() != 93 || v108 != 0xE100000000000000)
    {
      unint64_t v138 = v15;
      while (1)
      {
        char v109 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        if (v109) {
          goto LABEL_84;
        }
        if (v11 == (uint64_t *)((unint64_t)sub_1A8A778E8() >> 14)) {
          goto LABEL_133;
        }
        if (sub_1A8A77928() == 93 && v110 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_85:
    unint64_t v93 = (unint64_t)sub_1A8A778E8() >> 14;
    if ((unint64_t)v11 < v93) {
      goto LABEL_134;
    }
    unint64_t v3 = sub_1A8A77938();
    unint64_t v95 = v94;
    unint64_t v7 = v96;
    unint64_t v9 = v97;
    uint64_t result = swift_bridgeObjectRelease();
    if (v93 < (unint64_t)v136) {
      goto LABEL_136;
    }
    uint64_t v98 = sub_1A8A77938();
    unint64_t v140 = v99;
    unint64_t v141 = v98;
    uint64_t v101 = v100;
    uint64_t v103 = v102;
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v11 = &qword_1E9746000;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v10 = sub_1A89020E8(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v105 = *((void *)v10 + 2);
    unint64_t v104 = *((void *)v10 + 3);
    if (v105 >= v104 >> 1) {
      unint64_t v10 = sub_1A89020E8((char *)(v104 > 1), v105 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v105 + 1;
    unint64_t v106 = &v10[32 * v105];
    unint64_t v107 = v140;
    *((void *)v106 + 4) = v141;
    *((void *)v106 + 5) = v107;
    *((void *)v106 + 6) = v101;
    *((void *)v106 + 7) = v103;
    swift_bridgeObjectRelease();
    int v130 = v131;
    unint64_t v2 = v135;
    unint64_t v5 = v95;
  }
  while (1)
  {
    sub_1A8A77928();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v33 = sub_1A8A778E8();
    swift_bridgeObjectRelease();
    if (v27 < v33 >> 14)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      swift_bridgeObjectRelease();
      goto LABEL_134;
    }
    unint64_t v3 = sub_1A8A77938();
    unint64_t v17 = v57;
    unint64_t v14 = v58;
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v15 = v60;
    unint64_t v27 = v17 >> 14;
    if (v17 >> 14 == v3 >> 14) {
      break;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A77928();
    swift_bridgeObjectRelease();
    char v61 = sub_1A8A76268();
    swift_bridgeObjectRelease();
    if ((v61 & 1) == 0) {
      goto LABEL_10;
    }
  }
  unint64_t v12 = v17;
LABEL_13:
  if (v11[370] != -1) {
    swift_once();
  }
  unint64_t v11 = (uint64_t *)*((void *)off_1E9746B88 + 2);
  v136 = (uint64_t *)(v12 >> 14);
  v137 = (uint64_t *)(v3 >> 14);
  unint64_t v10 = (char *)qword_1E9746B50;
  unint64_t v138 = v15;
  unint64_t v139 = v12;
  unint64_t v140 = v14;
  unint64_t v141 = v3;
  if (!v11)
  {
LABEL_47:
    if (qword_1E9746B80 != -1) {
      swift_once();
    }
    unint64_t v11 = (uint64_t *)*((void *)off_1E9746B78 + 2);
    if (v11)
    {
      uint64_t v133 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      unint64_t v3 = v133 + 40;
      do
      {
        unint64_t v33 = *(void *)(v3 - 8);
        uint64_t v62 = *(void *)v3;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A76778();
        unint64_t v63 = sub_1A8A77908();
        if (v64)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v17 = v63;
          unint64_t v14 = v63 >> 14;
          if (v63 >> 14 < (unint64_t)v137) {
            goto LABEL_123;
          }
          unint64_t v144 = v141;
          unint64_t v145 = v12;
          unint64_t v146 = v140;
          unint64_t v147 = v15;
          unint64_t v142 = v33;
          uint64_t v143 = v62;
          uint64_t v65 = qword_1E9746B68;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if (v65 != -1) {
            swift_once();
          }
          uint64_t v66 = sub_1A8A74CE8();
          uint64_t v67 = __swift_project_value_buffer_0(v66, (uint64_t)qword_1E9746B50);
          uint64_t v68 = *(void *)(v66 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v2, v67, v66);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v2, 0, 1, v66);
          sub_1A88FD510();
          sub_1A88BFD94();
          unint64_t v33 = sub_1A8A77A58();
          sub_1A88FD564((uint64_t)v2);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v15 = v138;
          unint64_t v12 = v139;
          if (!v33)
          {
            if ((unint64_t)v136 < v14) {
              goto LABEL_125;
            }
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            uint64_t v69 = sub_1A8A77938();
            unint64_t v71 = v70;
            unint64_t v73 = v72;
            unint64_t v75 = v74;
            swift_bridgeObjectRelease();
            unint64_t v144 = v69;
            unint64_t v145 = v71;
            unint64_t v146 = v73;
            unint64_t v147 = v75;
            sub_1A88FBCD8();
            unint64_t v14 = v145;
            unint64_t v10 = (char *)(v145 >> 14);
            if (v145 >> 14 != v144 >> 14)
            {
              unint64_t v17 = sub_1A8A77928();
              unint64_t v33 = v76;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              unint64_t v77 = sub_1A8A778E8();
              swift_bridgeObjectRelease();
              if ((unint64_t)v10 < v77 >> 14) {
                goto LABEL_131;
              }
              uint64_t v78 = sub_1A8A77938();
              unint64_t v5 = v79;
              unint64_t v81 = v80;
              unint64_t v9 = v82;
              swift_bridgeObjectRelease();
              if (v17 == 58 && v33 == 0xE100000000000000)
              {
                unint64_t v3 = v78;
                unint64_t v7 = v81;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v2 = v135;
LABEL_70:
                swift_bridgeObjectRelease();
                int v131 = v130;
                unint64_t v10 = v132;
                unint64_t v11 = &qword_1E9746000;
                goto LABEL_2;
              }
              char v83 = sub_1A8A78588();
              unint64_t v2 = v135;
              if (v83)
              {
                unint64_t v3 = v78;
                unint64_t v7 = v81;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_70;
              }
              unint64_t v134 = v5;
              unint64_t v15 = v138;
              if (v17 == 10140911 && v33 == 0xA300000000000000)
              {
                unint64_t v3 = v78;
                unint64_t v7 = v81;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_73:
                swift_bridgeObjectRelease();
                int v131 = v130;
                unint64_t v10 = v132;
                unint64_t v11 = &qword_1E9746000;
                unint64_t v5 = v134;
                goto LABEL_2;
              }
              char v84 = sub_1A8A78588();
              swift_bridgeObjectRelease();
              if (v84)
              {
                unint64_t v3 = v78;
                unint64_t v7 = v81;
                swift_bridgeObjectRelease();
                goto LABEL_73;
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v10 = (char *)qword_1E9746B50;
            unint64_t v12 = v139;
          }
        }
        v3 += 16;
        unint64_t v11 = (uint64_t *)((char *)v11 - 1);
        unint64_t v14 = v140;
      }
      while (v11);
      swift_bridgeObjectRelease();
      unint64_t v3 = v141;
    }
    unint64_t v17 = v14;
    unint64_t v14 = v12;
    unint64_t v33 = v15;
    unint64_t v10 = v132;
    unint64_t v11 = v136;
    goto LABEL_105;
  }
  uint64_t v133 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v3 = v133 + 40;
  while (2)
  {
    unint64_t v33 = *(void *)(v3 - 8);
    uint64_t v32 = *(void *)v3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A76778();
    unint64_t v34 = sub_1A8A77908();
    if (v35)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      v3 += 16;
      unint64_t v11 = (uint64_t *)((char *)v11 - 1);
      unint64_t v14 = v140;
      if (!v11)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v141;
        goto LABEL_47;
      }
      continue;
    }
    break;
  }
  unint64_t v17 = v34;
  unint64_t v14 = v34 >> 14;
  if (v34 >> 14 >= (unint64_t)v137)
  {
    unint64_t v144 = v141;
    unint64_t v145 = v12;
    unint64_t v146 = v140;
    unint64_t v147 = v15;
    unint64_t v142 = v33;
    uint64_t v143 = v32;
    uint64_t v36 = qword_1E9746B68;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1A8A74CE8();
    uint64_t v38 = __swift_project_value_buffer_0(v37, (uint64_t)qword_1E9746B50);
    uint64_t v39 = *(void *)(v37 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v2, v38, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v2, 0, 1, v37);
    sub_1A88FD510();
    sub_1A88BFD94();
    unint64_t v33 = sub_1A8A77A58();
    sub_1A88FD564((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v15 = v138;
    unint64_t v12 = v139;
    if (!v33)
    {
      if ((unint64_t)v136 < v14) {
        goto LABEL_124;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v40 = sub_1A8A77938();
      unint64_t v42 = v41;
      unint64_t v44 = v43;
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      unint64_t v144 = v40;
      unint64_t v145 = v42;
      unint64_t v146 = v44;
      unint64_t v147 = v46;
      sub_1A88FBCD8();
      unint64_t v14 = v145;
      unint64_t v10 = (char *)(v145 >> 14);
      if (v145 >> 14 != v144 >> 14)
      {
        unint64_t v17 = sub_1A8A77928();
        unint64_t v33 = v47;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        unint64_t v48 = sub_1A8A778E8();
        swift_bridgeObjectRelease();
        if ((unint64_t)v10 < v48 >> 14)
        {
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        uint64_t v49 = sub_1A8A77938();
        unint64_t v5 = v50;
        unint64_t v52 = v51;
        unint64_t v9 = v53;
        swift_bridgeObjectRelease();
        if (v17 == 58 && v33 == 0xE100000000000000)
        {
          unint64_t v3 = v49;
          unint64_t v7 = v52;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v2 = v135;
LABEL_41:
          swift_bridgeObjectRelease();
          int v130 = v131;
          unint64_t v10 = v132;
          unint64_t v11 = &qword_1E9746000;
          goto LABEL_3;
        }
        char v54 = sub_1A8A78588();
        unint64_t v2 = v135;
        if (v54)
        {
          unint64_t v3 = v49;
          unint64_t v7 = v52;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
        unint64_t v134 = v5;
        unint64_t v15 = v138;
        if (v17 == 10140911 && v33 == 0xA300000000000000)
        {
          unint64_t v3 = v49;
          unint64_t v7 = v52;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_44:
          swift_bridgeObjectRelease();
          int v130 = v131;
          unint64_t v10 = v132;
          unint64_t v11 = &qword_1E9746000;
          unint64_t v5 = v134;
          goto LABEL_3;
        }
        char v55 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        if (v55)
        {
          unint64_t v3 = v49;
          unint64_t v7 = v52;
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v10 = (char *)qword_1E9746B50;
      unint64_t v12 = v139;
    }
    goto LABEL_18;
  }
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_134:
  swift_bridgeObjectRelease();
LABEL_105:
  if (v137 != v11)
  {
    do
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A77928();
      swift_bridgeObjectRelease();
      char v111 = sub_1A8A76268();
      swift_bridgeObjectRelease();
      if ((v111 & 1) == 0) {
        break;
      }
      sub_1A8A77928();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      unint64_t v112 = sub_1A8A778E8();
      swift_bridgeObjectRelease();
      if ((unint64_t)v11 < v112 >> 14)
      {
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      unint64_t v3 = sub_1A8A77938();
      unint64_t v14 = v113;
      unint64_t v17 = v114;
      unint64_t v116 = v115;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v33 = v116;
      unint64_t v11 = (uint64_t *)(v14 >> 14);
    }
    while (v14 >> 14 != v3 >> 14);
  }
  for (; (v3 ^ v14) >= 0x4000; unint64_t v33 = v121)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A778F8();
    sub_1A8A77928();
    swift_bridgeObjectRelease();
    char v117 = sub_1A8A76268();
    swift_bridgeObjectRelease();
    if ((v117 & 1) == 0) {
      break;
    }
    if (v3 >> 14 == v14 >> 14) {
      goto LABEL_128;
    }
    sub_1A8A778F8();
    sub_1A8A77928();
    if (v3 >> 14 > (unint64_t)sub_1A8A778F8() >> 14) {
      goto LABEL_129;
    }
    unint64_t v3 = sub_1A8A77938();
    unint64_t v14 = v118;
    unint64_t v17 = v119;
    unint64_t v121 = v120;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v122 = MEMORY[0x1AD0DF750](v3, v14, v17, v33);
  unint64_t v124 = v123;
  swift_bridgeObjectRelease();
  if (*((void *)v10 + 2))
  {
    uint64_t v125 = HIBYTE(v124) & 0xF;
    if ((v124 & 0x2000000000000000) == 0) {
      uint64_t v125 = v122 & 0xFFFFFFFFFFFFLL;
    }
    if (v125)
    {
      unint64_t v144 = (unint64_t)v10;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E3D8);
      sub_1A88FD4B4();
      sub_1A88FD510();
      uint64_t v126 = sub_1A8A76B28();
      unint64_t v128 = v127;
      swift_bridgeObjectRelease();
      unint64_t v144 = v126;
      unint64_t v145 = v128;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v144;
    }
    swift_bridgeObjectRelease();
    unint64_t v144 = (unint64_t)v10;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E3D8);
    sub_1A88FD4B4();
    sub_1A88FD510();
    uint64_t v122 = sub_1A8A76B28();
  }
  swift_bridgeObjectRelease();
  return v122;
}

unint64_t sub_1A88FD4B4()
{
  unint64_t result = qword_1E974E3E0;
  if (!qword_1E974E3E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E974E3D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3E0);
  }
  return result;
}

unint64_t sub_1A88FD510()
{
  unint64_t result = qword_1E9746BC8;
  if (!qword_1E9746BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9746BC8);
  }
  return result;
}

uint64_t sub_1A88FD564(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746198);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A88FD5C4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a2 - result;
  if (!result) {
    uint64_t v4 = 0;
  }
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = v4;
    *(void *)(a4 + 16) = result;
    *(void *)(a4 + 24) = a2;
    *(void *)(a4 + 32) = 0;
    *(void *)(a4 + 40) = v4;
    *(void *)(a4 + 48) = result;
    *(void *)(a4 + 56) = a2;
    *(unsigned char *)(a4 + 64) = a3;
  }
  return result;
}

unint64_t sub_1A88FD5F0(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6275732D6F747561;
      break;
    case 2:
      unint64_t result = 6513506;
      break;
    case 3:
      unint64_t result = 25443;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x2D746E65746E6F63;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0x2D746E65746E6F63;
      break;
    case 10:
      unint64_t result = 1702125924;
      break;
    case 11:
      unint64_t result = 1836020326;
      break;
    case 12:
      unint64_t result = 0x64692D7473696CLL;
      break;
    case 13:
      unint64_t result = 0x2D6567617373656DLL;
      break;
    case 14:
      unint64_t result = 0x7265762D656D696DLL;
      break;
    case 15:
      unint64_t result = 0x69726F6972702D78;
      break;
    case 16:
      unint64_t result = 0x6465766965636572;
      break;
    case 17:
      unint64_t result = 0x702D6E7275746572;
      break;
    case 18:
      unint64_t result = 0x7463656A627573;
      break;
    case 19:
      unint64_t result = 28532;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88FD834()
{
  char v1 = *v0;
  sub_1A8A78738();
  sub_1A88FD5F0(v1);
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  return sub_1A8A787C8();
}

uint64_t sub_1A88FD898()
{
  sub_1A88FD5F0(*v0);
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88FD8EC()
{
  char v1 = *v0;
  sub_1A8A78738();
  sub_1A88FD5F0(v1);
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  return sub_1A8A787C8();
}

uint64_t sub_1A88FD94C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A88FE978();
  *a1 = result;
  return result;
}

unint64_t sub_1A88FD97C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1A88FD5F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A88FD9A8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1A88FD5F0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1A88FD5F0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1A8A78588();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A88FDA34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v6 = (unsigned __int8 *)(a3 + 32);
    int64_t v7 = a2 - a1;
    do
    {
      unsigned int v12 = *v6++;
      uint64_t v11 = v12;
      unint64_t v13 = 0xD000000000000016;
      unint64_t v14 = 0x80000001A8B3E410;
      switch(v12)
      {
        case 1u:
          unint64_t v14 = 0xEE0064657474696DLL;
          unint64_t v13 = 0x6275732D6F747561;
          break;
        case 2u:
          unint64_t v14 = 0xE300000000000000;
          unint64_t v13 = 6513506;
          break;
        case 3u:
          unint64_t v14 = 0xE200000000000000;
          unint64_t v13 = 25443;
          break;
        case 4u:
          unint64_t v15 = "length";
          goto LABEL_11;
        case 5u:
          unint64_t v15 = "content-description";
LABEL_11:
          unint64_t v14 = (unint64_t)v15 | 0x8000000000000000;
          unint64_t v13 = 0xD000000000000013;
          break;
        case 6u:
          unint64_t v13 = 0x2D746E65746E6F63;
          goto LABEL_20;
        case 7u:
          unint64_t v13 = 0xD000000000000010;
          unint64_t v14 = 0x80000001A8B3E480;
          break;
        case 8u:
          unint64_t v13 = 0xD000000000000019;
          unint64_t v14 = 0x80000001A8B3E4A0;
          break;
        case 9u:
          unint64_t v14 = 0xEC00000065707974;
          unint64_t v13 = 0x2D746E65746E6F63;
          break;
        case 0xAu:
          unint64_t v14 = 0xE400000000000000;
          unint64_t v13 = 1702125924;
          break;
        case 0xBu:
          unint64_t v14 = 0xE400000000000000;
          unint64_t v13 = 1836020326;
          break;
        case 0xCu:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v13 = 0x64692D7473696CLL;
          break;
        case 0xDu:
          unint64_t v13 = 0x2D6567617373656DLL;
LABEL_20:
          unint64_t v14 = 0xEA00000000006469;
          break;
        case 0xEu:
          unint64_t v14 = 0xEC0000006E6F6973;
          unint64_t v13 = 0x7265762D656D696DLL;
          break;
        case 0xFu:
          unint64_t v14 = 0xEA00000000007974;
          unint64_t v13 = 0x69726F6972702D78;
          break;
        case 0x10u:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v13 = 0x6465766965636572;
          break;
        case 0x11u:
          unint64_t v14 = 0xEB00000000687461;
          unint64_t v13 = 0x702D6E7275746572;
          break;
        case 0x12u:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v13 = 0x7463656A627573;
          break;
        case 0x13u:
          unint64_t v14 = 0xE200000000000000;
          unint64_t v13 = 28532;
          break;
        default:
          break;
      }
      if ((v14 & 0x1000000000000000) != 0)
      {
        uint64_t v16 = sub_1A8A76848();
        swift_bridgeObjectRelease();
        if (a1) {
          goto LABEL_32;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if ((v14 & 0x2000000000000000) != 0) {
          uint64_t v16 = HIBYTE(v14) & 0xF;
        }
        else {
          uint64_t v16 = v13 & 0x7F7F7F7F7F7FLL;
        }
        if (a1)
        {
LABEL_32:
          if (v16 == v7) {
            goto LABEL_3;
          }
          goto LABEL_4;
        }
      }
      if (!v16)
      {
LABEL_3:
        unint64_t v8 = sub_1A88FD5F0(v11);
        char v10 = sub_1A88EC7CC(v8, v9, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
        swift_bridgeObjectRelease();
        if (v10) {
          return v11;
        }
      }
LABEL_4:
      --v3;
    }
    while (v3);
  }
  return 20;
}

uint64_t sub_1A88FDDA4(char *a1, char *a2)
{
  char v4 = sub_1A88C1C9C(0, (uint64_t)a1, (uint64_t)a2);
  char v5 = sub_1A88C1C9C(1, (uint64_t)a1, (uint64_t)a2);
  unsigned __int8 v6 = sub_1A88C1C9C(2, (uint64_t)a1, (uint64_t)a2);
  unsigned __int8 v7 = sub_1A88C1C9C(3, (uint64_t)a1, (uint64_t)a2);
  BOOL v8 = v4 == 120 && v5 == 45;
  int v9 = v8;
  if (v8 && v6 == 97 && v7 == 112)
  {
    char v10 = a1;
    uint64_t v11 = a2;
    uint64_t v12 = 0;
  }
  else
  {
    switch(v4)
    {
      case 'a':
        if (v5 != 117 || v6 != 116 || v7 != 111) {
          goto LABEL_48;
        }
        char v10 = a1;
        uint64_t v11 = a2;
        uint64_t v12 = 1;
        break;
      case 'b':
        if (v5 != 99 || v6 != 99 || v7) {
          goto LABEL_48;
        }
        char v10 = a1;
        uint64_t v11 = a2;
        uint64_t v12 = 2;
        break;
      case 'c':
        if (v5 == 111)
        {
          if (v6 == 110 && v7 == 116)
          {
            uint64_t result = sub_1A88FDA34(a1, a2, (uint64_t)&unk_1EFE8E4D8);
            goto LABEL_54;
          }
        }
        else if (v5 == 99 && !(v6 | v7))
        {
          char v10 = a1;
          uint64_t v11 = a2;
          uint64_t v12 = 3;
          break;
        }
        goto LABEL_48;
      case 'd':
        if (v5 != 97 || v6 != 116 || v7 != 101) {
          goto LABEL_48;
        }
        char v10 = a1;
        uint64_t v11 = a2;
        uint64_t v12 = 10;
        break;
      case 'f':
        if (v5 != 114 || v6 != 111 || v7 != 109) {
          goto LABEL_48;
        }
        char v10 = a1;
        uint64_t v11 = a2;
        uint64_t v12 = 11;
        break;
      case 'l':
        if (v5 != 105 || v6 != 115 || v7 != 116) {
          goto LABEL_48;
        }
        char v10 = a1;
        uint64_t v11 = a2;
        uint64_t v12 = 12;
        break;
      case 'm':
        if (v5 == 105)
        {
          if (v6 == 109 && v7 == 101)
          {
            char v10 = a1;
            uint64_t v11 = a2;
            uint64_t v12 = 14;
            break;
          }
        }
        else if (v5 == 101 && v6 == 115 && v7 == 115)
        {
          char v10 = a1;
          uint64_t v11 = a2;
          uint64_t v12 = 13;
          break;
        }
LABEL_48:
        if (v6 != 112) {
          int v9 = 0;
        }
        if (v9 == 1 && v7 == 114)
        {
          char v10 = a1;
          uint64_t v11 = a2;
          uint64_t v12 = 15;
          break;
        }
        if (v4 == 116)
        {
          if (v5 == 111 && !v6 && !v7)
          {
            char v10 = a1;
            uint64_t v11 = a2;
            uint64_t v12 = 19;
            break;
          }
          return 20;
        }
        if (v4 == 115)
        {
          if (v5 == 117 && v6 == 98 && v7 == 106)
          {
            char v10 = a1;
            uint64_t v11 = a2;
            uint64_t v12 = 18;
            break;
          }
          return 20;
        }
        if (v4 != 114 || v5 != 101) {
          return 20;
        }
        if (v6 != 116)
        {
          if (v6 == 99 && v7 == 101)
          {
            char v10 = a1;
            uint64_t v11 = a2;
            uint64_t v12 = 16;
            break;
          }
          return 20;
        }
        if (v7 != 117) {
          return 20;
        }
        char v10 = a1;
        uint64_t v11 = a2;
        uint64_t v12 = 17;
        break;
      default:
        goto LABEL_48;
    }
  }
  uint64_t result = sub_1A88C07FC(v10, v11, v12);
LABEL_54:
  if (result == 20) {
    return 20;
  }
  return result;
}

char *sub_1A88FE1A8@<X0>(char *result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  unsigned __int8 v7 = result;
  if (!result)
  {
    if (!a3)
    {
      uint64_t v11 = 0;
      uint64_t v14 = 0;
      a2 = 0;
      goto LABEL_13;
    }
    goto LABEL_47;
  }
  char v10 = &result[a3];
  uint64_t v11 = result;
  if (!a3) {
    goto LABEL_9;
  }
  uint64_t v12 = a3 - 1;
  if (__OFSUB__(a3, 1))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v12 < 0 || v12 >= a3)
  {
LABEL_49:
    __break(1u);
    JUMPOUT(0x1A88FE4E4);
  }
  unint64_t v13 = &result[v12];
  uint64_t v11 = &result[a3];
  if (result[v12] != 58 || (uint64_t result = (char *)sub_1A88FDDA4(result, v13), v11 = v13, result == 20))
  {
LABEL_9:
    if (a2 - v7 >= a3)
    {
      uint64_t v14 = (uint64_t)&v7[a3];
LABEL_13:
      uint64_t v15 = 0;
      unint64_t v16 = a4 & 1 | 0xA000000000000000;
      char v10 = v7;
      goto LABEL_14;
    }
    goto LABEL_46;
  }
  if (a2 - v7 < a3)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v11 = a2;
  unint64_t v16 = 0x1000000000000000;
  uint64_t v14 = 0;
  a2 = 0;
  uint64_t v15 = 0;
  switch((char)result)
  {
    case 1:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x800000000000000;
      break;
    case 2:
      break;
    case 3:
      uint64_t v14 = 0;
      a2 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 0x1800000000000000;
      break;
    case 4:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x2000000000000000;
      break;
    case 5:
      uint64_t result = (char *)sub_1A88EEEF8((unint64_t)&v7[a3], (uint64_t)v11, a4 & 1);
      a2 = (char *)MEMORY[0x1E4FBC860];
      if (v18)
      {
        unint64_t v19 = result;
        unint64_t v20 = (char *)v17;
        uint64_t v21 = v18;
        unsigned __int8 v22 = sub_1A88BE150((uint64_t)result, v17);
        uint64_t v14 = v22 == 3;
        if (v22 == 3) {
          char v10 = v19;
        }
        else {
          char v10 = (char *)v22;
        }
        if (v22 == 3) {
          uint64_t v11 = v20;
        }
        else {
          uint64_t v11 = 0;
        }
        v23[0] = a2;
        sub_1A88EBFC0(v21, v23);
        uint64_t result = (char *)swift_bridgeObjectRelease();
        a2 = v23[0];
      }
      else
      {
        uint64_t v14 = 1;
      }
      uint64_t v15 = 0;
      unint64_t v16 = 0x2800000000000000;
      break;
    case 6:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x3000000000000000;
      break;
    case 7:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x3800000000000000;
      break;
    case 8:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x4000000000000000;
      break;
    case 9:
      uint64_t result = (char *)sub_1A88C3A98((unint64_t)&v7[a3], (uint64_t)v11, a4 & 1, (uint64_t)v23);
      char v10 = v23[0];
      uint64_t v11 = v23[1];
      uint64_t v14 = (uint64_t)v23[2];
      a2 = v23[3];
      uint64_t v15 = v25;
      unint64_t v16 = v24 | 0x4800000000000000;
      break;
    case 10:
      uint64_t v14 = 0;
      a2 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 0x5000000000000000;
      break;
    case 11:
      uint64_t v14 = 0;
      a2 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 0x5800000000000000;
      break;
    case 12:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x6000000000000000;
      break;
    case 13:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x6800000000000000;
      break;
    case 14:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x7000000000000000;
      break;
    case 15:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x7800000000000000;
      break;
    case 16:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x8000000000000000;
      break;
    case 17:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x8800000000000000;
      break;
    case 18:
      a2 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      unint64_t v16 = 0x9000000000000000;
      break;
    case 19:
      uint64_t v14 = 0;
      a2 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 0x9800000000000000;
      break;
    default:
      a2 = 0;
      unint64_t v16 = 0;
      uint64_t v15 = 0;
      uint64_t v14 = a4 & 1;
      break;
  }
LABEL_14:
  *a5 = v10;
  a5[1] = v11;
  a5[2] = v14;
  a5[3] = a2;
  a5[4] = v16;
  a5[5] = v15;
  return result;
}

ValueMetadata *type metadata accessor for UnsafeHeader.Value()
{
  return &type metadata for UnsafeHeader.Value;
}

uint64_t destroy for UnsafeHeader(uint64_t a1)
{
  return sub_1A88CFF94(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
}

uint64_t *initializeWithCopy for UnsafeHeader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  sub_1A88D69DC(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return a1;
}

uint64_t *assignWithCopy for UnsafeHeader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  sub_1A88D69DC(*a2, v4, v5, v6, v7);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  unint64_t v13 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  sub_1A88CFF94(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t *assignWithTake for UnsafeHeader(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  unint64_t v7 = a1[4];
  long long v8 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v8;
  *((_OWORD *)a1 + 2) = a2[2];
  sub_1A88CFF94(v3, v5, v4, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnsafeHeader(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 32) >> 5) & 0xFFFFFFF8 | (*(void *)(a1 + 32) >> 1) & 7;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for UnsafeHeader(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = (32 * -a2) & 0x1FFFFFFF00 | (2 * (-a2 & 7));
      *(void *)(a1 + 40) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A88FE748(uint64_t a1)
{
  return *(void *)(a1 + 32) >> 59;
}

uint64_t sub_1A88FE754(uint64_t result)
{
  *(void *)(result + 32) &= 0x7FFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A88FE764(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = *(void *)(result + 32) & 0xF1 | (a2 << 59);
  return result;
}

ValueMetadata *type metadata accessor for UnsafeHeader()
{
  return &type metadata for UnsafeHeader;
}

uint64_t getEnumTagSinglePayload for UnsafeHeader.Field.Known(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UnsafeHeader.Field.Known(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *double result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88FE8E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeHeader.Field.Known()
{
  return &type metadata for UnsafeHeader.Field.Known;
}

unint64_t sub_1A88FE924()
{
  unint64_t result = qword_1E974E3E8;
  if (!qword_1E974E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E3E8);
  }
  return result;
}

uint64_t sub_1A88FE978()
{
  unint64_t v0 = sub_1A8A78618();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for UnsafeHeader.Field()
{
  return &type metadata for UnsafeHeader.Field;
}

uint64_t sub_1A88FE9DC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 64);
  sub_1A88DC6D8(*(unsigned char *)(v0 + 64), v1, v2, v3);
  if (v7)
  {
LABEL_5:
    uint64_t v8 = v2;
    if (v2 < v1)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    goto LABEL_6;
  }
  uint64_t v8 = v6;
  if (v6 < v1)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (v2 < v6)
  {
    __break(1u);
    goto LABEL_5;
  }
LABEL_6:
  *(void *)(v0 + 32) = v8;
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v4;
  sub_1A88DC91C(0x3Au, v1, v8, v3);
  if (v10) {
    return 0;
  }
  uint64_t v11 = v9;
  if (v8 != v2)
  {
    uint64_t v13 = v3;
    while (2)
    {
      uint64_t v14 = v2 - v8;
      if (v2 > v8)
      {
        uint64_t v15 = v3 + v8;
        int v16 = *(unsigned __int8 *)(v3 + v8);
        if (v16 == 32 || v16 == 9)
        {
          switch(v5)
          {
            case 1:
              uint64_t v18 = v2;
              if (!v3) {
                goto LABEL_61;
              }
              unsigned __int8 v22 = (char *)memchr((void *)(v3 + v8), 13, v2 - v8);
              uint64_t v18 = v2;
              if (!v22) {
                goto LABEL_61;
              }
              uint64_t v18 = v2;
              unint64_t v23 = &v22[-v15];
              if ((uint64_t)&v22[-v15] < 0) {
                goto LABEL_61;
              }
              unsigned __int8 v24 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_80;
              }
              uint64_t v18 = v2;
              if (v14 < (uint64_t)v24) {
                goto LABEL_61;
              }
              if (__OFADD__(v23, v8)) {
                goto LABEL_86;
              }
              uint64_t v18 = (uint64_t)&v24[v8];
              if (__OFADD__(v24, v8)) {
                goto LABEL_87;
              }
              if ((uint64_t)v24 < (uint64_t)v23 || v18 < (uint64_t)&v23[v8]) {
                goto LABEL_88;
              }
              goto LABEL_59;
            case 2:
              uint64_t v18 = v2;
              if (!v3) {
                goto LABEL_61;
              }
              uint64_t v25 = (char *)memchr((void *)(v3 + v8), 10, v2 - v8);
              uint64_t v18 = v2;
              if (!v25) {
                goto LABEL_61;
              }
              uint64_t v18 = v2;
              unint64_t v26 = &v25[-v15];
              if ((uint64_t)&v25[-v15] < 0) {
                goto LABEL_61;
              }
              unint64_t v27 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_81;
              }
              uint64_t v18 = v2;
              if (v14 < (uint64_t)v27) {
                goto LABEL_61;
              }
              if (__OFADD__(v26, v8)) {
                goto LABEL_89;
              }
              uint64_t v18 = (uint64_t)&v27[v8];
              if (__OFADD__(v27, v8)) {
                goto LABEL_90;
              }
              if ((uint64_t)v27 < (uint64_t)v26 || v18 < (uint64_t)&v26[v8]) {
                goto LABEL_91;
              }
              goto LABEL_59;
            case 3:
              uint64_t v18 = v2;
              if (!v3) {
                goto LABEL_61;
              }
              uint64_t v28 = (char *)memchr((void *)(v3 + v8), 10, v2 - v8);
              uint64_t v18 = v2;
              if (!v28) {
                goto LABEL_61;
              }
              uint64_t v18 = v2;
              uint64_t v29 = &v28[-v15];
              if ((uint64_t)&v28[-v15] < 0) {
                goto LABEL_61;
              }
              uint64_t v30 = v29 + 1;
              if (__OFADD__(v29, 1)) {
                goto LABEL_82;
              }
              uint64_t v18 = v2;
              if (v14 < (uint64_t)v30) {
                goto LABEL_61;
              }
              uint64_t v31 = (uint64_t)&v29[v8];
              if (__OFADD__(v29, v8)) {
                goto LABEL_92;
              }
              uint64_t v18 = (uint64_t)&v30[v8];
              if (__OFADD__(v30, v8)) {
                goto LABEL_93;
              }
              if ((uint64_t)v30 < (uint64_t)v29 || v18 < v31) {
                goto LABEL_94;
              }
              if (v8 < v31 && v31 > v2) {
                goto LABEL_95;
              }
LABEL_59:
              if (v18 < v8) {
                goto LABEL_74;
              }
              if (v2 < v18) {
                goto LABEL_75;
              }
LABEL_61:
              *(void *)(v0 + 32) = v18;
              *(void *)(v0 + 40) = v2;
              *(void *)(v0 + 48) = v3;
              *(void *)(v0 + 56) = v4;
              if (v18 < v1) {
                goto LABEL_71;
              }
              if (v1 < *(void *)v0) {
                goto LABEL_72;
              }
              if (*(void *)(v0 + 8) < v18) {
                goto LABEL_73;
              }
              uint64_t v13 = *(void *)(v0 + 16);
              uint64_t v8 = v18;
              if (v18 == v2) {
                break;
              }
              continue;
            default:
              uint64_t v18 = v2;
              if (!v3) {
                goto LABEL_61;
              }
              unint64_t v19 = (char *)memmem((const void *)(v3 + v8), v2 - v8, "\r\n", 2uLL);
              uint64_t v18 = v2;
              if (!v19) {
                goto LABEL_61;
              }
              uint64_t v18 = v2;
              unint64_t v20 = &v19[-v15];
              if ((uint64_t)&v19[-v15] < 0) {
                goto LABEL_61;
              }
              uint64_t v21 = v20 + 2;
              if (__OFADD__(v20, 2)) {
                goto LABEL_79;
              }
              uint64_t v18 = v2;
              if (v14 < (uint64_t)v21) {
                goto LABEL_61;
              }
              if (__OFADD__(v20, v8)) {
                goto LABEL_83;
              }
              uint64_t v18 = (uint64_t)&v21[v8];
              if (__OFADD__(v21, v8)) {
                goto LABEL_84;
              }
              if ((uint64_t)v21 < (uint64_t)v20 || v18 < (uint64_t)&v20[v8]) {
                goto LABEL_85;
              }
              goto LABEL_59;
          }
        }
        uint64_t v3 = v13;
        goto LABEL_66;
      }
      break;
    }
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
LABEL_66:
  if (__OFSUB__(v11, v1))
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
    JUMPOUT(0x1A88FED7CLL);
  }
  if (v3) {
    return v3 + v1;
  }
  else {
    return 0;
  }
}

uint64_t WatchOSHeaderInfo.from.getter()
{
  uint64_t v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t WatchOSHeaderInfo.from.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*WatchOSHeaderInfo.from.modify())(void)
{
  return nullsub_1;
}

uint64_t WatchOSHeaderInfo.to.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t WatchOSHeaderInfo.to.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

double (*WatchOSHeaderInfo.to.modify())(void)
{
  return nullsub_1;
}

uint64_t WatchOSHeaderInfo.cc.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t WatchOSHeaderInfo.cc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

double (*WatchOSHeaderInfo.cc.modify())(void)
{
  return nullsub_1;
}

uint64_t WatchOSHeaderInfo.bcc.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t WatchOSHeaderInfo.bcc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

double (*WatchOSHeaderInfo.bcc.modify())(void)
{
  return nullsub_1;
}

uint64_t WatchOSHeaderInfo.subject.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t WatchOSHeaderInfo.subject.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

double (*WatchOSHeaderInfo.subject.modify())(void)
{
  return nullsub_1;
}

uint64_t WatchOSHeaderInfo.messageIDHeader.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t WatchOSHeaderInfo.messageIDHeader.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

double (*WatchOSHeaderInfo.messageIDHeader.modify())(void)
{
  return nullsub_1;
}

uint64_t WatchOSHeaderInfo.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchOSHeaderInfo() + 40);
  uint64_t v4 = sub_1A8A74C38();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WatchOSHeaderInfo()
{
  uint64_t result = qword_1E974E3F0;
  if (!qword_1E974E3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WatchOSHeaderInfo.date.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchOSHeaderInfo() + 40);
  uint64_t v4 = sub_1A8A74C38();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

double (*WatchOSHeaderInfo.date.modify())(void)
{
  return nullsub_1;
}

uint64_t WatchOSHeaderInfo.init(from:to:cc:bcc:subject:messageIDHeader:date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  uint64_t v11 = (char *)a9 + *(int *)(type metadata accessor for WatchOSHeaderInfo() + 40);
  uint64_t v12 = sub_1A8A74C38();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  return v13(v11, a11, v12);
}

uint64_t WatchOSHeaderInfo.init(message:cache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E340);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v20[-v10];
  uint64_t v12 = type metadata accessor for WatchOSHeaderInfo();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = &v20[-v17];
  *uint64_t v18 = 0;
  v18[1] = 0;
  sub_1A88E218C(a1, (uint64_t (*)(void))sub_1A88FF4B4, a2, (uint64_t)v11);
  sub_1A88FF5E8(a1, type metadata accessor for Message);
  swift_release();
  sub_1A8529F8C((uint64_t)v11, (uint64_t)v8, &qword_1E974E340);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_1A8511B00((uint64_t)v8, &qword_1E974E340);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a3, 1, 1, v12);
  }
  else
  {
    sub_1A88FF520((uint64_t)v8, (uint64_t)v15);
    swift_bridgeObjectRelease();
    sub_1A88FF520((uint64_t)v15, (uint64_t)v18);
    sub_1A88FF584((uint64_t)v18, a3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
    return sub_1A88FF5E8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WatchOSHeaderInfo);
  }
}

uint64_t sub_1A88FF4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  swift_retain();
  return sub_1A88FFDE0(a1, a2, a3, a4, v5, a5);
}

uint64_t sub_1A88FF520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchOSHeaderInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88FF584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchOSHeaderInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88FF5E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for WatchOSHeaderInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = (char *)a1 + v9;
    a1[8] = a2[8];
    uint64_t v10 = sub_1A8A74C38();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v11(v15, v14, v10);
  }
  return v3;
}

uint64_t destroy for WatchOSHeaderInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1A8A74C38();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for WatchOSHeaderInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v12 = (char *)a2 + v8;
  uint64_t v13 = (char *)a1 + v8;
  a1[8] = a2[8];
  uint64_t v9 = sub_1A8A74C38();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v10(v13, v12, v9);
  return a1;
}

void *assignWithCopy for WatchOSHeaderInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A74C38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for WatchOSHeaderInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1A8A74C38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for WatchOSHeaderInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1A8A74C38();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchOSHeaderInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88FFBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A8A74C38();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WatchOSHeaderInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88FFC84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A8A74C38();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A88FFD2C()
{
  uint64_t result = sub_1A8A74C38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A88FFDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v222 = a4;
  v223 = a5;
  v218 = a6;
  uint64_t v262 = *MEMORY[0x1E4F143B8];
  uint64_t v217 = sub_1A8A74C38();
  uint64_t v221 = *(void *)(v217 - 8);
  MEMORY[0x1F4188790](v217);
  uint64_t v10 = (char *)&v201 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741358);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v201 - v15;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v201 - v18;
  MEMORY[0x1F4188790](v20);
  unsigned __int8 v22 = (char *)&v201 - v21;
  int v23 = sub_1A88E7068(3, a1, a2, a3, v222);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  LODWORD(v216) = v23;
  uint64_t v222 = 0;
  v209 = v19;
  v210 = v16;
  uint64_t v204 = v11;
  v219 = v13;
  v220 = v10;
  uint64_t v28 = v221;
  v206 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v221 + 56);
  uint64_t v207 = v221 + 56;
  v206(v22, 1, 1, v217);
  if (v27 < 0) {
    goto LABEL_255;
  }
  uint64_t v29 = (uint64_t)v22;
  if (v25) {
    uint64_t v30 = v25 + v27;
  }
  else {
    uint64_t v30 = 0;
  }
  sub_1A88FD5C4(v25, v30, v216, (uint64_t)&v230);
  uint64_t v31 = (char *)sub_1A88FE9DC();
  if (v34 == 2)
  {
    swift_release();
    char v35 = v218;
LABEL_230:
    sub_1A8511B00(v29, &qword_1E9741358);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_231:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_232;
  }
  v208 = v22;
  uint64_t v36 = 0;
  uint64_t v212 = 0;
  uint64_t v213 = 0;
  uint64_t v211 = 0;
  uint64_t v202 = 0;
  uint64_t v203 = 0;
  v205 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  v201 = (void (**)(char *, uint64_t, uint64_t))(v28 + 32);
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v215 = MEMORY[0x1E4FBC860];
  uint64_t v216 = MEMORY[0x1E4FBC860];
  uint64_t v39 = (uint64_t)v219;
  uint64_t v38 = v220;
  uint64_t v40 = v222;
  unint64_t v41 = v223;
  while (2)
  {
    sub_1A88FE1A8(v31, v32, v33, v34 & 1, v231);
    sub_1A88C69F8((uint64_t)v231, (uint64_t)&v251);
    switch(v253 >> 59)
    {
      case 2uLL:
        uint64_t v222 = v36;
        v253 &= 0x7FFFFFFFFFFFFFFuLL;
        uint64_t v43 = v251;
        uint64_t v44 = v252;
        swift_bridgeObjectRelease();
        if (v43) {
          uint64_t v45 = v44 - v43;
        }
        else {
          uint64_t v45 = 0;
        }
        if (v45 < 0) {
          goto LABEL_251;
        }
        uint64_t v221 = v37;
        uint64_t v46 = sub_1A88FA8C0(0, v45, v43, v44);
        if (v48) {
          uint64_t v49 = v48 + v47;
        }
        else {
          uint64_t v49 = 0;
        }
        if (v48) {
          uint64_t v50 = v48 + v46;
        }
        else {
          uint64_t v50 = 0;
        }
        int64_t v225 = 0;
        unint64_t v226 = 0xE000000000000000;
        uint64_t v51 = v49 - v50;
        if (v50) {
          uint64_t v52 = v49 - v50;
        }
        else {
          uint64_t v52 = 0;
        }
        swift_retain();
        uint64_t isStackAllocationSafe = MEMORY[0x1AD0DF770](v52);
        char v224 = 0;
        if (v50)
        {
          if (v51 < 0) {
            goto LABEL_260;
          }
          if (v51 >= 1025)
          {
            uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
            if ((isStackAllocationSafe & 1) == 0)
            {
              uint64_t v54 = swift_slowAlloc();
              v227 = (char *)v54;
              uint64_t v228 = v49 - v50;
              uint64_t v229 = 0;
              sub_1A88EABBC((int64_t)&v227, &v225, v50, v49, v223, &v224);
              MEMORY[0x1AD0E4D00](v54, -1, -1);
              goto LABEL_122;
            }
          }
        }
        else
        {
          uint64_t v51 = 0;
        }
        MEMORY[0x1F4188790](isStackAllocationSafe);
        v227 = (char *)&v201 - v120;
        uint64_t v228 = v51;
        uint64_t v229 = 0;
        sub_1A88EABBC((int64_t)&v227, &v225, v50, v49, v223, &v224);
        if (v40) {
          goto LABEL_264;
        }
LABEL_122:
        swift_release();
        unint64_t v121 = v226;
        uint64_t v122 = (void *)sub_1A8A76538();
        id v123 = IMAP2EmailCore_ECEmailAddressesFromHeader(v122);

        sub_1A88C59E4();
        unint64_t v124 = sub_1A8A76C68();

        if (v124 >> 62)
        {
          unint64_t v126 = v124;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          uint64_t v125 = sub_1A8A781B8();
        }
        else
        {
          uint64_t v125 = *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10);
          unint64_t v126 = v124;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        uint64_t v216 = v40;
        uint64_t v214 = v121;
        if (v125)
        {
          if (v125 < 1) {
            goto LABEL_257;
          }
          uint64_t v127 = 0;
          unint64_t v128 = v126;
          unint64_t v129 = v126 & 0xC000000000000001;
          int v130 = (char *)MEMORY[0x1E4FBC860];
          while (2)
          {
            if (v129) {
              id v131 = (id)MEMORY[0x1AD0E0F10](v127, v128);
            }
            else {
              id v131 = *(id *)(v128 + 8 * v127 + 32);
            }
            v132 = v131;
            uint64_t v133 = sub_1A88C4D38((uint64_t)v131, 0);

            uint64_t v134 = *(void *)(v133 + 16);
            int64_t v135 = *((void *)v130 + 2);
            int64_t v136 = v135 + v134;
            if (__OFADD__(v135, v134)) {
              goto LABEL_237;
            }
            char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v136 <= *((void *)v130 + 3) >> 1)
            {
              if (!*(void *)(v133 + 16))
              {
LABEL_127:
                if (v134) {
                  goto LABEL_240;
                }
LABEL_128:
                swift_bridgeObjectRelease();
                if (v125 == ++v127) {
                  goto LABEL_195;
                }
                continue;
              }
            }
            else
            {
              if (v135 <= v136) {
                int64_t v138 = v135 + v134;
              }
              else {
                int64_t v138 = v135;
              }
              int v130 = sub_1A8901C6C(isUniquelyReferenced_nonNull_native, v138, 1, v130);
              if (!*(void *)(v133 + 16)) {
                goto LABEL_127;
              }
            }
            break;
          }
          if ((*((void *)v130 + 3) >> 1) - *((void *)v130 + 2) < v134) {
            goto LABEL_244;
          }
          swift_arrayInitWithCopy();
          if (v134)
          {
            uint64_t v139 = *((void *)v130 + 2);
            BOOL v118 = __OFADD__(v139, v134);
            uint64_t v140 = v139 + v134;
            if (v118) {
              goto LABEL_247;
            }
            *((void *)v130 + 2) = v140;
          }
          goto LABEL_128;
        }
        int v130 = (char *)MEMORY[0x1E4FBC860];
LABEL_195:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        unint64_t v41 = v223;
        swift_retain();
        uint64_t v40 = v216;
        uint64_t v216 = sub_1A8902A54((uint64_t)v130, (uint64_t)v41);
        goto LABEL_208;
      case 3uLL:
        uint64_t v222 = v36;
        v253 &= 0x7FFFFFFFFFFFFFFuLL;
        uint64_t v56 = v251;
        uint64_t v57 = v252;
        swift_bridgeObjectRelease();
        if (v56) {
          uint64_t v58 = v57 - v56;
        }
        else {
          uint64_t v58 = 0;
        }
        if (v58 < 0) {
          goto LABEL_252;
        }
        uint64_t v221 = v37;
        uint64_t v59 = sub_1A88FA8C0(0, v58, v56, v57);
        if (v61) {
          uint64_t v62 = v61 + v60;
        }
        else {
          uint64_t v62 = 0;
        }
        if (v61) {
          uint64_t v63 = v61 + v59;
        }
        else {
          uint64_t v63 = 0;
        }
        int64_t v225 = 0;
        unint64_t v226 = 0xE000000000000000;
        uint64_t v64 = v62 - v63;
        if (v63) {
          uint64_t v65 = v62 - v63;
        }
        else {
          uint64_t v65 = 0;
        }
        swift_retain();
        uint64_t v66 = MEMORY[0x1AD0DF770](v65);
        char v224 = 0;
        if (v63)
        {
          if (v64 < 0) {
            goto LABEL_261;
          }
          if (v64 >= 1025)
          {
            uint64_t v66 = swift_stdlib_isStackAllocationSafe();
            if ((v66 & 1) == 0)
            {
              uint64_t v67 = swift_slowAlloc();
              v227 = (char *)v67;
              uint64_t v228 = v62 - v63;
              uint64_t v229 = 0;
              sub_1A88EABBC((int64_t)&v227, &v225, v63, v62, v223, &v224);
              MEMORY[0x1AD0E4D00](v67, -1, -1);
              goto LABEL_98;
            }
          }
        }
        else
        {
          uint64_t v64 = 0;
        }
        MEMORY[0x1F4188790](v66);
        v227 = (char *)&v201 - v98;
        uint64_t v228 = v64;
        uint64_t v229 = 0;
        sub_1A88EABBC((int64_t)&v227, &v225, v63, v62, v223, &v224);
        if (v40) {
          goto LABEL_264;
        }
LABEL_98:
        swift_release();
        unint64_t v99 = v226;
        uint64_t v100 = (void *)sub_1A8A76538();
        id v101 = IMAP2EmailCore_ECEmailAddressesFromHeader(v100);

        sub_1A88C59E4();
        unint64_t v102 = sub_1A8A76C68();

        if (v102 >> 62)
        {
          unint64_t v104 = v102;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          uint64_t v103 = sub_1A8A781B8();
          uint64_t v214 = v99;
          uint64_t v215 = v40;
          if (!v103) {
            goto LABEL_206;
          }
LABEL_100:
          if (v103 < 1) {
            goto LABEL_256;
          }
          uint64_t v105 = 0;
          unint64_t v106 = v104;
          unint64_t v107 = v104 & 0xC000000000000001;
          uint64_t v108 = (char *)MEMORY[0x1E4FBC860];
          while (1)
          {
            if (v107) {
              id v109 = (id)MEMORY[0x1AD0E0F10](v105, v106);
            }
            else {
              id v109 = *(id *)(v106 + 8 * v105 + 32);
            }
            uint64_t v110 = v109;
            uint64_t v111 = sub_1A88C4D38((uint64_t)v109, 0);

            uint64_t v112 = *(void *)(v111 + 16);
            int64_t v113 = *((void *)v108 + 2);
            int64_t v114 = v113 + v112;
            if (__OFADD__(v113, v112)) {
              goto LABEL_236;
            }
            unint64_t v115 = (char *)swift_isUniquelyReferenced_nonNull_native();
            if (v115 && v114 <= *((void *)v108 + 3) >> 1)
            {
              if (!*(void *)(v111 + 16)) {
                goto LABEL_102;
              }
            }
            else
            {
              if (v113 <= v114) {
                int64_t v116 = v113 + v112;
              }
              else {
                int64_t v116 = v113;
              }
              uint64_t v108 = sub_1A8901C6C(v115, v116, 1, v108);
              if (!*(void *)(v111 + 16))
              {
LABEL_102:
                if (v112) {
                  goto LABEL_239;
                }
                goto LABEL_103;
              }
            }
            if ((*((void *)v108 + 3) >> 1) - *((void *)v108 + 2) < v112) {
              goto LABEL_243;
            }
            swift_arrayInitWithCopy();
            if (v112)
            {
              uint64_t v117 = *((void *)v108 + 2);
              BOOL v118 = __OFADD__(v117, v112);
              uint64_t v119 = v117 + v112;
              if (v118) {
                goto LABEL_248;
              }
              *((void *)v108 + 2) = v119;
            }
LABEL_103:
            swift_bridgeObjectRelease();
            if (v103 == ++v105) {
              goto LABEL_207;
            }
          }
        }
        uint64_t v103 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v104 = v102;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v214 = v99;
        uint64_t v215 = v40;
        if (v103) {
          goto LABEL_100;
        }
LABEL_206:
        uint64_t v108 = (char *)MEMORY[0x1E4FBC860];
LABEL_207:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        unint64_t v41 = v223;
        swift_retain();
        uint64_t v40 = v215;
        uint64_t v215 = sub_1A8902A54((uint64_t)v108, (uint64_t)v41);
LABEL_208:
        swift_bridgeObjectRelease();
        swift_release();
        sub_1A88CFF5C((uint64_t)v231);
        uint64_t v39 = (uint64_t)v219;
        uint64_t v38 = v220;
        uint64_t v37 = v221;
        uint64_t v36 = v222;
LABEL_10:
        uint64_t v31 = (char *)sub_1A88FE9DC();
        if (v34 != 2) {
          continue;
        }
        swift_release();
        uint64_t v188 = v217;
        char v35 = v218;
        uint64_t v189 = v211;
        if (!v211)
        {
          uint64_t v29 = (uint64_t)v208;
          goto LABEL_230;
        }
        if (!v212)
        {
          sub_1A8511B00((uint64_t)v208, &qword_1E9741358);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_231;
        }
        sub_1A8529F8C((uint64_t)v208, v39, &qword_1E9741358);
        if ((*v205)(v39, 1, v188) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A8511B00(v39, &qword_1E9741358);
LABEL_232:
          uint64_t v190 = type metadata accessor for WatchOSHeaderInfo();
          return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v35, 1, 1, v190);
        }
        uint64_t v192 = v37;
        uint64_t v193 = v189;
        v194 = *v201;
        (*v201)(v38, v39, v188);
        uint64_t v195 = type metadata accessor for WatchOSHeaderInfo();
        uint64_t v196 = v188;
        uint64_t v197 = v195;
        v194((char *)v35 + *(int *)(v195 + 40), (uint64_t)v38, v196);
        *char v35 = v213;
        v35[1] = v36;
        uint64_t v198 = v215;
        v35[2] = v192;
        v35[3] = v198;
        uint64_t v199 = v202;
        v35[4] = v216;
        v35[5] = v199;
        uint64_t v200 = v203;
        v35[6] = v193;
        v35[7] = v200;
        v35[8] = v212;
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v197 - 8) + 56))(v35, 0, 1, v197);
      case 0xAuLL:
        v253 &= 0x7FFFFFFFFFFFFFFuLL;
        swift_retain();
        sub_1A88CF60C((uint64_t)v231, v41, (uint64_t)v234);
        sub_1A8529F8C((uint64_t)v234, (uint64_t)v245, &qword_1E9746BB0);
        if (v246 == 255) {
          goto LABEL_10;
        }
        sub_1A88CE49C(v245, (uint64_t)v247);
        sub_1A88CE49C(v247, (uint64_t)&v248);
        if (v250 != 10)
        {
          sub_1A8902C40((uint64_t)v234);
          goto LABEL_10;
        }
        uint64_t v80 = v37;
        uint64_t v81 = v248;
        uint64_t v82 = v249;
        char v83 = v210;
        if ((v249 & 0x1000000000000000) != 0) {
          goto LABEL_224;
        }
        if ((v249 & 0x2000000000000000) != 0)
        {
          v227 = (char *)v248;
          uint64_t v228 = v249 & 0xFFFFFFFFFFFFFFLL;
          char v84 = (const char *)&v227;
          goto LABEL_200;
        }
        if ((v248 & 0x1000000000000000) != 0)
        {
          char v84 = (const char *)((v249 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_200:
          sub_1A88D9140(v84, v210);
          goto LABEL_201;
        }
LABEL_224:
        sub_1A8A77D98();
LABEL_201:
        uint64_t v179 = v217;
        if ((*v205)((uint64_t)v83, 1, v217) == 1)
        {
          uint64_t v180 = v82;
          v181 = v209;
          sub_1A88D8198(v81, v180, v209);
          sub_1A8511B00((uint64_t)v83, &qword_1E9741358);
        }
        else
        {
          v181 = v209;
          (*v201)(v209, (uint64_t)v83, v179);
          v206(v181, 0, 1, v179);
        }
        unint64_t v41 = v223;
        sub_1A8902C40((uint64_t)v234);
        uint64_t v182 = (uint64_t)v208;
        sub_1A8511B00((uint64_t)v208, &qword_1E9741358);
        sub_1A8529F8C((uint64_t)v181, v182, &qword_1E9741358);
        uint64_t v37 = v80;
        goto LABEL_10;
      case 0xBuLL:
        v253 &= 0x7FFFFFFFFFFFFFFuLL;
        uint64_t v85 = v251;
        uint64_t v86 = v252;
        swift_bridgeObjectRelease();
        if (v85) {
          uint64_t v87 = v86 - v85;
        }
        else {
          uint64_t v87 = 0;
        }
        if (v87 < 0) {
          goto LABEL_254;
        }
        uint64_t v221 = v37;
        uint64_t v88 = sub_1A88FA8C0(0, v87, v85, v86);
        if (v90) {
          uint64_t v91 = v90 + v89;
        }
        else {
          uint64_t v91 = 0;
        }
        if (v90) {
          uint64_t v92 = v90 + v88;
        }
        else {
          uint64_t v92 = 0;
        }
        int64_t v225 = 0;
        unint64_t v226 = 0xE000000000000000;
        uint64_t v93 = v91 - v92;
        if (v92) {
          uint64_t v94 = v91 - v92;
        }
        else {
          uint64_t v94 = 0;
        }
        swift_retain();
        uint64_t v95 = MEMORY[0x1AD0DF770](v94);
        char v224 = 0;
        if (v92)
        {
          if (v93 < 0) {
            goto LABEL_263;
          }
          if (v93 >= 1025)
          {
            uint64_t v95 = swift_stdlib_isStackAllocationSafe();
            if ((v95 & 1) == 0)
            {
              uint64_t v96 = swift_slowAlloc();
              v227 = (char *)v96;
              uint64_t v228 = v91 - v92;
              uint64_t v229 = 0;
              sub_1A88EABBC((int64_t)&v227, &v225, v92, v91, v223, &v224);
              uint64_t v222 = v40;
              MEMORY[0x1AD0E4D00](v96, -1, -1);
              goto LABEL_172;
            }
          }
        }
        else
        {
          uint64_t v93 = 0;
        }
        MEMORY[0x1F4188790](v95);
        v227 = (char *)&v201 - v161;
        uint64_t v228 = v93;
        uint64_t v229 = 0;
        sub_1A88EABBC((int64_t)&v227, &v225, v92, v91, v223, &v224);
        if (v40)
        {
LABEL_264:
          swift_willThrow();
          __break(1u);
          JUMPOUT(0x1A89014B8);
        }
        uint64_t v222 = 0;
LABEL_172:
        unint64_t v162 = v226;
        v163 = (void *)sub_1A8A76538();
        id v164 = IMAP2EmailCore_ECEmailAddressesFromHeader(v163);

        sub_1A88C59E4();
        unint64_t v165 = sub_1A8A76C68();

        if (v165 >> 62)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          uint64_t v166 = sub_1A8A781B8();
          uint64_t v214 = v162;
          if (v166)
          {
LABEL_174:
            if (v166 < 1) {
              goto LABEL_259;
            }
            uint64_t v167 = 0;
            v168 = (char *)MEMORY[0x1E4FBC860];
            while (2)
            {
              if ((v165 & 0xC000000000000001) != 0) {
                id v169 = (id)MEMORY[0x1AD0E0F10](v167, v165);
              }
              else {
                id v169 = *(id *)(v165 + 8 * v167 + 32);
              }
              v170 = v169;
              uint64_t v171 = sub_1A88C4D38((uint64_t)v169, 0);

              uint64_t v172 = *(void *)(v171 + 16);
              int64_t v173 = *((void *)v168 + 2);
              int64_t v174 = v173 + v172;
              if (__OFADD__(v173, v172))
              {
                __break(1u);
LABEL_236:
                __break(1u);
LABEL_237:
                __break(1u);
LABEL_238:
                __break(1u);
LABEL_239:
                __break(1u);
LABEL_240:
                __break(1u);
LABEL_241:
                __break(1u);
LABEL_242:
                __break(1u);
LABEL_243:
                __break(1u);
LABEL_244:
                __break(1u);
LABEL_245:
                __break(1u);
LABEL_246:
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
LABEL_249:
                __break(1u);
LABEL_250:
                __break(1u);
LABEL_251:
                __break(1u);
LABEL_252:
                __break(1u);
LABEL_253:
                __break(1u);
LABEL_254:
                __break(1u);
LABEL_255:
                __break(1u);
LABEL_256:
                __break(1u);
LABEL_257:
                __break(1u);
LABEL_258:
                __break(1u);
LABEL_259:
                __break(1u);
LABEL_260:
                __break(1u);
LABEL_261:
                __break(1u);
LABEL_262:
                __break(1u);
LABEL_263:
                __break(1u);
              }
              v175 = (char *)swift_isUniquelyReferenced_nonNull_native();
              if (v175 && v174 <= *((void *)v168 + 3) >> 1)
              {
                if (!*(void *)(v171 + 16))
                {
LABEL_176:
                  if (v172) {
                    goto LABEL_242;
                  }
LABEL_177:
                  swift_bridgeObjectRelease();
                  if (v166 == ++v167) {
                    goto LABEL_215;
                  }
                  continue;
                }
              }
              else
              {
                if (v173 <= v174) {
                  int64_t v176 = v173 + v172;
                }
                else {
                  int64_t v176 = v173;
                }
                v168 = sub_1A8901C6C(v175, v176, 1, v168);
                if (!*(void *)(v171 + 16)) {
                  goto LABEL_176;
                }
              }
              break;
            }
            if ((*((void *)v168 + 3) >> 1) - *((void *)v168 + 2) < v172) {
              goto LABEL_246;
            }
            swift_arrayInitWithCopy();
            if (v172)
            {
              uint64_t v177 = *((void *)v168 + 2);
              BOOL v118 = __OFADD__(v177, v172);
              uint64_t v178 = v177 + v172;
              if (v118) {
                goto LABEL_250;
              }
              *((void *)v168 + 2) = v178;
            }
            goto LABEL_177;
          }
        }
        else
        {
          uint64_t v166 = *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          uint64_t v214 = v162;
          if (v166) {
            goto LABEL_174;
          }
        }
        v168 = (char *)MEMORY[0x1E4FBC860];
LABEL_215:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if (*((void *)v168 + 2))
        {
          long long v183 = *((_OWORD *)v168 + 5);
          long long v256 = *((_OWORD *)v168 + 4);
          long long v257 = v183;
          long long v184 = *((_OWORD *)v168 + 7);
          long long v258 = *((_OWORD *)v168 + 6);
          long long v259 = v184;
          long long v185 = *((_OWORD *)v168 + 3);
          long long v254 = *((_OWORD *)v168 + 2);
          long long v255 = v185;
          sub_1A8529F8C((uint64_t)&v254, (uint64_t)v260, (uint64_t *)&unk_1E9743F08);
          sub_1A88CFFB8((uint64_t)&v254);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1A8529F8C((uint64_t)v260, (uint64_t)&v261, (uint64_t *)&unk_1E9743F08);
          uint64_t v39 = (uint64_t)v219;
          uint64_t v38 = v220;
          uint64_t v37 = v221;
          uint64_t v40 = v222;
          if (!*((void *)&v261 + 1)) {
            goto LABEL_8;
          }
          uint64_t v186 = HIBYTE(*((void *)&v261 + 1)) & 0xFLL;
          if ((*((void *)&v261 + 1) & 0x2000000000000000) == 0) {
            uint64_t v186 = v261 & 0xFFFFFFFFFFFFLL;
          }
          if (!v186 || v255 == v261 || (sub_1A8A78588() & 1) != 0)
          {
LABEL_8:
            unint64_t v41 = v223;
            uint64_t v213 = sub_1A88C4768((uint64_t)v223);
            uint64_t v36 = v42;
            sub_1A88D0064((uint64_t)&v254);
LABEL_9:
            sub_1A88CFF5C((uint64_t)v231);
          }
          else
          {
            v227 = (char *)sub_1A88C52B0();
            uint64_t v228 = v187;
            sub_1A8A767E8();
            unint64_t v41 = v223;
            sub_1A88C4768((uint64_t)v223);
            sub_1A8A767E8();
            swift_bridgeObjectRelease();
            sub_1A8A767E8();
            sub_1A88D0064((uint64_t)&v254);
            sub_1A88CFF5C((uint64_t)v231);
            uint64_t v36 = v228;
            uint64_t v213 = (uint64_t)v227;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          unint64_t v41 = v223;
          swift_release();
          sub_1A88CFF5C((uint64_t)v231);
          uint64_t v213 = 0;
          uint64_t v36 = 0;
          uint64_t v39 = (uint64_t)v219;
          uint64_t v38 = v220;
          uint64_t v37 = v221;
          uint64_t v40 = v222;
        }
        goto LABEL_10;
      case 0xDuLL:
        v253 &= 0x7FFFFFFFFFFFFFFuLL;
        swift_retain();
        sub_1A88CF60C((uint64_t)v231, v41, (uint64_t)v233);
        sub_1A8529F8C((uint64_t)v233, (uint64_t)v240, &qword_1E9746BB0);
        if (v241 != 255)
        {
          sub_1A88CE49C(v240, (uint64_t)v242);
          sub_1A88CE49C(v242, (uint64_t)v243);
          if (v244 == 13)
          {
            uint64_t v203 = v243[0];
            uint64_t v97 = v243[1];
            swift_bridgeObjectRelease();
            uint64_t v212 = v97;
          }
          else
          {
            sub_1A8902C40((uint64_t)v233);
          }
        }
        goto LABEL_10;
      case 0x12uLL:
        v253 &= 0x7FFFFFFFFFFFFFFuLL;
        swift_retain();
        sub_1A88CF60C((uint64_t)v231, v41, (uint64_t)v232);
        sub_1A8529F8C((uint64_t)v232, (uint64_t)v235, &qword_1E9746BB0);
        if (v236 != 255)
        {
          sub_1A88CE49C(v235, (uint64_t)v237);
          sub_1A88CE49C(v237, (uint64_t)v238);
          if (v239 == 18)
          {
            uint64_t v202 = v238[0];
            uint64_t v55 = v238[1];
            swift_bridgeObjectRelease();
            uint64_t v211 = v55;
          }
          else
          {
            sub_1A8902C40((uint64_t)v232);
          }
        }
        goto LABEL_10;
      case 0x13uLL:
        uint64_t v222 = v36;
        v253 &= 0x7FFFFFFFFFFFFFFuLL;
        uint64_t v68 = v251;
        uint64_t v69 = v252;
        swift_bridgeObjectRelease();
        if (v68) {
          uint64_t v70 = v69 - v68;
        }
        else {
          uint64_t v70 = 0;
        }
        if (v70 < 0) {
          goto LABEL_253;
        }
        uint64_t v71 = sub_1A88FA8C0(0, v70, v68, v69);
        if (v73) {
          uint64_t v74 = v73 + v72;
        }
        else {
          uint64_t v74 = 0;
        }
        if (v73) {
          uint64_t v75 = v73 + v71;
        }
        else {
          uint64_t v75 = 0;
        }
        int64_t v225 = 0;
        unint64_t v226 = 0xE000000000000000;
        uint64_t v76 = v74 - v75;
        if (v75) {
          uint64_t v77 = v74 - v75;
        }
        else {
          uint64_t v77 = 0;
        }
        swift_retain();
        uint64_t v78 = MEMORY[0x1AD0DF770](v77);
        char v224 = 0;
        if (v75)
        {
          if (v76 < 0) {
            goto LABEL_262;
          }
          if (v76 >= 1025)
          {
            uint64_t v78 = swift_stdlib_isStackAllocationSafe();
            if ((v78 & 1) == 0)
            {
              uint64_t v79 = swift_slowAlloc();
              v227 = (char *)v79;
              uint64_t v228 = v74 - v75;
              uint64_t v229 = 0;
              sub_1A88EABBC((int64_t)&v227, &v225, v75, v74, v223, &v224);
              MEMORY[0x1AD0E4D00](v79, -1, -1);
              goto LABEL_147;
            }
          }
        }
        else
        {
          uint64_t v76 = 0;
        }
        MEMORY[0x1F4188790](v78);
        v227 = (char *)&v201 - v141;
        uint64_t v228 = v76;
        uint64_t v229 = 0;
        sub_1A88EABBC((int64_t)&v227, &v225, v75, v74, v223, &v224);
        if (v40) {
          goto LABEL_264;
        }
LABEL_147:
        swift_release();
        uint64_t v221 = v226;
        unint64_t v142 = (void *)sub_1A8A76538();
        id v143 = IMAP2EmailCore_ECEmailAddressesFromHeader(v142);

        sub_1A88C59E4();
        unint64_t v144 = sub_1A8A76C68();

        if (!(v144 >> 62))
        {
          uint64_t v145 = *(void *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10);
          unint64_t v146 = v144;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          uint64_t v214 = v40;
          if (v145) {
            goto LABEL_149;
          }
          goto LABEL_211;
        }
        unint64_t v146 = v144;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v145 = sub_1A8A781B8();
        uint64_t v214 = v40;
        if (!v145)
        {
LABEL_211:
          v150 = (char *)MEMORY[0x1E4FBC860];
LABEL_212:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          unint64_t v41 = v223;
          swift_retain();
          uint64_t v40 = v214;
          uint64_t v37 = sub_1A8902A54((uint64_t)v150, (uint64_t)v41);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1A88CFF5C((uint64_t)v231);
          uint64_t v39 = (uint64_t)v219;
          uint64_t v38 = v220;
          uint64_t v36 = v222;
          goto LABEL_10;
        }
LABEL_149:
        if (v145 < 1) {
          goto LABEL_258;
        }
        uint64_t v147 = 0;
        unint64_t v148 = v146;
        unint64_t v149 = v146 & 0xC000000000000001;
        v150 = (char *)MEMORY[0x1E4FBC860];
        break;
      default:
        goto LABEL_9;
    }
    break;
  }
  while (1)
  {
    if (v149) {
      id v151 = (id)MEMORY[0x1AD0E0F10](v147, v148);
    }
    else {
      id v151 = *(id *)(v148 + 8 * v147 + 32);
    }
    v152 = v151;
    uint64_t v153 = sub_1A88C4D38((uint64_t)v151, 0);

    uint64_t v154 = *(void *)(v153 + 16);
    int64_t v155 = *((void *)v150 + 2);
    int64_t v156 = v155 + v154;
    if (__OFADD__(v155, v154)) {
      goto LABEL_238;
    }
    v157 = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (v157 && v156 <= *((void *)v150 + 3) >> 1)
    {
      if (*(void *)(v153 + 16)) {
        goto LABEL_165;
      }
    }
    else
    {
      if (v155 <= v156) {
        int64_t v158 = v155 + v154;
      }
      else {
        int64_t v158 = v155;
      }
      v150 = sub_1A8901C6C(v157, v158, 1, v150);
      if (*(void *)(v153 + 16))
      {
LABEL_165:
        if ((*((void *)v150 + 3) >> 1) - *((void *)v150 + 2) < v154) {
          goto LABEL_245;
        }
        swift_arrayInitWithCopy();
        if (v154)
        {
          uint64_t v159 = *((void *)v150 + 2);
          BOOL v118 = __OFADD__(v159, v154);
          uint64_t v160 = v159 + v154;
          if (v118) {
            goto LABEL_249;
          }
          *((void *)v150 + 2) = v160;
        }
        goto LABEL_152;
      }
    }
    if (v154) {
      goto LABEL_241;
    }
LABEL_152:
    swift_bridgeObjectRelease();
    if (v145 == ++v147) {
      goto LABEL_212;
    }
  }
}

char *sub_1A8901500(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A89015F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E00);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1A8901700(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E418);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97419D0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A890183C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EC0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A8901928(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741160);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A8901A24(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DF0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A8901B20(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A8901B48(a1, a2, a3, a4, &qword_1E9745DE8);
}

char *sub_1A8901B34(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A8901B48(a1, a2, a3, a4, &qword_1E9745DD0);
}

char *sub_1A8901B48(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size_0(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[56 * v9]) {
      memmove(v13, v14, 56 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1A8901C6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97475B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[96 * v8]) {
      memmove(v12, v13, 96 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A8901D88(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DE0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A8901EA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A8901FC8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E410);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A89020E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E408);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A89021EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A89022F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E08);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1A89023FC(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DC8);
  uint64_t v10 = *(void *)(type metadata accessor for ReplacementNode() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for ReplacementNode() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *sub_1A89025D0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DB8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A89026E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741188);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A89027EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E400);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A89028F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A89029F4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A89026E8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A8902A14(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A89027EC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A8902A34(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A89028F0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A8902A54(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1A89029F4(0, v2, 0);
    uint64_t v3 = v29;
    char v5 = (long long *)(a1 + 32);
    do
    {
      long long v6 = v5[3];
      long long v23 = v5[2];
      long long v24 = v6;
      long long v7 = v5[5];
      long long v25 = v5[4];
      long long v26 = v7;
      long long v8 = v5[1];
      long long v21 = *v5;
      long long v22 = v8;
      sub_1A8529F8C((uint64_t)&v21, (uint64_t)v27, (uint64_t *)&unk_1E9743F08);
      sub_1A8529F8C((uint64_t)v27, (uint64_t)&v28, (uint64_t *)&unk_1E9743F08);
      if (!*((void *)&v28 + 1)) {
        goto LABEL_9;
      }
      uint64_t v9 = HIBYTE(*((void *)&v28 + 1)) & 0xFLL;
      if ((*((void *)&v28 + 1) & 0x2000000000000000) == 0) {
        uint64_t v9 = v28 & 0xFFFFFFFFFFFFLL;
      }
      if (v9 && v22 != v28 && (sub_1A8A78588() & 1) == 0)
      {
        sub_1A88CFFB8((uint64_t)&v21);
        unint64_t v19 = sub_1A88C52B0();
        uint64_t v20 = v16;
        sub_1A8A767E8();
        sub_1A88C4768(a2);
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        sub_1A8A767E8();
        sub_1A88D0064((uint64_t)&v21);
        uint64_t v10 = v19;
        uint64_t v12 = v20;
      }
      else
      {
LABEL_9:
        sub_1A88CFFB8((uint64_t)&v21);
        uint64_t v10 = sub_1A88C4768(a2);
        uint64_t v12 = v11;
        sub_1A88D0064((uint64_t)&v21);
      }
      uint64_t v29 = v3;
      unint64_t v14 = *(void *)(v3 + 16);
      unint64_t v13 = *(void *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A89029F4((char *)(v13 > 1), v14 + 1, 1);
        uint64_t v3 = v29;
      }
      *(void *)(v3 + 16) = v14 + 1;
      uint64_t v15 = v3 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      v5 += 6;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A8902C40(uint64_t a1)
{
  return a1;
}

uint64_t AccountLoggerID.rawValue.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

double (*AccountLoggerID.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t AccountLoggerID.init(accountIdentifier:)(uint64_t a1, unint64_t a2)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97413C0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A74C88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v28) = 0;
  if (!a2) {
    return 0;
  }
  sub_1A8A74C48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A8903004((uint64_t)v6);
    if ((a2 & 0x1000000000000000) != 0)
    {
      a1 = sub_1A8903784();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      a2 = v25;
      if ((v25 & 0x2000000000000000) == 0) {
        goto LABEL_5;
      }
    }
    else if ((a2 & 0x2000000000000000) == 0)
    {
LABEL_5:
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v11 = (uint64_t *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v12 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v11 = (uint64_t *)sub_1A8A77E88();
      }
      uint64_t v13 = 4;
      if (v12 < 4) {
        uint64_t v13 = v12;
      }
      if (!v11) {
        uint64_t v13 = 0;
      }
      if (v13 < 0) {
        __break(1u);
      }
      if (v11) {
        unint64_t v14 = (char *)v11 + v12;
      }
      else {
        unint64_t v14 = 0;
      }
      uint64_t v15 = v13;
      goto LABEL_23;
    }
    uint64_t v26 = a1;
    uint64_t v27 = a2 & 0xFFFFFFFFFFFFFFLL;
    if ((a2 & 0xC00000000000000) != 0) {
      uint64_t v15 = 4;
    }
    else {
      uint64_t v15 = HIBYTE(a2) & 0xF;
    }
    unint64_t v14 = (char *)&v26 + (HIBYTE(a2) & 0xF);
    uint64_t v11 = &v26;
LABEL_23:
    sub_1A89039C4(0, v15, (uint64_t)v11, (uint64_t)v14, (uint64_t)&v28 + 4);
    swift_bridgeObjectRelease();
    return bswap32(HIDWORD(v28));
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v26 = sub_1A8A74C78();
  LOWORD(v27) = v17;
  BYTE2(v27) = v18;
  BYTE3(v27) = v19;
  BYTE4(v27) = v20;
  BYTE5(v27) = v21;
  BYTE6(v27) = v22;
  HIBYTE(v27) = v23;
  sub_1A89039C4(0, 4, (uint64_t)&v26, (uint64_t)&v28, (uint64_t)&v28 + 4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return bswap32(HIDWORD(v28));
}

uint64_t sub_1A8903004(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97413C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AccountLoggerID.debugDescription.getter()
{
  sub_1A8903AA4();
  sub_1A8A76918();
  uint64_t result = sub_1A8A76778();
  if (__OFSUB__(8, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = MEMORY[0x1AD0DF9F0](48, 0xE100000000000000, 8 - result);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_1A8903110()
{
  sub_1A8903AA4();
  sub_1A8A76918();
  uint64_t result = sub_1A8A76778();
  if (__OFSUB__(8, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = MEMORY[0x1AD0DF9F0](48, 0xE100000000000000, 8 - result);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t EngineAndAccountLoggerID.engine.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*EngineAndAccountLoggerID.engine.modify())(void)
{
  return nullsub_1;
}

unint64_t EngineAndAccountLoggerID.account.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t EngineAndAccountLoggerID.account.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

double (*EngineAndAccountLoggerID.account.modify())(void)
{
  return nullsub_1;
}

unint64_t EngineAndAccountLoggerID.init(engine:account:)(unsigned __int8 a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t EngineAccountMailboxLoggerID.engine.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*EngineAccountMailboxLoggerID.engine.modify())(void)
{
  return nullsub_1;
}

unint64_t EngineAccountMailboxLoggerID.account.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t EngineAccountMailboxLoggerID.account.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

double (*EngineAccountMailboxLoggerID.account.modify())(void)
{
  return nullsub_1;
}

uint64_t EngineAccountMailboxLoggerID.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t EngineAccountMailboxLoggerID.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(_DWORD *)(v2 + 16) = a2;
  return result;
}

double (*EngineAccountMailboxLoggerID.mailbox.modify())(void)
{
  return nullsub_1;
}

unint64_t EngineAccountMailboxLoggerID.init(engine:account:mailbox:)(unsigned __int8 a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t variable initialization expression of MailboxMetadata.validity()
{
  return 0x100000000;
}

uint64_t variable initialization expression of MailboxMetadata.fetchedWindow()
{
  return 0;
}

uint64_t variable initialization expression of MailboxMetadata.highestModificationSequenceValue()
{
  return 0;
}

uint64_t variable initialization expression of MailboxSyncStatus.serverUnreadCount()
{
  return 0;
}

uint64_t variable initialization expression of MessageFlagUpdate.flags()
{
  return 2;
}

uint64_t variable initialization expression of MessageFlagUpdate.gmailLabels()
{
  return 0;
}

uint64_t variable initialization expression of Action.UnreadCountOutsideWindowOfInterest.Count.serverUnreadCount()
{
  return 0;
}

unint64_t variable initialization expression of Activity.statuses()
{
  return sub_1A890338C(MEMORY[0x1E4FBC860]);
}

unint64_t sub_1A890338C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(qword_1E9746330);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E97472F8);
  uint64_t v6 = sub_1A8A781E8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A8903C58(v12, (uint64_t)v5);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_1A8908C00(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v19 = (uint64_t *)(v7[6] + 16 * result);
    *char v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for Activity.MailboxStatus(0);
    unint64_t result = sub_1A8903CC0(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    long long v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t variable initialization expression of Activity.mailboxesWithPendingWork()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t variable initialization expression of Activity.accountError@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8903708(type metadata accessor for ConnectionStatus.Error, a1);
}

uint64_t variable initialization expression of Activity.MailboxStatus.Info.fetch()
{
  return 0;
}

uint64_t variable initialization expression of ConnectionConfiguration.prohibitedInterfaceTypes()
{
  return 0;
}

{
  return 0;
}

uint64_t variable initialization expression of ConnectionConfiguration.sourceApplicationBundleIdentifier()
{
  return 0;
}

{
  return 0;
}

uint64_t variable initialization expression of ConnectionConfiguration.networkAccountIdentifier()
{
  return 0;
}

{
  return 0;
}

uint64_t variable initialization expression of FlagsWithModifications.originalFlags()
{
  return 2;
}

uint64_t variable initialization expression of FlagsUpdate.forwarded()
{
  return 2;
}

uint64_t variable initialization expression of FlagsUpdate.redirected()
{
  return 2;
}

uint64_t variable initialization expression of FlagsUpdate.junk()
{
  return 3;
}

uint64_t variable initialization expression of FlagsUpdate.iCloudCleanup()
{
  return 2;
}

uint64_t variable initialization expression of MessageMetadata.gmailLabels()
{
  return 0;
}

uint64_t variable initialization expression of MessageMetadata.messageHeader@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8903708(type metadata accessor for MessageMetadata.UnparsedHeader, a1);
}

uint64_t variable initialization expression of MessageSectionData.Segment.initial@<X0>(uint64_t a1@<X8>)
{
  sub_1A86407D4((uint64_t)v3);
  return sub_1A8529F8C((uint64_t)v3, a1, &qword_1E9743180);
}

uint64_t variable initialization expression of MessageSectionData.Segment.Initial.bodyStructure@<X0>(uint64_t a1@<X8>)
{
  sub_1A8648168((uint64_t)v3);
  return sub_1A8529F8C((uint64_t)v3, a1, &qword_1E9741838);
}

uint64_t variable initialization expression of RemoteMailbox.specialUse()
{
  return 7;
}

double variable initialization expression of RemoteMailbox.status@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 25) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 41) = 1;
  return result;
}

uint64_t variable initialization expression of RemoteMailbox.Status.unreadMessagesCount()
{
  return 0;
}

uint64_t variable initialization expression of RemoteMailbox.Status.highestModificationSequence()
{
  return 0;
}

uint64_t variable initialization expression of SearchRequest.RangesToExclude.skipForMessageCount()
{
  return 0;
}

uint64_t variable initialization expression of ConnectionStatus.Error.details@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8903708(type metadata accessor for ConnectionStatus.Error.Details, a1);
}

uint64_t variable initialization expression of ConnectionStatus.Error.backedOffUntil@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8903708(MEMORY[0x1E4F27928], a1);
}

uint64_t sub_1A8903708@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

uint64_t variable initialization expression of SyncRequest.mailboxes()
{
  return 0;
}

uint64_t sub_1A8903784()
{
  unint64_t v0 = sub_1A8A76968();
  uint64_t v4 = sub_1A8903804(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A8903804(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1A858E388(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unint64_t v11 = sub_1A890395C(v9, 0);
      unint64_t v12 = sub_1A858E488((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1A8A77E88();
LABEL_4:
        JUMPOUT(0x1AD0DF7E0);
      }
    }
    else
    {
      unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1AD0DF7E0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1AD0DF7E0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void *sub_1A890395C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EC8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size_0(v4);
  long long v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A89039C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    MEMORY[0x1F4188790](result);
    MEMORY[0x1F4188790](v5);
    if (v6)
    {
      uint64_t v8 = v7 - v6;
      uint64_t v9 = v6;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v8 = 0;
    }
    return sub_1A8903DDC(v9, v8);
  }
  return result;
}

unint64_t sub_1A8903AA4()
{
  unint64_t result = qword_1E9746018;
  if (!qword_1E9746018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9746018);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountLoggerID()
{
  return &type metadata for AccountLoggerID;
}

void *__swift_memcpy8_4_3(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for EngineAndAccountLoggerID()
{
  return &type metadata for EngineAndAccountLoggerID;
}

uint64_t sub_1A8903B28(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for EngineAccountMailboxLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EngineAccountMailboxLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for EngineAccountMailboxLoggerID()
{
  return &type metadata for EngineAccountMailboxLoggerID;
}

void type metadata accessor for ThermalState(uint64_t a1)
{
}

uint64_t sub_1A8903C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(qword_1E9746330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8903CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Activity.MailboxStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8903D24(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v9 = a3[2];
  uint64_t v8 = a3[3];
  uint64_t v10 = sub_1A870361C(0, *a3, v9, v8);
  uint64_t result = sub_1A870361C(v6, v7, v9, v8);
  if (__OFADD__(v10, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v12 = result;
  if (v10 + result < v10)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (a1) {
    uint64_t v13 = a1 + v10;
  }
  else {
    uint64_t v13 = 0;
  }
  return a4(v13, v12);
}

uint64_t sub_1A8903DDC(uint64_t a1, uint64_t a2)
{
  return sub_1A8903D24(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24));
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
}

uint64_t static Action.FetchedWindowUpdate.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_1A8904D00(a1, a2 & 1, a3, a4 & 1);
}

uint64_t static Action.UnreadCountOutsideWindowOfInterest.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  return sub_1A8904D34(a1, a2, a3, a4 & 0x1FF, a5, a6, a7, a8 & 0x1FF);
}

uint64_t sub_1A8903E40(void *a1, void *a2)
{
  return static Action.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t Action.Kind.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static Action.Kind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Action.Kind.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t Action.kind.getter(unint64_t a1)
{
  unint64_t v2 = (a1 >> 58) & 0x3C | (a1 >> 1) & 3;
  uint64_t result = 1;
  switch(v2)
  {
    case 1uLL:
      uint64_t result = 3;
      break;
    case 2uLL:
      uint64_t result = 4;
      break;
    case 3uLL:
      uint64_t result = 5;
      break;
    case 4uLL:
      uint64_t result = 6;
      break;
    case 5uLL:
      uint64_t result = 7;
      break;
    case 6uLL:
      uint64_t result = 8;
      break;
    case 7uLL:
      uint64_t result = 9;
      break;
    case 8uLL:
      uint64_t result = 10;
      break;
    case 9uLL:
      uint64_t result = 11;
      break;
    case 0xAuLL:
      uint64_t result = 12;
      break;
    case 0xBuLL:
      uint64_t result = 13;
      break;
    case 0xCuLL:
      uint64_t result = 14;
      break;
    case 0xDuLL:
      uint64_t result = 15;
      break;
    case 0xEuLL:
      uint64_t result = 16;
      break;
    case 0xFuLL:
      uint64_t result = 17;
      break;
    case 0x10uLL:
      uint64_t result = 18;
      break;
    case 0x11uLL:
      uint64_t result = 19;
      break;
    case 0x12uLL:
      uint64_t result = 20;
      break;
    case 0x13uLL:
      uint64_t result = 21;
      break;
    case 0x14uLL:
      uint64_t result = 22;
      break;
    case 0x15uLL:
      uint64_t result = 23;
      break;
    case 0x16uLL:
      uint64_t result = 24;
      break;
    case 0x17uLL:
      uint64_t result = 25;
      break;
    case 0x18uLL:
      uint64_t result = 30;
      break;
    case 0x19uLL:
      uint64_t result = 31;
      break;
    case 0x1AuLL:
      uint64_t result = 33;
      break;
    case 0x1BuLL:
      uint64_t result = 26;
      break;
    case 0x1CuLL:
      uint64_t result = 27;
      break;
    case 0x1DuLL:
      uint64_t result = 28;
      break;
    case 0x1EuLL:
      uint64_t result = 29;
      break;
    case 0x1FuLL:
      uint64_t result = 32;
      break;
    case 0x20uLL:
      uint64_t result = 34;
      break;
    case 0x21uLL:
      uint64_t result = 35;
      break;
    case 0x22uLL:
      uint64_t result = 36;
      break;
    case 0x23uLL:
      uint64_t result = 37;
      break;
    case 0x24uLL:
      uint64_t result = 38;
      break;
    case 0x25uLL:
      uint64_t result = 39;
      break;
    case 0x26uLL:
      uint64_t result = 40;
      break;
    case 0x27uLL:
      uint64_t result = 41;
      break;
    case 0x28uLL:
      uint64_t result = 42;
      break;
    case 0x29uLL:
      uint64_t result = 43;
      break;
    case 0x2AuLL:
      uint64_t result = 44;
      break;
    case 0x2BuLL:
      uint64_t result = 2 * (a1 != 0xA000000000000006);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Action.Kind.description.getter(char a1)
{
  unint64_t result = 0x6944656E69676E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64657243646E6573;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x614E657461647075;
      break;
    case 5:
    case 13:
    case 17:
    case 34:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000022;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x617373654D746567;
      break;
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000017;
      break;
    case 16:
      unint64_t result = 0xD000000000000025;
      break;
    case 18:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 19:
      unint64_t result = 0xD000000000000021;
      break;
    case 20:
      unint64_t result = 0xD000000000000012;
      break;
    case 21:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 22:
      unint64_t result = 0xD000000000000017;
      break;
    case 23:
      unint64_t result = 0xD000000000000018;
      break;
    case 24:
      unint64_t result = 0xD000000000000016;
      break;
    case 25:
      unint64_t result = 0x6C46657461647075;
      break;
    case 26:
      unint64_t result = 0xD000000000000018;
      break;
    case 27:
      unint64_t result = 0xD000000000000018;
      break;
    case 28:
      unint64_t result = 0xD000000000000010;
      break;
    case 29:
      unint64_t result = 0xD000000000000016;
      break;
    case 30:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 31:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 32:
      unint64_t result = 0xD000000000000019;
      break;
    case 33:
      unint64_t result = 0xD000000000000014;
      break;
    case 35:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 36:
      unint64_t result = 0xD000000000000012;
      break;
    case 37:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 38:
      unint64_t result = 0xD000000000000011;
      break;
    case 39:
      unint64_t result = 0xD000000000000010;
      break;
    case 40:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 41:
      unint64_t result = 0xD000000000000019;
      break;
    case 42:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 43:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 44:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A8904648()
{
  return Action.Kind.description.getter(*v0);
}

uint64_t ActionID.rawValue.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

double (*ActionID.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t ActionID.init(rawValue:)(int a1)
{
  return a1 & 0xFFFFFF;
}

uint64_t ActionID.init()()
{
  return 0;
}

uint64_t ActionID.next.getter(int a1)
{
  return (a1 + 1) & 0xFFFFFF;
}

uint64_t ActionID.description.getter()
{
  return sub_1A8A76918();
}

uint64_t sub_1A89046D8()
{
  return sub_1A8A76918();
}

unint64_t MailboxMetadata.validity.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t MailboxMetadata.validity.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

double (*MailboxMetadata.validity.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxMetadata.fetchedWindow.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MailboxMetadata.fetchedWindow.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

double (*MailboxMetadata.fetchedWindow.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxMetadata.highestModificationSequenceValue.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t MailboxMetadata.highestModificationSequenceValue.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

double (*MailboxMetadata.highestModificationSequenceValue.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxMetadata.init(validity:fetchedWindow:highestModificationSequenceValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_DWORD *)a6 = result;
  *(unsigned char *)(a6 + 4) = BYTE4(result) & 1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3 & 1;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  return result;
}

BOOL sub_1A890480C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  char v8 = *(unsigned char *)(a2 + 32);
  return _s16IMAP2Persistence15MailboxMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((BOOL)v5, (uint64_t)v7);
}

uint64_t MailboxSyncStatus.latestSyncedChange.getter(unint64_t a1)
{
  return a1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t MailboxSyncStatus.latestSyncedChange.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

double (*MailboxSyncStatus.latestSyncedChange.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxSyncStatus.serverUnreadCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MailboxSyncStatus.serverUnreadCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

double (*MailboxSyncStatus.serverUnreadCount.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxSyncStatus.init(latestSyncedChange:serverUnreadCount:)(unint64_t a1)
{
  return a1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t static MailboxSyncStatus.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a1 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0) {
      return 0;
    }
LABEL_6:
    if (a3)
    {
      if (a6) {
        return 1;
      }
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
    return 0;
  }
  int v6 = a1;
  uint64_t result = 0;
  if ((a4 & 0x100000000) == 0 && v6 == a4) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1A890494C(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a1 != *(_DWORD *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a2 + 16)) {
      return 1;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) == *(void *)(a2 + 8)) {
      char v4 = *(unsigned char *)(a2 + 16);
    }
    else {
      char v4 = 1;
    }
    if ((v4 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t MessageFlagUpdate.message.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*MessageFlagUpdate.message.modify())(void)
{
  return nullsub_1;
}

unint64_t MessageFlagUpdate.flags.getter(uint64_t a1, unsigned int a2)
{
  return __PAIR64__(a2, HIDWORD(a1));
}

uint64_t MessageFlagUpdate.flags.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 4) = result;
  *(unsigned char *)(v2 + 12) = a2;
  return result;
}

double (*MessageFlagUpdate.flags.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageFlagUpdate.gmailLabels.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageFlagUpdate.gmailLabels.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

double (*MessageFlagUpdate.gmailLabels.modify())(void)
{
  return nullsub_1;
}

unint64_t MessageFlagUpdate.init(message:flags:gmailLabels:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 2 && a4 == 0) {
    return 0;
  }
  else {
    return a1 | (unint64_t)(a2 << 32);
  }
}

BOOL static MessageFlagUpdate.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)&var10[4] = HIDWORD(a4);
  *(void *)&var10[8] = a5;
  uint64_t v6 = *(void *)&var10[4];
  *(_DWORD *)var10 = a1;
  *(void *)&var10[4] = __PAIR64__(a2, HIDWORD(a1));
  var10[12] = BYTE4(a2);
  uint64_t v7 = *(void *)var10;
  uint64_t v8 = *(void *)&var10[8];
  *(_DWORD *)var10 = a4;
  *(void *)&var10[4] = v6;
  var10[12] = BYTE4(a5);
  return sub_1A8904DBC(v7, v8, a3, *(uint64_t *)var10, *(uint64_t *)&var10[8], a6);
}

BOOL sub_1A8904AE8(uint64_t a1, uint64_t a2)
{
  *(void *)((char *)&v4 + 4) = *(void *)(a1 + 4);
  BYTE12(v4) = *(unsigned char *)(a1 + 12);
  long long v2 = v4;
  LODWORD(v4) = *(_DWORD *)a2;
  *(void *)((char *)&v4 + 4) = *(void *)(a2 + 4);
  BYTE12(v4) = *(unsigned char *)(a2 + 12);
  return sub_1A8904DBC(v2, *((uint64_t *)&v2 + 1), *(void *)(a1 + 16), v4, *((uint64_t *)&v4 + 1), *(void *)(a2 + 16));
}

uint64_t static Action.UnreadCountOutsideWindowOfInterest.Count.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  return sub_1A8904E94(a1, a2, a3, a4 & 1, a5, a6, a7, a8 & 1);
}

uint64_t sub_1A8904B40(uint64_t a1, uint64_t a2)
{
  return sub_1A8904D34(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 25) << 8), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 25) << 8));
}

uint64_t Action.UnreadCountOutsideWindowOfInterest.Count.count.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*Action.UnreadCountOutsideWindowOfInterest.Count.count.modify())(void)
{
  return nullsub_1;
}

uint64_t Action.UnreadCountOutsideWindowOfInterest.Count.range.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Action.UnreadCountOutsideWindowOfInterest.Count.range.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*Action.UnreadCountOutsideWindowOfInterest.Count.range.modify())(void)
{
  return nullsub_1;
}

uint64_t Action.UnreadCountOutsideWindowOfInterest.Count.serverUnreadCount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t Action.UnreadCountOutsideWindowOfInterest.Count.serverUnreadCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

double (*Action.UnreadCountOutsideWindowOfInterest.Count.serverUnreadCount.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A8904C24(uint64_t a1, uint64_t a2)
{
  return sub_1A8904E94(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1A8904C50(uint64_t a1, uint64_t a2)
{
  return sub_1A8904D00(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

BOOL _s16IMAP2Persistence15MailboxMetadataV23__derived_struct_equalsySbAC_ACtFZ_0(BOOL result, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(result + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)result != *(_DWORD *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  char v3 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(result + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a2 + 8) != *(void *)(result + 8)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  if (*(unsigned char *)(result + 32)) {
    return (*(unsigned char *)(a2 + 32) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 32)) {
    return 0;
  }
  uint64_t v4 = *(void *)(result + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  if (((v5 | v4) & 0x8000000000000000) == 0) {
    return v5 == v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8904D00(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  BOOL v5 = (a4 & 1) == 0 && a3 == a1;
  unsigned int v6 = a4 & (a3 == 0);
  if (a1) {
    unsigned int v6 = a4 & (a3 != 0);
  }
  if (a2) {
    return v6;
  }
  else {
    return v5;
  }
}

uint64_t sub_1A8904D34(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  if ((a4 & 0x100) != 0)
  {
    if (a3 | a2 | a1 || (_BYTE)a4)
    {
      if ((_BYTE)a8) {
        BOOL v11 = 0;
      }
      else {
        BOOL v11 = (a7 | a6 | a5) == 0;
      }
      unsigned int v10 = !v11;
    }
    else
    {
      if ((_BYTE)a8) {
        BOOL v9 = 0;
      }
      else {
        BOOL v9 = (a7 | a6 | a5) == 0;
      }
      unsigned int v10 = v9;
    }
    if ((a8 & 0x100) != 0) {
      return v10;
    }
    else {
      return 0;
    }
  }
  else
  {
    if ((a8 & 0x100) == 0 && a1 == a5 && a6 == a2)
    {
      if (a4)
      {
        if (a8) {
          return 1;
        }
      }
      else if ((a8 & 1) == 0 && a3 == a7)
      {
        return 1;
      }
    }
    return 0;
  }
}

BOOL sub_1A8904DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 != a1) {
    return 0;
  }
  if (BYTE4(a1) == 2)
  {
    if (BYTE4(a4) != 2) {
      return 0;
    }
  }
  else if (BYTE4(a4) == 2 {
         || (sub_1A891E740(__PAIR64__(a2, HIDWORD(a1)) & 0xFFFFFFFF01010101, SBYTE4(a2), __PAIR64__(a5, HIDWORD(a4)) & 0xFFFFFFFF01010101, BYTE4(a5)) & 1) == 0)
  }
  {
    return 0;
  }
  if (a3)
  {
    if (!a6) {
      return 0;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v8 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v9 = sub_1A851D8F4(v8, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v9 & 1) != 0;
  }
  return !a6;
}

uint64_t sub_1A8904E94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result = 0;
  if (a1 == a5 && a6 == a2)
  {
    if (a4)
    {
      if (a8) {
        return 1;
      }
    }
    else if ((a8 & 1) == 0 && a3 == a7)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void _s16IMAP2Persistence6ActionO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, unint64_t a2)
{
  unint64_t v199 = a2;
  uint64_t v2 = type metadata accessor for Activity(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v196 = (void *)((char *)v193 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v195 = (void *)((char *)v193 - v5);
  uint64_t v6 = type metadata accessor for MessageSectionData(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v193 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  BOOL v11 = (char *)v193 - v10;
  uint64_t v12 = type metadata accessor for MessageHeader();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v197 = (uint64_t)v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v198 = (uint64_t)v193 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741C30);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)v193 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v194 = (uint64_t)v193 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9746208);
  MEMORY[0x1F4188790](v21 - 8);
  BOOL v23 = (char *)v193 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)v193 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)v193 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)v193 - v31;
  MEMORY[0x1F4188790](v33);
  char v35 = (char *)v193 - v34;
  v38.n128_f64[0] = MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)v193 - v39;
  switch((v37 >> 58) & 0x3C | (v37 >> 1) & 3)
  {
    case 1uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 1)
      {
        uint64_t v41 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v42 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        goto LABEL_5;
      }
      return;
    case 2uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 2)
      {
        uint64_t v43 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18);
        uint64_t v44 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v45 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v46 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v47 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18);
        uint64_t v48 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        static Namespace.__derived_struct_equals(_:_:)(v45, v43, v44, v46, v47, v48);
      }
      return;
    case 3uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 3)
      {
        uint64_t v49 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v50 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        sub_1A894A840(v49, v50);
      }
      return;
    case 4uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 4)
      {
        uint64_t v51 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v52 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        sub_1A89551D8(v51, v52);
      }
      return;
    case 5uLL:
      uint64_t v53 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v54 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18);
      __n128 v55 = *(__n128 *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x30);
      v209[0] = *(__n128 *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
      v209[1] = v55;
      char v210 = *(unsigned char *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x40);
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 5)
      {
        uint64_t v56 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v57 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18);
        __n128 v58 = *(__n128 *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x30);
        v203[0] = *(__n128 *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        v203[1] = v58;
        char v204 = *(unsigned char *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x40);
        if (v54 == v57 && sub_1A8866D34(v53, v56)) {
          _s16IMAP2Persistence15MailboxMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((BOOL)v209, (uint64_t)v203);
        }
      }
      return;
    case 6uLL:
      unint64_t v59 = v199;
      if (((v59 >> 58) & 0x3C | (v59 >> 1) & 3) == 6) {
        goto LABEL_117;
      }
      return;
    case 7uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 7
        && *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        uint64_t v60 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        char v61 = *(unsigned char *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x28);
        uint64_t v62 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        char v63 = *(unsigned char *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x28);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10))&& (v61 & 1) == 0&& (v63 & 1) == 0)
        {
          goto LABEL_29;
        }
      }
      return;
    case 8uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 8
        && *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        uint64_t v60 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v62 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
          goto LABEL_29;
        }
      }
      return;
    case 9uLL:
      uint64_t v64 = (uint64_t *)swift_projectBox();
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 9)
      {
        uint64_t v65 = v64;
        uint64_t v66 = *v64;
        uint64_t v67 = v64[1];
        uint64_t v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748260) + 48);
        uint64_t v69 = (uint64_t)v65 + v68;
        uint64_t v70 = (uint64_t *)swift_projectBox();
        uint64_t v71 = *v70;
        uint64_t v72 = v70[1];
        uint64_t v73 = (uint64_t)v70 + v68;
        sub_1A8511A9C(v69, (uint64_t)v40, (uint64_t *)&unk_1E9746208);
        sub_1A8511A9C(v73, (uint64_t)v35, (uint64_t *)&unk_1E9746208);
        if (v67 == v72 && sub_1A8866D34(v66, v71))
        {
          sub_1A894E0BC();
          sub_1A8511B00((uint64_t)v35, (uint64_t *)&unk_1E9746208);
          uint64_t v74 = (uint64_t)v40;
          goto LABEL_54;
        }
        v191 = (uint64_t *)&unk_1E9746208;
        sub_1A8511B00((uint64_t)v35, (uint64_t *)&unk_1E9746208);
        uint64_t v192 = (uint64_t)v40;
        goto LABEL_178;
      }
      return;
    case 0xAuLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0xA
        && *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        uint64_t v75 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v76 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
          sub_1A89291B0(v75, v76);
        }
      }
      return;
    case 0xBuLL:
      uint64_t v77 = (uint64_t *)swift_projectBox();
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0xB)
      {
        uint64_t v78 = v77;
        uint64_t v79 = *v77;
        uint64_t v80 = v77[1];
        uint64_t v81 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97476A8) + 48);
        uint64_t v82 = (uint64_t)v78 + v81;
        char v83 = (uint64_t *)swift_projectBox();
        uint64_t v84 = *v83;
        uint64_t v85 = v83[1];
        uint64_t v86 = (uint64_t)v83 + v81;
        sub_1A8511A9C(v82, (uint64_t)v32, (uint64_t *)&unk_1E9746208);
        sub_1A8511A9C(v86, (uint64_t)v29, (uint64_t *)&unk_1E9746208);
        if (v80 == v85 && sub_1A8866D34(v79, v84))
        {
          sub_1A894E0BC();
          sub_1A8511B00((uint64_t)v29, (uint64_t *)&unk_1E9746208);
          uint64_t v74 = (uint64_t)v32;
          goto LABEL_54;
        }
        v191 = (uint64_t *)&unk_1E9746208;
        sub_1A8511B00((uint64_t)v29, (uint64_t *)&unk_1E9746208);
        uint64_t v192 = (uint64_t)v32;
        goto LABEL_178;
      }
      return;
    case 0xCuLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0xC
        && *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        uint64_t v60 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v62 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
LABEL_29:
          sub_1A877CE18(v60, v62);
        }
      }
      return;
    case 0xDuLL:
      uint64_t v87 = (uint64_t *)swift_projectBox();
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0xD)
      {
        uint64_t v88 = v87;
        uint64_t v89 = *v87;
        uint64_t v90 = v87[1];
        uint64_t v91 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97476A8) + 48);
        uint64_t v92 = (uint64_t)v88 + v91;
        uint64_t v93 = (uint64_t *)swift_projectBox();
        uint64_t v94 = *v93;
        uint64_t v95 = v93[1];
        uint64_t v96 = (uint64_t)v93 + v91;
        sub_1A8511A9C(v92, (uint64_t)v26, (uint64_t *)&unk_1E9746208);
        sub_1A8511A9C(v96, (uint64_t)v23, (uint64_t *)&unk_1E9746208);
        if (v90 != v95 || !sub_1A8866D34(v89, v94))
        {
          v191 = (uint64_t *)&unk_1E9746208;
          sub_1A8511B00((uint64_t)v23, (uint64_t *)&unk_1E9746208);
          uint64_t v192 = (uint64_t)v26;
          goto LABEL_178;
        }
        sub_1A894E0BC();
        sub_1A8511B00((uint64_t)v23, (uint64_t *)&unk_1E9746208);
        uint64_t v74 = (uint64_t)v26;
LABEL_54:
        sub_1A8511B00(v74, (uint64_t *)&unk_1E9746208);
      }
      return;
    case 0xEuLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0xE)
      {
        uint64_t v97 = v199 & 0xFFFFFFFFFFFFFF9;
        if (*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18))
        {
          uint64_t v98 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
          uint64_t v99 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x28);
          unint64_t v199 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
          uint64_t v100 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x30);
          __int16 v101 = *(unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x38);
          __int16 v102 = *(unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x39);
          uint64_t v103 = *(void *)(v97 + 32);
          uint64_t v104 = *(void *)(v97 + 40);
          uint64_t v105 = *(void *)(v97 + 48);
          __int16 v106 = *(unsigned __int8 *)(v97 + 56);
          __int16 v107 = *(unsigned __int8 *)(v97 + 57);
          if (sub_1A8866D34(v98, *(void *)(v97 + 16)))
          {
            uint64_t v108 = v199;
            sub_1A8904D34(v108, v99, v100, v101 | (v102 << 8), v103, v104, v105, v106 | (v107 << 8));
          }
        }
      }
      return;
    case 0xFuLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0xF)
      {
        uint64_t v109 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v110 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        sub_1A894AE58(v109, v110);
      }
      return;
    case 0x10uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x10
        && (*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)) == (*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)))
      {
        uint64_t v111 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        char v112 = *(unsigned char *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x28);
        uint64_t v113 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        char v114 = *(unsigned char *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x28);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10))&& (v112 & 1) == 0&& (v114 & 1) == 0)
        {
          _s12NIOIMAPCore220ChangedSinceModifierV23__derived_struct_equalsySbAC_ACtFZ_0(v111, v113);
        }
      }
      return;
    case 0x11uLL:
      unint64_t v115 = (int *)__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748280);
      uint64_t v116 = swift_projectBox();
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x11)
      {
        LODWORD(v198) = *(unsigned __int8 *)(v116 + 16);
        uint64_t v117 = v115[20];
        v193[1] = *(void *)(v116 + v117);
        uint64_t v195 = *(uint64_t **)(v116 + v115[24]);
        LODWORD(v197) = *(unsigned __int8 *)(v116 + v117 + 8);
        uint64_t v119 = *(void *)v116;
        uint64_t v118 = *(void *)(v116 + 8);
        uint64_t v120 = v115[16];
        uint64_t v121 = v116 + v120;
        uint64_t v122 = swift_projectBox();
        uint64_t v124 = *(void *)v122;
        uint64_t v123 = *(void *)(v122 + 8);
        LODWORD(v199) = *(unsigned __int8 *)(v122 + 16);
        uint64_t v125 = v122 + v120;
        v193[0] = *(void *)(v122 + v117);
        LODWORD(v196) = *(unsigned __int8 *)(v122 + v117 + 8);
        uint64_t v126 = v121;
        uint64_t v127 = v194;
        sub_1A8511A9C(v126, v194, (uint64_t *)&unk_1E9741C30);
        sub_1A8511A9C(v125, (uint64_t)v18, (uint64_t *)&unk_1E9741C30);
        if (v118 == v123
          && sub_1A8866D34(v119, v124)
          && (sub_1A894E0C0(v198, v199) & 1) != 0)
        {
          sub_1A894BAF4();
          sub_1A8511B00((uint64_t)v18, (uint64_t *)&unk_1E9741C30);
          sub_1A8511B00(v127, (uint64_t *)&unk_1E9741C30);
        }
        else
        {
          v191 = (uint64_t *)&unk_1E9741C30;
          sub_1A8511B00((uint64_t)v18, (uint64_t *)&unk_1E9741C30);
          uint64_t v192 = v127;
LABEL_178:
          sub_1A8511B00(v192, v191);
        }
      }
      return;
    case 0x12uLL:
      unint64_t v128 = v199;
      if (((v128 >> 58) & 0x3C | (v128 >> 1) & 3) == 0x12) {
        goto LABEL_95;
      }
      return;
    case 0x13uLL:
      uint64_t v171 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v172 = *(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v173 = *(unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x1C);
      int v174 = *(_DWORD *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
      int v175 = *(_DWORD *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x24);
      sub_1A890739C((v37 & 0xFFFFFFFFFFFFFF9) + 40, (uint64_t)v208);
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) != 0x13) {
        return;
      }
      uint64_t v176 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v177 = *(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v178 = *(unsigned __int8 *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x1C);
      uint64_t v179 = (v199 & 0xFFFFFFFFFFFFFF9) + 40;
      int v180 = *(_DWORD *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
      LODWORD(v199) = *(_DWORD *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x24);
      sub_1A890739C(v179, (uint64_t)v207);
      if ((v172 | (v172 << 32)) != (v177 | (v177 << 32)) || !sub_1A8866D34(v171, v176)) {
        return;
      }
      sub_1A8880568((uint64_t)v208, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
      sub_1A8880568((uint64_t)v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
      if ((sub_1A894E0C0(v173, v178) & 1) == 0 || !sub_1A87BA7A8(v174, v180) || v175 != v199)
      {
        sub_1A8880568((uint64_t)v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
        sub_1A8880568((uint64_t)v208, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
        return;
      }
      sub_1A890739C((uint64_t)v208, (uint64_t)v206);
      if (sub_1A856B98C((uint64_t)v206) == 1)
      {
        sub_1A890739C((uint64_t)v207, (uint64_t)v203);
        if (sub_1A856B98C((uint64_t)v203) != 1) {
          goto LABEL_186;
        }
      }
      else
      {
        sub_1A890739C((uint64_t)v207, (uint64_t)v202);
        if (sub_1A856B98C((uint64_t)v202) == 1)
        {
LABEL_186:
          sub_1A890739C((uint64_t)v208, (uint64_t)v203);
          sub_1A890739C((uint64_t)v207, (uint64_t)&v205);
          sub_1A888035C((uint64_t)v203);
          return;
        }
        sub_1A890739C((uint64_t)v208, (uint64_t)v200);
        sub_1A8644AD0((uint64_t)v200, (uint64_t)v209);
        sub_1A890739C((uint64_t)v207, (uint64_t)v201);
        sub_1A8644AD0((uint64_t)v201, (uint64_t)v203);
        sub_1A8880568((uint64_t)v208, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
        sub_1A8880568((uint64_t)v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
        static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v209, v203);
        sub_1A8880568((uint64_t)v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
        sub_1A8880568((uint64_t)v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
        sub_1A8880568((uint64_t)v208, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
        sub_1A8880568((uint64_t)v208, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
      }
      return;
    case 0x14uLL:
      uint64_t v129 = swift_projectBox();
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x14)
      {
        uint64_t v130 = v129;
        uint64_t v131 = *(void *)v129;
        uint64_t v133 = *(unsigned int *)(v129 + 8);
        int v132 = *(_DWORD *)(v129 + 12);
        uint64_t v134 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E430) + 64);
        uint64_t v135 = v130 + v134;
        uint64_t v136 = swift_projectBox();
        uint64_t v137 = *(void *)v136;
        uint64_t v139 = *(unsigned int *)(v136 + 8);
        int v138 = *(_DWORD *)(v136 + 12);
        uint64_t v140 = v136 + v134;
        uint64_t v141 = v135;
        uint64_t v142 = v198;
        sub_1A89072D4(v141, v198, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        uint64_t v143 = v140;
        uint64_t v144 = v197;
        sub_1A89072D4(v143, v197, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        if ((v133 | (v133 << 32)) == (v139 | (v139 << 32)) && sub_1A8866D34(v131, v137) && sub_1A87BA7A8(v132, v138))
        {
          uint64_t v145 = sub_1A8A75D38();
          uint64_t v146 = sub_1A8A75D38();
          if (*(void *)(v145 + 16) == *(void *)(v146 + 16))
          {
            sub_1A891F754(v145, v146);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A890733C(v144, (uint64_t (*)(void))type metadata accessor for MessageHeader);
            sub_1A890733C(v142, (uint64_t (*)(void))type metadata accessor for MessageHeader);
            return;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1A890733C(v144, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        sub_1A890733C(v142, (uint64_t (*)(void))type metadata accessor for MessageHeader);
      }
      return;
    case 0x15uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x15)
      {
        uint64_t v147 = swift_projectBox();
        uint64_t v148 = swift_projectBox();
        sub_1A89072D4(v147, (uint64_t)v11, type metadata accessor for MessageSectionData);
        sub_1A89072D4(v148, (uint64_t)v8, type metadata accessor for MessageSectionData);
        _s16IMAP2Persistence18MessageSectionDataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v8);
        sub_1A890733C((uint64_t)v8, type metadata accessor for MessageSectionData);
        sub_1A890733C((uint64_t)v11, type metadata accessor for MessageSectionData);
      }
      return;
    case 0x16uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x16
        && (*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)) == (*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)))
      {
        uint64_t v149 = *(unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x1C);
        int v150 = *(_DWORD *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v151 = *(unsigned __int8 *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x1C);
        int v152 = *(_DWORD *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10))&& (sub_1A894E0C0(v149, v151) & 1) != 0)
        {
          sub_1A87BA7A8(v150, v152);
        }
      }
      return;
    case 0x17uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x17
        && *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        uint64_t v181 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v182 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
          sub_1A8929310(v181, v182);
        }
      }
      return;
    case 0x18uLL:
      unint64_t v128 = v199;
      if (((v128 >> 58) & 0x3C | (v128 >> 1) & 3) == 0x18) {
        goto LABEL_95;
      }
      return;
    case 0x19uLL:
      unint64_t v128 = v199;
      if (((v128 >> 58) & 0x3C | (v128 >> 1) & 3) == 0x19)
      {
LABEL_95:
        uint64_t v153 = v37 & 0xFFFFFFFFFFFFFF9;
        uint64_t v154 = v128 & 0xFFFFFFFFFFFFFF9;
        if (*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v128 & 0xFFFFFFFFFFFFFF9) + 0x18)) {
          goto LABEL_103;
        }
      }
      return;
    case 0x1AuLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x1A
        && *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18))
      {
        uint64_t v183 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v184 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
          sub_1A894B000(v183, v184);
        }
      }
      return;
    case 0x1BuLL:
      unint64_t v155 = v199;
      if (((v155 >> 58) & 0x3C | (v155 >> 1) & 3) == 0x1B) {
        goto LABEL_102;
      }
      return;
    case 0x1CuLL:
      unint64_t v156 = v199;
      if (((v156 >> 58) & 0x3C | (v156 >> 1) & 3) == 0x1C) {
        goto LABEL_161;
      }
      return;
    case 0x1DuLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x1D
        && (*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)) == (*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)))
      {
        uint64_t v185 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        unint64_t v186 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x28);
        uint64_t v187 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        unint64_t v188 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x28);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
          goto LABEL_163;
        }
      }
      return;
    case 0x1EuLL:
      unint64_t v156 = v199;
      if (((v156 >> 58) & 0x3C | (v156 >> 1) & 3) == 0x1E)
      {
LABEL_161:
        if ((*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)) == (*(unsigned int *)((v156 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v156 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)))
        {
          uint64_t v185 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
          unint64_t v186 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x28);
          uint64_t v187 = *(void *)((v156 & 0xFFFFFFFFFFFFFF9) + 0x20);
          unint64_t v188 = *(void *)((v156 & 0xFFFFFFFFFFFFFF9) + 0x28);
          if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v156 & 0xFFFFFFFFFFFFFF9) + 0x10)))
          {
LABEL_163:
            sub_1A8512DFC(v185, v186);
            sub_1A8512DFC(v187, v188);
            sub_1A894E0C4(v185, v186, v187, v188);
            sub_1A85135AC(v187, v188);
            sub_1A85135AC(v185, v186);
          }
        }
      }
      return;
    case 0x1FuLL:
      unint64_t v155 = v199;
      if (((v155 >> 58) & 0x3C | (v155 >> 1) & 3) == 0x1F)
      {
LABEL_102:
        uint64_t v153 = v37 & 0xFFFFFFFFFFFFFF9;
        uint64_t v154 = v155 & 0xFFFFFFFFFFFFFF9;
        if ((*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)) == (*(unsigned int *)((v155 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v155 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32))) {
LABEL_103:
        }
          sub_1A8866D34(*(void *)(v153 + 16), *(void *)(v154 + 16));
      }
      return;
    case 0x20uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x20
        && (*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)) == (*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)))
      {
        uint64_t v157 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v158 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
          sub_1A894B184(v157, v158);
        }
      }
      return;
    case 0x21uLL:
      unint64_t v59 = v199;
      if (((v59 >> 58) & 0x3C | (v59 >> 1) & 3) == 0x21) {
        goto LABEL_117;
      }
      return;
    case 0x22uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x22)
      {
        uint64_t v159 = *(void **)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v160 = *(void **)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        sub_1A8929090(v159, v160);
      }
      return;
    case 0x23uLL:
      unint64_t v59 = v199;
      if (((v59 >> 58) & 0x3C | (v59 >> 1) & 3) == 0x23)
      {
LABEL_117:
        if (*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) == *(void *)((v59 & 0xFFFFFFFFFFFFFF9) + 0x18)) {
          sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v59 & 0xFFFFFFFFFFFFFF9) + 0x10));
        }
      }
      return;
    case 0x24uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x24)
      {
        uint64_t v161 = swift_projectBox();
        uint64_t v162 = swift_projectBox();
        uint64_t v163 = v161;
        id v164 = v195;
        sub_1A89072D4(v163, (uint64_t)v195, type metadata accessor for Activity);
        uint64_t v165 = v162;
        uint64_t v166 = v196;
        sub_1A89072D4(v165, (uint64_t)v196, type metadata accessor for Activity);
        _s16IMAP2Persistence8ActivityV23__derived_struct_equalsySbAC_ACtFZ_0(v164, v166);
        sub_1A890733C((uint64_t)v166, type metadata accessor for Activity);
        sub_1A890733C((uint64_t)v164, type metadata accessor for Activity);
      }
      return;
    case 0x25uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x25)
      {
        uint64_t v167 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v168 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        sub_1A894B3CC(v167, v168);
      }
      return;
    case 0x26uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x26
        && *(_DWORD *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10) == *(_DWORD *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10))
      {
        uint64_t v189 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18);
        uint64_t v190 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18);
        sub_1A894B620(v189, v190);
      }
      return;
    case 0x27uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x27)
      {
        uint64_t v41 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v42 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
        goto LABEL_5;
      }
      return;
    case 0x28uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x28
        && (*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)) == (*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) | ((unint64_t)*(unsigned int *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x18) << 32)))
      {
        uint64_t v169 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x20);
        uint64_t v170 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x20);
        if (sub_1A8866D34(*(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10)))
        {
          sub_1A8955480(v169, v170);
        }
      }
      return;
    case 0x29uLL:
      if (((v199 >> 58) & 0x3C | (v199 >> 1) & 3) == 0x29)
      {
        uint64_t v41 = *(void *)((v37 & 0xFFFFFFFFFFFFFF9) + 0x10);
        uint64_t v42 = *(void *)((v199 & 0xFFFFFFFFFFFFFF9) + 0x10);
LABEL_5:
        sub_1A89551D4(v41, v42, v38);
      }
      return;
    default:
      return;
  }
}

unint64_t sub_1A8906A34()
{
  unint64_t result = qword_1E974E428;
  if (!qword_1E974E428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E428);
  }
  return result;
}

unint64_t sub_1A8906A8C()
{
  unint64_t result = qword_1E9748288;
  if (!qword_1E9748288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9748288);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for Action(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1A8906B14(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1A8906B14(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for Action(unint64_t *a1)
{
  return sub_1A8906C0C(*a1);
}

unint64_t sub_1A8906C0C(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t *assignWithCopy for Action(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1A8906B14(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1A8906C0C(v4);
  return a1;
}

unint64_t *assignWithTake for Action(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1A8906C0C(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Action(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x55 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 85);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 1) & 0xFFFFFFBF | ((*(void *)a1 & 1) << 6)) ^ 0x7F;
  if (v3 >= 0x54) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Action(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x54)
  {
    *(void *)unint64_t result = a2 - 85;
    if (a3 >= 0x55) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x55) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 6) & 1 | (2 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A8906E18(void *a1)
{
  unsigned int v1 = (*a1 >> 58) & 0x3C | (*a1 >> 1) & 3;
  if (v1 <= 0x2A) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 43;
  }
}

void *sub_1A8906E3C(void *result)
{
  *result &= 0xFFFFFFFFFFFFFF9uLL;
  return result;
}

unint64_t *sub_1A8906E50(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x2B) {
    *unint64_t result = (a2 << 58) & 0xF000000000000000 | (2 * (a2 & 3)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    *unint64_t result = (8 * (a2 - 43)) | 0xA000000000000006;
  }
  return result;
}

ValueMetadata *type metadata accessor for Action()
{
  return &type metadata for Action;
}

unsigned char *__swift_memcpy1_1_6(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Action.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD4) {
    goto LABEL_17;
  }
  if (a2 + 44 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 44) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 44;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 44;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 44;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2D;
  int v8 = v6 - 45;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Action.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 44 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 44) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD3)
  {
    unsigned int v6 = ((a2 - 212) >> 8) + 1;
    *unint64_t result = a2 + 44;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8907004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 44;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Action.Kind()
{
  return &type metadata for Action.Kind;
}

ValueMetadata *type metadata accessor for ActionID()
{
  return &type metadata for ActionID;
}

__n128 __swift_memcpy33_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MailboxMetadata()
{
  return &type metadata for MailboxMetadata;
}

__n128 __swift_memcpy17_8_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for MailboxSyncStatus()
{
  return &type metadata for MailboxSyncStatus;
}

uint64_t sub_1A8907098(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 4) = *(void *)(a2 + 4);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MessageFlagUpdate(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 4);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 4) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8_5(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MessageFlagUpdate(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 4) = *(void *)(a2 + 4);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MessageFlagUpdate()
{
  return &type metadata for MessageFlagUpdate;
}

__n128 __swift_memcpy26_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Action.UnreadCountOutsideWindowOfInterest(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Action.UnreadCountOutsideWindowOfInterest(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 26) = v3;
  return result;
}

uint64_t sub_1A890720C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A8907228(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 25) = 1;
  }
  else
  {
    *(unsigned char *)(result + 25) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Action.UnreadCountOutsideWindowOfInterest()
{
  return &type metadata for Action.UnreadCountOutsideWindowOfInterest;
}

__n128 __swift_memcpy25_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Action.UnreadCountOutsideWindowOfInterest.Count()
{
  return &type metadata for Action.UnreadCountOutsideWindowOfInterest.Count;
}

uint64_t __swift_memcpy9_4_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t storeEnumTagSinglePayload for Action.FetchedWindowUpdate(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Action.FetchedWindowUpdate()
{
  return &type metadata for Action.FetchedWindowUpdate;
}

uint64_t sub_1A89072D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A890733C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A890739C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97461D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Activity.init(mailboxesWithPendingWork:accountError:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = sub_1A890338C(MEMORY[0x1E4FBC860]);
  uint64_t v6 = (uint64_t)a3 + *(int *)(type metadata accessor for Activity(0) + 24);
  uint64_t v7 = type metadata accessor for ConnectionStatus.Error(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  a3[1] = a1;
  return sub_1A890BECC(a2, v6);
}

uint64_t Activity.MailboxStatus.Info.isCheckingForNewMessages.getter(char a1)
{
  return a1 & 1;
}

uint64_t Activity.MailboxStatus.Info.isCheckingForNewMessages.setter(uint64_t result)
{
  *unsigned int v1 = result;
  return result;
}

double (*Activity.MailboxStatus.Info.isCheckingForNewMessages.modify())(void)
{
  return nullsub_1;
}

uint64_t Activity.MailboxStatus.Info.fetch.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Activity.MailboxStatus.Info.fetch.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 8) = result;
  *(void *)(v3 + 16) = a2;
  *(unsigned char *)(v3 + 24) = a3 & 1;
  return result;
}

double (*Activity.MailboxStatus.Info.fetch.modify())(void)
{
  return nullsub_1;
}

uint64_t Activity.MailboxStatus.Info.isSyncing.getter(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (a4 >> 8) & 1;
}

uint64_t Activity.MailboxStatus.Info.isSyncing.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

double (*Activity.MailboxStatus.Info.isSyncing.modify())(void)
{
  return nullsub_1;
}

uint64_t Activity.MailboxStatus.Info.FetchProgress.remaining.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*Activity.MailboxStatus.Info.FetchProgress.remaining.modify())(void)
{
  return nullsub_1;
}

uint64_t Activity.MailboxStatus.Info.FetchProgress.completed.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Activity.MailboxStatus.Info.FetchProgress.completed.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*Activity.MailboxStatus.Info.FetchProgress.completed.modify())(void)
{
  return nullsub_1;
}

uint64_t Activity.MailboxStatus.Info.FetchProgress.total.getter(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v2) {
    __break(1u);
  }
  return result;
}

BOOL static Activity.MailboxStatus.Info.FetchProgress.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

IMAP2Persistence::Activity::MailboxStatus::Info __swiftcall Activity.MailboxStatus.Info.init(isCheckingForNewMessages:fetch:isSyncing:)(Swift::Bool isCheckingForNewMessages, IMAP2Persistence::Activity::MailboxStatus::Info::FetchProgress_optional fetch, Swift::Bool isSyncing)
{
  if (isSyncing) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  BOOL v4 = isCheckingForNewMessages;
  *(_WORD *)&fetch.is_nil = v3 & 0xFFFE | fetch.is_nil;
  result.fetch = fetch;
  result.isCheckingForNewMessages = v4;
  *(_DWORD *)result.gap1 = *(_DWORD *)((char *)&v4 + 1);
  *(_WORD *)&result.gap1[4] = *(_WORD *)((char *)&v4 + 5);
  result.gap1[6] = HIBYTE(v4);
  result.isSyncing = v5;
  return result;
}

uint64_t static Activity.MailboxStatus.Info.__derived_struct_equals(_:_:)(int a1, uint64_t a2, uint64_t a3, __int16 a4, int a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  if ((a1 ^ a5)) {
    return 0;
  }
  if (a4)
  {
    if ((a8 & 1) == 0) {
      return 0;
    }
    return ((a4 & 0x100) == 0) ^ ((unsigned __int16)(a8 & 0x100) >> 8);
  }
  uint64_t result = 0;
  if ((a8 & 1) == 0 && a2 == a6 && a3 == a7) {
    return ((a4 & 0x100) == 0) ^ ((unsigned __int16)(a8 & 0x100) >> 8);
  }
  return result;
}

uint64_t sub_1A890764C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[24])
  {
    if ((a2[24] & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (a2[24]) {
      return 0;
    }
    if (*((void *)a1 + 1) != *((void *)a2 + 1) || *((void *)a1 + 2) != *((void *)a2 + 2)) {
      return 0;
    }
  }
  return a1[25] ^ a2[25] ^ 1u;
}

uint64_t Activity.MailboxStatus.isSelectedAndInSync.getter()
{
  uint64_t v1 = type metadata accessor for Activity.MailboxStatus(0);
  MEMORY[0x1F4188790](v1);
  __int16 v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A890C01C(v0, (uint64_t)v3, type metadata accessor for Activity.MailboxStatus);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A890BFBC((uint64_t)v3, type metadata accessor for Activity.MailboxStatus);
  }
  else if ((*v3 & 1) == 0)
  {
    char v4 = (v3[24] | (*((void *)v3 + 1) == 0)) & (v3[25] ^ 1);
    return v4 & 1;
  }
  char v4 = 0;
  return v4 & 1;
}

uint64_t Activity.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743210);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v3;
  uint64_t v42 = a2;
  uint64_t v20 = *v3;
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v43 = a3;
  if (v21)
  {
    uint64_t v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v23 = sub_1A8908C00(v22, a2);
    if (v24)
    {
      sub_1A890C01C(*(void *)(v20 + 56) + *(void *)(v16 + 72) * v23, (uint64_t)v14, type metadata accessor for Activity.MailboxStatus);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v25(v14, 0, 1, v15);
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v25(v14, 1, 1, v15);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1A890BF54((uint64_t)v14, (uint64_t)v19, type metadata accessor for Activity.MailboxStatus);
      uint64_t v36 = (uint64_t)v19;
      uint64_t v30 = v43;
      sub_1A890BF54(v36, v43, type metadata accessor for Activity.MailboxStatus);
LABEL_12:
      uint64_t v34 = v30;
      uint64_t v35 = 0;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25)(v34, v35, 1, v15);
    }
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v25)(v14, 1, 1, v15, v17);
  }
  sub_1A8511B00((uint64_t)v14, &qword_1E9743210);
  uint64_t v26 = type metadata accessor for Activity(0);
  uint64_t v27 = v41;
  sub_1A8511A9C((uint64_t)v41 + *(int *)(v26 + 24), (uint64_t)v9, &qword_1E9743150);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v40);
  uint64_t v29 = v42;
  if (v28 == 1)
  {
    sub_1A8511B00((uint64_t)v9, &qword_1E9743150);
    if ((sub_1A8907BCC(a1, v29, v27[1]) & 1) == 0)
    {
      uint64_t v34 = v43;
      uint64_t v35 = 1;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25)(v34, v35, 1, v15);
    }
    uint64_t v30 = v43;
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  uint64_t v31 = v39;
  sub_1A890BF54((uint64_t)v9, v39, type metadata accessor for ConnectionStatus.Error);
  uint64_t v32 = v31;
  uint64_t v33 = v43;
  sub_1A890BF54(v32, v43, type metadata accessor for ConnectionStatus.Error);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = v33;
  uint64_t v35 = 0;
  return ((uint64_t (*)(void, void, void, void))v25)(v34, v35, 1, v15);
}

uint64_t sub_1A8907BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v6 = sub_1A8A787C8();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    if (v10[1] == a2)
    {
      uint64_t v11 = *v10;
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12 == *(void *)(a1 + 16))
      {
        if (!v12 || v11 == a1) {
          return 1;
        }
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v12 == 1) {
            return 1;
          }
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v12 == 2) {
              return 1;
            }
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_4:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v13 = (unsigned __int8 *)(v11 + 35);
  uint64_t v14 = v12 - 3;
  uint64_t v15 = (unsigned __int8 *)(a1 + 35);
  while (v14)
  {
    int v17 = *v13++;
    int v16 = v17;
    int v18 = *v15++;
    --v14;
    if (v16 != v18) {
      goto LABEL_4;
    }
  }
  return 1;
}

uint64_t sub_1A8907D24(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v6 = sub_1A8A787C8();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = *(void *)(a3 + 48) + 16 * v8;
    if ((*(unsigned int *)(v10 + 8) | ((unint64_t)*(unsigned int *)(v10 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12 == *(void *)(a1 + 16))
      {
        if (!v12 || v11 == a1) {
          return 1;
        }
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v12 == 1) {
            return 1;
          }
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v12 == 2) {
              return 1;
            }
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_4:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v13 = (unsigned __int8 *)(v11 + 35);
  uint64_t v14 = v12 - 3;
  uint64_t v15 = (unsigned __int8 *)(a1 + 35);
  while (v14)
  {
    int v17 = *v13++;
    int v16 = v17;
    int v18 = *v15++;
    --v14;
    if (v16 != v18) {
      goto LABEL_4;
    }
  }
  return 1;
}

uint64_t Activity.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743210);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8511A9C(a1, (uint64_t)v11, &qword_1E9743210);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1A8511B00((uint64_t)v11, &qword_1E9743210);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A890810C((uint64_t)v8, a2, a3);
    sub_1A890A984(a2, a3);
    sub_1A8511B00(a1, &qword_1E9743210);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A890BF54((uint64_t)v11, (uint64_t)v15, type metadata accessor for Activity.MailboxStatus);
    sub_1A890C01C((uint64_t)v15, (uint64_t)v8, type metadata accessor for Activity.MailboxStatus);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    sub_1A890810C((uint64_t)v8, a2, a3);
    sub_1A8511B00(a1, &qword_1E9743210);
    return sub_1A890BFBC((uint64_t)v15, type metadata accessor for Activity.MailboxStatus);
  }
}

uint64_t sub_1A890810C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743210);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Activity.MailboxStatus(0);
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1A8511B00(a1, &qword_1E9743210);
    sub_1A890A7E0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1A8511B00((uint64_t)v10, &qword_1E9743210);
  }
  else
  {
    sub_1A890BF54(a1, (uint64_t)v14, type metadata accessor for Activity.MailboxStatus);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    *char v4 = 0x8000000000000000;
    sub_1A890B2B4((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *char v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void (*Activity.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[1] = a3;
  _OWORD v7[2] = v3;
  *uint64_t v7 = a2;
  size_t v8 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743210) - 8) + 64);
  void v7[3] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v7[4] = v9;
  Activity.subscript.getter(a2, a3, (uint64_t)v9);
  return sub_1A8908394;
}

void sub_1A8908394(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[3];
  char v4 = (void *)(*a1)[4];
  uint64_t v5 = (*a1)[1];
  uint64_t v6 = **a1;
  if (a2)
  {
    sub_1A8511A9C((*a1)[4], (uint64_t)v3, &qword_1E9743210);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    Activity.subscript.setter((uint64_t)v3, v6, v5);
    sub_1A8511B00((uint64_t)v4, &qword_1E9743210);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    Activity.subscript.setter((uint64_t)v4, v6, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t Activity.isServerUnavailable.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (unsigned __int8 *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Activity(0);
  sub_1A8511A9C(v0 + *(int *)(v8 + 24), (uint64_t)v3, &qword_1E9743150);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v3, &qword_1E9743150);
  }
  else
  {
    sub_1A890BF54((uint64_t)v3, (uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
    int v9 = *v7;
    sub_1A890BFBC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
    if (v9 == 2) {
      return 1;
    }
  }
  return 0;
}

uint64_t Activity.accountStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)v1 + 16))
  {
    uint64_t v10 = type metadata accessor for Activity.MailboxStatus(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v11(a1, 1, 1, v10);
  }
  else
  {
    uint64_t v13 = type metadata accessor for Activity(0);
    sub_1A8511A9C(v1 + *(int *)(v13 + 24), (uint64_t)v5, &qword_1E9743150);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1A8511B00((uint64_t)v5, &qword_1E9743150);
    }
    else
    {
      sub_1A890BF54((uint64_t)v5, (uint64_t)v9, type metadata accessor for ConnectionStatus.Error);
      sub_1A890BF54((uint64_t)v9, a1, type metadata accessor for ConnectionStatus.Error);
    }
    uint64_t v14 = type metadata accessor for Activity.MailboxStatus(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);
  }
}

uint64_t Activity.allMailboxIDs.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t Activity.MailboxStatus.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionStatus.Error(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = type metadata accessor for Activity.MailboxStatus(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A890C01C(v1, (uint64_t)v10, type metadata accessor for Activity.MailboxStatus);
  uint64_t v11 = 0x697463656E6E6F63;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A890BF54((uint64_t)v10, (uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      sub_1A890C01C((uint64_t)v7, (uint64_t)v4, type metadata accessor for ConnectionStatus.Error);
      uint64_t v11 = sub_1A8A76628();
      sub_1A890BFBC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      return v11;
    case 2u:
      return v11;
    case 3u:
      return 0xD000000000000010;
    default:
      uint64_t v12 = *((void *)v10 + 1);
      uint64_t v13 = *((void *)v10 + 2);
      if (*v10)
      {
        uint64_t v11 = 0xD000000000000010;
        if (v10[24]) {
          return v11;
        }
        unint64_t v18 = 0;
        unint64_t v19 = 0xE000000000000000;
        sub_1A8A77DC8();
        swift_bridgeObjectRelease();
        unint64_t v18 = 0xD000000000000012;
        unint64_t v19 = 0x80000001A8B3EF20;
        uint64_t v17 = v13;
        sub_1A8A784D8();
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        sub_1A8A767E8();
        uint64_t v14 = v12 + v13;
        if (!__OFADD__(v12, v13)) {
          goto LABEL_15;
        }
        __break(1u);
LABEL_14:
        unint64_t v18 = 0;
        unint64_t v19 = 0xE000000000000000;
        sub_1A8A77DC8();
        swift_bridgeObjectRelease();
        unint64_t v18 = 0x676E696863746566;
        unint64_t v19 = 0xE90000000000002DLL;
        uint64_t v17 = v13;
        sub_1A8A784D8();
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        sub_1A8A767E8();
        uint64_t v14 = v12 + v13;
        if (__OFADD__(v12, v13))
        {
          __break(1u);
          JUMPOUT(0x1A8908BECLL);
        }
LABEL_15:
        uint64_t v17 = v14;
        sub_1A8A784D8();
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        return v18;
      }
      if (!v10[24]) {
        goto LABEL_14;
      }
      if (v10[25]) {
        return 0x676E69636E7973;
      }
      else {
        return 0x636E79732D6E69;
      }
  }
}

unint64_t sub_1A8908C00(uint64_t a1, uint64_t a2)
{
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v4 = sub_1A8A787C8();
  return sub_1A8908E98(a1, a2, v4);
}

unint64_t sub_1A8908C74(uint64_t a1, unint64_t a2)
{
  sub_1A8A78738();
  sub_1A8512DFC(a1, a2);
  sub_1A8A74A78();
  sub_1A85135AC(a1, a2);
  uint64_t v4 = sub_1A8A787C8();
  return sub_1A8908F98(a1, a2, v4);
}

unint64_t sub_1A8908D04(uint64_t a1, unsigned int a2)
{
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v4 = sub_1A8A787C8();
  return sub_1A8909A44(a1, a2, v4);
}

unint64_t sub_1A8908D7C(uint64_t a1)
{
  sub_1A8A78738();
  sub_1A8A78768();
  sub_1A8A78798();
  sub_1A8A78768();
  long long v4 = *(_OWORD *)(a1 + 24);
  sub_1A8519BD8((uint64_t)&v4);
  sub_1A8A74A78();
  sub_1A8519C08((uint64_t)&v4);
  uint64_t v2 = sub_1A8A787C8();
  return sub_1A8909B50((unsigned __int8 *)a1, v2);
}

unint64_t sub_1A8908E2C(int a1)
{
  sub_1A8A78738();
  sub_1A8A78798();
  uint64_t v2 = sub_1A8A787C8();
  return sub_1A852EB88(a1, v2);
}

unint64_t sub_1A8908E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    while (1)
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      if (v8[1] == a2)
      {
        uint64_t v9 = *v8;
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10 == *(void *)(a1 + 16))
        {
          if (!v10 || v9 == a1) {
            return result;
          }
          if (*(unsigned __int8 *)(v9 + 32) == *(unsigned __int8 *)(a1 + 32))
          {
            if (v10 == 1) {
              return result;
            }
            if (*(unsigned __int8 *)(v9 + 33) == *(unsigned __int8 *)(a1 + 33))
            {
              if (v10 == 2) {
                return result;
              }
              if (*(unsigned __int8 *)(v9 + 34) == *(unsigned __int8 *)(a1 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t result = (result + 1) & v7;
      if (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        return result;
      }
    }
    uint64_t v11 = (unsigned __int8 *)(v9 + 35);
    uint64_t v12 = v10 - 3;
    uint64_t v13 = (unsigned __int8 *)(a1 + 35);
    while (v12)
    {
      int v15 = *v11++;
      int v14 = v15;
      int v16 = *v13++;
      --v12;
      if (v14 != v16) {
        goto LABEL_3;
      }
    }
  }
  return result;
}

unint64_t sub_1A8908F98(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v10 = a2 >> 62;
    uint64_t v86 = ~v5;
    unint64_t v78 = HIDWORD(a1);
    size_t v83 = HIDWORD(a1) - (int)a1;
    uint64_t v84 = v3 + 64;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v82 = v11;
    unint64_t v85 = a2 >> 62;
    uint64_t v81 = (int)a1;
    uint64_t v79 = a1 >> 32;
    uint64_t v77 = (a1 >> 32) - (int)a1;
    uint64_t v87 = v10;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_1A8512DFC(v14, v13);
          sub_1A8512DFC(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_122;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v87)
      {
        case 1:
          size_t v18 = v83;
          if (v82) {
            goto LABEL_123;
          }
          goto LABEL_19;
        case 2:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_124;
        case 3:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_119;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_119:
              sub_1A85135AC(v14, v13);
              sub_1A85135AC(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_125;
                }
                sub_1A8512DFC(a1, a2);
                uint64_t v25 = (char *)sub_1A8A74588();
                if (!v25) {
                  goto LABEL_33;
                }
                uint64_t v26 = sub_1A8A745B8();
                if (__OFSUB__((int)v14, v26)) {
                  goto LABEL_127;
                }
                v25 += (int)v14 - v26;
LABEL_33:
                sub_1A8A745A8();
                LODWORD(v10) = v85;
                if (v85)
                {
                  if (v85 == 1)
                  {
                    if (v79 < v81) {
                      goto LABEL_136;
                    }
                    swift_retain();
                    uint64_t v27 = (char *)sub_1A8A74588();
                    if (v27)
                    {
                      uint64_t v28 = sub_1A8A745B8();
                      if (__OFSUB__(v81, v28)) {
                        goto LABEL_143;
                      }
                      v27 += v81 - v28;
                    }
                    uint64_t v29 = sub_1A8A745A8();
                    size_t v30 = v77;
                    if (v29 < v77) {
                      size_t v30 = v29;
                    }
                    if (!v25) {
                      goto LABEL_145;
                    }
                    if (!v27) {
                      goto LABEL_146;
                    }
                    int v31 = memcmp(v25, v27, v30);
                    sub_1A85135AC(a1, a2);
                    sub_1A85135AC(a1, a2);
                    sub_1A85135AC(v14, v13);
                    sub_1A85135AC(v14, v13);
                    uint64_t v4 = v84;
                    if (!v31) {
                      return v6;
                    }
                  }
                  else
                  {
                    uint64_t v66 = *(void *)(a1 + 16);
                    uint64_t v76 = *(void *)(a1 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v67 = sub_1A8A74588();
                    if (v67)
                    {
                      uint64_t v68 = v67;
                      uint64_t v69 = sub_1A8A745B8();
                      if (__OFSUB__(v66, v69)) {
                        goto LABEL_142;
                      }
                      uint64_t v70 = (const void *)(v68 + v66 - v69);
                    }
                    else
                    {
                      uint64_t v70 = 0;
                    }
                    BOOL v21 = __OFSUB__(v76, v66);
                    int64_t v71 = v76 - v66;
                    uint64_t v4 = v84;
                    if (v21) {
                      goto LABEL_137;
                    }
                    uint64_t v72 = sub_1A8A745A8();
                    if (v72 >= v71) {
                      size_t v73 = v71;
                    }
                    else {
                      size_t v73 = v72;
                    }
                    if (!v25) {
                      goto LABEL_156;
                    }
                    LODWORD(v10) = v85;
                    if (!v70) {
                      goto LABEL_157;
                    }
                    int v59 = memcmp(v25, v70, v73);
                    swift_release();
LABEL_116:
                    swift_release();
                    sub_1A85135AC(a1, a2);
                    sub_1A85135AC(v14, v13);
                    sub_1A85135AC(v14, v13);
                    uint64_t v7 = v80;
                    if (!v59) {
                      return v6;
                    }
                  }
                }
                else
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v78;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = a2;
                  BYTE2(__s1[1]) = BYTE2(a2);
                  BYTE3(__s1[1]) = BYTE3(a2);
                  BYTE4(__s1[1]) = BYTE4(a2);
                  BYTE5(__s1[1]) = BYTE5(a2);
                  if (!v25) {
                    goto LABEL_155;
                  }
                  int v42 = memcmp(v25, __s1, __n);
                  sub_1A85135AC(a1, a2);
LABEL_103:
                  sub_1A85135AC(v14, v13);
                  sub_1A85135AC(v14, v13);
                  if (!v42) {
                    return v6;
                  }
                }
                break;
              case 2uLL:
                uint64_t v32 = *(void *)(v14 + 16);
                sub_1A8512DFC(a1, a2);
                swift_retain();
                swift_retain();
                uint64_t v33 = sub_1A8A74588();
                if (v33)
                {
                  uint64_t v34 = v33;
                  uint64_t v35 = sub_1A8A745B8();
                  if (__OFSUB__(v32, v35)) {
                    goto LABEL_126;
                  }
                  uint64_t v36 = (const void *)(v34 + v32 - v35);
                }
                else
                {
                  uint64_t v36 = 0;
                }
                sub_1A8A745A8();
                uint64_t v4 = v84;
                LODWORD(v10) = v85;
                if (!v85)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v78;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = a2;
                  BYTE2(__s1[1]) = BYTE2(a2);
                  BYTE3(__s1[1]) = BYTE3(a2);
                  BYTE4(__s1[1]) = BYTE4(a2);
                  BYTE5(__s1[1]) = BYTE5(a2);
                  if (!v36) {
                    goto LABEL_152;
                  }
                  int v59 = memcmp(v36, __s1, __n);
                  swift_release();
                  goto LABEL_116;
                }
                if (v85 == 1)
                {
                  if (v79 < v81) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  uint64_t v43 = (char *)sub_1A8A74588();
                  if (v43)
                  {
                    uint64_t v44 = sub_1A8A745B8();
                    if (__OFSUB__(v81, v44)) {
                      goto LABEL_141;
                    }
                    v43 += v81 - v44;
                  }
                  uint64_t v45 = sub_1A8A745A8();
                  size_t v46 = v77;
                  if (v45 < v77) {
                    size_t v46 = v45;
                  }
                  if (!v36) {
                    goto LABEL_148;
                  }
                  if (!v43) {
                    goto LABEL_149;
                  }
                  int v47 = memcmp(v36, v43, v46);
                  sub_1A85135AC(a1, a2);
                  swift_release();
                }
                else
                {
                  uint64_t v60 = *(void *)(a1 + 16);
                  uint64_t v75 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  char v61 = (char *)sub_1A8A74588();
                  if (v61)
                  {
                    uint64_t v62 = sub_1A8A745B8();
                    if (__OFSUB__(v60, v62)) {
                      goto LABEL_140;
                    }
                    v61 += v60 - v62;
                  }
                  BOOL v21 = __OFSUB__(v75, v60);
                  int64_t v63 = v75 - v60;
                  if (v21) {
                    goto LABEL_135;
                  }
                  uint64_t v64 = sub_1A8A745A8();
                  if (v64 >= v63) {
                    size_t v65 = v63;
                  }
                  else {
                    size_t v65 = v64;
                  }
                  if (!v36) {
                    goto LABEL_153;
                  }
                  LODWORD(v10) = v85;
                  if (!v61) {
                    goto LABEL_154;
                  }
                  int v47 = memcmp(v36, v61, v65);
                  swift_release();
                  swift_release();
                  swift_release();
                }
                swift_release();
                sub_1A85135AC(a1, a2);
                sub_1A85135AC(v14, v13);
                sub_1A85135AC(v14, v13);
                uint64_t v7 = v80;
                uint64_t v4 = v84;
                if (!v47) {
                  return v6;
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v10) {
                  goto LABEL_58;
                }
                if (v10 == 1)
                {
                  if (v79 < v81) {
                    goto LABEL_129;
                  }
                  sub_1A8512DFC(a1, a2);
                  uint64_t v37 = sub_1A8A74588();
                  if (!v37) {
                    goto LABEL_147;
                  }
                  uint64_t v23 = v37;
                  uint64_t v38 = sub_1A8A745B8();
                  unint64_t v10 = v81 - v38;
                  if (__OFSUB__(v81, v38)) {
                    goto LABEL_134;
                  }
LABEL_53:
                  uint64_t v39 = sub_1A8A745A8();
                  if (v39 >= v77) {
                    size_t v40 = v77;
                  }
                  else {
                    size_t v40 = v39;
                  }
                  int v41 = memcmp(__s1, (const void *)(v23 + v10), v40);
                  sub_1A85135AC(a1, a2);
                  sub_1A85135AC(v14, v13);
                  sub_1A85135AC(v14, v13);
                  LODWORD(v10) = v85;
                  if (!v41) {
                    return v6;
                  }
                }
                else
                {
                  uint64_t v54 = *(void *)(a1 + 16);
                  uint64_t v55 = *(void *)(a1 + 24);
                  sub_1A8512DFC(a1, a2);
                  swift_retain();
                  swift_retain();
                  uint64_t v50 = (char *)sub_1A8A74588();
                  if (v50)
                  {
                    uint64_t v56 = sub_1A8A745B8();
                    if (__OFSUB__(v54, v56)) {
                      goto LABEL_139;
                    }
                    v50 += v54 - v56;
                  }
                  int64_t v52 = v55 - v54;
                  if (__OFSUB__(v55, v54)) {
                    goto LABEL_132;
                  }
                  uint64_t v53 = sub_1A8A745A8();
                  if (!v50) {
                    goto LABEL_151;
                  }
LABEL_82:
                  if (v53 >= v52) {
                    size_t v57 = v52;
                  }
                  else {
                    size_t v57 = v53;
                  }
                  int v58 = memcmp(__s1, v50, v57);
                  swift_release();
                  swift_release();
                  sub_1A85135AC(a1, a2);
                  sub_1A85135AC(v14, v13);
                  sub_1A85135AC(v14, v13);
                  uint64_t v7 = v80;
                  uint64_t v4 = v84;
                  LODWORD(v10) = v85;
                  if (!v58) {
                    return v6;
                  }
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v10)
                {
LABEL_58:
                  __int16 __s2 = a1;
                  char v90 = BYTE2(a1);
                  char v91 = BYTE3(a1);
                  char v92 = v78;
                  char v93 = BYTE5(a1);
                  char v94 = BYTE6(a1);
                  char v95 = HIBYTE(a1);
                  __int16 v96 = a2;
                  char v97 = BYTE2(a2);
                  char v98 = BYTE3(a2);
                  char v99 = BYTE4(a2);
                  char v100 = BYTE5(a2);
                  int v42 = memcmp(__s1, &__s2, __n);
                  goto LABEL_103;
                }
                if (v10 == 1)
                {
                  if (v79 < v81) {
                    goto LABEL_128;
                  }
                  sub_1A8512DFC(a1, a2);
                  uint64_t v22 = sub_1A8A74588();
                  if (!v22)
                  {
                    sub_1A8A745A8();
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    sub_1A8A745A8();
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x1A8909A14);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_1A8A745B8();
                  unint64_t v10 = v81 - v24;
                  if (__OFSUB__(v81, v24)) {
                    goto LABEL_133;
                  }
                  goto LABEL_53;
                }
                uint64_t v48 = *(void *)(a1 + 16);
                uint64_t v49 = *(void *)(a1 + 24);
                sub_1A8512DFC(a1, a2);
                swift_retain();
                swift_retain();
                uint64_t v50 = (char *)sub_1A8A74588();
                if (v50)
                {
                  uint64_t v51 = sub_1A8A745B8();
                  if (__OFSUB__(v48, v51)) {
                    goto LABEL_138;
                  }
                  v50 += v48 - v51;
                }
                int64_t v52 = v49 - v48;
                if (__OFSUB__(v49, v48)) {
                  goto LABEL_131;
                }
                uint64_t v53 = sub_1A8A745A8();
                if (!v50) {
                  goto LABEL_150;
                }
                goto LABEL_82;
            }
          }
          else
          {
LABEL_7:
            sub_1A85135AC(v14, v13);
            sub_1A85135AC(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v86;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_1A8909A44(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    while (1)
    {
      uint64_t v8 = *(void *)(v3 + 48) + 16 * result;
      if ((*(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned int *)(v8 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        uint64_t v9 = *(void *)v8;
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10 == *(void *)(a1 + 16))
        {
          if (!v10 || v9 == a1) {
            return result;
          }
          if (*(unsigned __int8 *)(v9 + 32) == *(unsigned __int8 *)(a1 + 32))
          {
            if (v10 == 1) {
              return result;
            }
            if (*(unsigned __int8 *)(v9 + 33) == *(unsigned __int8 *)(a1 + 33))
            {
              if (v10 == 2) {
                return result;
              }
              if (*(unsigned __int8 *)(v9 + 34) == *(unsigned __int8 *)(a1 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t result = (result + 1) & v7;
      if (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        return result;
      }
    }
    BOOL v11 = (unsigned __int8 *)(v9 + 35);
    uint64_t v12 = v10 - 3;
    unint64_t v13 = (unsigned __int8 *)(a1 + 35);
    while (v12)
    {
      int v15 = *v11++;
      int v14 = v15;
      int v16 = *v13++;
      --v12;
      if (v14 != v16) {
        goto LABEL_3;
      }
    }
  }
  return result;
}

unint64_t sub_1A8909B50(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v120 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v7 = a1;
    uint64_t v8 = ~v4;
    uint64_t v9 = *a1;
    __int16 v107 = (long long *)(a1 + 24);
    do
    {
      uint64_t v10 = *(void *)(v6 + 48);
      BOOL v11 = (unsigned __int8 *)(v10 + 40 * v5);
      if (v9 != *v11) {
        goto LABEL_5;
      }
      if (*((_DWORD *)v7 + 1) != *(_DWORD *)(v10 + 40 * v5 + 4)) {
        goto LABEL_5;
      }
      if ((*((unsigned int *)v11 + 4) | ((unint64_t)*((unsigned int *)v11 + 4) << 32)) != (*((unsigned int *)v7 + 4) | ((unint64_t)*((unsigned int *)v7 + 4) << 32))) {
        goto LABEL_5;
      }
      uint64_t v12 = *((void *)v11 + 1);
      uint64_t v13 = *((void *)v7 + 1);
      uint64_t v14 = *(void *)(v12 + 16);
      if (v14 != *(void *)(v13 + 16)) {
        goto LABEL_5;
      }
      uint64_t v15 = *((void *)v11 + 3);
      unint64_t v16 = *((void *)v11 + 4);
      if (v14) {
        BOOL v17 = v12 == v13;
      }
      else {
        BOOL v17 = 1;
      }
      if (!v17)
      {
        if (*(unsigned __int8 *)(v12 + 32) != *(unsigned __int8 *)(v13 + 32)) {
          goto LABEL_5;
        }
        if (v14 != 1)
        {
          if (*(unsigned __int8 *)(v12 + 33) != *(unsigned __int8 *)(v13 + 33)) {
            goto LABEL_5;
          }
          if (v14 != 2)
          {
            if (*(unsigned __int8 *)(v12 + 34) != *(unsigned __int8 *)(v13 + 34)) {
              goto LABEL_5;
            }
            uint64_t v19 = (unsigned __int8 *)(v12 + 35);
            uint64_t v20 = (unsigned __int8 *)(v13 + 35);
            uint64_t v21 = v14 - 3;
            while (v21)
            {
              int v23 = *v19++;
              int v22 = v23;
              int v24 = *v20++;
              --v21;
              if (v22 != v24) {
                goto LABEL_5;
              }
            }
          }
        }
      }
      long long v119 = *v107;
      unint64_t v108 = v16 >> 62;
      uint64_t v18 = 0;
      switch(v16 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v15), v15))
          {
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
          }
          uint64_t v25 = v6;
          uint64_t v26 = v3;
          uint64_t v27 = v9;
          uint64_t v28 = v8;
          uint64_t v29 = v7;
          uint64_t v18 = HIDWORD(v15) - (int)v15;
LABEL_30:
          sub_1A8512DFC(v15, v16);
          sub_1A8512DFC(v15, v16);
          uint64_t v7 = v29;
          uint64_t v8 = v28;
          uint64_t v9 = v27;
          uint64_t v3 = v26;
          uint64_t v6 = v25;
          break;
        case 2uLL:
          uint64_t v31 = *(void *)(v15 + 16);
          uint64_t v30 = *(void *)(v15 + 24);
          uint64_t v18 = v30 - v31;
          if (__OFSUB__(v30, v31)) {
            goto LABEL_140;
          }
          uint64_t v25 = v6;
          uint64_t v26 = v3;
          uint64_t v27 = v9;
          uint64_t v28 = v8;
          uint64_t v29 = v7;
          goto LABEL_30;
        case 3uLL:
          break;
        default:
          uint64_t v18 = BYTE6(v16);
          break;
      }
      unint64_t v114 = v16;
      uint64_t v32 = *((void *)&v119 + 1) >> 62;
      switch(*((void *)&v119 + 1) >> 62)
      {
        case 1:
          LODWORD(v33) = DWORD1(v119) - v119;
          if (__OFSUB__(DWORD1(v119), v119)) {
            goto LABEL_141;
          }
          uint64_t v33 = (int)v33;
LABEL_36:
          if (v18 == v33)
          {
            if (v18 < 1)
            {
LABEL_138:
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              sub_1A8512DFC(v15, v114);
              sub_1A85135AC(v15, v114);
              sub_1A85135AC(v15, v114);
              swift_bridgeObjectRelease();
              sub_1A85135AC(v15, v114);
              return v5;
            }
            switch((int)v108)
            {
              case 1:
                uint64_t v109 = v119;
                uint64_t v100 = (int)v15;
                uint64_t v101 = *((void *)&v119 + 1);
                if ((int)v15 > v15 >> 32) {
                  goto LABEL_143;
                }
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                uint64_t v105 = v15;
                sub_1A8512DFC(v15, v114);
                sub_1A8519BD8((uint64_t)&v119);
                uint64_t v43 = (char *)sub_1A8A74588();
                if (!v43) {
                  goto LABEL_50;
                }
                uint64_t v44 = sub_1A8A745B8();
                if (__OFSUB__(v100, v44)) {
                  goto LABEL_145;
                }
                v43 += v100 - v44;
LABEL_50:
                sub_1A8A745A8();
                if (!v32)
                {
                  __s1[0] = v109;
                  LODWORD(__s1[1]) = v101;
                  WORD2(__s1[1]) = WORD2(v101);
                  if (!v43) {
                    goto LABEL_167;
                  }
                  size_t v62 = BYTE6(v101);
                  char v61 = __s1;
                  int64_t v63 = v43;
LABEL_97:
                  int v66 = memcmp(v63, v61, v62);
                  goto LABEL_133;
                }
                if (v32 == 1)
                {
                  uint64_t v45 = (int)v109;
                  uint64_t v46 = (v109 >> 32) - (int)v109;
                  if (v109 >> 32 < (int)v109) {
                    goto LABEL_154;
                  }
                  swift_retain();
                  uint64_t v47 = sub_1A8A74588();
                  if (v47)
                  {
                    uint64_t v110 = v43;
                    uint64_t v48 = v47;
                    uint64_t v49 = sub_1A8A745B8();
                    if (__OFSUB__(v45, v49)) {
                      goto LABEL_161;
                    }
                    uint64_t v50 = (const void *)(v48 + v45 - v49);
                    uint64_t v43 = v110;
                  }
                  else
                  {
                    uint64_t v50 = 0;
                  }
                  uint64_t v95 = sub_1A8A745A8();
                  if (v95 >= v46) {
                    size_t v96 = v46;
                  }
                  else {
                    size_t v96 = v95;
                  }
                  if (!v43) {
                    goto LABEL_174;
                  }
                  if (!v50) {
                    goto LABEL_175;
                  }
                  int v66 = memcmp(v43, v50, v96);
                  sub_1A8519C08((uint64_t)&v119);
LABEL_133:
                  uint64_t v15 = v105;
LABEL_134:
                  unint64_t v65 = v114;
                  sub_1A85135AC(v15, v114);
                  sub_1A8519C08((uint64_t)&v119);
                  sub_1A85135AC(v15, v114);
LABEL_135:
                  swift_bridgeObjectRelease();
                  uint64_t v93 = v15;
                  unint64_t v94 = v65;
LABEL_136:
                  sub_1A85135AC(v93, v94);
                  if (!v66) {
                    return v5;
                  }
                  goto LABEL_5;
                }
                uint64_t v82 = *(void *)(v109 + 16);
                uint64_t v104 = *(void *)(v109 + 24);
                swift_retain();
                swift_retain();
                size_t v83 = (char *)sub_1A8A74588();
                if (v83)
                {
                  uint64_t v84 = sub_1A8A745B8();
                  if (__OFSUB__(v82, v84)) {
                    goto LABEL_160;
                  }
                  v83 += v82 - v84;
                }
                BOOL v36 = __OFSUB__(v104, v82);
                int64_t v85 = v104 - v82;
                if (v36) {
                  goto LABEL_155;
                }
                uint64_t v86 = sub_1A8A745A8();
                if (v86 >= v85) {
                  size_t v87 = v85;
                }
                else {
                  size_t v87 = v86;
                }
                if (!v43) {
                  goto LABEL_168;
                }
                if (!v83) {
                  goto LABEL_169;
                }
                int v75 = memcmp(v43, v83, v87);
                swift_release();
LABEL_108:
                swift_release();
                uint64_t v15 = v105;
LABEL_117:
                sub_1A85135AC(v15, v114);
                sub_1A8519C08((uint64_t)&v119);
                sub_1A85135AC(v15, v114);
                swift_bridgeObjectRelease();
                sub_1A85135AC(v15, v114);
                if (!v75) {
                  return v5;
                }
                break;
              case 2:
                uint64_t v102 = *((void *)&v119 + 1);
                uint64_t v111 = v119;
                char v98 = *(char **)(v15 + 16);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v15, v114);
                sub_1A8519BD8((uint64_t)&v119);
                uint64_t v106 = v15;
                swift_retain();
                swift_retain();
                uint64_t v51 = (char *)sub_1A8A74588();
                if (!v51) {
                  goto LABEL_59;
                }
                uint64_t v52 = sub_1A8A745B8();
                if (__OFSUB__(v98, v52)) {
                  goto LABEL_144;
                }
                uint64_t v51 = &v98[(void)v51 - v52];
LABEL_59:
                sub_1A8A745A8();
                if (!v32)
                {
                  __s1[0] = v111;
                  LODWORD(__s1[1]) = v102;
                  WORD2(__s1[1]) = WORD2(v102);
                  if (!v51) {
                    goto LABEL_166;
                  }
                  int v66 = memcmp(v51, __s1, BYTE6(v102));
                  swift_release();
                  swift_release();
                  goto LABEL_134;
                }
                char v99 = v51;
                if (v32 == 1)
                {
                  if (v111 >> 32 < (int)v111) {
                    goto LABEL_148;
                  }
                  swift_retain();
                  uint64_t v53 = sub_1A8A74588();
                  if (v53)
                  {
                    uint64_t v54 = v53;
                    uint64_t v55 = sub_1A8A745B8();
                    if (__OFSUB__((int)v111, v55)) {
                      goto LABEL_159;
                    }
                    uint64_t v56 = (const void *)(v54 + (int)v111 - v55);
                  }
                  else
                  {
                    uint64_t v56 = 0;
                  }
                  uint64_t v91 = sub_1A8A745A8();
                  if (v91 >= (v111 >> 32) - (int)v111) {
                    size_t v92 = (v111 >> 32) - (int)v111;
                  }
                  else {
                    size_t v92 = v91;
                  }
                  if (!v99) {
                    goto LABEL_172;
                  }
                  if (!v56) {
                    goto LABEL_173;
                  }
                  int v66 = memcmp(v99, v56, v92);
                  sub_1A8519C08((uint64_t)&v119);
                  swift_release();
                  swift_release();
                  sub_1A85135AC(v106, v114);
                  sub_1A8519C08((uint64_t)&v119);
                  sub_1A85135AC(v106, v114);
                  swift_bridgeObjectRelease();
                  uint64_t v93 = v106;
                  unint64_t v94 = v114;
                  goto LABEL_136;
                }
                uint64_t v76 = *(void *)(v111 + 16);
                uint64_t v103 = *(void *)(v111 + 24);
                swift_retain();
                swift_retain();
                uint64_t v77 = sub_1A8A74588();
                if (v77)
                {
                  uint64_t v78 = v77;
                  uint64_t v79 = sub_1A8A745B8();
                  if (__OFSUB__(v76, v79)) {
                    goto LABEL_158;
                  }
                  uint64_t v80 = v76;
                  uint64_t v81 = (const void *)(v78 + v76 - v79);
                }
                else
                {
                  uint64_t v80 = v76;
                  uint64_t v81 = 0;
                }
                int64_t v88 = v103 - v80;
                if (__OFSUB__(v103, v80)) {
                  goto LABEL_153;
                }
                uint64_t v89 = sub_1A8A745A8();
                if (v89 >= v88) {
                  size_t v90 = v88;
                }
                else {
                  size_t v90 = v89;
                }
                if (!v99) {
                  goto LABEL_170;
                }
                if (!v81) {
                  goto LABEL_171;
                }
                int v75 = memcmp(v99, v81, v90);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_117;
              case 3:
                memset(__s1, 0, 14);
                if (!v32) {
                  goto LABEL_74;
                }
                uint64_t v105 = v15;
                if (v32 == 1)
                {
                  uint64_t v57 = (int)v119;
                  uint64_t v38 = ((uint64_t)v119 >> 32) - (int)v119;
                  if ((uint64_t)v119 >> 32 < (int)v119) {
                    goto LABEL_147;
                  }
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v105, v114);
                  sub_1A8519BD8((uint64_t)&v119);
                  uint64_t v58 = sub_1A8A74588();
                  if (!v58) {
                    goto LABEL_163;
                  }
                  uint64_t v40 = v58;
                  uint64_t v59 = sub_1A8A745B8();
                  BOOL v36 = __OFSUB__(v57, v59);
                  uint64_t v42 = v57 - v59;
                  if (v36) {
                    goto LABEL_150;
                  }
LABEL_70:
                  uint64_t v60 = sub_1A8A745A8();
                  char v61 = (void *)(v40 + v42);
                  if (v60 >= v38) {
                    size_t v62 = v38;
                  }
                  else {
                    size_t v62 = v60;
                  }
                  int64_t v63 = __s1;
                  goto LABEL_97;
                }
                uint64_t v72 = *(void *)(v119 + 16);
                uint64_t v113 = *(void *)(v119 + 24);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v15, v114);
                sub_1A8519BD8((uint64_t)&v119);
                swift_retain();
                swift_retain();
                uint64_t v68 = (char *)sub_1A8A74588();
                if (v68)
                {
                  uint64_t v73 = sub_1A8A745B8();
                  if (__OFSUB__(v72, v73)) {
                    goto LABEL_157;
                  }
                  v68 += v72 - v73;
                }
                BOOL v36 = __OFSUB__(v113, v72);
                int64_t v70 = v113 - v72;
                if (v36) {
                  goto LABEL_152;
                }
                uint64_t v71 = sub_1A8A745A8();
                if (!v68) {
                  goto LABEL_165;
                }
LABEL_86:
                if (v71 >= v70) {
                  size_t v74 = v70;
                }
                else {
                  size_t v74 = v71;
                }
                int v75 = memcmp(__s1, v68, v74);
                swift_release();
                goto LABEL_108;
              default:
                __s1[0] = v15;
                LODWORD(__s1[1]) = v114;
                WORD2(__s1[1]) = WORD2(v114);
                if (!v32)
                {
LABEL_74:
                  uint64_t __s2 = v119;
                  int v116 = DWORD2(v119);
                  __int16 v117 = WORD6(v119);
                  size_t v64 = BYTE14(v119);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  unint64_t v65 = v114;
                  sub_1A8512DFC(v15, v114);
                  sub_1A8519BD8((uint64_t)&v119);
                  int v66 = memcmp(__s1, &__s2, v64);
                  sub_1A85135AC(v15, v114);
                  sub_1A8519C08((uint64_t)&v119);
                  sub_1A85135AC(v15, v114);
                  goto LABEL_135;
                }
                uint64_t v105 = v15;
                if (v32 == 1)
                {
                  uint64_t v37 = (int)v119;
                  uint64_t v38 = ((uint64_t)v119 >> 32) - (int)v119;
                  if ((uint64_t)v119 >> 32 < (int)v119) {
                    goto LABEL_146;
                  }
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v105, v114);
                  sub_1A8519BD8((uint64_t)&v119);
                  uint64_t v39 = sub_1A8A74588();
                  if (!v39)
                  {
                    sub_1A8A745A8();
                    __break(1u);
LABEL_163:
                    sub_1A8A745A8();
                    __break(1u);
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
                    JUMPOUT(0x1A890A7B0);
                  }
                  uint64_t v40 = v39;
                  uint64_t v41 = sub_1A8A745B8();
                  BOOL v36 = __OFSUB__(v37, v41);
                  uint64_t v42 = v37 - v41;
                  if (v36) {
                    goto LABEL_149;
                  }
                  goto LABEL_70;
                }
                uint64_t v67 = *(void *)(v119 + 16);
                uint64_t v112 = *(void *)(v119 + 24);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v15, v114);
                sub_1A8519BD8((uint64_t)&v119);
                swift_retain();
                swift_retain();
                uint64_t v68 = (char *)sub_1A8A74588();
                if (v68)
                {
                  uint64_t v69 = sub_1A8A745B8();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_156;
                  }
                  v68 += v67 - v69;
                }
                BOOL v36 = __OFSUB__(v112, v67);
                int64_t v70 = v112 - v67;
                if (v36) {
                  goto LABEL_151;
                }
                uint64_t v71 = sub_1A8A745A8();
                if (!v68) {
                  goto LABEL_164;
                }
                goto LABEL_86;
            }
          }
          else
          {
LABEL_4:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A8512DFC(v15, v114);
            sub_1A85135AC(v15, v114);
            sub_1A85135AC(v15, v114);
            swift_bridgeObjectRelease();
            sub_1A85135AC(v15, v114);
          }
          break;
        case 2:
          uint64_t v35 = *(void *)(v119 + 16);
          uint64_t v34 = *(void *)(v119 + 24);
          BOOL v36 = __OFSUB__(v34, v35);
          uint64_t v33 = v34 - v35;
          if (!v36) {
            goto LABEL_36;
          }
          goto LABEL_142;
        case 3:
          if (v18) {
            goto LABEL_4;
          }
          goto LABEL_138;
        default:
          uint64_t v33 = BYTE14(v119);
          goto LABEL_36;
      }
LABEL_5:
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_1A890A7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v8 = sub_1A8908C00(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A890B4C4();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for Activity.MailboxStatus(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1A890BF54(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for Activity.MailboxStatus);
    sub_1A890B0BC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for Activity.MailboxStatus(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1A890A984(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v6 = sub_1A8A787C8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v8);
    if (v10[1] == a2)
    {
      uint64_t v11 = *v10;
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12 == *(void *)(a1 + 16))
      {
        if (v12) {
          BOOL v13 = v11 == a1;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13) {
          goto LABEL_20;
        }
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v12 == 1) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v12 == 2) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v14 = (unsigned __int8 *)(v11 + 35);
  uint64_t v15 = v12 - 3;
  uint64_t v16 = (unsigned __int8 *)(a1 + 35);
  while (v15)
  {
    int v18 = *v14++;
    int v17 = v18;
    int v19 = *v16++;
    --v15;
    if (v17 != v19) {
      goto LABEL_3;
    }
  }
LABEL_20:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v2;
  uint64_t v24 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A891AD48();
    uint64_t v22 = v24;
  }
  uint64_t v20 = *(void *)(*(void *)(v22 + 48) + 16 * v8);
  sub_1A859ED48(v8);
  *uint64_t v2 = v24;
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1A890AB3C(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v7 = sub_1A8A787C8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = ~v8;
  while (1)
  {
    uint64_t v11 = *(void *)(v6 + 48) + 16 * v9;
    if ((*(unsigned int *)(v11 + 8) | ((unint64_t)*(unsigned int *)(v11 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13 == *(void *)(a1 + 16))
      {
        if (v13) {
          BOOL v14 = v12 == a1;
        }
        else {
          BOOL v14 = 1;
        }
        if (v14) {
          goto LABEL_20;
        }
        if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v13 == 1) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v13 == 2) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v12 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v15 = (unsigned __int8 *)(v12 + 35);
  uint64_t v16 = v13 - 3;
  int v17 = (unsigned __int8 *)(a1 + 35);
  while (v16)
  {
    int v19 = *v15++;
    int v18 = v19;
    int v20 = *v17++;
    --v16;
    if (v18 != v20) {
      goto LABEL_3;
    }
  }
LABEL_20:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v3;
  uint64_t v25 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A891B23C();
    uint64_t v23 = v25;
  }
  uint64_t v21 = *(void *)(*(void *)(v23 + 48) + 16 * v9);
  sub_1A859EEF8(v9);
  *uint64_t v3 = v25;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1A890AD08(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E97472F8);
  int v41 = a2;
  uint64_t result = sub_1A8A781D8();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v39 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    uint64_t v37 = v2;
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v21 >= v38) {
          goto LABEL_34;
        }
        unint64_t v22 = v39[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v22 = v39[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v39 = -1 << v36;
              }
              uint64_t v3 = v37;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v22 = v39[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v40 + 72);
      uint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v41)
      {
        sub_1A890BF54(v28, (uint64_t)v7, type metadata accessor for Activity.MailboxStatus);
      }
      else
      {
        sub_1A890C01C(v28, (uint64_t)v7, type metadata accessor for Activity.MailboxStatus);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      sub_1A8A78738();
      sub_1A8A78768();
      uint64_t result = sub_1A8A787C8();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      *int v18 = v26;
      v18[1] = v25;
      uint64_t result = sub_1A890BF54((uint64_t)v7, *(void *)(v10 + 56) + v27 * v17, type metadata accessor for Activity.MailboxStatus);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_1A890B0BC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A8A77C08();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1A8A78738();
        sub_1A8A78768();
        uint64_t result = sub_1A8A787C8();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        int64_t v11 = (_OWORD *)(v10 + 16 * v3);
        uint64_t v12 = (_OWORD *)(v10 + 16 * v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *int64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 72);
        int64_t v15 = v14 * v3;
        uint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A890B2B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A8908C00(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A890B4C4();
      goto LABEL_7;
    }
    sub_1A890AD08(v15, a4 & 1);
    unint64_t v22 = sub_1A8908C00(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      int v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1A8A786A8();
    __break(1u);
    return result;
  }
LABEL_7:
  int v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 72) * v12;
    return sub_1A890F224(a1, v20);
  }
LABEL_13:
  sub_1A890B418(v12, a2, a3, a1, v18);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A890B418(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t result = sub_1A890BF54(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for Activity.MailboxStatus);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_1A890B4C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E97472F8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1A8A781C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    int v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1A890C01C(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for Activity.MailboxStatus);
    unint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *unint64_t v22 = v20;
    v22[1] = v19;
    sub_1A890BF54((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for Activity.MailboxStatus);
    uint64_t result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

BOOL _s16IMAP2Persistence8ActivityV13MailboxStatusO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionStatus.Error(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (unsigned __int8 *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Activity.MailboxStatus(0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (unsigned __int8 *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (unsigned __int8 *)&v25 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743218);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v15[*(int *)(v16 + 56)];
  sub_1A890C01C(a1, (uint64_t)v15, type metadata accessor for Activity.MailboxStatus);
  sub_1A890C01C(a2, (uint64_t)v17, type metadata accessor for Activity.MailboxStatus);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A890C01C((uint64_t)v15, (uint64_t)v9, type metadata accessor for Activity.MailboxStatus);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1A890BFBC((uint64_t)v9, type metadata accessor for ConnectionStatus.Error);
        goto LABEL_12;
      }
      sub_1A890BF54((uint64_t)v17, (uint64_t)v6, type metadata accessor for ConnectionStatus.Error);
      BOOL v22 = static ConnectionStatus.Error.__derived_struct_equals(_:_:)(v9, v6);
      sub_1A890BFBC((uint64_t)v6, type metadata accessor for ConnectionStatus.Error);
      sub_1A890BFBC((uint64_t)v9, type metadata accessor for ConnectionStatus.Error);
      sub_1A890BFBC((uint64_t)v15, type metadata accessor for Activity.MailboxStatus);
      return v22;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_10;
      }
      goto LABEL_12;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_10;
      }
      goto LABEL_12;
    default:
      sub_1A890C01C((uint64_t)v15, (uint64_t)v12, type metadata accessor for Activity.MailboxStatus);
      uint64_t v18 = *((void *)v12 + 1);
      uint64_t v19 = *((void *)v12 + 2);
      unsigned __int8 v20 = v12[24];
      int v21 = v12[25];
      if (!swift_getEnumCaseMultiPayload())
      {
        if (*v12 != *v17)
        {
LABEL_4:
          sub_1A890BFBC((uint64_t)v15, type metadata accessor for Activity.MailboxStatus);
          return 0;
        }
        if (v20)
        {
          if (!v17[24]) {
            goto LABEL_4;
          }
        }
        else
        {
          if (v17[24]) {
            goto LABEL_4;
          }
          if (v18 != *((void *)v17 + 1) || v19 != *((void *)v17 + 2)) {
            goto LABEL_4;
          }
        }
        if (((v21 ^ v17[25]) & 1) == 0)
        {
LABEL_10:
          sub_1A890BFBC((uint64_t)v15, type metadata accessor for Activity.MailboxStatus);
          return 1;
        }
        goto LABEL_4;
      }
LABEL_12:
      sub_1A8511B00((uint64_t)v15, &qword_1E9743218);
      return 0;
  }
}

BOOL _s16IMAP2Persistence8ActivityV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (unsigned __int8 *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (unsigned __int8 *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v27 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v27 - v18;
  if ((sub_1A89496C4(*a1, *a2) & 1) == 0 || (sub_1A8954CE8(a1[1], a2[1]) & 1) == 0) {
    return 0;
  }
  uint64_t v28 = v7;
  uint64_t v20 = v5;
  uint64_t v21 = type metadata accessor for Activity(0);
  sub_1A8511A9C((uint64_t)a1 + *(int *)(v21 + 24), (uint64_t)v19, &qword_1E9743150);
  sub_1A8511A9C((uint64_t)a2 + *(int *)(v21 + 24), (uint64_t)v16, &qword_1E9743150);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1A8511A9C((uint64_t)v19, (uint64_t)v10, &qword_1E9743150);
  sub_1A8511A9C((uint64_t)v16, v22, &qword_1E9743150);
  int64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v16, &qword_1E9743150);
    sub_1A8511B00((uint64_t)v19, &qword_1E9743150);
    if (v23(v22, 1, v4) == 1)
    {
      sub_1A8511B00((uint64_t)v10, &qword_1E9743150);
      return 1;
    }
    goto LABEL_8;
  }
  sub_1A8511A9C((uint64_t)v10, (uint64_t)v13, &qword_1E9743150);
  if (v23(v22, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v16, &qword_1E9743150);
    sub_1A8511B00((uint64_t)v19, &qword_1E9743150);
    sub_1A890BFBC((uint64_t)v13, type metadata accessor for ConnectionStatus.Error);
LABEL_8:
    sub_1A8511B00((uint64_t)v10, &qword_1E9740CA8);
    return 0;
  }
  unint64_t v24 = v28;
  sub_1A890BF54(v22, (uint64_t)v28, type metadata accessor for ConnectionStatus.Error);
  BOOL v25 = _s16IMAP2Persistence16ConnectionStatusO5ErrorV23__derived_struct_equalsySbAE_AEtFZ_0(v13, v24);
  sub_1A890BFBC((uint64_t)v24, type metadata accessor for ConnectionStatus.Error);
  sub_1A8511B00((uint64_t)v16, &qword_1E9743150);
  sub_1A8511B00((uint64_t)v19, &qword_1E9743150);
  sub_1A890BFBC((uint64_t)v13, type metadata accessor for ConnectionStatus.Error);
  sub_1A8511B00((uint64_t)v10, &qword_1E9743150);
  return v25;
}

uint64_t type metadata accessor for Activity(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9743220);
}

uint64_t sub_1A890BECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Activity.MailboxStatus(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E97431F0);
}

uint64_t sub_1A890BF54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A890BFBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A890C01C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for Activity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v13 = *(int *)(v9 + 20);
      uint64_t v14 = &v7[v13];
      uint64_t v15 = &v8[v13];
      uint64_t v16 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v21 = v15[1];
            *uint64_t v14 = *v15;
            v14[1] = v21;
            uint64_t v22 = v15[2];
            uint64_t v23 = v15[3];
            v14[2] = v22;
            void v14[3] = v23;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_11;
          case 2u:
          case 3u:
            uint64_t v19 = v15[1];
            *uint64_t v14 = *v15;
            v14[1] = v19;
LABEL_11:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            break;
          default:
            uint64_t v20 = sub_1A8A75C38();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v15, v20);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v24 = *(int *)(v9 + 24);
      BOOL v25 = &v7[v24];
      uint64_t v26 = &v8[v24];
      uint64_t v27 = sub_1A8A74C38();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for Activity(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = sub_1A8A75C38();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
          break;
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        case 2u:
        case 3u:
LABEL_6:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
    }
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1A8A74C38();
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      return v12(v10, v11);
    }
  }
  return result;
}

void *initializeWithCopy for Activity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v6 = *v7;
    uint64_t v12 = *(int *)(v8 + 20);
    uint64_t v13 = &v6[v12];
    uint64_t v14 = &v7[v12];
    uint64_t v15 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v20 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v20;
          uint64_t v21 = v14[2];
          uint64_t v22 = v14[3];
          _OWORD v13[2] = v21;
          v13[3] = v22;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_9;
        case 2u:
        case 3u:
          uint64_t v18 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v18;
LABEL_9:
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          break;
        default:
          uint64_t v19 = sub_1A8A75C38();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v23 = *(int *)(v8 + 24);
    uint64_t v24 = &v6[v23];
    BOOL v25 = &v7[v23];
    uint64_t v26 = sub_1A8A74C38();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for Activity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1A890BFBC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      goto LABEL_7;
    }
    *uint64_t v7 = *v8;
    uint64_t v23 = *(int *)(v9 + 20);
    uint64_t v24 = &v7[v23];
    BOOL v25 = &v8[v23];
    uint64_t v26 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v49 = *(void *)(v26 - 8);
    uint64_t v50 = v24;
    uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
    LODWORD(v24) = v27(v24, 1, v26);
    int v28 = v27(v25, 1, v26);
    if (v24)
    {
      if (!v28)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v50 = *v25;
            v50[1] = v25[1];
            v50[2] = v25[2];
            v50[3] = v25[3];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_33;
          case 2u:
          case 3u:
            *uint64_t v50 = *v25;
            v50[1] = v25[1];
LABEL_33:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            break;
          default:
            uint64_t v40 = sub_1A8A75C38();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v50, v25, v40);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v26);
        goto LABEL_35;
      }
      size_t v29 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108) - 8) + 64);
      unint64_t v30 = v50;
    }
    else
    {
      if (!v28)
      {
        if (a1 != a2)
        {
          sub_1A890BFBC((uint64_t)v50, type metadata accessor for ConnectionStatus.Error.Details);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v50 = *v25;
              v50[1] = v25[1];
              v50[2] = v25[2];
              v50[3] = v25[3];
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              swift_storeEnumTagMultiPayload();
              break;
            case 2u:
            case 3u:
              *uint64_t v50 = *v25;
              v50[1] = v25[1];
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v39 = sub_1A8A75C38();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v50, v25, v39);
              swift_storeEnumTagMultiPayload();
              break;
          }
        }
        goto LABEL_35;
      }
      sub_1A890BFBC((uint64_t)v50, type metadata accessor for ConnectionStatus.Error.Details);
      size_t v29 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108) - 8) + 64);
      unint64_t v30 = v50;
    }
    memcpy(v30, v25, v29);
LABEL_35:
    uint64_t v41 = *(int *)(v9 + 24);
    uint64_t v42 = &v7[v41];
    uint64_t v43 = &v8[v41];
    uint64_t v44 = sub_1A8A74C38();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v45 + 48);
    int v47 = v46(v42, 1, v44);
    int v48 = v46(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        return a1;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 24))(v42, v43, v44);
        return a1;
      }
      (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v42, v44);
    }
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360) - 8) + 64);
    uint64_t v21 = v42;
    uint64_t v22 = v43;
    goto LABEL_8;
  }
  if (v13)
  {
LABEL_7:
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150) - 8) + 64);
    uint64_t v21 = v7;
    uint64_t v22 = v8;
LABEL_8:
    memcpy(v21, v22, v20);
    return a1;
  }
  *uint64_t v7 = *v8;
  uint64_t v14 = *(int *)(v9 + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v15 = *v16;
        v15[1] = v16[1];
        void v15[2] = v16[2];
        v15[3] = v16[3];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 2u:
      case 3u:
        *uint64_t v15 = *v16;
        v15[1] = v16[1];
LABEL_21:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        break;
      default:
        uint64_t v31 = sub_1A8A75C38();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v15, v16, v31);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v32 = *(int *)(v9 + 24);
  unint64_t v33 = &v7[v32];
  BOOL v34 = &v8[v32];
  uint64_t v35 = sub_1A8A74C38();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for Activity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *uint64_t v5 = *v6;
    uint64_t v10 = *(int *)(v7 + 20);
    uint64_t v11 = &v5[v10];
    int v12 = &v6[v10];
    uint64_t v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v11, v12, *(void *)(v14 + 64));
      }
      else
      {
        uint64_t v16 = sub_1A8A75C38();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v17 = *(int *)(v7 + 24);
    uint64_t v18 = &v5[v17];
    uint64_t v19 = &v6[v17];
    uint64_t v20 = sub_1A8A74C38();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for Activity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1A890BFBC((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      goto LABEL_7;
    }
    *uint64_t v7 = *v8;
    uint64_t v23 = *(int *)(v9 + 20);
    uint64_t v24 = &v7[v23];
    BOOL v25 = &v8[v23];
    uint64_t v26 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v52 = *(void *)(v26 - 8);
    uint64_t v27 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v52 + 48);
    __dst = v24;
    LODWORD(v24) = v27(v24, 1, v26);
    __src = v25;
    int v28 = v27(v25, 1, v26);
    if (v24)
    {
      if (!v28)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          uint64_t v32 = v52;
          unint64_t v33 = __dst;
          memcpy(__dst, __src, *(void *)(v52 + 64));
        }
        else
        {
          uint64_t v42 = sub_1A8A75C38();
          unint64_t v33 = __dst;
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dst, v25, v42);
          swift_storeEnumTagMultiPayload();
          uint64_t v32 = v52;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v26);
        goto LABEL_32;
      }
      size_t v29 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108) - 8) + 64);
      unint64_t v30 = __dst;
    }
    else
    {
      if (!v28)
      {
        if (a1 == a2) {
          goto LABEL_32;
        }
        sub_1A890BFBC((uint64_t)__dst, type metadata accessor for ConnectionStatus.Error.Details);
        if (!swift_getEnumCaseMultiPayload())
        {
          uint64_t v51 = sub_1A8A75C38();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 32))(__dst, v25, v51);
          swift_storeEnumTagMultiPayload();
          goto LABEL_32;
        }
        size_t v29 = *(void *)(v52 + 64);
        unint64_t v30 = __dst;
        uint64_t v31 = v25;
LABEL_17:
        memcpy(v30, v31, v29);
LABEL_32:
        uint64_t v43 = *(int *)(v9 + 24);
        uint64_t v44 = &v7[v43];
        uint64_t v45 = &v8[v43];
        uint64_t v46 = sub_1A8A74C38();
        uint64_t v47 = *(void *)(v46 - 8);
        int v48 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48);
        int v49 = v48(v44, 1, v46);
        int v50 = v48(v45, 1, v46);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v44, v45, v46);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
            return a1;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v44, v45, v46);
            return a1;
          }
          (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v44, v46);
        }
        size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360) - 8)
                        + 64);
        uint64_t v21 = v44;
        uint64_t v22 = v45;
        goto LABEL_8;
      }
      sub_1A890BFBC((uint64_t)__dst, type metadata accessor for ConnectionStatus.Error.Details);
      size_t v29 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108) - 8) + 64);
      unint64_t v30 = __dst;
    }
    uint64_t v31 = v25;
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_7:
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150) - 8) + 64);
    uint64_t v21 = v7;
    uint64_t v22 = v8;
LABEL_8:
    memcpy(v21, v22, v20);
    return a1;
  }
  *uint64_t v7 = *v8;
  uint64_t v14 = *(int *)(v9 + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v15, v16, *(void *)(v18 + 64));
    }
    else
    {
      uint64_t v34 = sub_1A8A75C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 32))(v15, v16, v34);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v35 = *(int *)(v9 + 24);
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  uint64_t v38 = sub_1A8A74C38();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Activity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A890DCF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Activity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void *sub_1A890DDC0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743150);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A890DE6C()
{
  sub_1A890DF08();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A890DF08()
{
  if (!qword_1E9743160)
  {
    type metadata accessor for ConnectionStatus.Error(255);
    unint64_t v0 = sub_1A8A77898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9743160);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Activity.MailboxStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v17 = v10[1];
            void *v9 = *v10;
            v9[1] = v17;
            uint64_t v18 = v10[2];
            uint64_t v19 = v10[3];
            int64_t v9[2] = v18;
            v9[3] = v19;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_11;
          case 2u:
          case 3u:
            uint64_t v15 = v10[1];
            void *v9 = *v10;
            v9[1] = v15;
LABEL_11:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            break;
          default:
            uint64_t v16 = sub_1A8A75C38();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v20 = *(int *)(v7 + 24);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_1A8A74C38();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for Activity.MailboxStatus(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v4 = a1 + *(int *)(v3 + 20);
    uint64_t v5 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v6 = sub_1A8A75C38();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
          break;
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        case 2u:
        case 3u:
LABEL_6:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
    }
    uint64_t v7 = a1 + *(int *)(v3 + 24);
    uint64_t v8 = sub_1A8A74C38();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v7, v8);
    }
  }
  return result;
}

unsigned char *initializeWithCopy for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v15 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v15;
          uint64_t v16 = v9[2];
          uint64_t v17 = v9[3];
          _OWORD v8[2] = v16;
          v8[3] = v17;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_9;
        case 2u:
        case 3u:
          uint64_t v13 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v13;
LABEL_9:
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          break;
        default:
          uint64_t v14 = sub_1A8A75C38();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v18 = *(int *)(v6 + 24);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_1A8A74C38();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithCopy for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A890BFBC((uint64_t)a1, type metadata accessor for Activity.MailboxStatus);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v8 = *v9;
            v8[1] = v9[1];
            _OWORD v8[2] = v9[2];
            v8[3] = v9[3];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_10;
          case 2u:
          case 3u:
            *uint64_t v8 = *v9;
            v8[1] = v9[1];
LABEL_10:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            break;
          default:
            uint64_t v13 = sub_1A8A75C38();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1A8A74C38();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unsigned char *initializeWithTake for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      else
      {
        uint64_t v13 = sub_1A8A75C38();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_1A8A74C38();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A890BFBC((uint64_t)a1, type metadata accessor for Activity.MailboxStatus);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743108);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v8, v9, *(void *)(v11 + 64));
        }
        else
        {
          uint64_t v13 = sub_1A8A75C38();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1A8A74C38();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A890F068()
{
  uint64_t result = type metadata accessor for ConnectionStatus.Error(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Activity.MailboxStatus.Info(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[26]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Activity.MailboxStatus.Info(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Activity.MailboxStatus.Info()
{
  return &type metadata for Activity.MailboxStatus.Info;
}

__n128 __swift_memcpy16_8_5(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Activity.MailboxStatus.Info.FetchProgress()
{
  return &type metadata for Activity.MailboxStatus.Info.FetchProgress;
}

unint64_t sub_1A890F1C8()
{
  unint64_t result = qword_1E9746FB0;
  if (!qword_1E9746FB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E9740F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9746FB0);
  }
  return result;
}

uint64_t sub_1A890F224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Activity.MailboxStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t ChangeID.rawValue.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

double (*ChangeID.rawValue.modify())(void)
{
  return nullsub_1;
}

BOOL static ChangeID.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return a1 < a2;
}

unint64_t sub_1A890F2CC()
{
  unint64_t result = qword_1E9746468;
  if (!qword_1E9746468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9746468);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangeID()
{
  return &type metadata for ChangeID;
}

uint64_t Configuration.logName.getter()
{
  uint64_t v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t Configuration.logName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*Configuration.logName.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.connection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Configuration() + 20);
  return sub_1A890F448(v3, a1);
}

uint64_t type metadata accessor for Configuration()
{
  uint64_t result = qword_1E9740C68;
  if (!qword_1E9740C68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A890F448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Configuration.connection.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Configuration() + 20);
  return sub_1A890F4F0(a1, v3);
}

uint64_t sub_1A890F4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double (*Configuration.connection.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.mailboxFilter.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Configuration() + 24));
}

uint64_t Configuration.mailboxFilter.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for Configuration();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

double (*Configuration.mailboxFilter.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.fetchedMessageMetadata.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Configuration() + 28));
}

uint64_t Configuration.fetchedMessageMetadata.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for Configuration();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

double (*Configuration.fetchedMessageMetadata.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.init(logName:connection:mailboxFilter:fetchedMessageMetadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, void *a6@<X8>)
{
  char v8 = a4 & 1;
  char v9 = a5 & 1;
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = (int *)type metadata accessor for Configuration();
  uint64_t result = sub_1A890F740(a3, (uint64_t)a6 + v10[5]);
  *((unsigned char *)a6 + v10[6]) = v8;
  *((unsigned char *)a6 + v10[7]) = v9;
  return result;
}

uint64_t sub_1A890F740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Configuration.MailboxFilter.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static Configuration.MailboxFilter.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

unint64_t sub_1A890F7E8()
{
  unint64_t result = qword_1E974E438;
  if (!qword_1E974E438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E438);
  }
  return result;
}

unint64_t sub_1A890F840()
{
  unint64_t result = qword_1E974E440;
  if (!qword_1E974E440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E440);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Configuration(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A8A756C8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v12(v9, v10, v11);
    uint64_t v13 = (int *)type metadata accessor for ConnectionConfiguration();
    v9[v13[5]] = v10[v13[5]];
    *(void *)&v9[v13[6]] = *(void *)&v10[v13[6]];
    v9[v13[7]] = v10[v13[7]];
    uint64_t v14 = v13[8];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    v9[v13[9]] = v10[v13[9]];
    uint64_t v18 = v13[10];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v13[11];
    uint64_t v23 = &v9[v22];
    uint64_t v24 = &v10[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v13[12];
    uint64_t v27 = &v9[v26];
    int v28 = &v10[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Configuration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for ConnectionConfiguration();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for Configuration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A8A756C8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ConnectionConfiguration();
  v8[v12[5]] = v9[v12[5]];
  *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
  v8[v12[7]] = v9[v12[7]];
  uint64_t v13 = v12[8];
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  v8[v12[9]] = v9[v12[9]];
  uint64_t v17 = v12[10];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = v12[11];
  uint64_t v22 = &v8[v21];
  uint64_t v23 = &v9[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = v12[12];
  uint64_t v26 = &v8[v25];
  uint64_t v27 = &v9[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Configuration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A756C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for ConnectionConfiguration();
  v7[v10[5]] = v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v7[v10[7]] = v8[v10[7]];
  uint64_t v11 = v10[8];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  v7[v10[9]] = v8[v10[9]];
  uint64_t v14 = v10[10];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v17 = v10[11];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = v10[12];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for Configuration(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A756C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for ConnectionConfiguration();
  v7[v10[5]] = v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  v7[v10[7]] = v8[v10[7]];
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  *(_OWORD *)&v7[v10[10]] = *(_OWORD *)&v8[v10[10]];
  *(_OWORD *)&v7[v10[11]] = *(_OWORD *)&v8[v10[11]];
  *(_OWORD *)&v7[v10[12]] = *(_OWORD *)&v8[v10[12]];
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

void *assignWithTake for Configuration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A8A756C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ConnectionConfiguration();
  v8[v11[5]] = v9[v11[5]];
  *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
  swift_bridgeObjectRelease();
  v8[v11[7]] = v9[v11[7]];
  uint64_t v12 = v11[8];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v8[v11[9]] = v9[v11[9]];
  uint64_t v17 = v11[10];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v8[v11[11]] = *(_OWORD *)&v9[v11[11]];
  swift_release();
  *(_OWORD *)&v8[v11[12]] = *(_OWORD *)&v9[v11[12]];
  swift_release();
  uint64_t v22 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A89100A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ConnectionConfiguration();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A891016C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConnectionConfiguration();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A8910214()
{
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.MailboxFilter()
{
  return &type metadata for Configuration.MailboxFilter;
}

unsigned char *_s16IMAP2Persistence13ConfigurationV22FetchedMessageMetadataOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8910398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.FetchedMessageMetadata()
{
  return &type metadata for Configuration.FetchedMessageMetadata;
}

uint64_t ConnectionConfiguration.endpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A8A756C8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  uint64_t v3 = sub_1A8A756C8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ConnectionConfiguration.endpoint.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A8A756C8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  uint64_t v3 = sub_1A8A756C8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

double (*ConnectionConfiguration.endpoint.modify())(void)
{
  return nullsub_1;
}

{
  return nullsub_1;
}

uint64_t ConnectionConfiguration.prohibitConstrainedPaths.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 20));
}

{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 20));
}

uint64_t type metadata accessor for ConnectionConfiguration()
{
  uint64_t result = qword_1E97431B0;
  if (!qword_1E97431B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ConnectionConfiguration.prohibitConstrainedPaths.setter(char a1)
{
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

{
  uint64_t v1;
  uint64_t result;

  uint64_t result = type metadata accessor for ConnectionConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

double (*ConnectionConfiguration.prohibitConstrainedPaths.modify())(void)
{
  return nullsub_1;
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return nullsub_1;
}

uint64_t ConnectionConfiguration.prohibitedInterfaceTypes.getter()
{
  type metadata accessor for ConnectionConfiguration();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

{
  uint64_t vars8;

  type metadata accessor for ConnectionConfiguration(0);
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ConnectionConfiguration.prohibitedInterfaceTypes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ConnectionConfiguration() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  uint64_t v3 = *(int *)(type metadata accessor for ConnectionConfiguration(0) + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

double (*ConnectionConfiguration.prohibitedInterfaceTypes.modify())(void)
{
  return nullsub_1;
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return nullsub_1;
}

uint64_t ConnectionConfiguration.transportLayerSecurity.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 28));
}

{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
}

uint64_t ConnectionConfiguration.transportLayerSecurity.setter(char a1)
{
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

{
  uint64_t v1;
  uint64_t result;

  uint64_t result = type metadata accessor for ConnectionConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

double (*ConnectionConfiguration.transportLayerSecurity.modify())(void)
{
  return nullsub_1;
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return nullsub_1;
}

uint64_t static ConnectionConfiguration.TransportLayerSecurity.__derived_enum_equals(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) == 0x40) {
        return ((a2 ^ a1) & 0x3F) == 0;
      }
    }
    else if (a2 == 128)
    {
      return 1;
    }
  }
  else if (a2 <= 0x3Fu)
  {
    return a1 == a2;
  }
  return 0;
}

{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) == 0x40) {
        return ((a2 ^ a1) & 0x3F) == 0;
      }
    }
    else if (a2 == 128)
    {
      return 1;
    }
  }
  else if (a2 <= 0x3Fu)
  {
    return a1 == a2;
  }
  return 0;
}

BOOL static CertificateTrust.Policy.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A8910778(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) == 0x40) {
        return ((v3 ^ v2) & 0x3F) == 0;
      }
    }
    else if (v3 == 128)
    {
      return 1;
    }
  }
  else if (v3 < 0x40)
  {
    return v2 == v3;
  }
  return 0;
}

uint64_t ConnectionConfiguration.sourceApplicationBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 32));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

{
  uint64_t v0;
  uint64_t v1;

  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 32));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ConnectionConfiguration.sourceApplicationBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

{
  uint64_t v2;
  void *v5;
  uint64_t result;

  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*ConnectionConfiguration.sourceApplicationBundleIdentifier.modify())(void)
{
  return nullsub_1;
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return nullsub_1;
}

uint64_t ConnectionConfiguration.sourceApplicationKind.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 36));
}

{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 36));
}

uint64_t ConnectionConfiguration.sourceApplicationKind.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

{
  uint64_t v1;
  char v2;
  uint64_t result;

  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for ConnectionConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

double (*ConnectionConfiguration.sourceApplicationKind.modify())(void)
{
  return nullsub_1;
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return nullsub_1;
}

BOOL static ConnectionConfiguration.SourceApplicationKind.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ConnectionConfiguration.SourceApplicationKind.hash(into:)()
{
  return sub_1A8A78768();
}

{
  return sub_1A8A78768();
}

uint64_t ConnectionConfiguration.SourceApplicationKind.hashValue.getter()
{
  return sub_1A8A787C8();
}

{
  sub_1A8A78738();
  sub_1A8A78768();
  return sub_1A8A787C8();
}

uint64_t ConnectionConfiguration.networkAccountIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 40));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

{
  uint64_t v0;
  uint64_t v1;

  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 40));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ConnectionConfiguration.networkAccountIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

{
  uint64_t v2;
  void *v5;
  uint64_t result;

  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*ConnectionConfiguration.networkAccountIdentifier.modify())(void)
{
  return nullsub_1;
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return nullsub_1;
}

uint64_t ConnectionConfiguration.getPushInformation.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 44));
  swift_retain();
  return v1;
}

uint64_t ConnectionConfiguration.getPushInformation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 44));
  uint64_t result = swift_release();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*ConnectionConfiguration.getPushInformation.modify())(void)
{
  return nullsub_1;
}

uint64_t ConnectionConfiguration.finishPushRegistration.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 48));
  swift_retain();
  return v1;
}

uint64_t ConnectionConfiguration.finishPushRegistration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 48));
  uint64_t result = swift_release();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*ConnectionConfiguration.finishPushRegistration.modify())(void)
{
  return nullsub_1;
}

uint64_t ConnectionConfiguration.init(transportLayerSecurity:transportLayerSecurityOptions:endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:sourceApplicationBundleIdentifier:sourceApplicationKind:networkAccountIdentifier:getPushInformation:finishPushRegistration:)@<X0>(char a1@<W0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  char v17 = a7 & 1;
  swift_release();
  uint64_t v18 = (int *)type metadata accessor for ConnectionConfiguration();
  uint64_t v19 = (void *)(a8 + v18[8]);
  uint64_t v20 = (void *)(a8 + v18[10]);
  uint64_t v21 = v18[6];
  *(unsigned char *)(a8 + v18[7]) = a1;
  uint64_t v22 = sub_1A8A756C8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a8, a2, v22);
  *(unsigned char *)(a8 + v18[5]) = a3;
  *(void *)(a8 + v21) = a4;
  *uint64_t v19 = a5;
  v19[1] = a6;
  *(unsigned char *)(a8 + v18[9]) = v17;
  void *v20 = a9;
  v20[1] = a10;
  uint64_t v24 = (void *)(a8 + v18[11]);
  *uint64_t v24 = a11;
  v24[1] = a12;
  uint64_t v25 = (void *)(a8 + v18[12]);
  *uint64_t v25 = a13;
  v25[1] = a14;
  return result;
}

uint64_t CertificateTrust.Policy.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t CertificateTrust.Policy.hashValue.getter()
{
  return sub_1A8A787C8();
}

unint64_t CertificateTrust.Policy.description.getter(unsigned __int8 a1)
{
  unint64_t result = 0xD000000000000013;
  if (a1 >= 2u) {
    return 0xD000000000000011;
  }
  return result;
}

unint64_t sub_1A8910E40()
{
  unint64_t result = qword_1E974E448;
  if (!qword_1E974E448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E448);
  }
  return result;
}

unint64_t sub_1A8910E98()
{
  unint64_t result = qword_1E974E450;
  if (!qword_1E974E450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E450);
  }
  return result;
}

unint64_t sub_1A8910EEC()
{
  return CertificateTrust.Policy.description.getter(*v0);
}

void *initializeBufferWithCopyOfBuffer for ConnectionConfiguration(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1A8A756C8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)v4 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)v4 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)((char *)v4 + v17);
    uint64_t v20 = (void *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (void *)((char *)v4 + v18);
    uint64_t v23 = (void *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
  }
  swift_retain();
  return v4;
}

{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A8A756C8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t destroy for ConnectionConfiguration(uint64_t a1)
{
  uint64_t v2 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

{
  uint64_t v2;
  uint64_t vars8;

  uint64_t v2 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_retain();
  swift_retain();
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;

  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;

  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  uint64_t v6 = sub_1A8A756C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8911534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A756C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8911608(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A8A756C8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A89116C4()
{
  uint64_t result = sub_1A8A756C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionConfiguration.TransportLayerSecurity(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3E) {
    goto LABEL_17;
  }
  if (a2 + 194 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 194) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 194;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 194;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 194;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ConnectionConfiguration.TransportLayerSecurity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *uint64_t result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8911900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

{
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;

  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *uint64_t result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A89A3B70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1A8911928(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return (v1 & 3u) + 2;
  }
}

unsigned char *sub_1A8911944(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1A8911954(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 3 | ((_BYTE)a2 << 6);
  }
  else {
    *uint64_t result = (a2 + 2) & 3 | 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionConfiguration.TransportLayerSecurity()
{
  return &type metadata for ConnectionConfiguration.TransportLayerSecurity;
}

{
  return &type metadata for ConnectionConfiguration.TransportLayerSecurity;
}

unsigned char *storeEnumTagSinglePayload for ConnectionConfiguration.SourceApplicationKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8911A60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

{
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;

  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A89A3A60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionConfiguration.SourceApplicationKind()
{
  return &type metadata for ConnectionConfiguration.SourceApplicationKind;
}

{
  return &type metadata for ConnectionConfiguration.SourceApplicationKind;
}

ValueMetadata *type metadata accessor for CertificateTrust()
{
  return &type metadata for CertificateTrust;
}

unsigned char *storeEnumTagSinglePayload for CertificateTrust.Policy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8911B74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CertificateTrust.Policy()
{
  return &type metadata for CertificateTrust.Policy;
}

BOOL static CredentialsRequestID.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_1A8911BBC(_OWORD *a1, _OWORD *a2)
{
  sub_1A8912CB0(a1, v4);
  sub_1A8912CB0(a2, v5);
  return _s16IMAP2Persistence11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5) & 1;
}

uint64_t CredentialsRequestID.hash(into:)()
{
  return sub_1A8A78798();
}

uint64_t CredentialsRequestID.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t CredentialsRequestID.init()()
{
  return 1;
}

uint64_t CredentialsRequestID.next.getter(int a1)
{
  return (a1 + 1);
}

uint64_t _s16IMAP2Persistence11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  sub_1A8912CB0(a1, &v61);
  long long v4 = v61;
  sub_1A8912CB0(a1, &v69);
  switch((v77 >> 59) & 6 | ((v75 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      unint64_t v13 = v75 & 0xDFFFFFFFFFFFFFFFLL;
      unint64_t v14 = v77 & 0xCFFFFFFFFFFFFFFFLL;
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v15 = v69;
      uint64_t v17 = v70;
      unint64_t v16 = v71;
      uint64_t v19 = v72;
      unint64_t v18 = v73;
      uint64_t v20 = v74;
      uint64_t v60 = v76;
      sub_1A8912CB0(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 1) {
        goto LABEL_61;
      }
      unint64_t v56 = v14;
      unint64_t v57 = v18;
      v66 &= ~0x2000000000000000uLL;
      unint64_t v54 = v66;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v21 = v68;
      int8x16_t v22 = v62;
      unint64_t v58 = v63.u64[1];
      uint64_t v59 = v63.i64[0];
      int8x16_t v55 = v64;
      uint64_t v52 = v65;
      unint64_t v53 = v62.u64[1];
      uint64_t v23 = v67;
      sub_1A8512DFC(v15, *((unint64_t *)&v15 + 1));
      sub_1A8512DFC(v22.i64[0], v22.u64[1]);
      sub_1A8512DFC(v17, v16);
      sub_1A8512DFC(v19, v57);
      sub_1A8512DFC(v20, v13);
      sub_1A8512DFC(v60, v56);
      sub_1A8512DFC(v59, v58);
      sub_1A8512DFC(v55.i64[0], v55.u64[1]);
      sub_1A8512DFC(v52, v54);
      sub_1A8512DFC(v23, v21);
      if ((sub_1A891609C(v15, *((unint64_t *)&v15 + 1), v22.i64[0], v53) & 1) != 0
        && (sub_1A891609C(v17, v16, v59, v58) & 1) != 0
        && (sub_1A891609C(v19, v57, v55.i64[0], v55.u64[1]) & 1) != 0
        && (sub_1A891609C(v20, v13, v52, v54) & 1) != 0)
      {
        char v24 = sub_1A891609C(v60, v56, v23, v21);
        sub_1A85135AC(v23, v21);
        sub_1A85135AC(v52, v54);
        sub_1A85135AC(v55.i64[0], v55.u64[1]);
        sub_1A85135AC(v59, v58);
        sub_1A85135AC(v60, v56);
        sub_1A85135AC(v20, v13);
        sub_1A85135AC(v19, v57);
        sub_1A85135AC(v17, v16);
        sub_1A85135AC(v22.i64[0], v53);
        sub_1A85135AC(v15, *((unint64_t *)&v15 + 1));
        return v24 & 1;
      }
      sub_1A85135AC(v23, v21);
      sub_1A85135AC(v52, v54);
      sub_1A85135AC(v55.i64[0], v55.u64[1]);
      sub_1A85135AC(v59, v58);
      sub_1A85135AC(v60, v56);
      sub_1A85135AC(v20, v13);
      sub_1A85135AC(v19, v57);
      sub_1A85135AC(v17, v16);
      sub_1A85135AC(v22.i64[0], v53);
      unint64_t v50 = *((void *)&v15 + 1);
      uint64_t v49 = v15;
      goto LABEL_60;
    case 2uLL:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v26 = *((void *)&v69 + 1);
      uint64_t v25 = v69;
      sub_1A8912CB0(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) == 2)
      {
        v66 &= ~0x2000000000000000uLL;
        v68 &= 0xCFFFFFFFFFFFFFFFLL;
        unint64_t v28 = v62.u64[1];
        uint64_t v27 = v62.i64[0];
        uint64_t v29 = 0;
        switch(v26 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v25), v25))
            {
              __break(1u);
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
              JUMPOUT(0x1A89125C8);
            }
            uint64_t v29 = HIDWORD(v25) - (int)v25;
LABEL_28:
            sub_1A8512DFC(v4, *((unint64_t *)&v4 + 1));
LABEL_29:
            switch(v28 >> 62)
            {
              case 1uLL:
                LODWORD(v39) = HIDWORD(v27) - v27;
                if (__OFSUB__(HIDWORD(v27), v27)) {
                  goto LABEL_65;
                }
                uint64_t v39 = (int)v39;
LABEL_34:
                if (v29 != v39)
                {
LABEL_39:
                  sub_1A8912CD0((uint64_t)a1);
                  goto LABEL_61;
                }
                if (v29 < 1)
                {
LABEL_40:
                  sub_1A8912CD0((uint64_t)a1);
                  goto LABEL_41;
                }
                sub_1A8512DFC(v27, v28);
                char v43 = sub_1A894EE44(v25, v26, v27, v28);
                sub_1A8912CD0((uint64_t)a1);
                if (v43) {
                  goto LABEL_41;
                }
                break;
              case 2uLL:
                uint64_t v41 = *(void *)(v27 + 16);
                uint64_t v40 = *(void *)(v27 + 24);
                BOOL v42 = __OFSUB__(v40, v41);
                uint64_t v39 = v40 - v41;
                if (!v42) {
                  goto LABEL_34;
                }
                goto LABEL_66;
              case 3uLL:
                if (v29) {
                  goto LABEL_39;
                }
                goto LABEL_40;
              default:
                uint64_t v39 = BYTE6(v28);
                goto LABEL_34;
            }
            break;
          case 2uLL:
            uint64_t v38 = *(void *)(v25 + 16);
            uint64_t v37 = *(void *)(v25 + 24);
            uint64_t v29 = v37 - v38;
            if (!__OFSUB__(v37, v38)) {
              goto LABEL_28;
            }
            goto LABEL_64;
          case 3uLL:
            goto LABEL_29;
          default:
            uint64_t v29 = BYTE6(v26);
            goto LABEL_29;
        }
      }
      goto LABEL_61;
    case 3uLL:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v30 = v69;
      uint64_t v31 = v70;
      unint64_t v32 = v71;
      sub_1A8912CB0(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 3) {
        goto LABEL_61;
      }
      v66 &= ~0x2000000000000000uLL;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      int8x16_t v33 = v63;
      if (v30 == *(_OWORD *)&v62 || (char v24 = 0, (sub_1A8A78588() & 1) != 0))
      {
        if (__PAIR128__(v32, v31) == *(_OWORD *)&v33) {
LABEL_41:
        }
          char v24 = 1;
        else {
          char v24 = sub_1A8A78588();
        }
      }
      return v24 & 1;
    case 4uLL:
      sub_1A8912CB0(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 4) {
        goto LABEL_61;
      }
      if (v68 != 0x2000000000000000) {
        goto LABEL_61;
      }
      v34.i64[0] = v65;
      v34.i64[1] = v67;
      int8x16_t v35 = vorrq_s8(v64, v62);
      int8x16_t v36 = vorrq_s8(v34, vorrq_s8(vextq_s8(v63, v63, 8uLL), vextq_s8(v35, v35, 8uLL)));
      if (*(void *)&vorr_s8(*(int8x8_t *)v36.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)) | v66) {
        goto LABEL_61;
      }
      goto LABEL_41;
    default:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v5 = *((void *)&v69 + 1);
      uint64_t v6 = v69;
      uint64_t v8 = v70;
      unint64_t v7 = v71;
      sub_1A8912CB0(a2, &v62);
      if ((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) {
        goto LABEL_61;
      }
      v66 &= ~0x2000000000000000uLL;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v9 = v62.u64[1];
      uint64_t v10 = v62.i64[0];
      int8x16_t v11 = v63;
      uint64_t v12 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6)) {
            goto LABEL_67;
          }
          uint64_t v12 = HIDWORD(v6) - (int)v6;
LABEL_45:
          sub_1A8512DFC(v6, v5);
          break;
        case 2uLL:
          uint64_t v45 = *(void *)(v6 + 16);
          uint64_t v44 = *(void *)(v6 + 24);
          uint64_t v12 = v44 - v45;
          if (!__OFSUB__(v44, v45)) {
            goto LABEL_45;
          }
          goto LABEL_68;
        case 3uLL:
          goto LABEL_46;
        default:
          uint64_t v12 = BYTE6(v5);
          goto LABEL_46;
      }
      break;
  }
LABEL_46:
  switch(v9 >> 62)
  {
    case 1uLL:
      LODWORD(v46) = HIDWORD(v10) - v10;
      if (__OFSUB__(HIDWORD(v10), v10)) {
        goto LABEL_69;
      }
      uint64_t v46 = (int)v46;
LABEL_51:
      if (v12 != v46) {
        goto LABEL_56;
      }
      if (v12 < 1)
      {
LABEL_57:
        sub_1A8512DFC(v10, v9);
        sub_1A8512DFC(v8, v7);
        sub_1A8512DFC(v11.i64[0], v11.u64[1]);
        goto LABEL_58;
      }
      sub_1A8512DFC(v10, v9);
      sub_1A8512DFC(v10, v9);
      sub_1A8512DFC(v8, v7);
      sub_1A8512DFC(v11.i64[0], v11.u64[1]);
      if (sub_1A894EE44(v6, v5, v10, v9))
      {
LABEL_58:
        char v24 = sub_1A891609C(v8, v7, v11.i64[0], v11.u64[1]);
        sub_1A85135AC(v11.i64[0], v11.u64[1]);
        sub_1A85135AC(v8, v7);
        sub_1A85135AC(v10, v9);
        sub_1A85135AC(v6, v5);
        return v24 & 1;
      }
      sub_1A85135AC(v11.i64[0], v11.u64[1]);
      sub_1A85135AC(v8, v7);
      sub_1A85135AC(v10, v9);
LABEL_56:
      uint64_t v49 = v6;
      unint64_t v50 = v5;
LABEL_60:
      sub_1A85135AC(v49, v50);
LABEL_61:
      char v24 = 0;
      return v24 & 1;
    case 2uLL:
      uint64_t v48 = *(void *)(v10 + 16);
      uint64_t v47 = *(void *)(v10 + 24);
      BOOL v42 = __OFSUB__(v47, v48);
      uint64_t v46 = v47 - v48;
      if (!v42) {
        goto LABEL_51;
      }
      goto LABEL_70;
    case 3uLL:
      if (v12) {
        goto LABEL_56;
      }
      goto LABEL_57;
    default:
      uint64_t v46 = BYTE6(v9);
      goto LABEL_51;
  }
}

unint64_t sub_1A8912620()
{
  unint64_t result = qword_1E974E458;
  if (!qword_1E974E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E458);
  }
  return result;
}

uint64_t sub_1A8912674(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1A8512DFC(result, a2);
      unint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A8512DFC(result, a2);
      sub_1A8512DFC(a3, a4);
      sub_1A8512DFC(a5, a6);
      sub_1A8512DFC(a7, v15);
      unint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      unint64_t result = sub_1A8512DFC(result, a2);
      break;
    case 3uLL:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      unint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for Credentials(uint64_t a1)
{
  return sub_1A89127EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
}

{
  return sub_1A8A568A8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
}

uint64_t sub_1A89127EC(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1A85135AC(result, a2);
      unint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1A85135AC(result, a2);
      sub_1A85135AC(a3, a4);
      sub_1A85135AC(a5, a6);
      sub_1A85135AC(a7, v15);
      unint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      unint64_t result = sub_1A85135AC(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for Credentials(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v13 = a2[9];
  sub_1A8912674(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;

  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v13 = a2[9];
  sub_1A8A569E4(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

uint64_t *assignWithCopy for Credentials(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v23 = a2[9];
  sub_1A8912674(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v23);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[8];
  unint64_t v21 = a1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v23;
  sub_1A89127EC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;

  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v23 = a2[9];
  sub_1A8A569E4(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v23);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[8];
  unint64_t v21 = a1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v23;
  sub_1A8A568A8(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t *assignWithTake for Credentials(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  unint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v11 = a1[8];
  unint64_t v12 = a1[9];
  long long v13 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v13;
  long long v14 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v14;
  *((_OWORD *)a1 + 4) = a2[4];
  sub_1A89127EC(v3, v5, v4, v6, v7, v8, v9, v10, v11, v12);
  return a1;
}

{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  long long v13;
  long long v14;

  uint64_t v3 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  unint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v11 = a1[8];
  unint64_t v12 = a1[9];
  long long v13 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v13;
  long long v14 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v14;
  *((_OWORD *)a1 + 4) = a2[4];
  sub_1A8A568A8(v3, v5, v4, v6, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Credentials(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3C && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 60);
  }
  unsigned int v3 = (*(void *)(a1 + 56) >> 58) & 0xC;
  unsigned int v4 = (((*(unsigned char *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(void *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x3B) {
    unsigned int v4 = -1;
  }
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for Credentials(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 60;
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      uint64_t v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

uint64_t sub_1A8912BE8(uint64_t a1)
{
  unsigned int v1 = (*(void *)(a1 + 72) >> 59) & 6 | ((*(void *)(a1 + 56) & 0x2000000000000000) != 0);
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1A8912C14(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 72) & 0xCFFFFFFFFFFFFFFFLL;
  *(void *)(result + 56) &= ~0x2000000000000000uLL;
  *(void *)(result + 72) = v1;
  return result;
}

uint64_t sub_1A8912C30(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    unint64_t v2 = *(void *)(result + 56) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
    unint64_t v3 = *(void *)(result + 72) & 0xCFFFFFFFFFFFFFFFLL | ((((unint64_t)a2 >> 1) & 3) << 60);
    *(void *)(result + 40) &= 0xCFFFFFFFFFFFFFFFLL;
    *(void *)(result + 56) = v2;
    *(void *)(result + 72) = v3;
  }
  else
  {
    *(void *)unint64_t result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)(result + 72) = 0x2000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for Credentials()
{
  return &type metadata for Credentials;
}

{
  return &type metadata for Credentials;
}

ValueMetadata *type metadata accessor for CredentialsRequestID()
{
  return &type metadata for CredentialsRequestID;
}

_OWORD *sub_1A8912CB0(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t sub_1A8912CD0(uint64_t a1)
{
  return a1;
}

BOOL static DataTransferReport.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t DataTransferReport.receivedTransportByteCount.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

{
  uint64_t v1;

  *(void *)(v1 + 24) = result;
  return result;
}

double (*DataTransferReport.receivedTransportByteCount.modify())(void)
{
  return nullsub_1;
}

{
  return nullsub_1;
}

uint64_t DataTransferReport.sentTransportByteCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t DataTransferReport.sentTransportByteCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

{
  uint64_t v1;

  *(void *)(v1 + 32) = result;
  return result;
}

double (*DataTransferReport.sentTransportByteCount.modify())(void)
{
  return nullsub_1;
}

{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for DataTransferReport()
{
  return &type metadata for DataTransferReport;
}

{
  return &type metadata for DataTransferReport;
}

IMAP2Persistence::DownloadPass_optional __swiftcall DownloadPass.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = IMAP2Persistence_DownloadPass_second;
  }
  else {
    v2.value = IMAP2Persistence_DownloadPass_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

void *static DownloadPass.allCases.getter()
{
  return &unk_1EFE84958;
}

uint64_t DownloadPass.rawValue.getter(char a1)
{
  if (a1) {
    return 6581810;
  }
  else {
    return 7631665;
  }
}

uint64_t sub_1A8912E1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A894E0C0(*a1, *a2);
}

unint64_t sub_1A8912E2C()
{
  unint64_t result = qword_1E974E460;
  if (!qword_1E974E460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E460);
  }
  return result;
}

uint64_t sub_1A8912E80()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8912EE8()
{
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8912F34()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8912F98@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A8A782F8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A8912FF8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7631665;
  if (*v1) {
    uint64_t v2 = 6581810;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

unint64_t sub_1A8913024()
{
  unint64_t result = qword_1E974E468;
  if (!qword_1E974E468)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E974E470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E468);
  }
  return result;
}

void sub_1A8913080(void *a1@<X8>)
{
  *a1 = &unk_1EFE84A60;
}

unsigned char *storeEnumTagSinglePayload for DownloadPass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A891315CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadPass()
{
  return &type metadata for DownloadPass;
}

uint64_t DownloadRequest.id.getter()
{
  return *v0;
}

uint64_t DownloadRequest.id.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*DownloadRequest.id.modify())(void)
{
  return nullsub_1;
}

uint64_t DownloadRequest.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t DownloadRequest.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(_DWORD *)(v2 + 16) = a2;
  return result;
}

double (*DownloadRequest.mailbox.modify())(void)
{
  return nullsub_1;
}

uint64_t DownloadRequest.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1A8512DFC(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t DownloadRequest.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A85135AC(*(void *)(v2 + 24), *(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

double (*DownloadRequest.message.modify())(void)
{
  return nullsub_1;
}

uint64_t DownloadRequest.kind.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t DownloadRequest.kind.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

double (*DownloadRequest.kind.modify())(void)
{
  return nullsub_1;
}

uint64_t DownloadRequest.qos.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t DownloadRequest.qos.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

double (*DownloadRequest.qos.modify())(void)
{
  return nullsub_1;
}

uint64_t DownloadRequest.init(id:mailbox:message:kind:qos:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_DWORD *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(_DWORD *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = a7;
  return result;
}

BOOL static DownloadRequest.ID.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t static DownloadRequest.Kind.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 && a2) {
    return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(a1, a2);
  }
  else {
    return (a1 | a2) == 0;
  }
}

BOOL static DownloadRequest.QoS.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_1A89133B8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 48);
  return _s16IMAP2Persistence15DownloadRequestV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_1A8913414(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  else {
    return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v2, v3);
  }
}

uint64_t DownloadRequest.QoS.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static DownloadRequest.QoS.__derived_enum_less_than(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t DownloadRequest.QoS.hashValue.getter()
{
  return sub_1A8A787C8();
}

BOOL sub_1A89134C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A89134D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A89134E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A89134FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t DownloadRequest.QoS.debugDescription.getter(char a1)
{
  return *(void *)&aB_1[8 * a1];
}

uint64_t sub_1A8913528()
{
  return *(void *)&aB_1[8 * *v0];
}

uint64_t static DownloadRequest.QoS.current()()
{
  HIDWORD(v0) = qos_class_self() - 9;
  LODWORD(v0) = HIDWORD(v0);
  unint64_t v1 = 0x4020302010200uLL >> (8 * (v0 >> 2));
  if ((v0 >> 2) >= 7) {
    return 2;
  }
  else {
    return v1;
  }
}

IMAP2Persistence::DownloadRequest::QoS_optional __swiftcall DownloadRequest.QoS.init(_:)(qos_class_t a1)
{
  HIDWORD(v1) = a1 - 9;
  LODWORD(v1) = a1 - 9;
  unint64_t v2 = 0x4050302010500uLL >> (8 * (v1 >> 2));
  if ((v1 >> 2) >= 7) {
    return (IMAP2Persistence::DownloadRequest::QoS_optional)5;
  }
  else {
    return (IMAP2Persistence::DownloadRequest::QoS_optional)v2;
  }
}

uint64_t DownloadRequest.QoS.qosClass.getter(char a1)
{
  return *(unsigned int *)&asc_1A8B05CC8[4 * a1];
}

uint64_t DownloadRequest.ID.rawValue.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

double (*DownloadRequest.ID.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t DownloadRequest.ID.hash(into:)()
{
  return sub_1A8A78798();
}

{
  return sub_1A8A78768();
}

uint64_t DownloadRequest.ID.hashValue.getter()
{
  return sub_1A8A787C8();
}

{
  sub_1A8A78738();
  sub_1A8A78768();
  return sub_1A8A787C8();
}

uint64_t DownloadRequest.ID.description.getter()
{
  return sub_1A8A784D8();
}

{
  return sub_1A8A784D8();
}

uint64_t sub_1A89136A4()
{
  return sub_1A8A784D8();
}

uint64_t DownloadRequest.ID.init()()
{
  return 1;
}

uint64_t DownloadRequest.ID.next.getter(int a1)
{
  return (a1 + 1);
}

BOOL _s16IMAP2Persistence15DownloadRequestV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (*(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned int *)(a1 + 16) << 32)) == (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32))
    && sub_1A8866D34(*(void *)(a1 + 8), *(void *)(a2 + 8)))
  {
    uint64_t v4 = *(void *)(a1 + 24);
    unint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a2 + 24);
    unint64_t v7 = *(void *)(a2 + 32);
    sub_1A8512DFC(v4, v5);
    sub_1A8512DFC(v6, v7);
    char v8 = sub_1A894E0C4(v4, v5, v6, v7);
    sub_1A85135AC(v6, v7);
    sub_1A85135AC(v4, v5);
    if (v8)
    {
      sub_1A8913E34((void *)(a1 + 40), &v12);
      sub_1A8913E34((void *)(a2 + 40), &v11);
      sub_1A8913E34(&v12, &v13);
      uint64_t v9 = v13;
      if (v13)
      {
        sub_1A8913E34(&v11, &v14);
        if (v14 && (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v9) & 1) != 0) {
          return *(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48);
        }
      }
      else
      {
        sub_1A8913E34(&v11, &v14);
        if (!v14) {
          return *(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48);
        }
      }
    }
  }
  return 0;
}

unint64_t sub_1A8913848()
{
  unint64_t result = qword_1E9742FD8;
  if (!qword_1E9742FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742FD8);
  }
  return result;
}

unint64_t sub_1A89138A0()
{
  unint64_t result = qword_1E974E478;
  if (!qword_1E974E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E478);
  }
  return result;
}

unint64_t sub_1A89138F8()
{
  unint64_t result = qword_1E9742FE0;
  if (!qword_1E9742FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742FE0);
  }
  return result;
}

uint64_t destroy for DownloadRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A85135AC(*(void *)(a1 + 24), *(void *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

{
  return sub_1A8A5C300(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t initializeWithCopy for DownloadRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8512DFC(v4, v5);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for DownloadRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  sub_1A8512DFC(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  sub_1A85135AC(v6, v7);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(unsigned char *)(a2 + 16);
  sub_1A8A61108(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A8A5C300(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy49_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DownloadRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1A85135AC(v4, v5);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  long long v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A8A5C300(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest()
{
  return &type metadata for DownloadRequest;
}

{
  return &type metadata for DownloadRequest;
}

void *initializeBufferWithCopyOfBuffer for DownloadRequest.Kind(void *a1, void *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *assignWithCopy for DownloadRequest.Kind(void *a1, void *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DownloadRequest.Kind(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadRequest.Kind(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DownloadRequest.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.Kind()
{
  return &type metadata for DownloadRequest.Kind;
}

unsigned char *storeEnumTagSinglePayload for DownloadRequest.QoS(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8913DECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.QoS()
{
  return &type metadata for DownloadRequest.QoS;
}

ValueMetadata *type metadata accessor for DownloadRequest.ID()
{
  return &type metadata for DownloadRequest.ID;
}

{
  return &type metadata for DownloadRequest.ID;
}

void *sub_1A8913E34(void *a1, void *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t Environment.power.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

double (*Environment.power.modify())(void)
{
  return nullsub_1;
}

uint64_t Environment.appState.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t Environment.appState.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result & 1;
  return result;
}

double (*Environment.appState.modify())(void)
{
  return nullsub_1;
}

uint64_t Environment.isLocked.getter(unsigned int a1)
{
  return HIWORD(a1) & 1;
}

uint64_t Environment.isLocked.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

double (*Environment.isLocked.modify())(void)
{
  return nullsub_1;
}

uint64_t Environment.thermalState.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Environment.thermalState.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*Environment.thermalState.modify())(void)
{
  return nullsub_1;
}

uint64_t Environment.availableFileSystemSpace.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t Environment.availableFileSystemSpace.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

double (*Environment.availableFileSystemSpace.modify())(void)
{
  return nullsub_1;
}

uint64_t Environment.unreconciledMessageCount.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t Environment.unreconciledMessageCount.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

double (*Environment.unreconciledMessageCount.modify())(void)
{
  return nullsub_1;
}

uint64_t Environment.init(power:appState:isLocked:thermalState:availableFileSystemSpace:unreconciledMessageCount:)(unsigned __int8 a1, char a2, char a3)
{
  if (a3) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return a1 | ((a2 & 1) << 8) | v3;
}

BOOL static Environment.__derived_struct_equals(_:_:)(int a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8)
{
  return sub_1A8914B38(a1 & 0x101FF, a2, a3, a4, a5 & 0x101FF, a6, a7, a8);
}

BOOL static Environment.AppState.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

BOOL static Environment.AvailableFileSystemSpace.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_1A8913FC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[1]) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *a1;
  if (a1[2]) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  int v5 = v3 | v4;
  if (a2[1]) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }
  int v7 = v6 | *a2;
  if (a2[2]) {
    int v8 = 0x10000;
  }
  else {
    int v8 = 0;
  }
  return sub_1A8914B38(v5, *((void *)a1 + 1), a1[16], *((void *)a1 + 3), v7 | v8, *((void *)a2 + 1), a2[16], *((void *)a2 + 3));
}

uint64_t Environment.AppState.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t Environment.AppState.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t Environment.AppState.description.getter(char a1)
{
  if (a1) {
    return 0x756F72676B636162;
  }
  else {
    return 0x656C6269736976;
  }
}

uint64_t sub_1A89140E8()
{
  if (*v0) {
    return 0x756F72676B636162;
  }
  else {
    return 0x656C6269736976;
  }
}

IMAP2Persistence::Environment::Power __swiftcall Environment.Power.init(inLowPowerMode:isPluggedIn:batteryPercentage:)(Swift::Bool inLowPowerMode, Swift::Bool isPluggedIn, Swift::Float_optional *batteryPercentage)
{
  if (inLowPowerMode) {
    return 0;
  }
  unint64_t v4 = ((unint64_t)batteryPercentage >> 32) & 1;
  if (*(float *)&batteryPercentage >= 0.2) {
    LODWORD(v4) = 1;
  }
  if (isPluggedIn) {
    IMAP2Persistence::Environment::Power v5 = IMAP2Persistence_Environment_Power_pluggedIn;
  }
  else {
    IMAP2Persistence::Environment::Power v5 = IMAP2Persistence_Environment_Power_onBattery;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t Environment.Power.description.getter(char a1)
{
  if (!a1) {
    return 0x7265776F50776F6CLL;
  }
  if (a1 == 1) {
    return 0x7265747461426E6FLL;
  }
  return 0x4964656767756C70;
}

uint64_t sub_1A89141D4()
{
  uint64_t v1 = 0x7265747461426E6FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x4964656767756C70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265776F50776F6CLL;
  }
}

uint64_t Environment.AvailableFileSystemSpace.hash(into:)()
{
  return sub_1A8A78768();
}

IMAP2Persistence::Environment::AvailableFileSystemSpace __swiftcall Environment.AvailableFileSystemSpace.init(availableByteCount:bytesForOpportunisticUsage:)(Swift::Int availableByteCount, Swift::Int bytesForOpportunisticUsage)
{
  if (bytesForOpportunisticUsage <= 0x4650FFFFFLL && availableByteCount <= 1888485375) {
    char v3 = 1;
  }
  else {
    char v3 = 2;
  }
  if (bytesForOpportunisticUsage <= 0x9C3FFFFFFLL) {
    char v4 = v3;
  }
  else {
    char v4 = 3;
  }
  if (availableByteCount <= 0x270FFFFFFLL) {
    IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = v4;
  }
  else {
    IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = IMAP2Persistence_Environment_AvailableFileSystemSpace_abundant;
  }
  if (availableByteCount <= 105906175 && bytesForOpportunisticUsage < 1049624576) {
    return 0;
  }
  else {
    return v5;
  }
}

unint64_t Environment.AvailableFileSystemSpace.description.getter(char a1)
{
  unint64_t result = 7827308;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0x746E61646E756261;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A8914364()
{
  unint64_t result = 7827308;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0x746E61646E756261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Environment.description.getter(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      break;
    default:
      sub_1A8A784D8();
      break;
  }
  sub_1A8A77DC8();
  sub_1A8A767E8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A8914750()
{
  if (v0[1]) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  int v2 = v1 | *v0;
  if (v0[2]) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return Environment.description.getter(v2 | v3, *((void *)v0 + 1));
}

__n128 Environment.capturedValue.getter@<Q0>(int a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_1A8914B80(BYTE2(a1) & 1, a2, a3, (uint64_t)v7);
  long long v5 = v7[3];
  *(_OWORD *)(a4 + 32) = v7[2];
  *(_OWORD *)(a4 + 48) = v5;
  *(void *)(a4 + 64) = v8;
  __n128 result = (__n128)v7[1];
  *(_OWORD *)a4 = v7[0];
  *(__n128 *)(a4 + 16) = result;
  return result;
}

unint64_t sub_1A89147E8()
{
  unint64_t result = 0x7265776F70;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574617453707061;
      break;
    case 2:
      unint64_t result = 0x64656B636F4C7369;
      break;
    case 3:
      unint64_t result = 0x536C616D72656874;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A891489C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A89157BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A89148C4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A89148D0()
{
  sub_1A8914E00();
  return sub_1A8A78A48();
}

uint64_t sub_1A891490C()
{
  sub_1A8914E00();
  return sub_1A8A78A58();
}

uint64_t Environment.CapturedValue.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9745890);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A8914E00();
  sub_1A8A78858();
  v8[15] = 0;
  sub_1A8A78438();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A8A78438();
    v8[13] = 2;
    sub_1A8A78448();
    v8[12] = 3;
    sub_1A8A78438();
    v8[11] = 4;
    sub_1A8A78438();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A8914B20(void *a1)
{
  return Environment.CapturedValue.encode(to:)(a1);
}

BOOL sub_1A8914B38(int a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8)
{
  unsigned int v8 = a5 ^ a1;
  if (a5 != a1) {
    return 0;
  }
  int v9 = (v8 >> 8) & 1;
  int v10 = HIWORD(v8) & 1;
  BOOL v13 = a2 == a6 && a3 == a7 && a4 == a8;
  BOOL v14 = (v10 & 1) == 0 && v13;
  return (v9 & 1) == 0 && v14;
}

uint64_t sub_1A8914B80@<X0>(char a1@<W2>, uint64_t a2@<X3>, char a3@<W4>, uint64_t a4@<X8>)
{
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xE700000000000000;
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  uint64_t result = 0x6C616E696D6F6ELL;
  switch(a2)
  {
    case 0:
      break;
    case 1:
      unint64_t v8 = 0xE400000000000000;
      uint64_t result = 1919508838;
      break;
    case 2:
      uint64_t result = 0x73756F69726573;
      break;
    case 3:
      unint64_t v8 = 0xE800000000000000;
      uint64_t result = 0x6C61636974697263;
      break;
    default:
      uint64_t result = sub_1A8A784D8();
      unint64_t v8 = v10;
      break;
  }
  unint64_t v11 = 0xE300000000000000;
  unint64_t v12 = 7827308;
  switch(a3)
  {
    case 1:
      unint64_t v12 = 0xD000000000000022;
      unint64_t v11 = 0x80000001A8B3F000;
      break;
    case 2:
      unint64_t v11 = 0x80000001A8B3EFE0;
      unint64_t v12 = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t v11 = 0xE800000000000000;
      unint64_t v12 = 0x746E61646E756261;
      break;
    default:
      break;
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0xE000000000000000;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0xE000000000000000;
  *(unsigned char *)(a4 + 32) = a1 & 1;
  *(void *)(a4 + 40) = result;
  *(void *)(a4 + 48) = v8;
  *(void *)(a4 + 56) = v12;
  *(void *)(a4 + 64) = v11;
  return result;
}

unint64_t sub_1A8914E00()
{
  unint64_t result = qword_1E9742F20;
  if (!qword_1E9742F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742F20);
  }
  return result;
}

unint64_t sub_1A8914E58()
{
  unint64_t result = qword_1E974E480;
  if (!qword_1E974E480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E480);
  }
  return result;
}

unint64_t sub_1A8914EB0()
{
  unint64_t result = qword_1E974E488;
  if (!qword_1E974E488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E488);
  }
  return result;
}

unint64_t sub_1A8914F08()
{
  unint64_t result = qword_1E974E490;
  if (!qword_1E974E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E490);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Environment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Environment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment()
{
  return &type metadata for Environment;
}

unsigned char *storeEnumTagSinglePayload for Environment.AppState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A89150C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.AppState()
{
  return &type metadata for Environment.AppState;
}

unsigned char *storeEnumTagSinglePayload for Environment.Power(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A89151C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.Power()
{
  return &type metadata for Environment.Power;
}

unsigned char *storeEnumTagSinglePayload for Environment.AvailableFileSystemSpace(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A89152C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.AvailableFileSystemSpace()
{
  return &type metadata for Environment.AvailableFileSystemSpace;
}

uint64_t destroy for Environment.CapturedValue()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Environment.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for Environment.CapturedValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8_3(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Environment.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Environment.CapturedValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Environment.CapturedValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.CapturedValue()
{
  return &type metadata for Environment.CapturedValue;
}

unsigned char *storeEnumTagSinglePayload for Environment.CapturedValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A891567CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.CapturedValue.CodingKeys()
{
  return &type metadata for Environment.CapturedValue.CodingKeys;
}

unint64_t sub_1A89156B8()
{
  unint64_t result = qword_1E974E498;
  if (!qword_1E974E498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E498);
  }
  return result;
}

unint64_t sub_1A8915710()
{
  unint64_t result = qword_1E9742F30;
  if (!qword_1E9742F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742F30);
  }
  return result;
}

unint64_t sub_1A8915768()
{
  unint64_t result = qword_1E9742F28;
  if (!qword_1E9742F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742F28);
  }
  return result;
}

uint64_t sub_1A89157BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265776F70 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A8A78588() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617453707061 && a2 == 0xE800000000000000 || (sub_1A8A78588() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656B636F4C7369 && a2 == 0xE800000000000000 || (sub_1A8A78588() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x536C616D72656874 && a2 == 0xEC00000065746174 || (sub_1A8A78588() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A8B3F050)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A8A78588();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A89159F4(unint64_t *a1, unint64_t *a2)
{
  return _s16IMAP2Persistence5EventO6UpdateO21__derived_enum_equalsySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t FlagsChange.message.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*FlagsChange.message.modify())(void)
{
  return nullsub_1;
}

unint64_t FlagsChange.flags.getter(uint64_t a1, uint64_t a2)
{
  *((void *)&v2 + 1) = a2;
  *(void *)&long long v2 = a1;
  uint64_t v3 = (v2 >> 32) & 0x101010101;
  uint64_t v4 = 0x10000000000;
  if (!BYTE1(a2)) {
    uint64_t v4 = 0;
  }
  return (v3 | v4) & 0xFFFFFFFFFFFFLL | ((unint64_t)WORD1(a2) << 48);
}

int8x8_t FlagsChange.flags.setter(unint64_t a1, uint64_t a2, __int16 a3)
{
  *(void *)&long long v7 = a2;
  BYTE8(v7) = a3;
  uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(a1);
  *(unsigned char *)(v3 + 4) = a1 & 1;
  int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A8AD8F50), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1A8AD8F40));
  *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v5);
  *(_DWORD *)(v3 + 5) = result.i32[0];
  *(unsigned char *)(v3 + 9) = BYTE5(a1) & 1;
  *(unsigned char *)(v3 + 10) = BYTE6(a1);
  *(unsigned char *)(v3 + 11) = HIBYTE(a1);
  *(unsigned char *)(v3 + 12) = a2 & 1;
  *(void *)(v3 + 13) = *(void *)((char *)&v7 + 1);
  *(unsigned char *)(v3 + 21) = HIBYTE(a3);
  return result;
}

double (*FlagsChange.flags.modify())(void)
{
  return nullsub_1;
}

uint64_t FlagsChange.changeIDs.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t FlagsChange.changeIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

double (*FlagsChange.changeIDs.modify())(void)
{
  return nullsub_1;
}

uint64_t FlagsChange.init(message:flags:changeIDs:)(unsigned int a1, uint64_t a2)
{
  return (a2 << 32) & 0x101010101010101 | a1;
}

uint64_t static FlagsChange.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LODWORD(v16) = HIDWORD(a2);
  *(void *)((char *)&v16 + 4) = a3;
  uint64_t v9 = *(void *)((char *)&v16 + 1);
  LODWORD(v16) = HIDWORD(a6);
  *((void *)&v15 + 1) = a7;
  uint64_t v10 = *(void *)((char *)&v15 + 5);
  unint64_t v11 = a1 & 0x1010101FFFFFFFFLL;
  LOWORD(v15) = a2 & 0xFF01;
  BYTE2(v15) = BYTE2(a2);
  BYTE3(v15) = BYTE3(a2);
  BYTE4(v15) = BYTE4(a2);
  *(void *)((char *)&v15 + 5) = v9;
  BYTE13(v15) = BYTE5(a3);
  long long v12 = v15;
  unint64_t v13 = a5 & 0x1010101FFFFFFFFLL;
  LOWORD(v15) = a6 & 0xFF01;
  BYTE2(v15) = BYTE2(a6);
  BYTE3(v15) = BYTE3(a6);
  BYTE4(v15) = BYTE4(a6);
  *(void *)((char *)&v15 + 5) = v10;
  BYTE13(v15) = BYTE5(a7);
  return sub_1A89161F8(v11, v12, *((unint64_t *)&v12 + 1), a4, v13, v15, *((unint64_t *)&v15 + 1), a8);
}

uint64_t sub_1A8915C80(unsigned int *a1, unsigned int *a2)
{
  uint64_t v3 = *a1;
  int v4 = *((unsigned __int8 *)a1 + 5);
  int v5 = *((unsigned __int8 *)a1 + 6);
  int v6 = *((unsigned __int8 *)a1 + 7);
  char v7 = *((unsigned char *)a1 + 8);
  char v8 = *((unsigned char *)a1 + 9);
  __int16 v9 = *((_WORD *)a1 + 5);
  char v10 = *((unsigned char *)a1 + 12);
  uint64_t v11 = *(void *)((char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 21);
  uint64_t v13 = *((void *)a1 + 3);
  uint64_t v14 = *a2;
  int v15 = *((unsigned __int8 *)a2 + 4);
  int v16 = *((unsigned __int8 *)a2 + 5);
  int v17 = *((unsigned __int8 *)a2 + 6);
  int v18 = *((unsigned __int8 *)a2 + 7);
  char v19 = *((unsigned char *)a2 + 8);
  char v20 = *((unsigned char *)a2 + 9);
  __int16 v21 = *((_WORD *)a2 + 5);
  char v22 = *((unsigned char *)a2 + 12);
  uint64_t v23 = *(void *)((char *)a2 + 13);
  char v24 = *((unsigned char *)a2 + 21);
  uint64_t v25 = *((void *)a2 + 3);
  if (*((unsigned char *)a1 + 4)) {
    uint64_t v26 = 0x100000000;
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v27 = v26 | v3;
  if (v4) {
    uint64_t v28 = 0x10000000000;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v5) {
    uint64_t v29 = 0x1000000000000;
  }
  else {
    uint64_t v29 = 0;
  }
  uint64_t v30 = v27 | v28 | v29;
  if (v6) {
    uint64_t v31 = 0x100000000000000;
  }
  else {
    uint64_t v31 = 0;
  }
  unint64_t v32 = v30 | v31;
  LOBYTE(v41) = v7;
  BYTE1(v41) = v8;
  WORD1(v41) = v9;
  BYTE4(v41) = v10;
  *(void *)((char *)&v41 + 5) = v11;
  BYTE13(v41) = v12;
  long long v33 = v41;
  if (v15) {
    uint64_t v34 = 0x100000000;
  }
  else {
    uint64_t v34 = 0;
  }
  uint64_t v35 = v34 | v14;
  if (v16) {
    uint64_t v36 = 0x10000000000;
  }
  else {
    uint64_t v36 = 0;
  }
  if (v17) {
    uint64_t v37 = 0x1000000000000;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v38 = v35 | v36 | v37;
  if (v18) {
    uint64_t v39 = 0x100000000000000;
  }
  else {
    uint64_t v39 = 0;
  }
  LOBYTE(v41) = v19;
  BYTE1(v41) = v20;
  WORD1(v41) = v21;
  BYTE4(v41) = v22;
  *(void *)((char *)&v41 + 5) = v23;
  BYTE13(v41) = v24;
  return sub_1A89161F8(v32, v33, *((unint64_t *)&v33 + 1), v13, v38 | v39, v41, *((unint64_t *)&v41 + 1), v25);
}

uint64_t MailboxToRename.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxToRename.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v2 = a1;
  *(_DWORD *)(v2 + 8) = a2;
  return result;
}

double (*MailboxToRename.mailbox.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxToRename.newName.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxToRename.newName.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(_DWORD *)(v2 + 24) = a2;
  return result;
}

double (*MailboxToRename.newName.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxToRename.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t MailboxToRename.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8915F70()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8915FD0()
{
  return sub_1A8A78768();
}

uint64_t sub_1A8916014()
{
  return sub_1A8A787C8();
}

BOOL sub_1A8916070(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence15MailboxToRenameV23__derived_struct_equalsySbAC_ACtFZ_0(*(void *)a1, *(_DWORD *)(a1 + 8), *(void *)(a1 + 16), *(_DWORD *)(a1 + 24), *(void *)a2, *(_DWORD *)(a2 + 8), *(void *)(a2 + 16), *(_DWORD *)(a2 + 24));
}

uint64_t sub_1A891609C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1A89161D8);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_1A8512DFC(a3, a4);
              char v15 = sub_1A894EE44(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A89161F8(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  LODWORD(v12) = HIDWORD(a2);
  *(void *)((char *)&v12 + 4) = a3;
  uint64_t v8 = *(void *)((char *)&v12 + 1);
  *(_DWORD *)uint64_t v13 = HIDWORD(a6);
  *(void *)&void v13[4] = a7;
  if (a5 != a1
    || (BYTE4(a1) & 1) != (BYTE4(a5) & 1)
    || ((a1 >> 40) & 1) != ((a5 >> 40) & 1)
    || (HIWORD(a1) & 1) != (HIWORD(a5) & 1)
    || (HIBYTE(a1) & 1) != (HIBYTE(a5) & 1)
    || ((a2 ^ a6) & 1) != 0
    || ((BYTE1(a2) ^ BYTE1(a6)) & 1) != 0
    || BYTE2(a2) != BYTE2(a6)
    || BYTE3(a2) != BYTE3(a6)
    || ((BYTE4(a2) ^ BYTE4(a6)) & 1) != 0)
  {
    return 0;
  }
  if (v8 == 2)
  {
    if (BYTE5(a6) != 2) {
      return 0;
    }
  }
  else if (BYTE5(a6) == 2 {
         || (sub_1A891E8A8(v8 & 0xFFFF010101010101, (a3 >> 40) & 1, *(void *)&v13[1] & 0xFFFF010101010101, (a7 >> 40) & 1) & 1) == 0)
  }
  {
    return 0;
  }
  return sub_1A851D710(a4, a8);
}

BOOL _s16IMAP2Persistence15MailboxToRenameV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  if (a2 != a6) {
    return 0;
  }
  return sub_1A8866D34(a1, a5) && a4 == a8 && sub_1A8866D34(a3, a7);
}

uint64_t _s16IMAP2Persistence5EventO6UpdateO21__derived_enum_equalsySbAE_AEtFZ_0(unint64_t a1, unint64_t a2)
{
  unint64_t v242 = a2;
  uint64_t v3 = sub_1A8A74C38();
  uint64_t v237 = *(void *)(v3 - 8);
  uint64_t v238 = v3;
  MEMORY[0x1F4188790](v3);
  v233 = (char *)&v209 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97413B8);
  MEMORY[0x1F4188790](v235);
  uint64_t v236 = (uint64_t)&v209 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741360);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v234 = (uint64_t)&v209 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v240 = (char *)&v209 - v9;
  MEMORY[0x1F4188790](v10);
  unsigned __int8 v241 = (char *)&v209 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9746208);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v209 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v239 = (uint64_t)&v209 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741C30);
  MEMORY[0x1F4188790](v17 - 8);
  char v19 = (char *)&v209 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  char v22 = (char *)&v209 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v209 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v209 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v209 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v209 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v209 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v209 - v39;
  switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    case 1uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 1
        || *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) != *(_DWORD *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10))
      {
        goto LABEL_165;
      }
      uint64_t v54 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v55 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      return sub_1A8926324(v54, v55);
    case 2uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 2
        || *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) != *(_DWORD *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10)
        || *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFFBLL)
                                                                                         + 0x18))
      {
        goto LABEL_165;
      }
      uint64_t v57 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v58 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v59 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v60 = *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (v57)
      {
        if (v59 && (sub_1A8954CE8(v57, v59) & 1) != 0 && ((v58 ^ v60) & 1) == 0) {
          goto LABEL_155;
        }
      }
      else if (!v59 && v58 == v60)
      {
        goto LABEL_155;
      }
      goto LABEL_165;
    case 3uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 3) {
        goto LABEL_165;
      }
      char v51 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) == *(_DWORD *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return v51 & 1;
    case 4uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 4) {
        goto LABEL_165;
      }
      uint64_t v61 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v62 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return sub_1A892642C(v61, v62);
    case 5uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 5) {
        goto LABEL_165;
      }
      int8x16_t v63 = *(void **)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      int8x16_t v64 = *(void **)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if ((sub_1A8954CE8(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10)) & 1) == 0|| (sub_1A8929090(v63, v64) & 1) == 0)
      {
        goto LABEL_165;
      }
      goto LABEL_155;
    case 6uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 6
        || *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18)
        || !_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))
      {
        goto LABEL_165;
      }
      goto LABEL_155;
    case 7uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 7) {
        goto LABEL_165;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18)) {
        goto LABEL_165;
      }
      int v65 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v66 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x24);
      int v67 = *(_DWORD *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v68 = *(_DWORD *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x24);
      if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))goto LABEL_165; {
      char v51 = v67 == v65 && v68 == v66;
      }
      return v51 & 1;
    case 8uLL:
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747690);
      unint64_t v71 = (uint64_t *)swift_projectBox();
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 8) {
        goto LABEL_165;
      }
      uint64_t v72 = *(int *)(v70 + 64);
      unsigned __int8 v241 = *(char **)((char *)v71 + v72);
      uint64_t v73 = *v71;
      uint64_t v74 = v71[1];
      uint64_t v75 = *(int *)(v70 + 48);
      uint64_t v76 = (uint64_t)v71 + v75;
      unint64_t v77 = (uint64_t *)swift_projectBox();
      uint64_t v78 = *v77;
      uint64_t v79 = v77[1];
      uint64_t v80 = (uint64_t)v77 + v75;
      uint64_t v81 = *(char **)((char *)v77 + v72);
      sub_1A8511A9C(v76, (uint64_t)v40, (uint64_t *)&unk_1E9741C30);
      sub_1A8511A9C(v80, (uint64_t)v37, (uint64_t *)&unk_1E9741C30);
      if (v74 == v79 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v73, v78))
      {
        sub_1A89180B4();
        char v82 = sub_1A8A78928();
        sub_1A8511B00((uint64_t)v37, (uint64_t *)&unk_1E9741C30);
        sub_1A8511B00((uint64_t)v40, (uint64_t *)&unk_1E9741C30);
        char v51 = v82 & (v241 == v81);
        return v51 & 1;
      }
      sub_1A8511B00((uint64_t)v37, (uint64_t *)&unk_1E9741C30);
      uint64_t v198 = (uint64_t)v40;
      goto LABEL_159;
    case 9uLL:
      size_t v83 = (uint64_t *)swift_projectBox();
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 9) {
        goto LABEL_165;
      }
      uint64_t v84 = v83;
      uint64_t v85 = v83[1];
      unsigned __int8 v241 = (char *)*v83;
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748208);
      uint64_t v87 = *(int *)(v86 + 48);
      uint64_t v88 = (uint64_t)v84 + v87;
      uint64_t v89 = *(int *)(v86 + 64);
      uint64_t v90 = (uint64_t)v84 + v89;
      uint64_t v91 = (unint64_t *)swift_projectBox();
      unint64_t v92 = v91[1];
      unint64_t v242 = *v91;
      uint64_t v93 = (uint64_t)v91 + v87;
      uint64_t v94 = (uint64_t)v91 + v89;
      sub_1A8511A9C(v88, (uint64_t)v34, (uint64_t *)&unk_1E9741C30);
      uint64_t v95 = v90;
      uint64_t v96 = v239;
      sub_1A8511A9C(v95, v239, (uint64_t *)&unk_1E9746208);
      sub_1A8511A9C(v93, (uint64_t)v31, (uint64_t *)&unk_1E9741C30);
      sub_1A8511A9C(v94, (uint64_t)v14, (uint64_t *)&unk_1E9746208);
      if (v85 == v92 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0((uint64_t)v241, v242))
      {
        sub_1A89180B4();
        if (sub_1A8A78928())
        {
          char v51 = sub_1A8A78928();
          sub_1A8511B00((uint64_t)v14, (uint64_t *)&unk_1E9746208);
          sub_1A8511B00((uint64_t)v31, (uint64_t *)&unk_1E9741C30);
          sub_1A8511B00(v96, (uint64_t *)&unk_1E9746208);
          sub_1A8511B00((uint64_t)v34, (uint64_t *)&unk_1E9741C30);
          return v51 & 1;
        }
      }
      sub_1A8511B00((uint64_t)v14, (uint64_t *)&unk_1E9746208);
      sub_1A8511B00((uint64_t)v31, (uint64_t *)&unk_1E9741C30);
      sub_1A8511B00(v96, (uint64_t *)&unk_1E9746208);
      uint64_t v198 = (uint64_t)v34;
LABEL_159:
      uint64_t v200 = (uint64_t *)&unk_1E9741C30;
      goto LABEL_164;
    case 0xAuLL:
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748228);
      char v98 = (uint64_t *)swift_projectBox();
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0xA) {
        goto LABEL_165;
      }
      uint64_t v99 = *(int *)(v97 + 64);
      unsigned __int8 v241 = *(char **)((char *)v98 + v99);
      uint64_t v100 = *v98;
      uint64_t v101 = v98[1];
      uint64_t v102 = *(int *)(v97 + 48);
      uint64_t v103 = (uint64_t)v98 + v102;
      uint64_t v104 = (uint64_t *)swift_projectBox();
      uint64_t v105 = *v104;
      uint64_t v106 = v104[1];
      uint64_t v107 = (uint64_t)v104 + v102;
      unint64_t v108 = *(char **)((char *)v104 + v99);
      sub_1A8511A9C(v103, (uint64_t)v28, (uint64_t *)&unk_1E9741C30);
      sub_1A8511A9C(v107, (uint64_t)v25, (uint64_t *)&unk_1E9741C30);
      if (v101 == v106 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v100, v105))
      {
        sub_1A89180B4();
        char v109 = sub_1A8A78928();
        sub_1A8511B00((uint64_t)v25, (uint64_t *)&unk_1E9741C30);
        sub_1A8511B00((uint64_t)v28, (uint64_t *)&unk_1E9741C30);
        char v51 = v109 & (v241 == v108);
        return v51 & 1;
      }
      unint64_t v199 = (uint64_t *)&unk_1E9741C30;
      sub_1A8511B00((uint64_t)v25, (uint64_t *)&unk_1E9741C30);
      uint64_t v198 = (uint64_t)v28;
      goto LABEL_163;
    case 0xBuLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0xB) {
        goto LABEL_165;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18)) {
        goto LABEL_165;
      }
      int v110 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v111 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      int v112 = *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v113 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))goto LABEL_165; {
      if (v110)
      }
        uint64_t v114 = 6581810;
      else {
        uint64_t v114 = 7631665;
      }
      if (v112) {
        uint64_t v115 = 6581810;
      }
      else {
        uint64_t v115 = 7631665;
      }
      if (v114 == v115)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v201 = sub_1A8A78588();
        swift_bridgeObjectRelease_n();
        char v51 = 0;
        if ((v201 & 1) == 0) {
          return v51 & 1;
        }
      }
      return sub_1A8926788(v111, v113);
    case 0xCuLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0xC) {
        goto LABEL_165;
      }
      uint64_t v116 = a1 & 0xFFFFFFFFFFFFFFBLL;
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v117 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      int v118 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x1C);
      int v119 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v120 = *(void **)(v116 + 40);
      char v121 = *(unsigned char *)(v116 + 48);
      int v122 = *(unsigned __int8 *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x1C);
      int v123 = *(_DWORD *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v124 = *(void **)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      char v125 = *(unsigned char *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      if (!sub_1A8866D34(v117, *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10))) {
        goto LABEL_165;
      }
      if (v118) {
        uint64_t v126 = 6581810;
      }
      else {
        uint64_t v126 = 7631665;
      }
      if (v122) {
        uint64_t v127 = 6581810;
      }
      else {
        uint64_t v127 = 7631665;
      }
      if (v126 == v127)
      {
        swift_bridgeObjectRelease_n();
        if (v123 != v119) {
          goto LABEL_165;
        }
      }
      else
      {
        char v202 = sub_1A8A78588();
        swift_bridgeObjectRelease_n();
        char v51 = 0;
        if ((v202 & 1) == 0 || v123 != v119) {
          return v51 & 1;
        }
      }
      if ((sub_1A8926848(v120, v124) & 1) == 0) {
        goto LABEL_165;
      }
      char v51 = v121 ^ v125 ^ 1;
      return v51 & 1;
    case 0xDuLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0xD) {
        goto LABEL_165;
      }
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v128 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v129 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v130 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v131 = *(unsigned char *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!sub_1A8866D34(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10))|| (sub_1A8926948(v128, v130) & 1) == 0)
      {
        goto LABEL_165;
      }
      goto LABEL_138;
    case 0xEuLL:
      uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741728);
      uint64_t v133 = swift_projectBox();
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0xE) {
        goto LABEL_165;
      }
      uint64_t v134 = *(void *)v133;
      unint64_t v135 = *(void *)(v133 + 24);
      uint64_t v228 = *(void *)(v133 + 16);
      uint64_t v218 = *(unsigned __int8 *)(v133 + 32);
      int v212 = *(unsigned __int8 *)(v133 + 33);
      int v217 = *(unsigned __int8 *)(v133 + 34);
      int v219 = *(unsigned __int8 *)(v133 + 35);
      int v136 = *(unsigned __int8 *)(v133 + 37);
      int v223 = *(unsigned __int8 *)(v133 + 36);
      int v224 = v136;
      uint64_t v226 = *(unsigned __int8 *)(v133 + 38);
      uint64_t v225 = *(unsigned __int8 *)(v133 + 39);
      int v227 = *(unsigned __int8 *)(v133 + 40);
      uint64_t v137 = *(int *)(v132 + 96);
      unint64_t v138 = *(void *)(v133 + v137 + 8);
      uint64_t v231 = *(void *)(v133 + v137);
      unint64_t v232 = v138;
      uint64_t v139 = *(int *)(v132 + 80);
      uint64_t v140 = v133 + v139;
      uint64_t v141 = *(unsigned int *)(v133 + 8);
      uint64_t v142 = swift_projectBox();
      uint64_t v143 = *(void *)v142;
      uint64_t v144 = *(unsigned int *)(v142 + 8);
      unint64_t v145 = *(void *)(v142 + 24);
      uint64_t v229 = *(void *)(v142 + 16);
      unint64_t v230 = v145;
      uint64_t v214 = *(unsigned __int8 *)(v142 + 32);
      int v146 = *(unsigned __int8 *)(v142 + 33);
      int v147 = *(unsigned __int8 *)(v142 + 34);
      int v213 = *(unsigned __int8 *)(v142 + 35);
      int v215 = *(unsigned __int8 *)(v142 + 36);
      int v216 = *(unsigned __int8 *)(v142 + 37);
      uint64_t v221 = *(unsigned __int8 *)(v142 + 38);
      uint64_t v220 = *(unsigned __int8 *)(v142 + 39);
      int v222 = *(unsigned __int8 *)(v142 + 40);
      uint64_t v148 = v142 + v139;
      unint64_t v149 = *(void *)(v142 + v137 + 8);
      uint64_t v239 = *(void *)(v142 + v137);
      unint64_t v242 = v149;
      uint64_t v150 = v140;
      char v22 = v241;
      sub_1A8511A9C(v150, (uint64_t)v241, (uint64_t *)&unk_1E9741360);
      uint64_t v151 = v148;
      char v19 = v240;
      sub_1A8511A9C(v151, (uint64_t)v240, (uint64_t *)&unk_1E9741360);
      if ((v141 | (v141 << 32)) != (v144 | (v144 << 32)) || !sub_1A8866D34(v134, v143))
      {
        unint64_t v199 = (uint64_t *)&unk_1E9741360;
        goto LABEL_162;
      }
      int v211 = v147;
      uint64_t v152 = v228;
      sub_1A8512DFC(v228, v135);
      uint64_t v153 = v231;
      unint64_t v154 = v232;
      sub_1A8512DFC(v231, v232);
      uint64_t v155 = v229;
      unint64_t v156 = v230;
      sub_1A8512DFC(v229, v230);
      uint64_t v157 = v239;
      unint64_t v158 = v242;
      sub_1A8512DFC(v239, v242);
      if ((sub_1A894E0C4(v152, v135, v155, v156) & 1) == 0)
      {
        sub_1A85135AC(v157, v158);
        sub_1A85135AC(v155, v156);
        sub_1A85135AC(v153, v154);
        uint64_t v203 = v152;
        unint64_t v204 = v135;
LABEL_180:
        sub_1A85135AC(v203, v204);
        unint64_t v199 = (uint64_t *)&unk_1E9741360;
        sub_1A8511B00((uint64_t)v19, (uint64_t *)&unk_1E9741360);
        uint64_t v198 = (uint64_t)v241;
        goto LABEL_163;
      }
      uint64_t v159 = v153;
      unint64_t v160 = v154;
      uint64_t v161 = v152;
      unint64_t v210 = v135;
      uint64_t v162 = 256;
      if (v212) {
        uint64_t v163 = 256;
      }
      else {
        uint64_t v163 = 0;
      }
      uint64_t v164 = v163 | v218;
      if (v217) {
        uint64_t v165 = 0x10000;
      }
      else {
        uint64_t v165 = 0;
      }
      if (v219) {
        uint64_t v166 = 0x1000000;
      }
      else {
        uint64_t v166 = 0;
      }
      uint64_t v167 = v164 | v165 | v166;
      if (v223) {
        uint64_t v168 = 0x100000000;
      }
      else {
        uint64_t v168 = 0;
      }
      if (v224) {
        uint64_t v169 = 0x10000000000;
      }
      else {
        uint64_t v169 = 0;
      }
      unint64_t v170 = v167 | v168 | v169 | (v226 << 48) | (v225 << 56);
      if (!v146) {
        uint64_t v162 = 0;
      }
      uint64_t v171 = v162 | v214;
      if (v211) {
        uint64_t v172 = 0x10000;
      }
      else {
        uint64_t v172 = 0;
      }
      if (v213) {
        uint64_t v173 = 0x1000000;
      }
      else {
        uint64_t v173 = 0;
      }
      uint64_t v174 = v171 | v172 | v173;
      if (v215) {
        uint64_t v175 = 0x100000000;
      }
      else {
        uint64_t v175 = 0;
      }
      if (v216) {
        uint64_t v176 = 0x10000000000;
      }
      else {
        uint64_t v176 = 0;
      }
      if ((sub_1A891E8A8(v170, v227, v174 | v175 | v176 | (v221 << 48) | (v220 << 56), v222) & 1) == 0)
      {
        sub_1A85135AC(v239, v242);
        sub_1A85135AC(v155, v156);
        sub_1A85135AC(v159, v160);
        uint64_t v203 = v152;
        unint64_t v204 = v210;
        goto LABEL_180;
      }
      uint64_t v177 = v236;
      uint64_t v178 = v236 + *(int *)(v235 + 48);
      uint64_t v179 = (uint64_t)v241;
      sub_1A8511A9C((uint64_t)v241, v236, (uint64_t *)&unk_1E9741360);
      sub_1A8511A9C((uint64_t)v19, v178, (uint64_t *)&unk_1E9741360);
      uint64_t v181 = v237;
      uint64_t v180 = v238;
      uint64_t v182 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48);
      if (v182(v177, 1, v238) == 1)
      {
        if (v182(v178, 1, v180) == 1)
        {
          sub_1A8511B00(v177, (uint64_t *)&unk_1E9741360);
          uint64_t v184 = v231;
          unint64_t v183 = v232;
          unint64_t v185 = v230;
          unint64_t v186 = v242;
          uint64_t v187 = v239;
          goto LABEL_185;
        }
        goto LABEL_183;
      }
      uint64_t v205 = v234;
      sub_1A8511A9C(v177, v234, (uint64_t *)&unk_1E9741360);
      if (v182(v178, 1, v180) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v205, v180);
        uint64_t v161 = v228;
LABEL_183:
        sub_1A8511B00(v177, &qword_1E97413B8);
        uint64_t v184 = v231;
        unint64_t v183 = v232;
        unint64_t v185 = v230;
        unint64_t v186 = v242;
        uint64_t v187 = v239;
        goto LABEL_186;
      }
      v206 = v233;
      (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v233, v178, v180);
      sub_1A8918108();
      char v207 = sub_1A8A76498();
      v208 = *(void (**)(char *, uint64_t))(v181 + 8);
      v208(v206, v180);
      v208((char *)v205, v180);
      sub_1A8511B00(v177, (uint64_t *)&unk_1E9741360);
      uint64_t v161 = v228;
      uint64_t v184 = v231;
      unint64_t v183 = v232;
      unint64_t v185 = v230;
      unint64_t v186 = v242;
      uint64_t v187 = v239;
      if (v207)
      {
LABEL_185:
        char v51 = sub_1A891609C(v184, v183, v187, v186);
        sub_1A85135AC(v187, v186);
        sub_1A85135AC(v229, v185);
        sub_1A85135AC(v184, v183);
        sub_1A85135AC(v161, v210);
        uint64_t v52 = (uint64_t *)&unk_1E9741360;
        sub_1A8511B00((uint64_t)v19, (uint64_t *)&unk_1E9741360);
        uint64_t v53 = v179;
LABEL_14:
        sub_1A8511B00(v53, v52);
        return v51 & 1;
      }
LABEL_186:
      sub_1A85135AC(v187, v186);
      sub_1A85135AC(v229, v185);
      sub_1A85135AC(v184, v183);
      sub_1A85135AC(v161, v210);
      unint64_t v199 = (uint64_t *)&unk_1E9741360;
      sub_1A8511B00((uint64_t)v19, (uint64_t *)&unk_1E9741360);
      uint64_t v198 = v179;
LABEL_163:
      uint64_t v200 = v199;
LABEL_164:
      sub_1A8511B00(v198, v200);
LABEL_165:
      char v51 = 0;
      return v51 & 1;
    case 0xFuLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0xF) {
        goto LABEL_165;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18)) {
        goto LABEL_165;
      }
      uint64_t v188 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v129 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v189 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v131 = *(unsigned char *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10))|| (sub_1A892737C(v188, v189) & 1) == 0)
      {
        goto LABEL_165;
      }
      goto LABEL_138;
    case 0x10uLL:
      long long v41 = (uint64_t *)swift_projectBox();
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0x10) {
        goto LABEL_165;
      }
      BOOL v42 = v41;
      uint64_t v43 = *v41;
      uint64_t v44 = v41[1];
      uint64_t v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748248) + 48);
      uint64_t v46 = (uint64_t)v42 + v45;
      uint64_t v47 = (uint64_t *)swift_projectBox();
      uint64_t v48 = *v47;
      uint64_t v49 = v47[1];
      uint64_t v50 = (uint64_t)v47 + v45;
      sub_1A8511A9C(v46, (uint64_t)v22, (uint64_t *)&unk_1E9741C30);
      sub_1A8511A9C(v50, (uint64_t)v19, (uint64_t *)&unk_1E9741C30);
      if (v44 == v49 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v43, v48))
      {
        sub_1A89180B4();
        char v51 = sub_1A8A78928();
        uint64_t v52 = (uint64_t *)&unk_1E9741C30;
        sub_1A8511B00((uint64_t)v19, (uint64_t *)&unk_1E9741C30);
        uint64_t v53 = (uint64_t)v22;
        goto LABEL_14;
      }
      unint64_t v199 = (uint64_t *)&unk_1E9741C30;
LABEL_162:
      sub_1A8511B00((uint64_t)v19, v199);
      uint64_t v198 = (uint64_t)v22;
      goto LABEL_163;
    case 0x11uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0x11) {
        goto LABEL_165;
      }
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v190 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v129 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v191 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v131 = *(unsigned char *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!sub_1A8866D34(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10))|| (sub_1A8927574(v190, v191) & 1) == 0)
      {
        goto LABEL_165;
      }
LABEL_138:
      char v51 = v129 ^ v131 ^ 1;
      return v51 & 1;
    case 0x12uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0x12) {
        goto LABEL_165;
      }
      uint64_t v192 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v193 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return sub_1A8928164(v192, v193);
    case 0x13uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0x13) {
        goto LABEL_165;
      }
      uint64_t v194 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v195 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return sub_1A8928304(v194, v195);
    case 0x14uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) != 0x14) {
        goto LABEL_165;
      }
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v196 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v197 = *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      if (!sub_1A8866D34(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v242 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))goto LABEL_165; {
      return sub_1A8949E50(v196, v197);
      }
    case 0x15uLL:
      if (((v242 >> 59) & 0x1E | (v242 >> 2) & 1) == 0x15 && v242 == 0xA000000000000004) {
        goto LABEL_155;
      }
      goto LABEL_165;
    default:
      if ((v242 >> 59) & 0x1E | (v242 >> 2) & 1
        || *(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(v242 + 16)
        || ((*(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(v242 + 17)) & 1) != 0
        || ((*(unsigned __int8 *)(a1 + 18) ^ *(unsigned __int8 *)(v242 + 18)) & 1) != 0
        || *(void *)(a1 + 24) != *(void *)(v242 + 24)
        || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(v242 + 32)
        || *(void *)(a1 + 40) != *(void *)(v242 + 40))
      {
        goto LABEL_165;
      }
LABEL_155:
      char v51 = 1;
      return v51 & 1;
  }
}

unint64_t sub_1A8917A30()
{
  unint64_t result = qword_1E974E4A0;
  if (!qword_1E974E4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E4A0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1A8561610(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for Event(uint64_t a1)
{
  return sub_1A8561624(*(void *)a1, *(unsigned char *)(a1 + 8));
}

{
  uint64_t vars8;

  sub_1A89995DC(*(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1A8561610(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1A8561624(v5, v6);
  return a1;
}

{
  unint64_t v4;
  unint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  char v4 = *(void *)(a2 + 8);
  sub_1A8999584(v4);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  sub_1A89995DC(v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Event(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1A8561624(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Event()
{
  return &type metadata for Event;
}

{
  return &type metadata for Event;
}

void *initializeBufferWithCopyOfBuffer for Event.Update(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for Event.Update()
{
  return swift_release();
}

void *assignWithCopy for Event.Update(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for Event.Update(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Event.Update(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x6B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 107);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Event.Update(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x6A)
  {
    *(void *)unint64_t result = a2 - 107;
    if (a3 >= 0x6B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A8917CFC(void *a1)
{
  unsigned int v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x14) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 21;
  }
}

unint64_t *sub_1A8917D20(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x15) {
    *unint64_t result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    *unint64_t result = (8 * (a2 - 21)) | 0xA000000000000004;
  }
  return result;
}

ValueMetadata *type metadata accessor for Event.Update()
{
  return &type metadata for Event.Update;
}

uint64_t initializeWithCopy for FlagsChange(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for FlagsChange(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v3 = *(void *)(a2 + 13);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(void *)(a1 + 13) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FlagsChange(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FlagsChange()
{
  return &type metadata for FlagsChange;
}

uint64_t initializeWithCopy for MailboxToRename(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxToRename(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy28_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MailboxToRename(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxToRename(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 28)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxToRename(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 28) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxToRename()
{
  return &type metadata for MailboxToRename;
}

unint64_t sub_1A89180B4()
{
  unint64_t result = qword_1E9747A58;
  if (!qword_1E9747A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9747A58);
  }
  return result;
}

unint64_t sub_1A8918108()
{
  unint64_t result = qword_1E9741328;
  if (!qword_1E9741328)
  {
    sub_1A8A74C38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9741328);
  }
  return result;
}

BOOL static FetchedWindow.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a2 == a1;
}

uint64_t FetchedWindow.range.setter(uint64_t result)
{
  *unsigned int v1 = result;
  return result;
}

double (*FetchedWindow.range.modify())(void)
{
  return nullsub_1;
}

BOOL sub_1A89181A4(_DWORD *a1, _DWORD *a2)
{
  return *a2 == *a1 && a2[1] == a1[1];
}

unint64_t FetchedWindow.upperBound.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

ValueMetadata *type metadata accessor for FetchedWindow()
{
  return &type metadata for FetchedWindow;
}

uint64_t static Flags.__derived_struct_equals(_:_:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return sub_1A891E8A8(a1 & 0xFFFF010101010101, a2, a3 & 0xFFFF010101010101, a4);
}

uint64_t static FlagsWithModifications.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  *(void *)&long long v11 = a2;
  WORD4(v11) = a3;
  uint64_t v6 = *(void *)((char *)&v11 + 1);
  *(void *)&long long v11 = a5;
  BYTE8(v11) = a6;
  uint64_t v7 = *(void *)((char *)&v11 + 1);
  LOBYTE(v11) = a2 & 1;
  *(void *)((char *)&v11 + 1) = v6;
  uint64_t v8 = v11;
  unsigned int v9 = WORD4(v11);
  LOBYTE(v11) = a5 & 1;
  *(void *)((char *)&v11 + 1) = v7;
  BYTE9(v11) = HIBYTE(a6);
  return sub_1A891E928(a1 & 0xFFFF010101010101, v8, v9, a4 & 0xFFFF010101010101, v11, WORD4(v11));
}

uint64_t Flags.unread.getter(char a1)
{
  return a1 & 1;
}

double (*Flags.unread.modify())(void)
{
  return nullsub_1;
}

uint64_t Flags.deleted.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

double (*Flags.deleted.modify())(void)
{
  return nullsub_1;
}

uint64_t Flags.answered.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

double (*Flags.answered.modify())(void)
{
  return nullsub_1;
}

uint64_t Flags.draft.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

double (*Flags.draft.modify())(void)
{
  return nullsub_1;
}

uint64_t Flags.forwarded.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t Flags.forwarded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

double (*Flags.forwarded.modify())(void)
{
  return nullsub_1;
}

uint64_t Flags.redirected.getter(unint64_t a1)
{
  return (a1 >> 40) & 1;
}

uint64_t Flags.redirected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

double (*Flags.redirected.modify())(void)
{
  return nullsub_1;
}

unint64_t Flags.junk.getter(unint64_t a1)
{
  return HIWORD(a1);
}

double (*Flags.junk.modify())(void)
{
  return nullsub_1;
}

unint64_t Flags.label.getter(unint64_t a1)
{
  return HIBYTE(a1);
}

double (*Flags.label.modify())(void)
{
  return nullsub_1;
}

uint64_t Flags.iCloudCleanup.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t Flags.iCloudCleanup.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

double (*Flags.iCloudCleanup.modify())(void)
{
  return nullsub_1;
}

BOOL static Flags.JunkStatus.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Flags.JunkStatus.hash(into:)()
{
  return sub_1A8A78768();
}

IMAP2Persistence::Flags __swiftcall Flags.init(unread:deleted:answered:draft:forwarded:redirected:junk:label:iCloudCleanup:)(Swift::Bool unread, Swift::Bool deleted, Swift::Bool answered, Swift::Bool draft, Swift::Bool forwarded, Swift::Bool redirected, IMAP2Persistence::Flags::JunkStatus junk, IMAP2Persistence::Flags::Label label, Swift::Bool iCloudCleanup)
{
  uint64_t v9 = 256;
  if (!deleted) {
    uint64_t v9 = 0;
  }
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL | unread;
  uint64_t v11 = 0x10000;
  if (!answered) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = 0x1000000;
  if (!draft) {
    uint64_t v12 = 0;
  }
  unint64_t v13 = v10 | v11 | v12;
  uint64_t v14 = 0x100000000;
  if (!forwarded) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = 0x10000000000;
  if (!redirected) {
    uint64_t v15 = 0;
  }
  unint64_t v16 = v13 | v14 | v15 | ((unint64_t)junk << 48) | ((void)label << 56);
  Swift::Bool v17 = iCloudCleanup;
  result.unread = v16;
  result.deleted = BYTE1(v16);
  result.answered = BYTE2(v16);
  result.draft = BYTE3(v16);
  result.forwarded = BYTE4(v16);
  result.redirected = BYTE5(v16);
  result.junk = BYTE6(v16);
  result.label = HIBYTE(v16);
  result.iCloudCleanup = v17;
  return result;
}

uint64_t Flags.hash(into:)()
{
  return sub_1A8A78778();
}

uint64_t Flags.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8918550()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8918630()
{
  return Flags.hash(into:)();
}

uint64_t sub_1A89186B0()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A891878C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3 = a1[8];
  int v4 = a2[8];
  if (a1[1]) {
    uint64_t v5 = 256;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | *a1;
  if (a1[2]) {
    uint64_t v7 = 0x10000;
  }
  else {
    uint64_t v7 = 0;
  }
  if (a1[3]) {
    uint64_t v8 = 0x1000000;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v6 | v7 | v8;
  if (a1[4]) {
    uint64_t v10 = 0x100000000;
  }
  else {
    uint64_t v10 = 0;
  }
  if (a1[5]) {
    uint64_t v11 = 0x10000000000;
  }
  else {
    uint64_t v11 = 0;
  }
  unint64_t v12 = v9 | v10 | v11 | ((unint64_t)a1[6] << 48) | ((unint64_t)a1[7] << 56);
  if (a2[1]) {
    uint64_t v13 = 256;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v13 | *a2;
  if (a2[2]) {
    uint64_t v15 = 0x10000;
  }
  else {
    uint64_t v15 = 0;
  }
  if (a2[3]) {
    uint64_t v16 = 0x1000000;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v14 | v15 | v16;
  if (a2[4]) {
    uint64_t v18 = 0x100000000;
  }
  else {
    uint64_t v18 = 0;
  }
  if (a2[5]) {
    uint64_t v19 = 0x10000000000;
  }
  else {
    uint64_t v19 = 0;
  }
  unint64_t v20 = v17 | v18 | v19 | ((unint64_t)a2[6] << 48) | ((unint64_t)a2[7] << 56);
  return sub_1A891E8A8(v12, v3, v20, v4);
}

uint64_t Flags.description.getter(unint64_t a1)
{
  unint64_t v1 = HIWORD(a1);
  unint64_t v40 = HIBYTE(a1);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E4A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8AD8FA0;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x646165726E75;
  *(void *)(inited + 48) = 0xE600000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 0x646574656C6564;
  *(void *)(inited + 72) = 0xE700000000000000;
  *(void *)(inited + 80) = swift_getKeyPath();
  *(void *)(inited + 88) = 0x6465726577736E61;
  *(void *)(inited + 96) = 0xE800000000000000;
  *(void *)(inited + 104) = swift_getKeyPath();
  *(void *)(inited + 112) = 0x7466617264;
  *(void *)(inited + 120) = 0xE500000000000000;
  *(void *)(inited + 128) = swift_getKeyPath();
  *(void *)(inited + 136) = 0x6564726177726F66;
  *(void *)(inited + 144) = 0xE900000000000064;
  *(void *)(inited + 152) = swift_getKeyPath();
  *(void *)(inited + 160) = 0x7463657269646572;
  *(void *)(inited + 168) = 0xEA00000000006465;
  uint64_t v3 = 0;
  *(void *)(inited + 176) = swift_getKeyPath();
  strcpy((char *)(inited + 184), "iCloudCleanup");
  *(_WORD *)(inited + 198) = -4864;
  long long v41 = (char *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v4 = *(void *)(inited + v3 + 40);
    uint64_t v5 = *(void *)(inited + v3 + 48);
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_getAtKeyPath();
    swift_release();
    if (v42)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v7 = *((void *)v41 + 2);
      unint64_t v6 = *((void *)v41 + 3);
      if (v7 >= v6 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v6 > 1), v7 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v7 + 1;
      uint64_t v8 = &v41[16 * v7];
      *((void *)v8 + 4) = v4;
      *((void *)v8 + 5) = v5;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v3 += 24;
  }
  while (v3 != 168);
  swift_bridgeObjectRelease();
  if ((_BYTE)v1)
  {
    if (v1 == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v10 = *((void *)v41 + 2);
      unint64_t v9 = *((void *)v41 + 3);
      if (v10 >= v9 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v9 > 1), v10 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v10 + 1;
      uint64_t v11 = &v41[16 * v10];
      *((void *)v11 + 4) = 1802401130;
      unint64_t v12 = v11 + 32;
      unint64_t v13 = 0xE400000000000000;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v15 = *((void *)v41 + 2);
      unint64_t v14 = *((void *)v41 + 3);
      if (v15 >= v14 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v14 > 1), v15 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v15 + 1;
      uint64_t v16 = &v41[16 * v15];
      *((void *)v16 + 4) = 0x6B6E754A746F6ELL;
      unint64_t v12 = v16 + 32;
      unint64_t v13 = 0xE700000000000000;
    }
    *((void *)v12 + 1) = v13;
  }
  switch((int)v40)
  {
    case 1:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v18 = *((void *)v41 + 2);
      unint64_t v17 = *((void *)v41 + 3);
      if (v18 >= v17 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v17 > 1), v18 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v18 + 1;
      uint64_t v19 = &v41[16 * v18];
      *((void *)v19 + 4) = 6579570;
      unint64_t v20 = v19 + 32;
      unint64_t v21 = 0xE300000000000000;
      goto LABEL_61;
    case 2:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v23 = *((void *)v41 + 2);
      unint64_t v22 = *((void *)v41 + 3);
      if (v23 >= v22 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v22 > 1), v23 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v23 + 1;
      uint64_t v24 = &v41[16 * v23];
      uint64_t v25 = 0x65676E61726FLL;
      goto LABEL_54;
    case 3:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v27 = *((void *)v41 + 2);
      unint64_t v26 = *((void *)v41 + 3);
      if (v27 >= v26 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v26 > 1), v27 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v27 + 1;
      uint64_t v24 = &v41[16 * v27];
      uint64_t v25 = 0x776F6C6C6579;
      goto LABEL_54;
    case 4:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v29 = *((void *)v41 + 2);
      unint64_t v28 = *((void *)v41 + 3);
      if (v29 >= v28 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v28 > 1), v29 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v29 + 1;
      uint64_t v30 = &v41[16 * v29];
      *((void *)v30 + 4) = 0x6E65657267;
      unint64_t v20 = v30 + 32;
      unint64_t v21 = 0xE500000000000000;
      goto LABEL_61;
    case 5:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v32 = *((void *)v41 + 2);
      unint64_t v31 = *((void *)v41 + 3);
      if (v32 >= v31 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v31 > 1), v32 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v32 + 1;
      uint64_t v33 = &v41[16 * v32];
      uint64_t v34 = 1702194274;
      goto LABEL_60;
    case 6:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v36 = *((void *)v41 + 2);
      unint64_t v35 = *((void *)v41 + 3);
      if (v36 >= v35 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v35 > 1), v36 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v36 + 1;
      uint64_t v24 = &v41[16 * v36];
      uint64_t v25 = 0x656C70727570;
LABEL_54:
      *((void *)v24 + 4) = v25;
      unint64_t v20 = v24 + 32;
      unint64_t v21 = 0xE600000000000000;
      goto LABEL_61;
    case 7:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_1A891C3F4(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v38 = *((void *)v41 + 2);
      unint64_t v37 = *((void *)v41 + 3);
      if (v38 >= v37 >> 1) {
        long long v41 = sub_1A891C3F4((char *)(v37 > 1), v38 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v38 + 1;
      uint64_t v33 = &v41[16 * v38];
      uint64_t v34 = 2036429415;
LABEL_60:
      *((void *)v33 + 4) = v34;
      unint64_t v20 = v33 + 32;
      unint64_t v21 = 0xE400000000000000;
LABEL_61:
      *((void *)v20 + 1) = v21;
      break;
    default:
      break;
  }
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9744580);
  sub_1A851154C((unint64_t *)&qword_1E9740E40, (uint64_t *)&unk_1E9744580);
  sub_1A8A76348();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  return 0x287367616C46;
}

uint64_t sub_1A8919104()
{
  uint64_t v1 = 256;
  if (!v0[1]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | *v0;
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!v0[3]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v2 | v3 | v4;
  uint64_t v6 = 0x100000000;
  if (!v0[4]) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x10000000000;
  if (!v0[5]) {
    uint64_t v7 = 0;
  }
  return Flags.description.getter(v5 | v6 | v7 | ((unint64_t)v0[6] << 48) | ((unint64_t)v0[7] << 56));
}

unint64_t FlagsWithModifications.flags.getter(uint64_t a1)
{
  return a1 & 0xFFFF010101010101;
}

int8x8_t FlagsWithModifications.flags.setter(unint64_t a1, char a2)
{
  *(unsigned char *)uint64_t v2 = a1 & 1;
  uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(a1);
  int16x8_t v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1A8AD8F50), (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1A8AD8F40));
  *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v4);
  *(_DWORD *)(v2 + 1) = result.i32[0];
  *(unsigned char *)(v2 + 5) = BYTE5(a1) & 1;
  *(unsigned char *)(v2 + 6) = BYTE6(a1);
  *(unsigned char *)(v2 + 7) = HIBYTE(a1);
  *(unsigned char *)(v2 + 8) = a2;
  return result;
}

double (*FlagsWithModifications.flags.modify())(void)
{
  return nullsub_1;
}

uint64_t FlagsWithModifications.originalFlags.getter(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)&long long v4 = a2;
  BYTE8(v4) = a3;
  return *(void *)((char *)&v4 + 1);
}

uint64_t FlagsWithModifications.hasLocalChanges.getter(unint64_t a1, unint64_t a2, __int16 a3)
{
  *(void *)uint64_t v5 = a2;
  v5[8] = a3;
  if (BYTE1(a2) == 2)
  {
    LOBYTE(v3) = 1;
  }
  else
  {
    LOBYTE(v3) = 1;
    if ((a1 & 1) != ((a2 & 0x100) == 0)
      && ((a1 >> 8) & 1) != (((a2 >> 8) & 0x100) == 0)
      && ((a1 >> 16) & 1) != ((*(void *)&v5[1] & 0x10000) == 0)
      && ((a1 >> 24) & 1) != (((a2 >> 8) & 0x1000000) == 0)
      && (BYTE4(a1) & 1) != ((*(void *)&v5[1] & 0x100000000) == 0)
      && ((a1 >> 40) & 1) != ((*(void *)&v5[1] & 0x10000000000) == 0)
      && ((*(void *)&v5[1] ^ a1) & 0xFF000000000000) == 0
      && !((*(void *)&v5[1] ^ a1) >> 56))
    {
      int v3 = a2 ^ ((unsigned __int16)(a3 & 0x100) >> 8);
    }
  }
  return v3 & 1;
}

uint64_t FlagsWithModifications.locallyModified.getter(unint64_t a1, uint64_t a2, __int16 a3)
{
  *(void *)unint64_t v10 = a2;
  *(_WORD *)&v10[8] = a3;
  uint64_t v3 = *(void *)&v10[1];
  *(void *)unint64_t v10 = MEMORY[0x1E4FBC870];
  if (v3 == 2)
  {
    return sub_1A891EA28((uint64_t)&unk_1EFE86BD8);
  }
  else
  {
    int v6 = a2;
    if (((a1 ^ ((v3 & 1) == 0)) & 1) == 0) {
      sub_1A891C924(&v9, 0);
    }
    if (((a1 >> 8) & 1) == ((v3 & 0x100) == 0)) {
      sub_1A891C924(&v9, 1);
    }
    if (((a1 >> 16) & 1) == ((v3 & 0x10000) == 0)) {
      sub_1A891C924(&v9, 2);
    }
    if (((a1 >> 24) & 1) == ((v3 & 0x1000000) == 0)) {
      sub_1A891C924(&v9, 3);
    }
    if ((BYTE4(a1) & 1) == ((v3 & 0x100000000) == 0)) {
      sub_1A891C924(&v9, 4);
    }
    if (((a1 >> 40) & 1) == ((v3 & 0x10000000000) == 0)) {
      sub_1A891C924(&v9, 5);
    }
    unint64_t v8 = v3 ^ a1;
    if ((v8 & 0xFF000000000000) != 0) {
      sub_1A891C924(&v9, 6);
    }
    if (HIBYTE(v8)) {
      sub_1A891C924(&v9, 7);
    }
    if (((v6 ^ ((a3 & 0x100) == 0)) & 1) == 0) {
      sub_1A891C924(&v9, 8);
    }
    return *(void *)v10;
  }
}

void *static FlagKind.allCases.getter()
{
  return &unk_1EFE86BD8;
}

uint64_t FlagsWithModifications.hash(into:)(uint64_t a1, uint64_t a2, __int16 a3)
{
  char v4 = HIBYTE(a3);
  Flags.hash(into:)();
  if (v4 == 2) {
    return sub_1A8A78778();
  }
  sub_1A8A78778();
  return Flags.hash(into:)();
}

uint64_t FlagsWithModifications.hashValue.getter(uint64_t a1, __int16 a2)
{
  char v2 = HIBYTE(a2);
  sub_1A8A78738();
  Flags.hash(into:)();
  sub_1A8A78778();
  if (v2 != 2) {
    Flags.hash(into:)();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A8919624()
{
  uint64_t v1 = *(void *)(v0 + 9);
  sub_1A8A78738();
  Flags.hash(into:)();
  sub_1A8A78778();
  if (v1 != 2) {
    Flags.hash(into:)();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A8919750()
{
  uint64_t v1 = *(void *)(v0 + 9);
  Flags.hash(into:)();
  if (v1 == 2) {
    return sub_1A8A78778();
  }
  sub_1A8A78778();
  return Flags.hash(into:)();
}

uint64_t sub_1A8919858()
{
  uint64_t v1 = *(void *)(v0 + 9);
  sub_1A8A78738();
  Flags.hash(into:)();
  sub_1A8A78778();
  if (v1 != 2) {
    Flags.hash(into:)();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A8919980(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  int v4 = a1[1];
  int v5 = a1[2];
  int v6 = a1[3];
  int v7 = a1[4];
  int v8 = a1[5];
  uint64_t v9 = a1[6];
  unsigned __int8 v10 = a1[8];
  uint64_t v11 = *(void *)(a1 + 9);
  unsigned __int8 v12 = a1[17];
  uint64_t v13 = *a2;
  int v14 = a2[1];
  int v15 = a2[2];
  int v16 = a2[3];
  int v17 = a2[4];
  int v18 = a2[5];
  uint64_t v19 = a2[6];
  unsigned __int8 v20 = a2[8];
  uint64_t v21 = *(void *)(a2 + 9);
  unsigned __int8 v22 = a2[17];
  uint64_t v23 = a1[7];
  uint64_t v24 = a2[7];
  if (v4) {
    uint64_t v25 = 256;
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v26 = v25 | v3;
  if (v5) {
    uint64_t v27 = 0x10000;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v6) {
    uint64_t v28 = 0x1000000;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v26 | v27 | v28;
  if (v7) {
    uint64_t v30 = 0x100000000;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v8) {
    uint64_t v31 = 0x10000000000;
  }
  else {
    uint64_t v31 = 0;
  }
  unint64_t v32 = v29 | v30 | v31 | (v9 << 48) | (v23 << 56);
  LOBYTE(v43) = v10;
  *(void *)((char *)&v43 + 1) = v11;
  BYTE9(v43) = v12;
  uint64_t v33 = v43;
  unsigned int v34 = WORD4(v43);
  if (v14) {
    uint64_t v35 = 256;
  }
  else {
    uint64_t v35 = 0;
  }
  uint64_t v36 = v35 | v13;
  if (v15) {
    uint64_t v37 = 0x10000;
  }
  else {
    uint64_t v37 = 0;
  }
  if (v16) {
    uint64_t v38 = 0x1000000;
  }
  else {
    uint64_t v38 = 0;
  }
  uint64_t v39 = v36 | v37 | v38;
  if (v17) {
    uint64_t v40 = 0x100000000;
  }
  else {
    uint64_t v40 = 0;
  }
  if (v18) {
    uint64_t v41 = 0x10000000000;
  }
  else {
    uint64_t v41 = 0;
  }
  v44[0] = v20;
  *(void *)&v44[1] = v21;
  v44[9] = v22;
  return sub_1A891E928(v32, v33, v34, v39 | v40 | v41 | (v19 << 48) | (v24 << 56), *(uint64_t *)v44, *(unsigned __int16 *)&v44[8]);
}

char *FlagsWithModifications.description.getter(uint64_t a1, char *a2, __int16 a3)
{
  unsigned __int8 v22 = a2;
  LOWORD(v23) = a3;
  unint64_t v3 = a1 & 0xFFFF010101010101;
  LOBYTE(v22) = a2 & 1;
  uint64_t v4 = FlagsWithModifications.locallyModified.getter(a1 & 0xFFFF010101010101, (uint64_t)v22, a3);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v21 = v3;
    unsigned __int8 v22 = (char *)MEMORY[0x1E4FBC860];
    sub_1A891DB74(0, v5, 0);
    int v6 = v22;
    int64_t v7 = sub_1A85DD8C4(v4);
    int v9 = v8;
    char v11 = v10 & 1;
    do
    {
      if (v7 < 0 || v7 >= 1 << *(unsigned char *)(v4 + 32))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x1A8919ED8);
      }
      if (((*(void *)(v4 + 56 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(v4 + 36) != v9) {
        goto LABEL_26;
      }
      unint64_t v12 = 0xE600000000000000;
      uint64_t v13 = 0x646165726E75;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x646574656C6564;
          break;
        case 2:
          unint64_t v12 = 0xE800000000000000;
          uint64_t v13 = 0x6465726577736E61;
          break;
        case 3:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x7466617264;
          break;
        case 4:
          unint64_t v12 = 0xE900000000000064;
          uint64_t v13 = 0x6564726177726F66;
          break;
        case 5:
          unint64_t v12 = 0xEA00000000006465;
          uint64_t v13 = 0x7463657269646572;
          break;
        case 6:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1802401130;
          break;
        case 7:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x6C6562616CLL;
          break;
        case 8:
          unint64_t v12 = 0xED000070756E6165;
          uint64_t v13 = 0x6C4364756F6C4369;
          break;
        default:
          break;
      }
      unsigned __int8 v22 = v6;
      unint64_t v15 = *((void *)v6 + 2);
      unint64_t v14 = *((void *)v6 + 3);
      if (v15 >= v14 >> 1)
      {
        sub_1A891DB74((char *)(v14 > 1), v15 + 1, 1);
        int v6 = v22;
      }
      *((void *)v6 + 2) = v15 + 1;
      int v16 = &v6[16 * v15];
      *((void *)v16 + 4) = v13;
      *((void *)v16 + 5) = v12;
      int64_t v17 = sub_1A85DD968(v7, v9, v11 & 1, v4);
      int64_t v7 = v17;
      int v9 = v18;
      char v11 = v19 & 1;
      --v5;
    }
    while (v5);
    sub_1A856B010(v17, v18, v19 & 1);
    swift_bridgeObjectRelease();
    unint64_t v3 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    int v6 = (char *)MEMORY[0x1E4FBC860];
  }
  unsigned __int8 v22 = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A891ACDC(&v22);
  swift_bridgeObjectRelease();
  if (*((void *)v22 + 2))
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9744580);
    sub_1A851154C((unint64_t *)&qword_1E9740E40, (uint64_t *)&unk_1E9744580);
    sub_1A8A76348();
  }
  swift_release();
  unsigned __int8 v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1A8A77DC8();
  swift_bridgeObjectRelease();
  unsigned __int8 v22 = (char *)0xD000000000000013;
  unint64_t v23 = 0x80000001A8B3F070;
  Flags.description.getter(v3);
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  return v22;
}

char *sub_1A8919EFC()
{
  uint64_t v1 = 256;
  if (!v0[1]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | *v0;
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!v0[3]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v2 | v3 | v4;
  uint64_t v6 = 0x100000000;
  if (!v0[4]) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x10000000000;
  if (!v0[5]) {
    uint64_t v7 = 0;
  }
  *(void *)&v9[1] = *(void *)(v0 + 9);
  v9[9] = v0[17];
  return FlagsWithModifications.description.getter(v5 | v6 | v7 | ((unint64_t)v0[6] << 48) | ((unint64_t)v0[7] << 56), *(char **)v9, *(__int16 *)&v9[8]);
}

uint64_t FlagsUpdate.unread.getter(char a1)
{
  return a1 & 1;
}

uint64_t FlagsUpdate.unread.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*FlagsUpdate.unread.modify())(void)
{
  return nullsub_1;
}

uint64_t FlagsUpdate.deleted.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t FlagsUpdate.deleted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

double (*FlagsUpdate.deleted.modify())(void)
{
  return nullsub_1;
}

uint64_t FlagsUpdate.answered.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t FlagsUpdate.answered.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

double (*FlagsUpdate.answered.modify())(void)
{
  return nullsub_1;
}

uint64_t FlagsUpdate.draft.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

uint64_t FlagsUpdate.draft.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

double (*FlagsUpdate.draft.modify())(void)
{
  return nullsub_1;
}

unint64_t FlagsUpdate.forwarded.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t FlagsUpdate.forwarded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

double (*FlagsUpdate.forwarded.modify())(void)
{
  return nullsub_1;
}

unint64_t FlagsUpdate.redirected.getter(unint64_t a1)
{
  return a1 >> 40;
}

uint64_t FlagsUpdate.redirected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

double (*FlagsUpdate.redirected.modify())(void)
{
  return nullsub_1;
}

unint64_t FlagsUpdate.junk.getter(unint64_t a1)
{
  return HIWORD(a1);
}

uint64_t FlagsUpdate.junk.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 6) = result;
  return result;
}

double (*FlagsUpdate.junk.modify())(void)
{
  return nullsub_1;
}

unint64_t FlagsUpdate.label.getter(unint64_t a1)
{
  return HIBYTE(a1);
}

uint64_t FlagsUpdate.label.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 7) = result;
  return result;
}

double (*FlagsUpdate.label.modify())(void)
{
  return nullsub_1;
}

uint64_t FlagsUpdate.iCloudCleanup.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t FlagsUpdate.iCloudCleanup.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

double (*FlagsUpdate.iCloudCleanup.modify())(void)
{
  return nullsub_1;
}

void *FlagsUpdate.Label.clear.unsafeMutableAddressor()
{
  return &static FlagsUpdate.Label.clear;
}

uint64_t static FlagsUpdate.Label.clear.getter()
{
  return 0;
}

uint64_t FlagsUpdate.Label.hash(into:)(uint64_t a1, char a2)
{
  if (a2 != 8) {
    sub_1A8A78768();
  }
  return sub_1A8A78768();
}

BOOL static FlagsUpdate.Label.__derived_enum_equals(_:_:)(char a1, char a2)
{
  if (a1 == 8) {
    return a2 == 8;
  }
  if (a2 == 8) {
    return 0;
  }
  return a1 == a2;
}

uint64_t FlagsUpdate.Label.hashValue.getter(unsigned __int8 a1)
{
  int v1 = a1;
  sub_1A8A78738();
  if (v1 != 8) {
    sub_1A8A78768();
  }
  sub_1A8A78768();
  return sub_1A8A787C8();
}

uint64_t sub_1A891A250()
{
  uint64_t v1 = *v0;
  sub_1A8A78738();
  if (v1 != 8) {
    sub_1A8A78768();
  }
  sub_1A8A78768();
  return sub_1A8A787C8();
}

uint64_t sub_1A891A2B0()
{
  if (*v0 != 8) {
    sub_1A8A78768();
  }
  return sub_1A8A78768();
}

uint64_t sub_1A891A2F8()
{
  uint64_t v1 = *v0;
  sub_1A8A78738();
  if (v1 != 8) {
    sub_1A8A78768();
  }
  sub_1A8A78768();
  return sub_1A8A787C8();
}

BOOL sub_1A891A358(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 8) {
    return v3 == 8;
  }
  if (v3 == 8) {
    return 0;
  }
  return v2 == v3;
}

unint64_t FlagsUpdate.init(unread:deleted:answered:draft:forwarded:redirected:junk:label:iCloudCleanup:)(char a1, char a2, char a3, char a4, unsigned __int8 a5, unsigned __int8 a6, unsigned __int8 a7, uint64_t a8)
{
  uint64_t v8 = 256;
  if ((a2 & 1) == 0) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL | a1 & 1;
  uint64_t v10 = 0x10000;
  if ((a3 & 1) == 0) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = 0x1000000;
  if ((a4 & 1) == 0) {
    uint64_t v11 = 0;
  }
  return v9 | v10 | v11 | ((unint64_t)a5 << 32) | ((unint64_t)a6 << 40) | ((unint64_t)a7 << 48) | (a8 << 56);
}

uint64_t FlagsUpdate.hash(into:)(uint64_t a1, unint64_t a2, char a3)
{
  sub_1A8A78778();
  sub_1A8A78778();
  sub_1A8A78778();
  sub_1A8A78778();
  if ((a2 & 0xFF00000000) != 0x200000000) {
    sub_1A8A78778();
  }
  sub_1A8A78778();
  if ((a2 & 0xFF0000000000) != 0x20000000000) {
    sub_1A8A78778();
  }
  unint64_t v5 = HIBYTE(a2);
  sub_1A8A78778();
  if ((a2 & 0xFF000000000000) == 0x3000000000000)
  {
    sub_1A8A78778();
    if (v5 == 8) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  sub_1A8A78778();
  sub_1A8A78768();
  if (v5 != 8) {
LABEL_7:
  }
    sub_1A8A78768();
LABEL_9:
  sub_1A8A78768();
  if (a3 != 2) {
    sub_1A8A78778();
  }
  return sub_1A8A78778();
}

uint64_t static FlagsUpdate.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  return sub_1A891E740(a1 & 0xFFFFFFFF01010101, a2, a3 & 0xFFFFFFFF01010101, a4);
}

uint64_t FlagsUpdate.hashValue.getter(uint64_t a1, char a2)
{
  sub_1A8A78738();
  FlagsUpdate.hash(into:)((uint64_t)v5, a1 & 0xFFFFFFFF01010101, a2);
  return sub_1A8A787C8();
}

uint64_t sub_1A891A570()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  char v9 = v0[8];
  sub_1A8A78738();
  uint64_t v10 = 256;
  if (!v2) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v1;
  uint64_t v12 = 0x10000;
  if (!v3) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v4) {
    uint64_t v13 = 0;
  }
  FlagsUpdate.hash(into:)((uint64_t)v15, v11 | v12 | v13 | (v5 << 32) | (v6 << 40) | (v7 << 48) | (v8 << 56), v9);
  return sub_1A8A787C8();
}

uint64_t sub_1A891A638(uint64_t a1)
{
  uint64_t v2 = 256;
  if (!v1[1]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | *v1;
  uint64_t v4 = 0x10000;
  if (!v1[2]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 0x1000000;
  if (!v1[3]) {
    uint64_t v5 = 0;
  }
  return FlagsUpdate.hash(into:)(a1, v3 | v4 | v5 | ((unint64_t)v1[4] << 32) | ((unint64_t)v1[5] << 40) | ((unint64_t)v1[6] << 48) | ((unint64_t)v1[7] << 56), v1[8]);
}

uint64_t sub_1A891A6A0()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  char v9 = v0[8];
  sub_1A8A78738();
  uint64_t v10 = 256;
  if (!v2) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v1;
  uint64_t v12 = 0x10000;
  if (!v3) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v4) {
    uint64_t v13 = 0;
  }
  FlagsUpdate.hash(into:)((uint64_t)v15, v11 | v12 | v13 | (v5 << 32) | (v6 << 40) | (v7 << 48) | (v8 << 56), v9);
  return sub_1A8A787C8();
}

uint64_t sub_1A891A764(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = 256;
  if (a1[1]) {
    uint64_t v3 = 256;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 | *a1;
  uint64_t v5 = 0x10000;
  if (a1[2]) {
    uint64_t v6 = 0x10000;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x1000000;
  if (a1[3]) {
    uint64_t v8 = 0x1000000;
  }
  else {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v4 | v6 | v8 | ((unint64_t)a1[4] << 32) | ((unint64_t)a1[5] << 40) | ((unint64_t)a1[6] << 48) | ((unint64_t)a1[7] << 56);
  if (!a2[1]) {
    uint64_t v2 = 0;
  }
  uint64_t v10 = v2 | *a2;
  if (!a2[2]) {
    uint64_t v5 = 0;
  }
  if (!a2[3]) {
    uint64_t v7 = 0;
  }
  return sub_1A891E740(v9, a1[8], v10 | v5 | v7 | ((unint64_t)a2[4] << 32) | ((unint64_t)a2[5] << 40) | ((unint64_t)a2[6] << 48) | ((unint64_t)a2[7] << 56), a2[8]);
}

uint64_t Flags.init(_:)(uint64_t a1)
{
  unint64_t v1 = a1 & 0xFF00000000000000;
  if ((a1 & 0xFF00000000000000) == 0x800000000000000) {
    unint64_t v1 = 0x100000000000000;
  }
  uint64_t v2 = a1 & 0xFF000000000000;
  if ((a1 & 0xFF000000000000) == 0x3000000000000) {
    uint64_t v2 = 0;
  }
  return v2 | a1 & 0x10100000000 | v1 | a1 & 0x1010101;
}

IMAP2Persistence::FlagsWithModifications __swiftcall FlagsWithModifications.init(flags:)(IMAP2Persistence::Flags flags)
{
  *(void *)&flags.unread &= 0xFFFF010101010101;
  LOBYTE(v4) = flags.iCloudCleanup;
  *(IMAP2Persistence::Flags *)((char *)&v4 + 1) = flags;
  *(void *)&v1.iCloudCleanup = v4;
  __int16 v3 = WORD4(v4);
  result.flags = v1;
  *(_DWORD *)&result.originalFlags.value.unread = *(_DWORD *)((char *)&v2 + 1);
  *(_WORD *)&result.originalFlags.value.forwarded = *(_WORD *)((char *)&v2 + 5);
  result.originalFlags.value.junk = HIBYTE(v2);
  *(_WORD *)&result.originalFlags.value.label = v3;
  return result;
}

uint64_t FlagsWithModifications.init(_:)(uint64_t a1, char a2)
{
  return 0;
}

unint64_t FlagsWithModifications.update(with:)(unint64_t result, char a2)
{
  unint64_t v3 = *(void *)(v2 + 9);
  if (v3 != 2)
  {
    char v4 = *(unsigned char *)v2 ^ v3;
    char v5 = result & 1;
    if ((v4 & 1) == 0) {
      *(unsigned char *)uint64_t v2 = v5;
    }
    *(unsigned char *)(v2 + 9) = v5;
    unint64_t v3 = *(void *)(v2 + 9);
    if (v3 != 2)
    {
      int v6 = *(unsigned __int8 *)(v2 + 1) ^ (v3 >> 8) & 1;
      unsigned int v7 = (result >> 8) & 1;
      if ((v6 & 1) == 0) {
        *(unsigned char *)(v2 + 1) = v7;
      }
      *(unsigned char *)(v2 + 10) = v7;
      unint64_t v3 = *(void *)(v2 + 9);
      if (v3 != 2)
      {
        if (((*(unsigned __int8 *)(v2 + 2) ^ (v3 >> 16) & 1) & 1) == 0) {
          *(unsigned char *)(v2 + 2) = BYTE2(result) & 1;
        }
        *(unsigned char *)(v2 + 11) = BYTE2(result) & 1;
        unint64_t v3 = *(void *)(v2 + 9);
        if (v3 != 2)
        {
          int v8 = *(unsigned __int8 *)(v2 + 3) ^ (v3 >> 24) & 1;
          unsigned int v9 = BYTE3(result) & 1;
          if ((v8 & 1) == 0) {
            *(unsigned char *)(v2 + 3) = v9;
          }
          *(unsigned char *)(v2 + 12) = v9;
          unint64_t v3 = *(void *)(v2 + 9);
        }
      }
    }
  }
  if ((result & 0xFF00000000) != 0x200000000 && v3 != 2)
  {
    if (((*(unsigned char *)(v2 + 4) ^ BYTE4(v3) & 1) & 1) == 0) {
      *(unsigned char *)(v2 + 4) = BYTE4(result) & 1;
    }
    *(unsigned char *)(v2 + 13) = BYTE4(result) & 1;
    unint64_t v3 = *(void *)(v2 + 9);
  }
  if ((result & 0xFF0000000000) != 0x20000000000 && v3 != 2)
  {
    int v10 = *(unsigned __int8 *)(v2 + 5) ^ (v3 >> 40) & 1;
    uint64_t v11 = (result >> 40) & 1;
    if ((v10 & 1) == 0) {
      *(unsigned char *)(v2 + 5) = v11;
    }
    *(unsigned char *)(v2 + 14) = v11;
    unint64_t v3 = *(void *)(v2 + 9);
  }
  unint64_t v12 = HIBYTE(result);
  if (BYTE6(result) != 3 && v3 != 2)
  {
    if (*(unsigned __int8 *)(v2 + 6) == BYTE6(v3)) {
      *(unsigned char *)(v2 + 6) = BYTE6(result);
    }
    *(unsigned char *)(v2 + 15) = BYTE6(result);
    unint64_t v3 = *(void *)(v2 + 9);
  }
  unint64_t v13 = HIBYTE(v3);
  if (v12 == 8)
  {
    if (v3 != 2 && !v13)
    {
      if (*(unsigned __int8 *)(v2 + 7) <= 1u) {
        LOBYTE(v12) = 1;
      }
      else {
        LOBYTE(v12) = *(unsigned char *)(v2 + 7);
      }
      if (*(unsigned char *)(v2 + 7)) {
        goto LABEL_40;
      }
      goto LABEL_39;
    }
  }
  else if (v3 != 2)
  {
    if (*(unsigned __int8 *)(v2 + 7) != v13)
    {
LABEL_40:
      *(unsigned char *)(v2 + 16) = v12;
      goto LABEL_41;
    }
LABEL_39:
    *(unsigned char *)(v2 + 7) = v12;
    goto LABEL_40;
  }
LABEL_41:
  if (a2 != 2 && *(unsigned char *)(v2 + 9) != 2)
  {
    char v14 = a2 & 1;
    if (*(unsigned __int8 *)(v2 + 8) == *(unsigned __int8 *)(v2 + 17)) {
      *(unsigned char *)(v2 + 8) = v14;
    }
    *(unsigned char *)(v2 + 17) = v14;
  }
  return result;
}

unint64_t static FlagsWithModifications.makeForLocallyCreatedMessage(with:)(uint64_t a1)
{
  return a1 & 0xFFFF010101010101;
}

unint64_t FlagsWithModifications.updated(with:)(uint64_t a1, char a2, unint64_t a3)
{
  unsigned __int8 v13 = a3 & 1;
  uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(a3);
  int16x8_t v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1A8AD8F50), (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1A8AD8F40));
  *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
  unsigned __int32 v14 = vmovn_s16(v4).u32[0];
  char v15 = BYTE5(a3) & 1;
  unsigned __int8 v16 = BYTE6(a3);
  unsigned __int8 v17 = HIBYTE(a3);
  FlagsWithModifications.update(with:)(a1 & 0xFFFFFFFF01010101, a2);
  uint64_t v5 = 256;
  if (!(_BYTE)v14) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | v13;
  uint64_t v7 = 0x10000;
  if (!BYTE1(v14)) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x1000000;
  if (!BYTE2(v14)) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v6 | v7 | v8;
  uint64_t v10 = 0x100000000;
  if (!HIBYTE(v14)) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = 0x10000000000;
  if (!v15) {
    uint64_t v11 = 0;
  }
  return v9 | v10 | v11 | ((unint64_t)v16 << 48) | ((unint64_t)v17 << 56);
}

void sub_1A891ACCC(void *a1@<X8>)
{
  *a1 = &unk_1EFE86BD8;
}

uint64_t sub_1A891ACDC(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A894736C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1A891D29C(v5);
  *a1 = v2;
  return result;
}

void *sub_1A891AD48()
{
  IMAP2Persistence::Flags v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741040);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A77D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *IMAP2Persistence::Flags v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unsigned __int8 v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    unsigned __int8 v20 = (void *)(*(void *)(v4 + 48) + v16);
    void *v20 = v18;
    v20[1] = v19;
    uint64_t result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A891AEFC()
{
  IMAP2Persistence::Flags v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9745278);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A77D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *IMAP2Persistence::Flags v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A891B090()
{
  IMAP2Persistence::Flags v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A77D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *IMAP2Persistence::Flags v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A891B23C()
{
  IMAP2Persistence::Flags v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741018);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A77D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *IMAP2Persistence::Flags v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(_DWORD *)(v19 + 8) = v17;
    uint64_t result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A891B3F8()
{
  IMAP2Persistence::Flags v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9745278);
  uint64_t result = sub_1A8A77D58();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *IMAP2Persistence::Flags v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1A8A78738();
    sub_1A8A78768();
    uint64_t result = sub_1A8A787C8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    IMAP2Persistence::Flags v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A891B674()
{
  IMAP2Persistence::Flags v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451D8);
  uint64_t v3 = sub_1A8A77D58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *IMAP2Persistence::Flags v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_1A8A78738();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    SectionSpecifier.Part.hash(into:)((uint64_t)v27, v19);
    uint64_t result = sub_1A8A787C8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    IMAP2Persistence::Flags v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A891B904()
{
  IMAP2Persistence::Flags v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741018);
  uint64_t result = sub_1A8A77D58();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *IMAP2Persistence::Flags v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    int v20 = *(_DWORD *)(v18 + 8);
    sub_1A8A78738();
    sub_1A8A78768();
    uint64_t result = sub_1A8A787C8();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(_DWORD *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
    uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    IMAP2Persistence::Flags v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A891BBB0()
{
  IMAP2Persistence::Flags v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9745278);
  uint64_t result = sub_1A8A77D58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                IMAP2Persistence::Flags v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_1A8A78738();
      sub_1A8A78768();
      uint64_t result = sub_1A8A787C8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *IMAP2Persistence::Flags v1 = v4;
  return result;
}

uint64_t sub_1A891BE5C()
{
  IMAP2Persistence::Flags v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451D8);
  uint64_t v3 = sub_1A8A77D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                IMAP2Persistence::Flags v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1A8A78738();
      SectionSpecifier.Part.hash(into:)((uint64_t)v28, v19);
      uint64_t result = sub_1A8A787C8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *IMAP2Persistence::Flags v1 = v4;
  return result;
}

uint64_t sub_1A891C118()
{
  IMAP2Persistence::Flags v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741018);
  uint64_t result = sub_1A8A77D58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                IMAP2Persistence::Flags v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      uint64_t v19 = *(void *)v18;
      int v20 = *(_DWORD *)(v18 + 8);
      sub_1A8A78738();
      sub_1A8A78768();
      uint64_t result = sub_1A8A787C8();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(_DWORD *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *IMAP2Persistence::Flags v1 = v4;
  return result;
}

char *sub_1A891C3F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741190);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A891C4F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A28);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1A891C5FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E500);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E508);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A891C720(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745970);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A891C838(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EC8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A891C924(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v6 = sub_1A8A787C8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1A891CDC8(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A891CA44(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  SectionSpecifier.Part.hash(into:)((uint64_t)v17, a2);
  uint64_t v6 = sub_1A8A787C8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v10 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v9, a2);
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return 0;
    }
    uint64_t v11 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      uint64_t v12 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char v13 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v12, a2);
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  uint64_t v16 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A891CF18(v16, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v17[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1A891CBD8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v7 = *v3;
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t v8 = sub_1A8A787C8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = *(void *)(v7 + 48) + 16 * v10;
      if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v13 = *(void *)v12;
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14 == *(void *)(a2 + 16))
        {
          if (v14) {
            BOOL v15 = v13 == a2;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v14 == 1) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v14 == 2) {
                goto LABEL_20;
              }
              if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v16 = (unsigned __int8 *)(v13 + 35);
    uint64_t v17 = v14 - 3;
    uint64_t v18 = (unsigned __int8 *)(a2 + 35);
    while (v17)
    {
      int v20 = *v16++;
      int v19 = v20;
      int v21 = *v18++;
      --v17;
      if (v19 != v21) {
        goto LABEL_3;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(*v3 + 48) + 16 * v10;
    uint64_t v26 = *(void *)v25;
    LODWORD(v25) = *(_DWORD *)(v25 + 8);
    *(void *)a1 = v26;
    *(_DWORD *)(a1 + 8) = v25;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return 0;
  }
  else
  {
LABEL_19:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    uint64_t v23 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A891D0A4(v23, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v27;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(_DWORD *)(a1 + 8) = a3;
    return 1;
  }
}

uint64_t sub_1A891CDC8(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1A891BBB0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A891AEFC();
      goto LABEL_14;
    }
    sub_1A891B3F8();
  }
  uint64_t v8 = *v3;
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t result = sub_1A8A787C8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1A8A78698();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1A891CF18(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1A891BE5C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A891B090();
      goto LABEL_14;
    }
    sub_1A891B674();
  }
  uint64_t v8 = *v3;
  sub_1A8A78738();
  SectionSpecifier.Part.hash(into:)((uint64_t)v19, v5);
  uint64_t result = sub_1A8A787C8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v11 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v10, v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_13:
      uint64_t result = sub_1A8A78698();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        char v14 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v13, v5);
        uint64_t result = swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v15 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v15 + 48) + 8 * a2) = v5;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v15 + 16) = v18;
  }
  return result;
}

uint64_t sub_1A891D0A4(uint64_t result, unsigned int a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_26;
  }
  if (a4)
  {
    sub_1A891C118();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_1A891B23C();
      goto LABEL_26;
    }
    sub_1A891B904();
  }
  uint64_t v10 = *v4;
  sub_1A8A78738();
  sub_1A8A78768();
  uint64_t result = sub_1A8A787C8();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    while (1)
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if ((*(unsigned int *)(v13 + 8) | ((unint64_t)*(unsigned int *)(v13 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        uint64_t v14 = *(void *)v13;
        uint64_t v15 = *(void *)(v14 + 16);
        if (v15 == *(void *)(v7 + 16))
        {
          if (v15) {
            BOOL v16 = v14 == v7;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16) {
            goto LABEL_29;
          }
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(v7 + 32))
          {
            if (v15 == 1) {
              goto LABEL_29;
            }
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(v7 + 33))
            {
              if (v15 == 2) {
                goto LABEL_29;
              }
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(v7 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_10:
      a3 = (a3 + 1) & v12;
      if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_26;
      }
    }
    BOOL v17 = (unsigned __int8 *)(v14 + 35);
    uint64_t v18 = v15 - 3;
    int v19 = (unsigned __int8 *)(v7 + 35);
    while (v18)
    {
      int v21 = *v17++;
      int v20 = v21;
      int v22 = *v19++;
      --v18;
      if (v20 != v22) {
        goto LABEL_10;
      }
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v24 = *(void *)(v23 + 48) + 16 * a3;
  *(void *)uint64_t v24 = v7;
  *(_DWORD *)(v24 + 8) = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_29:
  uint64_t result = sub_1A8A78698();
  __break(1u);
  return result;
}

uint64_t sub_1A891D29C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A8A784B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1A88840F8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v101 = result;
  char v98 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v104 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_117:
      uint64_t result = v10;
      uint64_t v100 = v7;
      if (v11 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v91) {
            goto LABEL_159;
          }
          uint64_t v93 = result;
          uint64_t v94 = *(void *)(result + 32 + 16 * v92);
          uint64_t v95 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_1A891D944((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1A8947358(v93);
            uint64_t v93 = result;
          }
          if (v92 >= *(void *)(v93 + 16)) {
            goto LABEL_148;
          }
          uint64_t v96 = (void *)(v93 + 32 + 16 * v92);
          *uint64_t v96 = v94;
          v96[1] = v95;
          unint64_t v97 = *(void *)(v93 + 16);
          if (v11 > v97) {
            goto LABEL_149;
          }
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          uint64_t result = v93;
          *(void *)(v93 + 16) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v100 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_1A8A76D48();
    *(void *)(result + 16) = v6;
    uint64_t v100 = result;
    uint64_t v104 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = v9 + 8;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v102 = v3;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    uint64_t v13 = (uint64_t *)(v9 + 16 * v8);
    uint64_t result = *v13;
    uint64_t v14 = v13[1];
    uint64_t v15 = (void *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_1A8A78588();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    int v19 = (void *)(v99 + 16 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      int v21 = (void *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_1A8A78588();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      v19 += 2;
      uint64_t v20 = v18 + 1;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_36:
    uint64_t v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 16 * v18;
        uint64_t v24 = 16 * v12;
        uint64_t v25 = v18;
        uint64_t v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v23;
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = *(void *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(void *)(v27 - 16) = v28;
            *(void *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      uint64_t v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v101) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A894725C(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v38 = *(void *)(v10 + 16);
    unint64_t v37 = *(void *)(v10 + 24);
    unint64_t v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A894725C((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v39 = v10 + 32;
    uint64_t v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    *uint64_t v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      uint64_t v103 = v8;
      while (1)
      {
        unint64_t v41 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v46 = v39 + 16 * v11;
          uint64_t v47 = *(void *)(v46 - 64);
          uint64_t v48 = *(void *)(v46 - 56);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_134;
          }
          uint64_t v51 = *(void *)(v46 - 48);
          uint64_t v50 = *(void *)(v46 - 40);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_135;
          }
          unint64_t v53 = v11 - 2;
          uint64_t v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          uint64_t v56 = *v54;
          uint64_t v55 = v54[1];
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_136;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_138;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = (uint64_t *)(v39 + 16 * v41);
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_144;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v70 = *(void *)(v10 + 32);
            uint64_t v71 = *(void *)(v10 + 40);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_98;
          }
          uint64_t v43 = *(void *)(v10 + 32);
          uint64_t v42 = *(void *)(v10 + 40);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_137;
        }
        unint64_t v53 = v11 - 2;
        uint64_t v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_139;
        }
        int v65 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_141;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_143;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_104:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v64) {
          goto LABEL_140;
        }
        uint64_t v72 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_142;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v81 = v9;
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v82 = v10;
        size_t v83 = (uint64_t *)(v39 + 16 * v80);
        uint64_t v84 = *v83;
        uint64_t v85 = v39;
        unint64_t v86 = v41;
        uint64_t v87 = (void *)(v39 + 16 * v41);
        uint64_t v88 = v87[1];
        uint64_t v89 = v81;
        uint64_t result = sub_1A891D944((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1) {
          goto LABEL_114;
        }
        if (v88 < v84) {
          goto LABEL_131;
        }
        if (v86 > *(void *)(v82 + 16)) {
          goto LABEL_132;
        }
        *size_t v83 = v84;
        *(void *)(v85 + 16 * v80 + 8) = v88;
        unint64_t v90 = *(void *)(v82 + 16);
        if (v86 >= v90) {
          goto LABEL_133;
        }
        uint64_t v10 = v82;
        unint64_t v11 = v90 - 1;
        uint64_t result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        uint64_t v39 = v85;
        *(void *)(v82 + 16) = v90 - 1;
        uint64_t v9 = v89;
        uint64_t v8 = v103;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v102;
    if (v8 >= v102)
    {
      uint64_t v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101)) {
    goto LABEL_153;
  }
  if (v12 + v101 >= v3) {
    uint64_t v30 = v3;
  }
  else {
    uint64_t v30 = v12 + v101;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      uint64_t v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        unint64_t v32 = (uint64_t *)(v9 + 16 * v8);
        uint64_t result = *v32;
        uint64_t v33 = v32[1];
        uint64_t v34 = v12;
        uint64_t v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1)) {
            break;
          }
          uint64_t result = sub_1A8A78588();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t result = *v35;
          uint64_t v33 = v35[1];
          *(_OWORD *)uint64_t v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      uint64_t v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_1A891D944(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    int v17 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v18 = v17 + 16;
      int v19 = v6 - 16;
      BOOL v20 = *((void *)v14 - 2) == *((void *)v6 - 2) && *((void *)v14 - 1) == *((void *)v6 - 1);
      if (v20 || (sub_1A8A78588() & 1) == 0)
      {
        int v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)int v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        BOOL v21 = v17 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (v15 || (sub_1A8A78588() & 1) == 0) {
        break;
      }
      BOOL v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    BOOL v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1;
}

char *sub_1A891DB74(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891DCA4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DB94(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891DEA4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DBB4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891DFC0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1A891DBD4(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891E0C4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DBF4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891E204(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DC14(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891E320(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DC34(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891E424(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DC54(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891E638(a1, a2, a3, *v3, &qword_1E974E4F0);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DC84(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A891E520(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1A891DCA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741190);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A891DDA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745D60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

char *sub_1A891DEA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745980);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A891DFC0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A28);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1A891E0C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A30);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[7 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97419C0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A891E204(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745988);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A891E320(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745978);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A891E424(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E48);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_1A891E520(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745938);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1A891E624(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A891E638(a1, a2, a3, a4, &qword_1E974E4F8);
}

char *sub_1A891E638(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size_0(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v11 + 32;
  BOOL v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

uint64_t sub_1A891E740(unint64_t a1, char a2, unint64_t a3, unsigned __int8 a4)
{
  uint64_t result = 0;
  if (((a1 ^ a3) & 1) == 0
    && ((a1 >> 8) & 1) == ((a3 >> 8) & 1)
    && ((a1 >> 16) & 1) == ((a3 >> 16) & 1)
    && ((a1 >> 24) & 1) == ((a3 >> 24) & 1))
  {
    if ((a1 & 0xFF00000000) == 0x200000000)
    {
      if (BYTE4(a3) != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (BYTE4(a3) == 2 || ((a1 & 0x100000000) == 0) == (BYTE4(a3) & 1)) {
        return result;
      }
    }
    if ((a1 & 0xFF0000000000) == 0x20000000000)
    {
      if (BYTE5(a3) != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (BYTE5(a3) == 2 || ((a1 & 0x10000000000) == 0) == ((a3 >> 40) & 1)) {
        return result;
      }
    }
    uint64_t v6 = a3 & 0xFF000000000000;
    if ((a1 & 0xFF000000000000) == 0x3000000000000)
    {
      if (v6 != 0x3000000000000) {
        return 0;
      }
    }
    else if (v6 == 0x3000000000000 || ((a3 ^ a1) & 0xFF000000000000) != 0)
    {
      return 0;
    }
    unint64_t v7 = HIBYTE(a1);
    unint64_t v8 = HIBYTE(a3);
    if (v7 == 8)
    {
      if (v8 != 8) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v8 == 8 || v7 != v8) {
        return result;
      }
    }
    if (a2 == 2)
    {
      if (a4 != 2) {
        return 0;
      }
    }
    else if (a4 == 2 || ((((a2 & 1) == 0) ^ a4) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_1A891E8A8(unint64_t a1, int a2, unint64_t a3, int a4)
{
  int v4 = (((a3 ^ a1) & 0xFF000000000000) == 0) & ~(a1 ^ a3 | (a1 >> 8) & 1 ^ (a3 >> 8) & 1 | (a1 >> 16) & 1 ^ (a3 >> 16) & 1 | (a1 >> 24) & 1 ^ (a3 >> 24) & 1 | BYTE4(a1) & 1 ^ BYTE4(a3) & 1 | (a1 >> 40) & 1 ^ (a3 >> 40) & 1);
  if ((a3 ^ a1) >> 56) {
    int v4 = 0;
  }
  return v4 & (a2 ^ a4 ^ 1u);
}

uint64_t sub_1A891E928(unint64_t a1, uint64_t a2, unsigned int a3, unint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t result = 0;
  *(void *)&long long v10 = a2;
  BYTE8(v10) = a3;
  uint64_t v8 = *(void *)((char *)&v10 + 1);
  *(void *)int64_t v11 = a5;
  unsigned char v11[8] = a6;
  if (((a1 ^ a4) & 1) == 0
    && ((a1 >> 8) & 1) == ((a4 >> 8) & 1)
    && ((a1 >> 16) & 1) == ((a4 >> 16) & 1)
    && ((a1 >> 24) & 1) == ((a4 >> 24) & 1)
    && (BYTE4(a1) & 1) == (BYTE4(a4) & 1)
    && ((a1 >> 40) & 1) == ((a4 >> 40) & 1))
  {
    unint64_t v9 = a4 ^ a1;
    if ((v9 & 0xFF000000000000) == 0 && !HIBYTE(v9) && ((a2 ^ a5) & 1) == 0)
    {
      if (v8 == 2)
      {
        if (BYTE1(a5) != 2) {
          return 0;
        }
      }
      else if (BYTE1(a5) == 2 {
             || (sub_1A891E8A8(v8 & 0xFFFF010101010101, (a3 >> 8) & 1, *(void *)&v11[1] & 0xFFFF010101010101, (a6 >> 8) & 1) & 1) == 0)
      }
      {
        return 0;
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_1A891EA28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A891F45C();
  uint64_t result = sub_1A8A76F88();
  uint64_t v7 = result;
  if (v2)
  {
    int v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1A891C924(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1A891EAA0()
{
  unint64_t result = qword_1E974E4B0;
  if (!qword_1E974E4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E4B0);
  }
  return result;
}

unint64_t sub_1A891EAF8()
{
  unint64_t result = qword_1E974E4B8;
  if (!qword_1E974E4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E4B8);
  }
  return result;
}

unint64_t sub_1A891EB50()
{
  unint64_t result = qword_1E974E4C0;
  if (!qword_1E974E4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E4C0);
  }
  return result;
}

unint64_t sub_1A891EBA8()
{
  unint64_t result = qword_1E974E4C8;
  if (!qword_1E974E4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E4C8);
  }
  return result;
}

unint64_t sub_1A891EC00()
{
  unint64_t result = qword_1E974E4D0;
  if (!qword_1E974E4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E4D0);
  }
  return result;
}

unint64_t sub_1A891EC58()
{
  unint64_t result = qword_1E974E4D8;
  if (!qword_1E974E4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E4D8);
  }
  return result;
}

unint64_t sub_1A891ECB0()
{
  unint64_t result = qword_1E9743250;
  if (!qword_1E9743250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743250);
  }
  return result;
}

uint64_t sub_1A891ED04()
{
  return sub_1A851154C(&qword_1E974E4E0, &qword_1E974E4E8);
}

uint64_t __swift_memcpy9_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Flags()
{
  return &type metadata for Flags;
}

unsigned char *storeEnumTagSinglePayload for Flags.JunkStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A891EE38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Flags.JunkStatus()
{
  return &type metadata for Flags.JunkStatus;
}

unsigned char *storeEnumTagSinglePayload for Flags.Label(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A891EF3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Flags.Label()
{
  return &type metadata for Flags.Label;
}

__n128 __swift_memcpy18_1(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FlagsWithModifications(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[18]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FlagsWithModifications(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagsWithModifications()
{
  return &type metadata for FlagsWithModifications;
}

uint64_t _s16IMAP2Persistence5FlagsVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[9]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s16IMAP2Persistence5FlagsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagsUpdate()
{
  return &type metadata for FlagsUpdate;
}

uint64_t getEnumTagSinglePayload for FlagsUpdate.Label(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8)
  {
    unsigned int v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 8;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A891F184);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 8;
  unsigned int v9 = v7 - 8;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for FlagsUpdate.Label(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF8) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v7 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1A891F26CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_1A891F294(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 8) {
    return v1 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1A891F2A8(unsigned char *result, int a2)
{
  if (a2) {
    *__n128 result = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagsUpdate.Label()
{
  return &type metadata for FlagsUpdate.Label;
}

uint64_t getEnumTagSinglePayload for FlagKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FlagKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A891F424);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagKind()
{
  return &type metadata for FlagKind;
}

unint64_t sub_1A891F45C()
{
  unint64_t result = qword_1E9743248;
  if (!qword_1E9743248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743248);
  }
  return result;
}

uint64_t static MessageHeader.== infix(_:_:)()
{
  uint64_t v0 = sub_1A8A75D38();
  uint64_t v1 = sub_1A8A75D38();
  if (*(void *)(v0 + 16) == *(void *)(v1 + 16)) {
    char v2 = sub_1A891F754(v0, v1);
  }
  else {
    char v2 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t MessageHeader.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A8A75E28();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MessageHeader.data.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A8A75E28();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

double (*MessageHeader.data.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageHeader.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A8A75E28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_1A891F6C4()
{
  uint64_t v0 = sub_1A8A75D38();
  uint64_t v1 = sub_1A8A75D38();
  if (*(void *)(v0 + 16) == *(void *)(v1 + 16)) {
    char v2 = sub_1A891F754(v0, v1);
  }
  else {
    char v2 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A891F754(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E510);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned int v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E518);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v55 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v58 = (char *)&v51 - v13;
  uint64_t v14 = sub_1A8A75D28();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  char v64 = (char *)&v51 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E520);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v57 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v15 + 16;
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v59 = *(void *)(a1 + 16);
  uint64_t v60 = v15;
  uint64_t v65 = v15 + 48;
  uint64_t v63 = (uint64_t (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  unint64_t v53 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v61 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v68 = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v21 = 0;
  BOOL v52 = v9;
  while (1)
  {
    if (v59 == v21)
    {
      uint64_t v48 = v58;
      (*v67)(v58, 1, 1, v14);
      uint64_t v49 = (uint64_t)v48;
LABEL_18:
      uint64_t v50 = v57;
      sub_1A8511B00(v49, &qword_1E974E518);
      BOOL v40 = 1;
      (*v56)(v50, 1, 1, v6);
      goto LABEL_19;
    }
    uint64_t v22 = v6;
    uint64_t v62 = v3;
    uint64_t v23 = v60;
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v25 = *(void *)(v60 + 72) * v21;
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
    uint64_t v27 = v58;
    v26(v58, v61 + v24 + v25, v14);
    uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
    v28(v27, 0, 1, v14);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (v29(v27, 1, v14) == 1)
    {
      uint64_t v49 = (uint64_t)v27;
LABEL_17:
      uint64_t v6 = v22;
      goto LABEL_18;
    }
    uint64_t v30 = v27;
    uint64_t v31 = *v63;
    uint64_t result = (*v63)(v64, v30, v14);
    unint64_t v33 = *(void *)(v68 + 16);
    if (v21 == v33)
    {
      uint64_t v35 = v55;
      v28(v55, 1, 1, v14);
LABEL_16:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v64, v14);
      uint64_t v49 = (uint64_t)v35;
      goto LABEL_17;
    }
    if (v21++ >= v33) {
      break;
    }
    unint64_t v34 = v68 + v24 + v25;
    uint64_t v35 = v55;
    v26(v55, v34, v14);
    v28(v35, 0, 1, v14);
    if (v29(v35, 1, v14) == 1) {
      goto LABEL_16;
    }
    uint64_t v36 = v54;
    v31(v54, v35, v14);
    uint64_t v6 = v22;
    uint64_t v37 = (uint64_t)v57;
    unint64_t v38 = &v57[*(int *)(v22 + 48)];
    v31(v57, v64, v14);
    v31(v38, v36, v14);
    (*v56)((char *)v37, 0, 1, v22);
    int v39 = (*v53)(v37, 1, v22);
    BOOL v40 = v39 == 1;
    if (v39 == 1) {
      goto LABEL_19;
    }
    uint64_t v41 = (uint64_t)v52;
    sub_1A891FEE0(v37, (uint64_t)v52);
    uint64_t v42 = v41 + *(int *)(v6 + 48);
    uint64_t v43 = sub_1A8A75CF8();
    if (v43 != sub_1A8A75CF8() || (uint64_t v44 = sub_1A8A75D18(), v45 = sub_1A8A75D18(), v44 != v45))
    {
      sub_1A8511B00(v41, &qword_1E974E510);
      BOOL v40 = 0;
LABEL_19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v40;
    }
    MEMORY[0x1F4188790](v45);
    *(&v51 - 2) = v42;
    uint64_t v46 = v62;
    sub_1A8A75D08();
    uint64_t v3 = v46;
    char v47 = v69;
    sub_1A8511B00(v41, &qword_1E974E510);
    if ((v47 & 1) == 0) {
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for MessageHeader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A891FDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MessageHeader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A891FE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MessageHeader()
{
  uint64_t result = qword_1E9742F88;
  if (!qword_1E9742F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A891FEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A891FF48()
{
  return sub_1A892C53C();
}

uint64_t sub_1A891FF64(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  unint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  BOOL v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v26 - v13;
  MEMORY[0x1F4188790](v15);
  unint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1A8A771B8();
  if (!v20) {
    return sub_1A8A76D18();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v14;
  uint64_t v43 = sub_1A8A77F98();
  uint64_t v35 = sub_1A8A77FA8();
  sub_1A8A77EF8();
  uint64_t v41 = v19;
  uint64_t result = sub_1A8A77198();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    unint64_t v24 = v27;
    while (1)
    {
      unint64_t v25 = (void (*)(char *, void))sub_1A8A77328();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1A8A77F68();
      sub_1A8A771F8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t sub_1A8920EBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A8920ECC()
{
  return swift_deallocObject();
}

uint64_t sub_1A8920EDC()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1A8920EE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A8920EF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A8920F04()
{
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t sub_1A8920F0C()
{
  return swift_deallocObject();
}

int8x16_t sub_1A8920F1C@<Q0>(int8x16_t *a1@<X8>)
{
  int v2 = *(unsigned __int8 *)(v1 + 20);
  int32x2_t v3 = vdup_n_s32((v2 & 1) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  int8x16_t v5 = (int8x16_t)vdupq_n_s64(3uLL);
  v6.i64[1] = v5.i64[1];
  v6.i64[0] = (uint64_t)"YES";
  int8x16_t v7 = (int8x16_t)vdupq_n_s64(2uLL);
  v7.i64[0] = (uint64_t)"NO";
  int8x16_t v8 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v7, v6);
  *(int32x2_t *)v6.i8 = vdup_n_s32(v2 == 2);
  v4.i64[0] = v6.u32[0];
  v4.i64[1] = v6.u32[1];
  v5.i64[0] = (uint64_t)"nil";
  int8x16_t result = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v5, v8);
  *a1 = result;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_1A8921014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1A8A75438();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A8A75318();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  sub_1A8A752E8();
  sub_1A8A75428();
  swift_retain();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 24) = v14;
  sub_1A8A753A8();
  swift_release();
  sub_1A8924B2C((uint64_t)v10, MEMORY[0x1E4FBD348]);
  sub_1A8924B2C((uint64_t)v13, MEMORY[0x1E4FBD310]);
  return swift_release();
}

uint64_t sub_1A8921D54@<X0>(uint64_t (*a1)(void)@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t result = a1();
  int64x2_t v4 = vdupq_n_s64(3uLL);
  v4.i64[0] = (uint64_t)"set";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(3uLL);
      int8x16_t v5 = "red";
      goto LABEL_10;
    case 2:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "orange";
      goto LABEL_10;
    case 3:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "yellow";
      goto LABEL_10;
    case 4:
      int64x2_t v4 = vdupq_n_s64(5uLL);
      int8x16_t v5 = "green";
      goto LABEL_10;
    case 5:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "blue";
      goto LABEL_10;
    case 6:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "purple";
      goto LABEL_10;
    case 7:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "gray";
      goto LABEL_10;
    case 8:
      goto LABEL_11;
    default:
      int64x2_t v4 = vdupq_n_s64(5uLL);
      int8x16_t v5 = "clear";
LABEL_10:
      v4.i64[0] = (uint64_t)v5;
LABEL_11:
      *a2 = v4;
      a2[1].i8[0] = 2;
      return result;
  }
}

uint64_t sub_1A89220AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75438();
  MEMORY[0x1F4188790](v4 - 8);
  int8x16_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A75318();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1A8A752E8();
  sub_1A84AB488();
  sub_1A8A753A8();
  sub_1A8924B2C((uint64_t)v6, MEMORY[0x1E4FBD348]);
  sub_1A8924B2C((uint64_t)v9, MEMORY[0x1E4FBD310]);
  return swift_release();
}

uint64_t sub_1A89223E0(uint64_t (*a1)(void))
{
  uint64_t v11 = a1();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A892409C((char **)&v11);
  swift_bridgeObjectRelease();
  int64_t v1 = *(void *)(v11 + 16);
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1A891DB74(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = v13;
    do
    {
      uint64_t v11 = 35;
      unint64_t v12 = 0xE100000000000000;
      sub_1A8A784D8();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      uint64_t v4 = v11;
      unint64_t v5 = v12;
      uint64_t v13 = v3;
      unint64_t v7 = *(void *)(v3 + 16);
      unint64_t v6 = *(void *)(v3 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1A891DB74((char *)(v6 > 1), v7 + 1, 1);
        uint64_t v3 = v13;
      }
      ++v2;
      *(void *)(v3 + 16) = v7 + 1;
      unint64_t v8 = v3 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v5;
    }
    while (v1 != v2);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = v3;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9744580);
  sub_1A8924B8C();
  uint64_t v9 = sub_1A8A76348();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A89225B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v23[1] = a4;
  uint64_t v6 = sub_1A8A75318();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A8A75438();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8A76728();
  sub_1A8A75408();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v29 = sub_1A87DD16C();
  int v30 = v13;
  uint64_t v31 = v14;
  uint64_t v32 = v15;
  uint64_t v16 = v29;
  char v17 = v13 & 1;
  char v18 = BYTE1(v13) & 1;
  char v19 = BYTE2(v13) & 1;
  uint64_t v20 = v14;
  uint64_t v21 = v15;
  sub_1A84AB488();
  sub_1A87DEB6C();
  _OWORD v23[2] = v16;
  char v24 = v17;
  char v25 = v18;
  char v26 = v19;
  uint64_t v27 = v20;
  uint64_t v28 = v21;
  sub_1A8A753D8();
  sub_1A8924B2C((uint64_t)v8, MEMORY[0x1E4FBD310]);
  sub_1A8924B2C((uint64_t)v11, MEMORY[0x1E4FBD348]);
  sub_1A85489D0(v20);
  return swift_release();
}

uint64_t OSLogInterpolation.appendInterpolation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1A8A75438();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A8A75318();
  MEMORY[0x1F4188790](v11 - 8);
  int v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  void v14[3] = a4;
  v14[4] = a1;
  v14[5] = a2;
  sub_1A8A752E8();
  sub_1A84AB488();
  sub_1A8A753A8();
  sub_1A8924B2C((uint64_t)v10, MEMORY[0x1E4FBD348]);
  sub_1A8924B2C((uint64_t)v13, MEMORY[0x1E4FBD310]);
  return swift_release();
}

uint64_t sub_1A8922930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v29 - v13;
  double v16 = MEMORY[0x1F4188790](v15);
  char v18 = (char *)v29 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, a1, a3, v16);
  sub_1A8A77298();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (sub_1A8A771B8() < 6)
  {
    uint64_t v23 = sub_1A891FF64((void (*)(char *, char *))sub_1A8922CF4, 0, AssociatedTypeWitness, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], AssociatedConformanceWitness, MEMORY[0x1E4FBC278], v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v18, AssociatedTypeWitness);
    sub_1A8A77298();
    uint64_t v22 = sub_1A891FF64((void (*)(char *, char *))sub_1A8922CF4, 0, AssociatedTypeWitness, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], AssociatedConformanceWitness, MEMORY[0x1E4FBC278], v21);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, AssociatedTypeWitness);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v23 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v23 = sub_1A891C3F0(0, *(void *)(v22 + 16) + 1, 1, v22);
    }
    unint64_t v25 = *(void *)(v23 + 16);
    unint64_t v24 = *(void *)(v23 + 24);
    if (v25 >= v24 >> 1) {
      uint64_t v23 = sub_1A891C3F0(v24 > 1, v25 + 1, 1, v23);
    }
    *(void *)(v23 + 16) = v25 + 1;
    uint64_t v26 = v23 + 16 * v25;
    *(void *)(v26 + 32) = 10911970;
    *(void *)(v26 + 40) = 0xA300000000000000;
    swift_bridgeObjectRelease();
  }
  v29[0] = v23;
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9744580);
  sub_1A8924B8C();
  uint64_t v27 = sub_1A8A76348();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, AssociatedTypeWitness);
  return v27;
}

uint64_t sub_1A8922CF4@<X0>(void *a1@<X8>)
{
  return sub_1A8922D0C(a1);
}

uint64_t sub_1A8922D0C@<X0>(void *a1@<X8>)
{
  sub_1A8A784D8();
  sub_1A8A767E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 35;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_1A8922D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v5);
  uint64_t v9 = sub_1A8922930((uint64_t)v7, a3, a3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v9;
}

uint64_t sub_1A8922EDC(void (*a1)(double))
{
  uint64_t v2 = type metadata accessor for Activity.MailboxStatus(0);
  double v3 = MEMORY[0x1F4188790](v2 - 8);
  double v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v3);
  uint64_t v6 = Activity.MailboxStatus.debugDescription.getter();
  sub_1A8924B2C((uint64_t)v5, type metadata accessor for Activity.MailboxStatus);
  return v6;
}

uint64_t sub_1A89231A8()
{
  return 8;
}

uint64_t sub_1A8923E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75318();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A75438();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1A84AB488();
  sub_1A87DEB6C();
  sub_1A8A753A8();
  sub_1A8924B2C((uint64_t)v6, MEMORY[0x1E4FBD310]);
  sub_1A8924B2C((uint64_t)v9, MEMORY[0x1E4FBD348]);
  return swift_release();
}

uint64_t sub_1A8923FA0(void (*a1)(void))
{
  a1();
  if (v1) {
    return 45;
  }
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741D08);
  sub_1A8A78028();
  return 0;
}

uint64_t sub_1A892409C(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A8947380((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1A8924BE8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A8924108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v5);
  uint64_t v9 = sub_1A8A784D8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v9;
}

uint64_t sub_1A89241F4()
{
  return sub_1A8924108(*(void *)(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBBA00]);
}

uint64_t sub_1A892420C()
{
  return swift_deallocObject();
}

int8x16_t sub_1A892421C@<Q0>(int8x16_t *a1@<X8>)
{
  int v2 = *(unsigned __int8 *)(v1 + 21);
  int32x2_t v3 = vdup_n_s32((v2 & 1) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  int8x16_t v5 = (int8x16_t)vdupq_n_s64(3uLL);
  v6.i64[1] = v5.i64[1];
  v6.i64[0] = (uint64_t)"YES";
  int8x16_t v7 = (int8x16_t)vdupq_n_s64(2uLL);
  v7.i64[0] = (uint64_t)"NO";
  int8x16_t v8 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v7, v6);
  *(int32x2_t *)v6.i8 = vdup_n_s32(v2 == 2);
  v4.i64[0] = v6.u32[0];
  v4.i64[1] = v6.u32[1];
  v5.i64[0] = (uint64_t)"nil";
  int8x16_t result = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v5, v8);
  *a1 = result;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_1A892429C()
{
  return swift_deallocObject();
}

uint64_t sub_1A89242AC()
{
  return *(unsigned __int8 *)(v0 + 22);
}

uint64_t sub_1A89242B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A89242C8()
{
  return *(unsigned __int8 *)(v0 + 23);
}

uint64_t sub_1A89242D0@<X0>(int64x2_t *a1@<X8>)
{
  return sub_1A8921D54(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A89242D8@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  int64x2_t v4 = vdupq_n_s64(3uLL);
  v4.i64[0] = (uint64_t)"nil";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "junk";
      goto LABEL_5;
    case 2:
      int64x2_t v4 = vdupq_n_s64(7uLL);
      int8x16_t v5 = "notJunk";
      goto LABEL_5;
    case 3:
      goto LABEL_6;
    default:
      int64x2_t v4 = vdupq_n_s64(7uLL);
      int8x16_t v5 = "unknown";
LABEL_5:
      v4.i64[0] = (uint64_t)v5;
LABEL_6:
      *a1 = v4;
      a1[1].i8[0] = 2;
      return result;
  }
}

uint64_t sub_1A8924394()
{
  return swift_deallocObject();
}

uint64_t sub_1A89243A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A89243B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A89243C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A89243D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A89243E4()
{
  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t sub_1A89243EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A89243FC()
{
  return *(unsigned __int8 *)(v0 + 21);
}

uint64_t sub_1A8924404()
{
  return swift_deallocObject();
}

uint64_t sub_1A8924418()
{
  return swift_deallocObject();
}

double sub_1A892442C@<D0>(int64x2_t *a1@<X8>)
{
  int v3 = (*(unsigned __int8 (**)(void))(v1 + 16))();
  if (v3)
  {
    if (v3 == 1)
    {
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "junk";
    }
    else
    {
      int64x2_t v4 = vdupq_n_s64(7uLL);
      int8x16_t v5 = "notJunk";
    }
  }
  else
  {
    int64x2_t v4 = vdupq_n_s64(7uLL);
    int8x16_t v5 = "unknown";
  }
  v4.i64[0] = (uint64_t)v5;
  *a1 = v4;
  a1[1].i8[0] = 2;
  return *(double *)v4.i64;
}

uint64_t sub_1A89244B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A89244E8@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  int64x2_t v4 = vdupq_n_s64(5uLL);
  v4.i64[0] = (uint64_t)"clear";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(3uLL);
      int8x16_t v5 = "red";
      goto LABEL_9;
    case 2:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "orange";
      goto LABEL_9;
    case 3:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "yellow";
      goto LABEL_9;
    case 4:
      int64x2_t v4 = vdupq_n_s64(5uLL);
      int8x16_t v5 = "green";
      goto LABEL_9;
    case 5:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "blue";
      goto LABEL_9;
    case 6:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "purple";
      goto LABEL_9;
    case 7:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "gray";
LABEL_9:
      v4.i64[0] = (uint64_t)v5;
      break;
    default:
      break;
  }
  *a1 = v4;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_1A8924604()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1A892462C()
{
  char v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return Action.Kind.description.getter(v1);
}

uint64_t sub_1A8924664()
{
  if ((*(uint64_t (**)(void))(v0 + 16))()) {
    return 6581810;
  }
  else {
    return 7631665;
  }
}

uint64_t sub_1A89246A8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A89246D0()
{
  return sub_1A89223E0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A89246D8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A8924700()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A8924738()
{
  return sub_1A8922D8C(v0[4], v0[5], v0[2]);
}

uint64_t sub_1A8924744@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  int64x2_t v4 = vdupq_n_s64(8uLL);
  v4.i64[0] = (uint64_t)"periodic";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "push";
      goto LABEL_5;
    case 2:
      int64x2_t v4 = vdupq_n_s64(0xDuLL);
      int8x16_t v5 = "userInitiated";
      goto LABEL_5;
    case 3:
      int64x2_t v4 = vdupq_n_s64(8uLL);
      int8x16_t v5 = "backFill";
LABEL_5:
      v4.i64[0] = (uint64_t)v5;
      break;
    default:
      break;
  }
  *a1 = v4;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_1A8924800()
{
  return sub_1A8922EDC(*(void (**)(double))(v0 + 16));
}

uint64_t sub_1A8924808()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A8924830()
{
  return swift_deallocObject();
}

uint64_t sub_1A8924840()
{
  return swift_deallocObject();
}

uint64_t sub_1A8924850()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_1A8924858()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A8924890()
{
  return sub_1A8A76628();
}

uint64_t sub_1A89248D0()
{
  if (((*(uint64_t (**)(void))(v0 + 16))() & 0x100000000) != 0) {
    return 45;
  }
  else {
    return sub_1A8A76608();
  }
}

uint64_t sub_1A8924924()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A892494C()
{
  (*(void (**)(void))(v0 + 16))();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741D08);
  return MessageIdentifierRange.debugDescription.getter(v1);
}

uint64_t sub_1A8924994()
{
  return sub_1A8923FA0(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1A892499C()
{
  char v1 = (*(uint64_t (**)(void))(v0 + 16))();
  uint64_t result = 7105633;
  switch(v1)
  {
    case 1:
      uint64_t result = 0x65766968637261;
      break;
    case 2:
      uint64_t result = 0x737466617264;
      break;
    case 3:
      uint64_t result = 0x64656767616C66;
      break;
    case 4:
      uint64_t result = 1802401130;
      break;
    case 5:
      uint64_t result = 1953391987;
      break;
    case 6:
      uint64_t result = 0x6873617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8924A88()
{
  (*(void (**)(void))(v0 + 16))();
  return sub_1A8A76628();
}

uint64_t sub_1A8924ACC()
{
  return sub_1A8924AEC();
}

uint64_t sub_1A8924ADC()
{
  return sub_1A8924AEC();
}

uint64_t sub_1A8924AEC()
{
  (*(void (**)(void))(v0 + 16))();
  return sub_1A8A76628();
}

uint64_t sub_1A8924B2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A8924B8C()
{
  unint64_t result = qword_1E9740E40;
  if (!qword_1E9740E40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1E9744580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9740E40);
  }
  return result;
}

uint64_t sub_1A8924BE8(void *a1)
{
  int v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A8A784B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v79 = *(_DWORD *)(v77 + 4 * i);
        uint64_t v80 = v76;
        do
        {
          unsigned int v81 = *(_DWORD *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(_DWORD *)(v77 + v80 + 4) = v81;
          *(_DWORD *)(v77 + v80) = v79;
          v80 -= 4;
        }
        while (v80 != -4);
        v76 += 4;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v93 = result;
    uint64_t v94 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_1A8A76D48();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v94;
      uint64_t v92 = result;
      uint64_t v96 = (char *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      unint64_t v90 = v2;
      uint64_t v91 = *v2 - 4;
      uint64_t v10 = MEMORY[0x1E4FBC860];
      uint64_t v95 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          unsigned int v13 = *(_DWORD *)(v9 + 4 * v8);
          unsigned int v14 = *(_DWORD *)(v9 + 4 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            unsigned int v15 = v13;
            while (1)
            {
              unsigned int v16 = *(_DWORD *)(v9 + 4 * v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              unsigned int v15 = v16;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              uint64_t v17 = v8 - 1;
              uint64_t v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  int v19 = *(_DWORD *)(v9 + 4 * v18);
                  *(_DWORD *)(v9 + 4 * v18) = *(_DWORD *)(v9 + 4 * v17);
                  *(_DWORD *)(v9 + 4 * v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v93)
          {
            uint64_t v20 = v12 + v93;
            if (__OFADD__(v12, v93)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              uint64_t v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              uint64_t v21 = (unsigned int *)(v91 + 4 * v8);
              do
              {
                unsigned int v22 = *(_DWORD *)(v9 + 4 * v8);
                uint64_t v23 = v12;
                unint64_t v24 = v21;
                do
                {
                  unsigned int v25 = *v24;
                  if (v22 >= *v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *unint64_t v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              uint64_t v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1A894725C(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v27 = *(void *)(v10 + 16);
        unint64_t v26 = *(void *)(v10 + 24);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v95;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_1A894725C((char *)(v26 > 1), v27 + 1, 1, (char *)v10);
          uint64_t v9 = v95;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v28 = v10 + 32;
        uint64_t v29 = (uint64_t *)(v10 + 32 + 16 * v27);
        *uint64_t v29 = v12;
        v29[1] = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v35 = v28 + 16 * v11;
              uint64_t v36 = *(void *)(v35 - 64);
              uint64_t v37 = *(void *)(v35 - 56);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(void *)(v35 - 48);
              uint64_t v39 = *(void *)(v35 - 40);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              uint64_t v43 = (uint64_t *)(v28 + 16 * (v11 - 2));
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                uint64_t v65 = (uint64_t *)(v28 + 16 * v30);
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *(void *)(v10 + 32);
                uint64_t v60 = *(void *)(v10 + 40);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *(void *)(v10 + 32);
              uint64_t v31 = *(void *)(v10 + 40);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            uint64_t v48 = (uint64_t *)(v28 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            uint64_t v54 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            uint64_t v61 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = (uint64_t *)(v28 + 16 * v69);
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            uint64_t v73 = (void *)(v28 + 16 * v30);
            uint64_t v74 = v73[1];
            uint64_t result = sub_1A8925230((char *)(v9 + 4 * *v70), (char *)(v9 + 4 * *v73), v9 + 4 * v74, v96);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *(void *)(v10 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v70 = v71;
            *(void *)(v72 + 16 * v69 + 8) = v74;
            unint64_t v75 = *(void *)(v10 + 16);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            uint64_t v28 = v72;
            *(void *)(v10 + 16) = v75 - 1;
            uint64_t v9 = v95;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v94;
        if (v8 >= v94)
        {
          uint64_t v7 = v92;
          int v2 = v90;
          goto LABEL_103;
        }
      }
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v96 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v92 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_103:
    uint64_t v92 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)(v10 + 32 + 16 * v83);
        uint64_t v87 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_1A8925230((char *)(v82 + 4 * v86), (char *)(v82 + 4 * *(void *)(v85 + 16 * (v11 - 1))), v82 + 4 * v87, v96);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1A8947358(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        uint64_t v88 = (void *)(v84 + 32 + 16 * v83);
        *uint64_t v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v92 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A8925230(char *__dst, char *__src, unint64_t a3, char *a4)
{
  int64x2_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 3;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 3;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 2;
  if (v10 >= v12 >> 2)
  {
    if (a4 != __src || &__src[4 * v13] <= a4) {
      memmove(a4, __src, 4 * v13);
    }
    unsigned int v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 4) {
      goto LABEL_39;
    }
    uint64_t v17 = (char *)(a3 - 4);
    uint64_t v18 = v6;
    while (1)
    {
      int v19 = v17 + 4;
      unsigned int v21 = *((_DWORD *)v18 - 1);
      v18 -= 4;
      unsigned int v20 = v21;
      if (*((_DWORD *)v14 - 1) < v21) {
        break;
      }
      unsigned int v20 = *((_DWORD *)v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        v14 -= 4;
LABEL_35:
        *(_DWORD *)uint64_t v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 4;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 4;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4) {
    memmove(a4, __dst, 4 * v10);
  }
  unsigned int v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 4)
  {
    while (1)
    {
      int v15 = *(_DWORD *)v6;
      if (*(_DWORD *)v6 >= *(_DWORD *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 4;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 4;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    int v15 = *(_DWORD *)v4;
    BOOL v16 = v7 == v4;
    v4 += 4;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(_DWORD *)uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 3uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFFCLL]) {
    memmove(v6, v4, 4 * (v23 >> 2));
  }
  return 1;
}

uint64_t MailboxOfInterest.id.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxOfInterest.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

double (*MailboxOfInterest.id.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxOfInterest.name.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxOfInterest.name.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(_DWORD *)(v2 + 24) = a2;
  return result;
}

double (*MailboxOfInterest.name.modify())(void)
{
  return nullsub_1;
}

void MailboxOfInterest.metadata.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 36);
  uint64_t v3 = *(void *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  char v6 = *(unsigned char *)(v1 + 64);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 32);
  *(unsigned char *)(a1 + 4) = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
}

__n128 MailboxOfInterest.metadata.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  *(unsigned char *)(v1 + 64) = *(unsigned char *)(a1 + 32);
  return result;
}

double (*MailboxOfInterest.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A8925668(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence17MailboxOfInterestV17LocalModificationO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(_DWORD *)(a1 + 8), *(void *)a2, *(_DWORD *)(a2 + 8));
}

unint64_t MailboxOfInterest.localModification.getter()
{
  unint64_t v1 = *(void *)(v0 + 72);
  sub_1A85118C8(v1);
  return v1;
}

unint64_t MailboxOfInterest.localModification.setter(uint64_t a1, int a2)
{
  unint64_t result = sub_1A8511968(*(void *)(v2 + 72));
  *(void *)(v2 + 72) = a1;
  *(_DWORD *)(v2 + 80) = a2;
  return result;
}

double (*MailboxOfInterest.localModification.modify())(void)
{
  return nullsub_1;
}

unint64_t MailboxOfInterest.latestLocalChange.getter()
{
  return *(unsigned int *)(v0 + 84) | ((unint64_t)*(unsigned __int8 *)(v0 + 88) << 32);
}

uint64_t MailboxOfInterest.latestLocalChange.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 84) = result;
  *(unsigned char *)(v1 + 88) = BYTE4(result) & 1;
  return result;
}

double (*MailboxOfInterest.latestLocalChange.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxOfInterest.init(id:name:uidValidity:fetchedWindow:highestModificationSequenceValue:localModification:latestLocalChange:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, int a12, int a13, int a14, char a15)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(_DWORD *)(a9 + 24) = a4;
  *(_DWORD *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 36) = BYTE4(a5) & 1;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7 & 1;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  *(void *)(a9 + 72) = a11;
  *(_DWORD *)(a9 + 80) = a12;
  *(_DWORD *)(a9 + 84) = a14;
  *(unsigned char *)(a9 + 88) = a15 & 1;
  return result;
}

uint64_t sub_1A89257C4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  _OWORD v7[2] = a1[2];
  _OWORD v7[3] = v2;
  v8[0] = a1[4];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 73);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  int64_t v9[2] = a2[2];
  v9[3] = v4;
  v10[0] = a2[4];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 73);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return _s16IMAP2Persistence17MailboxOfInterestV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

unint64_t MailboxOfInterest.uidValidity.getter()
{
  return *(unsigned int *)(v0 + 32) | ((unint64_t)(*(unsigned char *)(v0 + 36) & 1) << 32);
}

uint64_t MailboxOfInterest.uidValidity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t *(*MailboxOfInterest.uidValidity.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 32);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + 36);
  return sub_1A8925898;
}

uint64_t *sub_1A8925898(uint64_t *result)
{
  uint64_t v1 = *result;
  char v2 = *((unsigned char *)result + 12);
  *(_DWORD *)(v1 + 32) = *((_DWORD *)result + 2);
  *(unsigned char *)(v1 + 36) = v2;
  return result;
}

uint64_t MailboxOfInterest.highestModificationSequenceValue.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t MailboxOfInterest.highestModificationSequenceValue.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*MailboxOfInterest.highestModificationSequenceValue.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  char v2 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
  return sub_1A8925904;
}

uint64_t sub_1A8925904(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 56) = *(void *)result;
  *(unsigned char *)(v1 + 64) = v2;
  return result;
}

uint64_t MailboxOfInterest.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t MailboxOfInterest.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8925994()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A89259DC()
{
  return sub_1A8A78768();
}

uint64_t sub_1A8925A0C()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8925A50@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t _s16IMAP2Persistence17MailboxOfInterestV17LocalModificationO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, int a2, unint64_t a3, int a4)
{
  if (a1)
  {
    if (a1 == 1)
    {
      if (a3 == 1) {
        return 1;
      }
    }
    else if (a1 == 2)
    {
      if (a3 == 2) {
        return 1;
      }
    }
    else if (a3 >= 3 && a2 == a4 && sub_1A8866D34(a1, a3))
    {
      return 1;
    }
  }
  else if (!a3)
  {
    return 1;
  }
  return 0;
}

uint64_t _s16IMAP2Persistence17MailboxOfInterestV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)a2)) {
    return 0;
  }
  if ((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32)) != (*(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned int *)(a2 + 24) << 32))) {
    return 0;
  }
  if (!sub_1A8866D34(*(void *)(a1 + 16), *(void *)(a2 + 16))) {
    return 0;
  }
  long long v4 = *(_OWORD *)(a1 + 48);
  v10[0] = *(_OWORD *)(a1 + 32);
  v10[1] = v4;
  char v11 = *(unsigned char *)(a1 + 64);
  long long v5 = *(_OWORD *)(a2 + 48);
  v8[0] = *(_OWORD *)(a2 + 32);
  v8[1] = v5;
  char v9 = *(unsigned char *)(a2 + 64);
  if (!_s16IMAP2Persistence15MailboxMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((BOOL)v10, (uint64_t)v8)
    || (_s16IMAP2Persistence17MailboxOfInterestV17LocalModificationO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)(a1 + 72), *(_DWORD *)(a1 + 80), *(void *)(a2 + 72), *(_DWORD *)(a2 + 80)) & 1) == 0)
  {
    return 0;
  }
  char v6 = *(unsigned char *)(a2 + 88);
  if (*(unsigned char *)(a1 + 88))
  {
    if ((*(unsigned char *)(a2 + 88) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 84) != *(_DWORD *)(a2 + 84)) {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_1A8925BCC()
{
  unint64_t result = qword_1E974E528;
  if (!qword_1E974E528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E528);
  }
  return result;
}

unint64_t sub_1A8925C24()
{
  unint64_t result = qword_1E9743030;
  if (!qword_1E9743030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743030);
  }
  return result;
}

unint64_t destroy for MailboxOfInterest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 72);
  if (result >= 3)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MailboxOfInterest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a2 + 72;
  unint64_t v6 = *(void *)(a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6 >= 3)
  {
    *(void *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)v7;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(v7 + 8);
  }
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for MailboxOfInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (void *)(a1 + 72);
  char v9 = (void *)(a2 + 72);
  unint64_t v8 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >= 3uLL)
  {
    if (v8 >= 3)
    {
      *(void *)(a1 + 72) = v8;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    else
    {
      sub_1A8925EC4(a1 + 72);
      int v11 = *(_DWORD *)(a2 + 80);
      *uint64_t v7 = *v9;
      *(_DWORD *)(a1 + 80) = v11;
    }
  }
  else if (v8 >= 3)
  {
    *(void *)(a1 + 72) = v8;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    uint64_t v10 = *v9;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *uint64_t v7 = v10;
  }
  int v12 = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = v12;
  return a1;
}

uint64_t sub_1A8925EC4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MailboxOfInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a2 + 72);
  unint64_t v6 = *(void *)(a1 + 72);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (v6 >= 3)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 72) = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_6;
    }
    sub_1A8925EC4(a1 + 72);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
LABEL_6:
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxOfInterest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxOfInterest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxOfInterest()
{
  return &type metadata for MailboxOfInterest;
}

uint64_t sub_1A89260E0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(void *)a1 = *(void *)a2;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t assignWithCopy for MailboxOfInterest.LocalModification(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return a1;
    }
LABEL_7:
    unint64_t v6 = *(void *)a2;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
    *(void *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for MailboxOfInterest.LocalModification(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(void *)a1 = *(void *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxOfInterest.LocalModification(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 12)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MailboxOfInterest.LocalModification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 12) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1A89262F4(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(_DWORD *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MailboxOfInterest.LocalModification()
{
  return &type metadata for MailboxOfInterest.LocalModification;
}

uint64_t sub_1A8926324(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      unsigned int v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        sub_1A8912CB0(v3, v10);
        sub_1A8912CB0(v4, v11);
        sub_1A8929A68(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1A8912674);
        sub_1A8929A68(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1A8912674);
        char v6 = _s16IMAP2Persistence11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v10, v11);
        sub_1A8929A68(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1A89127EC);
        sub_1A8929A68(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1A89127EC);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 5;
        v4 += 5;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1A892642C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v56 = a2 + 32;
    uint64_t v57 = a1 + 32;
    while (1)
    {
      uint64_t v4 = v57 + 96 * v3;
      uint64_t v5 = v56 + 96 * v3;
      if (*(void *)(v4 + 8) != *(void *)(v5 + 8)) {
        break;
      }
      char v6 = *(unsigned __int8 **)v4;
      uint64_t v7 = *(unsigned __int8 **)v5;
      uint64_t v8 = *(void *)(*(void *)v4 + 16);
      if (v8 != *(void *)(*(void *)v5 + 16)) {
        break;
      }
      uint64_t result = *(void *)(v4 + 16);
      uint64_t v10 = *(unsigned int *)(v4 + 24);
      int v11 = *(_DWORD *)(v4 + 32);
      char v12 = *(unsigned char *)(v4 + 36);
      uint64_t v13 = *(void *)(v4 + 40);
      char v14 = *(unsigned char *)(v4 + 48);
      uint64_t v15 = *(void *)(v4 + 56);
      char v16 = *(unsigned char *)(v4 + 64);
      uint64_t v17 = *(void *)(v4 + 72);
      uint64_t v18 = *(unsigned int *)(v4 + 80);
      int v19 = *(_DWORD *)(v4 + 84);
      char v20 = *(unsigned char *)(v4 + 88);
      uint64_t v21 = *(void *)(v5 + 16);
      uint64_t v22 = *(unsigned int *)(v5 + 24);
      int v23 = *(_DWORD *)(v5 + 32);
      int v24 = *(unsigned __int8 *)(v5 + 36);
      uint64_t v25 = *(void *)(v5 + 40);
      int v26 = *(unsigned __int8 *)(v5 + 48);
      uint64_t v27 = *(void *)(v5 + 56);
      char v28 = *(unsigned char *)(v5 + 64);
      unint64_t v29 = *(void *)(v5 + 72);
      uint64_t v30 = *(unsigned int *)(v5 + 80);
      int v55 = *(_DWORD *)(v5 + 84);
      int v31 = *(unsigned __int8 *)(v5 + 88);
      if (v8 && v6 != v7)
      {
        if (v6[32] != v7[32]) {
          return 0;
        }
        if (v8 != 1)
        {
          if (v6[33] != v7[33]) {
            return 0;
          }
          unint64_t v35 = v6 + 34;
          uint64_t v36 = v7 + 34;
          for (uint64_t i = v8 - 2; i; --i)
          {
            int v39 = *v35++;
            int v38 = v39;
            int v40 = *v36++;
            if (v38 != v40) {
              return 0;
            }
          }
        }
      }
      if ((v10 | (v10 << 32)) != (v22 | (v22 << 32))) {
        break;
      }
      uint64_t v32 = *(void *)(result + 16);
      if (v32 != *(void *)(v21 + 16)) {
        break;
      }
      if (v32 && result != v21)
      {
        if (*(unsigned __int8 *)(result + 32) != *(unsigned __int8 *)(v21 + 32)) {
          return 0;
        }
        if (v32 != 1)
        {
          if (*(unsigned __int8 *)(result + 33) != *(unsigned __int8 *)(v21 + 33)) {
            return 0;
          }
          if (v32 != 2)
          {
            if (*(unsigned __int8 *)(result + 34) != *(unsigned __int8 *)(v21 + 34)) {
              return 0;
            }
            uint64_t v43 = (unsigned __int8 *)(result + 35);
            uint64_t v44 = (unsigned __int8 *)(v21 + 35);
            for (uint64_t j = v32 - 3; j; --j)
            {
              uint64_t result = 0;
              int v47 = *v43++;
              int v46 = v47;
              int v48 = *v44++;
              if (v46 != v48) {
                return result;
              }
            }
          }
        }
      }
      if (v12)
      {
        if (!v24) {
          return 0;
        }
      }
      else
      {
        if (v11 == v23) {
          char v33 = v24;
        }
        else {
          char v33 = 1;
        }
        if (v33) {
          return 0;
        }
      }
      if (v14)
      {
        if (!v26) {
          return 0;
        }
      }
      else
      {
        if (v25 == v13) {
          char v34 = v26;
        }
        else {
          char v34 = 1;
        }
        if (v34) {
          return 0;
        }
      }
      if (v16)
      {
        if ((v28 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v28) {
          return 0;
        }
        if ((v27 | v15) < 0)
        {
          __break(1u);
          return result;
        }
        if (v27 != v15) {
          return 0;
        }
      }
      if (v17)
      {
        if (v17 == 1)
        {
          if (v29 != 1) {
            return 0;
          }
        }
        else if (v17 == 2)
        {
          if (v29 != 2) {
            return 0;
          }
        }
        else
        {
          if (v29 < 3) {
            return 0;
          }
          if ((v18 | (v18 << 32)) != (v30 | (v30 << 32))) {
            return 0;
          }
          uint64_t v41 = *(void *)(v17 + 16);
          if (v41 != *(void *)(v29 + 16)) {
            return 0;
          }
          if (v41 && v17 != v29)
          {
            if (*(unsigned __int8 *)(v17 + 32) != *(unsigned __int8 *)(v29 + 32)) {
              return 0;
            }
            if (v41 != 1)
            {
              if (*(unsigned __int8 *)(v17 + 33) != *(unsigned __int8 *)(v29 + 33)) {
                return 0;
              }
              if (v41 != 2)
              {
                if (*(unsigned __int8 *)(v17 + 34) != *(unsigned __int8 *)(v29 + 34)) {
                  return 0;
                }
                uint64_t v49 = (unsigned __int8 *)(v17 + 35);
                uint64_t v50 = (unsigned __int8 *)(v29 + 35);
                for (uint64_t k = v41 - 3; k; --k)
                {
                  uint64_t result = 0;
                  int v53 = *v49++;
                  int v52 = v53;
                  int v54 = *v50++;
                  if (v52 != v54) {
                    return result;
                  }
                }
              }
            }
          }
        }
      }
      else if (v29)
      {
        return 0;
      }
      if (v20)
      {
        if (!v31) {
          return 0;
        }
      }
      else
      {
        if (v19 == v55) {
          char v42 = v31;
        }
        else {
          char v42 = 1;
        }
        if (v42) {
          return 0;
        }
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A8926788(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32)) {
    return 0;
  }
  uint64_t v3 = 0;
  do
  {
    if (*(unsigned char *)(a2 + v3 + 48) == 1)
    {
      if (!*(unsigned char *)(a1 + v3 + 48)) {
        return 0;
      }
    }
    else if ((*(unsigned char *)(a1 + v3 + 48) & 1) != 0 || *(void *)(a1 + v3 + 40) != *(void *)(a2 + v3 + 40))
    {
      return 0;
    }
    if ((*(unsigned __int8 *)(a1 + v3 + 49) ^ *(unsigned __int8 *)(a2 + v3 + 49))) {
      break;
    }
    if (!--v2) {
      return 1;
    }
    uint64_t v4 = a1 + v3;
    uint64_t v5 = a2 + v3;
    v3 += 24;
  }
  while (*(_DWORD *)(v5 + 56) == *(_DWORD *)(v4 + 56));
  return 0;
}

uint64_t sub_1A8926848(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = a1[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v6 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = a1 + 5;
  uint64_t v8 = a2 + 5;
  uint64_t v9 = v2 - 1;
  do
  {
    BOOL v10 = v9 == 0;
    if (!v9) {
      break;
    }
    uint64_t v11 = *v7++;
    ++v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v12 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v9;
  }
  while ((v12 & 1) != 0);
  return v10;
}

uint64_t sub_1A8926948(uint64_t a1, uint64_t a2)
{
  void __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_1A8512DFC(v6, v5);
          sub_1A8512DFC(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_123;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_124;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14)
          {
LABEL_120:
            sub_1A85135AC(v6, v5);
            sub_1A85135AC(v6, v5);
            return 0;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_1A85135AC(v6, v5);
            sub_1A85135AC(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                uint64_t v71 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_126;
                }
                sub_1A8512DFC(v8, v7);
                sub_1A8512DFC(v6, v5);
                sub_1A8512DFC(v8, v7);
                int v23 = (char *)sub_1A8A74588();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_1A8A745B8();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_128;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_1A8A745A8();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_156;
                  }
                  int v29 = memcmp(v23, __s1, BYTE6(v7));
LABEL_102:
                  sub_1A85135AC(v6, v5);
                  goto LABEL_103;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_137;
                  }
                  swift_retain();
                  uint64_t v25 = (char *)sub_1A8A74588();
                  if (v25)
                  {
                    uint64_t v26 = sub_1A8A745B8();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_144;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_1A8A745A8();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_146;
                  }
                  if (!v25) {
                    goto LABEL_147;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_1A85135AC(v8, v7);
                  goto LABEL_102;
                }
                uint64_t v62 = *(void *)(v8 + 16);
                unint64_t v69 = *(void **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1A8A74588();
                if (v63)
                {
                  uint64_t v64 = sub_1A8A745B8();
                  if (__OFSUB__(v62, v64)) {
                    goto LABEL_143;
                  }
                  v63 += v62 - v64;
                }
                if (__OFSUB__(v69, v62)) {
                  goto LABEL_138;
                }
                uint64_t v65 = sub_1A8A745A8();
                if (v65 >= (uint64_t)v69 - v62) {
                  size_t v66 = (size_t)v69 - v62;
                }
                else {
                  size_t v66 = v65;
                }
                uint64_t v3 = v71;
                if (!v23) {
                  goto LABEL_157;
                }
                if (!v63) {
                  goto LABEL_158;
                }
                int v53 = memcmp(v23, v63, v66);
                swift_release();
                swift_release();
                sub_1A85135AC(v6, v5);
LABEL_116:
                sub_1A85135AC(v8, v7);
LABEL_117:
                sub_1A85135AC(v6, v5);
                sub_1A85135AC(v8, v7);
                sub_1A85135AC(v6, v5);
                if (v53) {
                  return 0;
                }
                break;
              case 2:
                uint64_t v72 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_1A8512DFC(v8, v7);
                sub_1A8512DFC(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_1A8A74588();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_1A8A745B8();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_127;
                  }
                  uint64_t v68 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v68 = 0;
                }
                sub_1A8A745A8();
                uint64_t v3 = v72;
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v68) {
                    goto LABEL_153;
                  }
                  int v53 = memcmp(v68, __s1, BYTE6(v7));
                  swift_release();
                  swift_release();
                  goto LABEL_116;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_133;
                  }
                  swift_retain();
                  int v39 = (char *)sub_1A8A74588();
                  if (v39)
                  {
                    uint64_t v40 = sub_1A8A745B8();
                    if (__OFSUB__((int)v8, v40)) {
                      goto LABEL_142;
                    }
                    v39 += (int)v8 - v40;
                  }
                  uint64_t v41 = sub_1A8A745A8();
                  if (v41 >= (v8 >> 32) - (int)v8) {
                    size_t v42 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v42 = v41;
                  }
                  if (!v68) {
                    goto LABEL_149;
                  }
                  uint64_t v3 = v72;
                  if (!v39) {
                    goto LABEL_150;
                  }
                  int v29 = memcmp(v68, v39, v42);
                  sub_1A85135AC(v8, v7);
                  swift_release();
                  swift_release();
LABEL_103:
                  sub_1A85135AC(v8, v7);
LABEL_104:
                  sub_1A85135AC(v6, v5);
                  sub_1A85135AC(v8, v7);
                  sub_1A85135AC(v6, v5);
                  if (v29) {
                    return 0;
                  }
                }
                else
                {
                  uint64_t v55 = *(void *)(v8 + 16);
                  uint64_t v54 = *(void *)(v8 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v56 = (char *)sub_1A8A74588();
                  if (v56)
                  {
                    uint64_t v57 = sub_1A8A745B8();
                    if (__OFSUB__(v55, v57)) {
                      goto LABEL_141;
                    }
                    v56 += v55 - v57;
                  }
                  BOOL v17 = __OFSUB__(v54, v55);
                  int64_t v58 = v54 - v55;
                  if (v17) {
                    goto LABEL_136;
                  }
                  uint64_t v59 = sub_1A8A745A8();
                  if (v59 >= v58) {
                    size_t v60 = v58;
                  }
                  else {
                    size_t v60 = v59;
                  }
                  uint64_t v3 = v72;
                  if (!v68) {
                    goto LABEL_154;
                  }
                  if (!v56) {
                    goto LABEL_155;
                  }
                  int v61 = memcmp(v68, v56, v60);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1A85135AC(v8, v7);
                  sub_1A85135AC(v6, v5);
                  sub_1A85135AC(v8, v7);
                  sub_1A85135AC(v6, v5);
                  if (v61) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                uint64_t v70 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_1A8512DFC(v8, v7);
                  uint64_t v34 = sub_1A8A74588();
                  if (!v34) {
                    goto LABEL_148;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_1A8A745B8();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_132;
                  }
LABEL_53:
                  uint64_t v36 = sub_1A8A745A8();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_1A85135AC(v6, v5);
                  sub_1A85135AC(v8, v7);
                  sub_1A85135AC(v6, v5);
                  uint64_t v3 = v70;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v49 = *(void *)(v8 + 16);
                uint64_t v50 = *(void *)(v8 + 24);
                sub_1A8512DFC(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v45 = (char *)sub_1A8A74588();
                if (v45)
                {
                  uint64_t v51 = sub_1A8A745B8();
                  if (__OFSUB__(v49, v51)) {
                    goto LABEL_140;
                  }
                  v45 += v49 - v51;
                }
                BOOL v17 = __OFSUB__(v50, v49);
                int64_t v47 = v50 - v49;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v48 = sub_1A8A745A8();
                uint64_t v3 = v70;
                if (!v45) {
                  goto LABEL_152;
                }
LABEL_83:
                if (v48 >= v47) {
                  size_t v52 = v47;
                }
                else {
                  size_t v52 = v48;
                }
                int v53 = memcmp(__s1, v45, v52);
                swift_release();
                swift_release();
                goto LABEL_117;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t __s2 = v8;
                  __int16 v74 = v7;
                  char v75 = BYTE2(v7);
                  char v76 = BYTE3(v7);
                  char v77 = BYTE4(v7);
                  char v78 = BYTE5(v7);
                  sub_1A8512DFC(v8, v7);
                  int v29 = memcmp(__s1, &__s2, BYTE6(v7));
                  goto LABEL_104;
                }
                uint64_t v70 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_129;
                  }
                  sub_1A8512DFC(v8, v7);
                  uint64_t v19 = sub_1A8A74588();
                  if (!v19)
                  {
                    sub_1A8A745A8();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    sub_1A8A745A8();
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
                    JUMPOUT(0x1A892734CLL);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_1A8A745B8();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_131;
                  }
                  goto LABEL_53;
                }
                uint64_t v43 = *(void *)(v8 + 16);
                uint64_t v44 = *(void *)(v8 + 24);
                sub_1A8512DFC(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v45 = (char *)sub_1A8A74588();
                if (v45)
                {
                  uint64_t v46 = sub_1A8A745B8();
                  if (__OFSUB__(v43, v46)) {
                    goto LABEL_139;
                  }
                  v45 += v43 - v46;
                }
                BOOL v17 = __OFSUB__(v44, v43);
                int64_t v47 = v44 - v43;
                if (v17) {
                  goto LABEL_134;
                }
                uint64_t v48 = sub_1A8A745A8();
                uint64_t v3 = v70;
                if (!v45) {
                  goto LABEL_151;
                }
                goto LABEL_83;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_125;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          goto LABEL_120;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

uint64_t sub_1A892737C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  for (uint64_t i = 0; ; i += 32)
  {
    uint64_t result = 0;
    uint64_t v7 = a1 + i;
    uint64_t v8 = a2 + i;
    if (*(_DWORD *)(a2 + i + 32) != *(_DWORD *)(a1 + i + 32)
      || ((*(unsigned __int8 *)(v7 + 36) ^ *(unsigned __int8 *)(v8 + 36)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 37) ^ *(unsigned __int8 *)(v8 + 37)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 38) ^ *(unsigned __int8 *)(v8 + 38)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 39) ^ *(unsigned __int8 *)(v8 + 39)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 40) ^ *(unsigned __int8 *)(v8 + 40)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 41) ^ *(unsigned __int8 *)(v8 + 41)) & 1) != 0
      || *(unsigned __int8 *)(v7 + 42) != *(unsigned __int8 *)(v8 + 42)
      || *(unsigned __int8 *)(v7 + 43) != *(unsigned __int8 *)(v8 + 43)
      || ((*(unsigned __int8 *)(v7 + 44) ^ *(unsigned __int8 *)(v8 + 44)) & 1) != 0)
    {
      break;
    }
    uint64_t v9 = *(void *)(v7 + 45);
    uint64_t v10 = *(void *)(v7 + 56);
    unint64_t v11 = *(void *)(v8 + 45);
    if (v9 == 2)
    {
      if (v11 != 2) {
        return 0;
      }
    }
    else
    {
      if (v11 == 2) {
        return 0;
      }
      uint64_t result = 0;
      BOOL v12 = (*(unsigned char *)(v7 + 53) & 1) == 0;
      if (((v9 & 1) == 0) == (v11 & 1)) {
        return result;
      }
      if (((v9 & 0x100) == 0) == ((v11 >> 8) & 1)) {
        return result;
      }
      if (((v9 & 0x10000) == 0) == ((v11 >> 16) & 1)) {
        return result;
      }
      if (((v9 & 0x1000000) == 0) == ((v11 >> 24) & 1)) {
        return result;
      }
      if (((v9 & 0x100000000) == 0) == (BYTE4(v11) & 1)) {
        return result;
      }
      if (((v9 & 0x10000000000) == 0) == ((v11 >> 40) & 1)) {
        return result;
      }
      unint64_t v13 = v11 ^ v9;
      if ((v13 & 0xFF000000000000) != 0 || HIBYTE(v13) || ((v12 ^ *(unsigned __int8 *)(v8 + 53)) & 1) == 0) {
        return result;
      }
    }
    if ((sub_1A851D710(v10, *(void *)(v8 + 56)) & 1) == 0) {
      return 0;
    }
    if (!--v2) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1A8927574(uint64_t a1, uint64_t a2)
{
  void __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v84 = a2 + 32;
    uint64_t v85 = a1 + 32;
    uint64_t v83 = *(void *)(a1 + 16);
    while (1)
    {
      unint64_t v5 = (unsigned __int8 *)(v85 + 40 * v3);
      uint64_t v6 = (unsigned __int8 *)(v84 + 40 * v3);
      if (*v5 != *v6) {
        return 0;
      }
      if (*((_DWORD *)v6 + 1) != *((_DWORD *)v5 + 1)) {
        return 0;
      }
      if ((*((unsigned int *)v5 + 4) | ((unint64_t)*((unsigned int *)v5 + 4) << 32)) != (*((unsigned int *)v6 + 4) | ((unint64_t)*((unsigned int *)v6 + 4) << 32))) {
        return 0;
      }
      uint64_t v7 = *((void *)v5 + 1);
      uint64_t v8 = *((void *)v6 + 1);
      uint64_t v9 = *(void *)(v7 + 16);
      if (v9 != *(void *)(v8 + 16)) {
        return 0;
      }
      uint64_t v11 = *((void *)v5 + 3);
      unint64_t v10 = *((void *)v5 + 4);
      uint64_t v13 = *((void *)v6 + 3);
      unint64_t v12 = *((void *)v6 + 4);
      if (v9) {
        BOOL v14 = v7 == v8;
      }
      else {
        BOOL v14 = 1;
      }
      if (!v14)
      {
        if (*(unsigned __int8 *)(v7 + 32) != *(unsigned __int8 *)(v8 + 32)) {
          return 0;
        }
        if (v9 != 1)
        {
          if (*(unsigned __int8 *)(v7 + 33) != *(unsigned __int8 *)(v8 + 33)) {
            return 0;
          }
          if (v9 != 2)
          {
            if (*(unsigned __int8 *)(v7 + 34) != *(unsigned __int8 *)(v8 + 34)) {
              return 0;
            }
            uint64_t v45 = (unsigned __int8 *)(v7 + 35);
            uint64_t v46 = (unsigned __int8 *)(v8 + 35);
            for (uint64_t i = v9 - 3; i; --i)
            {
              int v49 = *v45++;
              int v48 = v49;
              int v50 = *v46++;
              if (v48 != v50) {
                return 0;
              }
            }
          }
        }
      }
      uint64_t v15 = v3 + 1;
      uint64_t v16 = 0;
      switch(v10 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v11), v11))
          {
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
          }
          uint64_t v16 = HIDWORD(v11) - (int)v11;
LABEL_26:
          sub_1A8512DFC(v11, v10);
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(v11 + 16);
          uint64_t v17 = *(void *)(v11 + 24);
          uint64_t v16 = v17 - v18;
          if (!__OFSUB__(v17, v18)) {
            goto LABEL_26;
          }
          goto LABEL_140;
        case 3uLL:
          break;
        default:
          uint64_t v16 = BYTE6(v10);
          break;
      }
      uint64_t v86 = v15;
      unint64_t v19 = v12 >> 62;
      switch(v12 >> 62)
      {
        case 1uLL:
          LODWORD(v20) = HIDWORD(v13) - v13;
          if (__OFSUB__(HIDWORD(v13), v13)) {
            goto LABEL_141;
          }
          uint64_t v20 = (int)v20;
LABEL_32:
          if (v16 != v20)
          {
LABEL_136:
            sub_1A85135AC(v11, v10);
            return 0;
          }
          if (v16 < 1)
          {
LABEL_7:
            sub_1A85135AC(v11, v10);
          }
          else
          {
            switch(v10 >> 62)
            {
              case 1uLL:
                if ((int)v11 > v11 >> 32) {
                  goto LABEL_143;
                }
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v11, v10);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v13, v12);
                sub_1A8512DFC(v13, v12);
                int v29 = (char *)sub_1A8A74588();
                if (!v29) {
                  goto LABEL_46;
                }
                uint64_t v30 = sub_1A8A745B8();
                if (__OFSUB__((int)v11, v30)) {
                  goto LABEL_145;
                }
                v29 += (int)v11 - v30;
LABEL_46:
                uint64_t v2 = v83;
                sub_1A8A745A8();
                if (!v19)
                {
                  __s1[0] = v13;
                  LOWORD(__s1[1]) = v12;
                  BYTE2(__s1[1]) = BYTE2(v12);
                  BYTE3(__s1[1]) = BYTE3(v12);
                  BYTE4(__s1[1]) = BYTE4(v12);
                  BYTE5(__s1[1]) = BYTE5(v12);
                  if (!v29) {
                    goto LABEL_172;
                  }
                  int v35 = memcmp(v29, __s1, BYTE6(v12));
                  goto LABEL_120;
                }
                if (v19 == 1)
                {
                  if (v13 >> 32 < (int)v13) {
                    goto LABEL_154;
                  }
                  swift_retain();
                  uint64_t v31 = (char *)sub_1A8A74588();
                  if (v31)
                  {
                    uint64_t v32 = sub_1A8A745B8();
                    if (__OFSUB__((int)v13, v32)) {
                      goto LABEL_161;
                    }
                    v31 += (int)v13 - v32;
                  }
                  uint64_t v33 = sub_1A8A745A8();
                  if (v33 >= (v13 >> 32) - (int)v13) {
                    size_t v34 = (v13 >> 32) - (int)v13;
                  }
                  else {
                    size_t v34 = v33;
                  }
                  if (!v29)
                  {
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    sub_1A8A745A8();
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    sub_1A8A745A8();
                    __break(1u);
                    JUMPOUT(0x1A8928134);
                  }
                  uint64_t v2 = v83;
                  if (!v31) {
                    goto LABEL_163;
                  }
                  int v35 = memcmp(v29, v31, v34);
                  sub_1A85135AC(v13, v12);
                  goto LABEL_120;
                }
                uint64_t v75 = *(void *)(v13 + 16);
                uint64_t v82 = *(char **)(v13 + 24);
                swift_retain();
                swift_retain();
                uint64_t v76 = sub_1A8A74588();
                if (v76)
                {
                  uint64_t v77 = sub_1A8A745B8();
                  if (__OFSUB__(v75, v77)) {
                    goto LABEL_160;
                  }
                  v76 += v75 - v77;
                }
                if (__OFSUB__(v82, v75)) {
                  goto LABEL_155;
                }
                uint64_t v78 = sub_1A8A745A8();
                if (v78 >= (uint64_t)&v82[-v75]) {
                  unsigned int v79 = &v82[-v75];
                }
                else {
                  unsigned int v79 = (char *)v78;
                }
                uint64_t v65 = v29;
                uint64_t v2 = v83;
                if (!v29) {
                  goto LABEL_173;
                }
                if (!v76) {
                  goto LABEL_174;
                }
                size_t v64 = (size_t)v79;
                size_t v66 = (const void *)v76;
LABEL_133:
                int v67 = memcmp(v65, v66, v64);
                swift_release();
                goto LABEL_134;
              case 2uLL:
                uint64_t v36 = *(void *)(v11 + 16);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v11, v10);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v13, v12);
                sub_1A8512DFC(v13, v12);
                swift_retain();
                swift_retain();
                uint64_t v37 = sub_1A8A74588();
                if (v37)
                {
                  uint64_t v38 = v37;
                  uint64_t v39 = sub_1A8A745B8();
                  if (__OFSUB__(v36, v39)) {
                    goto LABEL_144;
                  }
                  unsigned int v81 = (void *)(v38 + v36 - v39);
                }
                else
                {
                  unsigned int v81 = 0;
                }
                sub_1A8A745A8();
                uint64_t v2 = v83;
                if (v19)
                {
                  if (v19 == 1)
                  {
                    if (v13 >> 32 < (int)v13) {
                      goto LABEL_148;
                    }
                    swift_retain();
                    uint64_t v51 = (char *)sub_1A8A74588();
                    if (v51)
                    {
                      uint64_t v52 = sub_1A8A745B8();
                      if (__OFSUB__((int)v13, v52)) {
                        goto LABEL_159;
                      }
                      v51 += (int)v13 - v52;
                    }
                    uint64_t v2 = v83;
                    uint64_t v53 = sub_1A8A745A8();
                    if (v53 >= (v13 >> 32) - (int)v13) {
                      size_t v54 = (v13 >> 32) - (int)v13;
                    }
                    else {
                      size_t v54 = v53;
                    }
                    if (!v81) {
                      goto LABEL_165;
                    }
                    if (!v51) {
                      goto LABEL_166;
                    }
                    int v35 = memcmp(v81, v51, v54);
                    sub_1A85135AC(v13, v12);
                    swift_release();
                    swift_release();
LABEL_120:
                    sub_1A85135AC(v13, v12);
LABEL_121:
                    sub_1A85135AC(v11, v10);
                    swift_bridgeObjectRelease();
                    sub_1A85135AC(v13, v12);
                    swift_bridgeObjectRelease();
                    sub_1A85135AC(v11, v10);
                    if (v35) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v68 = *(void *)(v13 + 16);
                    uint64_t v80 = *(void *)(v13 + 24);
                    swift_retain();
                    swift_retain();
                    unint64_t v69 = (char *)sub_1A8A74588();
                    if (v69)
                    {
                      uint64_t v70 = sub_1A8A745B8();
                      if (__OFSUB__(v68, v70)) {
                        goto LABEL_158;
                      }
                      v69 += v68 - v70;
                    }
                    BOOL v23 = __OFSUB__(v80, v68);
                    int64_t v71 = v80 - v68;
                    if (v23) {
                      goto LABEL_153;
                    }
                    uint64_t v72 = sub_1A8A745A8();
                    if (v72 >= v71) {
                      size_t v73 = v71;
                    }
                    else {
                      size_t v73 = v72;
                    }
                    if (!v81) {
                      goto LABEL_170;
                    }
                    if (!v69) {
                      goto LABEL_171;
                    }
                    int v74 = memcmp(v81, v69, v73);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_1A85135AC(v13, v12);
                    sub_1A85135AC(v11, v10);
                    swift_bridgeObjectRelease();
                    sub_1A85135AC(v13, v12);
                    swift_bridgeObjectRelease();
                    sub_1A85135AC(v11, v10);
                    if (v74) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v13;
                  LOWORD(__s1[1]) = v12;
                  BYTE2(__s1[1]) = BYTE2(v12);
                  BYTE3(__s1[1]) = BYTE3(v12);
                  BYTE4(__s1[1]) = BYTE4(v12);
                  BYTE5(__s1[1]) = BYTE5(v12);
                  if (!v81) {
                    goto LABEL_169;
                  }
                  int v67 = memcmp(v81, __s1, BYTE6(v12));
                  swift_release();
LABEL_134:
                  swift_release();
                  sub_1A85135AC(v13, v12);
                  sub_1A85135AC(v11, v10);
                  swift_bridgeObjectRelease();
                  sub_1A85135AC(v13, v12);
                  swift_bridgeObjectRelease();
                  sub_1A85135AC(v11, v10);
                  if (v67) {
                    return 0;
                  }
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v19) {
                  goto LABEL_76;
                }
                if (v19 == 1)
                {
                  uint64_t v24 = (v13 >> 32) - (int)v13;
                  if (v13 >> 32 < (int)v13) {
                    goto LABEL_147;
                  }
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v11, v10);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v13, v12);
                  sub_1A8512DFC(v13, v12);
                  uint64_t v40 = sub_1A8A74588();
                  if (!v40) {
                    goto LABEL_164;
                  }
                  uint64_t v26 = v40;
                  uint64_t v41 = sub_1A8A745B8();
                  uint64_t v28 = (int)v13 - v41;
                  if (__OFSUB__((int)v13, v41)) {
                    goto LABEL_152;
                  }
LABEL_66:
                  uint64_t v42 = sub_1A8A745A8();
                  if (v42 >= v24) {
                    size_t v43 = v24;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  int v44 = memcmp(__s1, (const void *)(v26 + v28), v43);
                  sub_1A85135AC(v13, v12);
                  sub_1A85135AC(v11, v10);
                  swift_bridgeObjectRelease();
                  sub_1A85135AC(v13, v12);
                  swift_bridgeObjectRelease();
                  sub_1A85135AC(v11, v10);
                  uint64_t v2 = v83;
                  if (v44) {
                    return 0;
                  }
                  break;
                }
                uint64_t v61 = *(void *)(v13 + 16);
                uint64_t v62 = *(void *)(v13 + 24);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v11, v10);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v13, v12);
                sub_1A8512DFC(v13, v12);
                swift_retain();
                swift_retain();
                uint64_t v57 = sub_1A8A74588();
                if (v57)
                {
                  uint64_t v63 = sub_1A8A745B8();
                  if (__OFSUB__(v61, v63)) {
                    goto LABEL_157;
                  }
                  v57 += v61 - v63;
                }
                BOOL v23 = __OFSUB__(v62, v61);
                int64_t v59 = v62 - v61;
                if (v23) {
                  goto LABEL_150;
                }
                uint64_t v60 = sub_1A8A745A8();
                uint64_t v2 = v83;
                if (!v57) {
                  goto LABEL_168;
                }
LABEL_101:
                if (v60 >= v59) {
                  size_t v64 = v59;
                }
                else {
                  size_t v64 = v60;
                }
                uint64_t v65 = __s1;
                size_t v66 = (const void *)v57;
                goto LABEL_133;
              default:
                __s1[0] = v11;
                LOWORD(__s1[1]) = v10;
                BYTE2(__s1[1]) = BYTE2(v10);
                BYTE3(__s1[1]) = BYTE3(v10);
                BYTE4(__s1[1]) = BYTE4(v10);
                BYTE5(__s1[1]) = BYTE5(v10);
                if (!v19)
                {
LABEL_76:
                  uint64_t __s2 = v13;
                  __int16 v88 = v12;
                  char v89 = BYTE2(v12);
                  char v90 = BYTE3(v12);
                  char v91 = BYTE4(v12);
                  char v92 = BYTE5(v12);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v11, v10);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v13, v12);
                  int v35 = memcmp(__s1, &__s2, BYTE6(v12));
                  goto LABEL_121;
                }
                if (v19 == 1)
                {
                  uint64_t v24 = (v13 >> 32) - (int)v13;
                  if (v13 >> 32 < (int)v13) {
                    goto LABEL_146;
                  }
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v11, v10);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v13, v12);
                  sub_1A8512DFC(v13, v12);
                  uint64_t v25 = sub_1A8A74588();
                  if (!v25) {
                    goto LABEL_175;
                  }
                  uint64_t v26 = v25;
                  uint64_t v27 = sub_1A8A745B8();
                  uint64_t v28 = (int)v13 - v27;
                  if (__OFSUB__((int)v13, v27)) {
                    goto LABEL_151;
                  }
                  goto LABEL_66;
                }
                uint64_t v55 = *(void *)(v13 + 16);
                uint64_t v56 = *(void *)(v13 + 24);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v11, v10);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v13, v12);
                sub_1A8512DFC(v13, v12);
                swift_retain();
                swift_retain();
                uint64_t v57 = sub_1A8A74588();
                if (v57)
                {
                  uint64_t v58 = sub_1A8A745B8();
                  if (__OFSUB__(v55, v58)) {
                    goto LABEL_156;
                  }
                  v57 += v55 - v58;
                }
                BOOL v23 = __OFSUB__(v56, v55);
                int64_t v59 = v56 - v55;
                if (v23) {
                  goto LABEL_149;
                }
                uint64_t v60 = sub_1A8A745A8();
                uint64_t v2 = v83;
                if (!v57) {
                  goto LABEL_167;
                }
                goto LABEL_101;
            }
          }
          uint64_t result = 1;
          uint64_t v3 = v86;
          if (v86 == v2) {
            return result;
          }
          break;
        case 2uLL:
          uint64_t v22 = *(void *)(v13 + 16);
          uint64_t v21 = *(void *)(v13 + 24);
          BOOL v23 = __OFSUB__(v21, v22);
          uint64_t v20 = v21 - v22;
          if (!v23) {
            goto LABEL_32;
          }
          goto LABEL_142;
        case 3uLL:
          if (!v16) {
            goto LABEL_7;
          }
          goto LABEL_136;
        default:
          uint64_t v20 = BYTE6(v12);
          goto LABEL_32;
      }
    }
  }
  return 1;
}

uint64_t sub_1A8928164(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
      return 0;
    }
    uint64_t v3 = (_DWORD *)(a2 + 56);
    for (uint64_t i = (_DWORD *)(a1 + 56); ; i += 6)
    {
      uint64_t v6 = *((void *)i - 2);
      unint64_t v5 = *((void *)i - 1);
      uint64_t v8 = *((void *)v3 - 2);
      unint64_t v7 = *((void *)v3 - 1);
      if ((v5 & 4) != 0)
      {
        if ((v7 & 4) == 0) {
          return 0;
        }
        sub_1A8929ABC(*((void *)v3 - 2), *((void *)v3 - 1));
        sub_1A8929ABC(v6, v5);
        sub_1A894A094(v6, v8);
        char v9 = v10;
      }
      else
      {
        if ((v7 & 4) != 0) {
          return 0;
        }
        sub_1A8929ABC(*((void *)v3 - 2), *((void *)v3 - 1));
        sub_1A8929ABC(v6, v5);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8929B04(v5);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8929B04(v7);
        if ((sub_1A894A574(v6, v8) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_1A8929BB4(v7);
          swift_bridgeObjectRelease();
          sub_1A8929BB4(v5);
          sub_1A8929B6C(v8, v7);
          sub_1A8929B6C(v6, v5);
          return 0;
        }
        char v9 = static SearchRequest.Predicate.__derived_enum_equals(_:_:)(v5, v7);
        swift_bridgeObjectRelease();
        sub_1A8929BB4(v7);
        swift_bridgeObjectRelease();
        sub_1A8929BB4(v5);
      }
      sub_1A8929B6C(v8, v7);
      sub_1A8929B6C(v6, v5);
      if ((v9 & 1) == 0) {
        return 0;
      }
      if (!--v2) {
        return 1;
      }
      uint64_t result = 0;
      int v13 = *v3;
      v3 += 6;
      int v12 = v13;
      int v14 = *i;
      if (v14 != v12) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_1A8928304(uint64_t a1, uint64_t a2)
{
  void __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v100 = a2 + 32;
    uint64_t v101 = a1 + 32;
    uint64_t v99 = *(void *)(a1 + 16);
    while (1)
    {
      uint64_t v4 = v101 + 56 * v3;
      uint64_t v5 = v100 + 56 * v3;
      if (*(_DWORD *)v4 != *(_DWORD *)v5) {
        return 0;
      }
      if ((*(unsigned int *)(v4 + 16) | ((unint64_t)*(unsigned int *)(v4 + 16) << 32)) != (*(unsigned int *)(v5 + 16) | ((unint64_t)*(unsigned int *)(v5 + 16) << 32))) {
        return 0;
      }
      uint64_t v6 = *(void *)(v4 + 8);
      uint64_t v7 = *(void *)(v5 + 8);
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8 != *(void *)(v7 + 16)) {
        return 0;
      }
      uint64_t v10 = *(void *)(v4 + 24);
      unint64_t v9 = *(void *)(v4 + 32);
      uint64_t v11 = *(void *)(v4 + 40);
      int v12 = *(unsigned __int8 *)(v4 + 48);
      uint64_t v14 = *(void *)(v5 + 24);
      unint64_t v13 = *(void *)(v5 + 32);
      uint64_t v15 = *(void *)(v5 + 40);
      if (v8) {
        BOOL v16 = v6 == v7;
      }
      else {
        BOOL v16 = 1;
      }
      int v17 = *(unsigned __int8 *)(v5 + 48);
      if (!v16)
      {
        if (*(unsigned __int8 *)(v6 + 32) != *(unsigned __int8 *)(v7 + 32)) {
          return 0;
        }
        if (v8 != 1)
        {
          if (*(unsigned __int8 *)(v6 + 33) != *(unsigned __int8 *)(v7 + 33)) {
            return 0;
          }
          if (v8 != 2)
          {
            if (*(unsigned __int8 *)(v6 + 34) != *(unsigned __int8 *)(v7 + 34)) {
              return 0;
            }
            int v48 = (unsigned __int8 *)(v6 + 35);
            int v49 = (unsigned __int8 *)(v7 + 35);
            for (uint64_t i = v8 - 3; i; --i)
            {
              uint64_t result = 0;
              int v53 = *v48++;
              int v52 = v53;
              int v54 = *v49++;
              if (v52 != v54) {
                return result;
              }
            }
          }
        }
      }
      int v103 = v17;
      int v104 = v12;
      uint64_t v102 = v3 + 1;
      uint64_t v18 = 0;
      switch(v9 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v10), v10))
          {
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
          }
          uint64_t v18 = HIDWORD(v10) - (int)v10;
LABEL_21:
          sub_1A8512DFC(v10, v9);
          break;
        case 2uLL:
          uint64_t v20 = *(void *)(v10 + 16);
          uint64_t v19 = *(void *)(v10 + 24);
          uint64_t v18 = v19 - v20;
          if (!__OFSUB__(v19, v20)) {
            goto LABEL_21;
          }
          goto LABEL_151;
        case 3uLL:
          break;
        default:
          uint64_t v18 = BYTE6(v9);
          break;
      }
      uint64_t v105 = v15;
      unint64_t v21 = v13 >> 62;
      switch(v13 >> 62)
      {
        case 1uLL:
          LODWORD(v22) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14)) {
            goto LABEL_152;
          }
          uint64_t v22 = (int)v22;
LABEL_27:
          if (v18 != v22)
          {
LABEL_146:
            sub_1A85135AC(v10, v9);
            return 0;
          }
          if (v18 < 1)
          {
LABEL_38:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A8512DFC(v10, v9);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A8512DFC(v14, v13);
            uint64_t v30 = v105;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A85135AC(v10, v9);
          }
          else
          {
            switch(v9 >> 62)
            {
              case 1uLL:
                uint64_t v97 = v11;
                if ((int)v10 > v10 >> 32) {
                  goto LABEL_154;
                }
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v10, v9);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                uint64_t v31 = (char *)sub_1A8A74588();
                if (!v31) {
                  goto LABEL_43;
                }
                uint64_t v32 = sub_1A8A745B8();
                if (__OFSUB__((int)v10, v32)) {
                  goto LABEL_156;
                }
                v31 += (int)v10 - v32;
LABEL_43:
                sub_1A8A745A8();
                if (!v21)
                {
                  __s1[0] = v14;
                  LOWORD(__s1[1]) = v13;
                  BYTE2(__s1[1]) = BYTE2(v13);
                  BYTE3(__s1[1]) = BYTE3(v13);
                  BYTE4(__s1[1]) = BYTE4(v13);
                  BYTE5(__s1[1]) = BYTE5(v13);
                  if (!v31) {
                    goto LABEL_177;
                  }
                  int v47 = memcmp(v31, __s1, BYTE6(v13));
                  goto LABEL_134;
                }
                uint64_t v93 = v31;
                if (v21 == 1)
                {
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_164;
                  }
                  swift_retain();
                  uint64_t v33 = sub_1A8A74588();
                  if (v33)
                  {
                    uint64_t v34 = v33;
                    uint64_t v35 = sub_1A8A745B8();
                    if (__OFSUB__((int)v14, v35)) {
                      goto LABEL_172;
                    }
                    uint64_t v36 = (const void *)(v34 + (int)v14 - v35);
                  }
                  else
                  {
                    uint64_t v36 = 0;
                  }
                  uint64_t v86 = sub_1A8A745A8();
                  if (v86 >= (v14 >> 32) - (int)v14) {
                    size_t v87 = (v14 >> 32) - (int)v14;
                  }
                  else {
                    size_t v87 = v86;
                  }
                  if (!v93) {
                    goto LABEL_184;
                  }
                  if (!v36) {
                    goto LABEL_185;
                  }
                  int v47 = memcmp(v93, v36, v87);
                  sub_1A85135AC(v14, v13);
LABEL_134:
                  sub_1A85135AC(v14, v13);
                  sub_1A85135AC(v10, v9);
LABEL_135:
                  uint64_t v30 = v105;
                  if (v47) {
                    goto LABEL_147;
                  }
                  break;
                }
                uint64_t v72 = *(void *)(v14 + 16);
                char v91 = *(char **)(v14 + 24);
                swift_retain();
                swift_retain();
                uint64_t v73 = sub_1A8A74588();
                if (v73)
                {
                  uint64_t v74 = v73;
                  uint64_t v75 = sub_1A8A745B8();
                  if (__OFSUB__(v72, v75)) {
                    goto LABEL_171;
                  }
                  uint64_t v76 = (const void *)(v74 + v72 - v75);
                }
                else
                {
                  uint64_t v76 = 0;
                }
                BOOL v25 = __OFSUB__(v91, v72);
                uint64_t v83 = &v91[-v72];
                if (v25) {
                  goto LABEL_166;
                }
                uint64_t v84 = sub_1A8A745A8();
                if (v84 >= (uint64_t)v83) {
                  size_t v85 = (size_t)v83;
                }
                else {
                  size_t v85 = v84;
                }
                if (!v93) {
                  goto LABEL_186;
                }
                uint64_t v11 = v97;
                if (!v76) {
                  goto LABEL_183;
                }
                int v66 = memcmp(v93, v76, v85);
LABEL_123:
                swift_release();
LABEL_124:
                swift_release();
                sub_1A85135AC(v14, v13);
                sub_1A85135AC(v10, v9);
LABEL_125:
                uint64_t v30 = v105;
                if (v66) {
                  goto LABEL_147;
                }
                break;
              case 2uLL:
                char v89 = *(char **)(v10 + 16);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v10, v9);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                swift_retain();
                swift_retain();
                uint64_t v37 = (char *)sub_1A8A74588();
                if (!v37) {
                  goto LABEL_52;
                }
                uint64_t v38 = sub_1A8A745B8();
                if (__OFSUB__(v89, v38)) {
                  goto LABEL_155;
                }
                uint64_t v37 = &v89[(void)v37 - v38];
LABEL_52:
                sub_1A8A745A8();
                if (!v21)
                {
                  __s1[0] = v14;
                  LOWORD(__s1[1]) = v13;
                  BYTE2(__s1[1]) = BYTE2(v13);
                  BYTE3(__s1[1]) = BYTE3(v13);
                  BYTE4(__s1[1]) = BYTE4(v13);
                  BYTE5(__s1[1]) = BYTE5(v13);
                  if (!v37) {
                    goto LABEL_176;
                  }
                  int v66 = memcmp(v37, __s1, BYTE6(v13));
                  swift_release();
                  goto LABEL_124;
                }
                uint64_t v98 = v11;
                char v90 = v37;
                if (v21 == 1)
                {
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_159;
                  }
                  swift_retain();
                  uint64_t v39 = sub_1A8A74588();
                  if (v39)
                  {
                    uint64_t v40 = v39;
                    uint64_t v41 = sub_1A8A745B8();
                    if (__OFSUB__((int)v14, v41)) {
                      goto LABEL_170;
                    }
                    uint64_t v42 = (const void *)(v40 + (int)v14 - v41);
                  }
                  else
                  {
                    uint64_t v42 = 0;
                  }
                  uint64_t v81 = sub_1A8A745A8();
                  if (v81 >= (v14 >> 32) - (int)v14) {
                    size_t v82 = (v14 >> 32) - (int)v14;
                  }
                  else {
                    size_t v82 = v81;
                  }
                  if (!v90) {
                    goto LABEL_181;
                  }
                  if (!v42) {
                    goto LABEL_182;
                  }
                  int v47 = memcmp(v90, v42, v82);
                  sub_1A85135AC(v14, v13);
                  swift_release();
                  swift_release();
                  goto LABEL_134;
                }
                uint64_t v67 = *(void *)(v14 + 16);
                uint64_t v88 = *(void *)(v14 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_1A8A74588();
                if (v68)
                {
                  uint64_t v69 = v68;
                  uint64_t v70 = sub_1A8A745B8();
                  if (__OFSUB__(v67, v70)) {
                    goto LABEL_169;
                  }
                  int64_t v71 = (const void *)(v69 + v67 - v70);
                }
                else
                {
                  int64_t v71 = 0;
                }
                BOOL v25 = __OFSUB__(v88, v67);
                int64_t v78 = v88 - v67;
                if (v25) {
                  goto LABEL_165;
                }
                uint64_t v79 = sub_1A8A745A8();
                if (v79 >= v78) {
                  size_t v80 = v78;
                }
                else {
                  size_t v80 = v79;
                }
                if (!v90) {
                  goto LABEL_179;
                }
                uint64_t v11 = v98;
                if (!v71) {
                  goto LABEL_180;
                }
                int v66 = memcmp(v90, v71, v80);
                swift_release();
                swift_release();
                goto LABEL_123;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v21) {
                  goto LABEL_72;
                }
                uint64_t v96 = v11;
                if (v21 == 1)
                {
                  char v92 = (void *)((v14 >> 32) - (int)v14);
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_158;
                  }
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v10, v9);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v14, v13);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v14, v13);
                  uint64_t v43 = sub_1A8A74588();
                  if (!v43) {
                    goto LABEL_174;
                  }
                  uint64_t v27 = v43;
                  uint64_t v44 = sub_1A8A745B8();
                  uint64_t v29 = (int)v14 - v44;
                  if (__OFSUB__((int)v14, v44)) {
                    goto LABEL_163;
                  }
LABEL_63:
                  uint64_t v45 = sub_1A8A745A8();
                  if (v45 >= (uint64_t)v92) {
                    size_t v46 = (size_t)v92;
                  }
                  else {
                    size_t v46 = v45;
                  }
                  int v47 = memcmp(__s1, (const void *)(v27 + v29), v46);
                  sub_1A85135AC(v14, v13);
                  sub_1A85135AC(v10, v9);
                  uint64_t v11 = v96;
                  goto LABEL_135;
                }
                uint64_t v62 = *(void *)(v14 + 16);
                uint64_t v95 = *(char **)(v14 + 24);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v10, v9);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                swift_retain();
                swift_retain();
                uint64_t v61 = (char *)sub_1A8A74588();
                if (v61)
                {
                  uint64_t v63 = sub_1A8A745B8();
                  if (__OFSUB__(v62, v63)) {
                    goto LABEL_168;
                  }
                  v61 += v62 - v63;
                }
                size_t v64 = &v95[-v62];
                if (__OFSUB__(v95, v62)) {
                  goto LABEL_160;
                }
                uint64_t v65 = sub_1A8A745A8();
                if (!v61) {
                  goto LABEL_175;
                }
LABEL_96:
                if (v65 >= (uint64_t)v64) {
                  size_t v77 = (size_t)v64;
                }
                else {
                  size_t v77 = v65;
                }
                int v66 = memcmp(__s1, v61, v77);
                swift_release();
                swift_release();
                sub_1A85135AC(v14, v13);
                sub_1A85135AC(v10, v9);
                uint64_t v11 = v96;
                goto LABEL_125;
              default:
                __s1[0] = v10;
                LOWORD(__s1[1]) = v9;
                BYTE2(__s1[1]) = BYTE2(v9);
                BYTE3(__s1[1]) = BYTE3(v9);
                BYTE4(__s1[1]) = BYTE4(v9);
                BYTE5(__s1[1]) = BYTE5(v9);
                if (!v21)
                {
LABEL_72:
                  uint64_t __s2 = v14;
                  __int16 v107 = v13;
                  char v108 = BYTE2(v13);
                  char v109 = BYTE3(v13);
                  char v110 = BYTE4(v13);
                  char v111 = BYTE5(v13);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v10, v9);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v14, v13);
                  uint64_t v30 = v105;
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  int v55 = memcmp(__s1, &__s2, BYTE6(v13));
                  sub_1A85135AC(v10, v9);
                  if (v55) {
                    goto LABEL_147;
                  }
                  break;
                }
                uint64_t v96 = v11;
                if (v21 == 1)
                {
                  char v92 = (void *)((v14 >> 32) - (int)v14);
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_157;
                  }
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v10, v9);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v14, v13);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A8512DFC(v14, v13);
                  uint64_t v26 = sub_1A8A74588();
                  if (!v26)
                  {
                    sub_1A8A745A8();
                    __break(1u);
LABEL_174:
                    sub_1A8A745A8();
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
LABEL_178:
                    __break(1u);
LABEL_179:
                    __break(1u);
LABEL_180:
                    __break(1u);
LABEL_181:
                    __break(1u);
LABEL_182:
                    __break(1u);
LABEL_183:
                    __break(1u);
LABEL_184:
                    __break(1u);
LABEL_185:
                    __break(1u);
LABEL_186:
                    __break(1u);
                    JUMPOUT(0x1A8929060);
                  }
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_1A8A745B8();
                  uint64_t v29 = (int)v14 - v28;
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_162;
                  }
                  goto LABEL_63;
                }
                uint64_t v56 = *(void *)(v14 + 16);
                uint64_t v94 = *(char **)(v14 + 24);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v10, v9);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A8512DFC(v14, v13);
                swift_retain();
                swift_retain();
                uint64_t v57 = sub_1A8A74588();
                if (v57)
                {
                  uint64_t v58 = v57;
                  uint64_t v59 = sub_1A8A745B8();
                  if (__OFSUB__(v56, v59)) {
                    goto LABEL_167;
                  }
                  uint64_t v60 = v56;
                  uint64_t v61 = (char *)(v58 + v56 - v59);
                }
                else
                {
                  uint64_t v60 = v56;
                  uint64_t v61 = 0;
                }
                size_t v64 = &v94[-v60];
                if (__OFSUB__(v94, v60)) {
                  goto LABEL_161;
                }
                uint64_t v65 = sub_1A8A745A8();
                if (!v61) {
                  goto LABEL_178;
                }
                goto LABEL_96;
            }
          }
          if (v11)
          {
            if (!v30 || (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v11) & 1) == 0)
            {
LABEL_147:
              swift_bridgeObjectRelease();
              sub_1A85135AC(v14, v13);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A85135AC(v10, v9);
              swift_bridgeObjectRelease();
              return 0;
            }
          }
          else if (v30)
          {
            goto LABEL_147;
          }
          swift_bridgeObjectRelease();
          sub_1A85135AC(v14, v13);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A85135AC(v10, v9);
          swift_bridgeObjectRelease();
          if (v104 != v103) {
            return 0;
          }
          uint64_t result = 1;
          uint64_t v3 = v102;
          if (v102 == v99) {
            return result;
          }
          break;
        case 2uLL:
          uint64_t v24 = *(void *)(v14 + 16);
          uint64_t v23 = *(void *)(v14 + 24);
          BOOL v25 = __OFSUB__(v23, v24);
          uint64_t v22 = v23 - v24;
          if (!v25) {
            goto LABEL_27;
          }
          goto LABEL_153;
        case 3uLL:
          if (!v18) {
            goto LABEL_38;
          }
          goto LABEL_146;
        default:
          uint64_t v22 = BYTE6(v13);
          goto LABEL_27;
      }
    }
  }
  return 1;
}

uint64_t sub_1A8929090(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (a1[5] == a2[5])
    {
      uint64_t v3 = a1 + 4;
      uint64_t v4 = a2 + 4;
      uint64_t v5 = a1[4];
      uint64_t v6 = a2[4];
      uint64_t v7 = *(void *)(v5 + 16);
      if (v7 == *(void *)(v6 + 16))
      {
        uint64_t v8 = 1;
        while (1)
        {
          if (v7 && v5 != v6)
          {
            if (*(unsigned __int8 *)(v5 + 32) != *(unsigned __int8 *)(v6 + 32)) {
              return 0;
            }
            if (v7 != 1)
            {
              if (*(unsigned __int8 *)(v5 + 33) != *(unsigned __int8 *)(v6 + 33)) {
                return 0;
              }
              if (v7 != 2)
              {
                if (*(unsigned __int8 *)(v5 + 34) != *(unsigned __int8 *)(v6 + 34)) {
                  return 0;
                }
                uint64_t v11 = (unsigned __int8 *)(v5 + 35);
                int v12 = (unsigned __int8 *)(v6 + 35);
                for (uint64_t i = v7 - 3; i; --i)
                {
                  uint64_t result = 0;
                  int v15 = *v11++;
                  int v14 = v15;
                  int v16 = *v12++;
                  if (v14 != v16) {
                    return result;
                  }
                }
              }
            }
          }
          if (v8 == v2) {
            return 1;
          }
          uint64_t v9 = 2 * v8;
          if (v3[2 * v8 + 1] != v4[2 * v8 + 1]) {
            break;
          }
          uint64_t result = 0;
          uint64_t v5 = v3[2 * v8++];
          uint64_t v6 = v4[v9];
          uint64_t v7 = *(void *)(v5 + 16);
          if (v7 != *(void *)(v6 + 16)) {
            return result;
          }
        }
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A89291B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageMetadata(0) - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1A8929C1C(a1 + v12, (uint64_t)v10);
        sub_1A8929C1C(a2 + v12, (uint64_t)v6);
        char v15 = _s16IMAP2Persistence15MessageMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v6);
        sub_1A8929C80((uint64_t)v6);
        sub_1A8929C80((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1A8929310(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 48);
    for (uint64_t i = (uint64_t *)(a1 + 48); *((_DWORD *)v3 - 4) == *((_DWORD *)i - 4); i += 3)
    {
      unint64_t v6 = *(uint64_t *)((char *)i - 12);
      uint64_t v7 = *i;
      unint64_t v8 = *(uint64_t *)((char *)v3 - 12);
      uint64_t v9 = *v3;
      if (v6 == 2)
      {
        if (v8 != 2) {
          return 0;
        }
      }
      else
      {
        if (v8 == 2) {
          return 0;
        }
        uint64_t result = 0;
        if (((v6 & 1) == 0) == (v8 & 1)
          || ((v6 & 0x100) == 0) == ((v8 >> 8) & 1)
          || ((v6 & 0x10000) == 0) == ((v8 >> 16) & 1)
          || ((v6 & 0x1000000) == 0) == ((v8 >> 24) & 1))
        {
          return result;
        }
        int v10 = *((unsigned __int8 *)i - 4);
        int v11 = *((unsigned __int8 *)v3 - 4);
        if ((v6 & 0xFF00000000) == 0x200000000)
        {
          if (BYTE4(v8) != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (BYTE4(v8) == 2 || ((v6 & 0x100000000) == 0) == (BYTE4(v8) & 1)) {
            return result;
          }
        }
        if ((v6 & 0xFF0000000000) == 0x20000000000)
        {
          if (BYTE5(v8) != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (BYTE5(v8) == 2 || ((v6 & 0x10000000000) == 0) == ((v8 >> 40) & 1)) {
            return result;
          }
        }
        uint64_t v12 = v8 & 0xFF000000000000;
        if ((v6 & 0xFF000000000000) == 0x3000000000000)
        {
          if (v12 != 0x3000000000000) {
            return 0;
          }
        }
        else if (v12 == 0x3000000000000 || ((v8 ^ v6) & 0xFF000000000000) != 0)
        {
          return 0;
        }
        unint64_t v13 = HIBYTE(v6);
        unint64_t v14 = HIBYTE(v8);
        if (v13 == 8)
        {
          if (v14 != 8) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v14 == 8 || v13 != v14) {
            return result;
          }
        }
        if (v10 == 2)
        {
          if (v11 != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v11 == 2 || ((((v10 & 1) == 0) ^ v11) & 1) == 0) {
            return result;
          }
        }
      }
      if (v7)
      {
        if (!v9) {
          return 0;
        }
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        char v15 = sub_1A851D8F4(v7, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else if (v9)
      {
        return 0;
      }
      v3 += 3;
      uint64_t result = 1;
      if (!--v2) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t static MailboxPriorityInfo.__derived_struct_equals(_:_:)(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  if ((sub_1A8954CE8(a1, a3) & 1) == 0) {
    return 0;
  }
  return sub_1A8929090(a2, a4);
}

uint64_t MailboxPriorityInfo.userVisibleMailboxes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

double (*MailboxPriorityInfo.userVisibleMailboxes.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxPriorityInfo.mailboxPriorityOrder.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxPriorityInfo.mailboxPriorityOrder.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

double (*MailboxPriorityInfo.mailboxPriorityOrder.modify())(void)
{
  return nullsub_1;
}

uint64_t MailboxPriorityInfo.init()()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t MailboxPriorityInfo.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8929890(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = sub_1A8A78768();
  if (v6)
  {
    uint64_t v8 = a3 + 40;
    do
    {
      v8 += 16;
      uint64_t result = sub_1A8A78768();
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t MailboxPriorityInfo.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8929890((uint64_t)v7, a1);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  sub_1A8A78768();
  if (v4)
  {
    uint64_t v5 = a2 + 40;
    do
    {
      v5 += 16;
      sub_1A8A78768();
      --v4;
    }
    while (v4);
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A892979C()
{
  return MailboxPriorityInfo.hashValue.getter(*v0, v0[1]);
}

uint64_t sub_1A89297A4(uint64_t a1)
{
  return MailboxPriorityInfo.hash(into:)(a1, *v1, v1[1]);
}

uint64_t sub_1A89297AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8929890((uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  sub_1A8A78768();
  if (v3)
  {
    uint64_t v4 = v2 + 40;
    do
    {
      v4 += 16;
      sub_1A8A78768();
      --v3;
    }
    while (v3);
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A8929834(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = (void *)a1[1];
  uint64_t v3 = (void *)a2[1];
  if ((sub_1A8954CE8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_1A8929090(v2, v3);
}

uint64_t sub_1A8929890(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A8A787C8();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v10) {
      return sub_1A8A78768();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v9 = (v12 - 1) & v12;
LABEL_5:
    sub_1A8A78738();
    sub_1A8A78768();
    uint64_t result = sub_1A8A787C8();
    v4 ^= result;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_1A8A78768();
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_1A8A78768();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_1A8929A04()
{
  unint64_t result = qword_1E974E538;
  if (!qword_1E974E538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E538);
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxPriorityInfo()
{
  return &type metadata for MailboxPriorityInfo;
}

void *sub_1A8929A68(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_1A8929ABC(uint64_t a1, unint64_t a2)
{
  unint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if ((a2 & 4) == 0)
  {
    return sub_1A8929B04(a2);
  }
  return result;
}

unint64_t sub_1A8929B04(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A8929B6C(uint64_t a1, unint64_t a2)
{
  unint64_t result = swift_bridgeObjectRelease();
  if ((a2 & 4) == 0)
  {
    return sub_1A8929BB4(a2);
  }
  return result;
}

unint64_t sub_1A8929BB4(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8929C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8929C80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MessageMetadata.uid.getter()
{
  return *v0;
}

uint64_t MessageMetadata.uid.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*MessageMetadata.uid.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageMetadata.internalDate.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MessageMetadata.internalDate.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*MessageMetadata.internalDate.modify())(void)
{
  return nullsub_1;
}

unint64_t MessageMetadata.flags.getter()
{
  uint64_t v1 = 256;
  if (!v0[17]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | v0[16];
  uint64_t v3 = 0x10000;
  if (!v0[18]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!v0[19]) {
    uint64_t v4 = 0;
  }
  return v2 | v3 | v4 | ((unint64_t)v0[20] << 32) | ((unint64_t)v0[21] << 40) | ((unint64_t)v0[22] << 48) | ((unint64_t)v0[23] << 56);
}

uint64_t MessageMetadata.flags.setter(uint64_t result, char a2)
{
  v2[16] = result & 1;
  v2[17] = BYTE1(result) & 1;
  v2[18] = BYTE2(result) & 1;
  v2[19] = BYTE3(result) & 1;
  v2[20] = BYTE4(result);
  v2[21] = BYTE5(result);
  v2[22] = BYTE6(result);
  v2[23] = HIBYTE(result);
  v2[24] = a2;
  return result;
}

double (*MessageMetadata.flags.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageMetadata.gmailLabels.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageMetadata.gmailLabels.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

double (*MessageMetadata.gmailLabels.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageMetadata.messageHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageMetadata(0) + 32);
  return sub_1A8929EC4(v3, a1);
}

uint64_t type metadata accessor for MessageMetadata(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9743000);
}

uint64_t sub_1A8929EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MessageMetadata.messageHeader.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageMetadata(0) + 32);
  return sub_1A8929F70(a1, v3);
}

uint64_t sub_1A8929F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double (*MessageMetadata.messageHeader.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageMetadata.messageSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for MessageMetadata(0) + 36));
}

uint64_t MessageMetadata.messageSize.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for MessageMetadata(0);
  *(void *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

double (*MessageMetadata.messageSize.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageMetadata.indexingHint.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MessageMetadata(0) + 40));
}

uint64_t MessageMetadata.indexingHint.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for MessageMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

double (*MessageMetadata.indexingHint.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageMetadata.init(uid:internalDate:flags:gmailLabels:messageHeader:messageSize:indexingHint:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int v10 = a3;
  unint64_t v14 = HIDWORD(a3);
  unint64_t v15 = a3 >> 40;
  unint64_t v16 = HIWORD(a3);
  unint64_t v21 = HIBYTE(a3);
  *(void *)(a9 + 32) = 0;
  char v22 = a8 & 1;
  BOOL v17 = (int *)type metadata accessor for MessageMetadata(0);
  uint64_t v18 = a9 + v17[8];
  uint64_t v19 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_DWORD *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  sub_1A8929F70(a6, v18);
  *(unsigned char *)(a9 + 16) = v10 & 1;
  *(unsigned char *)(a9 + 17) = BYTE1(v10) & 1;
  *(unsigned char *)(a9 + 18) = BYTE2(v10) & 1;
  *(unsigned char *)(a9 + 19) = HIBYTE(v10) & 1;
  *(unsigned char *)(a9 + 20) = v14;
  *(unsigned char *)(a9 + 21) = v15;
  *(unsigned char *)(a9 + 22) = v16;
  *(unsigned char *)(a9 + 23) = v21;
  *(unsigned char *)(a9 + 24) = a4;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + v17[9]) = a7;
  *(unsigned char *)(a9 + v17[10]) = v22;
  return result;
}

uint64_t type metadata accessor for MessageMetadata.UnparsedHeader(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9742FE8);
}

BOOL static MessageMetadata.IndexingHint.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t MessageMetadata.UnparsedHeader.underlying.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MessageData.BodyData();
  MEMORY[0x1F4188790](v3 - 8);
  int64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A892A9F8(v1, (uint64_t)v5);
  uint64_t v6 = sub_1A8A75E28();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, v5, v6);
}

uint64_t MessageMetadata.IndexingHint.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t MessageMetadata.IndexingHint.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t MessageMetadata.UnparsedHeader.count.getter()
{
  uint64_t v1 = type metadata accessor for MessageData.BodyData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A8A75E28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A892A9F8(v0, (uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v8 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t _s16IMAP2Persistence15MessageMetadataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E548);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
  MEMORY[0x1F4188790](v11 - 8);
  int64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v39 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v39 - v18;
  if (*(_DWORD *)a2 != *(_DWORD *)a1 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    goto LABEL_36;
  }
  uint64_t v20 = *(unsigned char *)(a1 + 17) ? 256 : 0;
  uint64_t v21 = v20 | *(unsigned __int8 *)(a1 + 16);
  uint64_t v22 = *(unsigned char *)(a1 + 18) ? 0x10000 : 0;
  uint64_t v23 = *(unsigned char *)(a1 + 19) ? 0x1000000 : 0;
  unint64_t v24 = v21 | v22 | v23 | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 21) << 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 23) << 56);
  uint64_t v25 = *(unsigned char *)(a2 + 17) ? 256 : 0;
  uint64_t v26 = v25 | *(unsigned __int8 *)(a2 + 16);
  uint64_t v27 = *(unsigned char *)(a2 + 18) ? 0x10000 : 0;
  uint64_t v28 = *(unsigned char *)(a2 + 19) ? 0x1000000 : 0;
  if ((sub_1A891E740(v24, *(unsigned char *)(a1 + 24), v26 | v27 | v28 | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 21) << 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 23) << 56), *(unsigned char *)(a2 + 24)) & 1) == 0)goto LABEL_36; {
  uint64_t v41 = v5;
  }
  uint64_t v42 = v10;
  uint64_t v29 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (!v29) {
      goto LABEL_36;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    LODWORD(v40) = sub_1A851D8F4(v30, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0) {
      goto LABEL_36;
    }
  }
  else if (v29)
  {
LABEL_36:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v31 = type metadata accessor for MessageMetadata(0);
  sub_1A8929EC4(a1 + *(int *)(v31 + 32), (uint64_t)v19);
  uint64_t v39 = v31;
  sub_1A8929EC4(a2 + *(int *)(v31 + 32), (uint64_t)v16);
  uint64_t v32 = (uint64_t)v42;
  uint64_t v33 = (uint64_t)&v42[*(int *)(v8 + 48)];
  sub_1A8929EC4((uint64_t)v19, (uint64_t)v42);
  uint64_t v40 = v33;
  sub_1A8929EC4((uint64_t)v16, v33);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  if (v34(v32, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v16, &qword_1E9740CA0);
    uint64_t v32 = (uint64_t)v42;
    sub_1A8511B00((uint64_t)v19, &qword_1E9740CA0);
    if (v34(v40, 1, v4) == 1)
    {
      sub_1A8511B00(v32, &qword_1E9740CA0);
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  sub_1A8929EC4(v32, (uint64_t)v13);
  if (v34(v40, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v16, &qword_1E9740CA0);
    sub_1A8511B00((uint64_t)v19, &qword_1E9740CA0);
    sub_1A892B0F4((uint64_t)v13);
LABEL_32:
    sub_1A8511B00(v32, &qword_1E974E548);
    goto LABEL_36;
  }
  sub_1A892B988(v40, (uint64_t)v7);
  uint64_t v35 = v32;
  char v36 = static MessageData.BodyData.== infix(_:_:)(v13, v7);
  sub_1A892B0F4((uint64_t)v7);
  sub_1A8511B00((uint64_t)v16, &qword_1E9740CA0);
  sub_1A8511B00((uint64_t)v19, &qword_1E9740CA0);
  sub_1A892B0F4((uint64_t)v13);
  sub_1A8511B00(v35, &qword_1E9740CA0);
  if ((v36 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_34:
  if (*(void *)(a1 + *(int *)(v39 + 36)) != *(void *)(a2 + *(int *)(v39 + 36))) {
    goto LABEL_36;
  }
  char v37 = *(unsigned char *)(a1 + *(int *)(v39 + 40)) ^ *(unsigned char *)(a2 + *(int *)(v39 + 40)) ^ 1;
  return v37 & 1;
}

uint64_t sub_1A892A9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A892AA60()
{
  unint64_t result = qword_1E974E540;
  if (!qword_1E974E540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E540);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MessageMetadata(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v11 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
    uint64_t v12 = *(void *)(v11 - 8);
    int64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1A8A75E28();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
  }
  return v4;
}

uint64_t destroy for MessageMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1A8A75E28();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v4, v7);
  }
  return result;
}

uint64_t initializeWithCopy for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1A8A75E28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  return a1;
}

uint64_t assignWithCopy for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 24))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_1A892B0F4((uint64_t)v7);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1A8A75E28();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1A892B0F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1A8A75E28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v18 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 40))(v7, v8, v18);
      goto LABEL_7;
    }
    sub_1A892B0F4((uint64_t)v7);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1A8A75E28();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A892B4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for MessageMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A892B5B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740CA0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A892B660()
{
  sub_1A892B728();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A892B728()
{
  if (!qword_1E9742FF8)
  {
    type metadata accessor for MessageMetadata.UnparsedHeader(255);
    unint64_t v0 = sub_1A8A77898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9742FF8);
    }
  }
}

uint64_t getEnumTagSinglePayload for MessageMetadata.UnparsedHeader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A892B794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MessageMetadata.UnparsedHeader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A892B814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for MessageMetadata.IndexingHint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A892B950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageMetadata.IndexingHint()
{
  return &type metadata for MessageMetadata.IndexingHint;
}

uint64_t sub_1A892B988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MessageSectionData.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageSectionData.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v2 = a1;
  *(_DWORD *)(v2 + 8) = a2;
  return result;
}

double (*MessageSectionData.mailbox.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.message.getter()
{
  return *(unsigned int *)(v0 + 12);
}

uint64_t MessageSectionData.message.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

double (*MessageSectionData.message.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.section.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageSectionData.section.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

double (*MessageSectionData.section.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.segment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return sub_1A892C6A4(v3, a1);
}

uint64_t MessageSectionData.segment.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return sub_1A892C728(a1, v3);
}

double (*MessageSectionData.segment.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.init(mailbox:message:section:segment:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(_DWORD *)(a6 + 8) = a2;
  *(_DWORD *)(a6 + 12) = a3;
  *(void *)(a6 + 16) = a4;
  uint64_t v7 = a6 + *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return sub_1A892C78C(a5, v7);
}

uint64_t MessageSectionData.Segment.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MessageSectionData.Segment.data.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

double (*MessageSectionData.Segment.data.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.Segment.isFinal.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MessageSectionData.Segment(0) + 20));
}

uint64_t MessageSectionData.Segment.isFinal.setter(char a1)
{
  uint64_t result = type metadata accessor for MessageSectionData.Segment(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

double (*MessageSectionData.Segment.isFinal.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.Segment.initial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MessageSectionData.Segment(0);
  return sub_1A8511A9C(v1 + *(int *)(v3 + 24), a1, &qword_1E9743180);
}

uint64_t MessageSectionData.Segment.initial.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData.Segment(0) + 24);
  return sub_1A892C7F0(a1, v3);
}

double (*MessageSectionData.Segment.initial.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.Segment.Initial.bodyStructure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8511A9C(v1, a1, &qword_1E9741838);
}

double MessageSectionData.Segment.Initial.bodyStructure.setter(uint64_t a1)
{
  sub_1A8529F8C(a1, (uint64_t)v13, &qword_1E9741838);
  sub_1A8529F8C((uint64_t)v13, (uint64_t)v14, &qword_1E9741838);
  sub_1A8529F8C((uint64_t)v14, (uint64_t)v15, &qword_1E9741838);
  long long v2 = *(_OWORD *)(v1 + 144);
  v26[8] = *(_OWORD *)(v1 + 128);
  v26[9] = v2;
  v26[10] = *(_OWORD *)(v1 + 160);
  char v27 = *(unsigned char *)(v1 + 176);
  long long v3 = *(_OWORD *)(v1 + 80);
  v26[4] = *(_OWORD *)(v1 + 64);
  v26[5] = v3;
  long long v4 = *(_OWORD *)(v1 + 112);
  v26[6] = *(_OWORD *)(v1 + 96);
  v26[7] = v4;
  long long v5 = *(_OWORD *)(v1 + 16);
  v26[0] = *(_OWORD *)v1;
  v26[1] = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  void v26[2] = *(_OWORD *)(v1 + 32);
  void v26[3] = v6;
  sub_1A892CB90((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B3DC);
  long long v7 = v23;
  *(_OWORD *)(v1 + 128) = v22;
  *(_OWORD *)(v1 + 144) = v7;
  *(_OWORD *)(v1 + 160) = v24;
  *(unsigned char *)(v1 + 176) = v25;
  long long v8 = v19;
  *(_OWORD *)(v1 + 64) = v18;
  *(_OWORD *)(v1 + 80) = v8;
  long long v9 = v21;
  *(_OWORD *)(v1 + 96) = v20;
  *(_OWORD *)(v1 + 112) = v9;
  long long v10 = v15[1];
  *(_OWORD *)uint64_t v1 = v15[0];
  *(_OWORD *)(v1 + 16) = v10;
  double result = *(double *)&v16;
  long long v12 = v17;
  *(_OWORD *)(v1 + 32) = v16;
  *(_OWORD *)(v1 + 48) = v12;
  return result;
}

double (*MessageSectionData.Segment.Initial.bodyStructure.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.Segment.Initial.init(bodyStructure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A8529F8C(a1, (uint64_t)v4, &qword_1E9741838);
  sub_1A8529F8C((uint64_t)v4, (uint64_t)v5, &qword_1E9741838);
  return sub_1A8529F8C((uint64_t)v5, a2, &qword_1E9741838);
}

uint64_t sub_1A892C058(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  v13[10] = *(_OWORD *)(a1 + 160);
  char v14 = *(unsigned char *)(a1 + 176);
  long long v3 = *(_OWORD *)(a1 + 80);
  void v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  _OWORD v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  unsigned char v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  v15[10] = *(_OWORD *)(a2 + 160);
  char v16 = *(unsigned char *)(a2 + 176);
  long long v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  _OWORD v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return _s16IMAP2Persistence18MessageSectionDataV7SegmentV7InitialV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)v13, (uint64_t)v15) & 1;
}

uint64_t MessageSectionData.Segment.init(data:isFinal:initial:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MessageSectionData.Segment(0);
  uint64_t v9 = a4 + *(int *)(v8 + 24);
  uint64_t v10 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  *(unsigned char *)(a4 + *(int *)(v8 + 20)) = a2;
  return sub_1A8529F8C(a3, v9, &qword_1E9743180);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    goto LABEL_17;
  }
  uint64_t v5 = v4;
  sub_1A8529F8C(a1 + *(int *)(v4 + 24), (uint64_t)v22, &qword_1E9743180);
  sub_1A8529F8C(a2 + *(int *)(v5 + 24), (uint64_t)v23, &qword_1E9743180);
  sub_1A8529F8C((uint64_t)v22, (uint64_t)v24, &qword_1E9743180);
  if (sub_1A856B98C((uint64_t)v24) != 1)
  {
    sub_1A8529F8C((uint64_t)v23, (uint64_t)v19, &qword_1E9743180);
    if (sub_1A856B98C((uint64_t)v19) != 1)
    {
      sub_1A8529F8C((uint64_t)v22, (uint64_t)v16, &qword_1E9743180);
      sub_1A8529F8C((uint64_t)v23, (uint64_t)v17, &qword_1E9743180);
      sub_1A8529F8C((uint64_t)v16, (uint64_t)v18, &qword_1E9741838);
      if (sub_1A8644FE0((uint64_t)v18) == 1)
      {
        sub_1A8529F8C((uint64_t)v17, (uint64_t)v20, &qword_1E9741838);
        if (sub_1A8644FE0((uint64_t)v20) == 1)
        {
          sub_1A892CB90((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
          goto LABEL_14;
        }
      }
      else
      {
        sub_1A8529F8C((uint64_t)v17, (uint64_t)v15, &qword_1E9741838);
        if (sub_1A8644FE0((uint64_t)v15) != 1)
        {
          sub_1A8529F8C((uint64_t)v16, (uint64_t)v13, &qword_1E9741838);
          sub_1A8644F84((uint64_t)v13, (uint64_t)v25);
          sub_1A8529F8C((uint64_t)v17, (uint64_t)v14, &qword_1E9741838);
          sub_1A8644F84((uint64_t)v14, (uint64_t)v20);
          sub_1A892CB90((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
          sub_1A892CB90((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
          static BodyStructure.__derived_enum_equals(_:_:)();
          char v8 = v7;
          sub_1A892CB90((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
          sub_1A892CB90((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
          if (v8) {
            goto LABEL_14;
          }
LABEL_17:
          char v11 = 0;
          return v11 & 1;
        }
      }
      sub_1A8529F8C((uint64_t)v16, (uint64_t)v20, &qword_1E9741838);
      sub_1A8529F8C((uint64_t)v17, (uint64_t)v21, &qword_1E9741838);
      sub_1A892CB90((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
      sub_1A892CB90((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
      long long v6 = sub_1A856B3DC;
LABEL_12:
      sub_1A892CA54((uint64_t)v20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))v6);
      goto LABEL_17;
    }
LABEL_6:
    sub_1A8529F8C((uint64_t)v22, (uint64_t)v20, &qword_1E9743180);
    sub_1A8529F8C((uint64_t)v23, (uint64_t)v21, &qword_1E9743180);
    sub_1A892CB90((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
    sub_1A892CB90((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
    long long v6 = sub_1A856B35C;
    goto LABEL_12;
  }
  sub_1A8529F8C((uint64_t)v23, (uint64_t)v20, &qword_1E9743180);
  if (sub_1A856B98C((uint64_t)v20) != 1) {
    goto LABEL_6;
  }
LABEL_14:
  uint64_t v9 = sub_1A8A75D38();
  uint64_t v10 = sub_1A8A75D38();
  if (*(void *)(v9 + 16) != *(void *)(v10 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v11 = sub_1A891F754(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1A892C53C()
{
  return sub_1A8A75D08();
}

uint64_t sub_1A892C58C@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X3>, BOOL *a4@<X8>)
{
  if (__s1)
  {
    if (__s2)
    {
      uint64_t __s2 = memcmp(__s1, (const void *)__s2, a3 - (void)__s1);
      *a4 = __s2 == 0;
      return __s2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return __s2;
}

uint64_t _s16IMAP2Persistence18MessageSectionDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
    || !sub_1A8866D34(*(void *)a1, *(void *)a2)
    || *(_DWORD *)(a2 + 12) != *(_DWORD *)(a1 + 12)
    || (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)(a1 + 16)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return == infix(_:_:)(a1 + v4, a2 + v4);
}

uint64_t type metadata accessor for MessageSectionData(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E97431A0);
}

uint64_t sub_1A892C6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MessageSectionData.Segment(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9743188);
}

uint64_t sub_1A892C728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A892C78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A892C7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s16IMAP2Persistence18MessageSectionDataV7SegmentV7InitialV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1A8529F8C(a1, (uint64_t)v13, &qword_1E9741838);
  sub_1A8529F8C(a2, (uint64_t)v14, &qword_1E9741838);
  sub_1A8529F8C((uint64_t)v13, (uint64_t)v15, &qword_1E9741838);
  if (sub_1A8644FE0((uint64_t)v15) != 1)
  {
    sub_1A8529F8C((uint64_t)v14, (uint64_t)v9, &qword_1E9741838);
    if (sub_1A8644FE0((uint64_t)v9) != 1)
    {
      sub_1A8529F8C((uint64_t)v13, (uint64_t)v7, &qword_1E9741838);
      sub_1A8644F84((uint64_t)v7, (uint64_t)v12);
      sub_1A8529F8C((uint64_t)v14, (uint64_t)v8, &qword_1E9741838);
      sub_1A8644F84((uint64_t)v8, (uint64_t)v10);
      sub_1A892CB90(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
      sub_1A892CB90(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
      static BodyStructure.__derived_enum_equals(_:_:)();
      char v4 = v5;
      sub_1A892CB90(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B3DC);
      sub_1A892CB90(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B3DC);
      return v4 & 1;
    }
    goto LABEL_5;
  }
  sub_1A8529F8C((uint64_t)v14, (uint64_t)v10, &qword_1E9741838);
  if (sub_1A8644FE0((uint64_t)v10) != 1)
  {
LABEL_5:
    sub_1A8529F8C((uint64_t)v13, (uint64_t)v10, &qword_1E9741838);
    sub_1A8529F8C((uint64_t)v14, (uint64_t)&v11, &qword_1E9741838);
    sub_1A892CB90(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    sub_1A892CB90(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    sub_1A892CA54((uint64_t)v10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))sub_1A856B3DC);
    char v4 = 0;
    return v4 & 1;
  }
  sub_1A892CB90(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
  char v4 = 1;
  return v4 & 1;
}

uint64_t sub_1A892CA54(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))
{
  uint64_t v22 = *(void *)(a1 + 192);
  uint64_t v23 = *(void *)(a1 + 184);
  uint64_t v4 = *(void *)(a1 + 208);
  uint64_t v21 = *(void *)(a1 + 200);
  uint64_t v5 = *(void *)(a1 + 216);
  uint64_t v6 = *(void *)(a1 + 224);
  uint64_t v7 = *(void *)(a1 + 232);
  uint64_t v8 = *(void *)(a1 + 240);
  long long v19 = *(_OWORD *)(a1 + 264);
  long long v20 = *(_OWORD *)(a1 + 248);
  long long v18 = *(_OWORD *)(a1 + 280);
  long long v16 = *(_OWORD *)(a1 + 312);
  long long v17 = *(_OWORD *)(a1 + 296);
  long long v15 = *(_OWORD *)(a1 + 328);
  uint64_t v9 = *(void *)(a1 + 344);
  uint64_t v10 = *(void *)(a1 + 352);
  char v11 = *(unsigned char *)(a1 + 360);
  char v13 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v13);
  LOBYTE(v14) = v11;
  a2(v23, v22, v21, v4, v5, v6, v7, v8, v20, *((void *)&v20 + 1), v19, *((void *)&v19 + 1), v18, *((void *)&v18 + 1), v17, *((void *)&v17 + 1), v16, *((void *)&v16 + 1), v15,
    *((void *)&v15 + 1),
    v9,
    v10,
    v14);
  return a1;
}

uint64_t sub_1A892CB90(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessageSectionData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1A8A75E28();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v10(v7, v8, v9);
    uint64_t v11 = type metadata accessor for MessageSectionData.Segment(0);
    v7[*(int *)(v11 + 20)] = v8[*(int *)(v11 + 20)];
    uint64_t v12 = *(int *)(v11 + 24);
    char v13 = &v7[v12];
    int v14 = &v8[v12];
    int v15 = v14[176];
    if (v15 == 254 || v15 == 255)
    {
      long long v16 = *((_OWORD *)v14 + 9);
      *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
      *((_OWORD *)v13 + 9) = v16;
      *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
      v13[176] = v14[176];
      long long v17 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v17;
      long long v18 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v18;
      long long v19 = *((_OWORD *)v14 + 1);
      *(_OWORD *)char v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v19;
      long long v20 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v20;
    }
    else
    {
      char v44 = v15 & 1;
      uint64_t v21 = *((void *)v14 + 4);
      uint64_t v22 = *((void *)v14 + 5);
      uint64_t v23 = *((void *)v14 + 6);
      uint64_t v30 = *((void *)v14 + 8);
      uint64_t v31 = *((void *)v14 + 9);
      uint64_t v32 = *((void *)v14 + 10);
      uint64_t v33 = *((void *)v14 + 11);
      uint64_t v34 = *((void *)v14 + 12);
      uint64_t v35 = *((void *)v14 + 13);
      uint64_t v36 = *((void *)v14 + 14);
      uint64_t v37 = *((void *)v14 + 15);
      uint64_t v38 = *((void *)v14 + 16);
      uint64_t v39 = *((void *)v14 + 17);
      uint64_t v40 = *((void *)v14 + 18);
      uint64_t v41 = *((void *)v14 + 19);
      uint64_t v42 = *((void *)v14 + 20);
      uint64_t v43 = *((void *)v14 + 21);
      uint64_t v24 = *(void *)v14;
      uint64_t v25 = *((void *)v14 + 1);
      uint64_t v26 = *((void *)v14 + 2);
      uint64_t v27 = *((void *)v14 + 3);
      uint64_t v28 = *((void *)v14 + 7);
      sub_1A86409B8(*(void *)v14, v25, v26, v27, v21, v22, v23, v28, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
        v41,
        v42,
        v43,
        v15 & 1);
      *(void *)char v13 = v24;
      *((void *)v13 + 1) = v25;
      *((void *)v13 + 2) = v26;
      *((void *)v13 + 3) = v27;
      *((void *)v13 + 4) = v21;
      *((void *)v13 + 5) = v22;
      *((void *)v13 + 6) = v23;
      *((void *)v13 + 7) = v28;
      *((void *)v13 + 8) = v30;
      *((void *)v13 + 9) = v31;
      *((void *)v13 + 10) = v32;
      *((void *)v13 + 11) = v33;
      *((void *)v13 + 12) = v34;
      *((void *)v13 + 13) = v35;
      *((void *)v13 + 14) = v36;
      *((void *)v13 + 15) = v37;
      *((void *)v13 + 16) = v38;
      *((void *)v13 + 17) = v39;
      *((void *)v13 + 18) = v40;
      *((void *)v13 + 19) = v41;
      *((void *)v13 + 20) = v42;
      *((void *)v13 + 21) = v43;
      v13[176] = v44;
    }
  }
  return v5;
}

void destroy for MessageSectionData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + *(int *)(type metadata accessor for MessageSectionData.Segment(0) + 24);
  unsigned int v7 = *(unsigned __int8 *)(v6 + 176);
  if (v7 <= 0xFD) {
    sub_1A856B460(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), *(void *)(v6 + 88), *(void *)(v6 + 96), *(void *)(v6 + 104), *(void *)(v6 + 112), *(void *)(v6 + 120), *(void *)(v6 + 128), *(void *)(v6 + 136), *(void *)(v6 + 144),
  }
      *(void *)(v6 + 152),
      *(void *)(v6 + 160),
      *(void *)(v6 + 168),
      v7 & 1);
}

void *initializeWithCopy for MessageSectionData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A8A75E28();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v8(v5, v6, v7);
  uint64_t v9 = type metadata accessor for MessageSectionData.Segment(0);
  v5[*(int *)(v9 + 20)] = v6[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  int v13 = v12[176];
  if (v13 == 254 || v13 == 255)
  {
    long long v14 = *((_OWORD *)v12 + 9);
    *((_OWORD *)v11 + 8) = *((_OWORD *)v12 + 8);
    *((_OWORD *)v11 + 9) = v14;
    *((_OWORD *)v11 + 10) = *((_OWORD *)v12 + 10);
    v11[176] = v12[176];
    long long v15 = *((_OWORD *)v12 + 5);
    *((_OWORD *)v11 + 4) = *((_OWORD *)v12 + 4);
    *((_OWORD *)v11 + 5) = v15;
    long long v16 = *((_OWORD *)v12 + 7);
    *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
    *((_OWORD *)v11 + 7) = v16;
    long long v17 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v17;
    long long v18 = *((_OWORD *)v12 + 3);
    *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 3) = v18;
  }
  else
  {
    char v42 = v13 & 1;
    uint64_t v19 = *((void *)v12 + 4);
    uint64_t v20 = *((void *)v12 + 5);
    uint64_t v21 = *((void *)v12 + 6);
    uint64_t v28 = *((void *)v12 + 8);
    uint64_t v29 = *((void *)v12 + 9);
    uint64_t v30 = *((void *)v12 + 10);
    uint64_t v31 = *((void *)v12 + 11);
    uint64_t v32 = *((void *)v12 + 12);
    uint64_t v33 = *((void *)v12 + 13);
    uint64_t v34 = *((void *)v12 + 14);
    uint64_t v35 = *((void *)v12 + 15);
    uint64_t v36 = *((void *)v12 + 16);
    uint64_t v37 = *((void *)v12 + 17);
    uint64_t v38 = *((void *)v12 + 18);
    uint64_t v39 = *((void *)v12 + 19);
    uint64_t v40 = *((void *)v12 + 20);
    uint64_t v41 = *((void *)v12 + 21);
    uint64_t v22 = *(void *)v12;
    uint64_t v23 = *((void *)v12 + 1);
    uint64_t v24 = *((void *)v12 + 2);
    uint64_t v25 = *((void *)v12 + 3);
    uint64_t v26 = *((void *)v12 + 7);
    sub_1A86409B8(*(void *)v12, v23, v24, v25, v19, v20, v21, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
      v39,
      v40,
      v41,
      v13 & 1);
    *(void *)uint64_t v11 = v22;
    *((void *)v11 + 1) = v23;
    *((void *)v11 + 2) = v24;
    *((void *)v11 + 3) = v25;
    *((void *)v11 + 4) = v19;
    *((void *)v11 + 5) = v20;
    *((void *)v11 + 6) = v21;
    *((void *)v11 + 7) = v26;
    *((void *)v11 + 8) = v28;
    *((void *)v11 + 9) = v29;
    *((void *)v11 + 10) = v30;
    *((void *)v11 + 11) = v31;
    *((void *)v11 + 12) = v32;
    *((void *)v11 + 13) = v33;
    *((void *)v11 + 14) = v34;
    *((void *)v11 + 15) = v35;
    *((void *)v11 + 16) = v36;
    *((void *)v11 + 17) = v37;
    *((void *)v11 + 18) = v38;
    *((void *)v11 + 19) = v39;
    *((void *)v11 + 20) = v40;
    *((void *)v11 + 21) = v41;
    v11[176] = v42;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for MessageSectionData.Segment(0);
  *(unsigned char *)(v7 + *(int *)(v10 + 20)) = *(unsigned char *)(v8 + *(int *)(v10 + 20));
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = v7 + v11;
  int v13 = (long long *)(v8 + v11);
  int v14 = *(unsigned __int8 *)(v12 + 176);
  int v15 = *((unsigned __int8 *)v13 + 176);
  if (v14 == 254)
  {
    if (v15 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v15 == 254)
  {
    sub_1A892D5BC(v12);
LABEL_12:
    long long v37 = v13[3];
    long long v39 = *v13;
    long long v38 = v13[1];
    *(_OWORD *)(v12 + 32) = v13[2];
    *(_OWORD *)(v12 + 48) = v37;
    *(_OWORD *)uint64_t v12 = v39;
    *(_OWORD *)(v12 + 16) = v38;
    long long v40 = v13[7];
    long long v42 = v13[4];
    long long v41 = v13[5];
    *(_OWORD *)(v12 + 96) = v13[6];
    *(_OWORD *)(v12 + 112) = v40;
    *(_OWORD *)(v12 + 64) = v42;
    *(_OWORD *)(v12 + 80) = v41;
    long long v44 = v13[9];
    long long v43 = v13[10];
    long long v45 = v13[8];
    *(unsigned char *)(v12 + 176) = *((unsigned char *)v13 + 176);
    *(_OWORD *)(v12 + 144) = v44;
    *(_OWORD *)(v12 + 160) = v43;
    *(_OWORD *)(v12 + 128) = v45;
    return a1;
  }
  if (v14 != 255)
  {
    if (v15 != 255)
    {
      char v105 = v15 & 1;
      uint64_t v47 = *((void *)v13 + 1);
      uint64_t v48 = *((void *)v13 + 2);
      uint64_t v49 = *((void *)v13 + 3);
      uint64_t v50 = *((void *)v13 + 4);
      uint64_t v51 = *((void *)v13 + 5);
      uint64_t v53 = *((void *)v13 + 6);
      uint64_t v52 = *((void *)v13 + 7);
      uint64_t v77 = *((void *)v13 + 8);
      uint64_t v79 = *((void *)v13 + 9);
      uint64_t v81 = *((void *)v13 + 10);
      uint64_t v83 = *((void *)v13 + 11);
      uint64_t v85 = *((void *)v13 + 12);
      uint64_t v87 = *((void *)v13 + 13);
      uint64_t v89 = *((void *)v13 + 14);
      uint64_t v91 = *((void *)v13 + 15);
      uint64_t v93 = *((void *)v13 + 16);
      uint64_t v95 = *((void *)v13 + 17);
      uint64_t v97 = *((void *)v13 + 18);
      uint64_t v99 = *((void *)v13 + 19);
      uint64_t v101 = *((void *)v13 + 20);
      uint64_t v103 = *((void *)v13 + 21);
      uint64_t v54 = *(void *)v13;
      uint64_t v55 = v47;
      uint64_t v56 = v48;
      uint64_t v57 = v49;
      uint64_t v58 = v52;
      sub_1A86409B8(v54, v47, v48, v49, v50, v51, v53, v52, v77, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97,
        v99,
        v101,
        v103,
        v15 & 1);
      uint64_t v59 = *(void *)v12;
      uint64_t v60 = *(void *)(v12 + 8);
      *(void *)uint64_t v12 = v54;
      *(void *)(v12 + 8) = v55;
      uint64_t v61 = *(void *)(v12 + 16);
      uint64_t v62 = *(void *)(v12 + 24);
      *(void *)(v12 + 16) = v56;
      *(void *)(v12 + 24) = v57;
      uint64_t v63 = *(void *)(v12 + 32);
      uint64_t v64 = *(void *)(v12 + 40);
      *(void *)(v12 + 32) = v50;
      *(void *)(v12 + 40) = v51;
      uint64_t v65 = *(void *)(v12 + 48);
      uint64_t v66 = *(void *)(v12 + 56);
      *(void *)(v12 + 48) = v53;
      *(void *)(v12 + 56) = v58;
      long long v67 = *(_OWORD *)(v12 + 64);
      long long v68 = *(_OWORD *)(v12 + 80);
      *(void *)(v12 + 64) = v77;
      *(void *)(v12 + 72) = v79;
      *(void *)(v12 + 80) = v81;
      *(void *)(v12 + 88) = v83;
      long long v69 = *(_OWORD *)(v12 + 96);
      long long v70 = *(_OWORD *)(v12 + 112);
      *(void *)(v12 + 96) = v85;
      *(void *)(v12 + 104) = v87;
      *(void *)(v12 + 112) = v89;
      *(void *)(v12 + 120) = v91;
      long long v71 = *(_OWORD *)(v12 + 128);
      long long v72 = *(_OWORD *)(v12 + 144);
      *(void *)(v12 + 128) = v93;
      *(void *)(v12 + 136) = v95;
      *(void *)(v12 + 144) = v97;
      *(void *)(v12 + 152) = v99;
      uint64_t v73 = *(void *)(v12 + 160);
      uint64_t v74 = *(void *)(v12 + 168);
      *(void *)(v12 + 160) = v101;
      *(void *)(v12 + 168) = v103;
      char v75 = *(unsigned char *)(v12 + 176);
      *(unsigned char *)(v12 + 176) = v105;
      sub_1A856B460(v59, v60, v61, v62, v63, v64, v65, v66, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72,
        *((uint64_t *)&v72 + 1),
        v73,
        v74,
        v75);
      return a1;
    }
    sub_1A86414AC(v12);
    goto LABEL_12;
  }
LABEL_7:
  if (v15 != 255)
  {
    char v104 = v15 & 1;
    uint64_t v25 = *((void *)v13 + 1);
    uint64_t v26 = *((void *)v13 + 2);
    uint64_t v27 = *((void *)v13 + 3);
    uint64_t v28 = *((void *)v13 + 4);
    uint64_t v29 = *((void *)v13 + 5);
    uint64_t v31 = *((void *)v13 + 6);
    uint64_t v30 = *((void *)v13 + 7);
    uint64_t v76 = *((void *)v13 + 8);
    uint64_t v78 = *((void *)v13 + 9);
    uint64_t v80 = *((void *)v13 + 10);
    uint64_t v82 = *((void *)v13 + 11);
    uint64_t v84 = *((void *)v13 + 12);
    uint64_t v86 = *((void *)v13 + 13);
    uint64_t v88 = *((void *)v13 + 14);
    uint64_t v90 = *((void *)v13 + 15);
    uint64_t v92 = *((void *)v13 + 16);
    uint64_t v94 = *((void *)v13 + 17);
    uint64_t v96 = *((void *)v13 + 18);
    uint64_t v98 = *((void *)v13 + 19);
    uint64_t v100 = *((void *)v13 + 20);
    uint64_t v102 = *((void *)v13 + 21);
    uint64_t v32 = *(void *)v13;
    uint64_t v33 = v25;
    uint64_t v34 = v26;
    uint64_t v35 = v27;
    uint64_t v36 = v30;
    sub_1A86409B8(v32, v25, v26, v27, v28, v29, v31, v30, v76, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96,
      v98,
      v100,
      v102,
      v15 & 1);
    *(void *)uint64_t v12 = v32;
    *(void *)(v12 + 8) = v33;
    *(void *)(v12 + 16) = v34;
    *(void *)(v12 + 24) = v35;
    *(void *)(v12 + 32) = v28;
    *(void *)(v12 + 40) = v29;
    *(void *)(v12 + 48) = v31;
    *(void *)(v12 + 56) = v36;
    *(void *)(v12 + 64) = v76;
    *(void *)(v12 + 72) = v78;
    *(void *)(v12 + 80) = v80;
    *(void *)(v12 + 88) = v82;
    *(void *)(v12 + 96) = v84;
    *(void *)(v12 + 104) = v86;
    *(void *)(v12 + 112) = v88;
    *(void *)(v12 + 120) = v90;
    *(void *)(v12 + 128) = v92;
    *(void *)(v12 + 136) = v94;
    *(void *)(v12 + 144) = v96;
    *(void *)(v12 + 152) = v98;
    *(void *)(v12 + 160) = v100;
    *(void *)(v12 + 168) = v102;
    *(unsigned char *)(v12 + 176) = v104;
    return a1;
  }
LABEL_8:
  long long v16 = *v13;
  long long v17 = v13[1];
  long long v18 = v13[3];
  *(_OWORD *)(v12 + 32) = v13[2];
  *(_OWORD *)(v12 + 48) = v18;
  *(_OWORD *)uint64_t v12 = v16;
  *(_OWORD *)(v12 + 16) = v17;
  long long v19 = v13[4];
  long long v20 = v13[5];
  long long v21 = v13[7];
  *(_OWORD *)(v12 + 96) = v13[6];
  *(_OWORD *)(v12 + 112) = v21;
  *(_OWORD *)(v12 + 64) = v19;
  *(_OWORD *)(v12 + 80) = v20;
  long long v22 = v13[8];
  long long v23 = v13[9];
  long long v24 = v13[10];
  *(unsigned char *)(v12 + 176) = *((unsigned char *)v13 + 176);
  *(_OWORD *)(v12 + 144) = v23;
  *(_OWORD *)(v12 + 160) = v24;
  *(_OWORD *)(v12 + 128) = v22;
  return a1;
}

uint64_t sub_1A892D5BC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  int v4 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = type metadata accessor for MessageSectionData.Segment(0);
  *(unsigned char *)(v6 + *(int *)(v9 + 20)) = *(unsigned char *)(v7 + *(int *)(v9 + 20));
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  long long v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  long long v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  long long v15 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v15;
  long long v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v16;
  *(unsigned char *)(v11 + 176) = *(unsigned char *)(v12 + 176);
  long long v17 = *(_OWORD *)(v12 + 160);
  long long v18 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v11 + 144) = *(_OWORD *)(v12 + 144);
  *(_OWORD *)(v11 + 160) = v17;
  *(_OWORD *)(v11 + 128) = v18;
  return a1;
}

void *assignWithTake for MessageSectionData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8A75E28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for MessageSectionData.Segment(0);
  v7[*(int *)(v10 + 20)] = v8[*(int *)(v10 + 20)];
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = (uint64_t)&v7[v11];
  long long v13 = &v8[v11];
  int v14 = *(unsigned __int8 *)(v12 + 176);
  if (v14 != 254)
  {
    int v15 = v13[176];
    if (v15 == 254)
    {
      sub_1A892D5BC(v12);
    }
    else if (v14 != 255)
    {
      if (v15 != 255)
      {
        uint64_t v22 = *(void *)v12;
        uint64_t v23 = *(void *)(v12 + 8);
        uint64_t v24 = *(void *)(v12 + 16);
        uint64_t v25 = *(void *)(v12 + 24);
        uint64_t v26 = *(void *)(v12 + 32);
        uint64_t v27 = *(void *)(v12 + 40);
        uint64_t v28 = *(void *)(v12 + 48);
        uint64_t v29 = *(void *)(v12 + 56);
        long long v30 = *(_OWORD *)(v12 + 64);
        long long v31 = *(_OWORD *)(v12 + 80);
        long long v32 = *(_OWORD *)(v12 + 96);
        long long v33 = *(_OWORD *)(v12 + 112);
        long long v34 = *(_OWORD *)(v12 + 128);
        long long v35 = *(_OWORD *)(v12 + 144);
        uint64_t v36 = *(void *)(v12 + 160);
        uint64_t v37 = *(void *)(v12 + 168);
        long long v38 = *((_OWORD *)v13 + 1);
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        *(_OWORD *)(v12 + 16) = v38;
        long long v39 = *((_OWORD *)v13 + 3);
        *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
        *(_OWORD *)(v12 + 48) = v39;
        long long v40 = *((_OWORD *)v13 + 5);
        *(_OWORD *)(v12 + 64) = *((_OWORD *)v13 + 4);
        *(_OWORD *)(v12 + 80) = v40;
        long long v41 = *((_OWORD *)v13 + 7);
        *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
        *(_OWORD *)(v12 + 112) = v41;
        long long v42 = *((_OWORD *)v13 + 9);
        *(_OWORD *)(v12 + 128) = *((_OWORD *)v13 + 8);
        *(_OWORD *)(v12 + 144) = v42;
        *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
        *(unsigned char *)(v12 + 176) = v15 & 1;
        sub_1A856B460(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35,
          *((uint64_t *)&v35 + 1),
          v36,
          v37,
          v14 & 1);
        return a1;
      }
      sub_1A86414AC(v12);
    }
  }
  long long v16 = *((_OWORD *)v13 + 9);
  *(_OWORD *)(v12 + 128) = *((_OWORD *)v13 + 8);
  *(_OWORD *)(v12 + 144) = v16;
  *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
  *(unsigned char *)(v12 + 176) = v13[176];
  long long v17 = *((_OWORD *)v13 + 5);
  *(_OWORD *)(v12 + 64) = *((_OWORD *)v13 + 4);
  *(_OWORD *)(v12 + 80) = v17;
  long long v18 = *((_OWORD *)v13 + 7);
  *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
  *(_OWORD *)(v12 + 112) = v18;
  long long v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v19;
  long long v20 = *((_OWORD *)v13 + 3);
  *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v12 + 48) = v20;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A892D89C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MessageSectionData.Segment(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MessageSectionData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void *sub_1A892D960(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MessageSectionData.Segment(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A892DA08()
{
  uint64_t result = type metadata accessor for MessageSectionData.Segment(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MessageSectionData.Segment(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A8A75E28();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    int v11 = *((unsigned __int8 *)a2 + v8 + 176);
    if (v11 == 254 || v11 == 255)
    {
      long long v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      v9[176] = v10[176];
      long long v13 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v13;
      long long v14 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v14;
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      long long v16 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v16;
    }
    else
    {
      char v41 = v11 & 1;
      uint64_t v18 = *((void *)v10 + 4);
      uint64_t v19 = *((void *)v10 + 5);
      uint64_t v20 = *((void *)v10 + 6);
      uint64_t v27 = *((void *)v10 + 8);
      uint64_t v28 = *((void *)v10 + 9);
      uint64_t v29 = *((void *)v10 + 10);
      uint64_t v30 = *((void *)v10 + 11);
      uint64_t v31 = *((void *)v10 + 12);
      uint64_t v32 = *((void *)v10 + 13);
      uint64_t v33 = *((void *)v10 + 14);
      uint64_t v34 = *((void *)v10 + 15);
      uint64_t v35 = *((void *)v10 + 16);
      uint64_t v36 = *((void *)v10 + 17);
      uint64_t v37 = *((void *)v10 + 18);
      uint64_t v38 = *((void *)v10 + 19);
      uint64_t v39 = *((void *)v10 + 20);
      uint64_t v40 = *((void *)v10 + 21);
      uint64_t v21 = *(void *)v10;
      uint64_t v22 = *((void *)v10 + 1);
      uint64_t v23 = *((void *)v10 + 2);
      uint64_t v24 = *((void *)v10 + 3);
      uint64_t v25 = *((void *)v10 + 7);
      sub_1A86409B8(*(void *)v10, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v11 & 1);
      *(void *)uint64_t v9 = v21;
      *((void *)v9 + 1) = v22;
      *((void *)v9 + 2) = v23;
      *((void *)v9 + 3) = v24;
      *((void *)v9 + 4) = v18;
      *((void *)v9 + 5) = v19;
      *((void *)v9 + 6) = v20;
      *((void *)v9 + 7) = v25;
      *((void *)v9 + 8) = v27;
      *((void *)v9 + 9) = v28;
      *((void *)v9 + 10) = v29;
      *((void *)v9 + 11) = v30;
      *((void *)v9 + 12) = v31;
      *((void *)v9 + 13) = v32;
      *((void *)v9 + 14) = v33;
      *((void *)v9 + 15) = v34;
      *((void *)v9 + 16) = v35;
      *((void *)v9 + 17) = v36;
      *((void *)v9 + 18) = v37;
      *((void *)v9 + 19) = v38;
      *((void *)v9 + 20) = v39;
      *((void *)v9 + 21) = v40;
      v9[176] = v41;
    }
  }
  return a1;
}

void destroy for MessageSectionData.Segment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 <= 0xFD) {
    sub_1A856B460(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), *(void *)(v5 + 136), *(void *)(v5 + 144),
  }
      *(void *)(v5 + 152),
      *(void *)(v5 + 160),
      *(void *)(v5 + 168),
      v6 & 1);
}

uint64_t initializeWithCopy for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  int v10 = *(unsigned __int8 *)(a2 + v7 + 176);
  if (v10 == 254 || v10 == 255)
  {
    long long v11 = *((_OWORD *)v9 + 9);
    *(_OWORD *)(v8 + 128) = *((_OWORD *)v9 + 8);
    *(_OWORD *)(v8 + 144) = v11;
    *(_OWORD *)(v8 + 160) = *((_OWORD *)v9 + 10);
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    long long v12 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 64) = *((_OWORD *)v9 + 4);
    *(_OWORD *)(v8 + 80) = v12;
    long long v13 = *((_OWORD *)v9 + 7);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v13;
    long long v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v14;
    long long v15 = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v15;
  }
  else
  {
    char v39 = v10 & 1;
    uint64_t v16 = v9[4];
    uint64_t v17 = v9[5];
    uint64_t v18 = v9[6];
    uint64_t v25 = v9[8];
    uint64_t v26 = v9[9];
    uint64_t v27 = v9[10];
    uint64_t v28 = v9[11];
    uint64_t v29 = v9[12];
    uint64_t v30 = v9[13];
    uint64_t v31 = v9[14];
    uint64_t v32 = v9[15];
    uint64_t v33 = v9[16];
    uint64_t v34 = v9[17];
    uint64_t v35 = v9[18];
    uint64_t v36 = v9[19];
    uint64_t v37 = v9[20];
    uint64_t v38 = v9[21];
    uint64_t v19 = *v9;
    uint64_t v20 = v9[1];
    uint64_t v21 = v9[2];
    uint64_t v22 = v9[3];
    uint64_t v23 = v9[7];
    sub_1A86409B8(*v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(void *)uint64_t v8 = v19;
    *(void *)(v8 + 8) = v20;
    *(void *)(v8 + 16) = v21;
    *(void *)(v8 + 24) = v22;
    *(void *)(v8 + 32) = v16;
    *(void *)(v8 + 40) = v17;
    *(void *)(v8 + 48) = v18;
    *(void *)(v8 + 56) = v23;
    *(void *)(v8 + 64) = v25;
    *(void *)(v8 + 72) = v26;
    *(void *)(v8 + 80) = v27;
    *(void *)(v8 + 88) = v28;
    *(void *)(v8 + 96) = v29;
    *(void *)(v8 + 104) = v30;
    *(void *)(v8 + 112) = v31;
    *(void *)(v8 + 120) = v32;
    *(void *)(v8 + 128) = v33;
    *(void *)(v8 + 136) = v34;
    *(void *)(v8 + 144) = v35;
    *(void *)(v8 + 152) = v36;
    *(void *)(v8 + 160) = v37;
    *(void *)(v8 + 168) = v38;
    *(unsigned char *)(v8 + 176) = v39;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  int v11 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 254)
  {
    if (v11 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v11 == 254)
  {
    sub_1A892D5BC(v8);
LABEL_12:
    long long v33 = v9[3];
    long long v35 = *v9;
    long long v34 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v33;
    *(_OWORD *)uint64_t v8 = v35;
    *(_OWORD *)(v8 + 16) = v34;
    long long v36 = v9[7];
    long long v38 = v9[4];
    long long v37 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v36;
    *(_OWORD *)(v8 + 64) = v38;
    *(_OWORD *)(v8 + 80) = v37;
    long long v40 = v9[9];
    long long v39 = v9[10];
    long long v41 = v9[8];
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    *(_OWORD *)(v8 + 144) = v40;
    *(_OWORD *)(v8 + 160) = v39;
    *(_OWORD *)(v8 + 128) = v41;
    return a1;
  }
  if (v10 != 255)
  {
    if (v11 != 255)
    {
      char v101 = v11 & 1;
      uint64_t v43 = *((void *)v9 + 1);
      uint64_t v44 = *((void *)v9 + 2);
      uint64_t v45 = *((void *)v9 + 3);
      uint64_t v46 = *((void *)v9 + 4);
      uint64_t v47 = *((void *)v9 + 5);
      uint64_t v49 = *((void *)v9 + 6);
      uint64_t v48 = *((void *)v9 + 7);
      uint64_t v73 = *((void *)v9 + 8);
      uint64_t v75 = *((void *)v9 + 9);
      uint64_t v77 = *((void *)v9 + 10);
      uint64_t v79 = *((void *)v9 + 11);
      uint64_t v81 = *((void *)v9 + 12);
      uint64_t v83 = *((void *)v9 + 13);
      uint64_t v85 = *((void *)v9 + 14);
      uint64_t v87 = *((void *)v9 + 15);
      uint64_t v89 = *((void *)v9 + 16);
      uint64_t v91 = *((void *)v9 + 17);
      uint64_t v93 = *((void *)v9 + 18);
      uint64_t v95 = *((void *)v9 + 19);
      uint64_t v97 = *((void *)v9 + 20);
      uint64_t v99 = *((void *)v9 + 21);
      uint64_t v50 = *(void *)v9;
      uint64_t v51 = v43;
      uint64_t v52 = v44;
      uint64_t v53 = v45;
      uint64_t v54 = v48;
      sub_1A86409B8(v50, v43, v44, v45, v46, v47, v49, v48, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      uint64_t v55 = *(void *)v8;
      uint64_t v56 = *(void *)(v8 + 8);
      *(void *)uint64_t v8 = v50;
      *(void *)(v8 + 8) = v51;
      uint64_t v57 = *(void *)(v8 + 16);
      uint64_t v58 = *(void *)(v8 + 24);
      *(void *)(v8 + 16) = v52;
      *(void *)(v8 + 24) = v53;
      uint64_t v59 = *(void *)(v8 + 32);
      uint64_t v60 = *(void *)(v8 + 40);
      *(void *)(v8 + 32) = v46;
      *(void *)(v8 + 40) = v47;
      uint64_t v61 = *(void *)(v8 + 48);
      uint64_t v62 = *(void *)(v8 + 56);
      *(void *)(v8 + 48) = v49;
      *(void *)(v8 + 56) = v54;
      long long v63 = *(_OWORD *)(v8 + 64);
      long long v64 = *(_OWORD *)(v8 + 80);
      *(void *)(v8 + 64) = v73;
      *(void *)(v8 + 72) = v75;
      *(void *)(v8 + 80) = v77;
      *(void *)(v8 + 88) = v79;
      long long v65 = *(_OWORD *)(v8 + 96);
      long long v66 = *(_OWORD *)(v8 + 112);
      *(void *)(v8 + 96) = v81;
      *(void *)(v8 + 104) = v83;
      *(void *)(v8 + 112) = v85;
      *(void *)(v8 + 120) = v87;
      long long v67 = *(_OWORD *)(v8 + 128);
      long long v68 = *(_OWORD *)(v8 + 144);
      *(void *)(v8 + 128) = v89;
      *(void *)(v8 + 136) = v91;
      *(void *)(v8 + 144) = v93;
      *(void *)(v8 + 152) = v95;
      uint64_t v69 = *(void *)(v8 + 160);
      uint64_t v70 = *(void *)(v8 + 168);
      *(void *)(v8 + 160) = v97;
      *(void *)(v8 + 168) = v99;
      char v71 = *(unsigned char *)(v8 + 176);
      *(unsigned char *)(v8 + 176) = v101;
      sub_1A856B460(v55, v56, v57, v58, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, *((uint64_t *)&v64 + 1), v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, *((uint64_t *)&v67 + 1), v68,
        *((uint64_t *)&v68 + 1),
        v69,
        v70,
        v71);
      return a1;
    }
    sub_1A86414AC(v8);
    goto LABEL_12;
  }
LABEL_7:
  if (v11 != 255)
  {
    char v100 = v11 & 1;
    uint64_t v21 = *((void *)v9 + 1);
    uint64_t v22 = *((void *)v9 + 2);
    uint64_t v23 = *((void *)v9 + 3);
    uint64_t v24 = *((void *)v9 + 4);
    uint64_t v25 = *((void *)v9 + 5);
    uint64_t v27 = *((void *)v9 + 6);
    uint64_t v26 = *((void *)v9 + 7);
    uint64_t v72 = *((void *)v9 + 8);
    uint64_t v74 = *((void *)v9 + 9);
    uint64_t v76 = *((void *)v9 + 10);
    uint64_t v78 = *((void *)v9 + 11);
    uint64_t v80 = *((void *)v9 + 12);
    uint64_t v82 = *((void *)v9 + 13);
    uint64_t v84 = *((void *)v9 + 14);
    uint64_t v86 = *((void *)v9 + 15);
    uint64_t v88 = *((void *)v9 + 16);
    uint64_t v90 = *((void *)v9 + 17);
    uint64_t v92 = *((void *)v9 + 18);
    uint64_t v94 = *((void *)v9 + 19);
    uint64_t v96 = *((void *)v9 + 20);
    uint64_t v98 = *((void *)v9 + 21);
    uint64_t v28 = *(void *)v9;
    uint64_t v29 = v21;
    uint64_t v30 = v22;
    uint64_t v31 = v23;
    uint64_t v32 = v26;
    sub_1A86409B8(v28, v21, v22, v23, v24, v25, v27, v26, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    *(void *)uint64_t v8 = v28;
    *(void *)(v8 + 8) = v29;
    *(void *)(v8 + 16) = v30;
    *(void *)(v8 + 24) = v31;
    *(void *)(v8 + 32) = v24;
    *(void *)(v8 + 40) = v25;
    *(void *)(v8 + 48) = v27;
    *(void *)(v8 + 56) = v32;
    *(void *)(v8 + 64) = v72;
    *(void *)(v8 + 72) = v74;
    *(void *)(v8 + 80) = v76;
    *(void *)(v8 + 88) = v78;
    *(void *)(v8 + 96) = v80;
    *(void *)(v8 + 104) = v82;
    *(void *)(v8 + 112) = v84;
    *(void *)(v8 + 120) = v86;
    *(void *)(v8 + 128) = v88;
    *(void *)(v8 + 136) = v90;
    *(void *)(v8 + 144) = v92;
    *(void *)(v8 + 152) = v94;
    *(void *)(v8 + 160) = v96;
    *(void *)(v8 + 168) = v98;
    *(unsigned char *)(v8 + 176) = v100;
    return a1;
  }
LABEL_8:
  long long v12 = *v9;
  long long v13 = v9[1];
  long long v14 = v9[3];
  *(_OWORD *)(v8 + 32) = v9[2];
  *(_OWORD *)(v8 + 48) = v14;
  *(_OWORD *)uint64_t v8 = v12;
  *(_OWORD *)(v8 + 16) = v13;
  long long v15 = v9[4];
  long long v16 = v9[5];
  long long v17 = v9[7];
  *(_OWORD *)(v8 + 96) = v9[6];
  *(_OWORD *)(v8 + 112) = v17;
  *(_OWORD *)(v8 + 64) = v15;
  *(_OWORD *)(v8 + 80) = v16;
  long long v18 = v9[8];
  long long v19 = v9[9];
  long long v20 = v9[10];
  *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
  *(_OWORD *)(v8 + 144) = v19;
  *(_OWORD *)(v8 + 160) = v20;
  *(_OWORD *)(v8 + 128) = v18;
  return a1;
}

uint64_t initializeWithTake for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v10;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v11 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v11;
  long long v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  long long v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  long long v14 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v14;
  return a1;
}

uint64_t assignWithTake for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  if (v10 != 254)
  {
    int v11 = *(unsigned __int8 *)(v9 + 176);
    if (v11 == 254)
    {
      sub_1A892D5BC(v8);
    }
    else if (v10 != 255)
    {
      if (v11 != 255)
      {
        uint64_t v18 = *(void *)v8;
        uint64_t v19 = *(void *)(v8 + 8);
        uint64_t v20 = *(void *)(v8 + 16);
        uint64_t v21 = *(void *)(v8 + 24);
        uint64_t v22 = *(void *)(v8 + 32);
        uint64_t v23 = *(void *)(v8 + 40);
        uint64_t v24 = *(void *)(v8 + 48);
        uint64_t v25 = *(void *)(v8 + 56);
        long long v26 = *(_OWORD *)(v8 + 64);
        long long v27 = *(_OWORD *)(v8 + 80);
        long long v28 = *(_OWORD *)(v8 + 96);
        long long v29 = *(_OWORD *)(v8 + 112);
        long long v30 = *(_OWORD *)(v8 + 128);
        long long v31 = *(_OWORD *)(v8 + 144);
        uint64_t v32 = *(void *)(v8 + 160);
        uint64_t v33 = *(void *)(v8 + 168);
        long long v34 = *(_OWORD *)(v9 + 16);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *(_OWORD *)(v8 + 16) = v34;
        long long v35 = *(_OWORD *)(v9 + 48);
        *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
        *(_OWORD *)(v8 + 48) = v35;
        long long v36 = *(_OWORD *)(v9 + 80);
        *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
        *(_OWORD *)(v8 + 80) = v36;
        long long v37 = *(_OWORD *)(v9 + 112);
        *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
        *(_OWORD *)(v8 + 112) = v37;
        long long v38 = *(_OWORD *)(v9 + 144);
        *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
        *(_OWORD *)(v8 + 144) = v38;
        *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
        *(unsigned char *)(v8 + 176) = v11 & 1;
        sub_1A856B460(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
          *((uint64_t *)&v31 + 1),
          v32,
          v33,
          v10 & 1);
        return a1;
      }
      sub_1A86414AC(v8);
    }
  }
  long long v12 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v13 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v13;
  long long v14 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v14;
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  long long v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData.Segment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A892E5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for MessageSectionData.Segment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A892E6B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A8A75E28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1A892E774()
{
  uint64_t result = sub_1A8A75E28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for MessageSectionData.Segment.Initial(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 != 255) {
    sub_1A856B460(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
  }
      *(void *)(a1 + 152),
      *(void *)(a1 + 160),
      *(void *)(a1 + 168),
      v1 & 1);
}

uint64_t initializeWithCopy for MessageSectionData.Segment.Initial(uint64_t a1, uint64_t *a2)
{
  int v3 = *((unsigned __int8 *)a2 + 176);
  if (v3 == 255)
  {
    long long v4 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v4;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    long long v5 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v5;
    long long v6 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v6;
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    char v32 = v3 & 1;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v12 = a2[7];
    uint64_t v19 = a2[9];
    uint64_t v20 = a2[10];
    uint64_t v21 = a2[11];
    uint64_t v22 = a2[12];
    uint64_t v23 = a2[13];
    uint64_t v24 = a2[14];
    uint64_t v25 = a2[15];
    uint64_t v26 = a2[16];
    uint64_t v27 = a2[17];
    uint64_t v28 = a2[18];
    uint64_t v29 = a2[19];
    uint64_t v30 = a2[20];
    uint64_t v31 = a2[21];
    uint64_t v13 = a2[8];
    uint64_t v14 = *a2;
    uint64_t v15 = a2[1];
    uint64_t v16 = a2[2];
    uint64_t v17 = a2[3];
    sub_1A86409B8(*a2, v15, v16, v17, v9, v10, v11, v12, v13, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v3 & 1);
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v15;
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v17;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v19;
    *(void *)(a1 + 80) = v20;
    *(void *)(a1 + 88) = v21;
    *(void *)(a1 + 96) = v22;
    *(void *)(a1 + 104) = v23;
    *(void *)(a1 + 112) = v24;
    *(void *)(a1 + 120) = v25;
    *(void *)(a1 + 128) = v26;
    *(void *)(a1 + 136) = v27;
    *(void *)(a1 + 144) = v28;
    *(void *)(a1 + 152) = v29;
    *(void *)(a1 + 160) = v30;
    *(void *)(a1 + 168) = v31;
    *(unsigned char *)(a1 + 176) = v32;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData.Segment.Initial(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 176);
  if (*(unsigned __int8 *)(a1 + 176) == 255)
  {
    if (v4 == 255)
    {
      long long v14 = *a2;
      long long v15 = a2[1];
      long long v16 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)a1 = v14;
      *(_OWORD *)(a1 + 16) = v15;
      long long v17 = a2[4];
      long long v18 = a2[5];
      long long v19 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v19;
      *(_OWORD *)(a1 + 64) = v17;
      *(_OWORD *)(a1 + 80) = v18;
      long long v20 = a2[8];
      long long v21 = a2[9];
      long long v22 = a2[10];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(_OWORD *)(a1 + 144) = v21;
      *(_OWORD *)(a1 + 160) = v22;
      *(_OWORD *)(a1 + 128) = v20;
    }
    else
    {
      char v86 = v4 & 1;
      uint64_t v49 = *((void *)a2 + 3);
      uint64_t v50 = *((void *)a2 + 4);
      uint64_t v51 = *((void *)a2 + 5);
      uint64_t v52 = *((void *)a2 + 6);
      uint64_t v60 = *((void *)a2 + 9);
      uint64_t v62 = *((void *)a2 + 10);
      uint64_t v64 = *((void *)a2 + 11);
      uint64_t v66 = *((void *)a2 + 12);
      uint64_t v68 = *((void *)a2 + 13);
      uint64_t v70 = *((void *)a2 + 14);
      uint64_t v72 = *((void *)a2 + 15);
      uint64_t v74 = *((void *)a2 + 16);
      uint64_t v76 = *((void *)a2 + 17);
      uint64_t v78 = *((void *)a2 + 18);
      uint64_t v80 = *((void *)a2 + 19);
      uint64_t v82 = *((void *)a2 + 20);
      uint64_t v84 = *((void *)a2 + 21);
      uint64_t v53 = *((void *)a2 + 8);
      uint64_t v54 = *(void *)a2;
      uint64_t v55 = *((void *)a2 + 1);
      uint64_t v56 = *((void *)a2 + 2);
      uint64_t v57 = *((void *)a2 + 7);
      sub_1A86409B8(*(void *)a2, v55, v56, v49, v50, v51, v52, v57, v53, v60, v62, v64, v66, v68, v70, v72, v74, v76, v78,
        v80,
        v82,
        v84,
        v4 & 1);
      *(void *)a1 = v54;
      *(void *)(a1 + 8) = v55;
      *(void *)(a1 + 16) = v56;
      *(void *)(a1 + 24) = v49;
      *(void *)(a1 + 32) = v50;
      *(void *)(a1 + 40) = v51;
      *(void *)(a1 + 48) = v52;
      *(void *)(a1 + 56) = v57;
      *(void *)(a1 + 64) = v53;
      *(void *)(a1 + 72) = v60;
      *(void *)(a1 + 80) = v62;
      *(void *)(a1 + 88) = v64;
      *(void *)(a1 + 96) = v66;
      *(void *)(a1 + 104) = v68;
      *(void *)(a1 + 112) = v70;
      *(void *)(a1 + 120) = v72;
      *(void *)(a1 + 128) = v74;
      *(void *)(a1 + 136) = v76;
      *(void *)(a1 + 144) = v78;
      *(void *)(a1 + 152) = v80;
      *(void *)(a1 + 160) = v82;
      *(void *)(a1 + 168) = v84;
      *(unsigned char *)(a1 + 176) = v86;
    }
  }
  else if (v4 == 255)
  {
    sub_1A86414AC(a1);
    long long v5 = a2[3];
    long long v7 = *a2;
    long long v6 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v6;
    long long v8 = a2[7];
    long long v10 = a2[4];
    long long v9 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v8;
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 80) = v9;
    long long v12 = a2[9];
    long long v11 = a2[10];
    long long v13 = a2[8];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(_OWORD *)(a1 + 144) = v12;
    *(_OWORD *)(a1 + 160) = v11;
    *(_OWORD *)(a1 + 128) = v13;
  }
  else
  {
    char v85 = v4 & 1;
    uint64_t v23 = *(void *)a2;
    uint64_t v24 = *((void *)a2 + 1);
    uint64_t v25 = *((void *)a2 + 2);
    uint64_t v26 = *((void *)a2 + 3);
    uint64_t v27 = *((void *)a2 + 4);
    uint64_t v28 = *((void *)a2 + 5);
    uint64_t v29 = *((void *)a2 + 6);
    uint64_t v30 = *((void *)a2 + 7);
    uint64_t v59 = *((void *)a2 + 9);
    uint64_t v61 = *((void *)a2 + 10);
    uint64_t v63 = *((void *)a2 + 11);
    uint64_t v65 = *((void *)a2 + 12);
    uint64_t v67 = *((void *)a2 + 13);
    uint64_t v69 = *((void *)a2 + 14);
    uint64_t v71 = *((void *)a2 + 15);
    uint64_t v73 = *((void *)a2 + 16);
    uint64_t v75 = *((void *)a2 + 17);
    uint64_t v77 = *((void *)a2 + 18);
    uint64_t v79 = *((void *)a2 + 19);
    uint64_t v81 = *((void *)a2 + 20);
    uint64_t v83 = *((void *)a2 + 21);
    uint64_t v31 = *((void *)a2 + 8);
    sub_1A86409B8(*(void *)a2, v24, v25, v26, v27, v28, v29, v30, v31, v59, v61, v63, v65, v67, v69, v71, v73, v75, v77,
      v79,
      v81,
      v83,
      v4 & 1);
    uint64_t v32 = *(void *)a1;
    uint64_t v33 = *(void *)(a1 + 8);
    *(void *)a1 = v23;
    *(void *)(a1 + 8) = v24;
    uint64_t v34 = *(void *)(a1 + 16);
    uint64_t v35 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v25;
    *(void *)(a1 + 24) = v26;
    uint64_t v36 = *(void *)(a1 + 32);
    uint64_t v37 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = v27;
    *(void *)(a1 + 40) = v28;
    uint64_t v38 = *(void *)(a1 + 48);
    uint64_t v39 = *(void *)(a1 + 56);
    *(void *)(a1 + 48) = v29;
    *(void *)(a1 + 56) = v30;
    long long v40 = *(_OWORD *)(a1 + 64);
    long long v41 = *(_OWORD *)(a1 + 80);
    *(void *)(a1 + 64) = v31;
    *(void *)(a1 + 72) = v59;
    *(void *)(a1 + 80) = v61;
    *(void *)(a1 + 88) = v63;
    long long v42 = *(_OWORD *)(a1 + 96);
    long long v43 = *(_OWORD *)(a1 + 112);
    *(void *)(a1 + 96) = v65;
    *(void *)(a1 + 104) = v67;
    *(void *)(a1 + 112) = v69;
    *(void *)(a1 + 120) = v71;
    long long v44 = *(_OWORD *)(a1 + 128);
    long long v45 = *(_OWORD *)(a1 + 144);
    *(void *)(a1 + 128) = v73;
    *(void *)(a1 + 136) = v75;
    *(void *)(a1 + 144) = v77;
    *(void *)(a1 + 152) = v79;
    uint64_t v46 = *(void *)(a1 + 160);
    uint64_t v47 = *(void *)(a1 + 168);
    *(void *)(a1 + 160) = v81;
    *(void *)(a1 + 168) = v83;
    char v48 = *(unsigned char *)(a1 + 176);
    *(unsigned char *)(a1 + 176) = v85;
    sub_1A856B460(v32, v33, v34, v35, v36, v37, v38, v39, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45,
      *((uint64_t *)&v45 + 1),
      v46,
      v47,
      v48);
  }
  return a1;
}

__n128 __swift_memcpy177_8_1(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for MessageSectionData.Segment.Initial(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 176);
  if (v4 != 255)
  {
    int v5 = *(unsigned __int8 *)(a2 + 176);
    if (v5 != 255)
    {
      uint64_t v11 = *(void *)a1;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 48);
      uint64_t v18 = *(void *)(a1 + 56);
      long long v19 = *(_OWORD *)(a1 + 64);
      long long v20 = *(_OWORD *)(a1 + 80);
      long long v21 = *(_OWORD *)(a1 + 96);
      long long v22 = *(_OWORD *)(a1 + 112);
      long long v23 = *(_OWORD *)(a1 + 128);
      long long v24 = *(_OWORD *)(a1 + 144);
      uint64_t v25 = *(void *)(a1 + 160);
      uint64_t v26 = *(void *)(a1 + 168);
      long long v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v27;
      long long v28 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v28;
      long long v29 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v29;
      long long v30 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v30;
      long long v31 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v31;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 176) = v5 & 1;
      sub_1A856B460(v11, v12, v13, v14, v15, v16, v17, v18, v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
        *((uint64_t *)&v24 + 1),
        v25,
        v26,
        v4 & 1);
      return a1;
    }
    sub_1A86414AC(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData.Segment.Initial(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 177)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageSectionData.Segment.Initial(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 176) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSectionData.Segment.Initial()
{
  return &type metadata for MessageSectionData.Segment.Initial;
}

uint64_t sub_1A892EF50@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A892C58C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t MessageSectionData.Concatenator.init(expectedMessageSize:inMemoryThreshold:baseDirectory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  int v5 = (char *)a4 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
  uint64_t v6 = sub_1A8A74998();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a3, v6);
  _s12ConcatenatorV5StateOMa(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s12ConcatenatorV5StateO6NoDataVMa(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E97463F8);
}

uint64_t _s12ConcatenatorV5StateOMa(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9746418);
}

uint64_t MessageSectionData.Concatenator.appendData(_:)(uint64_t a1)
{
  return sub_1A892F064(a1);
}

uint64_t sub_1A892F064(uint64_t a1)
{
  uint64_t v2 = sub_1A8A75E28();
  uint64_t v109 = *(void *)(v2 - 8);
  uint64_t v110 = v2;
  MEMORY[0x1F4188790](v2);
  char v101 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  MEMORY[0x1F4188790](v102);
  uint64_t v112 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v117 = (char *)&v100 - v6;
  uint64_t v7 = sub_1A8A74998();
  uint64_t v104 = *(void *)(v7 - 8);
  uint64_t v105 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v106 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = _s13TemporaryDataOMa();
  MEMORY[0x1F4188790](v111);
  uint64_t v116 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v115 = (char *)&v100 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v100 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v100 = (uint64_t)&v100 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v108 = (uint64_t)&v100 - v18;
  uint64_t v103 = _s12ConcatenatorV5StateO6NoDataVMa(0);
  MEMORY[0x1F4188790](v103);
  __int16 v107 = (uint64_t *)((char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = _s12ConcatenatorV5StateOMa(0);
  MEMORY[0x1F4188790](v20);
  long long v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v100 - v24;
  MEMORY[0x1F4188790](v26);
  int v118 = (char *)&v100 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746428);
  uint64_t v29 = v28 - 8;
  MEMORY[0x1F4188790](v28);
  long long v31 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for MessageSectionData.Segment(0);
  uint64_t v119 = a1 + *(int *)(v32 + 24);
  sub_1A8934FE0(v119, (uint64_t)v149);
  uint64_t v33 = *(int *)(v32 + 20);
  uint64_t v122 = a1;
  uint64_t v120 = v33;
  char v34 = *(unsigned char *)(a1 + v33);
  uint64_t v35 = (uint64_t)&v31[*(int *)(v29 + 56)];
  uint64_t v36 = *(int *)(v29 + 72);
  sub_1A8935164(v150, (uint64_t)v31, _s12ConcatenatorV5StateOMa);
  uint64_t v114 = v35;
  sub_1A8934FE0((uint64_t)v149, v35);
  v31[v36] = v34;
  uint64_t v37 = (uint64_t)v31;
  uint64_t v121 = v20;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v42 = (uint64_t)v14;
    uint64_t v43 = (uint64_t)v115;
    uint64_t v44 = (uint64_t)v116;
    uint64_t v45 = (uint64_t)v117;
    int v118 = v22;
    sub_1A8935164(v37, (uint64_t)v25, _s12ConcatenatorV5StateOMa);
    sub_1A8934FE0((uint64_t)v149, (uint64_t)&v137);
    if (sub_1A856B98C((uint64_t)&v137) != 1)
    {
      sub_1A8934FE0((uint64_t)v149, (uint64_t)v136);
      sub_1A89351CC((uint64_t)v136, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
      sub_1A8932F60(v150, _s12ConcatenatorV5StateOMa);
      long long v40 = _s12ConcatenatorV5StateO9ReceivingVMa;
      uint64_t v41 = (uint64_t)v25;
      goto LABEL_13;
    }
    if ((v34 & 1) == 0)
    {
      uint64_t v64 = v45;
      sub_1A89350FC((uint64_t)v25, v45, _s12ConcatenatorV5StateO9ReceivingVMa);
      sub_1A8935164(v45, v42, (uint64_t (*)(void))_s13TemporaryDataOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A8932F60(v45, (uint64_t (*)(void))_s13TemporaryDataOMa);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v45, v42, v110);
        sub_1A8A75DE8();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        uint64_t v75 = v113;
        sub_1A89356C0();
        if (v75)
        {
          swift_release();
          uint64_t v76 = v45;
LABEL_28:
          sub_1A8932F60(v76, _s12ConcatenatorV5StateO9ReceivingVMa);
LABEL_34:
          sub_1A8934FE0(v114, (uint64_t)v136);
          uint64_t v72 = v136;
LABEL_35:
          sub_1A89351CC((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
          return sub_1A8932F60(v37, _s12ConcatenatorV5StateOMa);
        }
        swift_release();
      }
      uint64_t v79 = v150;
      sub_1A8932F60(v150, _s12ConcatenatorV5StateOMa);
      sub_1A89350FC(v64, v79, _s12ConcatenatorV5StateO9ReceivingVMa);
      swift_storeEnumTagMultiPayload();
      goto LABEL_34;
    }
    uint64_t v46 = v112;
    sub_1A89350FC((uint64_t)v25, v112, _s12ConcatenatorV5StateO9ReceivingVMa);
    uint64_t v47 = v43;
    sub_1A8935164(v46, v43, (uint64_t (*)(void))_s13TemporaryDataOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A8932F60(v46, (uint64_t (*)(void))_s13TemporaryDataOMa);
      uint64_t v48 = v109;
      uint64_t v49 = v110;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v46, v47, v110);
      sub_1A8A75DE8();
      uint64_t v50 = v112;
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = v113;
    }
    else
    {
      uint64_t v73 = v113;
      sub_1A89356C0();
      uint64_t v51 = v73;
      if (v73)
      {
LABEL_27:
        swift_release();
        uint64_t v76 = v112;
        goto LABEL_28;
      }
      swift_release();
      uint64_t v48 = v109;
      uint64_t v49 = v110;
      uint64_t v50 = v112;
    }
    sub_1A8935164(v50, v44, (uint64_t (*)(void))_s13TemporaryDataOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v74 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v101, v44, v49);
LABEL_33:
      uint64_t v80 = v150;
      sub_1A8932F60(v150, _s12ConcatenatorV5StateOMa);
      uint64_t v81 = v50 + *(int *)(v102 + 20);
      long long v82 = *(_OWORD *)(v81 + 144);
      long long v132 = *(_OWORD *)(v81 + 128);
      long long v133 = v82;
      long long v134 = *(_OWORD *)(v81 + 160);
      char v135 = *(unsigned char *)(v81 + 176);
      long long v83 = *(_OWORD *)(v81 + 80);
      long long v128 = *(_OWORD *)(v81 + 64);
      long long v129 = v83;
      long long v84 = *(_OWORD *)(v81 + 112);
      long long v130 = *(_OWORD *)(v81 + 96);
      long long v131 = v84;
      long long v85 = *(_OWORD *)(v81 + 48);
      long long v126 = *(_OWORD *)(v81 + 32);
      long long v127 = v85;
      long long v86 = *(_OWORD *)(v81 + 16);
      long long v124 = *(_OWORD *)v81;
      long long v125 = v86;
      sub_1A89351CC((uint64_t)&v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
      sub_1A8932F60(v50, _s12ConcatenatorV5StateO9ReceivingVMa);
      uint64_t v87 = (uint64_t)v118;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v118, v74, v49);
      uint64_t v88 = v87 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      long long v89 = v133;
      *(_OWORD *)(v88 + 128) = v132;
      *(_OWORD *)(v88 + 144) = v89;
      *(_OWORD *)(v88 + 160) = v134;
      *(unsigned char *)(v88 + 176) = v135;
      long long v90 = v129;
      *(_OWORD *)(v88 + 64) = v128;
      *(_OWORD *)(v88 + 80) = v90;
      long long v91 = v131;
      *(_OWORD *)(v88 + 96) = v130;
      *(_OWORD *)(v88 + 112) = v91;
      long long v92 = v125;
      *(_OWORD *)uint64_t v88 = v124;
      *(_OWORD *)(v88 + 16) = v92;
      long long v93 = v127;
      *(_OWORD *)(v88 + 32) = v126;
      *(_OWORD *)(v88 + 48) = v93;
      swift_storeEnumTagMultiPayload();
      sub_1A89350FC(v87, v80, _s12ConcatenatorV5StateOMa);
      goto LABEL_34;
    }
    uint64_t v74 = v101;
    static DispatchData.makeMappedRead(fileDescriptor:count:)(*(_DWORD *)(*(void *)v44 + 16), *(void *)(*(void *)v44 + 24));
    if (!v51)
    {
      swift_release();
      uint64_t v50 = v112;
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  if (EnumCaseMultiPayload)
  {
    sub_1A89351CC((uint64_t)v149, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
    long long v40 = _s12ConcatenatorV5StateOMa;
    uint64_t v41 = v150;
    goto LABEL_13;
  }
  uint64_t v39 = (uint64_t)v118;
  sub_1A8935164((uint64_t)v31, (uint64_t)v118, _s12ConcatenatorV5StateOMa);
  sub_1A8934FE0((uint64_t)v149, (uint64_t)&v137);
  if (sub_1A856B98C((uint64_t)&v137) == 1)
  {
    sub_1A8932F60(v150, _s12ConcatenatorV5StateOMa);
    long long v40 = _s12ConcatenatorV5StateO6NoDataVMa;
    uint64_t v41 = v39;
LABEL_13:
    sub_1A8932F60(v41, v40);
    uint64_t v59 = v122;
    uint64_t v61 = v119;
    uint64_t v60 = v120;
    swift_storeEnumTagMultiPayload();
    sub_1A8934FE0(v61, (uint64_t)&v137);
    LOBYTE(v61) = sub_1A856B98C((uint64_t)&v137) == 0;
    LOBYTE(v60) = *(unsigned char *)(v59 + v60);
    sub_1A8935048();
    swift_allocError();
    *uint64_t v62 = v61;
    v62[1] = v60;
    swift_willThrow();
    return sub_1A893509C(v37);
  }
  if ((v34 & 1) == 0)
  {
    uint64_t v65 = v39;
    uint64_t v66 = v107;
    sub_1A89350FC(v65, (uint64_t)v107, _s12ConcatenatorV5StateO6NoDataVMa);
    uint64_t v67 = *v66;
    uint64_t v68 = v66[1];
    uint64_t v69 = v106;
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v106, (char *)v66 + *(int *)(v103 + 24), v105);
    sub_1A8934FE0((uint64_t)v149, (uint64_t)&v124);
    sub_1A8934FE0((uint64_t)v149, (uint64_t)v136);
    sub_1A89351CC((uint64_t)v136, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    sub_1A89351CC((uint64_t)&v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    uint64_t v70 = v108;
    uint64_t v71 = v113;
    sub_1A89353F4(v67, v68, v69, v108);
    if (v71)
    {
      sub_1A8932F60((uint64_t)v66, _s12ConcatenatorV5StateO6NoDataVMa);
      sub_1A89351CC((uint64_t)v149, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
      sub_1A8934FE0(v114, (uint64_t)v123);
      uint64_t v72 = v123;
    }
    else
    {
      uint64_t v77 = v100;
      sub_1A8935164(v70, v100, (uint64_t (*)(void))_s13TemporaryDataOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1A8932F60(v70, (uint64_t (*)(void))_s13TemporaryDataOMa);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v70, v77, v110);
        sub_1A8A75DE8();
        swift_storeEnumTagMultiPayload();
        uint64_t v78 = v150;
      }
      else
      {
        sub_1A89356C0();
        uint64_t v78 = v150;
        swift_release();
      }
      sub_1A8932F60(v78, _s12ConcatenatorV5StateOMa);
      sub_1A8932F60((uint64_t)v66, _s12ConcatenatorV5StateO6NoDataVMa);
      sub_1A89350FC(v70, v78, (uint64_t (*)(void))_s13TemporaryDataOMa);
      uint64_t v94 = v78 + *(int *)(v102 + 20);
      long long v95 = v146;
      *(_OWORD *)(v94 + 128) = v145;
      *(_OWORD *)(v94 + 144) = v95;
      *(_OWORD *)(v94 + 160) = v147;
      *(unsigned char *)(v94 + 176) = v148;
      long long v96 = v142;
      *(_OWORD *)(v94 + 64) = v141;
      *(_OWORD *)(v94 + 80) = v96;
      long long v97 = v144;
      *(_OWORD *)(v94 + 96) = v143;
      *(_OWORD *)(v94 + 112) = v97;
      long long v98 = v138;
      *(_OWORD *)uint64_t v94 = v137;
      *(_OWORD *)(v94 + 16) = v98;
      long long v99 = v140;
      *(_OWORD *)(v94 + 32) = v139;
      *(_OWORD *)(v94 + 48) = v99;
      swift_storeEnumTagMultiPayload();
      sub_1A8934FE0(v114, (uint64_t)v123);
      uint64_t v72 = v123;
    }
    goto LABEL_35;
  }
  sub_1A8934FE0((uint64_t)v149, (uint64_t)&v124);
  sub_1A89351CC((uint64_t)&v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
  uint64_t v52 = v150;
  sub_1A8932F60(v150, _s12ConcatenatorV5StateOMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16))(v52, v122, v110);
  uint64_t v53 = v52 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  long long v54 = v146;
  *(_OWORD *)(v53 + 128) = v145;
  *(_OWORD *)(v53 + 144) = v54;
  *(_OWORD *)(v53 + 160) = v147;
  *(unsigned char *)(v53 + 176) = v148;
  long long v55 = v142;
  *(_OWORD *)(v53 + 64) = v141;
  *(_OWORD *)(v53 + 80) = v55;
  long long v56 = v144;
  *(_OWORD *)(v53 + 96) = v143;
  *(_OWORD *)(v53 + 112) = v56;
  long long v57 = v138;
  *(_OWORD *)uint64_t v53 = v137;
  *(_OWORD *)(v53 + 16) = v57;
  long long v58 = v140;
  *(_OWORD *)(v53 + 32) = v139;
  *(_OWORD *)(v53 + 48) = v58;
  swift_storeEnumTagMultiPayload();
  sub_1A89351CC((uint64_t)&v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
  sub_1A8932F60(v39, _s12ConcatenatorV5StateO6NoDataVMa);
  sub_1A8934FE0(v114, (uint64_t)v136);
  sub_1A89351CC((uint64_t)v136, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
  return sub_1A8932F60(v37, _s12ConcatenatorV5StateOMa);
}

uint64_t MessageSectionData.Concatenator.completed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8935164(v2, (uint64_t)v6, _s12ConcatenatorV5StateOMa);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1A89350FC((uint64_t)v6, a1, type metadata accessor for MessageSectionData.Concatenator.Completed);
    uint64_t v7 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    sub_1A8932F60((uint64_t)v6, _s12ConcatenatorV5StateOMa);
    uint64_t v9 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t type metadata accessor for MessageSectionData.Concatenator.Completed(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9746430);
}

uint64_t MessageSectionData.Concatenator.Completed.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MessageSectionData.Concatenator.Completed.data.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

double (*MessageSectionData.Concatenator.Completed.data.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageSectionData.Concatenator.Completed.initial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  return sub_1A89301D8(v3, a1);
}

uint64_t sub_1A89301D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MessageSectionData.Concatenator.Completed.initial.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  return sub_1A8930278(a1, v3);
}

uint64_t sub_1A8930278(uint64_t a1, uint64_t a2)
{
  return a2;
}

double (*MessageSectionData.Concatenator.Completed.initial.modify())(void)
{
  return nullsub_1;
}

__n128 MessageSectionData.Concatenator.Completed.init(data:initial:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v7 + 144) = v8;
  *(_OWORD *)(v7 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(v7 + 176) = *(unsigned char *)(a2 + 176);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v7 + 80) = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v7 + 112) = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v11;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(v7 + 32) = result;
  *(_OWORD *)(v7 + 48) = v13;
  return result;
}

uint64_t *_s12ConcatenatorVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(v4 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      int v18 = v17[176];
      if (v18 == 255)
      {
LABEL_14:
        long long v20 = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
        *((_OWORD *)v16 + 9) = v20;
        *((_OWORD *)v16 + 10) = *((_OWORD *)v17 + 10);
        v16[176] = v17[176];
        long long v21 = *((_OWORD *)v17 + 5);
        *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
        *((_OWORD *)v16 + 5) = v21;
        long long v22 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v22;
        long long v23 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v23;
        long long v24 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v24;
        goto LABEL_16;
      }
LABEL_15:
      char v48 = v18 & 1;
      uint64_t v25 = *((void *)v17 + 5);
      uint64_t v26 = *((void *)v17 + 6);
      uint64_t v33 = *((void *)v17 + 7);
      uint64_t v34 = *((void *)v17 + 8);
      uint64_t v35 = *((void *)v17 + 9);
      uint64_t v36 = *((void *)v17 + 10);
      uint64_t v37 = *((void *)v17 + 11);
      uint64_t v38 = *((void *)v17 + 12);
      uint64_t v39 = *((void *)v17 + 13);
      uint64_t v40 = *((void *)v17 + 14);
      uint64_t v41 = *((void *)v17 + 15);
      uint64_t v42 = *((void *)v17 + 16);
      uint64_t v43 = *((void *)v17 + 17);
      uint64_t v44 = *((void *)v17 + 18);
      uint64_t v45 = *((void *)v17 + 19);
      uint64_t v46 = *((void *)v17 + 20);
      uint64_t v47 = *((void *)v17 + 21);
      uint64_t v27 = *(void *)v17;
      uint64_t v28 = *((void *)v17 + 1);
      uint64_t v29 = *((void *)v17 + 2);
      uint64_t v30 = *((void *)v17 + 3);
      uint64_t v31 = *((void *)v17 + 4);
      sub_1A86409B8(*(void *)v17, v28, v29, v30, v31, v25, v26, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v18 & 1);
      *(void *)uint64_t v16 = v27;
      *((void *)v16 + 1) = v28;
      *((void *)v16 + 2) = v29;
      *((void *)v16 + 3) = v30;
      *((void *)v16 + 4) = v31;
      *((void *)v16 + 5) = v25;
      *((void *)v16 + 6) = v26;
      *((void *)v16 + 7) = v33;
      *((void *)v16 + 8) = v34;
      *((void *)v16 + 9) = v35;
      *((void *)v16 + 10) = v36;
      *((void *)v16 + 11) = v37;
      *((void *)v16 + 12) = v38;
      *((void *)v16 + 13) = v39;
      *((void *)v16 + 14) = v40;
      *((void *)v16 + 15) = v41;
      *((void *)v16 + 16) = v42;
      *((void *)v16 + 17) = v43;
      *((void *)v16 + 18) = v44;
      *((void *)v16 + 19) = v45;
      *((void *)v16 + 20) = v46;
      *((void *)v16 + 21) = v47;
      v16[176] = v48;
      goto LABEL_16;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = sub_1A8A75E28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v16 = (char *)a1 + v19;
      uint64_t v17 = (char *)a2 + v19;
      int v18 = v17[176];
      if (v18 == 255) {
        goto LABEL_14;
      }
      goto LABEL_15;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      long long v9 = (char *)a1 + v8;
      long long v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t _s12ConcatenatorV5StateO9ReceivingVMa(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9746408);
}

void _s12ConcatenatorVwxx(uint64_t a1)
{
  _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = sub_1A8A75E28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        uint64_t v3 = a1 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v4 = sub_1A8A74998();
        int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
        v5(v3, v4);
      }
      return;
    }
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1A8A75E28();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    }
    else
    {
      swift_release();
    }
    uint64_t v7 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  }
  uint64_t v9 = a1 + *(int *)(v7 + 20);
  int v10 = *(unsigned __int8 *)(v9 + 176);
  if (v10 != 255) {
    sub_1A856B460(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(void *)(v9 + 72), *(void *)(v9 + 80), *(void *)(v9 + 88), *(void *)(v9 + 96), *(void *)(v9 + 104), *(void *)(v9 + 112), *(void *)(v9 + 120), *(void *)(v9 + 128), *(void *)(v9 + 136), *(void *)(v9 + 144),
  }
      *(void *)(v9 + 152),
      *(void *)(v9 + 160),
      *(void *)(v9 + 168),
      v10 & 1);
}

void *_s12ConcatenatorVwcp(void *a1, void *a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      int v15 = v14[176];
      if (v15 == 255)
      {
LABEL_12:
        long long v17 = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
        *((_OWORD *)v13 + 9) = v17;
        *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        long long v18 = *((_OWORD *)v14 + 5);
        *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
        *((_OWORD *)v13 + 5) = v18;
        long long v19 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v19;
        long long v20 = *((_OWORD *)v14 + 1);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v20;
        long long v21 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v21;
        goto LABEL_14;
      }
LABEL_13:
      char v45 = v15 & 1;
      uint64_t v22 = *((void *)v14 + 5);
      uint64_t v23 = *((void *)v14 + 6);
      uint64_t v30 = *((void *)v14 + 7);
      uint64_t v31 = *((void *)v14 + 8);
      uint64_t v32 = *((void *)v14 + 9);
      uint64_t v33 = *((void *)v14 + 10);
      uint64_t v34 = *((void *)v14 + 11);
      uint64_t v35 = *((void *)v14 + 12);
      uint64_t v36 = *((void *)v14 + 13);
      uint64_t v37 = *((void *)v14 + 14);
      uint64_t v38 = *((void *)v14 + 15);
      uint64_t v39 = *((void *)v14 + 16);
      uint64_t v40 = *((void *)v14 + 17);
      uint64_t v41 = *((void *)v14 + 18);
      uint64_t v42 = *((void *)v14 + 19);
      uint64_t v43 = *((void *)v14 + 20);
      uint64_t v44 = *((void *)v14 + 21);
      uint64_t v24 = *(void *)v14;
      uint64_t v25 = *((void *)v14 + 1);
      uint64_t v26 = *((void *)v14 + 2);
      uint64_t v27 = *((void *)v14 + 3);
      uint64_t v28 = *((void *)v14 + 4);
      sub_1A86409B8(*(void *)v14, v25, v26, v27, v28, v22, v23, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
        v42,
        v43,
        v44,
        v15 & 1);
      *(void *)uint64_t v13 = v24;
      *((void *)v13 + 1) = v25;
      *((void *)v13 + 2) = v26;
      *((void *)v13 + 3) = v27;
      *((void *)v13 + 4) = v28;
      *((void *)v13 + 5) = v22;
      *((void *)v13 + 6) = v23;
      *((void *)v13 + 7) = v30;
      *((void *)v13 + 8) = v31;
      *((void *)v13 + 9) = v32;
      *((void *)v13 + 10) = v33;
      *((void *)v13 + 11) = v34;
      *((void *)v13 + 12) = v35;
      *((void *)v13 + 13) = v36;
      *((void *)v13 + 14) = v37;
      *((void *)v13 + 15) = v38;
      *((void *)v13 + 16) = v39;
      *((void *)v13 + 17) = v40;
      *((void *)v13 + 18) = v41;
      *((void *)v13 + 19) = v42;
      *((void *)v13 + 20) = v43;
      *((void *)v13 + 21) = v44;
      v13[176] = v45;
      goto LABEL_14;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_1A8A75E28();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v13 = (char *)a1 + v16;
      uint64_t v14 = (char *)a2 + v16;
      int v15 = v14[176];
      if (v15 == 255) {
        goto LABEL_12;
      }
      goto LABEL_13;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

void *_s12ConcatenatorVwca(void *a1, void *a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1A8932F60((uint64_t)a1, _s12ConcatenatorV5StateOMa);
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      int v15 = v14[176];
      if (v15 == 255)
      {
LABEL_13:
        long long v17 = *(_OWORD *)v14;
        long long v18 = *((_OWORD *)v14 + 1);
        long long v19 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v19;
        *(_OWORD *)uint64_t v13 = v17;
        *((_OWORD *)v13 + 1) = v18;
        long long v20 = *((_OWORD *)v14 + 4);
        long long v21 = *((_OWORD *)v14 + 5);
        long long v22 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v22;
        *((_OWORD *)v13 + 4) = v20;
        *((_OWORD *)v13 + 5) = v21;
        long long v23 = *((_OWORD *)v14 + 8);
        long long v24 = *((_OWORD *)v14 + 9);
        long long v25 = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        *((_OWORD *)v13 + 9) = v24;
        *((_OWORD *)v13 + 10) = v25;
        *((_OWORD *)v13 + 8) = v23;
        goto LABEL_15;
      }
LABEL_14:
      char v49 = v15 & 1;
      uint64_t v26 = *((void *)v14 + 5);
      uint64_t v27 = *((void *)v14 + 6);
      uint64_t v34 = *((void *)v14 + 7);
      uint64_t v35 = *((void *)v14 + 8);
      uint64_t v36 = *((void *)v14 + 9);
      uint64_t v37 = *((void *)v14 + 10);
      uint64_t v38 = *((void *)v14 + 11);
      uint64_t v39 = *((void *)v14 + 12);
      uint64_t v40 = *((void *)v14 + 13);
      uint64_t v41 = *((void *)v14 + 14);
      uint64_t v42 = *((void *)v14 + 15);
      uint64_t v43 = *((void *)v14 + 16);
      uint64_t v44 = *((void *)v14 + 17);
      uint64_t v45 = *((void *)v14 + 18);
      uint64_t v46 = *((void *)v14 + 19);
      uint64_t v47 = *((void *)v14 + 20);
      uint64_t v48 = *((void *)v14 + 21);
      uint64_t v28 = *(void *)v14;
      uint64_t v29 = *((void *)v14 + 1);
      uint64_t v30 = *((void *)v14 + 2);
      uint64_t v31 = *((void *)v14 + 3);
      uint64_t v32 = *((void *)v14 + 4);
      sub_1A86409B8(*(void *)v14, v29, v30, v31, v32, v26, v27, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
        v46,
        v47,
        v48,
        v15 & 1);
      *(void *)uint64_t v13 = v28;
      *((void *)v13 + 1) = v29;
      *((void *)v13 + 2) = v30;
      *((void *)v13 + 3) = v31;
      *((void *)v13 + 4) = v32;
      *((void *)v13 + 5) = v26;
      *((void *)v13 + 6) = v27;
      *((void *)v13 + 7) = v34;
      *((void *)v13 + 8) = v35;
      *((void *)v13 + 9) = v36;
      *((void *)v13 + 10) = v37;
      *((void *)v13 + 11) = v38;
      *((void *)v13 + 12) = v39;
      *((void *)v13 + 13) = v40;
      *((void *)v13 + 14) = v41;
      *((void *)v13 + 15) = v42;
      *((void *)v13 + 16) = v43;
      *((void *)v13 + 17) = v44;
      *((void *)v13 + 18) = v45;
      *((void *)v13 + 19) = v46;
      *((void *)v13 + 20) = v47;
      *((void *)v13 + 21) = v48;
      v13[176] = v49;
      goto LABEL_15;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_1A8A75E28();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v13 = (char *)a1 + v16;
      uint64_t v14 = (char *)a2 + v16;
      int v15 = v14[176];
      if (v15 == 255) {
        goto LABEL_13;
      }
      goto LABEL_14;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

_OWORD *_s12ConcatenatorVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v10 = sub_1A8A75E28();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      long long v14 = *((_OWORD *)v13 + 9);
      *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
      *((_OWORD *)v12 + 9) = v14;
      *((_OWORD *)v12 + 10) = *((_OWORD *)v13 + 10);
      v12[176] = v13[176];
      long long v15 = *((_OWORD *)v13 + 5);
      *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
      *((_OWORD *)v12 + 5) = v15;
      long long v16 = *((_OWORD *)v13 + 7);
      *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
      *((_OWORD *)v12 + 7) = v16;
      long long v17 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v17;
      long long v18 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v18;
      goto LABEL_11;
    case 1:
      uint64_t v19 = _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v20 = sub_1A8A75E28();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      uint64_t v21 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      long long v22 = (char *)a1 + v21;
      long long v23 = (char *)a2 + v21;
      long long v24 = *((_OWORD *)v23 + 9);
      *((_OWORD *)v22 + 8) = *((_OWORD *)v23 + 8);
      *((_OWORD *)v22 + 9) = v24;
      *((_OWORD *)v22 + 10) = *((_OWORD *)v23 + 10);
      v22[176] = v23[176];
      long long v25 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v25;
      long long v26 = *((_OWORD *)v23 + 7);
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      *((_OWORD *)v22 + 7) = v26;
      long long v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)long long v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      long long v28 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v28;
      goto LABEL_11;
    case 0:
      *a1 = *a2;
      uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

_OWORD *_s12ConcatenatorVwta(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1A8932F60((uint64_t)a1, _s12ConcatenatorV5StateOMa);
    uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v10 = sub_1A8A75E28();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        long long v14 = *((_OWORD *)v13 + 9);
        *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
        *((_OWORD *)v12 + 9) = v14;
        *((_OWORD *)v12 + 10) = *((_OWORD *)v13 + 10);
        v12[176] = v13[176];
        long long v15 = *((_OWORD *)v13 + 5);
        *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
        *((_OWORD *)v12 + 5) = v15;
        long long v16 = *((_OWORD *)v13 + 7);
        *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
        *((_OWORD *)v12 + 7) = v16;
        long long v17 = *((_OWORD *)v13 + 1);
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v17;
        long long v18 = *((_OWORD *)v13 + 3);
        *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 3) = v18;
        goto LABEL_12;
      case 1:
        uint64_t v19 = _s13TemporaryDataOMa();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v20 = sub_1A8A75E28();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        uint64_t v21 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
        long long v22 = (char *)a1 + v21;
        long long v23 = (char *)a2 + v21;
        long long v24 = *((_OWORD *)v23 + 9);
        *((_OWORD *)v22 + 8) = *((_OWORD *)v23 + 8);
        *((_OWORD *)v22 + 9) = v24;
        *((_OWORD *)v22 + 10) = *((_OWORD *)v23 + 10);
        v22[176] = v23[176];
        long long v25 = *((_OWORD *)v23 + 5);
        *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
        *((_OWORD *)v22 + 5) = v25;
        long long v26 = *((_OWORD *)v23 + 7);
        *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
        *((_OWORD *)v22 + 7) = v26;
        long long v27 = *((_OWORD *)v23 + 1);
        *(_OWORD *)long long v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v27;
        long long v28 = *((_OWORD *)v23 + 3);
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *((_OWORD *)v22 + 3) = v28;
        goto LABEL_12;
      case 0:
        *a1 = *a2;
        uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1A8A74998();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

uint64_t _s12ConcatenatorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8931924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s12ConcatenatorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A89319A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MessageSectionData.Concatenator(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9746448);
}

uint64_t sub_1A8931A34()
{
  uint64_t result = _s12ConcatenatorV5StateOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s12ConcatenatorV9CompletedVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A8A75E28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    int v11 = v10[176];
    if (v11 == 255)
    {
      long long v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      v9[176] = v10[176];
      long long v13 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v13;
      long long v14 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v14;
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      long long v16 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v16;
    }
    else
    {
      char v41 = v11 & 1;
      uint64_t v18 = *((void *)v10 + 4);
      uint64_t v19 = *((void *)v10 + 5);
      uint64_t v20 = *((void *)v10 + 6);
      uint64_t v27 = *((void *)v10 + 8);
      uint64_t v28 = *((void *)v10 + 9);
      uint64_t v29 = *((void *)v10 + 10);
      uint64_t v30 = *((void *)v10 + 11);
      uint64_t v31 = *((void *)v10 + 12);
      uint64_t v32 = *((void *)v10 + 13);
      uint64_t v33 = *((void *)v10 + 14);
      uint64_t v34 = *((void *)v10 + 15);
      uint64_t v35 = *((void *)v10 + 16);
      uint64_t v36 = *((void *)v10 + 17);
      uint64_t v37 = *((void *)v10 + 18);
      uint64_t v38 = *((void *)v10 + 19);
      uint64_t v39 = *((void *)v10 + 20);
      uint64_t v40 = *((void *)v10 + 21);
      uint64_t v21 = *(void *)v10;
      uint64_t v22 = *((void *)v10 + 1);
      uint64_t v23 = *((void *)v10 + 2);
      uint64_t v24 = *((void *)v10 + 3);
      uint64_t v25 = *((void *)v10 + 7);
      sub_1A86409B8(*(void *)v10, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v11 & 1);
      *(void *)uint64_t v9 = v21;
      *((void *)v9 + 1) = v22;
      *((void *)v9 + 2) = v23;
      *((void *)v9 + 3) = v24;
      *((void *)v9 + 4) = v18;
      *((void *)v9 + 5) = v19;
      *((void *)v9 + 6) = v20;
      *((void *)v9 + 7) = v25;
      *((void *)v9 + 8) = v27;
      *((void *)v9 + 9) = v28;
      *((void *)v9 + 10) = v29;
      *((void *)v9 + 11) = v30;
      *((void *)v9 + 12) = v31;
      *((void *)v9 + 13) = v32;
      *((void *)v9 + 14) = v33;
      *((void *)v9 + 15) = v34;
      *((void *)v9 + 16) = v35;
      *((void *)v9 + 17) = v36;
      *((void *)v9 + 18) = v37;
      *((void *)v9 + 19) = v38;
      *((void *)v9 + 20) = v39;
      *((void *)v9 + 21) = v40;
      v9[176] = v41;
    }
  }
  return a1;
}

void _s12ConcatenatorV9CompletedVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  int v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 != 255) {
    sub_1A856B460(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), *(void *)(v5 + 136), *(void *)(v5 + 144),
  }
      *(void *)(v5 + 152),
      *(void *)(v5 + 160),
      *(void *)(v5 + 168),
      v6 & 1);
}

uint64_t _s12ConcatenatorV9CompletedVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  int v10 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 255)
  {
    long long v11 = *((_OWORD *)v9 + 9);
    *(_OWORD *)(v8 + 128) = *((_OWORD *)v9 + 8);
    *(_OWORD *)(v8 + 144) = v11;
    *(_OWORD *)(v8 + 160) = *((_OWORD *)v9 + 10);
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    long long v12 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 64) = *((_OWORD *)v9 + 4);
    *(_OWORD *)(v8 + 80) = v12;
    long long v13 = *((_OWORD *)v9 + 7);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v13;
    long long v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v14;
    long long v15 = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v15;
  }
  else
  {
    char v39 = v10 & 1;
    uint64_t v16 = v9[4];
    uint64_t v17 = v9[5];
    uint64_t v18 = v9[6];
    uint64_t v25 = v9[8];
    uint64_t v26 = v9[9];
    uint64_t v27 = v9[10];
    uint64_t v28 = v9[11];
    uint64_t v29 = v9[12];
    uint64_t v30 = v9[13];
    uint64_t v31 = v9[14];
    uint64_t v32 = v9[15];
    uint64_t v33 = v9[16];
    uint64_t v34 = v9[17];
    uint64_t v35 = v9[18];
    uint64_t v36 = v9[19];
    uint64_t v37 = v9[20];
    uint64_t v38 = v9[21];
    uint64_t v19 = *v9;
    uint64_t v20 = v9[1];
    uint64_t v21 = v9[2];
    uint64_t v22 = v9[3];
    uint64_t v23 = v9[7];
    sub_1A86409B8(*v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(void *)uint64_t v8 = v19;
    *(void *)(v8 + 8) = v20;
    *(void *)(v8 + 16) = v21;
    *(void *)(v8 + 24) = v22;
    *(void *)(v8 + 32) = v16;
    *(void *)(v8 + 40) = v17;
    *(void *)(v8 + 48) = v18;
    *(void *)(v8 + 56) = v23;
    *(void *)(v8 + 64) = v25;
    *(void *)(v8 + 72) = v26;
    *(void *)(v8 + 80) = v27;
    *(void *)(v8 + 88) = v28;
    *(void *)(v8 + 96) = v29;
    *(void *)(v8 + 104) = v30;
    *(void *)(v8 + 112) = v31;
    *(void *)(v8 + 120) = v32;
    *(void *)(v8 + 128) = v33;
    *(void *)(v8 + 136) = v34;
    *(void *)(v8 + 144) = v35;
    *(void *)(v8 + 152) = v36;
    *(void *)(v8 + 160) = v37;
    *(void *)(v8 + 168) = v38;
    *(unsigned char *)(v8 + 176) = v39;
  }
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  int v11 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 255)
  {
    if (v11 == 255)
    {
      long long v21 = *v9;
      long long v22 = v9[1];
      long long v23 = v9[3];
      *(_OWORD *)(v8 + 32) = v9[2];
      *(_OWORD *)(v8 + 48) = v23;
      *(_OWORD *)uint64_t v8 = v21;
      *(_OWORD *)(v8 + 16) = v22;
      long long v24 = v9[4];
      long long v25 = v9[5];
      long long v26 = v9[7];
      *(_OWORD *)(v8 + 96) = v9[6];
      *(_OWORD *)(v8 + 112) = v26;
      *(_OWORD *)(v8 + 64) = v24;
      *(_OWORD *)(v8 + 80) = v25;
      long long v27 = v9[8];
      long long v28 = v9[9];
      long long v29 = v9[10];
      *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
      *(_OWORD *)(v8 + 144) = v28;
      *(_OWORD *)(v8 + 160) = v29;
      *(_OWORD *)(v8 + 128) = v27;
    }
    else
    {
      char v101 = v11 & 1;
      uint64_t v59 = *((void *)v9 + 1);
      uint64_t v60 = *((void *)v9 + 2);
      uint64_t v61 = *((void *)v9 + 3);
      uint64_t v62 = *((void *)v9 + 4);
      uint64_t v63 = *((void *)v9 + 5);
      uint64_t v65 = *((void *)v9 + 6);
      uint64_t v64 = *((void *)v9 + 7);
      uint64_t v73 = *((void *)v9 + 8);
      uint64_t v75 = *((void *)v9 + 9);
      uint64_t v77 = *((void *)v9 + 10);
      uint64_t v79 = *((void *)v9 + 11);
      uint64_t v81 = *((void *)v9 + 12);
      uint64_t v83 = *((void *)v9 + 13);
      uint64_t v85 = *((void *)v9 + 14);
      uint64_t v87 = *((void *)v9 + 15);
      uint64_t v89 = *((void *)v9 + 16);
      uint64_t v91 = *((void *)v9 + 17);
      uint64_t v93 = *((void *)v9 + 18);
      uint64_t v95 = *((void *)v9 + 19);
      uint64_t v97 = *((void *)v9 + 20);
      uint64_t v99 = *((void *)v9 + 21);
      uint64_t v66 = *(void *)v9;
      uint64_t v67 = v59;
      uint64_t v68 = v60;
      uint64_t v69 = v61;
      uint64_t v70 = v64;
      sub_1A86409B8(v66, v59, v60, v61, v62, v63, v65, v64, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      *(void *)uint64_t v8 = v66;
      *(void *)(v8 + 8) = v67;
      *(void *)(v8 + 16) = v68;
      *(void *)(v8 + 24) = v69;
      *(void *)(v8 + 32) = v62;
      *(void *)(v8 + 40) = v63;
      *(void *)(v8 + 48) = v65;
      *(void *)(v8 + 56) = v70;
      *(void *)(v8 + 64) = v73;
      *(void *)(v8 + 72) = v75;
      *(void *)(v8 + 80) = v77;
      *(void *)(v8 + 88) = v79;
      *(void *)(v8 + 96) = v81;
      *(void *)(v8 + 104) = v83;
      *(void *)(v8 + 112) = v85;
      *(void *)(v8 + 120) = v87;
      *(void *)(v8 + 128) = v89;
      *(void *)(v8 + 136) = v91;
      *(void *)(v8 + 144) = v93;
      *(void *)(v8 + 152) = v95;
      *(void *)(v8 + 160) = v97;
      *(void *)(v8 + 168) = v99;
      *(unsigned char *)(v8 + 176) = v101;
    }
  }
  else if (v11 == 255)
  {
    sub_1A86414AC(v8);
    long long v12 = v9[3];
    long long v14 = *v9;
    long long v13 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v12;
    *(_OWORD *)uint64_t v8 = v14;
    *(_OWORD *)(v8 + 16) = v13;
    long long v15 = v9[7];
    long long v17 = v9[4];
    long long v16 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v15;
    *(_OWORD *)(v8 + 64) = v17;
    *(_OWORD *)(v8 + 80) = v16;
    long long v19 = v9[9];
    long long v18 = v9[10];
    long long v20 = v9[8];
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    *(_OWORD *)(v8 + 144) = v19;
    *(_OWORD *)(v8 + 160) = v18;
    *(_OWORD *)(v8 + 128) = v20;
  }
  else
  {
    char v100 = v11 & 1;
    uint64_t v30 = *((void *)v9 + 1);
    uint64_t v31 = *((void *)v9 + 2);
    uint64_t v32 = *((void *)v9 + 3);
    uint64_t v33 = *((void *)v9 + 4);
    uint64_t v34 = *((void *)v9 + 5);
    uint64_t v36 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 7);
    uint64_t v72 = *((void *)v9 + 8);
    uint64_t v74 = *((void *)v9 + 9);
    uint64_t v76 = *((void *)v9 + 10);
    uint64_t v78 = *((void *)v9 + 11);
    uint64_t v80 = *((void *)v9 + 12);
    uint64_t v82 = *((void *)v9 + 13);
    uint64_t v84 = *((void *)v9 + 14);
    uint64_t v86 = *((void *)v9 + 15);
    uint64_t v88 = *((void *)v9 + 16);
    uint64_t v90 = *((void *)v9 + 17);
    uint64_t v92 = *((void *)v9 + 18);
    uint64_t v94 = *((void *)v9 + 19);
    uint64_t v96 = *((void *)v9 + 20);
    uint64_t v98 = *((void *)v9 + 21);
    uint64_t v37 = *(void *)v9;
    uint64_t v38 = v30;
    uint64_t v39 = v31;
    uint64_t v40 = v32;
    uint64_t v41 = v35;
    sub_1A86409B8(v37, v30, v31, v32, v33, v34, v36, v35, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    uint64_t v42 = *(void *)v8;
    uint64_t v43 = *(void *)(v8 + 8);
    *(void *)uint64_t v8 = v37;
    *(void *)(v8 + 8) = v38;
    uint64_t v44 = *(void *)(v8 + 16);
    uint64_t v45 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = v39;
    *(void *)(v8 + 24) = v40;
    uint64_t v46 = *(void *)(v8 + 32);
    uint64_t v47 = *(void *)(v8 + 40);
    *(void *)(v8 + 32) = v33;
    *(void *)(v8 + 40) = v34;
    uint64_t v48 = *(void *)(v8 + 48);
    uint64_t v49 = *(void *)(v8 + 56);
    *(void *)(v8 + 48) = v36;
    *(void *)(v8 + 56) = v41;
    long long v50 = *(_OWORD *)(v8 + 64);
    long long v51 = *(_OWORD *)(v8 + 80);
    *(void *)(v8 + 64) = v72;
    *(void *)(v8 + 72) = v74;
    *(void *)(v8 + 80) = v76;
    *(void *)(v8 + 88) = v78;
    long long v52 = *(_OWORD *)(v8 + 96);
    long long v53 = *(_OWORD *)(v8 + 112);
    *(void *)(v8 + 96) = v80;
    *(void *)(v8 + 104) = v82;
    *(void *)(v8 + 112) = v84;
    *(void *)(v8 + 120) = v86;
    long long v54 = *(_OWORD *)(v8 + 128);
    long long v55 = *(_OWORD *)(v8 + 144);
    *(void *)(v8 + 128) = v88;
    *(void *)(v8 + 136) = v90;
    *(void *)(v8 + 144) = v92;
    *(void *)(v8 + 152) = v94;
    uint64_t v56 = *(void *)(v8 + 160);
    uint64_t v57 = *(void *)(v8 + 168);
    *(void *)(v8 + 160) = v96;
    *(void *)(v8 + 168) = v98;
    char v58 = *(unsigned char *)(v8 + 176);
    *(unsigned char *)(v8 + 176) = v100;
    sub_1A856B460(v42, v43, v44, v45, v46, v47, v48, v49, v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55,
      *((uint64_t *)&v55 + 1),
      v56,
      v57,
      v58);
  }
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v10;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v11 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v11;
  long long v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  long long v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  long long v14 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v14;
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  if (v10 != 255)
  {
    int v11 = *(unsigned __int8 *)(v9 + 176);
    if (v11 != 255)
    {
      uint64_t v17 = *(void *)v8;
      uint64_t v18 = *(void *)(v8 + 8);
      uint64_t v19 = *(void *)(v8 + 16);
      uint64_t v20 = *(void *)(v8 + 24);
      uint64_t v21 = *(void *)(v8 + 32);
      uint64_t v22 = *(void *)(v8 + 40);
      uint64_t v23 = *(void *)(v8 + 48);
      uint64_t v24 = *(void *)(v8 + 56);
      long long v25 = *(_OWORD *)(v8 + 64);
      long long v26 = *(_OWORD *)(v8 + 80);
      long long v27 = *(_OWORD *)(v8 + 96);
      long long v28 = *(_OWORD *)(v8 + 112);
      long long v29 = *(_OWORD *)(v8 + 128);
      long long v30 = *(_OWORD *)(v8 + 144);
      uint64_t v31 = *(void *)(v8 + 160);
      uint64_t v32 = *(void *)(v8 + 168);
      long long v33 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v33;
      long long v34 = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = v34;
      long long v35 = *(_OWORD *)(v9 + 80);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 80) = v35;
      long long v36 = *(_OWORD *)(v9 + 112);
      *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
      *(_OWORD *)(v8 + 112) = v36;
      long long v37 = *(_OWORD *)(v9 + 144);
      *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
      *(_OWORD *)(v8 + 144) = v37;
      *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
      *(unsigned char *)(v8 + 176) = v11 & 1;
      sub_1A856B460(v17, v18, v19, v20, v21, v22, v23, v24, v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30,
        *((uint64_t *)&v30 + 1),
        v31,
        v32,
        v10 & 1);
      return a1;
    }
    sub_1A86414AC(v8);
  }
  long long v12 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v13 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v13;
  long long v14 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v14;
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  long long v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8932558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_2Tm(a1, a2, a3, MEMORY[0x1E4FBCBA0]);
}

uint64_t _s12ConcatenatorV9CompletedVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8932584(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_3Tm(a1, a2, a3, a4, MEMORY[0x1E4FBCBA0]);
}

uint64_t sub_1A893259C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A893348C(a1, a2, a3, MEMORY[0x1E4FBCBA0]);
}

uint64_t *sub_1A89325B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    int v10 = (char *)a1 + v9;
    int v11 = (char *)a2 + v9;
    int v12 = v11[176];
    if (v12 == 255)
    {
      long long v13 = *((_OWORD *)v11 + 9);
      *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
      *((_OWORD *)v10 + 9) = v13;
      *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
      v10[176] = v11[176];
      long long v14 = *((_OWORD *)v11 + 5);
      *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
      *((_OWORD *)v10 + 5) = v14;
      long long v15 = *((_OWORD *)v11 + 7);
      *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
      *((_OWORD *)v10 + 7) = v15;
      long long v16 = *((_OWORD *)v11 + 1);
      *(_OWORD *)int v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v16;
      long long v17 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v17;
    }
    else
    {
      char v41 = v12 & 1;
      uint64_t v18 = *((void *)v11 + 4);
      uint64_t v19 = *((void *)v11 + 5);
      uint64_t v20 = *((void *)v11 + 6);
      uint64_t v27 = *((void *)v11 + 8);
      uint64_t v28 = *((void *)v11 + 9);
      uint64_t v29 = *((void *)v11 + 10);
      uint64_t v30 = *((void *)v11 + 11);
      uint64_t v31 = *((void *)v11 + 12);
      uint64_t v32 = *((void *)v11 + 13);
      uint64_t v33 = *((void *)v11 + 14);
      uint64_t v34 = *((void *)v11 + 15);
      uint64_t v35 = *((void *)v11 + 16);
      uint64_t v36 = *((void *)v11 + 17);
      uint64_t v37 = *((void *)v11 + 18);
      uint64_t v38 = *((void *)v11 + 19);
      uint64_t v39 = *((void *)v11 + 20);
      uint64_t v40 = *((void *)v11 + 21);
      uint64_t v21 = *(void *)v11;
      uint64_t v22 = *((void *)v11 + 1);
      uint64_t v23 = *((void *)v11 + 2);
      uint64_t v24 = *((void *)v11 + 3);
      uint64_t v25 = *((void *)v11 + 7);
      sub_1A86409B8(*(void *)v11, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v12 & 1);
      *(void *)int v10 = v21;
      *((void *)v10 + 1) = v22;
      *((void *)v10 + 2) = v23;
      *((void *)v10 + 3) = v24;
      *((void *)v10 + 4) = v18;
      *((void *)v10 + 5) = v19;
      *((void *)v10 + 6) = v20;
      *((void *)v10 + 7) = v25;
      *((void *)v10 + 8) = v27;
      *((void *)v10 + 9) = v28;
      *((void *)v10 + 10) = v29;
      *((void *)v10 + 11) = v30;
      *((void *)v10 + 12) = v31;
      *((void *)v10 + 13) = v32;
      *((void *)v10 + 14) = v33;
      *((void *)v10 + 15) = v34;
      *((void *)v10 + 16) = v35;
      *((void *)v10 + 17) = v36;
      *((void *)v10 + 18) = v37;
      *((void *)v10 + 19) = v38;
      *((void *)v10 + 20) = v39;
      *((void *)v10 + 21) = v40;
      v10[176] = v41;
    }
  }
  return a1;
}

void sub_1A8932834(uint64_t a1, uint64_t a2)
{
  _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1A8A75E28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  int v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 != 255) {
    sub_1A856B460(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), *(void *)(v5 + 136), *(void *)(v5 + 144),
  }
      *(void *)(v5 + 152),
      *(void *)(v5 + 160),
      *(void *)(v5 + 168),
      v6 & 1);
}

void *sub_1A8932910(void *a1, void *a2, uint64_t a3)
{
  _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1A8A75E28();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  int v10 = v9[176];
  if (v10 == 255)
  {
    long long v11 = *((_OWORD *)v9 + 9);
    *((_OWORD *)v8 + 8) = *((_OWORD *)v9 + 8);
    *((_OWORD *)v8 + 9) = v11;
    *((_OWORD *)v8 + 10) = *((_OWORD *)v9 + 10);
    v8[176] = v9[176];
    long long v12 = *((_OWORD *)v9 + 5);
    *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
    *((_OWORD *)v8 + 5) = v12;
    long long v13 = *((_OWORD *)v9 + 7);
    *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
    *((_OWORD *)v8 + 7) = v13;
    long long v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v14;
    long long v15 = *((_OWORD *)v9 + 3);
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    *((_OWORD *)v8 + 3) = v15;
  }
  else
  {
    char v39 = v10 & 1;
    uint64_t v16 = *((void *)v9 + 4);
    uint64_t v17 = *((void *)v9 + 5);
    uint64_t v18 = *((void *)v9 + 6);
    uint64_t v25 = *((void *)v9 + 8);
    uint64_t v26 = *((void *)v9 + 9);
    uint64_t v27 = *((void *)v9 + 10);
    uint64_t v28 = *((void *)v9 + 11);
    uint64_t v29 = *((void *)v9 + 12);
    uint64_t v30 = *((void *)v9 + 13);
    uint64_t v31 = *((void *)v9 + 14);
    uint64_t v32 = *((void *)v9 + 15);
    uint64_t v33 = *((void *)v9 + 16);
    uint64_t v34 = *((void *)v9 + 17);
    uint64_t v35 = *((void *)v9 + 18);
    uint64_t v36 = *((void *)v9 + 19);
    uint64_t v37 = *((void *)v9 + 20);
    uint64_t v38 = *((void *)v9 + 21);
    uint64_t v19 = *(void *)v9;
    uint64_t v20 = *((void *)v9 + 1);
    uint64_t v21 = *((void *)v9 + 2);
    uint64_t v22 = *((void *)v9 + 3);
    uint64_t v23 = *((void *)v9 + 7);
    sub_1A86409B8(*(void *)v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(void *)uint64_t v8 = v19;
    *((void *)v8 + 1) = v20;
    *((void *)v8 + 2) = v21;
    *((void *)v8 + 3) = v22;
    *((void *)v8 + 4) = v16;
    *((void *)v8 + 5) = v17;
    *((void *)v8 + 6) = v18;
    *((void *)v8 + 7) = v23;
    *((void *)v8 + 8) = v25;
    *((void *)v8 + 9) = v26;
    *((void *)v8 + 10) = v27;
    *((void *)v8 + 11) = v28;
    *((void *)v8 + 12) = v29;
    *((void *)v8 + 13) = v30;
    *((void *)v8 + 14) = v31;
    *((void *)v8 + 15) = v32;
    *((void *)v8 + 16) = v33;
    *((void *)v8 + 17) = v34;
    *((void *)v8 + 18) = v35;
    *((void *)v8 + 19) = v36;
    *((void *)v8 + 20) = v37;
    *((void *)v8 + 21) = v38;
    v8[176] = v39;
  }
  return a1;
}

void *sub_1A8932B40(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8932F60((uint64_t)a1, (uint64_t (*)(void))_s13TemporaryDataOMa);
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  int v10 = *((unsigned __int8 *)a1 + v7 + 176);
  int v11 = v9[176];
  if (v10 == 255)
  {
    if (v11 == 255)
    {
      long long v21 = *(_OWORD *)v9;
      long long v22 = *((_OWORD *)v9 + 1);
      long long v23 = *((_OWORD *)v9 + 3);
      *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
      *(_OWORD *)(v8 + 48) = v23;
      *(_OWORD *)uint64_t v8 = v21;
      *(_OWORD *)(v8 + 16) = v22;
      long long v24 = *((_OWORD *)v9 + 4);
      long long v25 = *((_OWORD *)v9 + 5);
      long long v26 = *((_OWORD *)v9 + 7);
      *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
      *(_OWORD *)(v8 + 112) = v26;
      *(_OWORD *)(v8 + 64) = v24;
      *(_OWORD *)(v8 + 80) = v25;
      long long v27 = *((_OWORD *)v9 + 8);
      long long v28 = *((_OWORD *)v9 + 9);
      long long v29 = *((_OWORD *)v9 + 10);
      *(unsigned char *)(v8 + 176) = v9[176];
      *(_OWORD *)(v8 + 144) = v28;
      *(_OWORD *)(v8 + 160) = v29;
      *(_OWORD *)(v8 + 128) = v27;
    }
    else
    {
      char v101 = v11 & 1;
      uint64_t v59 = *((void *)v9 + 1);
      uint64_t v60 = *((void *)v9 + 2);
      uint64_t v61 = *((void *)v9 + 3);
      uint64_t v62 = *((void *)v9 + 4);
      uint64_t v63 = *((void *)v9 + 5);
      uint64_t v65 = *((void *)v9 + 6);
      uint64_t v64 = *((void *)v9 + 7);
      uint64_t v73 = *((void *)v9 + 8);
      uint64_t v75 = *((void *)v9 + 9);
      uint64_t v77 = *((void *)v9 + 10);
      uint64_t v79 = *((void *)v9 + 11);
      uint64_t v81 = *((void *)v9 + 12);
      uint64_t v83 = *((void *)v9 + 13);
      uint64_t v85 = *((void *)v9 + 14);
      uint64_t v87 = *((void *)v9 + 15);
      uint64_t v89 = *((void *)v9 + 16);
      uint64_t v91 = *((void *)v9 + 17);
      uint64_t v93 = *((void *)v9 + 18);
      uint64_t v95 = *((void *)v9 + 19);
      uint64_t v97 = *((void *)v9 + 20);
      uint64_t v99 = *((void *)v9 + 21);
      uint64_t v66 = *(void *)v9;
      uint64_t v67 = v59;
      uint64_t v68 = v60;
      uint64_t v69 = v61;
      uint64_t v70 = v64;
      sub_1A86409B8(v66, v59, v60, v61, v62, v63, v65, v64, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      *(void *)uint64_t v8 = v66;
      *(void *)(v8 + 8) = v67;
      *(void *)(v8 + 16) = v68;
      *(void *)(v8 + 24) = v69;
      *(void *)(v8 + 32) = v62;
      *(void *)(v8 + 40) = v63;
      *(void *)(v8 + 48) = v65;
      *(void *)(v8 + 56) = v70;
      *(void *)(v8 + 64) = v73;
      *(void *)(v8 + 72) = v75;
      *(void *)(v8 + 80) = v77;
      *(void *)(v8 + 88) = v79;
      *(void *)(v8 + 96) = v81;
      *(void *)(v8 + 104) = v83;
      *(void *)(v8 + 112) = v85;
      *(void *)(v8 + 120) = v87;
      *(void *)(v8 + 128) = v89;
      *(void *)(v8 + 136) = v91;
      *(void *)(v8 + 144) = v93;
      *(void *)(v8 + 152) = v95;
      *(void *)(v8 + 160) = v97;
      *(void *)(v8 + 168) = v99;
      *(unsigned char *)(v8 + 176) = v101;
    }
  }
  else if (v11 == 255)
  {
    sub_1A86414AC(v8);
    long long v12 = *((_OWORD *)v9 + 3);
    long long v14 = *(_OWORD *)v9;
    long long v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v12;
    *(_OWORD *)uint64_t v8 = v14;
    *(_OWORD *)(v8 + 16) = v13;
    long long v15 = *((_OWORD *)v9 + 7);
    long long v17 = *((_OWORD *)v9 + 4);
    long long v16 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v15;
    *(_OWORD *)(v8 + 64) = v17;
    *(_OWORD *)(v8 + 80) = v16;
    long long v19 = *((_OWORD *)v9 + 9);
    long long v18 = *((_OWORD *)v9 + 10);
    long long v20 = *((_OWORD *)v9 + 8);
    *(unsigned char *)(v8 + 176) = v9[176];
    *(_OWORD *)(v8 + 144) = v19;
    *(_OWORD *)(v8 + 160) = v18;
    *(_OWORD *)(v8 + 128) = v20;
  }
  else
  {
    char v100 = v11 & 1;
    uint64_t v30 = *((void *)v9 + 1);
    uint64_t v31 = *((void *)v9 + 2);
    uint64_t v32 = *((void *)v9 + 3);
    uint64_t v33 = *((void *)v9 + 4);
    uint64_t v34 = *((void *)v9 + 5);
    uint64_t v36 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 7);
    uint64_t v72 = *((void *)v9 + 8);
    uint64_t v74 = *((void *)v9 + 9);
    uint64_t v76 = *((void *)v9 + 10);
    uint64_t v78 = *((void *)v9 + 11);
    uint64_t v80 = *((void *)v9 + 12);
    uint64_t v82 = *((void *)v9 + 13);
    uint64_t v84 = *((void *)v9 + 14);
    uint64_t v86 = *((void *)v9 + 15);
    uint64_t v88 = *((void *)v9 + 16);
    uint64_t v90 = *((void *)v9 + 17);
    uint64_t v92 = *((void *)v9 + 18);
    uint64_t v94 = *((void *)v9 + 19);
    uint64_t v96 = *((void *)v9 + 20);
    uint64_t v98 = *((void *)v9 + 21);
    uint64_t v37 = *(void *)v9;
    uint64_t v38 = v30;
    uint64_t v39 = v31;
    uint64_t v40 = v32;
    uint64_t v41 = v35;
    sub_1A86409B8(v37, v30, v31, v32, v33, v34, v36, v35, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    uint64_t v42 = *(void *)v8;
    uint64_t v43 = *(void *)(v8 + 8);
    *(void *)uint64_t v8 = v37;
    *(void *)(v8 + 8) = v38;
    uint64_t v44 = *(void *)(v8 + 16);
    uint64_t v45 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = v39;
    *(void *)(v8 + 24) = v40;
    uint64_t v46 = *(void *)(v8 + 32);
    uint64_t v47 = *(void *)(v8 + 40);
    *(void *)(v8 + 32) = v33;
    *(void *)(v8 + 40) = v34;
    uint64_t v48 = *(void *)(v8 + 48);
    uint64_t v49 = *(void *)(v8 + 56);
    *(void *)(v8 + 48) = v36;
    *(void *)(v8 + 56) = v41;
    long long v50 = *(_OWORD *)(v8 + 64);
    long long v51 = *(_OWORD *)(v8 + 80);
    *(void *)(v8 + 64) = v72;
    *(void *)(v8 + 72) = v74;
    *(void *)(v8 + 80) = v76;
    *(void *)(v8 + 88) = v78;
    long long v52 = *(_OWORD *)(v8 + 96);
    long long v53 = *(_OWORD *)(v8 + 112);
    *(void *)(v8 + 96) = v80;
    *(void *)(v8 + 104) = v82;
    *(void *)(v8 + 112) = v84;
    *(void *)(v8 + 120) = v86;
    long long v54 = *(_OWORD *)(v8 + 128);
    long long v55 = *(_OWORD *)(v8 + 144);
    *(void *)(v8 + 128) = v88;
    *(void *)(v8 + 136) = v90;
    *(void *)(v8 + 144) = v92;
    *(void *)(v8 + 152) = v94;
    uint64_t v56 = *(void *)(v8 + 160);
    uint64_t v57 = *(void *)(v8 + 168);
    *(void *)(v8 + 160) = v96;
    *(void *)(v8 + 168) = v98;
    char v58 = *(unsigned char *)(v8 + 176);
    *(unsigned char *)(v8 + 176) = v100;
    sub_1A856B460(v42, v43, v44, v45, v46, v47, v48, v49, v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55,
      *((uint64_t *)&v55 + 1),
      v56,
      v57,
      v58);
  }
  return a1;
}

uint64_t sub_1A8932F60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1A8932FC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1A8A75E28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  int v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 9);
  *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
  *((_OWORD *)v9 + 9) = v11;
  *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
  v9[176] = v10[176];
  long long v12 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v12;
  long long v13 = *((_OWORD *)v10 + 7);
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  *((_OWORD *)v9 + 7) = v13;
  long long v14 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v14;
  long long v15 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v15;
  return a1;
}

unsigned __int8 *sub_1A89330C8(unsigned __int8 *a1, char *a2, uint64_t a3)
{
  if (a1 != (unsigned __int8 *)a2)
  {
    sub_1A8932F60((uint64_t)a1, (uint64_t (*)(void))_s13TemporaryDataOMa);
    uint64_t v6 = _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1A8A75E28();
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (uint64_t)&a1[v8];
  int v10 = &a2[v8];
  int v11 = a1[v8 + 176];
  if (v11 != 255)
  {
    int v12 = v10[176];
    if (v12 != 255)
    {
      uint64_t v18 = *(void *)v9;
      uint64_t v19 = *(void *)(v9 + 8);
      uint64_t v20 = *(void *)(v9 + 16);
      uint64_t v21 = *(void *)(v9 + 24);
      uint64_t v22 = *(void *)(v9 + 32);
      uint64_t v23 = *(void *)(v9 + 40);
      uint64_t v24 = *(void *)(v9 + 48);
      uint64_t v25 = *(void *)(v9 + 56);
      long long v26 = *(_OWORD *)(v9 + 64);
      long long v27 = *(_OWORD *)(v9 + 80);
      long long v28 = *(_OWORD *)(v9 + 96);
      long long v29 = *(_OWORD *)(v9 + 112);
      long long v30 = *(_OWORD *)(v9 + 128);
      long long v31 = *(_OWORD *)(v9 + 144);
      uint64_t v32 = *(void *)(v9 + 160);
      uint64_t v33 = *(void *)(v9 + 168);
      long long v34 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v34;
      long long v35 = *((_OWORD *)v10 + 3);
      *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
      *(_OWORD *)(v9 + 48) = v35;
      long long v36 = *((_OWORD *)v10 + 5);
      *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
      *(_OWORD *)(v9 + 80) = v36;
      long long v37 = *((_OWORD *)v10 + 7);
      *(_OWORD *)(v9 + 96) = *((_OWORD *)v10 + 6);
      *(_OWORD *)(v9 + 112) = v37;
      long long v38 = *((_OWORD *)v10 + 9);
      *(_OWORD *)(v9 + 128) = *((_OWORD *)v10 + 8);
      *(_OWORD *)(v9 + 144) = v38;
      *(_OWORD *)(v9 + 160) = *((_OWORD *)v10 + 10);
      *(unsigned char *)(v9 + 176) = v12 & 1;
      sub_1A856B460(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
        *((uint64_t *)&v31 + 1),
        v32,
        v33,
        v11 & 1);
      return a1;
    }
    sub_1A86414AC(v9);
  }
  long long v13 = *((_OWORD *)v10 + 9);
  *(_OWORD *)(v9 + 128) = *((_OWORD *)v10 + 8);
  *(_OWORD *)(v9 + 144) = v13;
  *(_OWORD *)(v9 + 160) = *((_OWORD *)v10 + 10);
  *(unsigned char *)(v9 + 176) = v10[176];
  long long v14 = *((_OWORD *)v10 + 5);
  *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
  *(_OWORD *)(v9 + 80) = v14;
  long long v15 = *((_OWORD *)v10 + 7);
  *(_OWORD *)(v9 + 96) = *((_OWORD *)v10 + 6);
  *(_OWORD *)(v9 + 112) = v15;
  long long v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  long long v17 = *((_OWORD *)v10 + 3);
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
  *(_OWORD *)(v9 + 48) = v17;
  return a1;
}

uint64_t sub_1A8933294()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A89332A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_2Tm(a1, a2, a3, (uint64_t (*)(void))_s13TemporaryDataOMa);
}

uint64_t __swift_get_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 176);
    if (v11 <= 1) {
      return 0;
    }
    else {
      return v11 ^ 0xFF;
    }
  }
}

uint64_t sub_1A8933384()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8933398(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_3Tm(a1, a2, a3, a4, (uint64_t (*)(void))_s13TemporaryDataOMa);
}

uint64_t __swift_store_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 176) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t sub_1A8933474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A893348C(a1, a2, a3, (uint64_t (*)(uint64_t))_s13TemporaryDataOMa);
}

uint64_t sub_1A893348C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A8933524(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      long long v16 = (char *)a1 + v15;
      long long v17 = (char *)a2 + v15;
      int v18 = v17[176];
      if (v18 == 255)
      {
LABEL_14:
        long long v20 = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
        *((_OWORD *)v16 + 9) = v20;
        *((_OWORD *)v16 + 10) = *((_OWORD *)v17 + 10);
        v16[176] = v17[176];
        long long v21 = *((_OWORD *)v17 + 5);
        *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
        *((_OWORD *)v16 + 5) = v21;
        long long v22 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v22;
        long long v23 = *((_OWORD *)v17 + 1);
        *(_OWORD *)long long v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v23;
        long long v24 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v24;
        goto LABEL_16;
      }
LABEL_15:
      char v48 = v18 & 1;
      uint64_t v25 = *((void *)v17 + 5);
      uint64_t v26 = *((void *)v17 + 6);
      uint64_t v33 = *((void *)v17 + 7);
      uint64_t v34 = *((void *)v17 + 8);
      uint64_t v35 = *((void *)v17 + 9);
      uint64_t v36 = *((void *)v17 + 10);
      uint64_t v37 = *((void *)v17 + 11);
      uint64_t v38 = *((void *)v17 + 12);
      uint64_t v39 = *((void *)v17 + 13);
      uint64_t v40 = *((void *)v17 + 14);
      uint64_t v41 = *((void *)v17 + 15);
      uint64_t v42 = *((void *)v17 + 16);
      uint64_t v43 = *((void *)v17 + 17);
      uint64_t v44 = *((void *)v17 + 18);
      uint64_t v45 = *((void *)v17 + 19);
      uint64_t v46 = *((void *)v17 + 20);
      uint64_t v47 = *((void *)v17 + 21);
      uint64_t v27 = *(void *)v17;
      uint64_t v28 = *((void *)v17 + 1);
      uint64_t v29 = *((void *)v17 + 2);
      uint64_t v30 = *((void *)v17 + 3);
      uint64_t v31 = *((void *)v17 + 4);
      sub_1A86409B8(*(void *)v17, v28, v29, v30, v31, v25, v26, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v18 & 1);
      *(void *)long long v16 = v27;
      *((void *)v16 + 1) = v28;
      *((void *)v16 + 2) = v29;
      *((void *)v16 + 3) = v30;
      *((void *)v16 + 4) = v31;
      *((void *)v16 + 5) = v25;
      *((void *)v16 + 6) = v26;
      *((void *)v16 + 7) = v33;
      *((void *)v16 + 8) = v34;
      *((void *)v16 + 9) = v35;
      *((void *)v16 + 10) = v36;
      *((void *)v16 + 11) = v37;
      *((void *)v16 + 12) = v38;
      *((void *)v16 + 13) = v39;
      *((void *)v16 + 14) = v40;
      *((void *)v16 + 15) = v41;
      *((void *)v16 + 16) = v42;
      *((void *)v16 + 17) = v43;
      *((void *)v16 + 18) = v44;
      *((void *)v16 + 19) = v45;
      *((void *)v16 + 20) = v46;
      *((void *)v16 + 21) = v47;
      v16[176] = v48;
      goto LABEL_16;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = sub_1A8A75E28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      long long v16 = (char *)a1 + v19;
      long long v17 = (char *)a2 + v19;
      int v18 = v17[176];
      if (v18 == 255) {
        goto LABEL_14;
      }
      goto LABEL_15;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

void sub_1A8933A0C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = sub_1A8A75E28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        uint64_t v3 = a1 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v4 = sub_1A8A74998();
        int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
        v5(v3, v4);
      }
      return;
    }
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1A8A75E28();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    }
    else
    {
      swift_release();
    }
    uint64_t v7 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  }
  uint64_t v9 = a1 + *(int *)(v7 + 20);
  int v10 = *(unsigned __int8 *)(v9 + 176);
  if (v10 != 255) {
    sub_1A856B460(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(void *)(v9 + 72), *(void *)(v9 + 80), *(void *)(v9 + 88), *(void *)(v9 + 96), *(void *)(v9 + 104), *(void *)(v9 + 112), *(void *)(v9 + 120), *(void *)(v9 + 128), *(void *)(v9 + 136), *(void *)(v9 + 144),
  }
      *(void *)(v9 + 152),
      *(void *)(v9 + 160),
      *(void *)(v9 + 168),
      v10 & 1);
}

void *sub_1A8933BAC(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v12 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      int v16 = v15[176];
      if (v16 == 255)
      {
LABEL_12:
        long long v18 = *((_OWORD *)v15 + 9);
        *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
        *((_OWORD *)v14 + 9) = v18;
        *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
        v14[176] = v15[176];
        long long v19 = *((_OWORD *)v15 + 5);
        *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
        *((_OWORD *)v14 + 5) = v19;
        long long v20 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v20;
        long long v21 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v21;
        long long v22 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v22;
        goto LABEL_14;
      }
LABEL_13:
      char v46 = v16 & 1;
      uint64_t v23 = *((void *)v15 + 5);
      uint64_t v24 = *((void *)v15 + 6);
      uint64_t v31 = *((void *)v15 + 7);
      uint64_t v32 = *((void *)v15 + 8);
      uint64_t v33 = *((void *)v15 + 9);
      uint64_t v34 = *((void *)v15 + 10);
      uint64_t v35 = *((void *)v15 + 11);
      uint64_t v36 = *((void *)v15 + 12);
      uint64_t v37 = *((void *)v15 + 13);
      uint64_t v38 = *((void *)v15 + 14);
      uint64_t v39 = *((void *)v15 + 15);
      uint64_t v40 = *((void *)v15 + 16);
      uint64_t v41 = *((void *)v15 + 17);
      uint64_t v42 = *((void *)v15 + 18);
      uint64_t v43 = *((void *)v15 + 19);
      uint64_t v44 = *((void *)v15 + 20);
      uint64_t v45 = *((void *)v15 + 21);
      uint64_t v25 = *(void *)v15;
      uint64_t v26 = *((void *)v15 + 1);
      uint64_t v27 = *((void *)v15 + 2);
      uint64_t v28 = *((void *)v15 + 3);
      uint64_t v29 = *((void *)v15 + 4);
      sub_1A86409B8(*(void *)v15, v26, v27, v28, v29, v23, v24, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
        v43,
        v44,
        v45,
        v16 & 1);
      *(void *)uint64_t v14 = v25;
      *((void *)v14 + 1) = v26;
      *((void *)v14 + 2) = v27;
      *((void *)v14 + 3) = v28;
      *((void *)v14 + 4) = v29;
      *((void *)v14 + 5) = v23;
      *((void *)v14 + 6) = v24;
      *((void *)v14 + 7) = v31;
      *((void *)v14 + 8) = v32;
      *((void *)v14 + 9) = v33;
      *((void *)v14 + 10) = v34;
      *((void *)v14 + 11) = v35;
      *((void *)v14 + 12) = v36;
      *((void *)v14 + 13) = v37;
      *((void *)v14 + 14) = v38;
      *((void *)v14 + 15) = v39;
      *((void *)v14 + 16) = v40;
      *((void *)v14 + 17) = v41;
      *((void *)v14 + 18) = v42;
      *((void *)v14 + 19) = v43;
      *((void *)v14 + 20) = v44;
      *((void *)v14 + 21) = v45;
      v14[176] = v46;
      goto LABEL_14;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_1A8A75E28();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v14 = (char *)a1 + v17;
      uint64_t v15 = (char *)a2 + v17;
      int v16 = v15[176];
      if (v16 == 255) {
        goto LABEL_12;
      }
      goto LABEL_13;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1A8934050(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1A8932F60((uint64_t)a1, _s12ConcatenatorV5StateOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v12 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      int v16 = v15[176];
      if (v16 == 255)
      {
LABEL_13:
        long long v18 = *(_OWORD *)v15;
        long long v19 = *((_OWORD *)v15 + 1);
        long long v20 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v20;
        *(_OWORD *)uint64_t v14 = v18;
        *((_OWORD *)v14 + 1) = v19;
        long long v21 = *((_OWORD *)v15 + 4);
        long long v22 = *((_OWORD *)v15 + 5);
        long long v23 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v23;
        *((_OWORD *)v14 + 4) = v21;
        *((_OWORD *)v14 + 5) = v22;
        long long v24 = *((_OWORD *)v15 + 8);
        long long v25 = *((_OWORD *)v15 + 9);
        long long v26 = *((_OWORD *)v15 + 10);
        v14[176] = v15[176];
        *((_OWORD *)v14 + 9) = v25;
        *((_OWORD *)v14 + 10) = v26;
        *((_OWORD *)v14 + 8) = v24;
        goto LABEL_15;
      }
LABEL_14:
      char v50 = v16 & 1;
      uint64_t v27 = *((void *)v15 + 5);
      uint64_t v28 = *((void *)v15 + 6);
      uint64_t v35 = *((void *)v15 + 7);
      uint64_t v36 = *((void *)v15 + 8);
      uint64_t v37 = *((void *)v15 + 9);
      uint64_t v38 = *((void *)v15 + 10);
      uint64_t v39 = *((void *)v15 + 11);
      uint64_t v40 = *((void *)v15 + 12);
      uint64_t v41 = *((void *)v15 + 13);
      uint64_t v42 = *((void *)v15 + 14);
      uint64_t v43 = *((void *)v15 + 15);
      uint64_t v44 = *((void *)v15 + 16);
      uint64_t v45 = *((void *)v15 + 17);
      uint64_t v46 = *((void *)v15 + 18);
      uint64_t v47 = *((void *)v15 + 19);
      uint64_t v48 = *((void *)v15 + 20);
      uint64_t v49 = *((void *)v15 + 21);
      uint64_t v29 = *(void *)v15;
      uint64_t v30 = *((void *)v15 + 1);
      uint64_t v31 = *((void *)v15 + 2);
      uint64_t v32 = *((void *)v15 + 3);
      uint64_t v33 = *((void *)v15 + 4);
      sub_1A86409B8(*(void *)v15, v30, v31, v32, v33, v27, v28, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46,
        v47,
        v48,
        v49,
        v16 & 1);
      *(void *)uint64_t v14 = v29;
      *((void *)v14 + 1) = v30;
      *((void *)v14 + 2) = v31;
      *((void *)v14 + 3) = v32;
      *((void *)v14 + 4) = v33;
      *((void *)v14 + 5) = v27;
      *((void *)v14 + 6) = v28;
      *((void *)v14 + 7) = v35;
      *((void *)v14 + 8) = v36;
      *((void *)v14 + 9) = v37;
      *((void *)v14 + 10) = v38;
      *((void *)v14 + 11) = v39;
      *((void *)v14 + 12) = v40;
      *((void *)v14 + 13) = v41;
      *((void *)v14 + 14) = v42;
      *((void *)v14 + 15) = v43;
      *((void *)v14 + 16) = v44;
      *((void *)v14 + 17) = v45;
      *((void *)v14 + 18) = v46;
      *((void *)v14 + 19) = v47;
      *((void *)v14 + 20) = v48;
      *((void *)v14 + 21) = v49;
      v14[176] = v50;
      goto LABEL_15;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_1A8A75E28();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v14 = (char *)a1 + v17;
      uint64_t v15 = (char *)a2 + v17;
      int v16 = v15[176];
      if (v16 == 255) {
        goto LABEL_13;
      }
      goto LABEL_14;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1A8934520(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_1A8A75E28();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      long long v15 = *((_OWORD *)v14 + 9);
      *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
      *((_OWORD *)v13 + 9) = v15;
      *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
      v13[176] = v14[176];
      long long v16 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v16;
      long long v17 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v17;
      long long v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      long long v19 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v19;
      goto LABEL_11;
    case 1:
      uint64_t v20 = _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v21 = sub_1A8A75E28();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
      }
      uint64_t v22 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      long long v23 = (char *)a1 + v22;
      long long v24 = (char *)a2 + v22;
      long long v25 = *((_OWORD *)v24 + 9);
      *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
      *((_OWORD *)v23 + 9) = v25;
      *((_OWORD *)v23 + 10) = *((_OWORD *)v24 + 10);
      v23[176] = v24[176];
      long long v26 = *((_OWORD *)v24 + 5);
      *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
      *((_OWORD *)v23 + 5) = v26;
      long long v27 = *((_OWORD *)v24 + 7);
      *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
      *((_OWORD *)v23 + 7) = v27;
      long long v28 = *((_OWORD *)v24 + 1);
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v28;
      long long v29 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v29;
      goto LABEL_11;
    case 0:
      *a1 = *a2;
      uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1A8A74998();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1A8934784(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8932F60((uint64_t)a1, _s12ConcatenatorV5StateOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v11 = sub_1A8A75E28();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        long long v15 = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
        *((_OWORD *)v13 + 9) = v15;
        *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        long long v16 = *((_OWORD *)v14 + 5);
        *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
        *((_OWORD *)v13 + 5) = v16;
        long long v17 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v17;
        long long v18 = *((_OWORD *)v14 + 1);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v18;
        long long v19 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v19;
        goto LABEL_12;
      case 1:
        uint64_t v20 = _s13TemporaryDataOMa();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v21 = sub_1A8A75E28();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        uint64_t v22 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
        long long v23 = (char *)a1 + v22;
        long long v24 = (char *)a2 + v22;
        long long v25 = *((_OWORD *)v24 + 9);
        *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
        *((_OWORD *)v23 + 9) = v25;
        *((_OWORD *)v23 + 10) = *((_OWORD *)v24 + 10);
        v23[176] = v24[176];
        long long v26 = *((_OWORD *)v24 + 5);
        *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
        *((_OWORD *)v23 + 5) = v26;
        long long v27 = *((_OWORD *)v24 + 7);
        *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
        *((_OWORD *)v23 + 7) = v27;
        long long v28 = *((_OWORD *)v24 + 1);
        *(_OWORD *)long long v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v28;
        long long v29 = *((_OWORD *)v24 + 3);
        *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
        *((_OWORD *)v23 + 3) = v29;
        goto LABEL_12;
      case 0:
        *a1 = *a2;
        uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1A8A74998();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A8934A0C()
{
  uint64_t result = _s12ConcatenatorV5StateO6NoDataVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s12ConcatenatorV5StateO9ReceivingVMa(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for MessageSectionData.Concatenator.Completed(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1A8934B0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1A8A74998();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1A8934BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1A8A74998();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_OWORD *sub_1A8934C40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A8A74998();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1A8934CBC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A8A74998();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1A8934D40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A8A74998();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1A8934DBC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A8A74998();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1A8934E38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8934E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1A8A74998();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1A8934EBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8934ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1A8A74998();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1A8934F44()
{
  uint64_t result = sub_1A8A74998();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A8934FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A8935048()
{
  unint64_t result = qword_1E974E550;
  if (!qword_1E974E550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E550);
  }
  return result;
}

uint64_t sub_1A893509C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A89350FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A8935164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A89351CC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

_WORD *__swift_memcpy2_1_2(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A89353BCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVMa()
{
  return &_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVN;
}

uint64_t sub_1A89353F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  long long v28 = a3;
  uint64_t v6 = sub_1A8A74998();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = _s13TemporaryDataOMa();
  MEMORY[0x1F4188790](v13);
  long long v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v17 = MEMORY[0x1F4188790](v16);
  long long v19 = (uint64_t *)((char *)&v26 - v18);
  if (a2 >= a1)
  {
    sub_1A8A75DD8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t, double))(v7 + 16))(v12, v28, v6, v17);
    _s13TemporaryFileCMa();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 24) = 0;
    uint64_t v21 = v27;
    uint64_t v22 = static URL.makeTemporaryFile(baseDirectory:pathExtension:)(v9);
    if (v21)
    {
      long long v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v12, v6);
      swift_deallocPartialClassInstance();
      return ((uint64_t (*)(char *, uint64_t))v23)(v28, v6);
    }
    uint64_t v27 = 0;
    *(_DWORD *)(v20 + 16) = v22;
    MEMORY[0x1AD0DE700](v22);
    sub_1A893596C();
    long long v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v12, v6);
    v25(v9, v6);
    v25(v28, v6);
    *long long v15 = v20;
    swift_storeEnumTagMultiPayload();
    long long v19 = v15;
  }
  return sub_1A8936060((uint64_t)v19, v26);
}

uint64_t sub_1A89356C0()
{
  uint64_t v1 = sub_1A8A75D28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E518);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A8A75D38();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v10 = v2 + 16;
    unint64_t v12 = v8 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v13 = *(void *)(v10 + 56);
    _OWORD v18[2] = v8;
    uint64_t v19 = v13;
    uint64_t v14 = v10;
    unint64_t v15 = v10 + 40;
    long long v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
    long long v24 = v11;
    uint64_t v25 = v14;
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v22 = (void (**)(char *, uint64_t))(v14 - 8);
    v18[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v20 = MEMORY[0x1E4FBC848] + 8;
    while (1)
    {
      v24(v7, v12, v1);
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v7, 0, 1, v1);
      if ((*v23)(v7, 1, v1) == 1) {
        break;
      }
      (*v21)(v4, v7, v1);
      sub_1A8A75D08();
      if (v0)
      {
        (*v22)(v4, v1);
        return swift_bridgeObjectRelease();
      }
      (*v22)(v4, v1);
      v12 += v19;
      if (!--v9) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_8:
    v16(v7, 1, 1, v1);
  }
  return swift_bridgeObjectRelease();
}

void sub_1A893596C()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1A8A74898();
  v7[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v7);

  id v3 = v7[0];
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v7[0];
    uint64_t v6 = (void *)sub_1A8A747D8();

    swift_willThrow();
  }
}

uint64_t sub_1A8935A8C()
{
  if ((sub_1A8A75638() & 0x100000000) != 0)
  {
    sub_1A893600C();
    swift_willThrowTypedImpl();
  }
  return swift_deallocClassInstance();
}

uint64_t _s13TemporaryFileCMa()
{
  return self;
}

uint64_t *sub_1A8935B04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1A8A75E28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A8935C04(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1A8A75E28();
    id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1A8935C94(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1A8A75E28();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1A8935D44(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1A8935E04((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A8935E04(uint64_t a1)
{
  uint64_t v2 = _s13TemporaryDataOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s13TemporaryDataOMa()
{
  uint64_t result = qword_1E97463E8;
  if (!qword_1E97463E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1A8935EAC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8935E04((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1A8A75E28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A8935F74()
{
  uint64_t result = sub_1A8A75E28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1A893600C()
{
  unint64_t result = qword_1E974E558;
  if (!qword_1E974E558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E558);
  }
  return result;
}

uint64_t sub_1A8936060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13TemporaryDataOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A89360C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1A8A75648();
  int v5 = result;
  if (v6)
  {
    sub_1A893600C();
    swift_willThrowTypedImpl();
    uint64_t result = swift_allocError();
    *uint64_t v10 = v5;
  }
  else
  {
    uint64_t v7 = *(void *)(a3 + 24);
    BOOL v8 = __OFADD__(v7, result);
    uint64_t v9 = v7 + result;
    if (v8) {
      __break(1u);
    }
    else {
      *(void *)(a3 + 24) = v9;
    }
  }
  return result;
}

uint64_t sub_1A8936180(uint64_t a1, uint64_t a2)
{
  return sub_1A89360C4(a1, a2, v2);
}

uint64_t sub_1A893619C()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8A78738();
  sub_1A8A78778();
  if (v1 != 1) {
    sub_1A8A78768();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A893620C()
{
  if (*(unsigned char *)(v0 + 8) == 1) {
    return sub_1A8A78778();
  }
  sub_1A8A78778();
  return sub_1A8A78768();
}

uint64_t sub_1A893625C()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8A78738();
  sub_1A8A78778();
  if (v1 != 1) {
    sub_1A8A78768();
  }
  return sub_1A8A787C8();
}

BOOL sub_1A89362C8(uint64_t a1, uint64_t a2)
{
  return sub_1A8581A18(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t MessageSize.init(rawValue:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  return result;
}

uint64_t *sub_1A89362F0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  char v3 = *((unsigned char *)result + 8);
  if (v3) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_1A8936310(uint64_t a1@<X8>)
{
  char v2 = *((unsigned char *)v1 + 8);
  if (v2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t MessageSize.init(nilLiteral:)()
{
  return 0;
}

unint64_t sub_1A8936348()
{
  unint64_t result = qword_1E974E560;
  if (!qword_1E974E560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E560);
  }
  return result;
}

uint64_t sub_1A893639C()
{
  return MEMORY[0x1E4FBB5C0];
}

void sub_1A89363A8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for MessageSize()
{
  return &type metadata for MessageSize;
}

uint64_t MessageToDownload.message.setter(uint64_t result)
{
  *int v1 = result;
  return result;
}

double (*MessageToDownload.message.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageToDownload.size.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MessageToDownload.size.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

double (*MessageToDownload.size.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageToDownload.bodyStructure.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t MessageToDownload.bodyStructure.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result & 1;
  return result;
}

double (*MessageToDownload.bodyStructure.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageToDownload.BodyStructure.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static MessageToDownload.BodyStructure.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t MessageToDownload.BodyStructure.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t static MessageToDownload.__derived_struct_equals(_:_:)(int a1, uint64_t a2, __int16 a3, int a4, uint64_t a5, __int16 a6)
{
  return sub_1A8936564(a1, a2, a3 & 0x101, a4, a5, a6 & 0x101);
}

uint64_t sub_1A8936514(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 17)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  if (*(unsigned char *)(a2 + 17)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1A8936564(*(_DWORD *)a1, *(void *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 16), *(_DWORD *)a2, *(void *)(a2 + 8), v3 | *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1A8936564(int a1, uint64_t a2, __int16 a3, int a4, uint64_t a5, __int16 a6)
{
  if (a4 != a1) {
    return 0;
  }
  if (a3)
  {
    if (a6) {
      return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
    }
    return 0;
  }
  uint64_t result = 0;
  if (a6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a5;
  }
  if ((a6 & 1) == 0 && v7 == a2) {
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  }
  return result;
}

unint64_t sub_1A89365B4()
{
  unint64_t result = qword_1E974E568;
  if (!qword_1E974E568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E568);
  }
  return result;
}

__n128 __swift_memcpy18_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MessageToDownload(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageToDownload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageToDownload()
{
  return &type metadata for MessageToDownload;
}

unsigned char *storeEnumTagSinglePayload for MessageToDownload.BodyStructure(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8936780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageToDownload.BodyStructure()
{
  return &type metadata for MessageToDownload.BodyStructure;
}

BOOL static MoveOrCopy.Operation.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t MoveOrCopy.Operation.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t MoveOrCopy.Operation.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t MoveOrCopy.Result.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return sub_1A8A78768();
  }
  sub_1A8A78768();
  sub_1A8A78798();
  return sub_1A8A78798();
}

uint64_t static MoveOrCopy.Result.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  BOOL v4 = HIDWORD(a1) == HIDWORD(a3);
  if (a3 != a1) {
    BOOL v4 = 0;
  }
  if (a4) {
    BOOL v4 = 0;
  }
  unsigned int v5 = a4 & (a3 == 0);
  if (a1) {
    unsigned int v5 = a4 & (a3 != 0);
  }
  if (a2) {
    return v5;
  }
  else {
    return v4;
  }
}

uint64_t MoveOrCopy.Result.hashValue.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    sub_1A8A78798();
    sub_1A8A78798();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A8936978()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8A78738();
  sub_1A8A78768();
  if (v1 != 1)
  {
    sub_1A8A78798();
    sub_1A8A78798();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A8936A0C()
{
  if (*(unsigned char *)(v0 + 8) == 1) {
    return sub_1A8A78768();
  }
  sub_1A8A78768();
  sub_1A8A78798();
  return sub_1A8A78798();
}

uint64_t sub_1A8936A7C()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8A78738();
  sub_1A8A78768();
  if (v1 != 1)
  {
    sub_1A8A78798();
    sub_1A8A78798();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A8936B0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  unsigned int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    BOOL v5 = v3 == 0;
    if (v3) {
      unsigned int v6 = 0;
    }
    else {
      unsigned int v6 = *((unsigned __int8 *)a2 + 8);
    }
    if (v5) {
      unsigned int v4 = 0;
    }
    if (v2) {
      return v4;
    }
    else {
      return v6;
    }
  }
  else if (v4)
  {
    return 0;
  }
  else
  {
    return v3 == v2 && HIDWORD(v2) == HIDWORD(v3);
  }
}

uint64_t MoveOrCopy.operation.getter()
{
  return *v0;
}

uint64_t MoveOrCopy.operation.setter(uint64_t result)
{
  *int v1 = result & 1;
  return result;
}

double (*MoveOrCopy.operation.modify())(void)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.sourceMessage.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t MoveOrCopy.sourceMessage.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

double (*MoveOrCopy.sourceMessage.modify())(void)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.targetMailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MoveOrCopy.targetMailbox.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(_DWORD *)(v2 + 16) = a2;
  return result;
}

double (*MoveOrCopy.targetMailbox.modify())(void)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.targetMessage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1A8512DFC(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t MoveOrCopy.targetMessage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A85135AC(*(void *)(v2 + 24), *(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

double (*MoveOrCopy.targetMessage.modify())(void)
{
  return nullsub_1;
}

uint64_t MoveOrCopy.init(operation:sourceMessage:targetMailbox:targetMessage:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = result & 1;
  *(_DWORD *)(a7 + 4) = a2;
  *(void *)(a7 + 8) = a3;
  *(_DWORD *)(a7 + 16) = a4;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = a6;
  return result;
}

uint64_t MoveOrCopy.hash(into:)()
{
  sub_1A8A78768();
  sub_1A8A78798();
  sub_1A8A78768();
  long long v2 = *(_OWORD *)(v0 + 24);
  sub_1A8519BD8((uint64_t)&v2);
  sub_1A8A74A78();
  return sub_1A8519C08((uint64_t)&v2);
}

uint64_t MoveOrCopy.hashValue.getter()
{
  sub_1A8A78738();
  sub_1A8A78768();
  sub_1A8A78798();
  sub_1A8A78768();
  long long v2 = *(_OWORD *)(v0 + 24);
  sub_1A8519BD8((uint64_t)&v2);
  sub_1A8A74A78();
  sub_1A8519C08((uint64_t)&v2);
  return sub_1A8A787C8();
}

uint64_t sub_1A8936E0C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  sub_1A8A78738();
  sub_1A8A78768();
  sub_1A8A78798();
  sub_1A8A78768();
  sub_1A8512DFC(v1, v2);
  sub_1A8A74A78();
  sub_1A85135AC(v1, v2);
  return sub_1A8A787C8();
}

uint64_t sub_1A8936EB0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  sub_1A8A78768();
  sub_1A8A78798();
  sub_1A8A78768();
  sub_1A8512DFC(v1, v2);
  sub_1A8A74A78();
  return sub_1A85135AC(v1, v2);
}

uint64_t sub_1A8936F3C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  sub_1A8A78738();
  sub_1A8A78768();
  sub_1A8A78798();
  sub_1A8A78768();
  sub_1A8512DFC(v1, v2);
  sub_1A8A74A78();
  sub_1A85135AC(v1, v2);
  return sub_1A8A787C8();
}

uint64_t sub_1A8936FDC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s16IMAP2Persistence10MoveOrCopyV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

uint64_t _s16IMAP2Persistence10MoveOrCopyV23__derived_struct_equalsySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2
    || *((_DWORD *)a2 + 1) != *((_DWORD *)a1 + 1)
    || (*((unsigned int *)a1 + 4) | ((unint64_t)*((unsigned int *)a1 + 4) << 32)) != (*((unsigned int *)a2 + 4) | ((unint64_t)*((unsigned int *)a2 + 4) << 32))
    || !sub_1A8866D34(*((void *)a1 + 1), *((void *)a2 + 1)))
  {
    return 0;
  }
  uint64_t v5 = *((void *)a1 + 3);
  unint64_t v4 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a2 + 3);
  unint64_t v6 = *((void *)a2 + 4);
  sub_1A8512DFC(v5, v4);
  sub_1A8512DFC(v7, v6);
  char v8 = sub_1A894E0C4(v5, v4, v7, v6);
  sub_1A85135AC(v7, v6);
  sub_1A85135AC(v5, v4);
  return v8 & 1;
}

unint64_t sub_1A8937104()
{
  unint64_t result = qword_1E974E570;
  if (!qword_1E974E570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E570);
  }
  return result;
}

unint64_t sub_1A893715C()
{
  unint64_t result = qword_1E974E578;
  if (!qword_1E974E578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E578);
  }
  return result;
}

unint64_t sub_1A89371B4()
{
  unint64_t result = qword_1E9742F10;
  if (!qword_1E9742F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742F10);
  }
  return result;
}

uint64_t destroy for MoveOrCopy(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  return sub_1A85135AC(v2, v3);
}

uint64_t initializeWithCopy for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  unint64_t v4 = *(void *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8512DFC(v3, v4);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithCopy for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v4 = *(void *)(a2 + 32);
  sub_1A8512DFC(v5, v4);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  sub_1A85135AC(v6, v7);
  return a1;
}

__n128 __swift_memcpy40_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1A85135AC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveOrCopy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MoveOrCopy()
{
  return &type metadata for MoveOrCopy;
}

unsigned char *storeEnumTagSinglePayload for MoveOrCopy.Operation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A89374BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveOrCopy.Operation()
{
  return &type metadata for MoveOrCopy.Operation;
}

ValueMetadata *type metadata accessor for MoveOrCopy.Result()
{
  return &type metadata for MoveOrCopy.Result;
}

BOOL static OpaqueMailboxID.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a2 == a4 && sub_1A8866D34(a1, a3);
}

uint64_t OpaqueMailboxID.hashValue.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OpaqueMailboxID.init(rawValue:)(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A893759C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1A8A787D8();
  sub_1A8A78748();
  uint64_t result = sub_1A8A787B8();
  *a2 = v3;
  a2[1] = result;
  return result;
}

uint64_t sub_1A8937618@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void *OpaqueMailboxID.init(_:)(uint64_t a1, unint64_t a2)
{
  unsigned int v4 = sub_1A8937840(a1, a2);
  sub_1A8A787D8();
  sub_1A8A78748();
  sub_1A8A787B8();
  sub_1A85135AC(a1, a2);
  return v4;
}

uint64_t OpaqueMailboxID.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t sub_1A89376E4()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1A89376EC()
{
  return sub_1A8A78768();
}

uint64_t sub_1A8937718()
{
  return sub_1A8A787C8();
}

BOOL sub_1A893775C(uint64_t *a1, uint64_t *a2)
{
  return a1[1] == a2[1] && sub_1A8866D34(*a1, *a2);
}

uint64_t OpaqueMailboxID.description.getter(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = result;
    MEMORY[0x1AD0DF770](2 * v1);
    if (v1)
    {
      uint64_t v3 = v2 + 32;
      sub_1A89379FC();
      do
      {
        ++v3;
        sub_1A8A76918();
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        --v1;
      }
      while (v1);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A8937838()
{
  return OpaqueMailboxID.description.getter(*v0);
}

void *sub_1A8937840(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1A8A74AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = (void *)MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EC8);
          char v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size_0(v8);
          _OWORD v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_1A8512DFC(a1, a2);
        uint64_t v13 = sub_1A8A749E8();
        sub_1A85135AC(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x1A89379ECLL);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1A89379FC()
{
  unint64_t result = qword_1E9745FB8;
  if (!qword_1E9745FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9745FB8);
  }
  return result;
}

unint64_t sub_1A8937A54()
{
  unint64_t result = qword_1E9743040;
  if (!qword_1E9743040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743040);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaqueMailboxID()
{
  return &type metadata for OpaqueMailboxID;
}

uint64_t OpaquePersistedMessageIdentifier.rawValue.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t OpaquePersistedMessageIdentifier.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A85135AC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

double (*OpaquePersistedMessageIdentifier.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A8937B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1A8512DFC(v2, v3);
}

uint64_t sub_1A8937B50()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1A8A78738();
  sub_1A8512DFC(v1, v2);
  sub_1A8A74A78();
  sub_1A85135AC(v1, v2);
  return sub_1A8A787C8();
}

uint64_t sub_1A8937BB4()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_1A8512DFC(v2, v1);
  sub_1A8A74A78();
  return sub_1A85135AC(v2, v1);
}

uint64_t sub_1A8937C14()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1A8A78738();
  sub_1A8512DFC(v1, v2);
  sub_1A8A74A78();
  sub_1A85135AC(v1, v2);
  return sub_1A8A787C8();
}

uint64_t sub_1A8937C74(void *a1, void *a2)
{
  return sub_1A894E0C4(*a1, a1[1], *a2, a2[1]);
}

uint64_t OpaquePersistedMessageIdentifier.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  unint64_t v2 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_17;
      }
      uint64_t v5 = (int)v5;
LABEL_6:
      if (v5 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      MEMORY[0x1AD0DF770](2 * v5);
      if (v2)
      {
        if (v2 != 1)
        {
          uint64_t v10 = *(void *)(a1 + 16);
          uint64_t v11 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          sub_1A8937F5C(v10, v11);
          swift_release();
          swift_release();
          return v14;
        }
        if (a1 >> 32 >= (int)a1)
        {
          swift_retain();
          sub_1A8937F5C((int)a1, a1 >> 32);
          sub_1A85135AC(a1, a2);
          return v14;
        }
LABEL_19:
        __break(1u);
      }
      v13[0] = a1;
      LOWORD(v13[1]) = a2;
      BYTE2(v13[1]) = BYTE2(a2);
      BYTE3(v13[1]) = BYTE3(a2);
      BYTE4(v13[1]) = BYTE4(a2);
      BYTE5(v13[1]) = BYTE5(a2);
      uint64_t v9 = (char *)v13 + BYTE6(a2);
LABEL_13:
      sub_1A8937EBC((uint64_t)v13, (uint64_t)v9);
      return v14;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      MEMORY[0x1AD0DF770](0);
      memset(v13, 0, 14);
      uint64_t v9 = (char *)v13;
      goto LABEL_13;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1A8937EBC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = a2 - result;
    if (a2 != result)
    {
      sub_1A89379FC();
      do
      {
        ++v2;
        sub_1A8A76918();
        sub_1A8A767E8();
        uint64_t result = swift_bridgeObjectRelease();
        --v3;
      }
      while (v3);
    }
  }
  return result;
}

uint64_t sub_1A8937F54()
{
  return OpaquePersistedMessageIdentifier.description.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_1A8937F5C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A8A74588();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = sub_1A8A745B8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1A8A745A8();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  return sub_1A8937EBC(v5, v11);
}

unint64_t sub_1A8938004()
{
  unint64_t result = qword_1E97431D8;
  if (!qword_1E97431D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97431D8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OpaquePersistedMessageIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1A8512DFC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithCopy for OpaquePersistedMessageIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1A8512DFC(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1A85135AC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for OpaquePersistedMessageIdentifier(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1A85135AC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaquePersistedMessageIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for OpaquePersistedMessageIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaquePersistedMessageIdentifier()
{
  return &type metadata for OpaquePersistedMessageIdentifier;
}

uint64_t MessageAttribute.BodyStructure.partsForHTMLBody()()
{
  uint64_t v1 = v0;
  sub_1A8644AD0(v0, (uint64_t)v13);
  sub_1A8644AD0((uint64_t)v13, (uint64_t)v16);
  sub_1A8644AD0(v0, (uint64_t)v14);
  if (sub_1A8644FE0((uint64_t)v14) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A28);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1A8AD8F00;
    *(void *)(v2 + 32) = MEMORY[0x1E4FBC860];
    return sub_1A89393A8(v2);
  }
  else
  {
    sub_1A8644F84((uint64_t)v14, (uint64_t)v15);
    sub_1A8644AD0((uint64_t)v16, (uint64_t)v12);
    sub_1A87036F8((uint64_t)v12);
    uint64_t v4 = sub_1A8938690();
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    uint64_t v11 = MEMORY[0x1E4FBC870];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A89401CC(v4, v6, v8, (uint64_t)&v11, v4, v6, v8);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v3 = sub_1A8938BA0(v11, 65000, 15000, v9, v4, v6, v8);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A8940778(v1);
  }
  return v3;
}

uint64_t BodyStructure.partsForHTMLBody()()
{
  uint64_t v0 = sub_1A8938690();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC870];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A89401CC(v0, v2, v4, (uint64_t)&v8, v0, v2, v4);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = sub_1A8938BA0(v8, 65000, 15000, v5, v0, v2, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t MessageAttribute.BodyStructure.partsForWatch()()
{
  uint64_t v1 = v0;
  sub_1A8644AD0(v0, (uint64_t)v15);
  sub_1A8644AD0((uint64_t)v15, (uint64_t)v18);
  sub_1A8644AD0(v0, (uint64_t)v16);
  if (sub_1A8644FE0((uint64_t)v16) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A28);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1A8AD8F00;
    *(void *)(v2 + 32) = MEMORY[0x1E4FBC860];
    return sub_1A89393A8(v2);
  }
  else
  {
    sub_1A8644F84((uint64_t)v16, (uint64_t)v17);
    sub_1A8644AD0((uint64_t)v18, (uint64_t)v14);
    sub_1A87036F8((uint64_t)v14);
    uint64_t v4 = sub_1A8938690();
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    uint64_t v13 = MEMORY[0x1E4FBC870];
    sub_1A89397B8(v4, v5, v7);
    uint64_t v9 = sub_1A8938DF0(v4, v6, v8);
    uint64_t v10 = sub_1A8938F38(v9, v13);
    uint64_t v3 = sub_1A8938BA0(v10, 65000, 15000, v11, v4, v6, v8);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A8940778(v1);
  }
  return v3;
}

uint64_t BodyStructure.partsForWatch()()
{
  uint64_t v0 = sub_1A8938690();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v10 = MEMORY[0x1E4FBC870];
  sub_1A89397B8(v0, v1, v3);
  uint64_t v5 = sub_1A8938DF0(v0, v2, v4);
  uint64_t v6 = sub_1A8938F38(v5, v10);
  uint64_t v8 = sub_1A8938BA0(v6, 65000, 15000, v7, v0, v2, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_1A8938690()
{
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = sub_1A893FB30(MEMORY[0x1E4FBC860]);
  v0[3] = v1;
  v0[4] = v2;
  int64_t v9[2] = v0 + 2;
  BodyStructure.enumerateParts(_:)((void (*)(uint64_t, unsigned char *))sub_1A8940AE4, (uint64_t)v9);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = sub_1A893FCF4(v3, v4, v5, (void (*)(long long *__return_ptr, uint64_t, long long *))sub_1A8940B00);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = sub_1A893FF10(v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t BodyStructure.singlePartsWithSizes.getter()
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  v1[2] = &v2;
  BodyStructure.enumerateParts(_:)((void (*)(uint64_t, unsigned char *))sub_1A89407E4, (uint64_t)v1);
  return v2;
}

void sub_1A893880C(uint64_t a1, uint64_t a2, char **a3)
{
  sub_1A8644F84(a2, (uint64_t)v15);
  sub_1A8644F84((uint64_t)v15, (uint64_t)v17);
  sub_1A8644F84(a2, (uint64_t)v16);
  if (sub_1A8644FF4((uint64_t)v16) == 1)
  {
    nullsub_1(v16);
  }
  else
  {
    nullsub_1(v16);
    sub_1A8644F84((uint64_t)v17, (uint64_t)v14);
    nullsub_1(v14);
    uint64_t v7 = *(void *)(v6 + 80);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v8 = BodyStructure.isAttachment.getter();
    uint64_t v9 = *a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1A891C720(0, *((void *)v9 + 2) + 1, 1, v9);
      *a3 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1)
    {
      uint64_t v9 = sub_1A891C720((char *)(v11 > 1), v12 + 1, 1, v9);
      *a3 = v9;
    }
    *((void *)v9 + 2) = v12 + 1;
    uint64_t v13 = &v9[24 * v12];
    *((void *)v13 + 4) = a1;
    *((void *)v13 + 5) = v7;
    v13[48] = v8 & 1;
  }
}

uint64_t BodyStructure.SinglePartWithSize.part.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

double (*BodyStructure.SinglePartWithSize.part.modify())(void)
{
  return nullsub_1;
}

uint64_t BodyStructure.SinglePartWithSize.byteCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t BodyStructure.SinglePartWithSize.byteCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*BodyStructure.SinglePartWithSize.byteCount.modify())(void)
{
  return nullsub_1;
}

uint64_t BodyStructure.SinglePartWithSize.isAttachment.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t BodyStructure.SinglePartWithSize.isAttachment.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

double (*BodyStructure.SinglePartWithSize.isAttachment.modify())(void)
{
  return nullsub_1;
}

uint64_t static BodyStructure.SinglePartWithSize.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(a1, a4) & (a2 == a5) & (a3 ^ a6 ^ 1);
}

uint64_t sub_1A8938A64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)a2) & (v2 == v4) & (v3 ^ v5 ^ 1);
}

uint64_t BodyStructure.BodyPartListLimits.totalSize.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*BodyStructure.BodyPartListLimits.totalSize.modify())(void)
{
  return nullsub_1;
}

uint64_t BodyStructure.BodyPartListLimits.additionalPartSize.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t BodyStructure.BodyPartListLimits.additionalPartSize.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*BodyStructure.BodyPartListLimits.additionalPartSize.modify())(void)
{
  return nullsub_1;
}

uint64_t BodyStructure.BodyPartListLimits.partCount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t BodyStructure.BodyPartListLimits.partCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

double (*BodyStructure.BodyPartListLimits.partCount.modify())(void)
{
  return nullsub_1;
}

BOOL static BodyStructure.BodyPartListLimits.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

BOOL sub_1A8938B60(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t static BodyStructure.BodyPartListLimits.default.getter()
{
  return 65000;
}

uint64_t sub_1A8938BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (sub_1A89408A8(a6, a7))
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A28);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1A8AD8F00;
    *(void *)(v12 + 32) = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v13 = sub_1A893F53C(0, a1, a5, a6, a7);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_1A89390B0(a1, v13, a5, a6, a7);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    if (v14)
    {
      uint64_t v17 = v13 + a3;
      BOOL v18 = __OFADD__(v13, a3);
      do
      {
        if (v16 > a2)
        {
          if (v18)
          {
            __break(1u);
            uint64_t result = swift_release();
            __break(1u);
            return result;
          }
          if (v17 < v16)
          {
            swift_bridgeObjectRelease();
            break;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v19 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v20 = sub_1A89390B0(v19, v16, a5, a6, a7);
        uint64_t v16 = v21;
        swift_bridgeObjectRelease();
      }
      while (v20);
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    long long v23 = sub_1A8946030(v22);
    swift_bridgeObjectRelease();
    uint64_t v26 = v23;
    sub_1A8939A6C((uint64_t *)&v26, (uint64_t (*)(uint64_t))sub_1A89473A8, sub_1A893B5A8);
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t)v26;
  }
  return sub_1A89393A8(v12);
}

uint64_t sub_1A8938DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  sub_1A8939534(a1, a2, a3, 2500000, &v12);
  sub_1A8939A6C((uint64_t *)&v12, (uint64_t (*)(uint64_t))sub_1A893F068, sub_1A893BC4C);
  int v3 = v12;
  uint64_t v11 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v12[2];
  if (v4)
  {
    uint64_t result = swift_bridgeObjectRetain_n();
    uint64_t v6 = 0;
    for (uint64_t i = v3 + 5; ; i += 2)
    {
      uint64_t v8 = v6 + *i;
      if (__OFADD__(v6, *i)) {
        break;
      }
      if (v8 <= 3999999)
      {
        uint64_t v9 = *(i - 1);
        swift_bridgeObjectRetain_n();
        sub_1A891CA44(&v10, v9);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v6 = v8;
      }
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        return v11;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return result;
}

uint64_t sub_1A8938F38(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v16 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(v2 + 48) + 8 * v10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A891CA44(&v15, v11);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A89390B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = MEMORY[0x1E4FBC870];
  uint64_t v9 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v15 = 0;
  while (v12)
  {
    unint64_t v16 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * v17);
    if (*(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_1A893B37C(1, v21);
      sub_1A891CA44(&v35, v22);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v18);
  ++v15;
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 1;
  if (v18 + 1 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 2;
  if (v18 + 2 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 3;
  if (v18 + 3 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 4;
  if (v18 + 4 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19)
  {
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_24;
  }
  int64_t v20 = v18 + 5;
  if (v20 < v13)
  {
    unint64_t v19 = *(void *)(v9 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v15 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_38;
        }
        if (v15 >= v13) {
          goto LABEL_26;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v15);
        ++v20;
        if (v19) {
          goto LABEL_23;
        }
      }
    }
    int64_t v15 = v20;
    goto LABEL_23;
  }
LABEL_26:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  long long v24 = (void *)sub_1A893F8F8(v23, a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = v24[2];
  if (v25)
  {
    uint64_t v26 = v24[4];
    uint64_t v27 = v24[5];
    uint64_t v28 = v25 - 1;
    if (v25 == 1)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      long long v29 = v24 + 7;
      uint64_t v30 = v26;
      uint64_t v31 = v24 + 7;
      do
      {
        uint64_t v33 = *v31;
        v31 += 2;
        uint64_t v32 = v33;
        if (v33 < v27)
        {
          uint64_t v30 = *(v29 - 1);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_bridgeObjectRelease();
          uint64_t v27 = v32;
        }
        long long v29 = v31;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      uint64_t v26 = v30;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v26;
}

uint64_t sub_1A89393A8(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_6_4();
  uint64_t v4 = sub_1A893C878(&v12, a1, 0, 1, v3);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = v12;
  if (v12 == v5) {
    return v4;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < v12)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    swift_bridgeObjectRelease();
    sub_1A8945F60(a1, v1, 0, (2 * v6) | 1);
    uint64_t v9 = v11;
    goto LABEL_9;
  }
  uint64_t v1 = a1 + 32;
  sub_1A8A785E8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_unknownObjectRetain_n();
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(v7 + 16);
  swift_release();
  if (v8 != v6) {
    goto LABEL_14;
  }
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
LABEL_9:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = v4;
  uint64_t v14 = v9;
  if (*(void *)(a1 + 16) >= v5)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    sub_1A893CB00(a1, v1, v6, (2 * v5) | 1);
    swift_bridgeObjectRelease_n();
    swift_release();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8939534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v26 = a3 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v23 = v5;
    uint64_t v24 = a4;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v26 + 48 * v8);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      uint64_t v13 = v10[2];
      int v14 = *((unsigned __int8 *)v10 + 24);
      uint64_t v27 = v10[4];
      if (v7)
      {
        unint64_t v15 = *(void *)(v7 + 16);
        if (v15 < *(void *)(v11 + 16))
        {
          if (!v15) {
            goto LABEL_5;
          }
          if (*(void *)(v11 + 32) == *(void *)(v7 + 32))
          {
            unint64_t v16 = v15 - 1;
            if (!v16) {
              goto LABEL_5;
            }
            uint64_t v17 = 0;
            while (*(void *)(v11 + 40 + 8 * v17) == *(void *)(v7 + 8 * v17 + 40))
            {
              if (v16 == ++v17) {
                goto LABEL_5;
              }
            }
          }
        }
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8940878(v12, v13, v14);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        if (v14 != 2)
        {
LABEL_18:
          if (v14 == 5 && !(v13 | v12))
          {
            swift_bridgeObjectRelease();
            uint64_t v7 = v11;
            goto LABEL_5;
          }
          if (v27 < a4)
          {
            int64_t v18 = *a5;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a5 = v18;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              int64_t v18 = sub_1A891C5FC(0, v18[2] + 1, 1, v18);
              *a5 = v18;
            }
            unint64_t v21 = v18[2];
            unint64_t v20 = v18[3];
            if (v21 >= v20 >> 1)
            {
              int64_t v18 = sub_1A891C5FC((void *)(v20 > 1), v21 + 1, 1, v18);
              *a5 = v18;
            }
            _OWORD v18[2] = v21 + 1;
            uint64_t v9 = &v18[2 * v21];
            void v9[4] = v11;
            v9[5] = v27;
            uint64_t v5 = v23;
            a4 = v24;
          }
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8940878(v12, v13, v14);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v14 != 2) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
      sub_1A8940890(v12, v13, v14);
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
LABEL_5:
      if (++v8 == v5)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1A89397B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v21 = a3 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v9 = v21 + 48 * v5;
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t v12 = *(void *)(v9 + 16);
      int v13 = *(unsigned __int8 *)(v9 + 24);
      if (v4)
      {
        unint64_t v14 = *(void *)(v4 + 16);
        if (v14 < *(void *)(v10 + 16))
        {
          if (!v14) {
            goto LABEL_5;
          }
          if (*(void *)(v10 + 32) == *(void *)(v4 + 32))
          {
            unint64_t v15 = v14 - 1;
            if (!v15) {
              goto LABEL_5;
            }
            uint64_t v16 = 0;
            while (*(void *)(v10 + 40 + 8 * v16) == *(void *)(v4 + 8 * v16 + 40))
            {
              if (v15 == ++v16) {
                goto LABEL_5;
              }
            }
          }
        }
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8940878(v11, v12, v13);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        if (v13 != 2)
        {
LABEL_16:
          if (v13 == 5 && !(v12 | v11))
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v10;
            goto LABEL_5;
          }
          swift_bridgeObjectRelease();
          uint64_t v6 = v11;
          uint64_t v7 = v12;
          unsigned __int8 v8 = v13;
          goto LABEL_4;
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8940878(v11, v12, v13);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v13 != 2) {
          goto LABEL_16;
        }
      }
      if (sub_1A8A76618() != v11 || v12 != v17)
      {
        char v18 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_24;
        }
        if (sub_1A8A76618() != v11 || v12 != v19)
        {
          char v20 = sub_1A8A78588();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0) {
            goto LABEL_25;
          }
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
LABEL_24:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A891CA44(&v22, v10);
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v6 = v11;
      uint64_t v7 = v12;
      unsigned __int8 v8 = 2;
LABEL_4:
      sub_1A8940890(v6, v7, v8);
      swift_bridgeObjectRelease();
      uint64_t v4 = 0;
LABEL_5:
      if (++v5 == v3)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1A8939A6C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

unint64_t sub_1A8939AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unint64_t result = sub_1A893CE9C(a1, a2, a3);
  if (v8)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v16 = 0;
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(a4 + 16))
  {
    uint64_t v9 = a4 + 48 * result;
    uint64_t v10 = *(void *)(v9 + 32);
    uint64_t v11 = *(void *)(v9 + 40);
    uint64_t v12 = *(void *)(v9 + 48);
    uint64_t v14 = *(void *)(v9 + 64);
    uint64_t v13 = *(void *)(v9 + 72);
    unsigned __int8 v15 = *(unsigned char *)(v9 + 56);
    uint64_t v16 = v15;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8940878(v11, v12, v15);
    unint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_6:
    *a5 = v10;
    a5[1] = v11;
    a5[2] = v12;
    a5[3] = v16;
    a5[4] = v14;
    a5[5] = v13;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8939BB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  return sub_1A8954F6C(*a1, *a2) & (v2 == v3);
}

uint64_t sub_1A8939BEC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A891DB74(0, v1, 0);
    uint64_t result = sub_1A85DD8C0(a1);
    uint64_t v4 = result;
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_13;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_14;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      sub_1A8A78028();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      unint64_t v10 = *(void *)(v15 + 16);
      unint64_t v9 = *(void *)(v15 + 24);
      if (v10 >= v9 >> 1) {
        sub_1A891DB74((char *)(v9 > 1), v10 + 1, 1);
      }
      *(void *)(v15 + 16) = v10 + 1;
      uint64_t v11 = v15 + 16 * v10;
      *(void *)(v11 + 32) = 0;
      *(void *)(v11 + 40) = 0xE000000000000000;
      uint64_t result = sub_1A85DD964(v4, v6, v8 & 1, a1);
      uint64_t v4 = result;
      uint64_t v6 = v12;
      char v8 = v13 & 1;
      if (!--v1)
      {
        sub_1A856B010(result, v12, v13 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9744580);
    sub_1A8924B8C();
    uint64_t v14 = sub_1A8A76348();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    sub_1A8A784D8();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    return v14;
  }
  return result;
}

uint64_t sub_1A8939E68()
{
  return sub_1A8939BEC(*v0);
}

uint64_t sub_1A8939E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)a1) & 1) == 0
    || (sub_1A893F07C(v2, v3, v4, v7, v8, v9) & 1) == 0
    || v6 != v11)
  {
    return 0;
  }
  return sub_1A8954F6C(v5, v10);
}

BOOL sub_1A8939F3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  return (sub_1A893DF30(*a2, a2[1], *a1, a1[1]) & 1) != 0 && (sub_1A893DBB4(v2, v3) & 1) != 0;
}

uint64_t sub_1A8939F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A891DB74(0, v3, 0);
    uint64_t v5 = a3 + 72;
    do
    {
      uint64_t v6 = *(void *)(v5 - 32);
      uint64_t v7 = *(void *)(v5 - 24);
      unsigned __int8 v8 = *(unsigned char *)(v5 - 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8940878(v6, v7, v8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v9 = sub_1A893A15C();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_1A8940890(v6, v7, v8);
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v17 + 16);
      unint64_t v12 = *(void *)(v17 + 24);
      if (v13 >= v12 >> 1) {
        sub_1A891DB74((char *)(v12 > 1), v13 + 1, 1);
      }
      *(void *)(v17 + 16) = v13 + 1;
      uint64_t v14 = v17 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v5 += 48;
      --v3;
    }
    while (v3);
    swift_release();
    swift_release();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9744580);
  sub_1A8924B8C();
  uint64_t v15 = sub_1A8A76348();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1A893A150()
{
  return sub_1A8939F90(*v0, v0[1], v0[2]);
}

uint64_t sub_1A893A15C()
{
  if (*(void *)(*(void *)(v0 + 40) + 16))
  {
    sub_1A8A77DC8();
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A76628();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    uint64_t v1 = *(void *)(v0 + 8);
    uint64_t v2 = *(void *)(v0 + 16);
    char v3 = *(unsigned char *)(v0 + 24);
    sub_1A8940878(v1, v2, v3);
    sub_1A893A848(v1, v2, v3);
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8940890(v1, v2, v3);
    sub_1A8A767E8();
    sub_1A8A784D8();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    sub_1A8A784D8();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A8A77DC8();
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A76628();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    uint64_t v4 = *(void *)(v0 + 8);
    uint64_t v5 = *(void *)(v0 + 16);
    char v6 = *(unsigned char *)(v0 + 24);
    sub_1A8940878(v4, v5, v6);
    sub_1A893A848(v4, v5, v6);
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8940890(v4, v5, v6);
    sub_1A8A767E8();
    sub_1A8A784D8();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
  }
  return 39;
}

uint64_t sub_1A893A41C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (*(void *)(result + 16))
  {
    uint64_t v8 = result;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v9 = sub_1A893B37C(1, v8);
    sub_1A8939AF0(v9, a2, a3, a4, v45);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A8529F8C((uint64_t)v45, (uint64_t)v46, &qword_1E97417F0);
    if (*(void *)&v46[0])
    {
      v47[0] = v46[0];
      v47[1] = v46[1];
      long long v48 = v46[2];
      uint64_t v49 = *(void *)&v46[0];
      sub_1A8940A50((_OWORD *)((char *)v47 + 8), (uint64_t)v50);
      sub_1A8940A68((uint64_t)v50);
      uint64_t v51 = *((void *)&v48 + 1);
      sub_1A85276F0((uint64_t)&v51);
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_1A89400E0(v10);
      char v13 = v12;
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        uint64_t v14 = *(void *)(a4 + 16);
        if (v14)
        {
          uint64_t v15 = v49;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v40 = v15;
          uint64_t v41 = 0;
          uint64_t v16 = 0;
          uint64_t v38 = (uint64_t *)(v15 + 40);
          uint64_t v44 = v11;
          uint64_t v43 = v14;
          while (1)
          {
            if (v11 >= v16) {
              goto LABEL_8;
            }
            uint64_t v17 = a4 + 32 + 48 * v16;
            char v18 = *(void **)v17;
            uint64_t v19 = *(void *)(v17 + 8);
            uint64_t v20 = *(void *)(v17 + 16);
            int v21 = *(unsigned __int8 *)(v17 + 24);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A8940878(v19, v20, v21);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18)) {
              break;
            }
            unint64_t v22 = *(void *)(v40 + 16);
            unint64_t v23 = v18[2];
            if (v22 >= v23) {
              goto LABEL_39;
            }
            if (v22)
            {
              if (v18[4] != *(void *)(v40 + 32)) {
                goto LABEL_39;
              }
              unint64_t v24 = v22 - 1;
              if (v24)
              {
                uint64_t v25 = v18 + 5;
                uint64_t v26 = v38;
                while (1)
                {
                  uint64_t v28 = *v26++;
                  uint64_t v27 = v28;
                  uint64_t v29 = *v25++;
                  if (v29 != v27) {
                    break;
                  }
                  if (!--v24) {
                    goto LABEL_18;
                  }
                }
LABEL_39:
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                sub_1A85276F0((uint64_t)&v49);
                swift_bridgeObjectRelease();
                sub_1A8940890(v19, v20, v21);
                return swift_bridgeObjectRelease();
              }
            }
LABEL_18:
            if (v41)
            {
              unint64_t v30 = v41[2];
              if (v30 < v23)
              {
                if (!v30) {
                  break;
                }
                if (v18[4] == v41[4])
                {
                  unint64_t v31 = v30 - 1;
                  if (v30 == 1) {
                    break;
                  }
                  uint64_t v32 = v41 + 5;
                  uint64_t v33 = v18 + 5;
                  while (1)
                  {
                    uint64_t v35 = *v32++;
                    uint64_t v34 = v35;
                    uint64_t v36 = *v33++;
                    if (v36 != v34) {
                      break;
                    }
                    if (!--v31) {
                      goto LABEL_6;
                    }
                  }
                }
              }
              swift_bridgeObjectRelease();
            }
            if (v21 == 2)
            {
              if (sub_1A8A76618() == v19 && v20 == v37)
              {
                swift_bridgeObjectRelease();
                goto LABEL_36;
              }
              char v42 = sub_1A8A78588();
              swift_bridgeObjectRelease();
              if (v42) {
LABEL_36:
              }
                *a5 = 1;
              LOBYTE(v21) = 2;
LABEL_38:
              swift_bridgeObjectRelease();
              sub_1A8940890(v19, v20, v21);
              swift_bridgeObjectRelease();
              uint64_t v41 = 0;
              goto LABEL_7;
            }
            if (v21 != 5 || v20 | v19) {
              goto LABEL_38;
            }
            swift_bridgeObjectRelease();
            uint64_t v41 = v18;
LABEL_7:
            uint64_t v11 = v44;
            uint64_t v14 = v43;
LABEL_8:
            if (++v16 == v14)
            {
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_42;
            }
          }
LABEL_6:
          swift_bridgeObjectRelease();
          sub_1A8940890(v19, v20, v21);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
LABEL_42:
        swift_bridgeObjectRelease();
      }
      return sub_1A85276F0((uint64_t)&v49);
    }
  }
  return result;
}

uint64_t sub_1A893A82C(uint64_t a1, uint64_t a2)
{
  return sub_1A893F07C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1A893A848(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 5:
      if (a1 | a2) {
        uint64_t result = 0x726568746FLL;
      }
      else {
        uint64_t result = 0x6567617373656DLL;
      }
      break;
    default:
      sub_1A8A767E8();
      sub_1A8A78028();
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1A893A9BC()
{
  return sub_1A893A848(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1A893A9C8(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v4 = sub_1A893AB70();
  uint64_t v6 = v5;
  unsigned __int8 v8 = v7;
  sub_1A8644F84(a2, (uint64_t)v20);
  int v9 = sub_1A8644FF4((uint64_t)v20);
  nullsub_1(v20);
  if (v9 == 1) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(v10 + 80);
  }
  v21[0] = v4;
  v21[1] = v6;
  void v21[2] = v8;
  _OWORD v21[3] = v11;
  v21[4] = v9 == 1;
  v21[5] = MEMORY[0x1E4FBC870];
  uint64_t result = sub_1A893ADCC(v21, a1);
  if (*(void *)(a1 + 16))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v13 = sub_1A893B37C(1, a1);
    uint64_t v15 = sub_1A893B0F0(v19, v13);
    if (*(void *)(v14 + 40))
    {
      uint64_t v17 = *(void *)v14;
      uint64_t v16 = *(void *)(v14 + 8);
      unsigned __int8 v18 = *(unsigned char *)(v14 + 16);
      sub_1A8940878(*(void *)v14, v16, v18);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8940890(v17, v16, v18);
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A891CA44(&v22, a1);
      ((void (*)(void *, void))v15)(v19, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(void *, void))v15)(v19, 0);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A893AB70()
{
  uint64_t v0 = BodyStructure.mediaType.getter();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  char v3 = Media.TopLevelType.text.unsafeMutableAddressor();
  if (*v3 == v0 && v3[1] == v2) {
    goto LABEL_6;
  }
  if (sub_1A8A78588()) {
    goto LABEL_6;
  }
  unsigned __int8 v8 = Media.TopLevelType.audio.unsafeMutableAddressor();
  if (*v8 == v0 && v8[1] == v2) {
    goto LABEL_6;
  }
  if (sub_1A8A78588()) {
    goto LABEL_6;
  }
  int v9 = Media.TopLevelType.image.unsafeMutableAddressor();
  if (*v9 == v0 && v9[1] == v2) {
    goto LABEL_6;
  }
  if (sub_1A8A78588()) {
    goto LABEL_6;
  }
  uint64_t v10 = Media.TopLevelType.message.unsafeMutableAddressor();
  if (*v10 == v0 && v10[1] == v2 || (sub_1A8A78588() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((uint64_t v11 = Media.TopLevelType.video.unsafeMutableAddressor(), *v11 == v0) && v11[1] == v2
    || (sub_1A8A78588() & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    BodyStructure.mediaType.getter();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = Media.TopLevelType.multipart.unsafeMutableAddressor();
    if (*v12 == v0 && v12[1] == v2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        return 1;
      }
    }
    BodyStructure.mediaType.getter();
    uint64_t v6 = v14;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1A893ADCC(uint64_t *a1, uint64_t a2)
{
  sub_1A8529F8C((uint64_t)a1, (uint64_t)v33, &qword_1E97417F8);
  unsigned __int8 v5 = v34;
  uint64_t v29 = v33[0];
  uint64_t v30 = v33[1];
  uint64_t v6 = v37;
  uint64_t v27 = v35;
  char v28 = v36;
  uint64_t v8 = *v2;
  unint64_t v7 = v2[1];
  swift_retain();
  swift_retain();
  unint64_t v9 = sub_1A893CE9C(a2, v8, v7);
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  swift_release();
  if (v11)
  {
    sub_1A8529F8C((uint64_t)a1, (uint64_t)v38, &qword_1E97417F8);
    if (v39)
    {
      unsigned __int8 v15 = v5;
      sub_1A8940878(v29, v30, v5);
      uint64_t v16 = v6;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A893D090(a2);
      uint64_t v24 = v2[2];
      v2 += 2;
      uint64_t v23 = v24;
      sub_1A8940878(v29, v30, v5);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v2 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A891DBF4(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = *v2;
      }
      unint64_t v7 = *(void *)(v23 + 16);
      unint64_t v17 = *(void *)(v23 + 24);
      unint64_t v9 = v7 + 1;
      if (v7 < v17 >> 1) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A8529F8C((uint64_t)a1, (uint64_t)v38, &qword_1E97417F8);
    if (v39)
    {
      uint64_t v14 = (char *)v2[2];
      unsigned __int8 v15 = v5;
      sub_1A8940878(v29, v30, v5);
      uint64_t v16 = v6;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_1A89473BC((uint64_t)v14);
      }
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v17 = *((void *)v14 + 2);
        if (v9 < v17)
        {
          unsigned __int8 v18 = &v14[48 * v9];
          uint64_t v19 = *((void *)v18 + 4);
          uint64_t v20 = *((void *)v18 + 5);
          unsigned __int8 v21 = v18[48];
          sub_1A8940878(v29, v30, v15);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8940890(v19, v20, v21);
          swift_bridgeObjectRelease();
          *((void *)v18 + 4) = v29;
          *((void *)v18 + 5) = v30;
          v18[48] = v15;
          *((void *)v18 + 7) = v27;
          v18[64] = v28 & 1;
          *((void *)v18 + 9) = v16;
          swift_bridgeObjectRelease();
          sub_1A894100C(a1);
          sub_1A8940890(v29, v30, v15);
          uint64_t result = swift_bridgeObjectRelease();
          v2[2] = (uint64_t)v14;
          return result;
        }
      }
      __break(1u);
LABEL_18:
      sub_1A891DBF4((char *)(v17 > 1), v9, 1);
      uint64_t v23 = *v2;
LABEL_12:
      *(void *)(v23 + 16) = v9;
      unint64_t v26 = v23 + 48 * v7;
      *(void *)(v26 + 32) = v29;
      *(void *)(v26 + 40) = v30;
      *(unsigned char *)(v26 + 48) = v15;
      *(void *)(v26 + 56) = v27;
      *(unsigned char *)(v26 + 64) = v28 & 1;
      *(void *)(v26 + 72) = v16;
      swift_bridgeObjectRelease();
      sub_1A894100C(a1);
      sub_1A8940890(v29, v30, v15);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v2 = v23;
      return result;
    }
    sub_1A893E0D8(v9, v13);
    swift_bridgeObjectRelease();
    sub_1A893E24C(v9, (uint64_t)v31);
    swift_bridgeObjectRelease();
    sub_1A8940A50(v31, (uint64_t)v41);
    sub_1A8940A68((uint64_t)v41);
    uint64_t v40 = v32;
    return sub_1A85276F0((uint64_t)&v40);
  }
}

void (*sub_1A893B0F0(void *a1, uint64_t a2))(uint64_t **a1)
{
  unsigned __int8 v5 = malloc(0x58uLL);
  *a1 = v5;
  void v5[6] = a2;
  v5[7] = v2;
  *(_OWORD *)unsigned __int8 v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  unint64_t v6 = sub_1A893E3A0(a2, v5);
  *((unsigned char *)v5 + 80) = v7;
  v5[8] = v6;
  unsigned char v5[9] = v8;
  return sub_1A893B16C;
}

void sub_1A893B16C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1A893E69C((*a1)[6], (*a1)[8], (*a1)[10] & 1, (*a1)[9], *a1);
  sub_1A8940F8C(*v1, v1[1], v1[2], v1[3], v1[4], v1[5]);
  free(v1);
}

unint64_t sub_1A893B1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 16);
  swift_beginAccess();
  uint64_t v11 = a3[2];
  uint64_t v12 = a3[3];
  uint64_t v13 = a3[4];
  swift_bridgeObjectRetain_n();
  sub_1A8940878(v8, v9, v10);
  unint64_t result = sub_1A893CE9C(a1, v11, v12);
  unsigned __int8 v26 = v10;
  if (v15)
  {
    swift_endAccess();
    uint64_t v20 = 0;
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(a2 + 40);
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = a1;
    *(void *)(a4 + 16) = v8;
    *(void *)(a4 + 24) = v9;
    *(unsigned char *)(a4 + 32) = v26;
    *(void *)(a4 + 40) = v20;
    *(void *)(a4 + 48) = v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v13 + 16))
  {
    uint64_t v24 = v9;
    uint64_t v25 = v8;
    uint64_t v16 = v13 + 48 * result;
    uint64_t v18 = *(void *)(v16 + 32);
    uint64_t v17 = *(void *)(v16 + 40);
    unsigned __int8 v19 = *(unsigned char *)(v16 + 48);
    uint64_t v20 = *(void *)(v16 + 56);
    char v21 = *(unsigned char *)(v16 + 64);
    uint64_t v22 = *(void *)(v16 + 72);
    swift_endAccess();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8940878(v18, v17, v19);
    swift_bridgeObjectRelease();
    if (v21)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      uint64_t v20 = sub_1A8940B3C(0, v22, a3);
      swift_release();
      sub_1A8940890(v18, v17, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A8940890(v18, v17, v19);
    }
    uint64_t v9 = v24;
    uint64_t v8 = v25;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A893B37C(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_30;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (!result) {
    return v2;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v9;
  }
  unint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = a2 + 32;
  uint64_t v20 = v4 - 1;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v18 = result;
  uint64_t v19 = a2 + 32;
  do
  {
    uint64_t v12 = *(void *)(v7 + 8 * v5);
    uint64_t v13 = *(void *)(v8 + 16);
    if (v13 < v3)
    {
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_1A891DC34(0, v13 + 1, 1);
        uint64_t v7 = v19;
      }
      unint64_t v11 = *(void *)(v8 + 16);
      unint64_t v10 = *(void *)(v8 + 24);
      if (v11 >= v10 >> 1)
      {
        unint64_t result = (uint64_t)sub_1A891DC34((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v7 = v19;
      }
      *(void *)(v8 + 16) = v11 + 1;
      *(void *)(v8 + 8 * v11 + 32) = v12;
LABEL_8:
      if (v20 == v5) {
        goto LABEL_25;
      }
      goto LABEL_9;
    }
    if (v6 >= v13) {
      goto LABEL_28;
    }
    uint64_t v14 = v2;
    uint64_t v15 = *(void *)(v8 + 8 * v6 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A891DC34(0, *(void *)(v9 + 16) + 1, 1);
      uint64_t v7 = v19;
    }
    unint64_t v17 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1A891DC34((char *)(v16 > 1), v17 + 1, 1);
      uint64_t v7 = v19;
    }
    *(void *)(v9 + 16) = v17 + 1;
    *(void *)(v9 + 8 * v17 + 32) = v15;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_1A8947394(v8);
      uint64_t v8 = result;
    }
    uint64_t v2 = v14;
    uint64_t v3 = v18;
    if (v6 >= *(void *)(v8 + 16)) {
      goto LABEL_29;
    }
    *(void *)(v8 + 8 * v6++ + 32) = v12;
    if ((uint64_t)v6 < v18) {
      goto LABEL_8;
    }
    if (v20 == v5) {
      goto LABEL_25;
    }
    unint64_t v6 = 0;
LABEL_9:
    ++v5;
  }
  while (v5 < *(void *)(v2 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A893B5A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1A8A784B8();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_134;
    }
    if (v4) {
      return sub_1A893C2D4(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_133;
  }
  uint64_t v97 = result;
  uint64_t v93 = a1;
  if (v4 <= 1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v96 = MEMORY[0x1E4FBC860];
    if (v4 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_99:
      uint64_t result = v8;
      if (v11 >= 2)
      {
        uint64_t v86 = *v93;
        do
        {
          unint64_t v87 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_128;
          }
          if (!v86) {
            goto LABEL_141;
          }
          uint64_t v88 = result;
          uint64_t v89 = *(void *)(result + 32 + 16 * v87);
          uint64_t v90 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_1A893C3B0((uint64_t *)(v86 + 8 * v89), (uint64_t *)(v86 + 8 * *(void *)(result + 32 + 16 * (v11 - 1))), v86 + 8 * v90, __dst);
          if (v2) {
            break;
          }
          if (v90 < v89) {
            goto LABEL_129;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1A8947358(v88);
            uint64_t v88 = result;
          }
          if (v87 >= *(void *)(v88 + 16)) {
            goto LABEL_130;
          }
          uint64_t v91 = (void *)(v88 + 32 + 16 * v87);
          *uint64_t v91 = v89;
          v91[1] = v90;
          unint64_t v92 = *(void *)(v88 + 16);
          if (v11 > v92) {
            goto LABEL_131;
          }
          memmove((void *)(v88 + 32 + 16 * (v11 - 1)), (const void *)(v88 + 32 + 16 * v11), 16 * (v92 - v11));
          uint64_t result = v88;
          *(void *)(v88 + 16) = v92 - 1;
          unint64_t v11 = v92 - 1;
        }
        while (v92 > 2);
      }
LABEL_96:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = v1;
  }
  else
  {
    uint64_t v103 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t result = sub_1A8A76D48();
    *(void *)(result + 16) = v7;
    uint64_t v96 = result;
    __dst = (uint64_t *)(result + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v94 = *a1 - 8;
  uint64_t v95 = *a1 + 16;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v98 = v4;
  while (1)
  {
    uint64_t v12 = v9++;
    uint64_t v101 = v12;
    if (v9 < v4)
    {
      uint64_t v13 = *(void *)(v10 + 8 * v9);
      uint64_t v14 = *(void *)(v10 + 8 * v12);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      BOOL v15 = static SectionSpecifier.Part.< infix(_:_:)(v13, v14);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v4)
      {
        unint64_t v16 = (uint64_t *)(v95 + 8 * v12);
        while (1)
        {
          uint64_t v18 = *(v16 - 1);
          uint64_t v17 = *v16;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          BOOL v19 = static SectionSpecifier.Part.< infix(_:_:)(v17, v18);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if ((v15 ^ v19)) {
            break;
          }
          ++v9;
          ++v16;
          if (v4 == v9)
          {
            uint64_t v9 = v4;
            break;
          }
        }
        uint64_t v12 = v101;
      }
      if (v15)
      {
        if (v9 < v12) {
          goto LABEL_135;
        }
        if (v12 < v9)
        {
          uint64_t v20 = (uint64_t *)(v94 + 8 * v9);
          uint64_t v21 = v9;
          uint64_t v22 = v12;
          uint64_t v23 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v22 != --v21)
            {
              if (!v10) {
                goto LABEL_140;
              }
              uint64_t v24 = *v23;
              *uint64_t v23 = *v20;
              uint64_t *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v9 >= v4) {
      goto LABEL_48;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_132;
    }
    if (v9 - v12 >= v97) {
      goto LABEL_48;
    }
    if (__OFADD__(v12, v97)) {
      goto LABEL_136;
    }
    uint64_t v25 = v12 + v97 >= v4 ? v4 : v12 + v97;
    if (v25 < v12) {
      break;
    }
    if (v9 != v25)
    {
      unsigned __int8 v26 = (uint64_t *)(v94 + 8 * v9);
      uint64_t v99 = v25;
      do
      {
        uint64_t v27 = *(void *)(v10 + 8 * v9);
        uint64_t v28 = v12;
        uint64_t v29 = v26;
        do
        {
          uint64_t v30 = *v29;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          BOOL v31 = static SectionSpecifier.Part.< infix(_:_:)(v27, v30);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v31) {
            break;
          }
          if (!v10) {
            goto LABEL_138;
          }
          uint64_t v32 = *v29;
          uint64_t v27 = v29[1];
          *uint64_t v29 = v27;
          v29[1] = v32;
          --v29;
          ++v28;
        }
        while (v9 != v28);
        ++v9;
        ++v26;
        uint64_t v12 = v101;
      }
      while (v9 != v99);
      uint64_t v9 = v99;
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_127;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A894725C(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    unint64_t v34 = *(void *)(v8 + 16);
    unint64_t v33 = *(void *)(v8 + 24);
    unint64_t v11 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A894725C((char *)(v33 > 1), v34 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v11;
    uint64_t v102 = v8 + 32;
    uint64_t v35 = (uint64_t *)(v8 + 32 + 16 * v34);
    *uint64_t v35 = v12;
    v35[1] = v9;
    if (v34)
    {
      uint64_t v36 = v8 + 32;
      while (1)
      {
        unint64_t v37 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v42 = v36 + 16 * v11;
          uint64_t v43 = *(void *)(v42 - 64);
          uint64_t v44 = *(void *)(v42 - 56);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_116;
          }
          uint64_t v47 = *(void *)(v42 - 48);
          uint64_t v46 = *(void *)(v42 - 40);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_117;
          }
          unint64_t v49 = v11 - 2;
          char v50 = (uint64_t *)(v36 + 16 * (v11 - 2));
          uint64_t v52 = *v50;
          uint64_t v51 = v50[1];
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_118;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_120;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = (uint64_t *)(v36 + 16 * v37);
            uint64_t v74 = *v72;
            uint64_t v73 = v72[1];
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_126;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v66 = *(void *)(v8 + 32);
            uint64_t v67 = *(void *)(v8 + 40);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_80;
          }
          uint64_t v39 = *(void *)(v8 + 32);
          uint64_t v38 = *(void *)(v8 + 40);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_119;
        }
        unint64_t v49 = v11 - 2;
        long long v55 = (uint64_t *)(v36 + 16 * (v11 - 2));
        uint64_t v57 = *v55;
        uint64_t v56 = v55[1];
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_121;
        }
        uint64_t v61 = (uint64_t *)(v36 + 16 * v37);
        uint64_t v63 = *v61;
        uint64_t v62 = v61[1];
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_123;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_125;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_86:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v60) {
          goto LABEL_122;
        }
        uint64_t v68 = (uint64_t *)(v36 + 16 * v37);
        uint64_t v70 = *v68;
        uint64_t v69 = v68[1];
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_124;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_88:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v11)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        uint64_t v77 = v10;
        if (!v10) {
          goto LABEL_139;
        }
        uint64_t v78 = v8;
        uint64_t v79 = v36;
        uint64_t v80 = (uint64_t *)(v36 + 16 * v76);
        uint64_t v81 = *v80;
        uint64_t v82 = (void *)(v79 + 16 * v37);
        uint64_t v83 = v82[1];
        uint64_t v84 = v77;
        uint64_t result = sub_1A893C3B0((uint64_t *)(v77 + 8 * *v80), (uint64_t *)(v77 + 8 * *v82), v77 + 8 * v83, __dst);
        if (v103) {
          goto LABEL_96;
        }
        if (v83 < v81) {
          goto LABEL_113;
        }
        if (v37 > *(void *)(v78 + 16)) {
          goto LABEL_114;
        }
        *uint64_t v80 = v81;
        uint64_t v36 = v102;
        *(void *)(v102 + 16 * v76 + 8) = v83;
        unint64_t v85 = *(void *)(v78 + 16);
        if (v37 >= v85) {
          goto LABEL_115;
        }
        uint64_t v8 = v78;
        unint64_t v11 = v85 - 1;
        uint64_t result = (uint64_t)memmove(v82, v82 + 2, 16 * (v85 - 1 - v37));
        *(void *)(v78 + 16) = v85 - 1;
        uint64_t v10 = v84;
        if (v85 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v4 = v98;
    if (v9 >= v98)
    {
      uint64_t v2 = v103;
      goto LABEL_99;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
  return result;
}

uint64_t sub_1A893BC4C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A8A784B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = 0;
      uint64_t v84 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v86 = *(void *)(v84 + 16 * i + 8);
        uint64_t v87 = v83;
        do
        {
          uint64_t v88 = v84 + v87;
          if (v86 >= *(void *)(v84 + v87 + 8)) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v89 = *(void *)(v88 + 16);
          *(_OWORD *)(v88 + 16) = *(_OWORD *)v88;
          *(void *)uint64_t v88 = v89;
          *(void *)(v88 + 8) = v86;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v6 = result;
    uint64_t v97 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E508);
      uint64_t result = sub_1A8A76D48();
      *(void *)(result + 16) = v7;
      uint64_t v99 = result;
      uint64_t v103 = (char *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v98 = *a1 + 40;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v100 = v6;
      uint64_t v101 = v3;
      uint64_t v102 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          uint64_t v14 = *(void *)(v10 + 16 * v9 + 8);
          uint64_t v15 = *(void *)(v10 + 16 * v13 + 8);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            unint64_t v16 = (uint64_t *)(v98 + 16 * v13);
            uint64_t v17 = v14;
            while (1)
            {
              uint64_t v19 = *v16;
              v16 += 2;
              uint64_t v18 = v19;
              if (v14 < v15 == v19 >= v17) {
                break;
              }
              ++v9;
              uint64_t v17 = v18;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_138;
            }
            if (v13 < v9)
            {
              uint64_t v20 = 16 * v9;
              uint64_t v21 = 16 * v13;
              uint64_t v22 = v9;
              uint64_t v23 = v13;
              do
              {
                if (v23 != --v22)
                {
                  if (!v10) {
                    goto LABEL_144;
                  }
                  uint64_t v24 = v10 + v20;
                  uint64_t v25 = *(void *)(v10 + v21);
                  uint64_t v26 = *(void *)(v10 + v21 + 8);
                  *(_OWORD *)(v10 + v21) = *(_OWORD *)(v10 + v20 - 16);
                  *(void *)(v24 - 16) = v25;
                  *(void *)(v24 - 8) = v26;
                }
                ++v23;
                v20 -= 16;
                v21 += 16;
              }
              while (v23 < v22);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_135;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v27 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_139;
            }
            if (v27 >= v3) {
              uint64_t v27 = v3;
            }
            if (v27 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v9 != v27)
            {
              uint64_t v28 = (void *)(v10 + 16 * v9);
              do
              {
                uint64_t v29 = *(void *)(v10 + 16 * v9 + 8);
                uint64_t v30 = v13;
                BOOL v31 = v28;
                do
                {
                  if (v29 >= *(v31 - 1)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_142;
                  }
                  uint64_t v32 = *v31;
                  *(_OWORD *)BOOL v31 = *((_OWORD *)v31 - 1);
                  *(v31 - 1) = v29;
                  *(v31 - 2) = v32;
                  v31 -= 2;
                  ++v30;
                }
                while (v9 != v30);
                ++v9;
                v28 += 2;
              }
              while (v9 != v27);
              uint64_t v9 = v27;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1A894725C(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v34 = *(void *)(v11 + 16);
        unint64_t v33 = *(void *)(v11 + 24);
        unint64_t v12 = v34 + 1;
        uint64_t v10 = v102;
        if (v34 >= v33 >> 1)
        {
          uint64_t result = (uint64_t)sub_1A894725C((char *)(v33 > 1), v34 + 1, 1, (char *)v11);
          uint64_t v10 = v102;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v35 = v11 + 32;
        uint64_t v36 = (uint64_t *)(v11 + 32 + 16 * v34);
        *uint64_t v36 = v13;
        v36[1] = v9;
        if (v34)
        {
          while (1)
          {
            unint64_t v37 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v42 = v35 + 16 * v12;
              uint64_t v43 = *(void *)(v42 - 64);
              uint64_t v44 = *(void *)(v42 - 56);
              BOOL v48 = __OFSUB__(v44, v43);
              uint64_t v45 = v44 - v43;
              if (v48) {
                goto LABEL_119;
              }
              uint64_t v47 = *(void *)(v42 - 48);
              uint64_t v46 = *(void *)(v42 - 40);
              BOOL v48 = __OFSUB__(v46, v47);
              uint64_t v40 = v46 - v47;
              char v41 = v48;
              if (v48) {
                goto LABEL_120;
              }
              unint64_t v49 = v12 - 2;
              char v50 = (uint64_t *)(v35 + 16 * (v12 - 2));
              uint64_t v52 = *v50;
              uint64_t v51 = v50[1];
              BOOL v48 = __OFSUB__(v51, v52);
              uint64_t v53 = v51 - v52;
              if (v48) {
                goto LABEL_121;
              }
              BOOL v48 = __OFADD__(v40, v53);
              uint64_t v54 = v40 + v53;
              if (v48) {
                goto LABEL_123;
              }
              if (v54 >= v45)
              {
                uint64_t v72 = (uint64_t *)(v35 + 16 * v37);
                uint64_t v74 = *v72;
                uint64_t v73 = v72[1];
                BOOL v48 = __OFSUB__(v73, v74);
                uint64_t v75 = v73 - v74;
                if (v48) {
                  goto LABEL_129;
                }
                BOOL v65 = v40 < v75;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v66 = *(void *)(v11 + 32);
                uint64_t v67 = *(void *)(v11 + 40);
                BOOL v48 = __OFSUB__(v67, v66);
                uint64_t v59 = v67 - v66;
                char v60 = v48;
                goto LABEL_77;
              }
              uint64_t v39 = *(void *)(v11 + 32);
              uint64_t v38 = *(void *)(v11 + 40);
              BOOL v48 = __OFSUB__(v38, v39);
              uint64_t v40 = v38 - v39;
              char v41 = v48;
            }
            if (v41) {
              goto LABEL_122;
            }
            unint64_t v49 = v12 - 2;
            long long v55 = (uint64_t *)(v35 + 16 * (v12 - 2));
            uint64_t v57 = *v55;
            uint64_t v56 = v55[1];
            BOOL v58 = __OFSUB__(v56, v57);
            uint64_t v59 = v56 - v57;
            char v60 = v58;
            if (v58) {
              goto LABEL_124;
            }
            uint64_t v61 = (uint64_t *)(v35 + 16 * v37);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v48 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v48) {
              goto LABEL_126;
            }
            if (__OFADD__(v59, v64)) {
              goto LABEL_128;
            }
            if (v59 + v64 >= v40)
            {
              BOOL v65 = v40 < v64;
LABEL_83:
              if (v65) {
                unint64_t v37 = v49;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v60) {
              goto LABEL_125;
            }
            uint64_t v68 = (uint64_t *)(v35 + 16 * v37);
            uint64_t v70 = *v68;
            uint64_t v69 = v68[1];
            BOOL v48 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v48) {
              goto LABEL_127;
            }
            if (v71 < v59) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v76 = v37 - 1;
            if (v37 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10) {
              goto LABEL_143;
            }
            uint64_t v77 = v11;
            uint64_t v78 = (uint64_t *)(v35 + 16 * v76);
            uint64_t v79 = *v78;
            uint64_t v80 = (void *)(v35 + 16 * v37);
            uint64_t v81 = v80[1];
            uint64_t result = sub_1A893C650((char *)(v10 + 16 * *v78), (char *)(v10 + 16 * *v80), v10 + 16 * v81, v103);
            if (v1) {
              goto LABEL_93;
            }
            if (v81 < v79) {
              goto LABEL_116;
            }
            if (v37 > *(void *)(v77 + 16)) {
              goto LABEL_117;
            }
            *uint64_t v78 = v79;
            *(void *)(v35 + 16 * v76 + 8) = v81;
            unint64_t v82 = *(void *)(v77 + 16);
            if (v37 >= v82) {
              goto LABEL_118;
            }
            uint64_t v11 = v77;
            unint64_t v12 = v82 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v35 + 16 * v37), v80 + 2, 16 * (v82 - 1 - v37));
            *(void *)(v77 + 16) = v82 - 1;
            uint64_t v10 = v102;
            if (v82 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v100;
        uint64_t v3 = v101;
        if (v9 >= v101)
        {
          uint64_t v8 = v99;
          goto LABEL_102;
        }
      }
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v103 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v99 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_102:
    uint64_t result = v11;
    uint64_t v99 = v8;
    if (v12 >= 2)
    {
      uint64_t v90 = *v97;
      do
      {
        unint64_t v91 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_131;
        }
        if (!v90) {
          goto LABEL_145;
        }
        uint64_t v92 = result;
        uint64_t v93 = *(void *)(result + 32 + 16 * v91);
        uint64_t v94 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_1A893C650((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(void *)(result + 32 + 16 * (v12 - 1))), v90 + 16 * v94, v103);
        if (v1) {
          break;
        }
        if (v94 < v93) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1A8947358(v92);
          uint64_t v92 = result;
        }
        if (v91 >= *(void *)(v92 + 16)) {
          goto LABEL_133;
        }
        uint64_t v95 = (void *)(v92 + 32 + 16 * v91);
        void *v95 = v93;
        v95[1] = v94;
        unint64_t v96 = *(void *)(v92 + 16);
        if (v12 > v96) {
          goto LABEL_134;
        }
        memmove((void *)(v92 + 32 + 16 * (v12 - 1)), (const void *)(v92 + 32 + 16 * v12), 16 * (v96 - v12));
        uint64_t result = v92;
        *(void *)(v92 + 16) = v96 - 1;
        unint64_t v12 = v96 - 1;
      }
      while (v96 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v99 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A893C2D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v14 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void *)(v6 + 8 * v4);
    uint64_t v9 = v14;
    uint64_t v10 = (uint64_t *)v7;
    while (1)
    {
      uint64_t v11 = *v10;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      BOOL v12 = static SectionSpecifier.Part.< infix(_:_:)(v8, v11);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v12)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v13 = *v10;
      uint64_t v8 = v10[1];
      *uint64_t v10 = v8;
      v10[1] = v13;
      --v10;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A893C3B0(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 < v12 >> 3)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    if ((unint64_t)v6 >= a3 || v8 < 8)
    {
      uint64_t v6 = v7;
      uint64_t v14 = &v4[v10];
      goto LABEL_44;
    }
    uint64_t v14 = &v4[v10];
    while (1)
    {
      uint64_t v15 = *v6;
      uint64_t v16 = *v4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      BOOL v17 = static SectionSpecifier.Part.< infix(_:_:)(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v17) {
        break;
      }
      uint64_t v18 = v6;
      BOOL v19 = v7 == v6++;
      if (!v19) {
        goto LABEL_17;
      }
LABEL_18:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
      {
        uint64_t v6 = v7;
        goto LABEL_44;
      }
    }
    uint64_t v18 = v4;
    BOOL v19 = v7 == v4++;
    if (v19) {
      goto LABEL_18;
    }
LABEL_17:
    *uint64_t v7 = *v18;
    goto LABEL_18;
  }
  if (__dst != a2 || &a2[v13] <= __dst) {
    memmove(__dst, a2, 8 * v13);
  }
  uint64_t v14 = &v4[v13];
  if (v7 < v6 && v11 >= 8)
  {
    uint64_t v20 = (uint64_t *)(a3 - 8);
    uint64_t v29 = v4;
    uint64_t v28 = v7;
    while (1)
    {
      uint64_t v21 = v20 + 1;
      uint64_t v22 = *(v14 - 1);
      uint64_t v23 = v6 - 1;
      uint64_t v24 = *(v6 - 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      BOOL v25 = static SectionSpecifier.Part.< infix(_:_:)(v22, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
        if (v21 != v6)
        {
          --v6;
LABEL_38:
          uint64_t v4 = v29;
LABEL_39:
          uint64_t *v20 = *v23;
          goto LABEL_40;
        }
        BOOL v26 = v20 >= v6--;
        uint64_t v4 = v29;
        if (v26) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v23 = v14 - 1;
        if (v21 != v14)
        {
          --v14;
          goto LABEL_38;
        }
        BOOL v26 = v20 >= v14--;
        uint64_t v4 = v29;
        if (v26) {
          goto LABEL_39;
        }
      }
LABEL_40:
      if (v6 > v28)
      {
        --v20;
        if (v14 > v4) {
          continue;
        }
      }
      break;
    }
  }
LABEL_44:
  if (v6 != v4
    || v6 >= (uint64_t *)((char *)v4
                       + (((char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8)))
  {
    memmove(v6, v4, 8 * (v14 - v4));
  }
  return 1;
}

uint64_t sub_1A893C650(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_43;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      BOOL v19 = v18 + 16;
      if (*((void *)v14 - 1) >= *((void *)v6 - 1))
      {
        uint64_t v20 = v14 - 16;
        if (v19 != v14)
        {
          v14 -= 16;
          goto LABEL_40;
        }
        BOOL v21 = v18 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v20 = v6 - 16;
        if (v19 != v6)
        {
          v6 -= 16;
LABEL_40:
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
          goto LABEL_41;
        }
        BOOL v21 = v18 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_40;
        }
      }
LABEL_41:
      if (v6 > v7)
      {
        v18 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      if (*((void *)v6 + 1) >= *((void *)v4 + 1))
      {
        BOOL v17 = v4 + 16;
        uint64_t v16 = v4;
        uint64_t v15 = v6;
        if (v7 == v4)
        {
          v4 += 16;
          if (v7 < v17) {
            goto LABEL_20;
          }
        }
        else
        {
          v4 += 16;
        }
      }
      else
      {
        uint64_t v15 = v6 + 16;
        uint64_t v16 = v6;
        if (v7 == v6 && v7 < v15) {
          goto LABEL_20;
        }
      }
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
LABEL_20:
      v7 += 16;
      if (v4 < v14)
      {
        uint64_t v6 = v15;
        if ((unint64_t)v15 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_43:
  int64_t v22 = v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0);
  if (v6 != v4 || v6 >= &v4[v22 & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * (v22 >> 4));
  }
  return 1;
}