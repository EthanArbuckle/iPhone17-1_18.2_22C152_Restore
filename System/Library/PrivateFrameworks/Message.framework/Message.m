void sub_1A7F02D70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1A7F02DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F02F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F03038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F031E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F032E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0336C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F03434(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F037D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28)
{
  _Unwind_Resume(a1);
}

uint64_t ECMailboxTypeFromMailboxUidType(uint64_t result)
{
  if (!(!v2 & v1))
  {
    switch(result)
    {
      case 0:
      case 8:
        return result;
      case 1:
        goto LABEL_8;
      case 2:
        goto LABEL_9;
      case 3:
        goto LABEL_10;
      case 4:
        goto LABEL_11;
      case 5:
        goto LABEL_12;
      case 6:
        goto LABEL_13;
      case 7:
        goto LABEL_14;
      default:
        JUMPOUT(0);
    }
  }
  switch(result)
  {
    case 'd':
LABEL_14:
      result = 7;
      break;
    case 'e':
LABEL_8:
      result = 1;
      break;
    case 'f':
LABEL_9:
      result = 2;
      break;
    case 'g':
LABEL_10:
      result = 3;
      break;
    case 'h':
LABEL_11:
      result = 4;
      break;
    case 'i':
LABEL_12:
      result = 5;
      break;
    case 'j':
LABEL_13:
      result = 6;
      break;
    default:
      if (result != -100) {
        result = -500;
      }
      break;
  }
  return result;
}

void sub_1A7F03A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F03B24(_Unwind_Exception *a1)
{
  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7F03D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F03E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F03EDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F03FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F04068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F040F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F041AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F04310(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _stringByAppendingPathComponents(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  v6 = _stringByAppendingPathComponentsUsingSpecialDisplayNames(a1, a2, a3, a4, a5, a6, 0);
  return v6;
}

id _stringByAppendingPathComponentsUsingSpecialDisplayNames(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, int a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v39 = a5;
  id v40 = a6;
  if (!v15)
  {
    id v15 = [v13 topMailbox];
  }
  id v17 = v13;
  v18 = v17;
  BOOL v19 = v15 == v17 || v17 == 0;
  int v20 = v19;
  id v21 = v17;
  if (v19) {
    goto LABEL_14;
  }
  v22 = v17;
  do
  {
    id v21 = [v22 parent];

    if (v15 == v21) {
      break;
    }
    v22 = v21;
  }
  while (v21);
  if (v20)
  {
LABEL_14:
    id v23 = v16;
    goto LABEL_48;
  }
  id v37 = v13;
  if (v16) {
    id v24 = (id)objc_msgSend(v16, "mutableCopyWithZone:", 0, v13);
  }
  else {
    id v24 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  }
  id v23 = v24;
  id v25 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  if (v14)
  {
    uint64_t v26 = [v18 mailboxType];
    if (v39)
    {
      if (v26 != 7 && [v39 length] && (objc_msgSend(v18, "isShared") & 1) == 0)
      {
        if (v16 && [v16 length]) {
          [v23 appendString:@"/"];
        }
        objc_msgSend(v23, "appendString:", v39, v37);
      }
    }
  }
  id v27 = v18;

  v38 = v27;
  v28 = v27;
  do
  {
    v29 = objc_msgSend(v14, "persistentNameForMailbox:", v28, v37);
    if (v29)
    {
      if (v14) {
        goto LABEL_30;
      }
    }
    else
    {
      if (a7) {
        [v28 displayNameUsingSpecialNames];
      }
      else {
      v29 = [v28 name];
      }
      if (v14)
      {
LABEL_30:
        uint64_t v30 = [v14 _pathComponentForUidName:v29];

        v29 = (void *)v30;
        if (!v30) {
          goto LABEL_31;
        }
        goto LABEL_37;
      }
    }
    if (!v29)
    {
LABEL_31:
      v31 = 0;
      goto LABEL_38;
    }
LABEL_37:
    v31 = objc_msgSend(v29, "ef_sanitizedFileName");

    [v25 addObject:v31];
LABEL_38:

    uint64_t v32 = [v28 parent];

    v28 = (void *)v32;
  }
  while ((id)v32 != v15);
  uint64_t v33 = [v25 count];
  if (v33)
  {
    uint64_t v34 = v33 - 1;
    do
    {
      if ([v23 length]) {
        [v23 appendString:@"/"];
      }
      v35 = [v25 objectAtIndexedSubscript:v34];
      [v23 appendString:v35];

      --v34;
    }
    while (v34 != -1);
  }
  if (v40 && [v38 isStore])
  {
    [v23 appendString:@"."];
    [v23 appendString:v40];
  }

  id v21 = v15;
LABEL_48:

  return v23;
}

void sub_1A7F04694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F04798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0492C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F04DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _MFChildWithPredicate(void *a1, unsigned int (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  v5 = a1;
  objc_msgSend(v5, "mf_lock");
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v6 = v5[6];
  id v7 = (id)[v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v13;
    while (2)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v6);
        }
        v10 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if (a2(v10, a3))
        {
          id v7 = v10;
          goto LABEL_11;
        }
      }
      id v7 = (id)[v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  objc_msgSend(v5, "mf_unlock", (void)v12);
  return v7;
}

void sub_1A7F04FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t mailboxHasName(os_unfair_lock_s *a1, void *a2)
{
  id v3 = a2;
  v4 = -[MFMailboxUid pathComponent](a1);
  uint64_t v5 = [v4 isEqual:v3];

  return v5;
}

void sub_1A7F05040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F050B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7F05134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F05190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F053A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F05484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F055BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F057D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFLookupLocalizedString(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = @"Message";
  }
  v9 = MFMessageFrameworkBundle();
  v10 = [v9 localizedStringForKey:v5 value:v6 table:v8];

  return v10;
}

void sub_1A7F05880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFMessageFrameworkBundle()
{
  v0 = (void *)sMessageFrameworkBundle;
  if (!sMessageFrameworkBundle)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.Message"];
    char v2 = (void *)sMessageFrameworkBundle;
    sMessageFrameworkBundle = v1;

    v0 = (void *)sMessageFrameworkBundle;
  }
  return v0;
}

void sub_1A7F05974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F05A64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F05B28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F060B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0611C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t addOptionsForCriterion(unsigned int a1, void *a2)
{
  id v3 = a2;
  int v4 = [v3 includesCriterionSatisfyingPredicate:isReadLaterCriterion restrictive:0];
  int v5 = [v3 includesCriterionSatisfyingPredicate:isSendLaterCriterion restrictive:0];
  int v6 = [v3 includesCriterionSatisfyingPredicate:isFollowUpCriterion restrictive:0];
  int v7 = [v3 includesCriterionSatisfyingPredicate:isSenderBucketCriterion restrictive:0];
  unsigned int v8 = a1 | 0x100000;
  if (!(v6 | v5 | v4)) {
    unsigned int v8 = a1;
  }
  if (v7) {
    uint64_t v9 = v8 | 0x200000;
  }
  else {
    uint64_t v9 = v8;
  }

  return v9;
}

void sub_1A7F06218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F062BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0670C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t mailboxHasExtraAttribute(void *a1, void *a2)
{
  id v3 = a2;
  int v4 = [a1 extraAttributes];
  uint64_t v5 = [v4 containsObject:v3];

  return v5;
}

void sub_1A7F06858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F06934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL isSenderBucketCriterion(void *a1)
{
  return [a1 criterionType] == 51;
}

BOOL isSendLaterCriterion(void *a1)
{
  return [a1 criterionType] == 49;
}

BOOL isReadLaterCriterion(void *a1)
{
  return [a1 criterionType] == 46;
}

BOOL isLibraryIDCriterion(void *a1)
{
  return [a1 criterionType] == 24;
}

BOOL isFollowUpCriterion(void *a1)
{
  id v1 = a1;
  BOOL v2 = [v1 criterionType] == 47 || objc_msgSend(v1, "criterionType") == 48;

  return v2;
}

void sub_1A7F06A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F06AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F06B38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F06C24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1A7F06C94()
{
  return sub_1A8A782A8();
}

unint64_t sub_1A7F06CE0()
{
  uint64_t v2 = qword_1E9748A20;
  if (!qword_1E9748A20)
  {
    type metadata accessor for ProgressUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748A20);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A7F06D64()
{
  uint64_t v2 = qword_1E9748A08;
  if (!qword_1E9748A08)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748A08);
    return WitnessTable;
  }
  return v2;
}

void *sub_1A7F06E00@<X0>(void *a1@<X8>)
{
  result = sub_1A7F06E38();
  *a1 = result;
  return result;
}

void *sub_1A7F06E38()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v2 = (void *)sub_1A8A76538();
  id v0 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_8_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_8_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_8_2()
{
  return swift_release();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_7_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_7_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_7_2(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_1A7F07138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F071BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F072A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F077DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07BA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _MFDescendantWithPredicate(void *a1, uint64_t (*a2)(void *, uint64_t), uint64_t a3)
{
  id v5 = a1;
  objc_msgSend(v5, "mf_lock");
  int v6 = [v5 depthFirstEnumerator];
  int v7 = 0;
  do
  {
    unsigned int v8 = [v6 nextObject];

    if (!v8) {
      break;
    }
    int v7 = v8;
  }
  while ((a2(v8, a3) & 1) == 0);
  objc_msgSend(v5, "mf_unlock");

  return v8;
}

void sub_1A7F07C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F07F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F08040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _storeOnServerForTuple(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = v3;
  id v5 = *(void **)(a2 + 8);
  if (v5)
  {
    int v6 = *(unsigned __int8 *)(a2 + 16);
    BOOL v7 = *(unsigned char *)(a2 + 16) != 0;
    id v8 = v3;
    id v9 = v5;
    v10 = [v8 _objectForAccountInfoKey:v9];
    if (v10)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v11 = NSBOOLFromString();
LABEL_9:
        BOOL v7 = v11;
        goto LABEL_10;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v11 = [v10 BOOLValue];
        goto LABEL_9;
      }
    }
    else
    {
      objc_msgSend(v8, "mf_lock");
      long long v12 = [MEMORY[0x1E4F28ED0] numberWithBool:v6 != 0];
      [v8 setAccountProperty:v12 forKey:v9];

      objc_msgSend(v8, "mf_unlock");
    }
LABEL_10:

    goto LABEL_11;
  }
  BOOL v7 = 1;
LABEL_11:

  return v7;
}

void sub_1A7F081DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F082B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F08688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void bindParentAndChild(void *a1, void *a2)
{
  uint64_t v11 = a1;
  id v3 = a2;
  id v4 = [MEMORY[0x1E4F73598] weakReferenceWithObject:v11];
  objc_msgSend(v3, "mf_lock");
  id v5 = v3[5];
  if (v4 == v5)
  {
    BOOL v7 = 0;
  }
  else
  {
    uint64_t v6 = [v5 reference];
    objc_storeStrong(v3 + 5, v4);
    BOOL v7 = (id *)v6;
  }
  objc_msgSend(v3, "mf_unlock");
  if (v7)
  {
    objc_msgSend(v7, "mf_lock");
    [v7[6] removeObjectIdenticalTo:v3];
    objc_msgSend(v7, "mf_unlock");
  }
  if (v11)
  {
    objc_msgSend(v11, "mf_lock");
    id v8 = (void *)v11[6];
    if (!v8)
    {
      id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      v10 = (void *)v11[6];
      v11[6] = v9;

      id v8 = (void *)v11[6];
    }
    [v8 addObject:v3];
    objc_msgSend(v11, "mf_unlock");
  }
}

void sub_1A7F088E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F089B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F08A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F08AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F08C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F08DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F08ECC(_Unwind_Exception *a1)
{
  BOOL v7 = v6;

  _Unwind_Resume(a1);
}

void sub_1A7F08F10()
{
}

void sub_1A7F09270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F09370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _configureMailboxCache(void *a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 _shouldConfigureMailboxCache])
  {
    objc_msgSend(v1, "mf_lock");
    if (!v1[13])
    {
      uint64_t v2 = [v1 _copyMailboxWithParent:0 name:0 attributes:18 dictionary:0];
      id v3 = v1[13];
      v1[13] = (id)v2;

      if ([v1[13] mailboxType] != 8) {
        [v1[13] setMailboxType:8];
      }
    }
    if ([v1 cacheHasBeenRead])
    {
      char v4 = 1;
    }
    else
    {
      [v1 setCacheHasBeenRead:1];
      id v5 = v1;
      uint64_t v6 = [v5 mailboxCachePath];
      CFDataRef v7 = (const __CFData *)[objc_allocWithZone(MEMORY[0x1E4F1C9B8]) initWithContentsOfFile:v6 options:1 error:0];
      id v8 = MFLogGeneral();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v9 = objc_msgSend(v5, "ef_publicDescription");
        *(_DWORD *)buf = 138543362;
        uint64_t v23 = (uint64_t)v9;
        _os_log_impl(&dword_1A7EFF000, v8, OS_LOG_TYPE_DEFAULT, "Read mailbox cache from disk %{public}@", buf, 0xCu);
      }
      if (!v5[13]) {
        __assert_rtn("_readMailboxCache", "MailAccount.m", 3421, "self->_rootMailboxUid");
      }
      if (v7)
      {
        CFErrorRef error = 0;
        CFDictionaryRef v10 = (const __CFDictionary *)CFPropertyListCreateWithData(0, v7, 1uLL, 0, &error);
        if (error)
        {
          uint64_t v17 = [MEMORY[0x1E4F28B00] currentHandler];
          v18 = [NSString stringWithUTF8String:"BOOL _readMailboxCache(MailAccount *__strong)"];
          BOOL v19 = [(__CFError *)error localizedDescription];
          [v17 handleFailureInFunction:v18, @"MailAccount.m", 3431, @"%@", v19 file lineNumber description];
        }
        uint64_t v11 = CFDictionaryGetValue(v10, @"mboxes");
        int v12 = [v5 _readCustomInfoFromMailboxCache:v10];
        char v4 = v12;
        if (v12)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            long long v13 = MFLogGeneral();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v20 = [v11 count];
              long long v14 = objc_msgSend(v5, "ef_publicDescription");
              *(_DWORD *)buf = 134218242;
              uint64_t v23 = v20;
              __int16 v24 = 2114;
              id v25 = v14;
              _os_log_impl(&dword_1A7EFF000, v13, OS_LOG_TYPE_DEFAULT, "loading mailboxes.count:%lu from mailbox cache %{public}@", buf, 0x16u);
            }
            [v5 _loadMailboxListingIntoCache:0 attributes:0 children:v11 parent:v5[13]];
          }
        }
        else
        {
          long long v15 = MFLogGeneral();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            id v16 = objc_msgSend(v5, "ef_publicDescription");
            _configureMailboxCache_cold_1(v16, buf, v15);
          }
        }
        if (error) {
          CFRelease(error);
        }
        if (v10) {
          CFRelease(v10);
        }
      }
      else
      {
        char v4 = 0;
      }
    }
    objc_msgSend(v1, "mf_unlock");
    if ((v4 & 1) == 0) {
      [v1 _repairMailboxCache];
    }
  }
  else
  {
    _invalidateMailboxCache(v1);
  }
}

void sub_1A7F09774(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long buf)
{
  id v21 = v18;

  if (a2 == 1)
  {
    id v23 = objc_begin_catch(a1);
    __int16 v24 = MFLogGeneral();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      id v25 = objc_msgSend(v14, "ef_publicDescription");
      LODWORD(buf) = 138543618;
      *(void *)((char *)&buf + 4) = v25;
      WORD6(buf) = 2112;
      *(void *)((char *)&buf + 14) = v23;
      _os_log_impl(&dword_1A7EFF000, v24, OS_LOG_TYPE_INFO, "Failed to read cached info for %{public}@: %@", (uint8_t *)&buf, 0x16u);
    }
    objc_end_catch();
    JUMPOUT(0x1A7F09660);
  }

  _Unwind_Resume(a1);
}

void sub_1A7F099F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F09AAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F09F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A1C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A23C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A2C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A6C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0A820(_Unwind_Exception *a1)
{
  CFDataRef v7 = v5;

  _Unwind_Resume(a1);
}

void sub_1A7F0A954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0AA60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0AB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F0AC64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0AF24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0B03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7F0B118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0B18C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

void sub_1A7F0BCC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0BE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0BFE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0C0C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0C174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0C21C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0C2B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0C52C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0C5E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0C7B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0CAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0CB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0CC8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0CDAC(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7F0CE78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0CF24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0D318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0DA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void clearMailboxUIDCache()
{
  id v0 = +[MailAccount log];
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEBUG)) {
    clearMailboxUIDCache_cold_1();
  }

  id v1 = cachedMailboxUIDs();
  [v1 removeAllObjects];
}

void sub_1A7F0DBD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0DE58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0DF88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1A7F0E0EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0E1D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0E350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0E3D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0E464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0EB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0EFA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F0B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F2D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F570(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F6D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F7C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0F944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0FA30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0FB94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0FCD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0FE48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F0FF48(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x1A7F0FEC8);
}

void sub_1A7F1001C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1008C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F101B4(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F10344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F10414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1053C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F106E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F108E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Block_object_dispose((const void *)(v17 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A7F10A28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F12068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26,void *a27,uint64_t a28,void *a29,void *a30,void *a31,void *a32,void *a33,uint64_t a34,void *a35,void *a36,void *a37,uint64_t a38,void *a39,void *a40,void *a41,void *a42,uint64_t a43,void *a44,void *a45,void *a46,void *a47,void *a48,void *a49,void *a50,uint64_t a51,void *a52,void *a53,_Unwind_Exception *exception_objecta,void *a55)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1270C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F12810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F128A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F12910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F12AC8(_Unwind_Exception *a1)
{
  CFDataRef v7 = v5;

  _Unwind_Resume(a1);
}

id cachedMailboxUIDs()
{
  if (cachedMailboxUIDs_onceToken != -1) {
    dispatch_once(&cachedMailboxUIDs_onceToken, &__block_literal_global_945);
  }
  id v0 = (void *)cachedMailboxUIDs_cache;
  return v0;
}

void sub_1A7F12C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F12CBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F12DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F12FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F130C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F13180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F131E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F133AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1345C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F13514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)_MFWeakObjectCacheRef;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F13770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F139D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F13A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F13B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F13C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F13DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F13E7C(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A7F13F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1404C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F141C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F14238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F142C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F14344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F14494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1451C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1478C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  BOOL v19 = v18;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A7F148CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1495C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F14A6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v15);

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A7F14B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F14E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

id getDeliveryAccounts()
{
  v9[1] = *MEMORY[0x1E4F143B8];
  if (!sDeliveryAccounts)
  {
    id v0 = +[MFAccountStore sharedAccountStore];
    v9[0] = *MEMORY[0x1E4F17850];
    id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:1];
    uint64_t v2 = [v0 accountsWithTypeIdentifiers:v1 error:0];
    uint64_t v3 = [v2 mutableCopy];
    uint64_t v4 = (void *)sDeliveryAccounts;
    sDeliveryAccounts = v3;

    if (!sDeliveryAccounts || ![(id)sDeliveryAccounts count])
    {
      uint64_t v5 = objc_opt_new();
      uint64_t v6 = (void *)sDeliveryAccounts;
      sDeliveryAccounts = v5;
    }
  }
  CFDataRef v7 = (void *)sDeliveryAccounts;
  return v7;
}

void sub_1A7F15024(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F15600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F158DC(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7F159D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F15A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F15B44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F15C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F15D38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F15F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  _Unwind_Resume(a1);
}

void sub_1A7F15FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F16108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F163A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F164C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F16564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F16764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F16B84(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    if (v11) {
      v11[2](v11);
    }
    objc_end_catch();
    JUMPOUT(0x1A7F16B04);
  }

  _Unwind_Resume(a1);
}

void sub_1A7F16DCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F16E74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F16F38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&sSharedInstanceLock);
  _Unwind_Resume(a1);
}

void sub_1A7F16FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFUserAgent()
{
  return (id)_userAgent;
}

void sub_1A7F17044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F17104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F17284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F174F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F176FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F17898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void MFRegisterPowerObserver(void *a1)
{
  id v1 = a1;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __MFRegisterPowerObserver_block_invoke;
  v4[3] = &unk_1E5D3B5C0;
  id v2 = v1;
  id v5 = v2;
  uint64_t v3 = [MEMORY[0x1E4F60F28] mainThreadScheduler];
  [v3 performBlock:v4];
}

void sub_1A7F1797C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F17AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  CFDictionaryRef v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFLibraryStore;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F17C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F17E6C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F18074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __MFFlagsObjectForFlags_block_invoke(uint64_t a1, void *a2)
{
  id v5 = a2;
  [v5 setRead:*(_DWORD *)(a1 + 32) & 1];
  [v5 setDeleted:(*(void *)(a1 + 32) >> 1) & 1];
  [v5 setReplied:(*(void *)(a1 + 32) >> 2) & 1];
  [v5 setFlagged:(*(void *)(a1 + 32) >> 4) & 1];
  [v5 setFlagColor:(*(void *)(a1 + 32) >> 41) & 7];
  [v5 setDraft:(*(void *)(a1 + 32) >> 6) & 1];
  [v5 setForwarded:(*(void *)(a1 + 32) >> 8) & 1];
  [v5 setRedirected:(*(void *)(a1 + 32) >> 9) & 1];
  unint64_t v3 = *(void *)(a1 + 32);
  if ((v3 & 0x200000) != 0) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = (v3 >> 30) & 2;
  }
  [v5 setJunkLevel:v4];
}

void sub_1A7F181BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1820C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F183A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1842C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1848C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t block_copy_helper_244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_1A7F18664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F189F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A7F18B34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F18CF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F19024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F192E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F19414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F196A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F19818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F19878()
{
}

void sub_1A7F19A8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F19DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F19F24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFMonitoredInvocation;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F19FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t progressHandler(uint64_t a1)
{
  if ([*(id *)(a1 + 8) shouldCancel]) {
    sqlite3_interrupt(*(sqlite3 **)a1);
  }
  return 0;
}

void _MFFlushCurrentInvocation()
{
  CFStringRef v0 = (const __CFString *)*MEMORY[0x1E4F1D418];
  if (CFRunLoopRunInMode((CFRunLoopMode)*MEMORY[0x1E4F1D418], 0.0, 0) == kCFRunLoopRunTimedOut)
  {
    Current = CFRunLoopGetCurrent();
    if (CFRunLoopGetNextTimerFireDate(Current, v0) > 1.17549435e-38)
    {
      double v2 = 0.001;
      do
      {
        if (CFRunLoopRunInMode(v0, v2, 0) != kCFRunLoopRunTimedOut) {
          break;
        }
        double v2 = v2 + v2;
        unint64_t v3 = CFRunLoopGetCurrent();
      }
      while (CFRunLoopGetNextTimerFireDate(v3, v0) > 1.17549435e-38 && v2 < 10.0);
    }
  }
}

void sub_1A7F1A628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1A6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1A74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1A838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1A908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

uint64_t handleMessageRow(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v11 = [*(id *)a2 _messageForRow:v7 options:*(unsigned int *)(a2 + 52) timestamp:*(void *)(a2 + 32) connection:v8 isProtectedDataAvailable:*(unsigned __int8 *)(a2 + 64) recipientsCache:v9];
  [*(id *)(a2 + 8) addObject:v11];
  unint64_t v12 = [*(id *)(a2 + 8) count];
  unint64_t v13 = *(unsigned int *)(a2 + 24);
  if (v12 >= v13)
  {
    *(_DWORD *)(a2 + 24) = 2 * v13;
    float v15 = *(float *)(a2 + 28) + *(float *)(a2 + 28);
  }
  else
  {
    if (!v12) {
      goto LABEL_15;
    }
    float v14 = *(float *)(a2 + 28);
    if (Current - *(double *)(a2 + 40) <= v14) {
      goto LABEL_15;
    }
    float v15 = v14 + (float)((float)(v14 * (float)v12) / (float)v13);
  }
  *(float *)(a2 + 28) = v15;
  id v16 = MFLogGeneral();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    int v17 = *(_DWORD *)(a2 + 48);

    if (!v17)
    {
      v18 = MFLogGeneral();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        double v19 = *(double *)(a2 + 40);
        uint64_t v20 = [*(id *)(a2 + 8) count];
        int v25 = 134218240;
        double v26 = Current - v19;
        __int16 v27 = 2048;
        uint64_t v28 = v20;
        _os_log_impl(&dword_1A7EFF000, v18, OS_LOG_TYPE_INFO, "#SQLite #Performance %.3f seconds to load first batch of %lu messages", (uint8_t *)&v25, 0x16u);
      }
    }
  }
  else
  {
  }
  if (*(float *)(a2 + 28) > 16.0) {
    *(_DWORD *)(a2 + 28) = 1098907648;
  }
  id v21 = *(id *)(a2 + 8);
  [*(id *)(a2 + 16) newMessagesAvailable:v21];
  *(_DWORD *)(a2 + 48) += [v21 count];
  *(double *)(a2 + 40) = Current;
  id v22 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v23 = *(void **)(a2 + 8);
  *(void *)(a2 + 8) = v22;

LABEL_15:
  return 1;
}

void sub_1A7F1ABC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1ACF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1AF28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1B294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v22);

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __MFPersistenceAdaptorPowerLogDidCreateInstance_block_invoke(uint64_t a1)
{
  v7[1] = *MEMORY[0x1E4F143B8];
  double v2 = MFUserAgent();
  int v3 = [v2 isMaild];

  if (v3)
  {
    if (powerLogIdentifier_onceToken != -1) {
      dispatch_once(&powerLogIdentifier_onceToken, &__block_literal_global_55);
    }
    uint64_t v6 = @"IMAPv4";
    uint64_t v4 = [MEMORY[0x1E4F28ED0] numberWithBool:*(unsigned __int8 *)(a1 + 32)];
    v7[0] = v4;
    uint64_t v5 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v7 forKeys:&v6 count:1];
    PPSSendTelemetry();
  }
}

void sub_1A7F1B43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1B5F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);

  _Unwind_Resume(a1);
}

uint64_t MFCompareMailboxUids(void *a1, void *a2, void *a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = a2;
  id v7 = v6;
  if (v5 == v6)
  {
    uint64_t v10 = 0;
    goto LABEL_11;
  }
  if (!v5) {
    goto LABEL_6;
  }
  if (!v6) {
    goto LABEL_10;
  }
  uint64_t v8 = [(os_unfair_lock_s *)v5 mailboxType];
  uint64_t v9 = [(os_unfair_lock_s *)v7 mailboxType];
  if (v8 && !v9) {
    goto LABEL_6;
  }
  if (v9 && !v8) {
    goto LABEL_10;
  }
  if (v8 < v9)
  {
LABEL_6:
    uint64_t v10 = 1;
    goto LABEL_11;
  }
  if (v8 > v9)
  {
LABEL_10:
    uint64_t v10 = -1;
    goto LABEL_11;
  }
  if (!a3 || (v5[36]._os_unfair_lock_opaque & 0x10) != 0 || (v7[36]._os_unfair_lock_opaque & 0x10) != 0)
  {
    int v17 = [(os_unfair_lock_s *)v5 account];
    if (v17) {
      [(os_unfair_lock_s *)v5 displayName];
    }
    else {
    float v14 = -[MFMailboxUid pathComponent](v5);
    }

    id v12 = [(os_unfair_lock_s *)v7 account];
    if (v12) {
      [(os_unfair_lock_s *)v7 displayName];
    }
    else {
    id v16 = -[MFMailboxUid pathComponent](v7);
    }
  }
  else
  {
    id v12 = a3;
    unint64_t v13 = -[MFMailboxUid pathComponent](v5);
    float v14 = [v12 _pathComponentForUidName:v13];

    float v15 = -[MFMailboxUid pathComponent](v7);
    id v16 = [v12 _pathComponentForUidName:v15];
  }
  if (v14 == v16)
  {
    uint64_t v10 = 0;
  }
  else if (v14)
  {
    if (v16)
    {
      uint64_t v18 = [v14 length];
      double v19 = [MEMORY[0x1E4F1CA20] currentLocale];
      uint64_t v10 = objc_msgSend(v14, "compare:options:range:locale:", v16, 65, 0, v18, v19);

      if (!v10)
      {
        uint64_t v20 = [v14 length];
        id v21 = [MEMORY[0x1E4F1CA20] currentLocale];
        uint64_t v10 = objc_msgSend(v14, "compare:options:range:locale:", v16, 64, 0, v20, v21);
      }
    }
    else
    {
      uint64_t v10 = -1;
    }
  }
  else
  {
    uint64_t v10 = 1;
  }

LABEL_11:
  return v10;
}

void sub_1A7F1B8A0(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  _Unwind_Resume(a1);
}

uint64_t block_copy_helper_597(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_13_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_1A7F1BAB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1BB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F1BC5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1BCF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1BE80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t v4 = *a1;
  if (*a1 < 0)
  {
    uint64_t TypeByMangledNameInContext2 = swift_getTypeByMangledNameInContext2();
    *a1 = TypeByMangledNameInContext2;
    return TypeByMangledNameInContext2;
  }
  return v4;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName_0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

size_t _swift_stdlib_malloc_size(const void *a1)
{
  return malloc_size(a1);
}

uint64_t OUTLINED_FUNCTION_68()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  return sub_1A8A76228();
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return 0x55414C52554E4547;
}

uint64_t OUTLINED_FUNCTION_68_3()
{
  return 0x5452454C41;
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return swift_projectBox();
}

void OUTLINED_FUNCTION_68_5(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if ((*(_DWORD *)(*(void *)(v2 - 8) + 80) & 0x20000) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
  }
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(*(void *)(a2 - 8) + 80);
  if ((v2 & 0x20000) != 0) {
    return (void *)(*result + ((v2 + 16) & ~(unint64_t)v2));
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0) {
    return *(void *)a2;
  }
  return v3;
}

uint64_t __swift_project_value_buffer_0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1_0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void OUTLINED_FUNCTION_99_2(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  __swift_storeEnumTagSinglePayload(v18, 1, 1, a1);
}

void OUTLINED_FUNCTION_8_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return sub_1A86F5EB0();
}

uint64_t OUTLINED_FUNCTION_164()
{
  return v0;
}

void OUTLINED_FUNCTION_8_3()
{
  uint64_t v5 = *(void *)(v3 + 24) + ((v1 >> 24) & 0xFFFF00 | BYTE6(v1));
  ByteBuffer._setBytes(_:at:)(v5 + v2, v5 + HIDWORD(v2), v0);
}

uint64_t OUTLINED_FUNCTION_8_4(uint64_t a1)
{
  void *v1 = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_8_9()
{
  JUMPOUT(0x1AD0DF770);
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return sub_1A8A78738();
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return sub_1A8A78588();
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return sub_1A8A78768();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  return sub_1A8640CC8(v3, v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return 32;
}

uint64_t OUTLINED_FUNCTION_8_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_16()
{
  return 0x20225458455422;
}

uint64_t OUTLINED_FUNCTION_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_17()
{
  return v0;
}

void OUTLINED_FUNCTION_39()
{
  sub_1A871AEC8(v1, v0, v2, v3);
}

void OUTLINED_FUNCTION_8_19(uint64_t a1, unint64_t a2)
{
  sub_1A871AEC8(a1, a2, v2, v3);
}

void OUTLINED_FUNCTION_8_20()
{
  uint64_t v7 = *v1 + (v3 | (v2 << 8)) + v4;
  ByteBuffer._setBytes(_:at:)(v7, v7 + v5, v0);
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_8_22(uint64_t a1, uint64_t a2)
{
  return sub_1A86FD7DC(v2, a2);
}

uint64_t OUTLINED_FUNCTION_8_24()
{
  return 0x484352414553;
}

uint64_t OUTLINED_FUNCTION_8_25()
{
  return sub_1A8A77AE8();
}

uint64_t OUTLINED_FUNCTION_8_27()
{
  return 0x69706F742D737061;
}

uint64_t OUTLINED_FUNCTION_8_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_29()
{
  sub_1A871D244(v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_30()
{
  return 0x204C414954524150;
}

void OUTLINED_FUNCTION_8_31()
{
  sub_1A871AEC8(32, 0xE100000000000000, v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_32()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_36()
{
  return sub_1A8A784D8();
}

uint64_t OUTLINED_FUNCTION_8_37()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_43()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_8_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_8_45()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_8_46()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_47()
{
  return 0x2820484354454620;
}

uint64_t OUTLINED_FUNCTION_2(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(void *)(a2 + 4) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_5(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2114;
  *(void *)(a3 + 14) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  *(void *)(v2 - 112) = v1;
  *(void *)(v2 - 104) = v0 & 0xFFFFFFFFFFFFFFLL;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

Swift::Int OUTLINED_FUNCTION_5_4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, __int16 a16, char a17)
{
  return ByteBuffer.setRepeatingByte(_:count:at:)(v18, v17, v19);
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  return sub_1A8A784D8();
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return sub_1A8A76498();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return ByteBuffer.setBytes<A>(_:at:)(v1, v2, v0);
}

void OUTLINED_FUNCTION_5_10(uint64_t a1, const void *a2)
{
  sub_1A8716014(30, a2, 0x2EuLL);
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_19()
{
  sub_1A871AEC8(v1, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  sub_1A871DC38(v5, v4, v3);
  return sub_1A871DC38(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  return sub_1A8A762A8();
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return sub_1A8A767E8();
}

uint64_t OUTLINED_FUNCTION_32(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_86()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName_0(a3);
}

uint64_t OUTLINED_FUNCTION_5_19(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A8750CB8(a1, a2, a3 & 0xFFFF0000FFFFFFFFLL | 0x3D00000000);
}

Swift::Int OUTLINED_FUNCTION_36(uint64_t a1, uint64_t a2)
{
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t OUTLINED_FUNCTION_5_21()
{
  return sub_1A8A767E8();
}

uint64_t OUTLINED_FUNCTION_5_22()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_23()
{
  return sub_1A8759BC8(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_24()
{
  return sub_1A8A78748();
}

void OUTLINED_FUNCTION_5_25(int a1@<W8>)
{
  *(_DWORD *)(v1 + 20) = a1;
}

uint64_t OUTLINED_FUNCTION_22_0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x482E000000000000;
}

uint64_t OUTLINED_FUNCTION_5_26()
{
  return 0x204C414954524150;
}

uint64_t OUTLINED_FUNCTION_5_27()
{
  return sub_1A8A78748();
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return *(void *)(v2 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v1;
}

void OUTLINED_FUNCTION_5_28(uint64_t a1)
{
  unint64_t v4 = a1 & 0xFFFF0000FFFFFFFFLL | 0x2000000000;
  sub_1A871AEC8(v4, 0xE500000000000000, v1, v2);
}

uint64_t OUTLINED_FUNCTION_5_29()
{
  return 0x48435445464C5255;
}

uint64_t OUTLINED_FUNCTION_5_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_31()
{
  return 0x64657463656C6573;
}

void OUTLINED_FUNCTION_5_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void (*a13)(), void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1A8817930(v26, v27, v28, v29, a16, a17, (uint64_t)a14, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_5_34()
{
  return sub_1A87A3260();
}

Swift::Int OUTLINED_FUNCTION_5_35(uint64_t a1, uint64_t a2)
{
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void OUTLINED_FUNCTION_5_36(uint64_t a1, unint64_t a2)
{
  sub_1A871AEC8(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_5_37()
{
  return sub_1A8A78588();
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_5_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_41()
{
  return v0 - 160;
}

void OUTLINED_FUNCTION_5_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14, uint64_t a15)
{
  *(void *)uint64_t v15 = a15;
  *(void *)(v15 + 8) = v16;
  *(_DWORD *)(v15 + 16) = a14;
  *(_WORD *)(v15 + 20) = a13;
  *(unsigned char *)(v15 + 22) = a11;
}

void OUTLINED_FUNCTION_12()
{
  sub_1A882CD9C();
}

uint64_t OUTLINED_FUNCTION_5_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_44()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1A87FC5D4(v25, v24, v23, v21, v22, a21, a20);
}

void OUTLINED_FUNCTION_5_46()
{
  *(void *)(v1 - 72) = v0;
}

void *OUTLINED_FUNCTION_4_0(void *result)
{
  result[2] = v1;
  result[3] = v2;
  result[4] = v4;
  result[5] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_48()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_5_49()
{
  return swift_allocObject();
}

Swift::Int OUTLINED_FUNCTION_30(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

void OUTLINED_FUNCTION_44_0()
{
  ByteBuffer.writeBuffer(_:)();
}

void OUTLINED_FUNCTION_44_1()
{
  *(_DWORD *)(v1 - 200) = v0;
}

void OUTLINED_FUNCTION_44_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  return 41;
}

void OUTLINED_FUNCTION_44_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12)
{
  *(void *)uint64_t v12 = v13;
  *(void *)(v12 + 8) = v15;
  *(_DWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 20) = a12;
  *(unsigned char *)(v12 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_44_8()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_39_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)(v20 - 112) = a20;
  *(void *)(v20 - 104) = a18;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  return 0x205458454E444955;
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  return 0x2045524F464542;
}

void OUTLINED_FUNCTION_39_10()
{
  *(void *)uint64_t v2 = v4;
  *(void *)(v2 + 8) = v5;
  *(_DWORD *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 20) = v3;
  *(unsigned char *)(v2 + 22) = v0;
}

uint64_t OUTLINED_FUNCTION_39_11()
{
  return v0;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_0_3(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_0_4(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_0_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_0_11()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return *(void *)(v2 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v1;
}

__n128 OUTLINED_FUNCTION_0_13()
{
  return *(__n128 *)v0;
}

uint64_t OUTLINED_FUNCTION_0_14(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1A87128B4(a3, a1);
}

BOOL OUTLINED_FUNCTION_0_15()
{
  sub_1A8713838(v1);
  sub_1A8713838(v0);
  return static SocketAddress.== infix(_:_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_17()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_19@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  return sub_1A871A720(v3, v4, v5, v6, v1);
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_0_21()
{
  sub_1A871DC20(v2, v1, v0);
  sub_1A871DC20(v5, v4, v3);
  return static ByteBuffer.== infix(_:_:)(v2, v1, v0 & 0xFFFFFFFFFFFFFFLL, v5, v4, v3 & 0xFFFFFFFFFFFFFFLL);
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return 0x756F6D796E6F6E61;
}

void OUTLINED_FUNCTION_0_23()
{
  sub_1A871AEC8(v0, v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  return 0x485455414C52553BLL;
}

uint64_t OUTLINED_FUNCTION_0_26(unsigned __int16 a1)
{
  return a1 | 0x4E454B4F540000;
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  sub_1A872E090(v1, v5, v4, 0);
  return sub_1A872E090(v0, v3, v2, 0);
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return sub_1A8640C64(v1, v0);
}

uint64_t OUTLINED_FUNCTION_0_31()
{
  return sub_1A8A76638();
}

Swift::Int OUTLINED_FUNCTION_0_32()
{
  uint64_t v2 = 32;
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

void OUTLINED_FUNCTION_1_2()
{
  Swift::UInt32 v3 = *(_DWORD *)(v0 + 20);
  sub_1A871AEC8(32, 0xE100000000000000, v1, v3);
}

uint64_t OUTLINED_FUNCTION_0_33()
{
  return *(void *)(v1 + 24) + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v0;
}

uint64_t OUTLINED_FUNCTION_0_34()
{
  return *(void *)(v1 + 24) + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v0;
}

uint64_t OUTLINED_FUNCTION_0_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9()
{
  return 32;
}

__n128 OUTLINED_FUNCTION_0_36(uint64_t a1)
{
  *(_OWORD *)(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(a1 + 88);
  __n128 result = *(__n128 *)(a1 + 104);
  *(__n128 *)(v1 + 104) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_37()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

void OUTLINED_FUNCTION_0_38()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return *(void *)(v0 + 24) + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v1;
}

uint64_t OUTLINED_FUNCTION_0_39()
{
  return sub_1A8A767E8();
}

uint64_t OUTLINED_FUNCTION_0_40()
{
  return sub_1A8A78588();
}

uint64_t OUTLINED_FUNCTION_0_41()
{
  return v0;
}

Swift::Int OUTLINED_FUNCTION_6_1(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t OUTLINED_FUNCTION_0_44()
{
  return 0x494C41564449553BLL;
}

uint64_t OUTLINED_FUNCTION_0_45()
{
  return 0x2F7367616C662F22;
}

uint64_t OUTLINED_FUNCTION_0_46(uint64_t a1, uint64_t a2)
{
  return sub_1A86FD7DC(v2, a2);
}

uint64_t OUTLINED_FUNCTION_0_47()
{
  return 0x2820514553444F4DLL;
}

unint64_t OUTLINED_FUNCTION_0_48(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_0_49()
{
  return 0x616C466C69614D24;
}

uint64_t OUTLINED_FUNCTION_0_50()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_51()
{
  return 0x2F2F3A70616D69;
}

uint64_t OUTLINED_FUNCTION_0_52()
{
  return 0x2A3D485455413BLL;
}

uint64_t OUTLINED_FUNCTION_0_53@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  return a1(a2);
}

uint64_t OUTLINED_FUNCTION_0_54()
{
  return 0x204E5255544552;
}

uint64_t OUTLINED_FUNCTION_0_55(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1A86FD460(v8, v7, v6, v5, a5);
}

uint64_t OUTLINED_FUNCTION_0_56()
{
  return sub_1A86FD460(v3, v2, v1, v0, v4 & 1);
}

unint64_t OUTLINED_FUNCTION_0_57@<X0>(uint64_t a1@<X8>)
{
  return a1 | ((unint64_t)v1 << 32);
}

uint64_t OUTLINED_FUNCTION_0_58()
{
  return sub_1A85F272C(v1, v0);
}

__n128 OUTLINED_FUNCTION_0_59@<Q0>(__n128 *a1@<X8>)
{
  return a1[3];
}

uint64_t OUTLINED_FUNCTION_0_61()
{
  return 0x584F424E49;
}

uint64_t OUTLINED_FUNCTION_0_62()
{
  return *(void *)(v1 + 24) + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v0;
}

__n128 OUTLINED_FUNCTION_0_63(uint64_t a1)
{
  *(_OWORD *)(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(a1 + 88);
  __n128 result = *(__n128 *)(a1 + 104);
  *(__n128 *)(v1 + 104) = result;
  return result;
}

void OUTLINED_FUNCTION_0_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1A87D0A78(v22, 0, 0xE000000000000000, 44, 0xE100000000000000, 0, 0xE000000000000000, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22);
}

uint64_t OUTLINED_FUNCTION_0_65()
{
  return 0x415441444154454DLL;
}

uint64_t OUTLINED_FUNCTION_0_66()
{
  return *(void *)(v2 + 24) + ((v1 >> 24) & 0xFFFF00 | BYTE6(v1)) + v0;
}

uint64_t OUTLINED_FUNCTION_0_68()
{
  return 0x43415053454D414ELL;
}

void OUTLINED_FUNCTION_0_69(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,Swift::String a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  sub_1A86F76F0(a1, 0, 0, 32, 0, 0, 0, 1, v41, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41);
}

void OUTLINED_FUNCTION_1_3(uint64_t a1, unint64_t a2)
{
  sub_1A871AEC8(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_0_71()
{
  return 0x2041544F5551;
}

uint64_t OUTLINED_FUNCTION_0_72()
{
  return 0x4F4F5241544F5551;
}

__n128 OUTLINED_FUNCTION_0_73(__n128 *a1)
{
  return a1[4];
}

void OUTLINED_FUNCTION_0_74()
{
  Swift::UInt32 v3 = *(_DWORD *)(v0 + 20);
  sub_1A871AEC8(32, 0xE100000000000000, v1, v3);
}

uint64_t OUTLINED_FUNCTION_0_75(unint64_t a1)
{
  return sub_1A87A4490(a1, v2, v1, 0);
}

uint64_t OUTLINED_FUNCTION_0_77(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, long long a20,uint64_t a21,Swift::String a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  return sub_1A86F9EA4(a1, 0, 0, 44, 0, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t OUTLINED_FUNCTION_0_78()
{
  return swift_getEnumCaseMultiPayload();
}

unint64_t OUTLINED_FUNCTION_0_80()
{
  unint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  unsigned __int8 v5 = *(unsigned char *)(v0 + 40);
  return sub_1A87A9F18(v2, v3, v4, v5);
}

void OUTLINED_FUNCTION_0_81()
{
  sub_1A87A43AC(v1);
  sub_1A87A43AC(v0);
  static ResponseTextCode.__derived_enum_equals(_:_:)();
}

_OWORD *OUTLINED_FUNCTION_0_82()
{
  return sub_1A8787B54(v0, (_OWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_0_83()
{
  return 0x494C415644495520;
}

uint64_t OUTLINED_FUNCTION_0_85()
{
  return 32;
}

uint64_t OUTLINED_FUNCTION_0_86()
{
  return j__OUTLINED_FUNCTION_94(v1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v0);
}

void OUTLINED_FUNCTION_0_88()
{
  sub_1A873CA9C();
}

uint64_t OUTLINED_FUNCTION_0_89()
{
  return v0;
}

void *OUTLINED_FUNCTION_0_90(void *result)
{
  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

void OUTLINED_FUNCTION_0_91()
{
  sub_1A882CD9C();
}

void OUTLINED_FUNCTION_0_92()
{
  sub_1A882CE98(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return v0;
}

void *OUTLINED_FUNCTION_15(void *result)
{
  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

void *OUTLINED_FUNCTION_0_93(void *result)
{
  result[2] = v4;
  result[3] = v1;
  result[4] = v3;
  result[5] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_94()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_0_96()
{
  return swift_retain();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> __swift_memcpy80_8(void *a1, const void *a2)
{
}

__n128 __swift_memcpy80_8_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *__swift_memcpy80_8_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

__n128 __swift_memcpy80_8_2(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

__n128 __swift_memcpy80_8_3(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

__n128 __swift_memcpy80_8_4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t a2)
{
  *(void *)__n128 result = *(void *)a2;
  *(unsigned char *)(result + 8) = *(unsigned char *)(a2 + 8);
  return result;
}

uint64_t __swift_memcpy9_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy9_8_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy9_8_2(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy9_8_3(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy9_8_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy9_8_5(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy9_8_6(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t _swift_stdlib_has_malloc_size()
{
  return 1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *__swift_memcpy8_8_0(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *__swift_memcpy8_8_1(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *__swift_memcpy8_8_2(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *__swift_memcpy8_8_3(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *__swift_memcpy8_8_4(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *__swift_memcpy8_8_5(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *__swift_memcpy8_8_6(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void OUTLINED_FUNCTION_4_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return sub_1A8A78588();
}

void *OUTLINED_FUNCTION_6_7@<X0>(void *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  return memmove(a1, a2, a3 - (void)a2);
}

__n128 OUTLINED_FUNCTION_6_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __n128 a10, long long a11, uint64_t a12)
{
  __n128 result = a10;
  *(__n128 *)uint64_t v12 = a10;
  *(_OWORD *)(v12 + 16) = a11;
  *(void *)(v12 + 32) = a12;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_6_10(uint64_t a1, const void *a2)
{
  sub_1A8716014(2, a2, 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return sub_1A8A78748();
}

void OUTLINED_FUNCTION_6_13()
{
  sub_1A871AEC8(v2, v1, v0, v3);
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  return sub_1A8A767E8();
}

uint64_t OUTLINED_FUNCTION_6_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v28 = v27;
  unint64_t v29 = v26;
  sub_1A86FD4A0(a21, a25, v27);
  sub_1A86FD4A0(a22, a26, v29);
  sub_1A86FD56C(a22, a26, v29);
  return sub_1A86FD56C(a21, a25, v28);
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  return sub_1A856B770(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  return 0x4547415353454D22;
}

void OUTLINED_FUNCTION_6_20(char a1@<W8>)
{
  *(void *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = a1 & 1;
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return type metadata accessor for CommandStreamPart();
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_24()
{
  sub_1A86FD4A0(v5, v4, v0);
  sub_1A86FD4A0(v3, v2, v1);
  return v3;
}

uint64_t OUTLINED_FUNCTION_6_25()
{
  return sub_1A8773D30(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_6_26()
{
  return sub_1A8731058();
}

unsigned char *OUTLINED_FUNCTION_6_28(unsigned char *result, unsigned char *a2)
{
  void *result = *a2;
  result[1] = a2[1];
  return result;
}

uint64_t OUTLINED_FUNCTION_6_29()
{
  return 0x2D4C414943455053;
}

uint64_t OUTLINED_FUNCTION_6_30()
{
  return sub_1A85F2770(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_31()
{
  return 0x4C414E5245544E49;
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_32()
{
  return sub_1A8A76368();
}

uint64_t OUTLINED_FUNCTION_7_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41848C0](v5 - 88, a2, a3, v3, v4);
}

uint64_t OUTLINED_FUNCTION_6_33()
{
  return 0x7365786F626E69;
}

void OUTLINED_FUNCTION_6_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void (*a13)(), void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1A8817930(v26, v27, v28, v30, a16, a17, v29, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

unint64_t OUTLINED_FUNCTION_6_35@<X0>(unsigned __int8 a1@<W8>)
{
  *(unsigned char *)(v2 - 92) = a1;
  return v1 | ((unint64_t)a1 << 32);
}

unint64_t OUTLINED_FUNCTION_6_37(unint64_t a1)
{
  return sub_1A87AAE54(a1, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return sub_1A8A78588();
}

uint64_t OUTLINED_FUNCTION_6_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_41()
{
  return 0x524544414548;
}

void OUTLINED_FUNCTION_6_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,__int16 a29,__int16 a30,int a31,int a32,int a33)
{
  *(void *)uint64_t v33 = v34;
  *(_DWORD *)(v33 + 8) = a33;
  *(_DWORD *)(v33 + 12) = a32;
  *(_DWORD *)(v33 + 16) = a31;
  *(_WORD *)(v33 + 20) = a30;
  *(unsigned char *)(v33 + 22) = a28;
}

uint64_t OUTLINED_FUNCTION_6_44()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, uint64_t a16, char a17)
{
  *(unsigned char *)(a1 + 86) = a13;
  *(_WORD *)(a1 + 84) = a15;
  *(_DWORD *)(a1 + 80) = v17;
  uint64_t result = *(void *)(v19 - 96);
  *(void *)(v18 + 88) = result;
  *(void *)(v18 + 96) = a16;
  *(unsigned char *)(v18 + 110) = a17;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_48@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_6_49(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

void sub_1A7F1EAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1F10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

BOOL _IsWiFiEnabled(const __SCPreferences *a1)
{
  CFBooleanRef Value = (const __CFBoolean *)SCPreferencesGetValue(a1, @"AllowEnable");
  if (Value && (CFTypeID TypeID = CFNumberGetTypeID(), TypeID == CFGetTypeID(Value))) {
    BOOL v4 = CFBooleanGetValue(Value) != 0;
  }
  else {
    BOOL v4 = *MEMORY[0x1E4F1CFD0] == (void)Value;
  }
  SCPreferencesSynchronize(a1);
  return v4;
}

void sub_1A7F1F424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1F484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1F594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1F6B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1F850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1FC5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7F1FDDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F1FF54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F20004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F202DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F203DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F204AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2054C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F20724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFCriterionExpressionForDate(void *a1)
{
  [a1 timeIntervalSince1970];
  double v2 = v1;
  double __y = NAN;
  modf(v1, &__y);
  if (__y == v2) {
    objc_msgSend(NSString, "stringWithFormat:", @"%d", __y, (int)__y);
  }
  else {
  uint64_t v3 = objc_msgSend(NSString, "stringWithFormat:", @"%f", __y, *(void *)&v2);
  }
  return v3;
}

void sub_1A7F20BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7F20D4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F20F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2103C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F212B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _dataForMessageAndPart(void *a1, void *a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  if ([v11 isEqualToString:@"summary"]) {
    __assert_rtn("_dataForMessageAndPart", "MailMessageLibrary.m", 6230, "![part isEqualToString:MFMessagePartNameSummary]");
  }
  uint64_t v33 = 0;
  uint64_t v34 = &v33;
  uint64_t v35 = 0x3032000000;
  v36 = __Block_byref_object_copy__6;
  id v37 = __Block_byref_object_dispose__6;
  id v38 = 0;
  uint64_t v12 = [v9 database];
  uint64_t v13 = [NSString stringWithUTF8String:"_dataForMessageAndPart"];
  uint64_t v23 = MEMORY[0x1E4F143A8];
  uint64_t v24 = 3221225472;
  uint64_t v25 = ___dataForMessageAndPart_block_invoke;
  uint64_t v26 = &unk_1E5D3D4D0;
  id v14 = v9;
  id v27 = v14;
  uint64_t v31 = a5;
  id v15 = v11;
  id v28 = v15;
  char v32 = a4;
  id v16 = v10;
  id v29 = v16;
  uint64_t v30 = &v33;
  objc_msgSend(v12, "__performReadWithCaller:usingBlock:", v13, &v23);

  int v17 = (void *)v34[5];
  if (v17)
  {
    uint64_t v18 = MFLogGeneral();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v19 = objc_msgSend((id)v34[5], "length", v23, v24, v25, v26, v27, v28);
      uint64_t v20 = objc_msgSend(v16, "ef_publicDescription");
      *(_DWORD *)buf = 134218498;
      uint64_t v40 = v19;
      __int16 v41 = 2114;
      uint64_t v42 = v20;
      __int16 v43 = 2114;
      id v44 = v15;
      _os_log_impl(&dword_1A7EFF000, v18, OS_LOG_TYPE_INFO, "#CacheLoads data from database of length %lu for message %{public}@ part %{public}@", buf, 0x20u);
    }
    int v17 = (void *)v34[5];
  }
  id v21 = v17;

  _Block_object_dispose(&v33, 8);
  return v21;
}

void sub_1A7F21618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F217EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F21A04(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A7F21B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F21C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _dataPathForMessageAndPart(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = [v5 bodyMigrator];
  [v8 migrateBodyForMessageIfNecessary:v6];

  uint64_t v9 = [v6 globalMessageID];
  id v10 = [v6 account];
  if (v7)
  {
    id v11 = [v7 stringByAppendingPathExtension:@"emlxpart"];
  }
  else
  {
    id v11 = @"full.emlx";
  }
  uint64_t v12 = [v5 messageBasePathForAccount:v10];
  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F60B30], "messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:", v9, v12, objc_msgSend(v10, "supportsPurge"));
  id v14 = [v13 URLByAppendingPathComponent:v11 isDirectory:0];

  id v15 = [v14 path];

  return v15;
}

void sub_1A7F21E14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F21F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F22010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2206C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F22120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F221D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F22250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F22298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F224D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2256C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2261C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F227C8(_Unwind_Exception *a1)
{
  id v6 = v4;

  _Unwind_Resume(a1);
}

id _bodyDataFromData(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 length];
  uint64_t v5 = objc_msgSend(v3, "mf_rangeOfRFC822HeaderData");
  uint64_t v7 = v6;
  if (v6 != v4)
  {
    uint64_t v10 = v5;
    uint64_t v8 = objc_msgSend(v3, "mf_subdataWithRange:", v5 + v6, v4 - (v5 + v6));
    if (!a2) {
      goto LABEL_11;
    }
    objc_msgSend(v3, "mf_subdataWithRange:", v10, v7);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_7;
  }
  if (v4)
  {
    uint64_t v8 = [MEMORY[0x1E4F1C9B8] data];
    if (!a2) {
      goto LABEL_11;
    }
    id v9 = v3;
LABEL_7:
    *a2 = v9;
    goto LABEL_11;
  }
  id v11 = EDLibraryLog();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1A7EFF000, v11, OS_LOG_TYPE_INFO, "Empty message data", v13, 2u);
  }

  uint64_t v8 = 0;
LABEL_11:

  return v8;
}

void sub_1A7F22958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void MFSetUserAgent(id obj)
{
}

void sub_1A7F22B08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F22B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F22C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F22D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t ___dataForMessageAndPart_block_invoke(uint64_t a1, void *a2)
{
  v24[2] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if ([*(id *)(a1 + 32) isProtectedDataAvailable:v3])
  {
    uint64_t v4 = @"part = ? AND complete IS NOT NULL";
    uint64_t v5 = *(void *)(a1 + 40);
    BOOL v6 = v5 == 0;
    if (!v5) {
      uint64_t v4 = @"part IS NULL AND complete IS NOT NULL";
    }
    uint64_t v7 = @"part = ?";
    if (v6) {
      uint64_t v7 = @"part IS NULL";
    }
    if (*(void *)(a1 + 64))
    {
      uint64_t v4 = v7;
      uint64_t v8 = @"b.data, a.complete";
    }
    else
    {
      uint64_t v8 = @"b.data";
    }
    id v9 = v4;
    if (!*(unsigned char *)(a1 + 72))
    {
      uint64_t v10 = [NSString stringWithFormat:@"%@ AND partial IS NULL", v9];

      id v9 = (__CFString *)v10;
    }
    id v11 = [NSString stringWithFormat:@"SELECT %@ FROM message_data AS a JOIN protected_message_data AS b ON a.rowid = b.rowid AND a.message_id = ? AND %@", v8, v9];
    uint64_t v12 = [v3 preparedStatementForQueryString:v11];
    uint64_t v13 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 48), "libraryID"));
    v24[0] = v13;
    id v14 = *(void **)(a1 + 40);
    id v15 = v14;
    if (!v14)
    {
      id v15 = [MEMORY[0x1E4F1CA98] null];
    }
    v24[1] = v15;
    id v16 = [MEMORY[0x1E4F1C978] arrayWithObjects:v24 count:2];
    id v21 = 0;
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 3221225472;
    v22[2] = ___dataForMessageAndPart_block_invoke_2;
    v22[3] = &unk_1E5D3CA68;
    long long v23 = *(_OWORD *)(a1 + 56);
    uint64_t v17 = [v12 executeWithIndexedBindings:v16 usingBlock:v22 error:&v21];
    BOOL v18 = v14 == 0;
    id v19 = v21;

    if (v18) {
    if ((v17 & 1) == 0)
    }
      [v3 handleError:v19 message:@"Fetching data for message part"];
  }
  else
  {
    uint64_t v17 = 1;
  }

  return v17;
}

void sub_1A7F22FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F23750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

id partDataFromFullBodyDataWithUnixLineEndings(void *a1, void *a2, void *a3, unsigned char *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v11 = [v9 range];
  if (v11 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_8;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11 + v10;
  if (v11 + v10 > (unint64_t)[v7 length])
  {
    if (!v11)
    {
      id v14 = objc_msgSend(v7, "mf_dataByConvertingUnixNewlinesToNetwork");
      uint64_t v15 = [v14 length];

      if (v15 == v13)
      {
        id v16 = MFLogGeneral();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          uint64_t v17 = [v8 messageID];
          BOOL v18 = [v9 partNumber];
          int v22 = 138543618;
          long long v23 = v17;
          __int16 v24 = 2114;
          uint64_t v25 = v18;
          _os_log_impl(&dword_1A7EFF000, v16, OS_LOG_TYPE_INFO, "#CacheLoads part data matches full body data with network line endings, returning full body data %{public}@:%{public}@", (uint8_t *)&v22, 0x16u);
        }
        id v19 = v7;
        goto LABEL_10;
      }
    }
LABEL_8:
    uint64_t v20 = 0;
    goto LABEL_12;
  }
  objc_msgSend(v7, "mf_subdataWithRange:", v11, v12);
  id v19 = (id)objc_claimAutoreleasedReturnValue();
LABEL_10:
  uint64_t v20 = v19;
  if (a4) {
    *a4 = 1;
  }
LABEL_12:

  return v20;
}

void sub_1A7F23A74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F23CF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F23F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F24070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F243C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A7F24750(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  __destructor_8_s0_s8_s16_s72((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1A7F24850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __destructor_8_s0_s8_s16_s72(uint64_t a1)
{
  double v2 = *(void **)(a1 + 72);
}

void sub_1A7F24AC8(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t tablesForOptionsAndCriterion(unsigned int a1, void *a2, int a3)
{
  id v5 = a2;
  unsigned int v6 = addOptionsForCriterion(a1, v5);
  if (a3) {
    unsigned int v7 = v6;
  }
  else {
    unsigned int v7 = v6 & 0xFFBFFFF0;
  }
  if ((v7 & 8) != 0)
  {
    if (_os_feature_enabled_impl())
    {
      if (EMIsGreymatterSupportedWithOverride()) {
        int v8 = 36864;
      }
      else {
        int v8 = 4096;
      }
    }
    else
    {
      int v8 = 4096;
    }
  }
  else
  {
    int v8 = 0;
  }
  int v9 = _os_feature_enabled_impl();
  if (a3) {
    int v10 = 1572864;
  }
  else {
    int v10 = 0x80000;
  }
  if ((v9 & (v7 >> 5)) == 0) {
    int v10 = 0;
  }
  uint64_t v11 = (v7 >> 1) & 2 | (4 * (v7 & 3)) | (((v7 >> 4) & 1) << 10) & 0xFFFFBFFF | (v7 >> 5) & 0x8000 | (((v7 >> 6) & 1) << 14) | (v7 >> 5) & 0x70000 | v8 | v10;

  return v11;
}

void sub_1A7F24CBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id tablesForBaseTableAndOtherTables(int a1, unsigned int a2)
{
  double v2 = "messages %s";
  unsigned int v3 = a2 & 0xFFFFFFBF;
  uint64_t v4 = "attachments AS attachment JOIN messages ON attachment.message_id = messages.ROWID %s";
  unsigned int v5 = a2 & 0xFFFEFFFF;
  unsigned int v6 = "senders JOIN sender_addresses ON senders.ROWID = sender_addresses.sender JOIN messages ON senders_addresses.addre"
       "ss = messages.sender %s";
  unsigned int v7 = "brand_indicators JOIN messages ON brand_indicators.ROWID = messages.brand_indicator %s";
  unsigned int v8 = a2 & 0xFFFDFFFF;
  if (a1 != 0x20000)
  {
    unsigned int v8 = a2;
    unsigned int v7 = "messages %s";
  }
  if (a1 != 0x10000)
  {
    unsigned int v5 = v8;
    unsigned int v6 = v7;
  }
  if (a1 != 64)
  {
    unsigned int v3 = v5;
    uint64_t v4 = v6;
  }
  unsigned int v9 = a2 & 0xFFFFFFFD;
  unsigned int v10 = a2 & 0xFFFFFFF7;
  unsigned int v11 = a2 & 0xFFFFFFEF;
  if (a1 == 16) {
    double v2 = "mailboxes JOIN messages ON mailboxes.ROWID = messages.mailbox %s";
  }
  else {
    unsigned int v11 = a2;
  }
  if (a1 == 8) {
    double v2 = "addresses AS sender JOIN messages ON sender.ROWID = messages.sender %s";
  }
  else {
    unsigned int v10 = v11;
  }
  if (a1 == 2) {
    double v2 = "addresses AS recipient JOIN recipients ON recipient.ROWID = recipients.address JOIN messages ON recipients.mess"
  }
         "age = messages.ROWID %s";
  else {
    unsigned int v9 = v10;
  }
  BOOL v12 = a1 <= 63;
  if (a1 <= 63) {
    int v13 = v9;
  }
  else {
    int v13 = v3;
  }
  if (v12) {
    id v14 = v2;
  }
  else {
    id v14 = v4;
  }
  uint64_t v15 = joinsForTables(v13);
  uint64_t v18 = (char *)0xAAAAAAAAAAAAAAAALL;
  asprintf(&v18, v14, v15);
  id v16 = [NSString stringWithUTF8String:v18];
  free(v18);
  free(v15);
  return v16;
}

char *joinsForTables(int a1)
{
  double v2 = "";
  if (_os_feature_enabled_impl())
  {
    int v3 = EMIsGreymatterSupportedWithOverride();
    uint64_t v4 = " LEFT OUTER JOIN generated_summaries ON message_global_data.generated_summary = generated_summaries.ROWID";
    if ((a1 & 0x1000) == 0) {
      uint64_t v4 = "";
    }
    if (v3) {
      double v2 = v4;
    }
  }
  int v5 = _os_feature_enabled_impl();
  unsigned int v6 = "";
  unsigned int v7 = "";
  unsigned int v8 = "";
  if (v5)
  {
    unsigned int v7 = " LEFT OUTER JOIN business_addresses ON messages.sender = business_addresses.address";
    if ((a1 & 0x80000) == 0) {
      unsigned int v7 = "";
    }
    unsigned int v8 = " LEFT OUTER JOIN businesses ON business_addresses.business = businesses.ROWID";
    if ((a1 & 0x100000) == 0) {
      unsigned int v8 = "";
    }
  }
  unsigned int v9 = " JOIN searchable_rebuild ON messages.rowid = searchable_rebuild.message_id";
  if ((a1 & 0x40000) == 0) {
    unsigned int v9 = "";
  }
  unsigned int v10 = " LEFT OUTER JOIN brand_indicators ON messages.brand_indicator = brand_indicators.ROWID";
  if ((a1 & 0x20000) == 0) {
    unsigned int v10 = "";
  }
  unsigned int v11 = " LEFT OUTER JOIN sender_addresses ON messages.sender = sender_addresses.address LEFT OUTER JOIN senders ON sende"
        "r_addresses.sender = senders.ROWID";
  if ((a1 & 0x10000) == 0) {
    unsigned int v11 = "";
  }
  BOOL v12 = " LEFT OUTER JOIN message_global_data ON messages.global_message_id = message_global_data.ROWID";
  if ((a1 & 0x8000) == 0) {
    BOOL v12 = "";
  }
  int v13 = " JOIN conversations AS conversations ON messages.conversation_id = conversations.conversation_id";
  if ((a1 & 0x400) == 0) {
    int v13 = "";
  }
  id v14 = " LEFT OUTER JOIN summaries ON messages.summary = summaries.ROWID";
  if ((a1 & 0x1000) == 0) {
    id v14 = "";
  }
  uint64_t v15 = " JOIN mailboxes AS mailbox ON messages.mailbox = mailbox.ROWID";
  if ((a1 & 0x10) == 0) {
    uint64_t v15 = "";
  }
  if ((a1 & 8) != 0) {
    id v16 = " LEFT OUTER JOIN addresses AS sender ON messages.sender = sender.ROWID";
  }
  else {
    id v16 = "";
  }
  if ((a1 & 4) != 0) {
    unsigned int v6 = " LEFT OUTER JOIN subjects ON messages.subject = subjects.ROWID";
  }
  uint64_t v18 = (char *)0xAAAAAAAAAAAAAAAALL;
  asprintf(&v18, "%s%s%s%s%s%s%s%s%s%s%s%s", v6, v16, v15, v14, v13, v12, v2, v11, v10, v9, v7, v8);
  return v18;
}

void sub_1A7F2509C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2555C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t _criterionCannotUseSearchableIndex(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 criterionType];
  int v3 = 0;
  if (v2 <= 0x29)
  {
    if (((1 << v2) & 0x30A00000204) != 0)
    {
      int v3 = 1;
    }
    else if (v2 == 1)
    {
      int v5 = [v1 _attributesForHeaderCriterion];
      int v3 = [v5 count] != 0;
    }
    else if (v2 == 11)
    {
      int v3 = [v1 preferFullTextSearch];
    }
  }

  return v3 ^ 1u;
}

void sub_1A7F25728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F257AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F25888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F25924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F25C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F25E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F25F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F25FB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2644C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F265EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F267EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F268A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F269E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26B4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFFlagsObjectForFlags(uint64_t a1)
{
  id v2 = objc_alloc(MEMORY[0x1E4F608C0]);
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __MFFlagsObjectForFlags_block_invoke;
  v5[3] = &__block_descriptor_40_e33_v16__0___ECMessageFlagsBuilder__8l;
  v5[4] = a1;
  int v3 = (void *)[v2 initWithBuilder:v5];
  return v3;
}

void sub_1A7F26D20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26E74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F26FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F27148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F27234(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F274A0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A7F2755C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F275C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F27674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F27740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F27DCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F28054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t initPLShouldLogRegisteredEvent(uint64_t a1, uint64_t a2)
{
  if (LoadPowerLog_loadPredicate != -1) {
    dispatch_once(&LoadPowerLog_loadPredicate, &__block_literal_global_265);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)LoadPowerLog_frameworkLibrary, "PLShouldLogRegisteredEvent");
  softLinkPLShouldLogRegisteredEvent = v4;
  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initPLLogRegisteredEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (LoadPowerLog_loadPredicate != -1) {
    dispatch_once(&LoadPowerLog_loadPredicate, &__block_literal_global_265);
  }
  unsigned int v8 = (uint64_t (*)())dlsym((void *)LoadPowerLog_frameworkLibrary, "PLLogRegisteredEvent");
  softLinkPLLogRegisteredEvent = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

void sub_1A7F282F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2837C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  unsigned int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)SMTPAccount;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F283F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  unsigned int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFTaskAssertion;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F28744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2897C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F28A74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F28AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F28BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F28D34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F28E38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __cachedMailboxUIDs_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1C998]);
  id v1 = (void *)cachedMailboxUIDs_cache;
  cachedMailboxUIDs_cache = (uint64_t)v0;

  [(id)cachedMailboxUIDs_cache setName:@"MailAccount.cachedMailboxUIDs"];
  id v2 = (void *)cachedMailboxUIDs_cache;
  return [v2 setCountLimit:21];
}

void sub_1A7F28F60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F28FDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F290A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F29144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F291B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2922C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F292A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F29314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F29398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F29444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F29564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t objectdestroy_12Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A7F297C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __powerLogIdentifier_block_invoke()
{
  uint64_t result = PPSCreateTelemetryIdentifier();
  powerLogIdentifier_identifier = result;
  return result;
}

void sub_1A7F29908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFMailDirectory()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v0 = (void *)MFMailDirectory___MailDir;
  if (!MFMailDirectory___MailDir)
  {
    id v1 = [(id)CPSharedResourcesDirectory() stringByAppendingPathComponent:@"Library"];
    uint64_t v2 = [v1 stringByAppendingPathComponent:@"Mail"];
    int v3 = (void *)MFMailDirectory___MailDir;
    MFMailDirectory___MailDir = v2;

    uint64_t v4 = [MEMORY[0x1E4F28CB8] defaultManager];
    if (([v4 fileExistsAtPath:MFMailDirectory___MailDir] & 1) == 0
      && objc_msgSend(v4, "mf_makeCompletePath:mode:", MFMailDirectory___MailDir, 448))
    {
      int v5 = open((const char *)[(id)MFMailDirectory___MailDir fileSystemRepresentation], 0);
      int v6 = v5;
      if (v5 < 0)
      {
        unsigned int v8 = MFLogGeneral();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          uint64_t v11 = MFMailDirectory___MailDir;
          _os_log_impl(&dword_1A7EFF000, v8, OS_LOG_TYPE_DEFAULT, "#Warning Could not open fd for %@", buf, 0xCu);
        }
      }
      else
      {
        if (fcntl(v5, 64, 4))
        {
          unsigned int v7 = MFLogGeneral();
          if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v11 = MFMailDirectory___MailDir;
            _os_log_impl(&dword_1A7EFF000, v7, OS_LOG_TYPE_DEFAULT, "#Warning Could not set protection class on %@", buf, 0xCu);
          }
        }
        close(v6);
      }
    }

    id v0 = (void *)MFMailDirectory___MailDir;
  }
  return v0;
}

void sub_1A7F29AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F29BB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F29EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F2A028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2A2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2A5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2A93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2AA6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2AB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void __receivingEmailAddressesCache_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F60D88]);
  id v1 = (void *)receivingEmailAddressesCache__receivingEmailAddressesCache;
  receivingEmailAddressesCache__receivingEmailAddressesCache = (uint64_t)v0;
}

void __LoadPowerLog_block_invoke()
{
  LoadPowerLog_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/PowerLog.framework/PowerLog", 2);
  if (!LoadPowerLog_frameworkLibrary) {
    NSLog(&cfstr_FailedToSoftLi_1.isa);
  }
}

void sub_1A7F2AC44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 __swift_memcpy32_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 __swift_memcpy32_8_0(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy32_8_1(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy32_8_2(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy32_8_3(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy32_8_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy32_8_5(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy32_8_6(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

__n128 __swift_memcpy32_8_7(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t block_copy_helper_748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_1A7F2AED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);

  _Unwind_Resume(a1);
}

void sub_1A7F2B1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2B344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2B5F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2D550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2DC3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *expressionForOperator(unint64_t a1)
{
  int v1 = a1;
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  if (a1 < 8) {
    return off_1E5D3B430[a1];
  }
  long long v3 = MFLogGeneral();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v1;
    _os_log_impl(&dword_1A7EFF000, v3, OS_LOG_TYPE_INFO, "unsupported operator %d", (uint8_t *)v4, 8u);
  }

  return @"=";
}

void sub_1A7F2DF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2E1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2E24C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __MFRegisterPowerObserver_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)sObservers;
  if (!sObservers)
  {
    id v3 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    uint64_t v4 = (void *)sObservers;
    sObservers = (uint64_t)v3;

    uint64_t v2 = (void *)sObservers;
  }
  uint64_t v5 = *(void *)(a1 + 32);
  return [v2 addObject:v5];
}

void sub_1A7F2E490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2E52C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFPersistenceDatabaseConnection_iOS;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void _DisposeICUSQLiteContext(void *a1)
{
  if (a1)
  {
    usearch_close();
    CPICUReleaseSearchCollator();
    uint64_t v2 = (void *)a1[22];
    if (v2) {
      free(v2);
    }
    id v3 = (void *)a1[24];
    if (v3 && v3 != a1 + 25) {
      free(v3);
    }
    uint64_t v4 = (void *)a1[20];
    if (v4 && v4 != a1 + 4) {
      free(v4);
    }
    free(a1);
  }
}

void sub_1A7F2E6AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2E7C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2ED1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2EEEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2EFBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2F198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2F288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2F36C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F2F3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void MFPersistenceAdaptorPowerLogDidCreateInstance(char a1)
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __MFPersistenceAdaptorPowerLogDidCreateInstance_block_invoke;
  block[3] = &__block_descriptor_33_e5_v8__0l;
  char v2 = a1;
  if (MFPersistenceAdaptorPowerLogDidCreateInstance_onceToken != -1) {
    dispatch_once(&MFPersistenceAdaptorPowerLogDidCreateInstance_onceToken, block);
  }
}

void sub_1A7F2F844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sqlite3_exec_retry(sqlite3 *a1, const char *a2, int (__cdecl *a3)(void *, int, char **, char **), void *a4, char **a5)
{
  uint64_t v5 = a5;
  int v6 = a4;
  unsigned int v7 = a3;
  unsigned int v8 = a2;
  uint64_t v9 = a1;
  while (1)
  {
    uint64_t result = sqlite3_exec(a1, a2, a3, a4, a5);
    if (result != 262 && result != 5) {
      break;
    }
    usleep(0x14u);
    a1 = v9;
    a2 = v8;
    a3 = v7;
    a4 = v6;
    a5 = v5;
  }
  return result;
}

void *initICUSearchContext()
{
  return _CreateICUSQLiteContext(0, 3);
}

void *_CreateICUSQLiteContext(uint64_t a1, char a2)
{
  id v3 = malloc_type_malloc(0x2D0uLL, 0x10B004031052BF7uLL);
  v3[3] = 0;
  *((_WORD *)v3 + 16) = 65;
  v3[20] = v3 + 4;
  v3[21] = 128;
  v3[22] = 0;
  *((_DWORD *)v3 + 46) = 0;
  v3[24] = v3 + 25;
  *((_DWORD *)v3 + 178) = 256;
  CPICUCreateSearchCollator();
  *(_OWORD *)id v3 = v5;
  v3[2] = v6;
  if (a2)
  {
    ucol_setAttribute();
    if ((a2 & 2) != 0) {
      goto LABEL_6;
    }
  }
  else if ((a2 & 2) == 0)
  {
    goto LABEL_6;
  }
  ucol_setAttribute();
LABEL_6:
  if ((a2 & 4) != 0) {
    ucol_setAttribute();
  }
  v3[3] = usearch_openFromCollator();
  return v3;
}

void sub_1A7F2FB08(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F2FBDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromMailboxUidType(uint64_t a1)
{
  if (a1 > 99)
  {
    switch(a1)
    {
      case 'd':
        uint64_t result = @"InboxSpecial";
        break;
      case 'e':
        uint64_t result = @"JunkSpecial";
        break;
      case 'f':
        uint64_t result = @"ArchiveSpecial";
        break;
      case 'g':
        uint64_t result = @"TrashSpecial";
        break;
      case 'h':
        uint64_t result = @"SentMessagesSpecial";
        break;
      case 'i':
        uint64_t result = @"DraftsSpecial";
        break;
      case 'j':
        uint64_t result = @"OutboxSpecial";
        break;
      default:
        uint64_t result = 0;
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
        uint64_t result = @"Generic";
        break;
      case 1:
        uint64_t result = @"Junk";
        break;
      case 2:
        uint64_t result = @"Archive";
        break;
      case 3:
        uint64_t result = @"Trash";
        break;
      case 4:
        uint64_t result = @"Sent";
        break;
      case 5:
        uint64_t result = @"Drafts";
        break;
      case 6:
        uint64_t result = @"Outbox";
        break;
      case 7:
        uint64_t result = @"Inbox";
        break;
      case 8:
        uint64_t result = @"Root";
        break;
      default:
        char v2 = @"Rootless";
        if (a1 != -100) {
          char v2 = 0;
        }
        if (a1 == -500) {
          uint64_t result = @"Invalid";
        }
        else {
          uint64_t result = v2;
        }
        break;
    }
  }
  return result;
}

void sub_1A7F2FE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_14_0()
{
  return swift_release();
}

void sub_1A7F300D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7F303B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t block_destroy_helper_598()
{
  return swift_release();
}

void sub_1A7F30578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t block_destroy_helper_749()
{
  return swift_release();
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t __swift_memcpy5_4_0(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t block_destroy_helper_245()
{
  return swift_release();
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

void *__swift_memcpy176_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

__n128 __swift_memcpy176_8_1(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t a2)
{
  *(void *)__n128 result = *(void *)a2;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a2 + 8);
  return result;
}

uint64_t __swift_memcpy12_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy12_8_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t __swift_memcpy12_8_2(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MailboxTaskLogger(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_1A8A754D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  sub_1A85135AC(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t block_destroy_helper_6116()
{
  return swift_release();
}

uint64_t block_destroy_helper_318()
{
  return swift_release();
}

uint64_t block_copy_helper_6115(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t block_copy_helper_317(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

void __Block_byref_object_dispose__18(uint64_t a1)
{
}

void __Block_byref_object_dispose__19(uint64_t a1)
{
}

void __Block_byref_object_dispose__20(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1A7F30F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3106C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F310E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1A7F310F8()
{
  return sub_1A8A782D8();
}

uint64_t sub_1A7F31134@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A7F31168(*v1);
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A7F31168(void *a1)
{
  id v1 = a1;
  uint64_t v4 = sub_1A8A76558();

  return v4;
}

void sub_1A7F312F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F31380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3150C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F315B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F316A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F31864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F318E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  unsigned int v10 = v9;

  a9.super_class = (Class)MFWebAttachmentSource;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F31B20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F31BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F31C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F31EDC(_Unwind_Exception *a1)
{
  unsigned int v7 = v5;

  _Unwind_Resume(a1);
}

void sub_1A7F32000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F320F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32270(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F322EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3248C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F329D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32B1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32BFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32E84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F32F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F332A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F333A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F336A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7F337BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F338D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33A3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33AB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33E9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33EF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F33F44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3400C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F34248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3436C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F343E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F34444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F344C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F34554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F345B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F34640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F346E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3482C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F34A98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F34CE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F34E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F350E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F351A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3524C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F353A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3563C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3586C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35A24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F35EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F36014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3625C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3631C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F363E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F364B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36650(_Unwind_Exception *a1)
{
  long long v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7F36750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3685C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F369C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36E24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F36F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F37000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F37070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id usernameForConfiguration(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 objectForKey:@"AccountConfigUsernameIncludesDomain"];

  if (v4
    || (uint64_t v5 = [v3 rangeOfString:@"@"], v5 + v6 >= (unint64_t)objc_msgSend(v3, "length"))
    || (objc_msgSend(v3, "substringWithRange:", 0, v5), (id v7 = (id)objc_claimAutoreleasedReturnValue()) == 0))
  {
    id v7 = v3;
  }

  return v7;
}

void sub_1A7F371C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _MFCopyAccountsForAddressAndConfigurations(void *a1, void *a2, void *a3, void *a4)
{
  id v21 = a1;
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v7)
  {
    unsigned int v10 = [v7 objectForKey:@"Protocol"];
    int v11 = [v10 isEqual:@"POP"];

    if (v11) {
      uint64_t v12 = @"POPAccount";
    }
    else {
      uint64_t v12 = @"IMAPAccount";
    }
    NSClassFromString(&v12->isa);
    int v13 = (void *)[(id)objc_opt_class() newAccountWithDictionary:v7];
    [v9 setAccount:v13];

    id v14 = usernameForConfiguration(v7, v21);
    uint64_t v15 = [v9 account];
    [v15 setUsername:v14];
  }
  if (v8)
  {
    id v16 = +[MFAccount newAccountWithDictionary:v8];
    [v9 setDeliveryAccount:v16];

    uint64_t v17 = [v9 deliveryAccount];
    if (v17)
    {
      uint64_t v18 = [v8 objectForKey:@"AuthenticationScheme"];

      if (v18)
      {
        id v19 = usernameForConfiguration(v8, v21);
        uint64_t v20 = [v9 deliveryAccount];
        [v20 setUsername:v19];
      }
    }
  }
}

void sub_1A7F37390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v15 = v13;

  _Unwind_Resume(a1);
}

uint64_t _MFCopyAccountsFromDomainNode(uint64_t a1, void *a2, void *a3, void *a4, int a5)
{
  id v34 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = *(void *)(a1 + 24);
  if (!v9)
  {
    id v9 = [MEMORY[0x1E4F1C978] array];
    if (v11) {
      goto LABEL_3;
    }
LABEL_47:
    int v13 = 0;
    uint64_t v30 = 0;
    uint64_t v14 = 0;
    goto LABEL_48;
  }
  if (!v11) {
    goto LABEL_47;
  }
LABEL_3:
  int v32 = a5;
  uint64_t v33 = v9;
  char v12 = 0;
  int v13 = 0;
  uint64_t v35 = 0;
  uint64_t v14 = 0;
  while (1)
  {
    do
    {
      char v15 = v12;
      id v16 = *(const char **)(v11 + 16);
      if (v16)
      {
        if (!strcmp(*(const char **)(v11 + 16), "name"))
        {
          uint64_t v11 = *(void *)(v11 + 48);
          if (!v11) {
            goto LABEL_44;
          }
          break;
        }
        if (v14 != 1 && !strcmp(v16, "service"))
        {
          if (!v35)
          {
            __int16 v24 = *(void **)(v11 + 24);
            while (v24)
            {
              uint64_t v25 = (const char *)v24[2];
              if (v25 && !strcmp(v25, "protocol"))
              {
                uint64_t v26 = v24[3];
                if (v26)
                {
                  id v27 = *(const char **)(v26 + 80);
                  if (v27)
                  {
                    if (!strcmp(*(const char **)(v26 + 80), "IMAP") || !strcmp(v27, "POP"))
                    {
                      copySingleConfiguration(v11, v33, v10, v32);
                      v35 = uint64_t v14 = 2;
                      goto LABEL_24;
                    }
                  }
                }
                break;
              }
              __int16 v24 = (void *)v24[6];
              if (!v24) {
                break;
              }
            }
          }
          if (!v13)
          {
            uint64_t v20 = *(void **)(v11 + 24);
            while (1)
            {
              if (!v20) {
                goto LABEL_23;
              }
              id v21 = (const char *)v20[2];
              if (v21)
              {
                if (!strcmp(v21, "protocol")) {
                  break;
                }
              }
              uint64_t v20 = (void *)v20[6];
              if (!v20) {
                goto LABEL_23;
              }
            }
            uint64_t v28 = v20[3];
            if (!v28 || (id v29 = *(const char **)(v28 + 80)) == 0 || strcmp(v29, "SMTP"))
            {
LABEL_23:
              int v13 = 0;
              goto LABEL_24;
            }
            copySingleConfiguration(v11, v33, v10, v32);
            int v13 = v14 = 2;
          }
        }
        else
        {
          uint64_t v17 = [v10 localizedNotes];
          if (v17 && (int v18 = strcmp(v16, "note"), v17, !v18))
          {
            id v19 = copyLocalizedNotesFromNode(v11);
            [v10 setLocalizedNotes:v19];
          }
          else if (!strcmp(v16, "unsupported"))
          {
            uint64_t v14 = 1;
          }
          else
          {
            uint64_t v14 = v14;
          }
        }
      }
LABEL_24:
      uint64_t v11 = *(void *)(v11 + 48);
      if (!v11) {
        goto LABEL_44;
      }
      char v12 = 0;
    }
    while ((v15 & 1) == 0);
    int v22 = [v10 account];
    char v12 = 1;
    if (v22)
    {
      long long v23 = [v10 deliveryAccount];

      char v12 = 1;
      if (v23) {
        break;
      }
    }
  }
LABEL_44:
  id v9 = v33;
  uint64_t v30 = v35;
  if (v14 == 2)
  {
    _MFCopyAccountsForAddressAndConfigurations(v34, v35, v13, v10);
    uint64_t v14 = 2;
  }
LABEL_48:

  return v14;
}

void sub_1A7F3770C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  id v16 = v11;

  _Unwind_Resume(a1);
}

uint64_t _MFCurrentCapabilities()
{
  return [MEMORY[0x1E4F1C978] array];
}

id copySingleConfiguration(uint64_t a1, void *a2, void *a3, int a4)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v27 = a2;
  id v6 = a3;
  id v7 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v25 = @"PortNumber";
  while (v8)
  {
    id v9 = *(const char **)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = *(void *)(v8 + 24);
      if (v10 && (uint64_t v11 = *(void *)(v10 + 80)) != 0)
      {
        if (!strcmp(*(const char **)(v8 + 16), "requires"))
        {
          if (a4)
          {
            int v13 = [NSString stringWithUTF8String:v11];
            if ([v27 indexOfObject:v13] == 0x7FFFFFFFFFFFFFFFLL)
            {
              long long v23 = MFLogGeneral();
              if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 136315138;
                uint64_t v29 = [(__CFString *)v13 UTF8String];
                _os_log_impl(&dword_1A7EFF000, v23, OS_LOG_TYPE_INFO, "#ACE-DB ignoring service because capability '%s' is not satisfied", buf, 0xCu);
              }

              id v7 = 0;
              break;
            }
            goto LABEL_35;
          }
        }
        else
        {
          char v12 = [v6 localizedNotes];
          if (v12)
          {

            goto LABEL_17;
          }
          if (!strcmp(v9, "note"))
          {
            id v21 = copyLocalizedNotesFromNode(v8);
            [v6 setLocalizedNotes:v21];
          }
          else
          {
LABEL_17:
            if (!strcmp(v9, "protocol"))
            {
              int v13 = @"Protocol";
              goto LABEL_24;
            }
            int v15 = strcmp(v9, "hostname");
            id v16 = @"Hostname";
            if (!v15
              || (v17 = strcmp(v9, "port"), id v16 = v25, !v17)
              || (v18 = strcmp(v9, "authentication"), id v16 = @"AuthenticationScheme", !v18))
            {
              int v13 = v16;
              if (!v13)
              {
LABEL_30:
                id v14 = 0;
                goto LABEL_34;
              }
LABEL_24:
              if (v13 == @"AuthenticationScheme")
              {
                id v19 = (id)[[NSString alloc] initWithUTF8String:v11];
                uint64_t v20 = [MEMORY[0x1E4F607C8] schemeWithName:v19];

                if (v20) {
                  id v14 = v19;
                }
                else {
                  id v14 = 0;
                }
              }
              else
              {
                id v14 = (id)[[NSString alloc] initWithUTF8String:v11];
              }
              objc_msgSend(v7, "setValue:forKey:", v14, v13, v25);
LABEL_34:

LABEL_35:
              goto LABEL_36;
            }
          }
        }
      }
      else
      {
        if (!strcmp(*(const char **)(v8 + 16), "usernameIncludesDomain"))
        {
          int v13 = 0;
          id v14 = 0;
          [v7 setValue:@"YES" forKey:@"AccountConfigUsernameIncludesDomain"];
          goto LABEL_34;
        }
        if (!strcmp(v9, "ssl"))
        {
          int v13 = 0;
          id v14 = 0;
          [v7 setValue:@"YES" forKey:@"SSLEnabled"];
          goto LABEL_34;
        }
      }
      int v13 = 0;
      goto LABEL_30;
    }
LABEL_36:
    uint64_t v8 = *(void *)(v8 + 48);
    if (!v8) {
      break;
    }
  }

  return v7;
}

void sub_1A7F37B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

id copyLocalizedNotesFromNode(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = 0;
    id v3 = 0;
    id v4 = 0;
    while (1)
    {
      uint64_t v5 = *(void *)(v1 + 24);
      if (!v5) {
        goto LABEL_13;
      }
      id v6 = *(const char **)(v1 + 16);
      uint64_t v7 = *(void *)(v5 + 80);
      if (!v6 || v7 == 0) {
        goto LABEL_13;
      }
      if (v3 || strcmp(*(const char **)(v1 + 16), "lang")) {
        break;
      }
      id v9 = [NSString stringWithUTF8String:v7];
      id v3 = [v9 lowercaseString];

      if (!v3) {
        goto LABEL_19;
      }
LABEL_14:
      if (v2)
      {
        if (!v4) {
          id v4 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
        }
        [v4 setObject:v2 forKey:v3];

        id v3 = 0;
LABEL_18:
        uint64_t v2 = 0;
      }
LABEL_19:
      uint64_t v1 = *(void *)(v1 + 48);
      if (!v1) {
        goto LABEL_24;
      }
    }
    if (!v2)
    {
      if (strcmp(v6, "content")) {
        goto LABEL_18;
      }
      uint64_t v2 = (void *)[[NSString alloc] initWithUTF8String:v7];
    }
LABEL_13:
    if (!v3) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  id v4 = 0;
  id v3 = 0;
  uint64_t v2 = 0;
LABEL_24:
  id v10 = v4;

  return v10;
}

void sub_1A7F37CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _MFCopyAccountsFromDomainData(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = v9;
  Memory = xmlReadMemory((const char *)[v13 bytes], objc_msgSend(v13, "length"), "null", "UTF-8", 1);
  int v15 = (xmlDoc *)Memory;
  if (Memory)
  {
    xmlNodePtr RootElement = xmlDocGetRootElement(Memory);
    if (RootElement) {
      uint64_t v17 = _MFCopyAccountsFromDomainNode((uint64_t)RootElement, v10, v11, v12, a5);
    }
    else {
      uint64_t v17 = 0;
    }
    xmlFreeDoc(v15);
  }
  else
  {
    uint64_t v17 = 0;
  }

  return v17;
}

void sub_1A7F37E10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *domainChildWithName(uint64_t a1, id a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  id v3 = (const char *)[a2 UTF8String];
  do
  {
    if (!v2) {
      break;
    }
    id v4 = (const char *)v2[2];
    if (v4)
    {
      if (!strcmp(v4, "domain"))
      {
        uint64_t v5 = (void *)v2[3];
        if (v5)
        {
          while (1)
          {
            id v6 = (const char *)v5[2];
            if (v6)
            {
              if (!strcmp(v6, "name")) {
                break;
              }
            }
            uint64_t v5 = (void *)v5[6];
            if (!v5) {
              goto LABEL_5;
            }
          }
          uint64_t v7 = v5[3];
          if (v7)
          {
            uint64_t v8 = *(const char **)(v7 + 80);
            if (v8)
            {
              if (!strcmp(v8, v3)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_5:
    uint64_t v2 = (void *)v2[6];
  }
  while (v2);
  return v2;
}

uint64_t _MFCopyAccountsFromDomainsNode(uint64_t a1, void *a2, void *a3, void *a4, int a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = [v9 emailAddressValue];
  id v13 = [v12 domain];
  id v14 = [v13 lowercaseString];

  int v15 = domainChildWithName(a1, v14);
  if (v15) {
    uint64_t v16 = _MFCopyAccountsFromDomainNode((uint64_t)v15, v9, v10, v11, a5);
  }
  else {
    uint64_t v16 = 0;
  }

  return v16;
}

void sub_1A7F37FBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _MFCopyAccountsFromDomainsData(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = v9;
  Memory = xmlReadMemory((const char *)[v13 bytes], objc_msgSend(v13, "length"), "null", "UTF-8", 1);
  int v15 = (xmlDoc *)Memory;
  if (Memory)
  {
    xmlNodePtr RootElement = xmlDocGetRootElement(Memory);
    if (RootElement) {
      uint64_t v17 = _MFCopyAccountsFromDomainsNode((uint64_t)RootElement, v10, v11, v12, a5);
    }
    else {
      uint64_t v17 = 0;
    }
    xmlFreeDoc(v15);
  }
  else
  {
    uint64_t v17 = 0;
  }

  return v17;
}

void sub_1A7F380E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t copyAccountsForEmailAddress(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v50 = a2;
  id v51 = a3;
  uint64_t v8 = [v7 emailAddressValue];
  id v9 = [v8 domain];
  id v10 = [v9 lowercaseString];

  if (v10)
  {
    if (a4)
    {
      v47 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
      if ([v47 BOOLForKey:@"TestAccountConfiguration"])
      {
        id v11 = [v47 stringForKey:@"EasySetupHost"];
        id v12 = v11;
        if (v11 && ![(__CFString *)v11 isEqualToString:&stru_1EFF11268])
        {
          v49 = v12;
        }
        else
        {

          v49 = @"mdev.apple.com";
        }
        id v13 = [v47 objectForKey:@"EasySetupUseSSL"];

        if (v13) {
          LODWORD(v13) = [v47 BOOLForKey:@"EasySetupUseSSL"];
        }
      }
      else
      {
        LODWORD(v13) = 1;
        v49 = @"iphone-services.apple.com";
      }
      id v14 = objc_alloc_init(MEMORY[0x1E4F29088]);
      int v15 = v14;
      if (v13) {
        uint64_t v16 = @"https";
      }
      else {
        uint64_t v16 = @"http";
      }
      [v14 setScheme:v16];
      [v15 setHost:v49];
      [v15 setPath:@"/iconfig/conf"];
      v48 = [v15 URL];
      uint64_t v17 = MFLogGeneral();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        id v18 = [v48 description];
        *(_DWORD *)buf = 136315138;
        uint64_t v55 = [v18 UTF8String];
        _os_log_impl(&dword_1A7EFF000, v17, OS_LOG_TYPE_INFO, "#ACE-DB using url %s", buf, 0xCu);
      }
      id v19 = [MEMORY[0x1E4F18D50] requestWithURL:v48];
      [v19 setHTTPMethod:@"POST"];
      uint64_t v20 = NSString;
      id v21 = EFSystemVersion();
      int v22 = [v20 stringWithFormat:@"Apple iPhone MailConfig v%@", v21];
      [v19 addValue:v22 forHTTPHeaderField:@"User-agent"];

      long long v23 = NSString;
      __int16 v24 = [v7 emailAddressValue];
      uint64_t v25 = [v24 domain];
      uint64_t v26 = [v23 stringWithFormat:@"domain=%@&version=1", v25];

      id v27 = MFLogGeneral();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        uint64_t v28 = [v26 UTF8String];
        *(_DWORD *)buf = 136315138;
        uint64_t v55 = v28;
        _os_log_impl(&dword_1A7EFF000, v27, OS_LOG_TYPE_INFO, "#ACE-DB payload is %s", buf, 0xCu);
      }

      uint64_t v29 = [v26 dataUsingEncoding:1];
      [v19 setHTTPBody:v29];
      uint64_t v53 = 0;
      uint64_t v30 = (void *)MFCopyResponseDataForURLRequest(v19);
      id v31 = 0;
      if (v30)
      {
        int v32 = [[NSString alloc] initWithData:v30 encoding:4];
        uint64_t v33 = MFLogGeneral();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          uint64_t v34 = [v32 UTF8String];
          *(_DWORD *)buf = 136315138;
          uint64_t v55 = v34;
          _os_log_impl(&dword_1A7EFF000, v33, OS_LOG_TYPE_INFO, "#ACE-DB response is %s", buf, 0xCu);
        }

        a4 = _MFCopyAccountsFromDomainData(v30, v7, v50, v51, 0);
      }
      else
      {
        int v32 = MFLogGeneral();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        {
          uint64_t v35 = objc_msgSend(v31, "ef_publicDescription");
          copyAccountsForEmailAddress_cold_1(v35, buf, v32);
        }
        a4 = 0;
      }
    }
    v36 = [v51 account];
    if (v36) {
      BOOL v37 = 0;
    }
    else {
      BOOL v37 = a4 == 0;
    }
    int v38 = v37;

    if (v38)
    {
      id v39 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
      uint64_t v40 = [v39 pathForResource:@"EmailDomains" ofType:@"xml"];

      if (v40)
      {
        File = xmlReadFile((const char *)[v40 fileSystemRepresentation], "UTF-8", 1);
        uint64_t v42 = (xmlDoc *)File;
        if (File)
        {
          xmlNodePtr RootElement = xmlDocGetRootElement(File);
          if (RootElement) {
            a4 = _MFCopyAccountsFromDomainsNode((uint64_t)RootElement, v7, v50, v51, 1);
          }
          else {
            a4 = 0;
          }
          xmlFreeDoc(v42);
          goto LABEL_46;
        }
        id v44 = MFLogGeneral();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v52 = 0;
          uint64_t v45 = "Account database: failed to parse db file";
          goto LABEL_42;
        }
      }
      else
      {
        id v44 = MFLogGeneral();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)v52 = 0;
          uint64_t v45 = "Account database: couldn't find path to db file";
LABEL_42:
          _os_log_impl(&dword_1A7EFF000, v44, OS_LOG_TYPE_INFO, v45, v52, 2u);
        }
      }

      a4 = 0;
LABEL_46:
    }
  }
  else
  {
    a4 = 0;
  }

  return a4;
}

void sub_1A7F38714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t AccountConfigurationServiceCopyAccountsForEmailAddress(void *a1, void **a2, void **a3, void **a4)
{
  id v7 = a1;
  uint64_t v8 = [MEMORY[0x1E4F1C978] array];
  id v9 = objc_alloc_init(_MFAccountInformation);
  uint64_t v10 = copyAccountsForEmailAddress(v7, v8, v9, 1);
  if (a2)
  {
    uint64_t v11 = [(_MFAccountInformation *)v9 account];
    id v12 = *a2;
    *a2 = (void *)v11;
  }
  if (a3)
  {
    uint64_t v13 = [(_MFAccountInformation *)v9 deliveryAccount];
    id v14 = *a3;
    *a3 = (void *)v13;
  }
  if (a4)
  {
    uint64_t v15 = [(_MFAccountInformation *)v9 localizedNotes];
    uint64_t v16 = *a4;
    *a4 = (void *)v15;
  }
  return v10;
}

void sub_1A7F38978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t AccountConfigurationServiceCopyAccountsForEmailAddressUsingAccountInfo(void *a1, void *a2, void **a3, void **a4, void **a5)
{
  id v9 = a1;
  id v10 = a2;
  uint64_t v11 = objc_alloc_init(_MFAccountInformation);
  id v12 = [v10 objectForKeyedSubscript:@"Incoming"];
  uint64_t v13 = [v10 objectForKeyedSubscript:@"Outgoing"];
  _MFCopyAccountsForAddressAndConfigurations(v9, v12, v13, v11);

  if (a3)
  {
    uint64_t v14 = [(_MFAccountInformation *)v11 account];
    uint64_t v15 = *a3;
    *a3 = (void *)v14;
  }
  if (a4)
  {
    uint64_t v16 = [(_MFAccountInformation *)v11 deliveryAccount];
    uint64_t v17 = *a4;
    *a4 = (void *)v16;
  }
  if (a5)
  {
    uint64_t v18 = [(_MFAccountInformation *)v11 localizedNotes];
    id v19 = *a5;
    *a5 = (void *)v18;
  }
  if (a3 && !*a3) {
    uint64_t v20 = 1;
  }
  else {
    uint64_t v20 = 2;
  }

  return v20;
}

void sub_1A7F38ACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F38BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  id v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFAccountValidator;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F38CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F38D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F38E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F38F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3904C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F39A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  JUMPOUT(0x1A7F39BCCLL);
}

void sub_1A7F39A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  JUMPOUT(0x1A7F39BCCLL);
}

void sub_1A7F39AA0()
{
  _Unwind_Resume(v6);
}

void sub_1A7F39AB8()
{
  JUMPOUT(0x1A7F39BA8);
}

void sub_1A7F39AD4()
{
  JUMPOUT(0x1A7F39BCCLL);
}

void sub_1A7F39AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  JUMPOUT(0x1A7F39BCCLL);
}

void sub_1A7F39B0C()
{
  JUMPOUT(0x1A7F39BA8);
}

void sub_1A7F39B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  JUMPOUT(0x1A7F39BCCLL);
}

void sub_1A7F39B24()
{
}

void sub_1A7F39B2C()
{
}

void sub_1A7F39B34()
{
  JUMPOUT(0x1A7F39B3CLL);
}

void sub_1A7F39B48()
{
}

void sub_1A7F39B68()
{
}

void sub_1A7F39B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  JUMPOUT(0x1A7F39BCCLL);
}

void sub_1A7F39B8C()
{
  _Unwind_Resume(v4);
}

void sub_1A7F39B98()
{
  JUMPOUT(0x1A7F39BA8);
}

id _openConnectionForAccount(void *a1, int a2, uint64_t a3)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v4 = a1;
  uint64_t v5 = v4;
  if (!v4)
  {
    id v6 = 0;
    goto LABEL_46;
  }
  if (a2) {
    [v4 secureConnectionSettings];
  }
  else {
  id obj = [v4 insecureConnectionSettings];
  }
  int v7 = objc_msgSend(v5, "defaultPortNumber", a3);
  int v8 = [v5 defaultSecurePortNumber];
  int v9 = [v5 usesSSL];
  int v10 = [v5 portNumber];
  int v11 = v10;
  if (v9) {
    int v12 = v8;
  }
  else {
    int v12 = v7;
  }
  if (!v10 || v12 == v10) {
    goto LABEL_30;
  }
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id obj = obj;
  uint64_t v13 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
  if (v13)
  {
    id v14 = 0;
    uint64_t v15 = *(void *)v39;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v39 != v15) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void **)(*((void *)&v38 + 1) + 8 * i);
        int v18 = [v17 usesSSL];
        if (v18) {
          int v19 = v8;
        }
        else {
          int v19 = v7;
        }
        if (v11 != v19)
        {
          objc_msgSend(v17, "setPortNumber:", objc_msgSend(v5, "portNumber"));
          if (v18)
          {
            uint64_t v20 = (void *)[v17 copy];
            objc_msgSend(v20, "setTryDirectSSL:", objc_msgSend(v17, "tryDirectSSL") ^ 1);
            if (!v14) {
              id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            }
            [v14 addObject:v20];
          }
        }
      }
      uint64_t v13 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
    }
    while (v13);

    if (!v14) {
      goto LABEL_30;
    }
    uint64_t v21 = [obj arrayByAddingObjectsFromArray:v14];

    id obj = (id)v21;
  }
  else
  {
    id v14 = obj;
  }

LABEL_30:
  int v22 = +[MFActivityMonitor currentMonitor];
  unint64_t v23 = [obj count];
  unint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  while (!v25)
  {
    if (v24 >= v23) {
      goto LABEL_44;
    }
LABEL_38:
    uint64_t v29 = [obj objectAtIndex:v24];
    [v5 applySettingsAsDefault:v29];
    uint64_t v30 = (void *)[v5 _newConnection];

    char v31 = [v30 connectUsingAccount:v5];
    char v32 = v31 ^ 1;
    if (!v36) {
      char v32 = 1;
    }
    if ((v32 & 1) == 0) {
      void *v36 = v29;
    }

    uint64_t v26 = v30;
    uint64_t v33 = [v22 error];

    ++v24;
    uint64_t v25 = v33;
    if (v31) {
      goto LABEL_45;
    }
  }
  BOOL v27 = +[MFConnection shouldTryFallbacksAfterError:v25];
  if (v24 < v23 && v27) {
    goto LABEL_38;
  }
LABEL_44:

  uint64_t v26 = 0;
  uint64_t v33 = v25;
LABEL_45:
  id v6 = v26;

LABEL_46:
  return v6;
}

void sub_1A7F39F80()
{
  JUMPOUT(0x1A7F3A004);
}

void sub_1A7F39F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  JUMPOUT(0x1A7F39FFCLL);
}

void sub_1A7F39F94()
{
}

void sub_1A7F39FA0()
{
  JUMPOUT(0x1A7F3A004);
}

void sub_1A7F39FB0()
{
}

void sub_1A7F39FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  JUMPOUT(0x1A7F39FFCLL);
}

void _closeConnection(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [v1 quit];
  }
  else {
    [v1 disconnect];
  }
}

void sub_1A7F3A098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id _accountTypeString(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [(id)objc_opt_class() accountTypeString];

  return v2;
}

void sub_1A7F3A0F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3A4F4()
{
  JUMPOUT(0x1A7F3A504);
}

void sub_1A7F3A50C()
{
  JUMPOUT(0x1A7F3A528);
}

void sub_1A7F3A524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3A548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3A554()
{
}

void sub_1A7F3A738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3A834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3A8B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3A92C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3AB84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3AC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3AC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3AD28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3AE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3AF5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B16C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B334(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B52C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B8F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3B96C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3BB24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3BC10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3BC7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3BCD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3BE70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3BF08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3BFC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3C194(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7F3C35C(_Unwind_Exception *a1)
{
  id v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A7F3C3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CastleIMAPAccount;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F3C4FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3C588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3C854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3C8E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3C98C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3CEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D0C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D2A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D4C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D878(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3D964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3DA00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3DB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3DBE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3DE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3DF34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3DFCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E0CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E1F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E27C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E2F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E61C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3E8E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3EA08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3EBE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3EF78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3F13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3F1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3F228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3F6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3FA48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3FBD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3FF10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F3FFE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F40060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F40148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F40200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFConnection;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F402C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F406B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F40ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7F410D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F41148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _logEvent(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v20 = a1;
  context = (void *)MEMORY[0x1AD0E3E00]();
  [(id)sLogLock lock];
  int v11 = [MEMORY[0x1E4F1CA58] data];
  int v12 = v11;
  if (a3 && a4)
  {
    if (a5 != 0x7FFFFFFFFFFFFFFFLL && a5 < a4 && a6)
    {
      [v11 appendBytes:a3 length:a5];
      [v12 appendBytes:"[Omitted]" length:9];
      a4 -= a6 + a5;
      if (!a4) {
        goto LABEL_10;
      }
      a3 += a6 + a5;
    }
    [v12 appendBytes:a3 length:a4];
  }
  else
  {
    [v11 appendBytes:a3 length:a4];
  }
LABEL_10:
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v13 = (id)sLogClasses;
  uint64_t v14 = [v13 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v14)
  {
    uint64_t v15 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        if (*(void *)v22 != v15) {
          objc_enumerationMutation(v13);
        }
        uint64_t v17 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        if (class_getClassMethod((Class)v17, sel_logConnection_type_data_))
        {
          [v17 logConnection:v20 type:a2 data:v12];
        }
        else
        {
          id v18 = v12;
          objc_msgSend(v17, "logBytes:length:", objc_msgSend(v18, "bytes"), objc_msgSend(v18, "length"));
        }
        [v17 flushLog];
      }
      uint64_t v14 = [v13 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v14);
  }

  [(id)sLogLock unlock];
}

void sub_1A7F41394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F41494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F41584(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7F41734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4183C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F41A68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F41CB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F42308(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  if (a2 == 1)
  {
    id v27 = objc_begin_catch(a1);
    uint64_t v28 = +[MFActivityMonitor currentMonitor];
    uint64_t v29 = +[MFError errorWithException:v27];
    [v28 setError:v29];

    objc_end_catch();
    JUMPOUT(0x1A7F4228CLL);
  }

  _Unwind_Resume(a1);
}

void sub_1A7F42514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F426A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _fillBuffer(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)*((void *)v1 + 1);
  if (v2)
  {
    [v2 encryptionBufferSize];
    unsigned int v21 = -1431655766;
    if (_readBytesFromSocket(v1, (uint64_t)&v21, 4, 1) != 4)
    {
LABEL_20:
      uint64_t v11 = 0;
      *((void *)v1 + 7) = 0;
      goto LABEL_39;
    }
    __int16 v3 = v21;
    size_t v4 = bswap32(v21) >> 16;
    if (*((void *)v1 + 8) != v4)
    {
      uint64_t v5 = (void *)*((void *)v1 + 5);
      if (v5) {
        id v6 = malloc_type_realloc(v5, v4, 0x564B49F0uLL);
      }
      else {
        id v6 = malloc_type_malloc(v4, 0x566E5936uLL);
      }
      *((void *)v1 + 5) = v6;
      *((void *)v1 + 8) = v4;
    }
    if (v3 && _readBytesFromSocket(v1, *((void *)v1 + 5), v4, 1) >= 1)
    {
      int v10 = [*((id *)v1 + 1) createDecryptedDataForBytes:*((void *)v1 + 5) length:v4];
      if (!v10) {
        goto LABEL_20;
      }
    }
    else
    {
      int v10 = 0;
    }
    size_t v12 = [v10 length];
    id v13 = (void *)*((void *)v1 + 5);
    if (v12 != *((void *)v1 + 8))
    {
      id v13 = malloc_type_realloc(*((void **)v1 + 5), v12, 0xDC19D56AuLL);
      *((void *)v1 + 5) = v13;
      *((void *)v1 + 8) = v12;
    }
    [v10 getBytes:v13 length:v12];
    *((void *)v1 + 6) = *((void *)v1 + 8);
    *((void *)v1 + 7) = 0;
  }
  else
  {
    size_t v7 = *((void *)v1 + 9);
    if (!v7)
    {
      size_t v7 = 0x8000;
      *((void *)v1 + 9) = 0x8000;
    }
    int v8 = (void *)*((void *)v1 + 5);
    if (v7 != *((void *)v1 + 8))
    {
      if (v8) {
        int v8 = malloc_type_realloc(*((void **)v1 + 5), v7, 0x460033ECuLL);
      }
      else {
        int v8 = malloc_type_malloc(v7, 0x45DAF235uLL);
      }
      *((void *)v1 + 5) = v8;
      *((void *)v1 + 8) = v7;
    }
    uint64_t BytesFromSocket = _readBytesFromSocket(v1, (uint64_t)v8, v7, 0);
    *((void *)v1 + 6) = BytesFromSocket & ~(BytesFromSocket >> 63);
    if (BytesFromSocket < 1) {
      goto LABEL_20;
    }
  }
  if (*((unsigned char *)v1 + 109))
  {
    id v14 = objc_alloc_init(MEMORY[0x1E4F73540]);
    uint64_t v15 = (z_stream *)*((void *)v1 + 11);
    uint64_t v16 = (Bytef *)*((void *)v1 + 5);
    v15->avail_in = *((void *)v1 + 6);
    v15->next_in = v16;
    do
    {
      v15->avail_out = NSPageSize();
      v15->next_out = (Bytef *)*((void *)v1 + 12);
      if (inflate(v15, 0) == -2) {
        __assert_rtn("_fillBuffer", "Connection.m", 919, "Z_STREAM_ERROR != err");
      }
      [v14 appendBytes:*((void *)v1 + 12) length:NSPageSize() - v15->avail_out];
    }
    while (!v15->avail_out);
    size_t v17 = [v14 length];
    if (v17)
    {
      *((void *)v1 + 8) = v17;
      *((void *)v1 + 6) = v17;
      id v18 = malloc_type_realloc(*((void **)v1 + 5), v17, 0x421FF2FAuLL);
      *((void *)v1 + 5) = v18;
      memcpy(v18, (const void *)[v14 bytes], *((void *)v1 + 8));
    }
    else
    {
      *((void *)v1 + 6) = 0;
    }
  }
  *((void *)v1 + 7) = 0;
  if (*((uint64_t *)v1 + 6) < 1)
  {
    uint64_t v11 = 1;
  }
  else
  {
    uint64_t v11 = 1;
    if ([*((id *)v1 + 1) encryptionBufferSize]) {
      uint64_t v19 = 2;
    }
    else {
      uint64_t v19 = 1;
    }
    _logEvent(v1, v19, *((void *)v1 + 5), *((void *)v1 + 6), 0x7FFFFFFFFFFFFFFFuLL, 0);
  }
LABEL_39:

  return v11;
}

void sub_1A7F429B8(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    id v4 = objc_begin_catch(exc_buf);
    v2[6] = 0;
    uint64_t v5 = +[MFActivityMonitor currentMonitor];
    id v6 = +[MFError errorWithException:v4];
    [v5 setError:v6];

    [v4 raise];
    objc_end_catch();
    JUMPOUT(0x1A7F42810);
  }

  _Unwind_Resume(exc_buf);
}

void sub_1A7F42A68()
{
  objc_end_catch();
  JUMPOUT(0x1A7F429C4);
}

void sub_1A7F42B38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F42C20(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F42D3C(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F43164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F431F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F436F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Block_object_dispose(&a21, 8);

  _Unwind_Resume(a1);
}

void sub_1A7F43984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7F43B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F43CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F43DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFConnectionSettings;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F43F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _setupSSLDomainError(void *a1, void *a2)
{
  id v15 = a1;
  id v3 = a2;
  uint64_t v4 = [v15 code] + 9814;
  uint64_t v5 = @"The certificate for the server is invalid.";
  id v6 = @"SSL_CERT_CHAIN_INVALID_FORMAT";
  switch(v4)
  {
    case 0:
      uint64_t v5 = @"The certificate for this server has expired.";
      id v6 = @"SSL_CERT_EXPIRED_FORMAT";
      goto LABEL_10;
    case 1:
      uint64_t v5 = @"There is no root certificate for this server.";
      id v6 = @"SSL_NO_ROOT_CERT_FORMAT";
      goto LABEL_10;
    case 2:
      uint64_t v5 = @"The root certificate for this server could not be verified.";
      id v6 = @"SSL_UNKNOWN_ROOT_CERT_FORMAT";
      goto LABEL_10;
    case 3:
    case 4:
    case 5:
      goto LABEL_5;
    case 6:
      uint64_t v5 = @"The format of the certificate for the server is bad.";
      id v6 = @"SSL_BAD_CERT_FORMAT";
      goto LABEL_10;
    case 7:
LABEL_10:
      uint64_t v11 = MFLookupLocalizedString(v6, v5, @"Delayed");
      break;
    default:
      if (@"SSL_CERT_CHAIN_INVALID_FORMAT" == (__CFString *)-9843)
      {
        size_t v7 = NSString;
        int v8 = MFLookupLocalizedString(@"SSL_HOST_MISMATCH_MESSAGE", @"The certificate hostname does not match “%@”.", @"Delayed");
        uint64_t v9 = objc_msgSend(v7, "stringWithFormat:", v8, v3);
      }
      else
      {
LABEL_5:
        int v10 = NSString;
        int v8 = MFLookupLocalizedString(@"SSL_GENERIC_READ_ERROR", @"An SSL error occurred while trying to read data from the server “%@”. Verify that this server supports SSL and that your account settings are correct.", @"Delayed");
        uint64_t v9 = objc_msgSend(v10, "stringWithFormat:", v8, v3);
      }
      uint64_t v11 = (void *)v9;

      break;
  }
  [v15 setLocalizedDescription:v11];
  size_t v12 = NSString;
  id v13 = MFLookupLocalizedString(@"SSL_ALERT_TITLE_FORMAT", @"Unable to verify SSL server %@", @"Delayed");
  id v14 = objc_msgSend(v12, "stringWithFormat:", v13, v3);
  [v15 setShortDescription:v14];
}

void sub_1A7F4440C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  size_t v12 = v11;

  _Unwind_Resume(a1);
}

uint64_t _readBytesFromSocket(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  size_t v7 = a1;
  int v8 = +[MFActivityMonitor currentMonitor];
  id v9 = v7[3];
  if (v9)
  {
    [v8 addCancelable:v9];
    uint64_t v10 = 0;
    if (a3)
    {
      while (1)
      {
        uint64_t v11 = [v9 readBytesIntoBuffer:a2 maxLength:a3];
        if (v11 < 0) {
          break;
        }
        *((CFAbsoluteTime *)v7 + 4) = CFAbsoluteTimeGetCurrent();
        if (!v11) {
          break;
        }
        [v8 recordBytesRead:v11];
        v10 += v11;
        if (a4)
        {
          a2 += v11;
          a3 -= v11;
          if (a3) {
            continue;
          }
        }
        goto LABEL_10;
      }
      uint64_t v10 = -1;
    }
LABEL_10:
    [v8 removeCancelable:v9];
    if (v10 < 0)
    {
      id v32 = v8;
      id v12 = v9;
      id v13 = [v12 error];
      if (v13)
      {
        id v14 = [v12 error];
        id v15 = [v14 domain];
        uint64_t v16 = [v12 error];
        size_t v17 = +[MFError errorWithDomain:code:localizedDescription:](MFError, "errorWithDomain:code:localizedDescription:", v15, [v16 code], 0);
      }
      else
      {
        size_t v17 = 0;
      }

      id v18 = [v12 remoteHostname];
      if (v17)
      {
        uint64_t v19 = [v17 domain];
        int v20 = [(id)*MEMORY[0x1E4F28798] isEqualToString:v19];

        if (v20)
        {
          if ([v17 code] == 60)
          {
            unsigned int v21 = NSString;
            long long v22 = MFLookupLocalizedString(@"CONNECTION_TIMED_OUT", @"The connection to the server “%@” on port %d timed out.", @"Delayed");
            long long v23 = objc_msgSend(v21, "stringWithFormat:", v22, v18, objc_msgSend(v12, "remotePortNumber"));
LABEL_24:

            goto LABEL_26;
          }
          goto LABEL_25;
        }
        uint64_t v25 = [v17 domain];
        int v26 = [(id)*MEMORY[0x1E4F288C8] isEqualToString:v25];

        if (!v26)
        {
LABEL_25:
          long long v23 = 0;
          goto LABEL_26;
        }
        _setupSSLDomainError(v17, v18);
        long long v23 = [v17 localizedDescription];
        if (!v23 || [&stru_1EFF11268 isEqualToString:v23])
        {
          id v27 = NSString;
          long long v22 = MFLookupLocalizedString(@"SSL_GENERIC_READ_ERROR", @"An SSL error occurred while trying to read data from the server “%@”. Verify that this server supports SSL and that your account settings are correct.", @"Delayed");
          uint64_t v28 = objc_msgSend(v27, "stringWithFormat:", v22, v18);

          long long v23 = (void *)v28;
          goto LABEL_24;
        }
      }
      else
      {
        +[MFError errorWithDomain:@"MFMessageErrorDomain" code:1045 localizedDescription:0];
        long long v23 = 0;
        size_t v17 = v24 = 0;
        if (!v17)
        {
LABEL_31:
          [v32 setError:v24];

          [v12 close];
          goto LABEL_32;
        }
      }
LABEL_26:
      if (objc_msgSend(v17, "mf_isUserCancelledError"))
      {
        long long v24 = v17;
      }
      else
      {
        if (!v23)
        {
          uint64_t v29 = NSString;
          uint64_t v30 = MFLookupLocalizedString(@"CONNECTION_FAILED", @"The mail server “%@” is not responding. Verify that you have entered the correct account info in Mail settings.", @"Delayed");
          long long v23 = objc_msgSend(v29, "stringWithFormat:", v30, v18);
        }
        [v17 setLocalizedDescription:v23];
        long long v24 = v17;
      }
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
LABEL_32:

  return v10;
}

void sub_1A7F44864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F44BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F44CE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F455CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _isDateCriterion(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [v1 criterionType];
  BOOL v4 = v2 == 12 || (v2 & 0xFFFFFFFFFFFFFFFELL) == 10;
  if (v2 == 25)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    uint64_t v5 = objc_msgSend(v1, "criteria", 0);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v11;
      while (2)
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v5);
          }
          if ((_isDateCriterion(*(void *)(*((void *)&v10 + 1) + 8 * i)) & 1) == 0)
          {
            BOOL v4 = 0;
            goto LABEL_18;
          }
        }
        uint64_t v6 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
    BOOL v4 = 1;
LABEL_18:
  }
  return v4;
}

void sub_1A7F45790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _isUnreadCriterion(void *a1)
{
  id v1 = [a1 name];
  uint64_t v2 = [v1 isEqualToString:@"UnreadCriterion"];

  return v2;
}

void sub_1A7F45888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45B5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F45E64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F46000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F46078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F464D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A7F467B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t MFWalkUpDAErrorChain(id *a1, void *a2)
{
  if (*a2 == -1)
  {
    if (!a1) {
      MFWalkUpDAErrorChain_cold_1();
    }
    uint64_t v4 = *MEMORY[0x1E4F28A50];
    uint64_t v5 = *MEMORY[0x1E4F5E928];
    while (1)
    {
      uint64_t v6 = [*a1 userInfo];
      uint64_t v7 = [v6 objectForKey:v4];

      int v8 = [*a1 userInfo];
      id v9 = [v8 objectForKey:v5];

      if (!v7 || !v9) {
        break;
      }
      id v10 = v7;
      *a1 = v10;
      *a2 = (int)[v9 intValue];

      if (*a2 != -1) {
        return 0;
      }
    }
  }
  return 0;
}

void sub_1A7F469A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t MFDAShouldRetryOperationWithStatusCode(uint64_t a1)
{
  return ((unint64_t)(a1 + 1) < 9) & (0x103u >> (a1 + 1));
}

void sub_1A7F46AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F46BC4(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7F46D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F46E78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F46F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F472E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F47464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4750C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F475D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F477EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F478BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F47B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F48498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F487C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F488C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F489BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F48A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F48BB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F48C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F48E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F49044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F49230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F49330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4947C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F49504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F495F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4976C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F49C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F49D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F49E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t mailboxHasFolderID(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 folderID];
  uint64_t v5 = [v4 isEqual:v3];

  return v5;
}

void sub_1A7F49EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F49F80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4A07C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4A238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4A8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F4AAB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4AB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4ABEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4AE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4B020(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7F4B0A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4B18C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4B464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4B684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4B6FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4B858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  long long v11 = v9;

  a9.super_class = (Class)DAMailAccount;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F4B984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4BAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4BBB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4BE10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C4B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C5D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4C994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CA70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CB14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CC3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CDF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CEB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CF24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4CF90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4D000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4D2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Unwind_Resume(a1);
}

void sub_1A7F4D748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4D9DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4DCAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4DEA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4DFC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E2F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E37C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E5D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E75C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E8B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4E97C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4EA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4EB54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4EC64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4ED34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4EDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4EF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A7F4F0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F258(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F2B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F31C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F8C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4F9D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4FB08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4FCB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4FD80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4FE10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4FECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4FF74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F4FFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5009C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5016C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F50218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5037C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F50440(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5057C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

uint64_t _appendQuotedString(void *a1, uint64_t a2, void *a3)
{
  if ([a1 length]) {
    [a1 appendBytes:"," length:1];
  }
  objc_msgSend(a1, "mf_appendCString:", a2);
  char v14 = 61;
  [a1 appendBytes:&v14 length:1];
  char v15 = 34;
  [a1 appendBytes:&v15 length:1];
  unint64_t v6 = [a3 bytes];
  uint64_t v7 = [a3 length];
  if (v7 >= 1)
  {
    unint64_t v8 = v6 + v7;
    id v9 = (char *)v6;
    while (1)
    {
      int v10 = *v9;
      if (v10 == 34 || v10 == 92) {
        break;
      }
      if ((unint64_t)++v9 >= v8)
      {
        int v11 = 0;
LABEL_10:
        if ((unint64_t)v9 > v6) {
          [a1 appendBytes:v6 length:&v9[-v6]];
        }
        if (v11)
        {
          char v16 = 92;
          [a1 appendBytes:&v16 length:1];
          char v12 = *v9++;
          char v17 = v12;
          [a1 appendBytes:&v17 length:1];
        }
        unint64_t v6 = (unint64_t)v9;
        if ((unint64_t)v9 >= v8) {
          goto LABEL_15;
        }
      }
    }
    int v11 = 1;
    goto LABEL_10;
  }
LABEL_15:
  char v18 = 34;
  return [a1 appendBytes:&v18 length:1];
}

uint64_t _appendValue(void *a1, uint64_t a2, uint64_t a3)
{
  if ([a1 length]) {
    [a1 appendBytes:"," length:1];
  }
  objc_msgSend(a1, "mf_appendCString:", a2);
  char v7 = 61;
  [a1 appendBytes:&v7 length:1];
  return [a1 appendData:a3];
}

CFStringRef copyToken(const UInt8 **a1)
{
  id v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1 >= v2) {
    UInt8 v3 = 0;
  }
  else {
LABEL_2:
  }
    UInt8 v3 = *v1;
  int64_t v4 = v2 - v1;
  do
  {
    while (1)
    {
      do
      {
        UInt8 v5 = v3;
        UInt8 v3 = 0;
      }
      while (v5 > 0x20u);
      if (((1 << v5) & 0x100002600) == 0) {
        break;
      }
      UInt8 v3 = 0;
      *a1 = ++v1;
      --v4;
      if (v1 < v2) {
        goto LABEL_2;
      }
    }
  }
  while (v5);
  unint64_t v6 = v1;
  if (v1 < v2)
  {
    unint64_t v6 = v1;
    while (1)
    {
      int v7 = *v6;
      if ((v7 - 33) > 0x5D) {
        break;
      }
      BOOL v8 = (v7 - 34) > 0x3B || ((1 << (v7 - 34)) & 0xE0000007F0024C1) == 0;
      if (!v8 || v7 == 123 || v7 == 125) {
        break;
      }
      *a1 = ++v6;
      if (!--v4)
      {
        unint64_t v6 = v2;
        break;
      }
    }
  }
  if (v1 >= v6) {
    return 0;
  }
  else {
    return CFStringCreateWithBytesNoCopy(0, v1, v6 - v1, 0x600u, 0, (CFAllocatorRef)*MEMORY[0x1E4F1CFA0]);
  }
}

CFDataRef quoted_string(const UInt8 **a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (unint64_t)a1[1];
  if ((unint64_t)*a1 < v3)
  {
LABEL_2:
    UInt8 v4 = *v2;
    goto LABEL_4;
  }
  UInt8 v4 = 0;
  do
  {
    while (1)
    {
      do
      {
LABEL_4:
        UInt8 v5 = v4;
        UInt8 v4 = 0;
      }
      while (v5 > 0x20u);
      if (((1 << v5) & 0x100002600) == 0) {
        break;
      }
      UInt8 v4 = 0;
      *a1 = ++v2;
      if ((unint64_t)v2 < v3) {
        goto LABEL_2;
      }
    }
  }
  while (v5);
  if ((unint64_t)v2 >= v3 || *v2 != 34) {
    return 0;
  }
  unint64_t v6 = v2 + 1;
  *a1 = v6;
  int v7 = (const __CFAllocator **)MEMORY[0x1E4F1CFA0];
  if ((unint64_t)v6 >= v3)
  {
    int v10 = v6;
    goto LABEL_31;
  }
  CFDataRef v8 = 0;
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CFA0];
  int v10 = v6;
  while (1)
  {
    int v11 = *v6;
    if (v11 == 92)
    {
      if (!v8)
      {
        CFDataRef v8 = (CFDataRef)[objc_allocWithZone(MEMORY[0x1E4F1CA58]) init];
        unint64_t v6 = *a1;
      }
      unint64_t v12 = (unint64_t)a1[1];
      if (v10 < v6)
      {
        [(__CFData *)v8 appendBytes:v10 length:v12 - (void)v10];
        unint64_t v6 = *a1;
        unint64_t v12 = (unint64_t)a1[1];
      }
      if ((unint64_t)(v6 + 1) < v12)
      {
        *a1 = v6 + 1;
        -[__CFData appendBytes:length:](v8, "appendBytes:length:");
        unint64_t v6 = *a1;
      }
      int v10 = v6;
      goto LABEL_24;
    }
    if (v11 == 34) {
      break;
    }
LABEL_24:
    *a1 = ++v6;
    if (v6 >= a1[1])
    {
      if (!v8) {
        goto LABEL_31;
      }
      if (v10 < v6) {
        goto LABEL_36;
      }
      return v8;
    }
  }
  if (v8)
  {
    [(__CFData *)v8 appendBytes:v10 length:v6 - v10];
    int v10 = *a1;
    unint64_t v6 = *a1 + 1;
    *a1 = v6;
LABEL_36:
    [(__CFData *)v8 appendBytes:v10 length:v6 - v10];
    return v8;
  }
  CFDataRef v8 = CFDataCreateWithBytesNoCopy(0, v10, v6 - v10, v9);
  int v10 = *a1;
  unint64_t v6 = *a1 + 1;
  *a1 = v6;
  if (v8) {
    return v8;
  }
LABEL_31:
  CFAllocatorRef v14 = *v7;
  return CFDataCreateWithBytesNoCopy(0, v10, v6 - v10, v14);
}

void *copyQuotedTokenList(const UInt8 **a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (*a1 >= a1[1] || **a1 != 34) {
    return 0;
  }
  uint64_t v2 = (void *)[objc_allocWithZone(MEMORY[0x1E4F1CA48]) init];
  unint64_t v3 = (unsigned __int8 *)a1[1];
  unint64_t v4 = (unint64_t)(*a1 + 1);
  *a1 = (const UInt8 *)v4;
  if (v4 < (unint64_t)v3)
  {
    while (1)
    {
      CFStringRef v5 = copyToken(a1);
      if (!v5) {
        break;
      }
      unint64_t v6 = (__CFString *)v5;
      [v2 addObject:v5];

      int v7 = 0;
      CFDataRef v8 = *a1;
LABEL_15:
      if (v8 >= a1[1] || v7 != 0) {
        return v2;
      }
    }
    if (*a1 >= a1[1])
    {
      int v9 = 0;
    }
    else
    {
      int v9 = **a1;
      if (v9 == 44)
      {
LABEL_13:
        int v7 = 0;
        goto LABEL_14;
      }
      if (v9 == 34)
      {
        int v7 = 1;
LABEL_14:
        CFDataRef v8 = *a1 + 1;
        *a1 = v8;
        goto LABEL_15;
      }
    }
    int v10 = MFLogGeneral();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 67109120;
      int v14 = v9;
      _os_log_impl(&dword_1A7EFF000, v10, OS_LOG_TYPE_INFO, "*** Parse failure(unexpected character '%c'). Ignoring", buf, 8u);
    }
    goto LABEL_13;
  }
  return v2;
}

void *_createResponseData(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  char data = 58;
  *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&c.data[13] = v6;
  *(_OWORD *)&c.data[6] = v6;
  *(_OWORD *)&c.data[10] = v6;
  *(_OWORD *)&c.Nl = v6;
  *(_OWORD *)&c.data[2] = v6;
  *(_OWORD *)&c.A = v6;
  int v7 = (void *)[objc_alloc(MEMORY[0x1E4F1CA58]) initWithCapacity:32];
  CFDataRef v8 = (void *)[objc_alloc(MEMORY[0x1E4F1CA58]) initWithCapacity:32];
  memset(v28, 170, sizeof(v28));
  CC_MD5_Init(&c);
  if (a3) {
    CC_MD5_Update(&c, "AUTHENTICATE", 0xCu);
  }
  CC_MD5_Update(&c, &data, 1u);
  int v9 = *(void **)(a2 + 40);
  if (v9) {
    CC_MD5_Update(&c, (const void *)[*(id *)(a2 + 40) bytes], objc_msgSend(v9, "length"));
  }
  memset(md, 170, sizeof(md));
  CC_MD5_Final(md, &c);
  uint64_t v10 = 0;
  do
  {
    memset(__str, 170, sizeof(__str));
    uint64_t v11 = v10 + 1;
    snprintf(__str, 3uLL, "%02x", md[v10]);
    [v8 appendBytes:__str length:2];
    uint64_t v10 = v11;
  }
  while (v11 != 16);
  CC_MD5_Init(&c);
  unint64_t v12 = *(void **)(a2 + 24);
  if (v12) {
    CC_MD5_Update(&c, (const void *)[*(id *)(a2 + 24) bytes], objc_msgSend(v12, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  long long v13 = *(void **)(a2 + 48);
  if (v13) {
    CC_MD5_Update(&c, (const void *)[*(id *)(a2 + 48) bytes], objc_msgSend(v13, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  int v14 = *(void **)(a2 + 32);
  if (v14) {
    CC_MD5_Update(&c, (const void *)[*(id *)(a2 + 32) bytes], objc_msgSend(v14, "length"));
  }
  CC_MD5_Final(v28, &c);
  CC_MD5_Init(&c);
  CC_MD5_Update(&c, v28, 0x10u);
  CC_MD5_Update(&c, &data, 1u);
  uint64_t v15 = *(void **)(a1 + 8);
  if (v15) {
    CC_MD5_Update(&c, (const void *)[*(id *)(a1 + 8) bytes], objc_msgSend(v15, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  if (*(void *)a2) {
    CC_MD5_Update(&c, (const void *)[*(id *)a2 bytes], objc_msgSend(*(id *)a2, "length"));
  }
  memset(md, 170, sizeof(md));
  CC_MD5_Final(md, &c);
  uint64_t v16 = 0;
  do
  {
    memset(__str, 170, sizeof(__str));
    uint64_t v17 = v16 + 1;
    snprintf(__str, 3uLL, "%02x", md[v16]);
    [v7 appendBytes:__str length:2];
    uint64_t v16 = v17;
  }
  while (v17 != 16);
  CC_MD5_Init(&c);
  if (v7) {
    CC_MD5_Update(&c, (const void *)[v7 bytes], objc_msgSend(v7, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  char v18 = *(void **)(a1 + 8);
  if (v18) {
    CC_MD5_Update(&c, (const void *)[v18 bytes], objc_msgSend(v18, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  uint64_t v19 = *(void **)(a2 + 8);
  if (v19) {
    CC_MD5_Update(&c, (const void *)[*(id *)(a2 + 8) bytes], objc_msgSend(v19, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  if (*(void *)a2) {
    CC_MD5_Update(&c, (const void *)[*(id *)a2 bytes], objc_msgSend(*(id *)a2, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  int v20 = *(void **)(a2 + 16);
  if (v20) {
    CC_MD5_Update(&c, (const void *)[v20 bytes], objc_msgSend(v20, "length"));
  }
  CC_MD5_Update(&c, &data, 1u);
  if (v8) {
    CC_MD5_Update(&c, (const void *)[v8 bytes], objc_msgSend(v8, "length"));
  }
  unsigned int v21 = (void *)[objc_allocWithZone(MEMORY[0x1E4F1CA58]) initWithCapacity:32];
  memset(md, 170, sizeof(md));
  CC_MD5_Final(md, &c);
  uint64_t v22 = 0;
  do
  {
    memset(__str, 170, sizeof(__str));
    uint64_t v23 = v22 + 1;
    snprintf(__str, 3uLL, "%02x", md[v22]);
    [v21 appendBytes:__str length:2];
    uint64_t v22 = v23;
  }
  while (v23 != 16);

  return v21;
}

void sub_1A7F526E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F52964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F52B58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F52E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F52FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F53150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5330C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t _GetTextBreakLocale()
{
  uint64_t v0 = (void *)_GetTextBreakLocale___TextBreakLocale;
  if (!_GetTextBreakLocale___TextBreakLocale)
  {
    id v1 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
    uint64_t v2 = [v1 objectForKey:@"AppleTextBreakLocale"];
    unint64_t v3 = [v2 objectAtIndex:0];

    if (v3)
    {
      id v4 = v3;
      CFStringRef v5 = (void *)_GetTextBreakLocale___TextBreakLocale;
      _GetTextBreakLocale___TextBreakLocale = (uint64_t)v4;
    }
    else
    {
      CFStringRef v5 = [MEMORY[0x1E4F1CA20] currentLocale];
      uint64_t v6 = [v5 localeIdentifier];
      int v7 = (void *)_GetTextBreakLocale___TextBreakLocale;
      _GetTextBreakLocale___TextBreakLocale = v6;
    }
    uint64_t v0 = (void *)_GetTextBreakLocale___TextBreakLocale;
  }
  return [v0 UTF8String];
}

void sub_1A7F53520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F53B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _appendParagraphToOutput(void *a1, void *a2, uint64_t a3, void *a4, int a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a4;
  unint64_t v12 = (__CFString *)v9;
  if (v10)
  {
    if (a3 > 0) {
      int v13 = a5;
    }
    else {
      int v13 = 0;
    }
    if (v13 == 1)
    {
      uint64_t v14 = a3;
      do
      {
        [(__CFString *)v12 appendString:@"<BLOCKQUOTE type=\"cite\">"];
        --v14;
      }
      while (v14);
    }
    if (a5)
    {
      [(__CFString *)v12 appendString:@"<SPAN>"];
      uint64_t v15 = [v10 length];
      unint64_t v16 = v15;
      if (v15)
      {
        uint64_t v17 = malloc_type_malloc(2 * v15 + 2, 0x1000040BDFB0063uLL);
        if (v17)
        {
          [v10 getCharacters:v17];
          int v26 = v13;
          uint64_t v18 = 0;
          unsigned int v19 = 1;
          while (1)
          {
            int v20 = (unsigned __int16)v17[v18];
            UniChar chars = v20;
            if (v20 == 9) {
              unsigned int v21 = @" &nbsp; &nbsp;";
            }
            else {
              unsigned int v21 = 0;
            }
            if (v19 == 1 || v20 != 32)
            {
              uint64_t v22 = v21;
            }
            else
            {
              uint64_t v22 = @"&nbsp;";
              if (v17[v19 - 2] != 32)
              {
                if (!v21) {
                  goto LABEL_29;
                }
                goto LABEL_28;
              }
            }
            int v23 = chars;
            if (v20 == 60)
            {
              int v20 = chars;
              uint64_t v22 = @"&lt;";
            }
            if (v20 == 62)
            {
              long long v24 = @"&gt;";
            }
            else
            {
              int v23 = v20;
              long long v24 = v22;
            }
            if (v23 != 38 && !v24)
            {
LABEL_29:
              CFStringAppendCharacters(v12, &chars, 1);
              goto LABEL_30;
            }
LABEL_28:
            -[__CFString appendString:](v12, "appendString:");
LABEL_30:
            uint64_t v18 = v19;
            if (v16 <= v19++)
            {
              free(v17);
              int v13 = v26;
              break;
            }
          }
        }
      }
      if (v11) {
        [(__CFString *)v12 appendString:@"</SPAN><BR>"];
      }
      if (v13)
      {
        do
        {
          [(__CFString *)v12 appendString:@"</BLOCKQUOTE>"];
          --a3;
        }
        while (a3);
      }
    }
    else
    {
      [(__CFString *)v12 appendString:v10];
      if (v11) {
        [(__CFString *)v12 appendString:v11];
      }
    }
  }
}

void sub_1A7F53D98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F53E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F53ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F53F9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F54008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F54AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1A7F54DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F54FA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___weakDDURLifierClass_block_invoke()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  id v0 = [(id)GSSystemRootDirectory() stringByAppendingPathComponent:@"System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore"];
  if (!dlopen((const char *)[v0 fileSystemRepresentation], 1))
  {
    id v1 = MFLogGeneral();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 136315138;
      uint64_t v6 = dlerror();
      uint64_t v2 = "#Warning Failed to load DataDetectorsCore.framework (%s)";
      unint64_t v3 = v1;
      uint32_t v4 = 12;
      goto LABEL_7;
    }
LABEL_8:

    goto LABEL_9;
  }
  _weakDDURLifierClass_sDDURLifierClass = (uint64_t)NSClassFromString(&cfstr_Ddurlifier.isa);
  if (!_weakDDURLifierClass_sDDURLifierClass)
  {
    id v1 = MFLogGeneral();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v5) = 0;
      uint64_t v2 = "#Warning NSClassFromString(@\"DDURLifier\") returned Nil";
      unint64_t v3 = v1;
      uint32_t v4 = 2;
LABEL_7:
      _os_log_impl(&dword_1A7EFF000, v3, OS_LOG_TYPE_DEFAULT, v2, (uint8_t *)&v5, v4);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
LABEL_9:
}

void sub_1A7F55170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5571C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F557BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F558E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55BDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55ED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F55F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5608C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F561C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5621C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F567A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F568CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56A50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56C14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F56FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F570E4()
{
}

void sub_1A7F570F0()
{
}

void sub_1A7F570FC()
{
}

void sub_1A7F57104()
{
}

void sub_1A7F57154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F572CC(_Unwind_Exception *a1)
{
  uint32_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F573A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F57438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5762C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5781C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F57C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F57D80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __RegisterGmailAuthSchemes_block_invoke()
{
  [MEMORY[0x1E4F607C8] registerSchemeClass:objc_opt_class()];
  id v0 = (void *)MEMORY[0x1E4F607C8];
  uint64_t v1 = objc_opt_class();
  return [v0 registerSchemeClass:v1];
}

void sub_1A7F57F30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F58004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5823C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F583FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F58528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F585E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F586B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F58760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F587DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F58834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F588AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F58960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __RegisterHotmailAuthSchemes_block_invoke()
{
  id v0 = (void *)MEMORY[0x1E4F607C8];
  uint64_t v1 = objc_opt_class();
  return [v0 registerSchemeClass:v1];
}

void sub_1A7F58CE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F58DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  id v10 = v9;

  a9.super_class = (Class)IMAPAccount;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void unlockedReleaseNetworkAssertion(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = (void *)v1[36];
  if (v2)
  {
    int v5 = v1;
    v1[36] = 0;

    unint64_t v3 = [MEMORY[0x1E4F28EB8] defaultCenter];
    uint32_t v4 = +[MFNetworkController sharedInstance];
    [v3 removeObserver:v5 name:@"NetworkConfigurationDidChangeNotification" object:v4];

    uint64_t v1 = v5;
  }
}

void sub_1A7F58E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7F58FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F59070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F591B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F59368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F59440(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F59514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F59894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F59A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5A470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5A9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5AB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5AD4C(void *a1)
{
}

void sub_1A7F5AE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5B004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5B0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5B3A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5B5E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5B6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5B9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5BABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5BC14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5BCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5BDDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5BF0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5C384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

id _mailboxDictionaryWithName(void *a1, void *a2, unint64_t *a3)
{
  id v5 = a1;
  id v6 = a2;
  unint64_t v7 = [v5 count];
  if (v7)
  {
    for (unint64_t i = 0; i < v7; ++i)
    {
      id v9 = [v5 objectAtIndex:i];
      id v10 = [v9 objectForKey:@"MailboxName"];
      int v11 = [v10 isEqual:v6];

      if (v11)
      {
        id v12 = v9;
        if (a3) {
          *a3 = i;
        }
      }
      else
      {
        id v12 = 0;
      }

      if (v12) {
        break;
      }
    }
  }
  else
  {
    id v12 = 0;
  }

  return v12;
}

void sub_1A7F5C564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5CB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5CF88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5D0C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5D314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5D3B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5D458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5D520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5D73C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5D7C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5DB34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5DC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5DD30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5DE34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5DF08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5E0D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5E298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5E430(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5EA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5EDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5F0D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5F1B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5F220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5F2E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5F470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5F5EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5F91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  unint64_t v16 = v15;

  _Unwind_Resume(a1);
}

void sub_1A7F5FA88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5FDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7F5FEA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F60080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F60244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F60438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F606B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F608BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F60984(_Unwind_Exception *a1)
{
  uint32_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F60BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F60DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F60E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6102C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6110C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F613FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F61518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F617B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F61E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6209C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6287C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62914(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62BFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62CC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F62EF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t IMAPNextUidFromSet(UniChar *buffer)
{
  unsigned int v2 = *((_DWORD *)buffer + 51);
  if (v2)
  {
    unsigned int v3 = *((_DWORD *)buffer + 50);
    if (v3 > v2)
    {
      uint64_t v4 = v3 - 1;
LABEL_6:
      *((_DWORD *)buffer + 50) = v4;
      return v4;
    }
    if (v3 < v2)
    {
      uint64_t v4 = v3 + 1;
      goto LABEL_6;
    }
    *((_DWORD *)buffer + 51) = 0;
    int64_t v6 = *((void *)buffer + 23);
    uint64_t v5 = *((void *)buffer + 24);
    if (v5 < 1) {
      goto LABEL_24;
    }
    if (v6 < 0) {
      goto LABEL_24;
    }
    int64_t v7 = *((void *)buffer + 20);
    if (v7 <= v6) {
      goto LABEL_24;
    }
    uint64_t v8 = *((void *)buffer + 17);
    if (v8)
    {
      UniChar v9 = *(_WORD *)(v8 + 2 * (*((void *)buffer + 19) + v6));
    }
    else
    {
      uint64_t v10 = *((void *)buffer + 18);
      if (v10)
      {
        UniChar v9 = *(char *)(v10 + *((void *)buffer + 19) + v6);
      }
      else
      {
        if (*((void *)buffer + 22) <= v6
          || (v11 = *((void *)buffer + 21), int64_t v12 = *((void *)buffer + 23), v11 > v6))
        {
          int64_t v13 = v6 - 4;
          if ((unint64_t)v6 < 4) {
            int64_t v13 = 0;
          }
          if (v13 + 64 < v7) {
            int64_t v7 = v13 + 64;
          }
          *((void *)buffer + 21) = v13;
          *((void *)buffer + 22) = v7;
          v24.location = *((void *)buffer + 19) + v13;
          v24.length = v7 - v13;
          CFStringGetCharacters(*((CFStringRef *)buffer + 16), v24, buffer);
          int64_t v11 = *((void *)buffer + 21);
          int64_t v12 = *((void *)buffer + 23);
          uint64_t v5 = *((void *)buffer + 24);
        }
        UniChar v9 = buffer[v6 - v11];
        int64_t v6 = v12;
      }
    }
    if (v9 != 44)
    {
LABEL_24:
      uint64_t v14 = 0;
      *((void *)buffer + 23) = v6 + v5;
    }
    else
    {
      *((void *)buffer + 23) = v6 + 1;
      uint64_t v14 = v5 - 1;
    }
    *((void *)buffer + 24) = v14;
  }
  uint64_t v4 = IMAPScanUid(buffer);
  *((_DWORD *)buffer + 50) = v4;
  if (v4)
  {
    uint64_t v15 = *((void *)buffer + 24);
    if (v15 >= 1)
    {
      int64_t v16 = *((void *)buffer + 23);
      if ((v16 & 0x8000000000000000) == 0)
      {
        int64_t v17 = *((void *)buffer + 20);
        if (v17 > v16)
        {
          uint64_t v18 = *((void *)buffer + 17);
          if (v18)
          {
            UniChar v19 = *(_WORD *)(v18 + 2 * (*((void *)buffer + 19) + v16));
          }
          else
          {
            uint64_t v20 = *((void *)buffer + 18);
            if (v20)
            {
              UniChar v19 = *(char *)(v20 + *((void *)buffer + 19) + v16);
            }
            else
            {
              if (*((void *)buffer + 22) <= v16 || (int64_t v21 = *((void *)buffer + 21), v21 > v16))
              {
                int64_t v22 = v16 - 4;
                if ((unint64_t)v16 < 4) {
                  int64_t v22 = 0;
                }
                if (v22 + 64 < v17) {
                  int64_t v17 = v22 + 64;
                }
                *((void *)buffer + 21) = v22;
                *((void *)buffer + 22) = v17;
                v25.location = *((void *)buffer + 19) + v22;
                v25.length = v17 - v22;
                CFStringGetCharacters(*((CFStringRef *)buffer + 16), v25, buffer);
                int64_t v21 = *((void *)buffer + 21);
              }
              UniChar v19 = buffer[v16 - v21];
            }
          }
          if (v19 == 44)
          {
            *(int64x2_t *)(buffer + 92) = vaddq_s64(*(int64x2_t *)(buffer + 92), (int64x2_t)xmmword_1A8AC6340);
            return v4;
          }
          if (v19 == 58)
          {
            *(int64x2_t *)(buffer + 92) = vaddq_s64(*(int64x2_t *)(buffer + 92), (int64x2_t)xmmword_1A8AC6340);
            *((_DWORD *)buffer + 51) = IMAPScanUid(buffer);
            return v4;
          }
          int64_t v16 = *((void *)buffer + 23);
          uint64_t v15 = *((void *)buffer + 24);
        }
      }
      *((void *)buffer + 23) = v16 + v15;
      *((void *)buffer + 24) = 0;
    }
  }
  return v4;
}

uint64_t IMAPScanUid(UniChar *buffer)
{
  if (*((uint64_t *)buffer + 24) < 1) {
    return 0;
  }
  uint64_t v2 = 0;
  uint64_t v3 = *((void *)buffer + 23);
  do
  {
    if (v3 < 0) {
      break;
    }
    uint64_t v4 = *((void *)buffer + 20);
    if (v4 <= v3) {
      break;
    }
    uint64_t v5 = *((void *)buffer + 17);
    if (v5)
    {
      UniChar v6 = *(_WORD *)(v5 + 2 * (*((void *)buffer + 19) + v3));
    }
    else
    {
      uint64_t v7 = *((void *)buffer + 18);
      if (v7)
      {
        UniChar v6 = *(char *)(v7 + *((void *)buffer + 19) + v3);
      }
      else
      {
        if (*((void *)buffer + 22) <= v3 || (uint64_t v8 = *((void *)buffer + 21), v8 > v3))
        {
          uint64_t v9 = v3 - 4;
          if ((unint64_t)v3 < 4) {
            uint64_t v9 = 0;
          }
          if (v9 + 64 < v4) {
            uint64_t v4 = v9 + 64;
          }
          *((void *)buffer + 21) = v9;
          *((void *)buffer + 22) = v4;
          v13.location = *((void *)buffer + 19) + v9;
          v13.length = v4 - v9;
          CFStringGetCharacters(*((CFStringRef *)buffer + 16), v13, buffer);
          uint64_t v8 = *((void *)buffer + 21);
        }
        UniChar v6 = buffer[v3 - v8];
      }
    }
    unsigned int v10 = v6 - 48;
    if (v10 > 9) {
      break;
    }
    uint64_t v2 = v10 + 10 * v2;
    uint64_t v11 = *((void *)buffer + 24);
    uint64_t v3 = *((void *)buffer + 23) + 1;
    *((void *)buffer + 23) = v3;
    *((void *)buffer + 24) = v11 - 1;
  }
  while (v11 > 1);
  return v2;
}

id MFIMAPDateSearchStringForDate(void *a1)
{
  id v1 = a1;
  if (MFIMAPDateSearchStringForDate_onceToken[0] != -1) {
    dispatch_once(MFIMAPDateSearchStringForDate_onceToken, &__block_literal_global_8);
  }
  uint64_t v2 = [(id)MFIMAPDateSearchStringForDate_formatter stringFromDate:v1];

  return v2;
}

void sub_1A7F633D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __MFIMAPDateSearchStringForDate_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28C10]);
  id v1 = (void *)MFIMAPDateSearchStringForDate_formatter;
  MFIMAPDateSearchStringForDate_formatter = (uint64_t)v0;

  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F1CA20], "ef_posixLocale");
  [(id)MFIMAPDateSearchStringForDate_formatter setLocale:v2];

  uint64_t v3 = (void *)MFIMAPDateSearchStringForDate_formatter;
  return [v3 setDateFormat:@"d-MMM-yyyy"];
}

void sub_1A7F6345C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFUIDPlusInfoFromResponse(void *a1)
{
  v10[3] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 responseType] == 2 && objc_msgSend(v1, "responseCode") == 16)
  {
    uint64_t v2 = [v1 responseInfo];
    uint64_t v3 = v2;
    if (v2 && (unint64_t)[v2 count] >= 3)
    {
      v9[0] = @"UIDVALIDITY";
      uint64_t v4 = [v3 objectAtIndexedSubscript:0];
      v10[0] = v4;
      v9[1] = @"Source UIDS";
      uint64_t v5 = [v3 objectAtIndexedSubscript:1];
      v10[1] = v5;
      void v9[2] = @"Destination UIDS";
      UniChar v6 = [v3 objectAtIndexedSubscript:2];
      v10[2] = v6;
      uint64_t v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v10 forKeys:v9 count:3];
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

void sub_1A7F635DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6374C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F63928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6398C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  unsigned int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFIMAPConnection;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F63AF0(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

uint64_t locked_supportsCapability(void *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if ((((v3[64] | (*((unsigned __int8 *)v3 + 130) << 16)) >> a2) & 1) == 0) {
    goto LABEL_12;
  }
  if (a2 > 14)
  {
    if (a2 == 16)
    {
      uint64_t v4 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
      char v5 = [v4 BOOLForKey:@"DisableCONDSTORE"];
    }
    else
    {
      if (a2 != 15) {
        goto LABEL_13;
      }
      uint64_t v4 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
      char v5 = [v4 BOOLForKey:@"DisableESEARCH"];
    }
    goto LABEL_11;
  }
  if (a2 != 5)
  {
    if (a2 != 14) {
      goto LABEL_13;
    }
    uint64_t v4 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
    char v5 = [v4 BOOLForKey:@"DisableCOMPRESS"];
LABEL_11:
    char v9 = v5;

    if (v9)
    {
LABEL_12:
      uint64_t v8 = 0;
      goto LABEL_14;
    }
LABEL_13:
    uint64_t v8 = 1;
    goto LABEL_14;
  }
  UniChar v6 = [MEMORY[0x1E4F60D58] currentDevice];
  int v7 = [v6 isPlatform:2];

  uint64_t v8 = v7 ^ 1u;
LABEL_14:

  return v8;
}

void sub_1A7F63C54(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7F63E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F63ECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F63F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6413C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F64314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F64740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  _Unwind_Resume(a1);
}

void sub_1A7F65528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,void *a31,uint64_t a32,uint64_t a33,void *a34)
{
  _Unwind_Resume(a1);
}

__CFString *MFIMAPStringFromMailboxName(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    _IMAPCreateQuotedString(v1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v2 = @"\"\"";
  }

  return v2;
}

void sub_1A7F658A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *_IMAPCreateQuotedString(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [(__CFString *)v1 length];
  uint64_t v3 = v2;
  if (v2)
  {
    *(void *)&long long v4 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
    long long v45 = v4;
    long long v46 = v4;
    long long v43 = v4;
    long long v44 = v4;
    long long v41 = v4;
    long long v42 = v4;
    *(_OWORD *)buffer = v4;
    long long v40 = v4;
    UniChar chars = -21846;
    v47 = v1;
    uint64_t v50 = 0;
    int64_t v51 = v2;
    v36 = v1;
    CharactersPtr = CFStringGetCharactersPtr(v1);
    if (CharactersPtr) {
      CStringPtr = 0;
    }
    else {
      CStringPtr = CFStringGetCStringPtr(v1, 0x600u);
    }
    uint64_t v7 = 0;
    LOBYTE(v8) = 0;
    int64_t v9 = 0;
    v49 = CStringPtr;
    CFIndex v10 = v3 + 2;
    uint64_t v11 = 64;
    int64_t v52 = 0;
    int64_t v53 = 0;
    do
    {
      if ((unint64_t)v9 >= 4) {
        uint64_t v12 = 4;
      }
      else {
        uint64_t v12 = v9;
      }
      if (v9 < 0 || (uint64_t v13 = v51, v51 <= v9))
      {
        UniChar v14 = 0;
      }
      else if (CharactersPtr)
      {
        UniChar v14 = CharactersPtr[v9 + v50];
      }
      else if (v49)
      {
        UniChar v14 = v49[v50 + v9];
      }
      else
      {
        if (v53 <= v9 || (int64_t v15 = v52, v52 > v9))
        {
          uint64_t v16 = -v12;
          uint64_t v17 = v12 + v7;
          uint64_t v18 = v11 - v12;
          int64_t v19 = v9 + v16;
          int64_t v20 = v19 + 64;
          if (v19 + 64 >= v51) {
            int64_t v20 = v51;
          }
          int64_t v52 = v19;
          int64_t v53 = v20;
          if (v51 >= v18) {
            uint64_t v13 = v18;
          }
          v55.length = v13 + v17;
          v55.location = v19 + v50;
          CFStringGetCharacters(v47, v55, buffer);
          int64_t v15 = v52;
        }
        UniChar v14 = buffer[v9 - v15];
      }
      BOOL v8 = v8 || CFCharacterSetIsCharacterMember((CFCharacterSetRef)sIMAPNeedsQuoteCharacterSet, v14) != 0;
      if (v14 == 92 || v14 == 34) {
        ++v10;
      }
      ++v9;
      --v7;
      ++v11;
    }
    while (v3 != v9);
    id v1 = v36;
    if (v8)
    {
      Mutable = CFStringCreateMutable(0, v10);
      UniChar chars = 34;
      CFStringAppendCharacters(Mutable, &chars, 1);
      uint64_t v22 = 0;
      int64_t v23 = 0;
      uint64_t v24 = 64;
      do
      {
        if ((unint64_t)v23 >= 4) {
          uint64_t v25 = 4;
        }
        else {
          uint64_t v25 = v23;
        }
        if (v23 < 0 || (uint64_t v26 = v51, v51 <= v23))
        {
          UniChar chars = 0;
        }
        else
        {
          if (CharactersPtr)
          {
            UniChar v27 = CharactersPtr[v23 + v50];
          }
          else if (v49)
          {
            UniChar v27 = v49[v50 + v23];
          }
          else
          {
            if (v53 <= v23 || (int64_t v28 = v52, v52 > v23))
            {
              uint64_t v29 = -v25;
              uint64_t v30 = v25 + v22;
              uint64_t v31 = v24 - v25;
              int64_t v32 = v23 + v29;
              int64_t v33 = v32 + 64;
              if (v32 + 64 >= v51) {
                int64_t v33 = v51;
              }
              int64_t v52 = v32;
              int64_t v53 = v33;
              if (v51 >= v31) {
                uint64_t v26 = v31;
              }
              v56.length = v26 + v30;
              v56.location = v32 + v50;
              CFStringGetCharacters(v47, v56, buffer);
              int64_t v28 = v52;
            }
            UniChar v27 = buffer[v23 - v28];
          }
          UniChar chars = v27;
          if (v27 == 92 || v27 == 34)
          {
            UniChar v37 = 92;
            CFStringAppendCharacters(Mutable, &v37, 1);
          }
        }
        CFStringAppendCharacters(Mutable, &chars, 1);
        ++v23;
        --v22;
        ++v24;
      }
      while (v3 != v23);
      UniChar chars = 34;
      id v1 = v36;
      CFStringAppendCharacters(Mutable, &chars, 1);
    }
    else
    {
      Mutable = 0;
    }
    if (Mutable) {
      uint64_t v34 = Mutable;
    }
    else {
      uint64_t v34 = v1;
    }
    UniChar v6 = v34;
  }
  else
  {
    UniChar v6 = @"\"\"";
  }

  return v6;
}

void sub_1A7F65C2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F65DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F660B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6630C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F664C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F66678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F66880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F669E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F67694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F679BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F67E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F68224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _messageFromResponse(void *a1)
{
  id v1 = a1;
  if ((unint64_t)([v1 responseType] - 1) >= 6)
  {
    uint64_t v3 = 0;
    goto LABEL_7;
  }
  uint64_t v2 = [v1 userString];
  uint64_t v3 = v2;
  if (!v2)
  {
LABEL_7:
    long long v4 = 0;
    goto LABEL_8;
  }
  if ([v2 isEqualToString:&stru_1EFF11268]) {
    long long v4 = 0;
  }
  else {
    long long v4 = v3;
  }
LABEL_8:
  id v5 = v4;

  return v5;
}

void sub_1A7F68344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F683D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F685A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F68A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F68CB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F68DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F69100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6937C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F694DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F69604(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F698D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6A38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6A6A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6A85C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6A998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6AB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6AC28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6ADD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6B1CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6B480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6B630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
}

void sub_1A7F6B714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6B838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A7F6BA5C(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7F6BBFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6BE8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6C154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, id a12)
{
  _Unwind_Resume(a1);
}

uint64_t _processSelectCommand(void *a1, uint64_t a2, void *a3)
{
  v35[1] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v27 = a3;
  UniChar v6 = [_MFIMAPCommandParameters alloc];
  uint64_t v7 = MFIMAPStringFromMailboxName(v27);
  v35[0] = v7;
  BOOL v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:v35 count:1];
  int64_t v9 = [(_MFIMAPCommandParameters *)v6 initWithCommand:a2 arguments:v8];

  objc_msgSend(v5, "mf_lock");
  uint64_t v34 = v9;
  CFIndex v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v34 count:1];
  uint64_t v11 = [v5 _responseFromSendingCommands:v10];

  uint64_t v12 = [v11 responseType];
  if (v12 == 2)
  {
    uint64_t v16 = [v27 copy];
    uint64_t v17 = (void *)*((void *)v5 + 22);
    *((void *)v5 + 22) = v16;

    *((unsigned char *)v5 + 152) = *((unsigned char *)v5 + 152) & 0xF8 | 3;
    *((unsigned char *)v5 + 240) &= ~1u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v18 = [(_MFIMAPCommandParameters *)v9 untaggedResponses];
    uint64_t v19 = [v18 countByEnumeratingWithState:&v28 objects:v33 count:16];
    if (v19)
    {
      uint64_t v20 = *(void *)v29;
      do
      {
        for (uint64_t i = 0; i != v19; ++i)
        {
          if (*(void *)v29 != v20) {
            objc_enumerationMutation(v18);
          }
          uint64_t v22 = *(void **)(*((void *)&v28 + 1) + 8 * i);
          if ([v22 responseType] == 2 && objc_msgSend(v22, "responseCode") == 13) {
            *((unsigned char *)v5 + 240) |= 1u;
          }
          if ([v22 responseType] == 2 && objc_msgSend(v22, "responseCode") == 5)
          {
            int64_t v23 = [v22 responseInfo];
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && [v23 count]) {
              uint64_t v24 = IMAPPermanentFlagsFromArray(v23);
            }
            else {
              uint64_t v24 = 1;
            }
            [v5 setPermanentFlags:v24];
          }
        }
        uint64_t v19 = [v18 countByEnumeratingWithState:&v28 objects:v33 count:16];
      }
      while (v19);
    }

    if (![v5 permanentFlags]) {
      [v5 setPermanentFlags:2147483774];
    }
    uint64_t v15 = 1;
  }
  else
  {
    if (v12 == 4 && (char)(32 * *((unsigned char *)v5 + 152)) >= 65)
    {
      uint64_t v13 = (void *)*((void *)v5 + 22);
      *((void *)v5 + 22) = 0;

      *((unsigned char *)v5 + 152) = *((unsigned char *)v5 + 152) & 0xF8 | 2;
      *((unsigned char *)v5 + 240) &= ~1u;
    }
    id v14 = (id)[v5 _errorForResponse:v11 commandParams:v9];
    uint64_t v15 = 0;
  }
  objc_msgSend(v5, "mf_unlock");
  int64_t v32 = v9;
  uint64_t v25 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v32 count:1];
  [v5 didFinishCommands:v25];

  return v15;
}

void sub_1A7F6C594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6C688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6C774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6C868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6CA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6CBDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6CD10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6CEB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _doUidSearch(void *a1, void *a2, void *a3, void *a4, BOOL *a5, char a6)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  id v10 = a1;
  id v35 = a2;
  id v11 = a3;
  uint64_t v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v11, "count", v11) + 2 * (v35 != 0));
  uint64_t v13 = [[_MFIMAPCommandParameters alloc] initWithCommand:24 arguments:v12];
  if (v35)
  {
    if ((a6 & 1) == 0) {
      [v12 addObject:@"UID"];
    }
    [v12 addObject:v35];
  }
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v14 = v11;
  uint64_t v15 = [v14 countByEnumeratingWithState:&v37 objects:v43 count:16];
  if (v15)
  {
    uint64_t v16 = *(void *)v38;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v38 != v16) {
          objc_enumerationMutation(v14);
        }
        uint64_t v18 = (void *)[v10 copyArgumentForSearchTerm:*(void *)(*((void *)&v37 + 1) + 8 * i)];
        [v12 addObject:v18];
      }
      uint64_t v15 = [v14 countByEnumeratingWithState:&v37 objects:v43 count:16];
    }
    while (v15);
  }

  long long v42 = v13;
  uint64_t v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v42 count:1];
  uint64_t v34 = [v10 _responseFromSendingCommands:v19];

  uint64_t v20 = [v34 responseType];
  if (a5) {
    *a5 = v20 == 2;
  }
  if (v20 == 2)
  {
    int64_t v21 = [(_MFIMAPCommandParameters *)v13 untaggedResponses];
    unint64_t v22 = [v21 count];

    if (v22)
    {
      unint64_t v23 = 0;
      char v24 = 0;
      uint64_t v25 = 0;
      do
      {
        uint64_t v26 = [(_MFIMAPCommandParameters *)v13 untaggedResponses];
        id v27 = [v26 objectAtIndex:v23];

        if ([v27 responseType] == 14)
        {
          long long v28 = [v27 searchResults];
          long long v29 = v28;
          if (a4)
          {
            if (v25) {
              [v25 addObjectsFromArray:v28];
            }
            else {
              uint64_t v25 = (void *)[v28 mutableCopyWithZone:0];
            }
          }
          long long v30 = [(_MFIMAPCommandParameters *)v13 untaggedResponses];
          [v30 removeObjectAtIndex:v23];

          --v22;
          char v24 = 1;
        }
        else
        {
          ++v23;
        }
      }
      while (v23 < v22);
    }
    else
    {
      uint64_t v25 = 0;
      char v24 = 0;
    }
    uint64_t v31 = v24 & 1;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v31 = 0;
  }
  long long v41 = v13;
  int64_t v32 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v41 count:1];
  [v10 didFinishCommands:v32];

  if (a4)
  {
    [v25 sortUsingSelector:sel_compare_];
    *a4 = v25;
  }

  return v31;
}

void sub_1A7F6D290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6D518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6D658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6D77C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6D8E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6D9D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6DC14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6DEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6E020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6E318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6E5F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6E8A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6ED1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6EED4(_Unwind_Exception *a1)
{
  UniChar v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F6F100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6F21C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6F3B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6F530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6F5D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6F874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6FC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7F6FF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7F701B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7024C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F702B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id uidSetForUIDArray(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28E60] indexSet];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * i), "integerValue", (void)v9);
        if ((unint64_t)(v7 - 1) <= 0xFFFFFFFE) {
          [v2 addIndex:v7];
        }
      }
      uint64_t v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }

  return v2;
}

void sub_1A7F70408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F704A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7064C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v26 - 96), 8);
  _Block_object_dispose((const void *)(v26 - 64), 8);

  _Unwind_Resume(a1);
}

void sub_1A7F70990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F70F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7136C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F71698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F71764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F71840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F71954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F71BBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F71D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F71F14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F72108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F721E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F72358(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F72584(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7284C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F72A64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F72ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1A7F73080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F73448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F73658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F738F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F73B58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F73DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F73F4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F74080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F741CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F742BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7436C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7441C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F74564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7F74624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F747BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F74864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFInvocationQueue;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F74A00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F74B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F74D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F74ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7501C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F750D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F75138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F75210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F75390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A7F7551C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7564C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F75734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F757B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7583C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F758BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F75FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,void *a34)
{
  _Unwind_Resume(a1);
}

void sub_1A7F762B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F76390(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7F76524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7666C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F76724(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7F768A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F76980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F76A3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F76BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F76DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F76FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F770C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77310(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F773D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F774B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77584(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F775F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F777FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7786C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77A78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77DAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F77F80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7813C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F781DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F782B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F783C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F78448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F784B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F78518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F78598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F786A8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F787D0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F788F8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F78A20(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F78B5C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F78C98(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F78D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F78E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F78E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F78F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F78F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F792FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F794AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F795A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F796EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F797D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F798A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79AA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F79F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7A130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7A1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7A294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7A3C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7A5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7A718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7A844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7F7A8D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7AE58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B060(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B208(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void initializeSharedInstance()
{
  id v0 = objc_alloc_init(MFLibraryStore);
  id v1 = (void *)sSharedInstance;
  sSharedInstance = (uint64_t)v0;

  uint64_t v2 = (void *)sSharedInstance;
  id v3 = +[MFMailMessageLibrary defaultInstance];
  objc_msgSend(v2, "setLibrary:");
}

void sub_1A7F7B328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B4CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B6D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B7FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B8F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7B9EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7BAAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7BB58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7BC08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7BC94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7BD10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7BF6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7C440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7C5FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7C6C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7C86C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7CA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7CAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7CBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7CCD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7CDD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7CECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7CFB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D37C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D6E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D7D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D8C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7D9E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id partDataFromFullBodyData(void *a1, void *a2, void *a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  char v18 = 0;
  uint64_t v14 = [v11 fullBodyDataForMessage:v12 andHeaderDataIfReadilyAvailable:0 isComplete:&v18 downloadIfNecessary:a5 usePartDatas:0 didDownload:a6];
  uint64_t v15 = v14;
  uint64_t v16 = 0;
  if (v14 && v18)
  {
    uint64_t v16 = partDataFromFullBodyDataWithUnixLineEndings(v14, v12, v13, a4);
  }

  return v16;
}

void sub_1A7F7DAEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7DFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7E5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7EA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7EC3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7ED44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7EF50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7F014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7F0A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7F11C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7F4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7F66C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1A7F7F7F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7F918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FA5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FBF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FD00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FD48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FD90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FE90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F7FF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8029C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8031C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8039C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8042C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F804DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1A7F80884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80BDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80E84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F80FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8114C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F81210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F812B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F816DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F818CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F81B04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F81BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F81C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F81E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F81FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8233C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id accountWithPathTryResolvingSymlinks(void *a1, int a2)
{
  id v3 = a1;
  if ([v3 length])
  {
    uint64_t v4 = +[MailAccount _accountWithPath:v3];
    if (v4) {
      BOOL v5 = 1;
    }
    else {
      BOOL v5 = a2 == 0;
    }
    if (!v5)
    {
      uint64_t v6 = objc_msgSend(v3, "mf_betterStringByResolvingSymlinksInPath");

      uint64_t v4 = +[MailAccount _accountWithPath:v6];
      id v3 = (id)v6;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_1A7F82524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F825EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8264C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MailAccount;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F8271C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F827DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id mailAccountQueue()
{
  if (mailAccountQueue_predicate != -1) {
    dispatch_once(&mailAccountQueue_predicate, &__block_literal_global_932);
  }
  id v0 = (void *)mailAccountQueue_queue;
  return v0;
}

void sub_1A7F828E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8297C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82A64(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A7F82B60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id encodedURLComponent(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = objc_msgSend(MEMORY[0x1E4F1CB10], "ef_accountAllowedCharacterSet");
    id v3 = [v1 stringByAddingPercentEncodingWithAllowedCharacters:v2];
  }
  else
  {
    id v3 = 0;
  }
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v1;
  }
  id v5 = v4;

  return v5;
}

void sub_1A7F82E10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F82EF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F83040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8323C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F832D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F83378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F834F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F83628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F837F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F838F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8398C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F839DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F83A58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F83B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F83C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F83F30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8411C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8420C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F842A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F843C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void _invalidateMailboxCache(void *a1)
{
  uint64_t v2 = a1;
  [v2 setCacheHasBeenRead:0];
  [v2[13] invalidate];
  objc_msgSend(v2, "mf_lock");
  id v1 = v2[13];
  v2[13] = 0;

  objc_msgSend(v2, "mf_unlock");
}

void sub_1A7F84AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F84E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F850F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F851B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F853C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8573C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F858AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85B4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85C84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F85DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F86754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A7F86FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8754C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F875E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8790C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87B10(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7F87C00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87DFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F87F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F882A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F883C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F88EB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8905C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8928C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F893B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F894AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8952C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void _recurseIntoFileSystem(void *a1, id *a2)
{
  id v9 = [a1 objectForKey:@"MailboxName"];
  uint64_t v4 = [a1 objectForKey:@"MailboxAttributes"];
  unsigned int v5 = [v4 unsignedIntValue];

  uint64_t v6 = v5;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = [a2[1] length];
    BOOL v8 = [a2[2] childWithName:v9];
    if (!v8) {
      BOOL v8 = (void *)[*a2 _copyMailboxWithParent:a2[2] name:v9 attributes:v6 dictionary:0];
    }
    [a2[1] appendString:@"/"];
    [a2[1] appendString:v9];
    [*a2 _loadEntriesFromFileSystemPath:a2[1] parent:v8];
    objc_msgSend(a2[1], "deleteCharactersInRange:", v7, objc_msgSend(a2[1], "length") - v7);
  }
}

void sub_1A7F89A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F89FCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A0E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A17C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A258(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A3F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8A750(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F8A908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8AAF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8ABAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8AC4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8AD08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8AE54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8AFE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8B110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8B178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8B200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8B278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8B318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8B438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CFComparisonResult _MFCompareMailboxDictionariesByName(void *a1, void *a2)
{
  CFComparisonResult v2 = kCFCompareEqualTo;
  if (a1 && a2)
  {
    uint64_t v4 = [a1 objectForKey:@"MailboxName"];
    if (v4)
    {
      unsigned int v5 = [a2 objectForKey:@"MailboxName"];
      if (v5) {
        CFComparisonResult v2 = CFStringCompare(v4, v5, 0);
      }
      else {
        CFComparisonResult v2 = kCFCompareEqualTo;
      }
    }
    else
    {
      CFComparisonResult v2 = kCFCompareEqualTo;
    }
  }
  return v2;
}

void sub_1A7F8B6C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8B7AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CFComparisonResult _compareNameWithMailboxDictionary(void *a1, void *a2, void *a3)
{
  if (a1 == a3)
  {
    uint64_t v6 = a1;
    unsigned int v5 = [a2 objectForKey:@"MailboxName"];
  }
  else
  {
    uint64_t v4 = [a1 objectForKey:@"MailboxName"];
    unsigned int v5 = a2;
    uint64_t v6 = (__CFString *)v4;
  }
  CFComparisonResult v7 = kCFCompareEqualTo;
  if (v6 && v5) {
    CFComparisonResult v7 = CFStringCompare(v6, v5, 0);
  }

  return v7;
}

void sub_1A7F8B87C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __mailAccountQueue_block_invoke()
{
  CFComparisonResult v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.email.MailAccount", v2);
  id v1 = (void *)mailAccountQueue_queue;
  mailAccountQueue_queue = (uint64_t)v0;
}

Class initMCCSecretAgentController()
{
  if (LoadicloudMCCKit_loadPredicate != -1) {
    dispatch_once(&LoadicloudMCCKit_loadPredicate, &__block_literal_global_936);
  }
  Class result = objc_getClass("MCCSecretAgentController");
  classMCCSecretAgentController = (uint64_t)result;
  getMCCSecretAgentControllerClass = (uint64_t (*)())MCCSecretAgentControllerFunction;
  return result;
}

id MCCSecretAgentControllerFunction()
{
  return (id)classMCCSecretAgentController;
}

void __LoadicloudMCCKit_block_invoke()
{
  LoadicloudMCCKit_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/icloudMCCKit.framework/icloudMCCKit", 2);
  if (!LoadicloudMCCKit_frameworkLibrary) {
    NSLog(&cfstr_FailedToSoftLi.isa);
  }
}

uint64_t mailboxUIDTypeFromECMailboxType(uint64_t result)
{
  switch(result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return result;
    default:
      if (result != -100) {
        Class result = -500;
      }
      break;
  }
  return result;
}

void sub_1A7F8BB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8BCC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8BDD4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F8BE20()
{
}

void sub_1A7F8BE28()
{
}

void sub_1A7F8C054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C3B0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F8C44C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7F8C510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C5B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C75C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C7D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C83C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8C9C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8CAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8CBB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8CC88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8CE4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8CEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFMailboxUid;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F8CFFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D1D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D5A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D6E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D8E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D940(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8D9F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8DA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8DBEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8DD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8DE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8DE90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id accountForHeaders(void *a1)
{
  id v1 = [a1 firstSenderAddress];
  CFComparisonResult v2 = +[MailAccount accountContainingEmailAddress:v1];
  id v3 = [v2 deliveryAccount];

  return v3;
}

void sub_1A7F8DF20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8DFD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E05C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E4A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFMailDelivery;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F8E784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8E860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8EAD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8EC8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8EFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8F178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8F328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8F4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8F7E8(_Unwind_Exception *a1)
{
  long long v10 = v8;

  _Unwind_Resume(a1);
}

void sub_1A7F8FA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8FD20(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7F8FE30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F8FEA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F900F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F901D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F904A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90A8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90BB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90D1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90DE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F90EDC(_Unwind_Exception *a1)
{
  unsigned int v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7F90FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F91020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F91248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F91330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9139C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F91524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t _MFFlagsBySettingValueForKey(unint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = [v6 BOOLValue];
  if ([v5 isEqual:@"MessageIsRead"])
  {
    if ((a1 & 1) != v7) {
      a1 = a1 & 0xFFFFFFFFFFFFFFFELL | v7;
    }
    goto LABEL_16;
  }
  if ([v5 isEqual:@"MessageIsDeleted"])
  {
    uint64_t v8 = (a1 >> 1) & 1;
    unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFDLL;
    BOOL v10 = v7 == 0;
    uint64_t v11 = 2;
LABEL_11:
    if (v10) {
      uint64_t v11 = 0;
    }
    unint64_t v12 = v11 | v9;
    if (v8 != v7) {
      a1 = v12;
    }
    goto LABEL_16;
  }
  if ([v5 isEqualToString:@"MessageWasRepliedTo"])
  {
    uint64_t v8 = (a1 >> 2) & 1;
    unint64_t v9 = a1 & 0xFFFFFFFFFFFFFCFBLL;
    BOOL v10 = v7 == 0;
    uint64_t v11 = 4;
    goto LABEL_11;
  }
  if ([v5 isEqualToString:@"MessageWasForwarded"])
  {
    uint64_t v8 = (a1 >> 8) & 1;
    unint64_t v9 = a1 & 0xFFFFFFFFFFFFFCFBLL;
    BOOL v10 = v7 == 0;
    uint64_t v11 = 256;
    goto LABEL_11;
  }
  if ([v5 isEqualToString:@"MessageWasRedirected"])
  {
    if (((a1 >> 9) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFFFFFFFFCFBLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 512;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageIsJunk"])
  {
    if (((a1 >> 21) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFFF7FDFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x200000;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageIsNotJunk"])
  {
    if (((a1 & 0x80000000) != 0) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFFF7FDFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x80000000;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageIsFlagged"])
  {
    if (((a1 >> 4) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFFFFFFFFFEFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 16;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageFlagColor"])
  {
    uint64_t v17 = [v6 unsignedIntegerValue];
    if (((a1 >> 41) & 7) != v17) {
      a1 = a1 & 0xFFFFF1FFFFFFFFFFLL | ((unint64_t)(v17 & 7) << 41);
    }
    goto LABEL_16;
  }
  if ([v5 isEqualToString:@"MessageIsServerSearchResult"])
  {
    if (((a1 >> 7) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFFFFFFFFF7FLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 128;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageIsThreadSearchResult"])
  {
    if (((a1 >> 20) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFFFFFEFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x100000;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageSenderIsVIP"])
  {
    if (((a1 >> 24) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFFFFEFFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x1000000;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"EMMessageDeliveryStatusInProgress"])
  {
    if (((a1 >> 37) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFDFFFFFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x2000000000;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageQueuedForDelivery"])
  {
    if (((a1 >> 38) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFFBFFFFFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x4000000000;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageToContainsAccountAddress"])
  {
    if (((a1 >> 39) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFF7FFFFFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x8000000000;
    goto LABEL_29;
  }
  if ([v5 isEqualToString:@"MessageCcContainsAccountAddress"])
  {
    if (((a1 >> 40) & 1) == v7) {
      goto LABEL_16;
    }
    unint64_t v14 = a1 & 0xFFFFFEFFFFFFFFFFLL;
    BOOL v15 = v7 == 0;
    uint64_t v16 = 0x10000000000;
LABEL_29:
    if (v15) {
      uint64_t v16 = 0;
    }
    a1 = v16 | v14;
    goto LABEL_16;
  }
  if ([v5 isEqualToString:@"MessageToOrCcContainsAccountAddress"])
  {
    uint64_t v18 = 0x8000000000;
    if (!v7) {
      uint64_t v18 = 0;
    }
    unint64_t v19 = v18 | a1 & 0xFFFFFE7FFFFFFFFFLL;
    uint64_t v20 = 0x10000000000;
    if (!v7) {
      uint64_t v20 = 0;
    }
    a1 = v19 | v20;
  }
  else if (([v5 isEqualToString:@"_Encoding"] & 1) == 0 {
         && ([v5 isEqualToString:@"MessageChangeReason"] & 1) == 0)
  }
  {
    int64_t v21 = MFLogGeneral();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG)) {
      _MFFlagsBySettingValueForKey_cold_1((uint64_t)v5, v21);
    }
  }
LABEL_16:

  return a1;
}

void sub_1A7F91A18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t MFMessageFlagsByApplyingDictionary(unint64_t a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v4 = objc_msgSend(v3, "allKeys", 0);
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v4);
        }
        uint64_t v8 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        unint64_t v9 = [v3 objectForKey:v8];
        a1 = _MFFlagsBySettingValueForKey(a1, v8, v9);
      }
      uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  return a1;
}

void sub_1A7F91B6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t _MFFlagsBySettingNumberOfAttachments(uint64_t a1, unsigned int a2, int a3, int a4)
{
  if (a2) {
    char v4 = a2;
  }
  else {
    char v4 = 63;
  }
  if (a2 > 0x3E) {
    char v4 = 62;
  }
  uint64_t v5 = 8;
  if (!a4) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x800000;
  if (!a3) {
    uint64_t v6 = 0;
  }
  return v6 & 0xFFFFFFFFFFFF03FFLL | a1 & 0xFFFFFFFFFF7F03F7 | v5 & 0xFFFFFFFFFFFF03FFLL | ((unint64_t)(v4 & 0x3F) << 10);
}

void sub_1A7F91D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F91E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F92570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9273C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F927B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F92868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  BOOL v10 = v9;

  a9.super_class = (Class)MFMailMessageLibrary;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7F9339C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_1A7F93654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9372C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F939A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F93A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F93C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F93D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F93E40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F93EA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F93FD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F940D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F94208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t setFlagsForMessage(void *a1, void *a2, unint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  unsigned int v7 = objc_msgSend(@"UPDATE messages SET flags = :flags, read = :read, flagged = :flagged, flag_color = :flag_color, deleted = :deleted, sender_vip = :sender_vip, encoding = :encoding, remote_id = :uid", "stringByAppendingString:", @" WHERE ROWID = :rowid");
  id v8 = [v5 preparedStatementForQueryString:v7];
  unint64_t v9 = (sqlite3_stmt *)[v8 compiled];

  if (v9)
  {
    int v10 = sqlite3_bind_parameter_index(v9, ":flags");
    sqlite3_bind_int64(v9, v10, a3);
    int v11 = sqlite3_bind_parameter_index(v9, ":read");
    if (a3) {
      long long v12 = "1";
    }
    else {
      long long v12 = "0";
    }
    sqlite3_bind_text(v9, v11, v12, 1, 0);
    int v13 = sqlite3_bind_parameter_index(v9, ":flagged");
    if ((a3 & 0x10) != 0) {
      long long v14 = "1";
    }
    else {
      long long v14 = "0";
    }
    sqlite3_bind_text(v9, v13, v14, 1, 0);
    int v15 = sqlite3_bind_parameter_index(v9, ":flag_color");
    if ((a3 & 0x10) != 0) {
      sqlite3_bind_int64(v9, v15, (a3 >> 41) & 7);
    }
    else {
      sqlite3_bind_null(v9, v15);
    }
    int v17 = sqlite3_bind_parameter_index(v9, ":deleted");
    if ((a3 & 2) != 0) {
      uint64_t v18 = "1";
    }
    else {
      uint64_t v18 = "0";
    }
    sqlite3_bind_text(v9, v17, v18, 1, 0);
    int v19 = sqlite3_bind_parameter_index(v9, ":sender_vip");
    if ((a3 & 0x1000000) != 0) {
      uint64_t v20 = "1";
    }
    else {
      uint64_t v20 = "0";
    }
    sqlite3_bind_text(v9, v19, v20, 1, 0);
    id v21 = [v6 remoteID];
    unint64_t v22 = (const char *)[v21 UTF8String];

    if (v22)
    {
      int v23 = sqlite3_bind_parameter_index(v9, ":uid");
      int v24 = strlen(v22);
      sqlite3_bind_text(v9, v23, v22, v24, 0);
    }
    else
    {
      int v25 = sqlite3_bind_parameter_index(v9, ":uid");
      sqlite3_bind_null(v9, v25);
    }
    int v26 = [v6 preferredEncoding];
    int v27 = sqlite3_bind_parameter_index(v9, ":encoding");
    if (v26 == -1) {
      sqlite3_bind_null(v9, v27);
    }
    else {
      sqlite3_bind_int(v9, v27, v26);
    }
    int v28 = sqlite3_bind_parameter_index(v9, ":rowid");
    sqlite3_bind_int64(v9, v28, [v6 libraryID]);
    unsigned int v29 = sqlite3_step(v9);
    sqlite3_reset(v9);
    [v5 checkForConnectionErrorWithMessage:@"setting flags"];
    if (v29 == 101) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v29;
    }
  }
  else
  {
    uint64_t v16 = 1;
  }

  return v16;
}

void sub_1A7F94560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F94AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F94C48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F94DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F94F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9519C(_Unwind_Exception *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, ...)
{
  va_start(va, a13);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F95238()
{
}

void sub_1A7F9545C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F955C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7F957FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F959EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F95B60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F95CA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F95D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7F95E9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F95F60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F963A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id unlockedMailboxUidForMessage(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [v3 mailboxUidForMessage:v4];
  }
  else {
  id v5 = [v4 mailbox];
  }

  return v5;
}

void sub_1A7F96570(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F96710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F96C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  _Unwind_Resume(a1);
}

void sub_1A7F96FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F971E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7F973F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7F97500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F98530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,void *a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,void *a27)
{
  _Unwind_Resume(a1);
}

void sub_1A7F988A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F989B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F98A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F98AE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F98F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22)
{
  _Block_object_dispose((const void *)(v23 - 232), 8);

  _Block_object_dispose((const void *)(v23 - 200), 8);
  _Block_object_dispose((const void *)(v23 - 168), 8);

  _Block_object_dispose((const void *)(v23 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1A7F9C174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&STACK[0x568], 8);
  _Block_object_dispose(&STACK[0x598], 8);

  _Block_object_dispose(&STACK[0x5C8], 8);
  _Block_object_dispose(&STACK[0x5E8], 8);
  _Block_object_dispose(&STACK[0x608], 8);
  _Block_object_dispose(&STACK[0x628], 8);
  _Block_object_dispose(&STACK[0x648], 8);

  _Block_object_dispose(&STACK[0x678], 8);
  _Block_object_dispose(&STACK[0x6A8], 8);

  _Block_object_dispose(&STACK[0x6D8], 8);
  _Block_object_dispose(&STACK[0x708], 8);

  _Block_object_dispose(&STACK[0x738], 8);
  _Block_object_dispose(&STACK[0x768], 8);

  _Unwind_Resume(a1);
}

void sub_1A7F9CFC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9D0DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9D174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9D20C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

sqlite3_int64 createRowidForMailbox(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  unint64_t v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  long long v14 = (sqlite3 *)[v10 sqlDB];
  int v15 = [v12 objectForKey:v11];
  uint64_t v16 = v15;
  if (v15)
  {
    sqlite3_int64 v17 = (int)[v15 intValue];
  }
  else
  {
    sqlite3_int64 insert_rowid = [v9 mailboxIDForURLString:v11];
    sqlite3_int64 v17 = *MEMORY[0x1E4F5FCC8];
    if (insert_rowid == *MEMORY[0x1E4F5FCC8])
    {
      id v27 = v11;
      int v19 = sqlite3_exec_printf(v14, "INSERT INTO mailboxes (url) values ('%q')", 0, 0, 0, [v27 UTF8String]);
      [v10 checkForConnectionErrorWithMessage:@"inserting mailbox URL"];
      if (!v19)
      {
        sqlite3_int64 insert_rowid = sqlite3_last_insert_rowid(v14);
        _MFLockGlobalLock();
        uint64_t v20 = (void *)v9[4];
        id v21 = [MEMORY[0x1E4F28ED0] numberWithLongLong:insert_rowid];
        [v20 setObject:v27 forKeyedSubscript:v21];

        _MFUnlockGlobalLock();
        int v28 = (void *)[objc_alloc(MEMORY[0x1E4F1CB10]) initWithString:v27];
        unint64_t v22 = (void *)[objc_alloc(MEMORY[0x1E4F60310]) initWithURL:v28];
        uint64_t v23 = EDLibraryLog();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 134218242;
          sqlite3_int64 v30 = insert_rowid;
          __int16 v31 = 2114;
          int64_t v32 = v22;
          _os_log_impl(&dword_1A7EFF000, v23, OS_LOG_TYPE_DEFAULT, "Created rowid %lld from mailbox: %{public}@", buf, 0x16u);
        }

        int v24 = [v9 hookRegistry];
        [v24 persistenceIsAddingMailboxWithDatabaseID:insert_rowid objectID:v22 generationWindow:v13];
      }
    }
    if (insert_rowid != v17)
    {
      int v25 = EFStringWithInt64();
      [v12 setObject:v25 forKey:v11];

      sqlite3_int64 v17 = insert_rowid;
    }
  }

  return v17;
}

void sub_1A7F9D4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9D714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _writeDataHolderForMessageAndPart(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, int a8, void *a9)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v16 = a1;
  id v17 = a2;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a9;
  unint64_t v22 = [v20 data];
  if ([v19 isEqualToString:@"summary"])
  {
    uint64_t v23 = (void *)[[NSString alloc] initWithData:v22 encoding:4];
    uint64_t v24 = [v16 _setSummary:v23 forMessageWithRowID:a3 connection:v17];

    goto LABEL_14;
  }
  if (_shouldStoreInDatabase(v19, a8))
  {
    uint64_t v25 = [v16 _setMessageData:v22 libraryID:a3 part:v19 partial:a7 complete:a8 ^ 1u connection:v17];
LABEL_13:
    uint64_t v24 = v25;
    goto LABEL_14;
  }
  if (!v18) {
    __assert_rtn("_writeDataHolderForMessageAndPart", "MailMessageLibrary.m", 8439, "directory");
  }
  int v26 = MFPersistenceLog();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    int v32 = 134349570;
    uint64_t v33 = a3;
    __int16 v34 = 1026;
    int v35 = a7;
    __int16 v36 = 2114;
    id v37 = v19;
    _os_log_impl(&dword_1A7EFF000, v26, OS_LOG_TYPE_DEFAULT, "Writing body data for message database ID: %{public}lld, partial: %{public}d, part: %{public}@", (uint8_t *)&v32, 0x1Cu);
  }

  if (!v19)
  {
    uint64_t v25 = [v16 _writeEmlxFileOfType:a7 forAccount:v21 toDirectory:v18 withData:v20 protectionClass:2];
    goto LABEL_13;
  }
  if (a7)
  {
    sqlite3_int64 v30 = [MEMORY[0x1E4F28B00] currentHandler];
    __int16 v31 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _writeDataHolderForMessageAndPart(MFMailMessageLibrary *__strong, EDPersistenceDatabaseConnection *__strong, EMDatabaseID, EMGlobalMessageID, NSString *__strong, NSString *__strong, MFDataHolder *__strong, BOOL, BOOL, MailAccount *__strong)");
    [v30 handleFailureInFunction:v31 file:@"MailMessageLibrary.m" lineNumber:8442 description:@"cannot write partial MIME parts."];
  }
  id v27 = [v19 stringByAppendingPathExtension:@"emlxpart"];
  int v28 = [v18 stringByAppendingPathComponent:v27];

  uint64_t v24 = objc_msgSend(v16, "_writeEmlxFile:withData:protectionClass:purgeable:", v28, v20, 2, objc_msgSend(v21, "supportsPurge"));
LABEL_14:

  return v24;
}

void sub_1A7F9DA28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _protectionClassForMailbox(void *a1)
{
  id v1 = a1;
  if ([v1 mailboxType] == 6 || objc_msgSend(v1, "mailboxType") == 106)
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isSendLaterMailbox])
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 2;
  }

  return v2;
}

void sub_1A7F9DB0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9DB7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7F9DC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);
  _Unwind_Resume(a1);
}

void sub_1A7F9DCA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9DD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  id v16 = v15;

  _Unwind_Resume(a1);
}

void sub_1A7F9DF34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9E0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9E230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Block_object_dispose((const void *)(v15 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1A7F9E454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9E808(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7F9E944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9EBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9ED10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9F290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16)
{
  _Block_object_dispose((const void *)(v24 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A7F9F41C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9F674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9F7D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9F8BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7F9FAE0(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA047C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Block_object_dispose((const void *)(v16 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA071C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA0970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA0BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA0F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA1160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA1224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA12D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA13CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA1464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA16B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v29 - 120), 8);

  _Unwind_Resume(a1);
}

void sub_1A7FA18EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA1A68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA1CA4(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v19 - 120), 8);

  _Unwind_Resume(a1);
}

void sub_1A7FA2150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id a36)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FA22D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id mimePartFromFilename(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1
    && ([v1 pathExtension],
        id v3 = objc_claimAutoreleasedReturnValue(),
        char v4 = [v3 isEqualToString:@"emlxpart"],
        v3,
        (v4 & 1) != 0))
  {
    id v5 = [v2 stringByDeletingPathExtension];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_1A7FA2384(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA2474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA2580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA29DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA2C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA3038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA3194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA32F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA351C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA36C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA38A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA3A00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA3B10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA3C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA3F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA40A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA458C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA476C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA4A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA4C2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4CE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4D94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4E58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA4F30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA50EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA519C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA55CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA5788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA5964(_Unwind_Exception *a1)
{
  id v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FA5AEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA5CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA5E30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA5FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA6224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA637C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA6534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA6748(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA6930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA6B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA6CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA6E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA6FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA7224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA73F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA7520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA7674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA7810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA79BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FA7C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA7D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA7E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA7FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA820C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA8320(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA84C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA8838(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA8D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA8F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA90BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA9360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA94C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA9648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA9744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA9948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA9AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA9C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FA9DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAA318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAA4D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAA5EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAA680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAA850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAA9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAAA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAAB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAAC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FAAD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAADF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAAEB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAB088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FAB1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAB240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAB354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAB4EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAB628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FABAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FAC0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAC490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAC5EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAC738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAC7A4()
{
  JUMPOUT(0x1A7FAC794);
}

void sub_1A7FAC7B0()
{
}

void sub_1A7FAC908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAC9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FACD2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAD394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,void *a39,void *a40,void *a41,void *a42)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAD7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAD848()
{
}

void sub_1A7FAD8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAD984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FADA5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FADAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FADC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FADCD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7FADD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7FADE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7FADF5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAE160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAE240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAE368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAE534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAE808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FAE9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAEA60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAEC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, void *a10, uint64_t a11, ...)
{
  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FAEF70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAF0C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAF4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);

  _Unwind_Resume(a1);
}

void sub_1A7FAF738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAF854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAF8EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id filenameForMIMEPart(void *a1)
{
  id v1 = [a1 stringByAppendingPathExtension:@"emlxpart"];
  return v1;
}

void sub_1A7FAFBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAFD28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FAFF74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB009C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB0144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB01DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB0264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB0494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB06DC(_Unwind_Exception *a1)
{
  id v6 = v5;

  _Unwind_Resume(a1);
}

dispatch_data_t mappedDispatchDataFromFileURL(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x1AD0E3E00]();
    id v15 = 0;
    char v3 = [v1 getResourceValue:&v15 forKey:*MEMORY[0x1E4F1C5F8] error:0];
    id v4 = v15;
    uint64_t v5 = v4;
    if ((v3 & 1) != 0 && (size_t v6 = [v4 unsignedLongLongValue]) != 0)
    {
      unsigned int v7 = [MEMORY[0x1E4F28CB0] fileHandleForReadingFromURL:v1 error:0];
      id v8 = v7;
      if (v7 && (unint64_t v9 = mmap(0, v6, 1, 1, [v7 fileDescriptor], 0), (v10 = v9) != 0))
      {
        dispatch_data_t v11 = dispatch_data_create(v9, v6, 0, (dispatch_block_t)*MEMORY[0x1E4F143F8]);
        dispatch_data_t v12 = v11;
        if (v11) {
          id v13 = v11;
        }
        else {
          munmap(v10, v6);
        }
      }
      else
      {
        dispatch_data_t v12 = 0;
      }
    }
    else
    {
      dispatch_data_t v12 = 0;
    }
  }
  else
  {
    dispatch_data_t v12 = 0;
  }

  return v12;
}

void sub_1A7FB0894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB0A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB0F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB1284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB13B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB1858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FB1BFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB1E9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2260(_Unwind_Exception *exception_object)
{
}

void sub_1A7FB2344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB26E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2AA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FB2D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB2EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FB30F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB32BC(_Unwind_Exception *a1)
{
  size_t v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FB33C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB3594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB36C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB38D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FB3968()
{
  JUMPOUT(0x1A7FB3944);
}

void sub_1A7FB3974()
{
}

void sub_1A7FB3A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB3CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FB3E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB3FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB424C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB4470(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

uint64_t handleIterativeSearchRow(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v10 = *(id *)(a2 + 72);
  if (v10)
  {
    if (!*(unsigned char *)(a2 + 80)) {
      __assert_rtn("handleIterativeSearchRow", "MailMessageLibrary.m", 3052, "c->handlerWantsMessageObjects");
    }
    dispatch_data_t v11 = [*(id *)a2 _messageForRow:v7 options:*(unsigned int *)(a2 + 52) timestamp:*(void *)(a2 + 32) connection:v8 isProtectedDataAvailable:*(unsigned __int8 *)(a2 + 64) recipientsCache:v9];
    dispatch_data_t v12 = [v11 account];
    uint64_t v13 = objc_msgSend(*(id *)a2, "urlForMailboxID:", objc_msgSend(v11, "mailboxID"));
    uint64_t v14 = [v12 mailboxUidForURL:v13];

    uint64_t v15 = [v11 account];
    uint64_t v16 = [v15 storeForMailboxUid:v14];

    [v11 setMessageStore:v16];
    uint64_t v17 = [v10 handleMessage:v11];
  }
  else
  {
    dispatch_data_t v11 = [*(id *)a2 _messageForRow:v7 options:*(unsigned int *)(a2 + 52) timestamp:*(void *)(a2 + 32) connection:v8 isProtectedDataAvailable:*(unsigned __int8 *)(a2 + 64) recipientsCache:0];
    [*(id *)(a2 + 8) addObject:v11];
    uint64_t v17 = 1;
  }

  return v17;
}

void sub_1A7FB4678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB47B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB489C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB4978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB4B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB4CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB4DEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB4FF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB522C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB53B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB549C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB56CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB585C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB58D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB59EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB5AEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id POPUIDsForQuery(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v17 = 0;
  uint64_t v18 = &v17;
  uint64_t v19 = 0x3032000000;
  id v20 = __Block_byref_object_copy__6;
  id v21 = __Block_byref_object_dispose__6;
  id v22 = 0;
  id v7 = [a1 database];
  id v8 = [NSString stringWithUTF8String:"POPUIDsForQuery"];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = __POPUIDsForQuery_block_invoke;
  v13[3] = &unk_1E5D3C500;
  id v9 = v5;
  id v14 = v9;
  id v10 = v6;
  id v15 = v10;
  uint64_t v16 = &v17;
  objc_msgSend(v7, "__performReadWithCaller:usingBlock:", v8, v13);

  id v11 = (id)v18[5];
  _Block_object_dispose(&v17, 8);

  return v11;
}

void sub_1A7FB5CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FB5EA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB5FE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB610C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FB62E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB63DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB6444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB672C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB684C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A7FB68E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB6944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB6A90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB6BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A7FB6D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB6E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB73D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB75B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB7644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB78D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB7A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FB7E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB7F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A7FB7FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB8060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB80BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB81D0(_Unwind_Exception *exception_object)
{
}

void sub_1A7FB8314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB85C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB892C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB89D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB8B40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB8E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB8FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB905C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB90EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB91CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB924C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB9360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB9448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  dispatch_data_t v12 = v10;

  _Unwind_Resume(a1);
}

void sub_1A7FB94FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB9580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB9698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB9730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB99A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FB9AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB9C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FB9F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBA0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBA2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBA420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBA540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBA7DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBA9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_1A7FBAB54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBAC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBACEC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7FBAF84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBB0D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBB1D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBB338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBB3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  dispatch_data_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A7FBB4E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBB96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,void *a26,void *a27)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBBAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBBBE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBBEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBC324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBC4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBC624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBC764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBCA00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBCC28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBCD20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBD020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBD0AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBD240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBD320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBD43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBD510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBDF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _shouldStoreInDatabase(void *a1, int a2)
{
  id v3 = a1;
  if (_shouldStoreInDatabase_onceToken != -1) {
    dispatch_once(&_shouldStoreInDatabase_onceToken, &__block_literal_global_2702);
  }
  uint64_t v4 = [(id)_shouldStoreInDatabase_partsAlwaysStoredInDatabase containsObject:v3] | a2;

  return v4;
}

void sub_1A7FBE264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBE4E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBE6AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBE88C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBE97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEB7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBECAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBED08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBED90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEE34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEE9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEF10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEF60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEFA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBEFFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __tableNamesForTableOptions_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F60D88]);
  id v1 = (void *)tableNamesForTableOptions_cachedSets;
  tableNamesForTableOptions_cachedSets = (uint64_t)v0;
}

id __tableNamesForTableOptions_block_invoke_2(uint64_t a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  int v3 = *(_DWORD *)(a1 + 32);
  if ((v3 & 0x20) != 0)
  {
    uint64_t v4 = [MEMORY[0x1E4F60B40] messagesTableName];
    [v2 addObject:v4];

    int v3 = *(_DWORD *)(a1 + 32);
  }
  if ((v3 & 4) != 0)
  {
    [v2 addObject:@"subjects"];
    int v3 = *(_DWORD *)(a1 + 32);
  }
  if ((v3 & 8) != 0)
  {
    [v2 addObject:@"addresses"];
    int v3 = *(_DWORD *)(a1 + 32);
  }
  if ((v3 & 0x1000) != 0)
  {
    [v2 addObject:@"summaries"];
    if (_os_feature_enabled_impl())
    {
      if (EMIsGreymatterSupportedWithOverride()) {
        [v2 addObject:@"generated_summaries"];
      }
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if ((v5 & 0x100) != 0)
  {
    [v2 addObject:@"protected_message_data"];
    int v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x400) != 0)
  {
    [v2 addObject:@"conversations"];
    int v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x8000) != 0)
  {
    [v2 addObject:@"message_global_data"];
    int v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x10000) != 0)
  {
    [v2 addObject:@"senders"];
    int v5 = *(_DWORD *)(a1 + 32);
  }
  if ((v5 & 0x20000) != 0) {
    [v2 addObject:@"brand_indicators"];
  }
  if (_os_feature_enabled_impl())
  {
    int v6 = *(_DWORD *)(a1 + 32);
    if ((v6 & 0x80000) != 0)
    {
      id v7 = [MEMORY[0x1E4F60AA0] businessAddressesTableName];
      [v2 addObject:v7];

      int v6 = *(_DWORD *)(a1 + 32);
    }
    if ((v6 & 0x100000) != 0)
    {
      id v8 = [MEMORY[0x1E4F60AA0] businessesTableName];
      [v2 addObject:v8];
    }
  }
  return v2;
}

void sub_1A7FBF3C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id __readMailboxURLStringsFromDatabase_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  int v3 = objc_msgSend(NSString, "stringWithFormat:", @"%lld", objc_msgSend(v2, "longLongValue"));

  return v3;
}

void sub_1A7FBF458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __readMailboxURLStringsFromDatabase_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  ppStmt = 0;
  sqlite3_prepare_v2((sqlite3 *)[v3 sqlDB], (const char *)objc_msgSend(*(id *)(a1 + 32), "UTF8String"), -1, &ppStmt, 0);
  [v3 checkForConnectionErrorWithMessage:@"preparing statement for fetching mailbox URLs"];
  uint64_t v4 = ppStmt;
  if (ppStmt)
  {
    while (sqlite3_step(v4) == 100)
    {
      sqlite3_int64 v5 = sqlite3_column_int64(ppStmt, 0);
      int v6 = objc_msgSend(NSString, "stringWithUTF8String:", sqlite3_column_text(ppStmt, 1));
      id v7 = *(void **)(a1 + 40);
      id v8 = [MEMORY[0x1E4F28ED0] numberWithLongLong:v5];
      [v7 setObject:v6 forKeyedSubscript:v8];

      uint64_t v4 = ppStmt;
    }
    [v3 checkForConnectionErrorWithMessage:@"iterating results for mailbox URLs"];
    sqlite3_finalize(ppStmt);
  }

  return 1;
}

void sub_1A7FBF594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___dataForMessageAndPart_block_invoke_2(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = [v9 objectAtIndexedSubscript:0];
  uint64_t v4 = [v3 dataValue];

  if (v4)
  {
    uint64_t v5 = [objc_alloc(MEMORY[0x1E4F734C0]) initWithData:v4];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }
  if (*(void *)(a1 + 40))
  {
    id v8 = [v9 objectAtIndexedSubscript:1];
    **(unsigned char **)(a1 + 40) = [v8 BOOLValue];
  }
}

void sub_1A7FBF690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t __POPUIDsForQuery_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 preparedStatementForQueryString:*(void *)(a1 + 32)];
  uint64_t v5 = (sqlite3_stmt *)[v4 compiled];

  if (v5)
  {
    sqlite3_bind_text(v5, 1, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
    while (sqlite3_step(v5) == 100)
    {
      uint64_t v6 = objc_msgSend(NSString, "stringWithUTF8String:", sqlite3_column_text(v5, 0));
      id v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      if (!v7)
      {
        id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
        id v10 = *(void **)(v9 + 40);
        *(void *)(v9 + 40) = v8;

        id v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      }
      [v7 addObject:v6];
    }
    sqlite3_reset(v5);
    [v3 checkForConnectionErrorWithMessage:@"loading UIDs to delete"];
  }

  return 1;
}

void sub_1A7FBF7EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __EFGetElapsedTimeSinceAbsoluteTime_block_invoke()
{
  return mach_timebase_info((mach_timebase_info_t)&EFGetElapsedTimeSinceAbsoluteTime_sTimebaseInfo);
}

void ___shouldStoreInDatabase_block_invoke()
{
  v2[3] = *MEMORY[0x1E4F143B8];
  v2[0] = @"meeting";
  v2[1] = @"meeting data";
  v2[2] = @"meeting metadata";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:3];
  id v1 = (void *)_shouldStoreInDatabase_partsAlwaysStoredInDatabase;
  _shouldStoreInDatabase_partsAlwaysStoredInDatabase = v0;
}

void OUTLINED_FUNCTION_3_4(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x16u);
}

uint64_t OUTLINED_FUNCTION_7_2(uint64_t result, uint64_t a2, float a3)
{
  *(float *)Class result = a3;
  *(void *)(result + 4) = a2;
  *(_WORD *)(result + 12) = 2048;
  *(void *)(result + 14) = 0x4066800000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a2 = a4;
  *(void *)(a2 + 4) = a3;
  *(_WORD *)(a2 + 12) = 2112;
  *(void *)(a2 + 14) = result;
  return result;
}

void OUTLINED_FUNCTION_10(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

uint64_t OUTLINED_FUNCTION_11_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = a2;
  return result;
}

void OUTLINED_FUNCTION_12_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

unsigned char *OUTLINED_FUNCTION_13(unsigned char *result, unsigned char *a2)
{
  __CFString *result = 0;
  *a2 = 0;
  return result;
}

void sub_1A7FBFA78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBFBA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBFD0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FBFEA8(_Unwind_Exception *a1)
{
  uint64_t v6 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FBFF6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC0034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC00C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC0128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC0380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC04E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC0594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t MFCriterionTypeIsDate(unint64_t a1)
{
  return (a1 < 0x31) & (0x1880000001C00uLL >> a1);
}

void sub_1A7FC0758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC0844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC0CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC0E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC1234(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC13C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC1788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC1984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC1C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC1E10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC1F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC2074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC212C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC24A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC26C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC282C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC29CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC2C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC2D44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC2DC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC30F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC37E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3994(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FC3C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3E34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3ED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC3FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC42E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC43BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC44CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4558(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC45CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC46E8(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7FC47B0(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7FC483C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC48EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4E00(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FC4EDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC4F84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC501C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC509C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC5184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC5410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC55AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC5660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

id MFDescriptionForMessageFlags(unint64_t a1)
{
  id v2 = "read";
  if ((a1 & 1) == 0) {
    id v2 = "unread";
  }
  id v3 = objc_msgSend(MEMORY[0x1E4F28E78], "stringWithFormat:", @"0x%llx (%s"), a1, v2;
  uint64_t v4 = v3;
  if ((a1 & 0x200000) != 0) {
    [v3 appendFormat:@", junk"];
  }
  if ((a1 & 0x80000000) != 0) {
    [v4 appendFormat:@", not-junk"];
  }
  if ((a1 & 2) != 0) {
    [v4 appendFormat:@", deleted"];
  }
  if ((a1 & 4) != 0) {
    [v4 appendFormat:@", answered"];
  }
  if ((a1 & 0x100) != 0) {
    [v4 appendFormat:@", forwarded"];
  }
  if ((a1 & 0x200) != 0) {
    [v4 appendFormat:@", redirected"];
  }
  if ((a1 & 0x10) != 0)
  {
    [v4 appendFormat:@", flagged"];
    [v4 appendFormat:@", flagColor=%lu", (a1 >> 41) & 7];
  }
  if ((a1 & 0x1000000) != 0) {
    [v4 appendFormat:@", VIP"];
  }
  if ((a1 & 8) != 0) {
    [v4 appendFormat:@", encrypted"];
  }
  if ((a1 & 0x800000) != 0) {
    [v4 appendFormat:@", signed"];
  }
  if ((a1 & 0x20) != 0) {
    [v4 appendFormat:@", recent"];
  }
  if ((a1 & 0x40) != 0) {
    [v4 appendFormat:@", draft"];
  }
  if ((a1 & 0x80) != 0) {
    [v4 appendFormat:@", server search result"];
  }
  if ((a1 & 0x100000) != 0) {
    [v4 appendFormat:@", thread search result"];
  }
  if ((WORD1(a1) & 7) != 3) {
    [v4 appendFormat:@", priority=%x", WORD1(a1) & 7];
  }
  if ((a1 & 0x400000000) != 0) {
    [v4 appendFormat:@", partial"];
  }
  if ((a1 & 0x2000000000) != 0) {
    [v4 appendFormat:@", delivery"];
  }
  if ((a1 & 0x100000000) != 0) {
    [v4 appendFormat:@", temp UID"];
  }
  [v4 appendFormat:@""]);
  return v4;
}

void sub_1A7FC5888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _junkLevelForFlags(unint64_t a1)
{
  if ((a1 & 0x200000) != 0) {
    return 1;
  }
  else {
    return (a1 >> 30) & 2;
  }
}

uint64_t MFMessageFlagsForECMessageFlags(void *a1)
{
  id v1 = a1;
  unsigned int v2 = [v1 read];
  int v3 = [v1 deleted];
  int v4 = [v1 replied];
  int v5 = [v1 flagged];
  uint64_t v6 = v2;
  if (v3) {
    uint64_t v6 = v2 | 2;
  }
  if (v4) {
    v6 |= 4uLL;
  }
  if (v5) {
    unint64_t v7 = v6 | 0x10;
  }
  else {
    unint64_t v7 = v6;
  }
  if ([v1 flagColor]) {
    unint64_t v7 = v7 & 0xFFFFF1FFFFFFFFFFLL | (([v1 flagColor] & 7) << 41);
  }
  int v8 = [v1 draft];
  int v9 = [v1 forwarded];
  int v10 = [v1 redirected];
  uint64_t v11 = [v1 junkLevel];
  uint64_t v12 = [v1 junkLevel];
  uint64_t v13 = v7 | 0x40;
  if (!v8) {
    uint64_t v13 = v7;
  }
  if (v9) {
    v13 |= 0x100uLL;
  }
  if (v10) {
    v13 |= 0x200uLL;
  }
  if (v11 == 1) {
    v13 |= 0x200000uLL;
  }
  if (v12 == 2) {
    uint64_t v14 = v13 | 0x80000000;
  }
  else {
    uint64_t v14 = v13;
  }

  return v14;
}

void sub_1A7FC59C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MFFlagChangeObjectForFlagChangeDictionary(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc(MEMORY[0x1E4F608B8]);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __MFFlagChangeObjectForFlagChangeDictionary_block_invoke;
  v6[3] = &unk_1E5D3D920;
  id v3 = v1;
  id v7 = v3;
  int v4 = (void *)[v2 initWithBuilder:v6];

  return v4;
}

void sub_1A7FC5A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void __MFFlagChangeObjectForFlagChangeDictionary_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  v9[0] = 0;
  v9[1] = v9;
  void v9[2] = 0x2020000000;
  char v10 = 0;
  int v4 = *(void **)(a1 + 32);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __MFFlagChangeObjectForFlagChangeDictionary_block_invoke_2;
  v6[3] = &unk_1E5D3D8F8;
  id v7 = v3;
  int v8 = v9;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v6];

  _Block_object_dispose(v9, 8);
}

void sub_1A7FC5B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __MFFlagChangeObjectForFlagChangeDictionary_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if ([v7 isEqualToString:@"MessageIsRead"])
  {
    objc_msgSend(*(id *)(a1 + 32), "changesReadTo:", objc_msgSend(v5, "BOOLValue"));
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageIsDeleted"])
  {
    objc_msgSend(*(id *)(a1 + 32), "changesDeletedTo:", objc_msgSend(v5, "BOOLValue"));
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageWasRepliedTo"])
  {
    objc_msgSend(*(id *)(a1 + 32), "changesRepliedTo:", objc_msgSend(v5, "BOOLValue"));
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageIsFlagged"])
  {
    objc_msgSend(*(id *)(a1 + 32), "changesFlaggedTo:", objc_msgSend(v5, "BOOLValue"));
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageFlagColor"])
  {
    objc_msgSend(*(id *)(a1 + 32), "changesFlagColorTo:", objc_msgSend(v5, "unsignedIntegerValue"));
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageWasForwarded"])
  {
    objc_msgSend(*(id *)(a1 + 32), "changesForwardedTo:", objc_msgSend(v5, "BOOLValue"));
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageWasRedirected"])
  {
    objc_msgSend(*(id *)(a1 + 32), "changesRedirectedTo:", objc_msgSend(v5, "BOOLValue"));
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageIsJunk"])
  {
    if ([v5 BOOLValue])
    {
      uint64_t v6 = 1;
LABEL_21:
      [*(id *)(a1 + 32) changesJunkLevelTo:v6];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
      goto LABEL_26;
    }
LABEL_22:
    if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
      [*(id *)(a1 + 32) changesJunkLevelTo:0];
    }
    goto LABEL_26;
  }
  if ([v7 isEqualToString:@"MessageIsNotJunk"])
  {
    if ([v5 BOOLValue])
    {
      uint64_t v6 = 2;
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  if ([v7 isEqualToString:@"MessageChangeReason"]) {
    objc_msgSend(*(id *)(a1 + 32), "setReason:", objc_msgSend(v5, "integerValue"));
  }
LABEL_26:
}

void sub_1A7FC5DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id MFFlagChangeDictionaryForFlagChange(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  if ([v1 readChanged])
  {
    id v3 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithBool:", objc_msgSend(v1, "read"));
    [v2 setObject:v3 forKeyedSubscript:@"MessageIsRead"];
  }
  if ([v1 deletedChanged])
  {
    int v4 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithBool:", objc_msgSend(v1, "deleted"));
    [v2 setObject:v4 forKeyedSubscript:@"MessageIsDeleted"];
  }
  if ([v1 repliedChanged])
  {
    id v5 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithBool:", objc_msgSend(v1, "replied"));
    [v2 setObject:v5 forKeyedSubscript:@"MessageWasRepliedTo"];
  }
  if ([v1 flaggedChanged])
  {
    uint64_t v6 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithBool:", objc_msgSend(v1, "flagged"));
    [v2 setObject:v6 forKeyedSubscript:@"MessageIsFlagged"];
  }
  if ([v1 flagColorChanged])
  {
    id v7 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithUnsignedInteger:", objc_msgSend(v1, "flagColor"));
    [v2 setObject:v7 forKeyedSubscript:@"MessageFlagColor"];
  }
  if ([v1 forwardedChanged])
  {
    int v8 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithBool:", objc_msgSend(v1, "forwarded"));
    [v2 setObject:v8 forKeyedSubscript:@"MessageWasForwarded"];
  }
  if ([v1 redirectedChanged])
  {
    int v9 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithBool:", objc_msgSend(v1, "redirected"));
    [v2 setObject:v9 forKeyedSubscript:@"MessageWasRedirected"];
  }
  if ([v1 junkLevelChanged])
  {
    uint64_t v10 = [v1 junkLevel];
    if (v10 == 2)
    {
      [v2 setObject:MEMORY[0x1E4F1CC28] forKeyedSubscript:@"MessageIsJunk"];
      uint64_t v12 = MEMORY[0x1E4F1CC38];
    }
    else
    {
      if (v10 == 1) {
        uint64_t v11 = MEMORY[0x1E4F1CC38];
      }
      else {
        uint64_t v11 = MEMORY[0x1E4F1CC28];
      }
      [v2 setObject:v11 forKeyedSubscript:@"MessageIsJunk"];
      uint64_t v12 = MEMORY[0x1E4F1CC28];
    }
    [v2 setObject:v12 forKeyedSubscript:@"MessageIsNotJunk"];
  }
  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithInteger:", objc_msgSend(v1, "reason"));
  [v2 setObject:v13 forKeyedSubscript:@"MessageChangeReason"];

  return v2;
}

void sub_1A7FC60F4(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

id MFFlagChangeDictionaryStrippingServerFlags(void *a1)
{
  v4[9] = *MEMORY[0x1E4F143B8];
  id v1 = (void *)[a1 mutableCopy];
  v4[0] = @"MessageIsRead";
  v4[1] = @"MessageIsDeleted";
  _DWORD v4[2] = @"MessageWasRepliedTo";
  v4[3] = @"MessageIsFlagged";
  void v4[4] = @"MessageFlagColor";
  v4[5] = @"MessageWasForwarded";
  v4[6] = @"MessageWasRedirected";
  v4[7] = @"MessageIsJunk";
  v4[8] = @"MessageIsNotJunk";
  id v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:9];
  [v1 removeObjectsForKeys:v2];

  return v1;
}

void sub_1A7FC6234(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void MFGetFlagsAndMaskForFlagChange(void *a1, uint64_t *a2, uint64_t *a3)
{
  id v27 = a1;
  unsigned int v3 = [v27 read];
  int v4 = [v27 deleted];
  int v5 = [v27 replied];
  int v6 = [v27 flagged];
  uint64_t v7 = v3;
  if (v4) {
    uint64_t v7 = v3 | 2;
  }
  if (v5) {
    v7 |= 4uLL;
  }
  if (v6) {
    unint64_t v8 = v7 | 0x10;
  }
  else {
    unint64_t v8 = v7;
  }
  if ([v27 flagColor]) {
    unint64_t v8 = v8 & 0xFFFFF1FFFFFFFFFFLL | (([v27 flagColor] & 7) << 41);
  }
  int v24 = [v27 draft];
  int v23 = [v27 forwarded];
  int v22 = [v27 redirected];
  uint64_t v21 = [v27 junkLevel];
  uint64_t v9 = [v27 junkLevel];
  unsigned int v10 = [v27 readChanged];
  int v11 = [v27 deletedChanged];
  int v12 = [v27 repliedChanged];
  int v13 = [v27 flaggedChanged];
  int v14 = [v27 flagColorChanged];
  int v15 = [v27 draftChanged];
  int v16 = [v27 forwardedChanged];
  int v17 = [v27 redirectedChanged];
  int v18 = [v27 junkLevelChanged];
  uint64_t v19 = v10;
  if (v11) {
    uint64_t v19 = v10 | 2;
  }
  if (v12) {
    v19 |= 4uLL;
  }
  if (v13) {
    v19 |= 0x10uLL;
  }
  if (v14) {
    v19 |= 0xE0000000000uLL;
  }
  if (v15) {
    v19 |= 0x40uLL;
  }
  if (v16) {
    v19 |= 0x100uLL;
  }
  if (v17) {
    v19 |= 0x200uLL;
  }
  uint64_t v20 = v8 | 0x40;
  if (!v24) {
    uint64_t v20 = v8;
  }
  if (v23) {
    v20 |= 0x100uLL;
  }
  if (v22) {
    v20 |= 0x200uLL;
  }
  if (v21 == 1) {
    v20 |= 0x200000uLL;
  }
  if (v9 == 2) {
    v20 |= 0x80000000uLL;
  }
  if (v18) {
    v19 |= 0x80200000uLL;
  }
  *a2 = v20;
  *a3 = v19;
}

void sub_1A7FC6494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  _Unwind_Resume(a1);
}

id MFMailDirectoryURL()
{
  if (MFMailDirectoryURL_onceToken != -1) {
    dispatch_once(&MFMailDirectoryURL_onceToken, &__block_literal_global_17);
  }
  uint64_t v0 = (void *)MFMailDirectoryURL___MailDirURL;
  return v0;
}

void __MFMailDirectoryURL_block_invoke()
{
  id v0 = objc_alloc(MEMORY[0x1E4F1CB10]);
  MFMailDirectory();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = objc_msgSend(v0, "initFileURLWithPath:");
  id v2 = (void *)MFMailDirectoryURL___MailDirURL;
  MFMailDirectoryURL___MailDirURL = v1;
}

void sub_1A7FC656C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t MFReadLoggingDefaults()
{
  id v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  [v0 synchronize];

  return +[MFConnection readLoggingDefaults];
}

void sub_1A7FC65D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC6644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC67C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC6A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t (*MFComparatorFunctionForSortOrder(void *a1))(void *a1, void *a2, unsigned __int8 *a3)
{
  id v1 = a1;
  uint64_t v2 = 0;
  id v3 = _compareMsgsByReadStatus;
  int v4 = @"readstatus";
  while (([(__CFString *)v4 isEqualToString:v1] & 1) == 0)
  {
    if (v2 == 64)
    {
      id v3 = 0;
      break;
    }
    int v4 = *(__CFString **)((char *)&comparators + v2 + 16);
    id v3 = *(uint64_t (**)(void *, void *, unsigned __int8 *))((char *)&comparators + v2 + 24);
    v2 += 16;
  }
  if (!v3) {
    id v3 = (uint64_t (*)(void *, void *, unsigned __int8 *))_compareMsgsByDateReceived;
  }

  return v3;
}

void sub_1A7FC6B80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _compareMsgsByReadStatus(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = [v5 messageFlags];
  uint64_t v8 = [v6 messageFlags];
  if (v7 == v8) {
    goto LABEL_2;
  }
  int v10 = *a3;
  if ((v7 & 1) != 0 && (v8 & 1) == 0) {
    goto LABEL_5;
  }
  if ((v8 & 1) != 0 && (v7 & 1) == 0
    || (char v13 = [v5 messageFlags], v14 = objc_msgSend(v6, "messageFlags"), (v13 & 4) != 0)
    && (v14 & 4) == 0)
  {
LABEL_10:
    BOOL v11 = v10 == 0;
    uint64_t v12 = -1;
LABEL_11:
    if (v11) {
      uint64_t v9 = v12;
    }
    else {
      uint64_t v9 = -v12;
    }
    goto LABEL_14;
  }
  if ((v14 & 4) != 0 && (v13 & 4) == 0) {
    goto LABEL_5;
  }
  if ((v13 & 4) != 0)
  {
LABEL_2:
    uint64_t v9 = _compareMsgsByDate(v5, v6, a3);
    goto LABEL_14;
  }
  __int16 v16 = [v5 messageFlags];
  __int16 v17 = [v6 messageFlags];
  if ((v16 & 0x100) != 0 && (v17 & 0x100) == 0) {
    goto LABEL_10;
  }
  if ((v17 & 0x100) != 0 && (v16 & 0x100) == 0)
  {
LABEL_5:
    BOOL v11 = v10 == 0;
    uint64_t v12 = 1;
    goto LABEL_11;
  }
  if ((v16 & 0x100) != 0) {
    goto LABEL_2;
  }
  __int16 v18 = [v5 messageFlags];
  __int16 v19 = [v6 messageFlags];
  if ((v18 & 0x200) != 0 && (v19 & 0x200) == 0) {
    goto LABEL_10;
  }
  if ((v19 & 0x200) == 0) {
    goto LABEL_2;
  }
  uint64_t v9 = v10 ? -1 : 1;
  if ((v18 & 0x200) != 0) {
    goto LABEL_2;
  }
LABEL_14:

  return v9;
}

void sub_1A7FC6CC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _compareMsgsBySender(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = [v5 senderAddressComment];
  uint64_t v8 = [v6 senderAddressComment];
  if (v7 == v8) {
    goto LABEL_25;
  }
  int v9 = *a3;
  id v10 = v7;
  id v11 = v8;
  uint64_t v12 = v11;
  if (v10 && v11)
  {
    if (v9)
    {
      id v11 = v10;
      id v13 = v12;
    }
    else
    {
      id v13 = v10;
    }
    uint64_t v14 = [v11 localizedCaseInsensitiveCompare:v13];
  }
  else
  {
    uint64_t v15 = 1;
    if (v9) {
      uint64_t v15 = -1;
    }
    uint64_t v16 = -1;
    if (v9) {
      uint64_t v16 = 1;
    }
    if (v11) {
      BOOL v17 = 1;
    }
    else {
      BOOL v17 = v10 == 0;
    }
    if (v17) {
      uint64_t v16 = 0;
    }
    BOOL v18 = v10 || v11 == 0;
    uint64_t v14 = v18 ? v16 : v15;
  }

  if (!v14) {
LABEL_25:
  }
    uint64_t v14 = _compareMsgsByDate(v5, v6, a3);

  return v14;
}

void sub_1A7FC6E04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _compareMsgsByFlags(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5 = a1;
  id v6 = a2;
  char v7 = [v5 messageFlags];
  char v8 = [v6 messageFlags];
  int v9 = *a3;
  if ((v7 & 0x10) != 0 || (v8 & 0x10) == 0)
  {
    if ((v8 & 0x10) != 0 || (!*a3 ? (uint64_t v10 = -1) : (uint64_t v10 = 1), (v7 & 0x10) == 0))
    {
      int v11 = [v5 priority];
      int v12 = [v6 priority];
      uint64_t v13 = 1;
      if (v9) {
        uint64_t v13 = -1;
      }
      uint64_t v14 = -1;
      if (v9) {
        uint64_t v14 = 1;
      }
      if (v12 <= v11) {
        uint64_t v14 = 0;
      }
      if (v12 >= v11) {
        uint64_t v10 = v14;
      }
      else {
        uint64_t v10 = v13;
      }
      if (!v10) {
        uint64_t v10 = _compareMsgsByDate(v5, v6, a3);
      }
    }
  }
  else if (*a3)
  {
    uint64_t v10 = -1;
  }
  else
  {
    uint64_t v10 = 1;
  }

  return v10;
}

void sub_1A7FC6F20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _compareMsgsByDate(void *a1, void *a2, unsigned __int8 *a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = *a3;
  if (a3[1])
  {
    [v5 dateReceivedAsTimeIntervalSince1970];
    double v9 = v8;
    [v6 dateReceivedAsTimeIntervalSince1970];
  }
  else
  {
    [v5 dateSentAsTimeIntervalSince1970];
    double v9 = v11;
    [v6 dateSentAsTimeIntervalSince1970];
  }
  if (v9 < v10) {
    goto LABEL_5;
  }
  if (v9 > v10)
  {
    BOOL v12 = v7 == 0;
    uint64_t v13 = -1;
LABEL_8:
    if (v12) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = -v13;
    }
    goto LABEL_11;
  }
  if ((objc_opt_respondsToSelector() & 1) == 0 || (objc_opt_respondsToSelector() & 1) == 0)
  {
    uint64_t v14 = 0;
    goto LABEL_11;
  }
  uint64_t v16 = [v5 libraryID];
  uint64_t v17 = [v6 libraryID];
  if (v16 < v17)
  {
LABEL_5:
    BOOL v12 = v7 == 0;
    uint64_t v13 = 1;
    goto LABEL_8;
  }
  uint64_t v18 = -1;
  if (v7) {
    uint64_t v18 = 1;
  }
  if (v16 <= v17) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v18;
  }
LABEL_11:

  return v14;
}

void sub_1A7FC7054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _ef_log_MFMessageWriter()
{
  if (_ef_log_MFMessageWriter_onceToken != -1) {
    dispatch_once(&_ef_log_MFMessageWriter_onceToken, &__block_literal_global_18);
  }
  id v0 = (void *)_ef_log_MFMessageWriter_log;
  return v0;
}

void sub_1A7FC71B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC7304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void _appendPartHeadersToConsumer(void *a1, void *a2, const __CFDictionary *a3, void *a4)
{
  id v16 = a1;
  id v7 = a2;
  id v8 = a4;
  double v9 = (void *)[objc_allocWithZone(MEMORY[0x1E4F73550]) init];
  double v10 = CFDictionaryGetValue(a3, v7);
  double v11 = [v7 type];
  if (([@"multipart" isEqualToString:v11] & 1) != 0 || objc_msgSend(v10, "length")) {
    goto LABEL_3;
  }
  [v7 range];
  uint64_t v14 = v13;

  if (v14)
  {
    [v7 range];
    if (v15 != 0x7FFFFFFFFFFFFFFFLL)
    {
      [v7 range];
      double v11 = EFStringWithUnsignedInteger();
      [v9 setHeader:v11 forKey:@"x-apple-content-length"];
LABEL_3:

      goto LABEL_4;
    }
    [v9 setHeader:@"unknown" forKey:@"x-apple-content-length"];
  }
LABEL_4:
  appendHeadersToMessageHeaders(v16, v7, v9);
  BOOL v12 = [v9 encodedHeaders];
  if ([v12 length]) {
    MFDataConsumerConsumeCompleteData();
  }
}

void sub_1A7FC74C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void _appendPartDataToConsumer(void *a1, void *a2, void *a3, const __CFDictionary *a4, uint64_t a5)
{
  id v36 = a1;
  id v9 = a2;
  id v37 = a3;
  double v10 = CFDictionaryGetValue(a4, v9);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = v10;

    uint64_t v12 = CFDictionaryGetValue(a4, v11);

    id v9 = v11;
    double v10 = (void *)v12;
  }
  if (v10 && [v10 length])
  {
    uint64_t v13 = [v9 contentTransferEncoding];
    int v14 = [v13 isEqualToString:@"base64"];

    if (v14)
    {
      uint64_t v15 = (void *)[objc_alloc(MEMORY[0x1E4F73490]) initWithConsumer:v37];
      [v15 setStandardLineBreak];
      [v15 setAllowSlash:1];
      [v15 setPadChar:61];
      MFDataConsumerConsumeCompleteData();
      [v15 done];
    }
    else
    {
      MFDataConsumerConsumeCompleteData();
    }
  }
  id v16 = [v9 type];
  int v17 = [@"multipart" isEqualToString:v16];

  uint64_t v18 = [v9 firstChildPart];
  if (v18) {
    int v19 = 1;
  }
  else {
    int v19 = v17;
  }
  if (v19 == 1)
  {
    uint64_t v33 = v9;
    __int16 v31 = v10;
    if (v17
      && ([v9 bodyParameterForKey:@"boundary"],
          id v16 = objc_claimAutoreleasedReturnValue(),
          uint64_t v20 = (const char *)objc_msgSend(v16, "ef_lossyDefaultCStringBytes"),
          v16,
          v20))
    {
      int v35 = v20;
      size_t v34 = strlen(v20);
      char v21 = 0;
    }
    else
    {
      size_t v34 = 0;
      int v35 = 0;
      char v21 = 1;
    }
    uint64_t v32 = *MEMORY[0x1E4F73430];
    while (1)
    {
      if (!v18)
      {
        id v9 = v33;
        double v10 = v31;
        if ((v21 & 1) == 0)
        {
          id v30 = objc_alloc_init(MEMORY[0x1E4F73540]);
          objc_msgSend(v30, "mf_appendCString:", "\n--");
          [v30 appendBytes:v35 length:v34];
          objc_msgSend(v30, "mf_appendCString:", "--\n");
          MFDataConsumerConsumeCompleteData();
        }
        break;
      }
      int v22 = (void *)MEMORY[0x1AD0E3E00]();
      int v23 = CFDictionaryGetValue(a4, v18);
      if (!v23 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {
        id v24 = v18;

        int v23 = v24;
      }
      if ((a5 & 1) == 0)
      {
        if (v17
          && ([v33 subtype],
              id v16 = (id)objc_claimAutoreleasedReturnValue(),
              [@"signed" isEqualToString:v16]))
        {
        }
        else
        {
          id v27 = [v23 type];
          if (([v27 isEqual:@"multipart"] & 1) != 0
            || objc_msgSend((id)CFDictionaryGetValue(a4, v23), "length"))
          {
            BOOL v28 = 1;
          }
          else
          {
            uint64_t v29 = [v23 bodyParameterForKey:v32];
            BOOL v28 = v29 != 0;
          }
          if (v17)
          {

            if (!v28) {
              goto LABEL_25;
            }
          }
          else if (!v28)
          {
            goto LABEL_25;
          }
        }
      }
      if ((v21 & 1) == 0)
      {
        id v25 = objc_alloc_init(MEMORY[0x1E4F73540]);
        objc_msgSend(v25, "mf_appendCString:", "\n--");
        [v25 appendBytes:v35 length:v34];
        [v25 appendBytes:"\n" length:1];
        MFDataConsumerConsumeCompleteData();
        _appendPartHeadersToConsumer(v36, v23, a4, v37);
      }
      _appendPartDataToConsumer(v36, v23, v37, a4, a5);
LABEL_25:
      if (v21)
      {
        uint64_t v26 = 0;
      }
      else
      {
        uint64_t v26 = [v18 nextSiblingPart];
      }

      uint64_t v18 = (void *)v26;
    }
  }
}

void sub_1A7FC7940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, id a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC7AFC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(a1);
    _ef_log_MFMessageWriter();
    uint64_t v15 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = [v14 reason];
      LODWORD(a9) = 138412290;
      *(void *)((char *)&a9 + 4) = v16;
      _os_log_impl(&dword_1A7EFF000, v15, OS_LOG_TYPE_DEFAULT, "Exception raised during message encoding: %@", (uint8_t *)&a9, 0xCu);
    }
    objc_end_catch();
    JUMPOUT(0x1A7FC7AB4);
  }

  _Unwind_Resume(a1);
}

id _createPartAndDataForString(void *a1, void *a2, void *a3, void *a4, __CFDictionary *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v13 = v12;
  if (v10)
  {
    int v14 = [v12 isEqualToString:@"html"];
    if (v14)
    {
      uint64_t v15 = _stringByReplacingNonBreakingSpacesWithString(v10, @"&nbsp");;

      id v10 = (id)v15;
    }
    if (v11)
    {
      [v11 cfStringEncoding];
      id v16 = (void *)MFCreateDataWithString();
    }
    else
    {
      id v16 = 0;
    }
    if (v16) {
      char v19 = 1;
    }
    else {
      char v19 = v14;
    }
    uint64_t v20 = v11;
    if ((v19 & 1) == 0)
    {
      uint64_t v21 = [MEMORY[0x1E4F73528] charsetForEncoding:1536];

      [v11 cfStringEncoding];
      id v16 = (void *)MFCreateDataWithString();
      uint64_t v20 = (void *)v21;
    }
    if (v16) {
      goto LABEL_19;
    }
    if ((v14 & 1) == 0)
    {
      uint64_t v22 = _stringByReplacingNonBreakingSpacesWithString(v10, @" ");

      id v10 = (id)v22;
    }
    int v17 = objc_msgSend(v10, "mf_bestMimeCharsetForMessageDeliveryUsingSubtype:", v13);

    [v11 cfStringEncoding];
    id v16 = (void *)MFCreateDataWithString();
    if (v16)
    {
      uint64_t v20 = v17;
LABEL_19:
      id v18 = objc_alloc_init(MEMORY[0x1E4F73530]);
      [v18 setType:@"text"];
      [v18 setSubtype:v13];
      int v23 = [v20 charsetName];
      [v18 setBodyParameter:v23 forKey:@"charset"];

      CFDictionarySetValue(a5, v18, v16);
      int v17 = v20;
      goto LABEL_20;
    }
  }
  else
  {
    int v17 = 0;
    id v16 = 0;
  }
  id v18 = 0;
LABEL_20:
  id v24 = v18;

  return v24;
}

void sub_1A7FC7E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSObject *_createOutgoingMessageFromTopLevelMimePart(void *a1, void *a2, void *a3, __CFDictionary *a4)
{
  id v6 = a1;
  id v7 = a2;
  id v8 = a3;
  id v9 = v8;
  if (v8) {
    id v82 = v8;
  }
  else {
    id v82 = objc_alloc_init(MEMORY[0x1E4F73550]);
  }
  v78 = _makeOutgoingMessageBody(v6);
  id v10 = [v78 message];
  v79 = +[MFActivityMonitor currentMonitor];
  [v10 setMessageFlags:1];
  [v10 setMutableHeaders:v82];
  id v11 = (void *)[v9 copyAddressListForResentFrom];
  if (![v11 count])
  {
    uint64_t v12 = [v9 copyAddressListForSender];

    id v11 = (void *)v12;
  }
  if ([v11 count])
  {
    id v13 = [v11 objectAtIndex:0];
    int v14 = [v13 emailAddressValue];
    uint64_t v15 = [v14 simpleAddress];
    id v16 = v15;
    if (v15)
    {
      v80 = v15;
    }
    else
    {
      v80 = [v13 stringValue];
    }
  }
  else
  {
    v80 = &stru_1EFF11268;
  }
  int v17 = [v6[4] objectForKey:@"ShouldSign"];
  int v18 = [v17 intValue];

  char v19 = [v6[4] objectForKey:@"ShouldEncrypt"];
  int v20 = [v19 intValue];

  if (!v20 || !_os_feature_enabled_impl())
  {
LABEL_28:
    if (!v9) {
      goto LABEL_38;
    }
    goto LABEL_29;
  }
  uint64_t v21 = [v6[4] objectForKey:@"AddressMetadata"];
  if ([MEMORY[0x1E4F602E0] preferenceEnabled:35])
  {

LABEL_16:
    uint64_t v22 = *MEMORY[0x1E4F60738];
    v74 = [v9 firstHeaderForKey:*MEMORY[0x1E4F60738]];
    id v72 = objc_alloc_init(MEMORY[0x1E4F73550]);
    [v72 setHeader:v74 forKey:v22];
    v73 = (void *)[v6 _newDataForMimePart:v7 withPartData:a4 andHeaders:v72];
    int v23 = objc_msgSend(v6, "_mimePartWithType:subtype:bodyData:partMap:subparts:", @"message", @"rfc822");
    [v23 setDisposition:@"attachment"];
    [v23 setDispositionParameter:@"message.eml" forKey:@"filename"];
    if (v73 && v23)
    {
      id v24 = v23;

      v75 = v24;
      id v25 = [MEMORY[0x1E4F28B50] mainBundle];
      uint64_t v26 = [v25 localizedStringForKey:@"ENCRYPTED_SUBJECT_LINE_MESSAGE" value:&stru_1EFF11268 table:@"Main"];
      [v9 setHeader:v26 forKey:v22];

      id v27 = _ef_log_MFMessageWriter();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1A7EFF000, v27, OS_LOG_TYPE_DEFAULT, "Wrapped message as message/rfc822", buf, 2u);
      }
      id v7 = v75;
    }
    else
    {
      uint64_t v29 = _ef_log_MFMessageWriter();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        _createOutgoingMessageFromTopLevelMimePart_cold_5();
      }

      id v27 = v10;
      id v10 = 0;
    }

    goto LABEL_28;
  }
  if ([MEMORY[0x1E4F602E0] preferenceEnabled:29])
  {
    char v28 = objc_msgSend(v21, "ef_all:", &__block_literal_global_347_0);

    if ((v28 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_16;
  }

  if (!v9) {
    goto LABEL_38;
  }
LABEL_29:
  if (v10 && v18)
  {
    id v30 = (void *)[v6 newDataForMimePart:v7 withPartData:a4];
    if (v30 && ([v79 shouldCancel] & 1) == 0)
    {
      id v38 = v6[4];
      id v84 = 0;
      v76 = v7;
      __int16 v31 = [v7 newSignedPartWithData:v30 sender:v80 compositionSpecification:v38 signatureData:&v84];
      uint64_t v33 = v84;
      if ([MEMORY[0x1E4F602E0] preferenceEnabled:28]
        && [MEMORY[0x1E4F602E0] preferenceEnabled:30])
      {
        if (v33 && v31) {
          CFDictionarySetValue(a4, v31, v33);
        }
        long long v39 = _ef_log_MFMessageWriter();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A7EFF000, v39, OS_LOG_TYPE_DEFAULT, "Signed message as application/pkcs7-mime", buf, 2u);
        }
      }
      else
      {
        uint64_t v44 = [v31 firstChildPart];
        long long v39 = [v44 nextSiblingPart];

        if (v33 && v39) {
          CFDictionarySetValue(a4, v39, v33);
        }
        long long v45 = _ef_log_MFMessageWriter();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A7EFF000, v45, OS_LOG_TYPE_DEFAULT, "Signed message as multipart/signed", buf, 2u);
        }
      }
      if (v31) {
        goto LABEL_37;
      }
      long long v46 = _ef_log_MFMessageWriter();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
        _createOutgoingMessageFromTopLevelMimePart_cold_4();
      }

      uint64_t v32 = v10;
    }
    else
    {
      __int16 v31 = v7;
      uint64_t v32 = _ef_log_MFMessageWriter();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        _createOutgoingMessageFromTopLevelMimePart_cold_3();
      }
      uint64_t v33 = v10;
    }

    id v10 = 0;
LABEL_37:

    id v7 = v31;
  }
LABEL_38:
  if (v10 && v20)
  {
    size_t v34 = (void *)[v6 newDataForMimePart:v7 withPartData:a4];
    if (v34 && ([v79 shouldCancel] & 1) == 0)
    {
      id v40 = v6[4];
      id v83 = 0;
      long long v41 = v7;
      long long v42 = (void *)[v7 newEncryptedPartWithData:v34 compositionSpecification:v40 encryptedData:&v83];
      id v37 = v83;
      id v36 = v42;

      if (v37 && v36)
      {
        CFDictionarySetValue(a4, v36, v37);
        long long v43 = _ef_log_MFMessageWriter();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A7EFF000, v43, OS_LOG_TYPE_DEFAULT, "Encrypted message as application/pkcs7-mime", buf, 2u);
        }
      }
      else
      {
        v47 = _ef_log_MFMessageWriter();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR)) {
          _createOutgoingMessageFromTopLevelMimePart_cold_2();
        }

        long long v43 = v10;
        id v10 = 0;
      }

      int v35 = v36;
    }
    else
    {
      int v35 = v7;
      id v36 = _ef_log_MFMessageWriter();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        _createOutgoingMessageFromTopLevelMimePart_cold_1();
      }
      id v37 = v10;
      id v10 = 0;
    }

    id v7 = v35;
  }
  if (!v9 || !v10)
  {
    if (!v10) {
      goto LABEL_107;
    }
    goto LABEL_98;
  }
  v48 = (void *)MEMORY[0x1AD0E3E00]();
  v77 = v7;
  v49 = (void *)[v9 copyAddressListForResentFrom];

  uint64_t v50 = [v49 count];
  if (v50)
  {
    id v11 = v49;
  }
  else
  {
    uint64_t v51 = [v9 copyAddressListForSender];

    id v11 = (void *)v51;
  }
  if ([v11 count])
  {
    id v52 = [v11 objectAtIndexedSubscript:0];
    int64_t v53 = [v52 emailAddressValue];
    v54 = [v53 simpleAddress];
    CFRange v55 = v54;
    if (v54)
    {
      CFRange v56 = v54;
    }
    else
    {
      CFRange v56 = [v52 stringValue];
    }
    v58 = v56;

    v57 = v58;
    if (!v58)
    {
      v80 = 0;
      goto LABEL_89;
    }
  }
  else
  {

    v57 = &stru_1EFF11268;
  }
  v80 = v57;
  uint64_t v59 = [(__CFString *)v57 rangeOfString:@"@" options:4];
  if (v59 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_89:
    v61 = 0;
    goto LABEL_90;
  }
  v61 = [(__CFString *)v80 substringFromIndex:v59 + v60];
LABEL_90:
  v62 = objc_msgSend(NSString, "mf_messageIDStringWithDomainHint:", v61);
  if ([v62 length])
  {
    uint64_t v63 = *MEMORY[0x1E4F606F0];
    if (v50)
    {
      v64 = [v82 firstHeaderForKey:*MEMORY[0x1E4F606F0]];
      uint64_t v65 = [v64 length];

      if (v65) {
        uint64_t v63 = *MEMORY[0x1E4F60728];
      }
    }
    [v82 setHeader:v62 forKey:v63];
  }
  uint64_t v66 = *MEMORY[0x1E4F606E8];
  v67 = [v9 firstHeaderForKey:*MEMORY[0x1E4F606E8]];

  if (!v67)
  {
    v68 = [MEMORY[0x1E4F73520] versionString];
    [v9 setHeader:v68 forKey:v66];
  }
  id v7 = v77;
LABEL_98:
  v69 = (void *)MEMORY[0x1AD0E3E00]();
  if (_makeMimeHeadersConsistent(v6, v7, a4) && ([v79 shouldCancel] & 1) == 0)
  {
    appendHeadersToMessageHeaders(v6, v7, v82);
    _appendPartDataToConsumer(v6, v7, v78, a4, 0);
    if ((![v78 count] || (objc_msgSend(v78, "isLastCharacterNewLine") & 1) == 0)
      && ((_BYTE)v6[2] & 2) == 0)
    {
      v70 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBytesNoCopy:"\n" length:1 freeWhenDone:0];
      MFDataConsumerConsumeCompleteData();
    }
    [v78 done];
  }
  else
  {

    id v10 = 0;
  }
LABEL_107:

  return v10;
}

void sub_1A7FC88A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FC8E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

id _createPlainTextPart(void *a1, void *a2, __CFDictionary *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = [v6 string];
  id v8 = objc_msgSend(v7, "mf_bestMimeCharsetUsingHint:", 0xFFFFFFFFLL);

  id v9 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  int v10 = [v9 BOOLForKey:@"UseFormatFlowedForWrapping"];

  if (v10)
  {
    char v22 = 0;
    id v21 = 0;
    objc_msgSend(v6, "getFormatFlowedString:insertedTrailingSpaces:encoding:", &v21, &v22, objc_msgSend(v8, "cfStringEncoding"));
    id v11 = v21;
    if (v11)
    {
      uint64_t v12 = _createPartAndDataForString(v5, v11, v8, @"plain", a3);
      [v12 setBodyParameter:@"flowed" forKey:@"format"];
      if (v22) {
        [v12 setBodyParameter:@"yes" forKey:@"delsp"];
      }
    }
    else
    {
      if (v8)
      {
        id v13 = NSString;
        int v14 = MFLookupLocalizedString(@"BAD_CHARSET_FORMAT", @"Some characters in your message could not be converted to the “%@” text encoding. Please choose a different entry from the “Text Encoding” menu.", @"Delayed");
        uint64_t v15 = [v8 displayName];
        id v16 = objc_msgSend(v13, "stringWithFormat:", v14, v15);
        int v17 = +[MFError errorWithDomain:@"MFMessageErrorDomain" code:1038 localizedDescription:v16];

        int v18 = MFLookupLocalizedString(@"BAD_CHARSET_TITLE", @"Invalid Text Encoding", @"Delayed");
        [v17 setShortDescription:v18];

        char v19 = +[MFActivityMonitor currentMonitor];
        [v19 setError:v17];
      }
      uint64_t v12 = 0;
    }
  }
  else
  {
    objc_msgSend(v6, "quotedString:", objc_msgSend(v8, "cfStringEncoding"));
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v12 = _createPartAndDataForString(v5, v11, v8, @"plain", a3);
  }

  return v12;
}

void sub_1A7FC9294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _createPartForMFAttachment(void *a1, void *a2, int a3, __CFDictionary *a4)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  int v53 = a3;
  if (([v8 isImageFile] & 1) != 0
    || ([v8 metadataValueForKey:@"MFAttachmentIsSinglePagePDFKey"],
        id v9 = objc_claimAutoreleasedReturnValue(),
        int v10 = [v9 BOOLValue],
        v9,
        v10))
  {
    id v11 = @"inline";
  }
  else
  {
    id v11 = @"attachment";
  }
  uint64_t v12 = [v8 fileName];
  if (v12)
  {
    CFRange v55 = (void *)v12;
    if ((MFStringCanBeConvertedLosslessly() & 1) == 0)
    {
      id v13 = (void *)MFCreateDataWithString();
      if (v13)
      {
        int v14 = (void *)[[NSString alloc] initWithData:v13 encoding:1];
        uint64_t v15 = [v14 stringByReplacingOccurrencesOfString:@"?" withString:@"_"];

        CFRange v55 = (void *)v15;
      }
    }
  }
  else
  {
    CFRange v55 = 0;
  }
  id v16 = (void *)[objc_allocWithZone(MEMORY[0x1E4F73530]) init];
  int v17 = [v8 mailDropMetadata];
  char v18 = [v17 flags];

  if ((v18 & 8) != 0) {
    [v16 setDispositionParameter:v55 forKey:@"remote-image"];
  }
  char v19 = [v8 fileName];
  [v16 setDispositionParameter:v19 forKey:@"filename"];

  [v16 setDisposition:v11];
  if ([v7 shouldWriteAttachmentPlaceholders]
    && [v8 isPlaceholder])
  {
    int v20 = [v8 fetchPlaceholderData];
  }
  else
  {
    int v20 = [v8 fetchDataSynchronously:0 stripPrivateMetadata:1];
  }
  id v21 = v20;
  if (![v20 length])
  {
    _ef_log_MFMessageWriter();
    long long v43 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v44 = [v8 fileName];
      *(_DWORD *)buf = 138412290;
      v57 = v44;
      _os_log_impl(&dword_1A7EFF000, v43, OS_LOG_TYPE_DEFAULT, "Unable to encode %@ as a MIME attachment", buf, 0xCu);
    }
    CFDictionarySetValue(a4, v16, (const void *)[MEMORY[0x1E4F1C9B8] data]);
    if (v16) {
      goto LABEL_50;
    }
    goto LABEL_53;
  }
  uint64_t v51 = v7;
  if ((v7[16] & 4) != 0)
  {
    char v22 = objc_msgSend([NSString alloc], "initWithFormat:", @"%lu", objc_msgSend(v21, "length"));
    [v16 setDispositionParameter:v22 forKey:@"size"];
  }
  int v23 = [v8 fileAttributes];
  v54 = [v23 objectForKey:*MEMORY[0x1E4F28330]];

  CFDictionarySetValue(a4, v16, v21);
  id v24 = v16;
  id v25 = v8;
  id v52 = [v25 fileName];
  id v26 = objc_alloc_init(MEMORY[0x1E4F73588]);
  id v27 = [v25 mimeType];
  [v26 setMimeType:v27];

  char v28 = [v52 pathExtension];
  [v26 setPathExtension:v28];

  [v26 setFilename:v52];
  if ([v26 osType] == 1061109567) {
    [v26 setOsType:0];
  }
  uint64_t v29 = [v26 mimeType];
  BOOL v30 = v29 == 0;

  __int16 v31 = [v26 pathExtension];
  int v32 = [&stru_1EFF11268 isEqualToString:v31];

  if (v32) {
    [v26 setPathExtension:0];
  }
  uint64_t v33 = [v26 pathExtension];

  if (v33) {
    int v34 = v30;
  }
  else {
    int v34 = v30 | 2;
  }
  if (v34)
  {
    MFGetTypeInfo();
    if (!v33)
    {
      int v35 = [v26 pathExtension];

      if (v35)
      {
        id v36 = [v26 pathExtension];
        uint64_t v37 = [v52 stringByAppendingPathExtension:v36];

        id v52 = (void *)v37;
        [v25 setFileName:v37];
      }
    }
  }
  id v38 = [v26 mimeType];

  if (v38)
  {
    long long v39 = [v26 mimeType];
    id v40 = [v39 componentsSeparatedByString:@"/"];

    if (v40 && [v40 count] == 2)
    {
      long long v41 = [v40 objectAtIndex:0];
      long long v42 = [v40 objectAtIndex:1];

      if (v41) {
        goto LABEL_43;
      }
      goto LABEL_42;
    }
  }
  long long v42 = 0;
LABEL_42:

  long long v42 = @"octet-stream";
  long long v41 = @"application";
LABEL_43:
  [v24 setType:v41];
  [v24 setSubtype:v42];

  id v7 = v51;
  if (v54)
  {
    long long v45 = objc_msgSend(NSString, "stringWithFormat:", @"%#o", objc_msgSend(v54, "intValue"));
    [v24 setBodyParameter:v45 forKey:@"x-unix-mode"];
  }
  long long v46 = [v25 contentID];
  if (v46) {
    [v24 setBodyParameter:v46 forKey:*MEMORY[0x1E4F73430]];
  }
  if ([v25 shouldPreserveFidelity]) {
    [v24 setBodyParameter:@"yes" forKey:@"x-mac-preserve-fidelity"];
  }
  [v24 setBodyParameter:v55 forKey:@"name"];

  if (v16)
  {
LABEL_50:
    if (v53)
    {
      v47 = [v16 type];
      char v48 = [v47 isEqualToString:@"multipart"];

      if ((v48 & 1) == 0)
      {
        v49 = [v8 contentID];
        [v16 setContentID:v49];
      }
    }
  }
LABEL_53:

  return v16;
}

void sub_1A7FC9A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, _Unwind_Exception *exception_object, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCA3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,void *a21)
{
  _Unwind_Resume(a1);
}

id _createPartForFileWrapper(void *a1, void *a2, __CFDictionary *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = [v6 preferredFilename];
  if (!v7)
  {
    int v14 = 0;
    goto LABEL_26;
  }
  int v8 = [v6 isImageFile];
  id v9 = @"attachment";
  if (v8) {
    id v9 = @"inline";
  }
  int v10 = v9;
  id v7 = v7;
  id v11 = v7;
  if ((MFStringCanBeConvertedLosslessly() & 1) == 0)
  {
    uint64_t v12 = (void *)MFCreateDataWithString();
    id v11 = v7;
    if (v12)
    {
      id v13 = (void *)[[NSString alloc] initWithData:v12 encoding:1];
      id v11 = [v13 stringByReplacingOccurrencesOfString:@"?" withString:@"_"];
    }
  }
  int v14 = (void *)[objc_allocWithZone(MEMORY[0x1E4F73530]) init];
  [v14 setDispositionParameter:v7 forKey:@"filename"];
  [v14 setDisposition:v10];
  if ([v6 isSymbolicLink])
  {
    uint64_t v15 = (void *)[objc_allocWithZone(MEMORY[0x1E4F73530]) init];
    id v16 = objc_opt_new();
    id v25 = v7;
    _setMimeTypeFromWrapper(v15, &v25, v6);
    id v17 = v25;

    appendHeadersToMessageHeaders(v5, v15, v16);
    CFDictionarySetValue(a3, v14, (const void *)[v16 encodedHeaders]);
    [v14 setType:@"message"];
    [v14 setSubtype:@"external-body"];
    [v14 setBodyParameter:@"local-file" forKey:@"access-type"];
    char v18 = [v6 symbolicLinkDestination];
    [v14 setBodyParameter:v18 forKey:@"name"];
  }
  else
  {
    if (![v6 isRegularFile])
    {
      char v22 = _ef_log_MFMessageWriter();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v27 = v7;
        _os_log_impl(&dword_1A7EFF000, v22, OS_LOG_TYPE_DEFAULT, "Unable to encode %@ as a MIME attachment", buf, 0xCu);
      }

      CFDictionarySetValue(a3, v14, (const void *)[MEMORY[0x1E4F1C9B8] data]);
      goto LABEL_25;
    }
    uint64_t v15 = [v6 regularFileContents];
    if (!v15)
    {
      uint64_t v15 = [MEMORY[0x1E4F1C9B8] data];
    }
    if ((v5[16] & 4) != 0)
    {
      char v19 = objc_msgSend([NSString alloc], "initWithFormat:", @"%lu", objc_msgSend(v15, "length"));
      [v14 setDispositionParameter:v19 forKey:@"size"];
    }
    int v20 = [v6 fileAttributes];
    id v16 = [v20 objectForKey:*MEMORY[0x1E4F28330]];

    CFDictionarySetValue(a3, v14, v15);
    id v24 = v7;
    _setMimeTypeFromWrapper(v14, &v24, v6);
    id v17 = v24;

    if (v16)
    {
      id v21 = objc_msgSend(NSString, "stringWithFormat:", @"%#o", objc_msgSend(v16, "intValue"));
      [v14 setBodyParameter:v21 forKey:@"x-unix-mode"];
    }
    char v18 = [v6 URL];
    if (v18) {
      [v14 setBodyParameter:v18 forKey:*MEMORY[0x1E4F73430]];
    }
    [v14 setBodyParameter:v11 forKey:@"name"];
  }

  id v7 = v17;
LABEL_25:

LABEL_26:
  return v14;
}

void sub_1A7FCAA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void appendHeadersToMessageHeaders(void *a1, void *a2, void *a3)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v60 = a3;
  location = v5 + 3;
  id WeakRetained = objc_loadWeakRetained(v5 + 3);
  v57 = v5;
  LOBYTE(a2) = objc_opt_respondsToSelector();

  if (a2)
  {
    id v8 = objc_loadWeakRetained(location);
    [v8 messageWriter:v5 willGenerateHeadersForMimePart:v6];
  }
  id v9 = [v6 type];
  int v10 = [v9 isEqualToString:@"multipart"];

  if (v10)
  {
    id v11 = [v6 bodyParameterForKey:@"boundary"];
    if (!v11)
    {
      id v11 = (void *)[MEMORY[0x1E4F73520] copyNewMimeBoundary];
      [v6 setBodyParameter:v11 forKey:@"boundary"];
    }
  }
  uint64_t v12 = [v6 type];
  CFRange v55 = (void *)v12;
  uint64_t v13 = [v6 subtype];
  CFRange v56 = (void *)v13;
  id v14 = objc_allocWithZone(NSString);
  uint64_t v15 = &stru_1EFF11268;
  if (v12) {
    id v16 = (__CFString *)v12;
  }
  else {
    id v16 = &stru_1EFF11268;
  }
  if (v13) {
    uint64_t v15 = (__CFString *)v13;
  }
  uint64_t v59 = (void *)[v14 initWithFormat:@"%@/%@", v16, v15];
  id v17 = v6;
  char v18 = [v17 dispositionParameterForKey:@"filename"];
  if (v18
    && ([v17 bodyParameterForKey:@"name"],
        char v19 = objc_claimAutoreleasedReturnValue(),
        v19,
        !v19))
  {
    id v21 = (void *)[v18 mutableCopyWithZone:0];
    objc_msgSend(v21, "replaceOccurrencesOfString:withString:options:range:", @"\\", @"\\\\", 0, 0, objc_msgSend(v21, "length"));
    objc_msgSend(v21, "replaceOccurrencesOfString:withString:options:range:", @"\"", @"\\\"", 0, 0, objc_msgSend(v21, "length"));
    [v21 insertString:@"\"" atIndex:0];
    [v21 appendString:@"\""];
    char v22 = (void *)MFCreateDataWithString();
    if (v22
      || (char v22 = (void *)MFCreateDataWithString()) != 0
      || (CFStringGetSystemEncoding(), (char v22 = (void *)MFCreateDataWithString()) != 0)
      || (CFStringGetSystemEncoding(), (char v22 = (void *)MFCreateDataWithString()) != 0))
    {
      strcpy(v71, ";\n\tname=");
      int v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA58]), "initWithCapacity:", objc_msgSend(v22, "length") + 8);
      [v20 appendBytes:v71 length:8];
      [v20 appendData:v22];
    }
    else
    {
      int v20 = 0;
    }
  }
  else
  {
    int v20 = 0;
  }

  int v23 = [v17 bodyParameterKeys];
  if ([v23 count] || v20)
  {
    id v24 = [v59 dataUsingEncoding:1 allowLossyConversion:1];
    id v25 = (void *)[v24 mutableCopyWithZone:0];

    long long v67 = 0u;
    long long v68 = 0u;
    long long v65 = 0u;
    long long v66 = 0u;
    id v26 = v23;
    uint64_t v27 = [v26 countByEnumeratingWithState:&v65 objects:v70 count:16];
    if (v27)
    {
      uint64_t v28 = *(void *)v66;
      do
      {
        for (uint64_t i = 0; i != v27; ++i)
        {
          if (*(void *)v66 != v28) {
            objc_enumerationMutation(v26);
          }
          uint64_t v30 = *(void *)(*((void *)&v65 + 1) + 8 * i);
          __int16 v31 = [v17 bodyParameterForKey:v30];
          objc_msgSend(v25, "mf_appendRFC2231CompliantValue:forKey:", v31, v30);
        }
        uint64_t v27 = [v26 countByEnumeratingWithState:&v65 objects:v70 count:16];
      }
      while (v27);
    }

    if (v20) {
      [v25 appendData:v20];
    }
    [v60 setHeader:v25 forKey:*MEMORY[0x1E4F60698]];
  }
  else
  {
    [v60 setHeader:v59 forKey:*MEMORY[0x1E4F60698]];
  }

  int v32 = [v17 disposition];
  uint64_t v33 = [v17 dispositionParameterKeys];
  uint64_t v34 = [v33 count];
  if (v32 || v34)
  {
    if (v34)
    {
      int v35 = (void *)[objc_allocWithZone(MEMORY[0x1E4F73540]) init];
      if ([v32 length])
      {
        id v36 = [v32 dataUsingEncoding:1 allowLossyConversion:1];
        [v35 appendData:v36];
      }
      long long v63 = 0u;
      long long v64 = 0u;
      long long v61 = 0u;
      long long v62 = 0u;
      id v37 = v33;
      uint64_t v38 = [v37 countByEnumeratingWithState:&v61 objects:v69 count:16];
      if (v38)
      {
        uint64_t v39 = *(void *)v62;
        do
        {
          for (uint64_t j = 0; j != v38; ++j)
          {
            if (*(void *)v62 != v39) {
              objc_enumerationMutation(v37);
            }
            uint64_t v41 = *(void *)(*((void *)&v61 + 1) + 8 * j);
            long long v42 = [v17 dispositionParameterForKey:v41];
            objc_msgSend(v35, "mf_appendRFC2231CompliantValue:forKey:", v42, v41);
          }
          uint64_t v38 = [v37 countByEnumeratingWithState:&v61 objects:v69 count:16];
        }
        while (v38);
      }

      [v60 setHeader:v35 forKey:*MEMORY[0x1E4F60670]];
    }
    else
    {
      [v60 setHeader:v32 forKey:*MEMORY[0x1E4F60670]];
    }
  }

  long long v43 = [v17 contentTransferEncoding];
  if (v43) {
    [v60 setHeader:v43 forKey:*MEMORY[0x1E4F60690]];
  }

  uint64_t v44 = [v17 contentDescription];
  if (v44) {
    [v60 setHeader:v44 forKey:*MEMORY[0x1E4F60668]];
  }

  long long v45 = [v17 contentID];
  long long v46 = v45;
  if (v45)
  {
    v47 = (void *)[v45 mutableCopyWithZone:0];
    [v60 setHeader:v47 forKey:*MEMORY[0x1E4F60678]];
  }
  char v48 = [v17 languages];
  v49 = v48;
  if (v48 && [v48 count])
  {
    uint64_t v50 = [v49 componentsJoinedByString:@" "];
    [v60 setHeader:v50 forKey:*MEMORY[0x1E4F60680]];
  }
  uint64_t v51 = [v17 contentLocation];
  if (v51) {
    [v60 setHeader:v51 forKey:*MEMORY[0x1E4F60688]];
  }

  id v52 = objc_loadWeakRetained(location);
  char v53 = objc_opt_respondsToSelector();

  if (v53)
  {
    id v54 = objc_loadWeakRetained(location);
    [v54 messageWriter:v57 willEncodeHeaders:v60 forMimePart:v17];
  }
}

void sub_1A7FCB2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCB580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCB700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

_MFOutgoingMessageBody *_makeOutgoingMessageBody(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_alloc_init(_MFOutgoingMessageBody);
  id v3 = objc_alloc_init(v1[1]);
  [(MFMessageBody *)v2 setMessage:v3];
  [v3 setMessageBody:v2];

  return v2;
}

void sub_1A7FCB7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _makeMimeHeadersConsistent(void *a1, void *a2, const __CFDictionary *a3)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  long long v64 = a1;
  id key = a2;
  long long v61 = CFDictionaryGetValue(a3, key);
  long long v62 = [key type];
  if (objc_msgSend(@"multipart", "isEqualToString:"))
  {
    [key subparts];
    long long v67 = 0u;
    long long v68 = 0u;
    long long v65 = 0u;
    long long v66 = 0u;
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v6 = [v5 countByEnumeratingWithState:&v65 objects:v69 count:16];
    if (v6)
    {
      id v7 = 0;
      uint64_t v8 = *(void *)v66;
      while (2)
      {
        uint64_t v9 = 0;
        int v10 = v7;
        do
        {
          if (*(void *)v66 != v8) {
            objc_enumerationMutation(v5);
          }
          id v11 = *(void **)(*((void *)&v65 + 1) + 8 * v9);
          if ((_makeMimeHeadersConsistent(v64, v11, a3) & 1) == 0)
          {

            goto LABEL_26;
          }
          uint64_t v12 = [v11 contentTransferEncoding];
          id v7 = @"binary";
          if (([v12 isEqualToString:@"binary"] & 1) == 0)
          {
            if ([v12 isEqualToString:@"8bit"])
            {
              if ([(__CFString *)v10 isEqualToString:@"binary"]) {
                id v7 = v10;
              }
              else {
                id v7 = @"8bit";
              }
            }
            else
            {
              id v7 = v10;
            }
          }

          ++v9;
          int v10 = v7;
        }
        while (v6 != v9);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v65 objects:v69 count:16];
        if (v6) {
          continue;
        }
        break;
      }

      if (v7) {
        goto LABEL_30;
      }
    }
    else
    {
    }
    id v7 = @"7bit";
LABEL_30:
    [key setContentTransferEncoding:v7];

    goto LABEL_132;
  }
  if (!v61)
  {
    [key setContentTransferEncoding:@"7bit"];
    goto LABEL_132;
  }
  uint64_t v13 = [key contentTransferEncoding];

  if (v13) {
    goto LABEL_132;
  }
  unsigned int v60 = [key isReadableText];
  uint64_t v14 = [v61 length];
  if (v60) {
    int v15 = 2;
  }
  else {
    int v15 = 6;
  }
  int v57 = v15;
  id v16 = v61;
  unint64_t v17 = [v16 bytes];
  if ([v62 isEqualToString:@"message"]) {
    LOBYTE(v18) = 1;
  }
  else {
    int v18 = (v64[16] >> 1) & 1;
  }
  int v20 = +[MFActivityMonitor currentMonitor];
  if (([v20 canBeCancelled] & 1) == 0)
  {

    int v20 = 0;
  }
  if (v14 < 1)
  {
    uint64_t v36 = 0;
    goto LABEL_96;
  }
  id v54 = v16;
  unint64_t v55 = v14;
  unsigned int v58 = 0;
  uint64_t v21 = 0;
  char v56 = 0;
  unint64_t v22 = v17 + v14;
  char v23 = 1;
  char v24 = 1;
  id v25 = (unsigned __int8 *)v17;
  do
  {
    unsigned int v26 = *v25;
    if (v26 <= 0xD && ((1 << v26) & 0x2401) != 0) {
      char v24 = 0;
    }
    if (v26 == 10)
    {
      uint64_t v28 = 0;
      uint64_t v29 = &v25[~v17];
      if (v21 > (uint64_t)v29) {
        uint64_t v29 = (unsigned __int8 *)v21;
      }
      if ((unint64_t)v25 > v17) {
        uint64_t v21 = (uint64_t)v29;
      }
      unint64_t v17 = (unint64_t)(v25 + 1);
      goto LABEL_62;
    }
    BOOL v30 = v60;
    if (v26 != 27) {
      BOOL v30 = 0;
    }
    if (v26 == 9 || v26 > 0x1F) {
      BOOL v32 = (v26 & 0x80u) == 0;
    }
    else {
      BOOL v32 = v30;
    }
    if (v32)
    {
      uint64_t v28 = 0;
      if (v25 == (unsigned __int8 *)v17 && (unint64_t)(v25 + 5) < v22)
      {
        if (strncmp("From ", (const char *)v17, 5uLL)) {
          goto LABEL_61;
        }
        uint64_t v28 = 0;
        LOBYTE(v18) = 0;
        char v56 = 1;
        uint64_t v21 = 998;
      }
    }
    else
    {
      unsigned int v33 = v58 + v57;
      unsigned int v34 = v64[16];
      v58 += v57;
      if ((v34 & 3) != 0)
      {
LABEL_61:
        uint64_t v28 = 0;
        goto LABEL_62;
      }
      if (v18)
      {
        uint64_t v28 = 0;
        ++v25;
        LOBYTE(v18) = 1;
        if (!v20) {
          continue;
        }
        goto LABEL_73;
      }
      LOBYTE(v18) = 0;
      if (((v55 > v33) & (v34 >> 3)) != 0) {
        uint64_t v28 = 0;
      }
      else {
        uint64_t v28 = @"base64";
      }
    }
LABEL_62:
    BOOL v35 = (uint64_t)&(++v25)[-v17] < 999 && v21 < 999;
    if (v35 || (v18 & 1) != 0) {
      goto LABEL_72;
    }
    if ((v64[16] & 8) == 0 || ([v62 isEqualToString:@"text"] & 1) == 0)
    {
      LOBYTE(v18) = 0;
      uint64_t v28 = @"base64";
LABEL_72:
      if (!v20) {
        continue;
      }
      goto LABEL_73;
    }
    LOBYTE(v18) = 0;
    if (!v20) {
      continue;
    }
LABEL_73:
    if ([v20 shouldCancel]) {
      char v23 = 0;
    }
  }
  while (!v28 && (unint64_t)v25 < v22 && (v23 & 1) != 0);
  if ((v23 & 1) == 0)
  {
LABEL_128:

LABEL_26:
    uint64_t v19 = 0;
    goto LABEL_133;
  }
  uint64_t v36 = ~v17 + v22;
  if (v21 > v36) {
    uint64_t v36 = v21;
  }
  if (v22 <= v17) {
    uint64_t v36 = v21;
  }
  id v16 = v54;
  if (v28) {
    goto LABEL_108;
  }
  if (v56 & 1 | (v36 > 997)) {
    goto LABEL_101;
  }
  if (!v58)
  {
LABEL_96:
    if (v36 >= 77)
    {
      id v37 = [key type];
      if ([v37 isEqualToString:@"text"])
      {
        uint64_t v38 = [key subtype];
        if ([v38 isEqualToString:@"plain"])
        {
          uint64_t v39 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
          char v40 = [v39 BOOLForKey:@"UseFormatFlowedForWrapping"];

          if ((v40 & 1) == 0) {
            goto LABEL_104;
          }
          goto LABEL_107;
        }
      }
    }
LABEL_107:
    uint64_t v28 = @"7bit";
    goto LABEL_108;
  }
  if ((((v64[16] & 3) != 0) & v24) != 0)
  {
    uint64_t v28 = @"8bit";
    goto LABEL_108;
  }
LABEL_101:
  if (v56 & 1 | ((v18 & 1) == 0))
  {
    if ((v64[16] & 8) != 0 && [v54 length] > (unint64_t)v58) {
LABEL_104:
    }
      uint64_t v28 = @"quoted-printable";
    else {
      uint64_t v28 = @"base64";
    }
  }
  else
  {
    uint64_t v28 = @"binary";
  }
LABEL_108:
  [key setContentTransferEncoding:v28];
  if ([@"base64" isEqualToString:v28])
  {
    if (v60)
    {
      uint64_t v41 = [key disposition];
      if ([v41 isEqual:@"attachment"])
      {
        long long v42 = 0;
        goto LABEL_121;
      }
      uint64_t v52 = [v16 length];

      if (v52)
      {
        long long v42 = objc_msgSend(v16, "mf_dataByConvertingUnixNewlinesToNetwork");
        goto LABEL_125;
      }
    }
LABEL_124:
    long long v42 = 0;
    goto LABEL_125;
  }
  if (![@"quoted-printable" isEqualToString:v28]) {
    goto LABEL_124;
  }
  id v59 = objc_alloc_init(MEMORY[0x1E4F734A8]);
  long long v43 = (void *)[objc_alloc(MEMORY[0x1E4F73570]) initWithConsumer:v59];
  [v43 setForTextPart:v60];
  uint64_t v44 = [v16 length];
  long long v45 = v20;
  uint64_t v46 = [v16 bytes];
  uint64_t v47 = 0;
  BOOL v48 = 0;
  if (v45)
  {
LABEL_114:
    if (([v45 shouldCancel] & 1) == 0) {
      goto LABEL_115;
    }
  }
  else
  {
LABEL_115:
    while (1)
    {
      v49 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBytesNoCopy:v46 + v47 length:v44 - v47 freeWhenDone:0];
      uint64_t v50 = [v43 appendData:v49];
      if (v50 < 0) {
        break;
      }
      BOOL v51 = v50 == 0;
      if (v48 && v51) {
        break;
      }
      v47 += v50;

      BOOL v48 = v51;
      if (v45) {
        goto LABEL_114;
      }
    }
  }
  [v43 done];
  [v59 done];
  long long v42 = [v59 data];

  int v20 = v45;
  uint64_t v41 = v59;
LABEL_121:

LABEL_125:
  if (v20 && ([v20 shouldCancel] & 1) != 0)
  {

    goto LABEL_128;
  }
  if (v42) {
    CFDictionarySetValue(a3, key, v42);
  }

LABEL_132:
  uint64_t v19 = 1;
LABEL_133:

  return v19;
}

void sub_1A7FCBFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCC338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCC44C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCC640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCC774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCC860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCC988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCCAB0(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

id _stringByReplacingNonBreakingSpacesWithString(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  uint64_t v6 = v5;
  if (v5)
  {
    id v7 = v5;
    if ([v5 rangeOfString:@" "] != 0x7FFFFFFFFFFFFFFFLL)
    {
      id v7 = [v6 stringByReplacingOccurrencesOfString:@" " withString:v4];
    }
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_1A7FCCBD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _setMimeTypeFromWrapper(void *a1, id *a2, void *a3)
{
  id v24 = a1;
  id v5 = a3;
  id v6 = *a2;
  id v7 = objc_alloc_init(MEMORY[0x1E4F73588]);
  uint64_t v8 = [v5 mimeType];
  [v7 setMimeType:v8];

  uint64_t v9 = [v6 pathExtension];
  [v7 setPathExtension:v9];

  [v7 setFilename:v6];
  if ([v7 osType] == 1061109567) {
    [v7 setOsType:0];
  }
  int v10 = [v7 mimeType];
  BOOL v11 = v10 == 0;

  uint64_t v12 = [v7 pathExtension];
  int v13 = [&stru_1EFF11268 isEqualToString:v12];

  if (v13) {
    [v7 setPathExtension:0];
  }
  uint64_t v14 = [v7 pathExtension];

  if (v14) {
    int v15 = v11;
  }
  else {
    int v15 = v11 | 2;
  }
  if (v15)
  {
    MFGetTypeInfo();
    if (!v14)
    {
      id v16 = [v7 pathExtension];

      if (v16)
      {
        id v17 = *a2;
        int v18 = [v7 pathExtension];
        *a2 = [v17 stringByAppendingPathExtension:v18];

        [v5 setPreferredFilename:*a2];
        [v5 setFilename:*a2];
      }
    }
  }
  uint64_t v19 = [v7 mimeType];

  if (v19)
  {
    int v20 = [v7 mimeType];
    uint64_t v21 = [v20 componentsSeparatedByString:@"/"];

    if (v21 && [v21 count] == 2)
    {
      unint64_t v22 = [v21 objectAtIndex:0];
      char v23 = [v21 objectAtIndex:1];

      if (v22) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  char v23 = 0;
LABEL_19:

  char v23 = @"octet-stream";
  unint64_t v22 = @"application";
LABEL_20:
  [v24 setType:v22];
  [v24 setSubtype:v23];
}

void sub_1A7FCCEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t ___createOutgoingMessageFromTopLevelMimePart_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 supportsEncryptedSubject];
}

id _ef_log_MFAccountAutoFetchController()
{
  if (_ef_log_MFAccountAutoFetchController_onceToken != -1) {
    dispatch_once(&_ef_log_MFAccountAutoFetchController_onceToken, &__block_literal_global_19);
  }
  id v0 = (void *)_ef_log_MFAccountAutoFetchController_log;
  return v0;
}

void sub_1A7FCD1A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCD25C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCD2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCD490(_Unwind_Exception *a1)
{
  objc_sync_exit(v3);
  _Unwind_Resume(a1);
}

void sub_1A7FCD5B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCD950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCDB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCDC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFAccountStore;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FCDF80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCE170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCE2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCE47C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCE56C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCE634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFActivityCondition;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FCE874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCE930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCEA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FCECBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A7FCF018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF114(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF4E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF54C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFAppStateMonitor;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FCF640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCF9C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCFC34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FCFEB4(_Unwind_Exception *a1)
{
  id v4 = v1;

  _Unwind_Resume(a1);
}

void sub_1A7FD00C8(_Unwind_Exception *a1)
{
  id v4 = v1;

  _Unwind_Resume(a1);
}

void sub_1A7FD0198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD0414(_Unwind_Exception *a1)
{
  id v4 = v1;

  _Unwind_Resume(a1);
}

void sub_1A7FD05B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD0738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD07C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD0A60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD0D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD0EC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD0F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD13D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD16AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id EFPromiseAttachmentDataHandler(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = __EFPromiseAttachmentDataHandler_block_invoke;
  void v9[3] = &unk_1E5D3DC08;
  id v10 = v4;
  id v11 = v3;
  id v5 = v3;
  id v6 = v4;
  id v7 = _Block_copy(v9);

  return v7;
}

__CFData *_stripPrivateFileMetadata(void *a1)
{
  keys[1] = *(void **)MEMORY[0x1E4F143B8];
  CFDataRef v1 = a1;
  uint64_t v2 = CGImageSourceCreateWithData(v1, 0);
  id v3 = v2;
  id v4 = v1;
  if (v2)
  {
    id v5 = CGImageSourceCopyMetadataAtIndex(v2, 0, 0);
    id v6 = v5;
    id v4 = v1;
    if (v5)
    {
      CGMutableImageMetadataRef MutableCopy = CGImageMetadataCreateMutableCopy(v5);
      CGMutableImageMetadataRef v8 = MutableCopy;
      id v4 = v1;
      if (MutableCopy)
      {
        uint64_t v19 = 0;
        int v20 = &v19;
        uint64_t v21 = 0x2020000000;
        char v22 = 0;
        v15[0] = MEMORY[0x1E4F143A8];
        v15[1] = 3221225472;
        v15[2] = ___stripPrivateFileMetadata_block_invoke;
        v15[3] = &unk_1E5D3DC30;
        id v17 = &v19;
        CGMutableImageMetadataRef v18 = MutableCopy;
        id v16 = &unk_1EFF51528;
        CGImageMetadataEnumerateTagsUsingBlock(v6, 0, 0, v15);
        id v4 = v1;
        if (*((unsigned char *)v20 + 24))
        {
          uint64_t v9 = [MEMORY[0x1E4F1CA58] data];
          CFStringRef Type = CGImageSourceGetType(v3);
          size_t Count = CGImageSourceGetCount(v3);
          uint64_t v12 = CGImageDestinationCreateWithData(v9, Type, Count, 0);
          id v4 = v1;
          if (v12)
          {
            keys[0] = *(void **)MEMORY[0x1E4F2F448];
            values = v8;
            CFDictionaryRef v13 = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], (const void **)keys, (const void **)&values, 1, MEMORY[0x1E4F1D048], MEMORY[0x1E4F1D540]);
            id v4 = v1;
            if (v13)
            {
              id v4 = v1;
              if (CGImageDestinationCopyImageSource(v12, v3, v13, 0))
              {
                id v4 = v9;
              }
              CFRelease(v13);
            }
            CFRelease(v12);
          }
        }
        CFRelease(v8);

        _Block_object_dispose(&v19, 8);
      }
      CFRelease(v6);
    }
    CFRelease(v3);
  }

  return v4;
}

void sub_1A7FD1A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FD1D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD1EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD20D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD21C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD248C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD258C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD267C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD27C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD28DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD29F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2A5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2C2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2DCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD2F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD300C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD31A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD33C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD34DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD383C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD39AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3B40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD3F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD41EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void __EFPromiseAttachmentDataHandler_block_invoke(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v7 = v5;
  if (a2)
  {
    id v6 = [*(id *)(a1 + 32) data];
    [*(id *)(a1 + 40) finishWithResult:v6];
  }
  else
  {
    [*(id *)(a1 + 40) finishWithError:v5];
  }
}

void sub_1A7FD432C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t ___stripPrivateFileMetadata_block_invoke(uint64_t a1, const __CFString *a2, CGImageMetadataTagRef tag)
{
  id v6 = (__CFString *)CGImageMetadataTagCopyPrefix(tag);
  if (v6)
  {
    id v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:v6];
    if (v7)
    {
      CGMutableImageMetadataRef v8 = (__CFString *)CGImageMetadataTagCopyName(tag);
      if (v8 && [v7 containsObject:v8])
      {
        CGImageMetadataRemoveTagWithPath(*(CGMutableImageMetadataRef *)(a1 + 48), 0, a2);
        *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
      }
    }
  }

  return 1;
}

void sub_1A7FD4400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_2_1(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(void *)(a2 + 4) = 1752392040;
  *(_WORD *)(a2 + 12) = 2112;
  *(void *)(a2 + 14) = result;
  return result;
}

void sub_1A7FD44DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD47B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD48D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4A34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4B78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4D1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4E5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD4F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD5188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD5240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD53E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD59FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD5D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD6050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD64F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A7FD69CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id a42)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FD6ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD6B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD6E38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD6F04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD6FC0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A7FD7080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD7634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD7B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD7C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD7D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD7DD0()
{
}

void sub_1A7FD7EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD82B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)MFAttachmentCompositionContext;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FD8394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8430(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD84B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD860C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD87E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD89F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8ABC(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FD8D0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8E98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD8FF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD96E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD9AA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD9B90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD9CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FD9E44(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FD9F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDA0B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v11);

  _Unwind_Resume(a1);
}

void sub_1A7FDA1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_1A7FDA284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDA34C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDA4B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDA6C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDA7B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDA880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDAB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDACE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDB034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDB14C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDB5E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDBA24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a24, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FDBB60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDBF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,id a52)
{
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a47, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FDC154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDC214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDC334(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDC47C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDC6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDC8FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDC9BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDCAE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDCB90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDCD0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDCF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD0FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD22C(_Unwind_Exception *a1)
{
  objc_end_catch();

  _Unwind_Resume(a1);
}

void sub_1A7FDD430(_Unwind_Exception *a1)
{
  objc_end_catch();

  _Unwind_Resume(a1);
}

void sub_1A7FDD604(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD6A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD7CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD8B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDD9B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDDB18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDDC98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDDDA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDDE70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDE13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDE440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDE53C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDE60C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDE7EC(_Unwind_Exception *a1)
{
  id v7 = v5;

  _Unwind_Resume(a1);
}

void sub_1A7FDE920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDE9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDEAC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDEC64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDEDAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDEF14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDF014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDF13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDF3EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDF610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDF884(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDFAD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDFB1C()
{
}

void sub_1A7FDFBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDFCF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDFE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FDFEDC()
{
}

void sub_1A7FDFFA4(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FE0078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE053C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE0718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE07B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE0824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE08A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE0970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE09D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  id v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFAttachmentSecurityScope;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FE0C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE100C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE10F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE1184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE1408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE15F0(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7FE1768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE17F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE1914(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE19BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE2254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE24F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE2620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE2760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE2934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE2AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE2E08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE307C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE3154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE3324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE34A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE35AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE3C24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE40F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE444C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE4594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE466C(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FE4714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE48BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE4A78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE4B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  CFDictionaryRef v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1A7FE4DB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)MFCategorySubsystem_iOS;
  [(_Unwind_Exception *)&a10 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FE4E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE50C8(_Unwind_Exception *a1)
{
  id v6 = v2;
  objc_destroyWeak(v6);

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 72));
  _Unwind_Resume(a1);
}

void sub_1A7FE51E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE52A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE5648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,id a25)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE57E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE5910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE5A18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE5B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE5C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE5D60(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;
  objc_destroyWeak(v5);

  objc_destroyWeak((id *)(v4 - 40));
  _Unwind_Resume(a1);
}

void sub_1A7FE5E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE60C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE6368(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;
  objc_destroyWeak(v5);

  objc_destroyWeak((id *)(v4 - 40));
  _Unwind_Resume(a1);
}

void sub_1A7FE644C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE6824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
  objc_destroyWeak(v33);
  objc_destroyWeak(v32);

  objc_destroyWeak((id *)(v34 - 152));
  objc_destroyWeak((id *)(v34 - 144));

  _Unwind_Resume(a1);
}

void sub_1A7FE6AE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE6B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE6BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE6E34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  char v23 = v21;
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);

  _Unwind_Resume(a1);
}

void sub_1A7FE7268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE798C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  id v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFCertificateTrustInfo;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FE7A54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7A9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE7FF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE831C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE84A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8B98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8CC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE8F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FE9040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE91A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE93F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE94AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

dispatch_source_t MFCreateDiskSpaceObserverSource(NSObject *a1, void *a2)
{
  id v3 = a2;
  dispatch_source_t v4 = dispatch_source_create(MEMORY[0x1E4F14498], 0, 0xC204uLL, a1);
  dispatch_source_t v5 = v4;
  if (v4)
  {
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    void v9[2] = __MFCreateDiskSpaceObserverSource_block_invoke;
    void v9[3] = &unk_1E5D3DEB0;
    id v6 = v4;
    id v10 = v6;
    id v11 = v3;
    dispatch_source_set_event_handler(v6, v9);
    id v7 = v6;
  }
  return v5;
}

uint64_t __MFCreateDiskSpaceObserverSource_block_invoke(uint64_t a1)
{
  dispatch_source_get_data(*(dispatch_source_t *)(a1 + 32));
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v2();
}

void sub_1A7FE96B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE9828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE98C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE99F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE9AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE9D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FE9DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FE9EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEA0C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEA3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEA664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEA89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEA9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A7FEAB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEAC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEAC84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEB148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEB23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEB2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEB498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t MFCreateExternalConversationID(void *a1)
{
  CFDataRef v1 = [a1 conversationId];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, "mf_encodeBase64");
    uint64_t v4 = MFCreateStringWithData();
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_1A7FEB644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEB80C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEB980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEBA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEBAA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEBED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEBFBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEC05C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEC1E4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FEC2D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEC5B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FECDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A7FED20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_1A7FEDA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19)
{
  _Block_object_dispose((const void *)(v20 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1A7FEDC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEDD18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEDDB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEDE7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEDFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEE06C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEE15C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEE250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEE344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id copyRFC822DataForPlainTextMessage(void *a1, int a2, char a3)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  id v40 = a1;
  uint64_t v4 = (void *)[MEMORY[0x1E4F73520] copyNewMimeBoundary];
  id v47 = v40;
  id v44 = v4;
  id v5 = objc_alloc_init(MEMORY[0x1E4F73550]);
  id v6 = [NSString stringWithFormat:@"multipart/alternative boundary=\"%@\"", v44];;
  [v5 setHeader:v6 forKey:*MEMORY[0x1E4F60698]];

  id v7 = [v47 subject];
  id v8 = v5;
  id v9 = v7;
  if (v9) {
    [v8 setHeader:v9 forKey:*MEMORY[0x1E4F60738]];
  }

  id v10 = [v47 from];
  [v8 setAddressListForSender:v10];

  id v11 = [v47 to];
  [v8 setAddressListForTo:v11];

  uint64_t v12 = [v47 cc];
  [v8 setAddressListForCc:v12];

  CFDictionaryRef v13 = [v47 bcc];
  [v8 setAddressListForBcc:v13];

  uint64_t v14 = [v8 encodedHeaders];

  id v43 = (id)[v14 mutableCopy];
  long long v45 = objc_alloc_init(MFMailMimePart);
  [(MFMailMimePart *)v45 setType:@"multipart"];
  [(MFMailMimePart *)v45 setSubtype:@"alternative"];
  [(MFMailMimePart *)v45 setBodyParameter:v44 forKey:@"boundary"];
  uint64_t v50 = objc_alloc_init(MFMailMimePart);
  [(MFMailMimePart *)v50 setType:@"multipart"];
  [(MFMailMimePart *)v50 setSubtype:@"mixed"];
  long long v42 = (void *)[MEMORY[0x1E4F73520] copyNewMimeBoundary];
  -[MFMailMimePart setBodyParameter:forKey:](v50, "setBodyParameter:forKey:");
  [(MFMailMimePart *)v45 addSubpart:v50];
  uint64_t v46 = objc_alloc_init(MFMailMimePart);
  [(MFMailMimePart *)v46 setType:@"text"];
  [(MFMailMimePart *)v46 setSubtype:@"plain"];
  if (a3) {
    uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v15 = (int)[v47 bodySize];
  }
  -[MFMailMimePart setRange:](v46, "setRange:", 0, v15);
  [(MFMailMimePart *)v50 addSubpart:v46];
  long long v54 = 0u;
  long long v55 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id v16 = [v47 attachments];
  id obj = v16;
  uint64_t v17 = [v16 countByEnumeratingWithState:&v52 objects:v56 count:16];
  if (v17)
  {
    uint64_t v49 = *(void *)v53;
    do
    {
      uint64_t v51 = v17;
      for (uint64_t i = 0; i != v51; ++i)
      {
        if (*(void *)v53 != v49) {
          objc_enumerationMutation(obj);
        }
        uint64_t v19 = *(void **)(*((void *)&v52 + 1) + 8 * i);
        uint64_t v20 = objc_alloc_init(MFMailMimePart);
        id v21 = objc_alloc_init(MEMORY[0x1E4F73588]);
        char v22 = [v19 displayName];
        [v21 setFilename:v22];

        if (!MFGetTypeInfo()) {
          goto LABEL_15;
        }
        char v23 = [v21 mimeType];
        uint64_t v24 = [v23 rangeOfString:@"/"];

        if (v24 == 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_15;
        }
        id v25 = [v21 mimeType];
        BOOL v26 = [v25 length] > (unint64_t)(v24 + 1);

        if (v26)
        {
          uint64_t v27 = [v21 mimeType];
          uint64_t v28 = [v27 substringToIndex:v24];

          uint64_t v29 = [v21 mimeType];
          BOOL v30 = [v29 substringFromIndex:v24 + 1];
        }
        else
        {
LABEL_15:
          uint64_t v28 = @"application";
          BOOL v30 = @"octet-stream";
        }
        [(MFMailMimePart *)v20 setType:v28];
        [(MFMailMimePart *)v20 setSubtype:v30];
        __int16 v31 = [v19 name];
        [(MFMailMimePart *)v20 setContentID:v31];

        [(MFMailMimePart *)v20 setDisposition:@"attachment"];
        BOOL v32 = [v19 displayName];
        [(MFMailMimePart *)v20 setDispositionParameter:v32 forKey:@"filename"];

        unsigned int v33 = [v19 size];
        -[MFMailMimePart setRange:](v20, "setRange:", 0, [v33 integerValue]);

        if ([v19 isMostDefinitelyBase64ed]) {
          [(MFMailMimePart *)v20 setContentTransferEncoding:@"base64"];
        }
        [(MFMailMimePart *)v50 addSubpart:v20];
      }
      id v16 = obj;
      uint64_t v17 = [obj countByEnumeratingWithState:&v52 objects:v56 count:16];
    }
    while (v17);
  }

  uint64_t v34 = [v47 meetingRequestUUID];

  if (v34)
  {
    BOOL v35 = objc_alloc_init(MFMailMimePart);
    [(MFMailMimePart *)v35 setType:@"text"];
    [(MFMailMimePart *)v35 setSubtype:@"calendar"];
    [(MFMailMimePart *)v35 setContentID:@"191AF69B-0088-47D2-AD66-6C9D08949C46"];
    [(MFMailMimePart *)v35 setDisposition:@"attachment"];
    [(MFMailMimePart *)v35 setDispositionParameter:@"meeting.ics" forKey:@"filename"];
    -[MFMailMimePart setRange:](v35, "setRange:", 0, 0);
    [(MFMailMimePart *)v50 addSubpart:v35];
  }
  if (a2)
  {
    uint64_t v36 = objc_alloc_init(MFMailMimePart);
    [(MFMailMimePart *)v36 setType:@"message"];
    [(MFMailMimePart *)v36 setSubtype:@"rfc822"];
    -[MFMailMimePart setRange:](v36, "setRange:", 0, 0x7FFFFFFFFFFFFFFFLL);
    [(MFMailMimePart *)v36 setIsGenerated:1];
    [(MFMailMimePart *)v45 addSubpart:v36];
  }
  id v37 = objc_alloc_init(MFMessageWriter);
  uint64_t v38 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:1];
  [(MFMessageWriter *)v37 appendDataForMimePart:v45 toData:v43 withPartData:v38];

  return v43;
}

void sub_1A7FEEA6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEEE4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEF23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEF69C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FEFCC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF0280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF0A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF0D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF0E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF0FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF1040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF1154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF12E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF1348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF13F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF1504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF1618(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF1684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF172C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF1878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  id v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)_MFDAMSBasicConsumer;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FF1AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF22D0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22)
{
  if (a2 == 1)
  {
    id v25 = objc_begin_catch(a1);
    BOOL v26 = MFLogGeneral();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)(v22 - 256) = 138412290;
      *(void *)(v22 - 252) = v25;
      _os_log_impl(&dword_1A7EFF000, v26, OS_LOG_TYPE_DEFAULT, "#Warning Caught exception %@", (uint8_t *)(v22 - 256), 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1A7FF228CLL);
  }

  _Unwind_Resume(a1);
}

uint64_t insertDAMessages(void *a1, void *a2, void *a3, void *a4, int a5, void *a6)
{
  uint64_t v88 = *MEMORY[0x1E4F143B8];
  id v58 = a1;
  id v62 = a2;
  id v60 = a3;
  id v56 = a4;
  uint64_t v57 = [MEMORY[0x1E4F1CA60] dictionary];
  id v66 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  v69 = [v60 fetchLimits];
  id v9 = [v62 persistence];
  id v59 = [v9 hookRegistry];

  if (a5)
  {
    long long v61 = [MEMORY[0x1E4F1CA48] array];
  }
  else
  {
    long long v61 = 0;
  }
  if ([v58 count]) {
    [v59 persistenceWillAddNewMessages:v58];
  }
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  id obj = v58;
  uint64_t v10 = [obj countByEnumeratingWithState:&v78 objects:v87 count:16];
  if (!v10)
  {

    uint64_t v35 = 128;
    goto LABEL_48;
  }
  char v64 = 0;
  uint64_t v65 = *(void *)v79;
  do
  {
    uint64_t v68 = v10;
    for (uint64_t i = 0; i != v68; ++i)
    {
      if (*(void *)v79 != v65) {
        objc_enumerationMutation(obj);
      }
      uint64_t v12 = *(void **)(*((void *)&v78 + 1) + 8 * i);
      CFDictionaryRef v13 = [v12 DAMailMessage];
      uint64_t v14 = v13;
      if (a5)
      {
        uint64_t v15 = [v13 longID];
        if (v15)
        {
          char v64 = 1;
        }
        else
        {
          uint64_t v16 = [v14 serverID];
          v64 |= v16 == 0;
          if (v16) {
            uint64_t v15 = (__CFString *)v16;
          }
          else {
            uint64_t v15 = @"Unknown remote identifier. No valid longID or serverID found";
          }
        }
        [v61 addObject:v15];
      }
      id v17 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      [v66 setObject:v17 forKeyedSubscript:v12];
      uint64_t v70 = [v14 body];
      if (v70 && [v14 smimeType] != 2)
      {
        CGMutableImageMetadataRef v18 = objc_alloc_init(MFBasicMessageDataSection);
        uint64_t v19 = MFCreateStringByCondensingWhitespace(v70);
        [(MFBasicMessageDataSection *)v18 setPartName:@"summary"];
        uint64_t v20 = [(__CFString *)v19 dataUsingEncoding:4];
        [(MFBasicMessageDataSection *)v18 setData:v20];

        [(MFBasicMessageDataSection *)v18 setComplete:1];
        [(MFBasicMessageDataSection *)v18 setPartial:0];
        [v17 addObject:v18];
      }
      id v21 = [v14 meetingRequestUUID];
      if (v21)
      {
        uint64_t v22 = objc_alloc_init(MFBasicMessageDataSection);
        [(MFBasicMessageDataSection *)v22 setPartName:@"meeting"];
        char v23 = [v21 dataUsingEncoding:4];
        [(MFBasicMessageDataSection *)v22 setData:v23];

        [(MFBasicMessageDataSection *)v22 setComplete:1];
        [(MFBasicMessageDataSection *)v22 setPartial:0];
        [v17 addObject:v22];
        uint64_t v24 = [v14 meetingRequestMetaData];
        if (v24)
        {
          id v25 = objc_alloc_init(MFBasicMessageDataSection);
          [(MFBasicMessageDataSection *)v25 setPartName:@"meeting data"];
          [(MFBasicMessageDataSection *)v25 setData:v24];
          [(MFBasicMessageDataSection *)v25 setComplete:1];
          [(MFBasicMessageDataSection *)v25 setPartial:0];
          [v17 addObject:v25];
        }
        id v26 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
        if (([v14 meetingRequestIsActionable] & 1) == 0) {
          [v26 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"shouldUseICSRepresentation"];
        }
        if ([v26 count])
        {
          uint64_t v27 = objc_alloc_init(MFBasicMessageDataSection);
          [(MFBasicMessageDataSection *)v27 setPartName:@"meeting metadata"];
          uint64_t v28 = [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:v26 requiringSecureCoding:1 error:0];
          [(MFBasicMessageDataSection *)v27 setData:v28];

          [(MFBasicMessageDataSection *)v27 setComplete:1];
          [(MFBasicMessageDataSection *)v27 setPartial:0];
          [v17 addObject:v27];
        }
        if (a6)
        {
          if (([v14 read] & 1) == 0)
          {
            *a6 |= 1uLL;
            uint64_t v29 = [v60 meetingStorePersistentID];
            BOOL v30 = v29 == 0;

            if (v30) {
              *a6 |= 8uLL;
            }
          }
        }
        __int16 v31 = MFLogGeneral();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412546;
          id v84 = v26;
          __int16 v85 = 2112;
          v86 = v12;
          _os_log_impl(&dword_1A7EFF000, v31, OS_LOG_TYPE_INFO, "Inserting Exchange Calendar meeting Data %@ for message : %@", buf, 0x16u);
        }

LABEL_39:
        unsigned int v33 = copyRFC822DataForPlainTextMessage(v14, v21 == 0, 0);
        if (v33)
        {
          uint64_t v34 = objc_alloc_init(MFBasicMessageDataSection);
          [(MFBasicMessageDataSection *)v34 setPartName:0];
          [(MFBasicMessageDataSection *)v34 setData:v33];
          [(MFBasicMessageDataSection *)v34 setComplete:1];
          [(MFBasicMessageDataSection *)v34 setPartial:1];
          [v17 addObject:v34];
        }
        goto LABEL_42;
      }
      if (a6 && ([v14 read] & 1) == 0) {
        *a6 |= 9uLL;
      }
      unint64_t v32 = [v12 messageSize];
      if (v32 > [v69 fetchMaxBytes]) {
        goto LABEL_39;
      }
LABEL_42:
    }
    uint64_t v10 = [obj countByEnumeratingWithState:&v78 objects:v87 count:16];
  }
  while (v10);

  uint64_t v35 = 128;
  if (v64) {
    uint64_t v35 = 0x100000080;
  }
LABEL_48:
  if (a5) {
    uint64_t v36 = v35;
  }
  else {
    uint64_t v36 = 0;
  }
  id v37 = objc_alloc_init(MEMORY[0x1E4F60B88]);
  [v59 persistenceWillBeginUpdates];
  uint64_t v38 = [v62 addMessages:obj withMailbox:v56 newMessagesByOldMessage:v57 remoteIDs:v61 setFlags:v36 addPOPUIDs:0 dataSectionsByMessage:v66 generationWindow:v37];
  if ([v38 count])
  {
    uint64_t v39 = objc_opt_new();
    v76[0] = MEMORY[0x1E4F143A8];
    v76[1] = 3221225472;
    v76[2] = __insertDAMessages_block_invoke;
    v76[3] = &unk_1E5D3E438;
    id v40 = v39;
    id v77 = v40;
    [v57 enumerateKeysAndObjectsUsingBlock:v76];
    [v62 willStartPersistenceDidAddMessages:v40];
    [v59 persistenceDidAddMessages:v38 generationWindow:v37];
    [v62 didFinishPersistenceDidAddMessages:v40];
    uint64_t v41 = [v62 persistence];
    long long v42 = [v41 messageChangeManager];
    [v42 didReflectNewMessages:v38];
  }
  [v59 persistenceDidFinishUpdates];
  id v43 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceNow:-259200.0];
  [v43 timeIntervalSince1970];
  double v45 = v44;

  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  id v46 = v38;
  uint64_t v47 = [v46 countByEnumeratingWithState:&v72 objects:v82 count:16];
  if (v47)
  {
    uint64_t v48 = *(void *)v73;
    do
    {
      for (uint64_t j = 0; j != v47; ++j)
      {
        if (*(void *)v73 != v48) {
          objc_enumerationMutation(v46);
        }
        uint64_t v50 = *(void **)(*((void *)&v72 + 1) + 8 * j);
        unint64_t v51 = [v50 messageSize];
        if (v51 > [v69 fetchMaxBytes])
        {
          long long v52 = [v50 headersIfAvailable];
          [v62 updateThreadingInfoForMessage:v50 fromHeaders:v52];
        }
        if (a6)
        {
          [v50 dateReceivedAsTimeIntervalSince1970];
          if (v53 > v45)
          {
            if ([v50 conversationFlags]) {
              *a6 |= 4uLL;
            }
            if (([v50 messageFlags] & 0x1000000) != 0) {
              *a6 |= 2uLL;
            }
          }
        }
      }
      uint64_t v47 = [v46 countByEnumeratingWithState:&v72 objects:v82 count:16];
    }
    while (v47);
  }

  uint64_t v54 = [v46 count];
  return v54;
}

void sub_1A7FF2F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF3274(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF33D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF34E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF3558(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF3780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF38A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF3C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF3E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4258(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(a1);
    uint64_t v15 = MFLogGeneral();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(a9) = 138412290;
      *(void *)((char *)&a9 + 4) = v14;
      _os_log_impl(&dword_1A7EFF000, v15, OS_LOG_TYPE_DEFAULT, "#Warning Caught exception %@", (uint8_t *)&a9, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1A7FF41E0);
  }

  _Unwind_Resume(a1);
}

void sub_1A7FF435C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF43D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4504(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FF466C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF479C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF48F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t __insertDAMessages_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setObject:a2 forKeyedSubscript:a3];
}

void sub_1A7FF4E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF4F30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF502C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF520C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___nextClientID_block_invoke()
{
  id v0 = (void *)_nextClientID___clientID;
  _nextClientID___clientID = (uint64_t)&unk_1EFF50D60;
}

void sub_1A7FF53AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF54A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF5720(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF59D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    NSLog(&cfstr_SDCaughtExcept.isa);
    objc_end_catch();
    JUMPOUT(0x1A7FF58D8);
  }

  _Unwind_Resume(a1);
}

id MFDataFromDispatchData(void *a1)
{
  id v1 = a1;
  return v1;
}

void sub_1A7FF5B30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF6040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF624C(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7FF6348(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A7FF6404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF64B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF6714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF680C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF715C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,void *a46,void *a47,void *a48)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF75E4(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7FF76E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF77A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF7818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF789C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF7904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF7984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF79F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF7A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *MFDBJournalMergeResultString(uint64_t a1)
{
  if (a1)
  {
    id v1 = &stru_1EFF11268;
    char v2 = a1;
    if ((a1 & 2) != 0)
    {
      id v1 = [&stru_1EFF11268 stringByAppendingString:@"Failures "];
    }
    if (v2)
    {
      uint64_t v3 = [(__CFString *)v1 stringByAppendingString:@"Interrupted"];

      id v1 = (__CFString *)v3;
    }
  }
  else
  {
    id v1 = @"Success";
  }
  return v1;
}

void sub_1A7FF7B1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF7C68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF7CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFDbJournal;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FF7DD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v2);

  _Unwind_Resume(a1);
}

void sub_1A7FF7ED8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A7FF8394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF8830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF8990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF904C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF91C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF92C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _sortFilenamesAlphabetically(void *a1, const char *a2)
{
  return [a1 compare:a2];
}

void sub_1A7FF93E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF9540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF9654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF99D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

__CFString *MFMessageDeliveryStatusString(unint64_t a1)
{
  if (a1 > 9) {
    return @"EMMessageDeliveryStatusFatalError";
  }
  else {
    return off_1E5D3E550[a1];
  }
}

void sub_1A7FF9BDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FF9D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _copyFunction(void *value, CFMutableSetRef theSet)
{
}

uint64_t _intersectsFunction(uint64_t value, uint64_t a2)
{
  if (!*(unsigned char *)a2)
  {
    value = CFSetContainsValue(*(CFSetRef *)(a2 + 8), (const void *)value);
    *(unsigned char *)a2 = value != 0;
  }
  return value;
}

uint64_t _subsetFunction(uint64_t value, uint64_t a2)
{
  if (*(unsigned char *)a2)
  {
    value = CFSetContainsValue(*(CFSetRef *)(a2 + 8), (const void *)value);
    *(unsigned char *)a2 = value != 0;
  }
  return value;
}

void _unionFunction(void *value, CFMutableSetRef theSet)
{
}

void _minusFunction(void *value, CFMutableSetRef theSet)
{
}

uint64_t _intersectFunction(void *value, uint64_t a2)
{
  uint64_t result = CFSetContainsValue(*(CFSetRef *)(a2 + 8), value);
  if (!result)
  {
    id v5 = *(void **)a2;
    return [v5 addObject:value];
  }
  return result;
}

CFTypeRef _retain(int a1, CFTypeRef cf)
{
  return CFRetain(cf);
}

void _release(int a1, CFTypeRef cf)
{
}

id _copyEmailDescription(void *a1)
{
  id v1 = (void *)[a1 description];
  return v1;
}

uint64_t _emailEqual(void *a1, void *a2)
{
  if (a1 == a2)
  {
    if (!a1) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t result = 0;
    if (!a1 || !a2) {
      return result;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
LABEL_13:
  }
    _emailEqual_cold_1();
  if (!a2 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)) {
    _emailEqual_cold_2();
  }
  if (a1 == a2) {
    return 1;
  }
  else {
    return [a1 isEqualToEmail:a2];
  }
}

void sub_1A7FFB3CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFB674(_Unwind_Exception *a1)
{
  id v8 = v7;

  _Unwind_Resume(a1);
}

void sub_1A7FFB734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _setUserInfoObjectForKey(void *a1, void *a2, void *a3)
{
  uint64_t v10 = a1;
  id v5 = a2;
  id v6 = a3;
  os_unfair_lock_lock(v10 + 10);
  id v7 = *(void **)&v10[12]._os_unfair_lock_opaque;
  if (v5)
  {
    if (!v7)
    {
      uint64_t v8 = [objc_allocWithZone(MEMORY[0x1E4F1CA60]) init];
      id v9 = *(void **)&v10[12]._os_unfair_lock_opaque;
      *(void *)&v10[12]._os_unfair_lock_opaque = v8;

      id v7 = *(void **)&v10[12]._os_unfair_lock_opaque;
    }
    [v7 setObject:v5 forKey:v6];
  }
  else if (v7)
  {
    [v7 removeObjectForKey:v6];
  }
  os_unfair_lock_unlock(v10 + 10);
}

void sub_1A7FFB83C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v12);

  _Unwind_Resume(a1);
}

void sub_1A7FFB920(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);

  _Unwind_Resume(a1);
}

void sub_1A7FFB9F4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7FFBAA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFBB6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7FFBC28(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1A7FFBD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFBE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFBE6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFBEF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFBF54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFBFB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFC040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFC134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFC250(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A7FFC484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFC4C8()
{
}

void sub_1A7FFC6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFCE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, _Unwind_Exception *exception_object, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFD118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFFileArchive;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A7FFD1E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFD3DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _archive_open_callback()
{
  return 0;
}

uint64_t _archive_write_callback(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  id v7 = [v6 readerBlock];
  if (v7)
  {
    uint64_t v8 = [v6 writerBlock];

    if (v8)
    {
      id v9 = [v6 outputData];
      uint64_t v10 = [v9 length];

      if (v10)
      {
        id v11 = [v6 writerBlock];
        uint64_t v12 = [v6 outputData];
        ((void (**)(void, void, void *))v11)[2](v11, 0, v12);

        CFDictionaryRef v13 = [v6 outputData];
        [v13 setLength:0];
      }
    }
  }
  id v14 = [v6 outputData];
  [v14 appendBytes:a3 length:a4];

  return a4;
}

void sub_1A7FFD5DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _archive_close_callback(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [v2 outputData];
  uint64_t v4 = [v3 length];

  if (v4)
  {
    id v5 = [v2 outputData];
    uint64_t v6 = +[MFFileArchiveDirectory rangeOfCentralDirectoryInData:v5];
    uint64_t v8 = v7;

    if (v6 == 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v4 = 4294967266;
      archive_set_error();
    }
    else
    {
      id v9 = [v2 outputData];
      [v9 setLength:v6 + v8];

      uint64_t v4 = 0;
    }
    uint64_t v10 = [v2 readerBlock];
    if (v10)
    {
      id v11 = [v2 writerBlock];

      if (v11)
      {
        uint64_t v12 = [v2 writerBlock];
        CFDictionaryRef v13 = [v2 outputData];
        ((void (**)(void, void, void *))v12)[2](v12, 0, v13);

        id v14 = [v2 outputData];
        [v14 setLength:0];

        uint64_t v15 = [v2 writerBlock];
        v15[2](v15, 0, 0);
      }
    }
  }

  return v4;
}

void sub_1A7FFD7A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFD8D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFDA40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFDE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFE130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFE328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFE424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFE588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFE644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFE7B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFEB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFEE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFEECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFEFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFF16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFF560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFF6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFF7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFF9FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFFB48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFFC08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFFCB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFFDA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFFF44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A7FFFFD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8000120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8000300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8000568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8000684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8000CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A800110C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8001348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8001508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v12 = v11;

  for (uint64_t i = 8; i != -8; i -= 8)
  _Unwind_Resume(a1);
}

void sub_1A800189C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8001AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8001D80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _comparePartialFetchResults(void *a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = [a1 startOffset];
  unint64_t v5 = [v3 startOffset];
  if (v4 < v5) {
    uint64_t v6 = -1;
  }
  else {
    uint64_t v6 = v5 != v4;
  }

  return v6;
}

void sub_1A8001E1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8001FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80020F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80021F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80022B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A800232C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80024AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8002654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8002820(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A800296C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8002A98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8002C74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t _lockedFindRangeOfDownloadsWithUid(void *a1, unsigned int a2)
{
  id v3 = a1;
  CFArrayRef v4 = v3[1];
  if (v4)
  {
    unint64_t v5 = [(__CFArray *)v4 count];
    v19.location = 0;
    v19.length = v5;
    unint64_t v6 = CFArrayBSearchValues(v3[1], v19, (const void *)a2, (CFComparatorFunction)_compareDownloadsByUid, (void *)a2);
    unint64_t v7 = v6;
    unint64_t v8 = v5 - v6;
    if (v5 > v6)
    {
      unint64_t v9 = 0;
      unint64_t v10 = v6 - v5;
      while (1)
      {
        id v11 = [(__CFArray *)v3[1] objectAtIndex:v7 + v9];
        int v12 = [v11 uid];

        if (v12 != a2) {
          break;
        }
        ++v9;
        if (!(v10 + v9))
        {
          unint64_t v9 = v8;
          break;
        }
      }
      if (v9 && v7)
      {
        do
        {
          unint64_t v13 = v7 - 1;
          id v14 = [(__CFArray *)v3[1] objectAtIndex:v7 - 1];
          int v15 = [v14 uid];

          if (v15 != a2) {
            break;
          }
          ++v9;
          --v7;
        }
        while (v13);
      }
    }
  }
  else
  {
    CFArrayRef v16 = (const __CFArray *)objc_alloc_init(MEMORY[0x1E4F1CA48]);
    CFArrayRef v17 = v3[1];
    v3[1] = v16;

    unint64_t v7 = 0;
  }

  return v7;
}

void sub_1A8002DEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

MFIMAPSimpleDownload *_getDownload(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  unint64_t v13 = a1;
  id v14 = a3;
  id v15 = a8;
  objc_msgSend(v13, "mf_lock");
  unint64_t RangeOfDownloadsWithUid = _lockedFindRangeOfDownloadsWithUid(v13, a2);
  unint64_t v17 = v16;
  if (a7 != 0x7FFFFFFFFFFFFFFFLL)
  {
    id v26 = -[MFIMAPSimpleDownload initWithUid:section:range:consumer:]([MFIMAPSimpleDownload alloc], "initWithUid:section:range:consumer:", a2, v14, a6, a7, v15);
    goto LABEL_17;
  }
  if (RangeOfDownloadsWithUid >= v16) {
    goto LABEL_13;
  }
  unint64_t v18 = RangeOfDownloadsWithUid;
  do
  {
    CFRange v19 = [v13[1] objectAtIndex:v18];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v20 = [v19 section];
    int v21 = [v20 isEqualToString:v14];

    if (!v21) {
      goto LABEL_9;
    }
    if (!v15
      || ([v19 mainConsumer],
          uint64_t v22 = objc_claimAutoreleasedReturnValue(),
          [v22 consumers],
          char v23 = objc_claimAutoreleasedReturnValue(),
          int v24 = [v23 containsObject:v15],
          v23,
          v22,
          v24))
    {
      id v25 = v19;
    }
    else
    {
LABEL_9:
      id v25 = 0;
    }

    if (v25) {
      break;
    }
    ++v18;
  }
  while (v18 < v17);
  a2 = a2;
  if (!v25)
  {
LABEL_13:
    if (a4 == 0xFFFFFFFFLL) {
      id v26 = [[MFIMAPSimpleDownload alloc] initWithUid:a2 section:v14 estimatedLength:a5 consumer:v15];
    }
    else {
      id v26 = [[MFIMAPSimpleDownload alloc] initWithUid:a2 section:v14 length:a4 consumer:v15];
    }
LABEL_17:
    id v25 = v26;
    if (v26) {
      [v13[1] insertObject:v26 atIndex:RangeOfDownloadsWithUid + v17];
    }
  }
  objc_msgSend(v13, "mf_unlock");

  return v25;
}

void sub_1A80030A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A800321C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void _lockedUpdateDownloadsInRange(void *a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = a1;
  id v8 = a4;
  uint64_t v19 = a3;
  if (a3)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v18 = v8;
    id obj = v8;
    uint64_t v9 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v9)
    {
      unint64_t v10 = a2 + a3;
      uint64_t v11 = *(void *)v22;
      do
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v22 != v11) {
            objc_enumerationMutation(obj);
          }
          unint64_t v13 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          if ([v13 type] != 8 && a2 < v10)
          {
            uint64_t v15 = v19;
            uint64_t v16 = a2;
            do
            {
              unint64_t v17 = [v7[1] objectAtIndex:v16];
              [v17 handleFetchResult:v13];

              ++v16;
              --v15;
            }
            while (v15);
          }
        }
        uint64_t v9 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
      }
      while (v9);
    }

    id v8 = v18;
  }
}

void sub_1A80033B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A8003598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A800367C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8003724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80037A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t _compareDownloadsByUid(void *a1, void *a2, void *a3)
{
  id v3 = a3;
  unsigned int v5 = a1;
  if (a1 != a3) {
    unsigned int v5 = [a1 uid];
  }
  if (a2 != v3) {
    LODWORD(v3) = [a2 uid];
  }
  if (v5 < v3) {
    return -1;
  }
  else {
    return v5 != v3;
  }
}

void sub_1A8004EF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8004FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80051FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8005258(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _ef_log_MFIMAPMessageDownload()
{
  if (_ef_log_MFIMAPMessageDownload_onceToken != -1) {
    dispatch_once(&_ef_log_MFIMAPMessageDownload_onceToken, &__block_literal_global_35);
  }
  id v0 = (void *)_ef_log_MFIMAPMessageDownload_log;
  return v0;
}

void sub_1A8005398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8005454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80054D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8005804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A800592C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8005ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8005D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8005EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A8005F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8006298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8006568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *IMAPCreateArrayForMessageFlags(uint64_t a1, int a2, int a3)
{
  unint64_t v6 = objc_opt_new();
  unint64_t v7 = &sMessageFlagsTable;
  do
  {
    if ((*((_DWORD *)v7 + 5) & ~a2) == 0 || (*((unsigned char *)v7 + 16) ? (BOOL v8 = a3 == 0) : (BOOL v8 = 1), !v8))
    {
      if (((unint64_t)v7[1] & a1) != 0) {
        [v6 addObject:*v7];
      }
    }
    v7 += 3;
  }
  while (v7 < _IMAPMessagesStatusKey);
  return v6;
}

void sub_1A800677C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t IMAPMessageFlagsFromArray(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = a1;
  uint64_t v2 = 0;
  uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v10;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        unint64_t v6 = *(void **)(*((void *)&v9 + 1) + 8 * v5);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          unint64_t v7 = &sMessageFlagsTable;
          while (!objc_msgSend(v6, "ef_caseInsensitiveIsEqualToString:", *v7, (void)v9))
          {
            v7 += 3;
            if (v7 >= _IMAPMessagesStatusKey) {
              goto LABEL_12;
            }
          }
          v2 |= (unint64_t)v7[1];
        }
LABEL_12:
        ++v5;
      }
      while (v5 != v3);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v3);
  }

  return v2;
}

void sub_1A80068E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t IMAPPermanentFlagsFromArray(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = a1;
  uint64_t v2 = 0;
  uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v10;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v1);
        }
        unint64_t v6 = *(void **)(*((void *)&v9 + 1) + 8 * v5);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          unint64_t v7 = &sMessageFlagsTable;
          while (!objc_msgSend(v6, "ef_caseInsensitiveIsEqualToString:", *v7, (void)v9))
          {
            v7 += 3;
            if (v7 >= _IMAPMessagesStatusKey) {
              goto LABEL_12;
            }
          }
          uint64_t v2 = *((_DWORD *)v7 + 5) | v2;
        }
LABEL_12:
        ++v5;
      }
      while (v5 != v3);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v3);
  }

  return v2;
}

void sub_1A8006A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8006B30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8006C4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8006E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t mf_isIMAPAtom(unsigned int a1)
{
  if ((a1 & 0x80) != 0) {
    return 0;
  }
  else {
    return (mf_isIMAPAtom_atomicMask[a1 >> 5] >> a1) & 1;
  }
}

id _nullOrCFTypeRetain(uint64_t a1, void *a2)
{
  if (a2) {
    return a2;
  }
  else {
    return 0;
  }
}

void _nullOrCFTypeRelease(uint64_t a1, void *a2)
{
  if (a2) {
}
  }

__CFString *_nullOrCFTypeCopyDescription(uint64_t a1)
{
  if (a1) {
    return (__CFString *)(*(uint64_t (**)(void))(MEMORY[0x1E4F1D510] + 24))();
  }
  else {
    return @"NIL";
  }
}

uint64_t _nullOrCFTypeEqual(const void *a1, const void *a2)
{
  if (!a1) {
    return a2 != 0;
  }
  if (a2) {
    return CFEqual(a1, a2);
  }
  return 0;
}

CFMutableArrayRef createFixedMutableArray(void *a1)
{
  CFIndex v2 = [a1 count];
  if (v2)
  {
    return CFArrayCreateMutableCopy(0, v2, (CFArrayRef)a1);
  }
  else if (a1)
  {
    uint64_t v4 = (void *)[MEMORY[0x1E4F1C978] array];
    return (CFMutableArrayRef)v4;
  }
  else
  {
    return 0;
  }
}

void sub_1A800AE04(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf)
{
  if (a2 == 1)
  {
    id v11 = objc_begin_catch(a1);
    long long v12 = MFLogGeneral();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = [v11 name];
      uint64_t v14 = [v11 reason];
      LODWORD(buf) = 138412546;
      *(void *)((char *)&buf + 4) = v13;
      WORD6(buf) = 2112;
      *(void *)((char *)&buf + 14) = v14;
      _os_log_impl(&dword_1A7EFF000, v12, OS_LOG_TYPE_DEFAULT, "#Warning caught %@: %@", (uint8_t *)&buf, 0x16u);
    }
    objc_end_catch();
    JUMPOUT(0x1A800ADB4);
  }
  _Unwind_Resume(a1);
}

uint64_t response(void *a1)
{
  int v2 = [a1 lookAhead];
  if (v2 == 42)
  {
    [a1 increment];
LABEL_7:
    if (([a1 parseSpace] & 1) == 0) {
      [a1 emitWarning:@"Expected space"];
    }
    response_without_tag(a1);
    goto LABEL_10;
  }
  if (v2 == 43)
  {
    [a1 increment];
    objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 1);
    resp_text(a1);
    goto LABEL_10;
  }
  uint64_t v3 = [a1 copyAtom];
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    objc_msgSend((id)objc_msgSend(a1, "response"), "setTag:", v3);

    goto LABEL_7;
  }
LABEL_10:
  if (*(unsigned char *)([a1 response] + 8))
  {
    uint64_t result = [a1 lookAhead];
    if (result)
    {
      return [a1 emitWarning:@"Junk at end of response"];
    }
  }
  else
  {
    return [a1 emitError:@"Incomplete response"];
  }
  return result;
}

void sub_1A800B0EC(_Unwind_Exception *exception_object)
{
}

uint64_t MFCreateArrayForMessageFlags(uint64_t a1, int a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = &IMAPMessageFlagsTable;
  do
  {
    if (((unint64_t)v5[1] & a1) != 0 && (!*((unsigned char *)v5 + 16) || a2 != 0))
    {
      uint64_t v7 = [NSString stringWithCString:*v5 encoding:1];
      if (v4) {
        [v4 addObject:v7];
      }
      else {
        uint64_t v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA48]), "initWithObjects:", v7, 0);
      }
    }
    v5 += 3;
  }
  while (v5 < (char **)status_response_KnownStatusCodes);
  if (v4) {
    return (uint64_t)v4;
  }
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1C978]);
  return [v9 init];
}

uint64_t MFMessageFlagsFromArray(void *a1)
{
  v10[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [a1 count];
  v10[0] = 0;
  v10[1] = 0;
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = 0;
  do
  {
    while (1)
    {
      uint64_t v5 = objc_msgSend((id)objc_msgSend(a1, "objectAtIndex:", --v3), "dataUsingEncoding:allowLossyConversion:", 1, 1);
      unint64_t v6 = (const char *)[v5 bytes];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        break;
      }
LABEL_8:
      if (!v3) {
        return v4;
      }
    }
    uint64_t v7 = 0;
    BOOL v8 = &qword_1E5D3EA88;
    while (*((unsigned char *)v10 + v7) || strncasecmp(v6, (const char *)*(v8 - 1), [v5 length]))
    {
      ++v7;
      v8 += 3;
      if (v7 == 16) {
        goto LABEL_8;
      }
    }
    *((unsigned char *)v10 + v7) = 1;
    v4 |= *v8;
  }
  while (v3);
  return v4;
}

void resp_text(void *a1)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  if (![a1 match:"["])
  {
    uint64_t v7 = 0;
    CFArrayRef v6 = 0;
    goto LABEL_50;
  }
  uint64_t v2 = memchr((void *)[a1 start], 93, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
  uint64_t v3 = (void *)[a1 start];
  uint64_t v4 = (uint64_t)v2;
  if (!v2) {
    uint64_t v4 = [a1 end];
  }
  uint64_t v5 = (__CFString *)memchr(v3, 32, v4 - [a1 start]);
  if ([a1 match:"ALERT" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 1;
    goto LABEL_47;
  }
  if ([a1 match:"UNAVAILABLE" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 17;
    goto LABEL_47;
  }
  if ([a1 match:"AUTHENTICATIONFAILED" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 18;
    goto LABEL_47;
  }
  if ([a1 match:"AUTHORIZATIONFAILED" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 19;
    goto LABEL_47;
  }
  if ([a1 match:"EXPIRED" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 20;
    goto LABEL_47;
  }
  if ([a1 match:"PRIVACYREQUIRED" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 21;
    goto LABEL_47;
  }
  if ([a1 match:"CONTACTADMIN" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 22;
    goto LABEL_47;
  }
  if ([a1 match:"NOPERM" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 23;
    goto LABEL_47;
  }
  if ([a1 match:"INUSE" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 24;
    goto LABEL_47;
  }
  if ([a1 match:"EXPUNGEISSUED" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 25;
    goto LABEL_47;
  }
  if ([a1 match:"CORRUPTION" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 26;
    goto LABEL_47;
  }
  if ([a1 match:"SERVERBUG" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 27;
    goto LABEL_47;
  }
  if ([a1 match:"CANNOT" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 29;
    goto LABEL_47;
  }
  if ([a1 match:"LIMIT" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 30;
    goto LABEL_47;
  }
  if ([a1 match:"OVERQUOTA" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 31;
    goto LABEL_47;
  }
  if ([a1 match:"ALREADYEXISTS" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 32;
    goto LABEL_47;
  }
  if ([a1 match:"NONEXISTENT" upToSpecial:v2])
  {
    CFArrayRef v6 = 0;
    uint64_t v7 = 33;
    goto LABEL_47;
  }
  if (([a1 match:"BADCHARSET" upToSpecial:v5] & 1) == 0
    && ![a1 match:"BADCHARSET" upToSpecial:v2])
  {
    if ([a1 match:"NEWNAME" upToSpecial:v5])
    {
      [a1 parseSpace];
      id v9 = mailbox(a1);
      values = v9;
      [a1 parseSpace];
      long long v10 = mailbox(a1);
      CFArrayRef v6 = 0;
      uint64_t v27 = v10;
      if (v9 && v10)
      {
        CFArrayRef v6 = CFArrayCreate(0, (const void **)&values, 2, MEMORY[0x1E4F1D510]);
        id v9 = values;
      }

      uint64_t v7 = 3;
      goto LABEL_47;
    }
    if ([a1 match:"PARSE" upToSpecial:v2])
    {
      CFArrayRef v6 = 0;
      uint64_t v7 = 4;
      goto LABEL_47;
    }
    if ([a1 match:"READ-ONLY" upToSpecial:v2])
    {
      CFArrayRef v6 = 0;
      uint64_t v7 = 6;
      goto LABEL_47;
    }
    if ([a1 match:"READ-WRITE" upToSpecial:v2])
    {
      CFArrayRef v6 = 0;
      uint64_t v7 = 7;
      goto LABEL_47;
    }
    if ([a1 match:"TRYCREATE" upToSpecial:v2])
    {
      CFArrayRef v6 = 0;
      uint64_t v7 = 8;
      goto LABEL_47;
    }
    if ([a1 match:"UIDNEXT" upToSpecial:v5])
    {
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      CFArrayRef v6 = (CFArrayRef)[a1 copyNumber];
      uint64_t v7 = 9;
      goto LABEL_47;
    }
    if ([a1 match:"HIGHESTMODSEQ" upToSpecial:v5])
    {
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      CFArrayRef v6 = (CFArrayRef)[a1 copyNumber];
      uint64_t v7 = 12;
      goto LABEL_47;
    }
    if ([a1 match:"UIDVALIDITY" upToSpecial:v5])
    {
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      CFArrayRef v6 = (CFArrayRef)[a1 copyNumber];
      uint64_t v7 = 10;
      goto LABEL_47;
    }
    if ([a1 match:"NOMODSEQ" upToSpecial:v2])
    {
      CFArrayRef v6 = 0;
      uint64_t v7 = 13;
      goto LABEL_47;
    }
    if ([a1 match:"UNSEEN" upToSpecial:v5])
    {
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      CFArrayRef v6 = (CFArrayRef)[a1 copyNumber];
      uint64_t v7 = 11;
      goto LABEL_47;
    }
    if ([a1 match:"PERMANENTFLAGS" upToSpecial:v5])
    {
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      CFArrayRef v6 = flags_array(a1);
      uint64_t v7 = 5;
      goto LABEL_47;
    }
    if ([a1 match:"CAPABILITY" upToSpecial:v5])
    {
      uint64_t v11 = [a1 end];
      if (v2) {
        [a1 setEnd:v2];
      }
      CFArrayRef v12 = (const __CFArray *)capability_array(a1);
      [a1 setEnd:v11];
      if (!v2) {
        uint64_t v2 = (void *)[a1 end];
      }
      [a1 setStart:v2];
      uint64_t v7 = 14;
      CFArrayRef v6 = v12;
      goto LABEL_47;
    }
    if ([a1 match:"APPENDUID" upToSpecial:v5])
    {
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      uint64_t v13 = (void *)[a1 copyNumber];
      if (v13)
      {
        if (([a1 parseSpace] & 1) == 0) {
          [a1 emitWarning:@"Expected space"];
        }
        uint64_t v14 = (void *)[a1 copyNumber];
        if (v14)
        {
          uint64_t v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), "initWithObjects:", v13, v14, 0);
          uint64_t v7 = 15;
LABEL_117:

          CFArrayRef v6 = (CFArrayRef)v15;
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      uint64_t v7 = 0;
      uint64_t v15 = 0;
      goto LABEL_117;
    }
    if (![a1 match:"COPYUID" upToSpecial:v5])
    {
      if ([a1 match:"CLIENTBUG" upToSpecial:v2])
      {
        uint64_t v19 = MFLogGeneral();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          LOWORD(values) = 0;
          _os_log_impl(&dword_1A7EFF000, v19, OS_LOG_TYPE_INFO, "We did something bad: we just got back a CLIENTBUG from the server.", (uint8_t *)&values, 2u);
        }
        uint64_t v7 = 0;
        CFArrayRef v6 = 0;
      }
      else
      {
        if (!v2) {
          uint64_t v2 = (void *)[a1 end];
        }
        uint64_t v20 = [a1 start];
        if (v5)
        {
          long long v21 = (void *)[a1 copyStringFrom:v20 to:v5 withCaseOption:1];
          uint64_t v5 = (__CFString *)[a1 copyStringFrom:(char *)&v5->isa + 1 to:v2 withCaseOption:0];
        }
        else
        {
          long long v21 = (void *)[a1 copyStringFrom:v20 to:v2 withCaseOption:1];
        }
        id v22 = objc_allocWithZone(MEMORY[0x1E4F1C978]);
        long long v23 = &stru_1EFF11268;
        if (v5) {
          long long v23 = v5;
        }
        uint64_t v24 = objc_msgSend(v22, "initWithObjects:", v21, v23, 0);

        id v25 = v2;
        CFArrayRef v6 = (CFArrayRef)v24;
        [a1 setStart:v25];
        uint64_t v7 = 34;
      }
      goto LABEL_47;
    }
    if (([a1 parseSpace] & 1) == 0) {
      [a1 emitWarning:@"Expected space"];
    }
    uint64_t v16 = (void *)[a1 copyNumber];
    if (v16)
    {
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      unint64_t v17 = (void *)[a1 copyMessageSet];
      if (v17)
      {
        if (([a1 parseSpace] & 1) == 0) {
          [a1 emitWarning:@"Expected space"];
        }
        id v18 = (void *)[a1 copyMessageSet];
        if (v18)
        {
          CFArrayRef v6 = (CFArrayRef)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), "initWithObjects:", v16, v17, v18, 0);
          uint64_t v7 = 16;
LABEL_125:

          goto LABEL_47;
        }
      }
      else
      {
        id v18 = 0;
      }
    }
    else
    {
      id v18 = 0;
      unint64_t v17 = 0;
    }
    uint64_t v7 = 0;
    CFArrayRef v6 = 0;
    goto LABEL_125;
  }
  if ([a1 parseSpace]) {
    CFArrayRef v6 = (CFArrayRef)[a1 copyArray];
  }
  else {
    CFArrayRef v6 = 0;
  }
  uint64_t v7 = 2;
LABEL_47:
  if (([a1 match:"]"] & 1) == 0) {
    [a1 emitWarning:@"Expected ]"];
  }
  [a1 parseSpace];
LABEL_50:
  BOOL v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F734C0]), "initWithBytes:length:", objc_msgSend(a1, "start"), objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
  objc_msgSend(a1, "setEnd:", objc_msgSend(a1, "start"));
  objc_msgSend((id)objc_msgSend(a1, "response"), "setUserData:responseCode:responseInfo:", v8, v7, v6);
}

void capability_response(void *a1)
{
  id v2 = capability_array(a1);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setCapabilities:", v2);
}

void id_response(void *a1)
{
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  id v4 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  if ([a1 match:"(")]
  {
    while (([a1 match:"]") & 1) == 0)
    {
      id v2 = (void *)[a1 copyNilOrString];
      [a1 parseSpace];
      uint64_t v3 = (void *)[a1 copyNilOrString];
      [a1 parseSpace];
      if (v2 && v3) {
        objc_msgSend(v4, "mf_addObject:forKey:", v3, v2);
      }
    }
  }
  else if (([a1 match:"NIL"] & 1) == 0)
  {
    [a1 emitWarning:@"Expected list or NIL"];
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setServerInfo:", v4);
}

void flags_response(void *a1)
{
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  id v2 = flags_array(a1);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 12);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setFlags:", v2);
}

void status_response(void *a1)
{
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 13);
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  id v2 = mailbox(a1);
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  uint64_t v3 = (void *)[a1 copyArray];
  if (!v3)
  {
    unint64_t v5 = [a1 end] - 1;
    do
    {
      CFArrayRef v6 = (unsigned char *)v5;
      if (v5 <= [a1 start]) {
        break;
      }
      unint64_t v5 = (unint64_t)(v6 - 1);
    }
    while (*v6 != 41);
    unint64_t v7 = (unint64_t)(v6 - 1);
    do
    {
      BOOL v8 = (unsigned char *)v7;
      if (v7 <= [a1 start]) {
        break;
      }
      unint64_t v7 = (unint64_t)(v8 - 1);
    }
    while (*v8 != 40);
    if ((unint64_t)v8 <= [a1 start]
      || ([a1 setStart:v8], (uint64_t v3 = objc_msgSend(a1, "copyArray")) == 0))
    {
      CFMutableDictionaryRef theDict = 0;
      goto LABEL_33;
    }
  }
  unint64_t v4 = [v3 count];
  if (v4 <= 1)
  {
    CFMutableDictionaryRef theDict = (CFMutableDictionaryRef)(id)[MEMORY[0x1E4F1C9E8] dictionary];
    goto LABEL_32;
  }
  unint64_t v9 = v4;
  id v18 = v2;
  CFMutableDictionaryRef theDict = CFDictionaryCreateMutable(0, v4 >> 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  for (unint64_t i = 1; i < v9; i += 2)
  {
    uint64_t v11 = (__CFString *)objc_msgSend(v3, "objectAtIndex:", i - 1, v18);
    CFArrayRef v12 = (const void *)[v3 objectAtIndex:i];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_28;
    }
    unint64_t v13 = 0;
    do
    {
      uint64_t v14 = status_response_KnownStatusCodes[v13];
      uint64_t v15 = *v14;
      if (*v14 && [(__CFString *)v11 caseInsensitiveCompare:*v14]) {
        uint64_t v15 = 0;
      }
      if (v13 > 4) {
        break;
      }
      ++v13;
    }
    while (!v15);
    if (v15)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        continue;
      }
      uint64_t v16 = theDict;
      unint64_t v17 = v15;
    }
    else
    {
LABEL_28:
      uint64_t v16 = theDict;
      unint64_t v17 = v11;
    }
    CFDictionarySetValue(v16, v17, v12);
  }
  id v2 = v18;
LABEL_32:

LABEL_33:
  objc_msgSend((id)objc_msgSend(a1, "response"), "setMailboxName:statusEntries:", v2, theDict);
}

void search_response(void *a1)
{
  theArray = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 14);
  if ([a1 parseSpace])
  {
    do
    {
      id v2 = (void *)[a1 copyNumber];
      if (!v2) {
        break;
      }
      uint64_t v3 = v2;
      CFArrayAppendValue(theArray, v2);
    }
    while (([a1 parseSpace] & 1) != 0);
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setSearchResults:", theArray);
}

void list_response(void *a1)
{
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  id v2 = flags_array(a1);
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  uint64_t v3 = (void *)[a1 copyNilOrString];
  if (![v3 length])
  {

    uint64_t v3 = 0;
  }
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  CFArrayRef v12 = mailbox(a1);
  if (v2)
  {
    uint64_t v11 = v3;
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v5 = [(__CFArray *)v2 count];
    if (v5)
    {
      uint64_t v6 = v5;
      unsigned int v7 = 0;
      do
      {
        while (1)
        {
          uint64_t v8 = -[__CFArray objectAtIndex:](v2, "objectAtIndex:", --v6, v11);
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            break;
          }
LABEL_17:
          if (!v6) {
            goto LABEL_23;
          }
        }
        unint64_t v9 = &IMAPMailboxAttributeEntries;
        while ([(__CFString *)*v9 compare:v8 options:1])
        {
          v9 += 2;
          if (v9 >= (__CFString **)&__block_descriptor_40_e8_32o_e25___NSURL_16__0__NSString_8ls32l8)
          {
            [v4 insertObject:v8 atIndex:0];
            goto LABEL_17;
          }
        }
        v7 |= *((_DWORD *)v9 + 2);
      }
      while (v6);
    }
    else
    {
      unsigned int v7 = 0;
    }
LABEL_23:
    id v10 = v4;

    id v2 = (__CFArray *)v7;
    uint64_t v3 = v11;
  }
  else
  {
    id v10 = 0;
  }
  objc_msgSend((id)objc_msgSend(a1, "response", v11), "setMailboxAttributes:separator:mailboxName:extraAttributes:", v2, v3, v12, v10);
}

void fetch_response(void *a1)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 17);
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  if (([a1 match:"(") & 1] == 0)
    [a1 emitError:@"Invalid FETCH response"];
  unint64_t v2 = [a1 start];
  if (v2 < [a1 end])
  {
    id v4 = 0;
    BOOL v5 = 1;
    uint64_t v6 = ")";
    *(void *)&long long v3 = 138412290;
    long long v54 = v3;
    while (1)
    {
      if (objc_msgSend(a1, "match:", v6, v54)) {
        goto LABEL_144;
      }
      if (v4)
      {
        if (([a1 parseSpace] & 1) == 0 && v5)
        {
          [a1 emitWarning:@"Expected space"];
          goto LABEL_144;
        }
      }
      else
      {
        id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      }
      unsigned int v7 = (char *)memchr((void *)[a1 start], 32, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
      if (!v7)
      {
LABEL_142:
        double v53 = @"Couldn't parse FETCH: no space character in input";
        goto LABEL_143;
      }
      uint64_t v8 = v7;
      if (([a1 match:"BODYSTRUCTURE" upToSpecial:v7] & 1) != 0
        || ([a1 match:"BODY" upToSpecial:v8] & 1) != 0)
      {
        break;
      }
      if ([a1 match:"ENVELOPE" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 1;
        goto LABEL_17;
      }
      if ([a1 match:"UID" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 8;
        goto LABEL_17;
      }
      if ([a1 match:"X-GM-MSGID" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 9;
        goto LABEL_17;
      }
      if ([a1 match:"RFC822.SIZE" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 3;
        goto LABEL_17;
      }
      if ([a1 match:"RFC822" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 7;
        goto LABEL_17;
      }
      if (([a1 match:"RFC822.HEADER" upToSpecial:v8] & 1) != 0
        || ([a1 match:"HEADER" upToSpecial:v8] & 1) != 0)
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 4;
        goto LABEL_17;
      }
      if (([a1 match:"RFC822.TEXT" upToSpecial:v8] & 1) != 0
        || ([a1 match:"TEXT" upToSpecial:v8] & 1) != 0)
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 5;
        goto LABEL_17;
      }
      if ([a1 match:"FLAGS" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 10;
        goto LABEL_17;
      }
      if ([a1 match:"MODSEQ" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 11;
        goto LABEL_17;
      }
      if ([a1 match:"INTERNALDATE" upToSpecial:v8])
      {
        uint64_t v9 = 0;
        id v10 = 0;
        uint64_t v11 = 2;
        goto LABEL_17;
      }
      if ([a1 match:"BODY["])
      {
        uint64_t v45 = [a1 start];
        if ([a1 match:"HEADER."])
        {
          [a1 setStart:v8 + 1];
          id v46 = (void *)[a1 copyArray];
          if (v46) {

          }
          else {
            [a1 emitWarning:@"Unable to parse header keys array"];
          }
          uint64_t v50 = (char *)memchr((void *)[a1 start], 32, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
          if (!v50) {
            goto LABEL_142;
          }
          uint64_t v8 = v50;
LABEL_133:
          id v10 = 0;
          uint64_t v11 = 4;
        }
        else
        {
          if ([a1 match:"HEADER" upToSpecial:v8]) {
            goto LABEL_133;
          }
          uint64_t v48 = (char *)memchr((void *)[a1 start], 93, objc_msgSend(a1, "end") - objc_msgSend(a1, "start"));
          if (!v48)
          {
            double v53 = @"Couldn't parse FETCH: no square brace character in input";
            goto LABEL_143;
          }
          uint64_t v49 = v48;
          id v10 = (void *)[a1 copyStringFrom:v45 to:v48 withCaseOption:1];
          [a1 setStart:v49 + 1];
          uint64_t v11 = 7;
        }
        if ([a1 match:"<"])
        {
          *(void *)buf = 0xAAAAAAAAAAAAAAAALL;
          if ([a1 getNumber:buf])
          {
            uint64_t v9 = *(void *)buf;
            char v51 = [a1 match:">"];
            long long v52 = @"Expected >";
            if (v51) {
              goto LABEL_17;
            }
          }
          else
          {
            uint64_t v9 = 0;
            long long v52 = @"Expected number";
          }
          [a1 emitWarning:v52];
        }
        else
        {
          uint64_t v9 = 0;
        }
LABEL_17:
        [a1 isValid];
        goto LABEL_18;
      }
      int v47 = [a1 match:"X-APPLE-REMOTE-LINKS" upToSpecial:v8];
      if (v47) {
        uint64_t v11 = 12;
      }
      else {
        uint64_t v11 = 0;
      }
      id v10 = 0;
      uint64_t v9 = 0;
      if ([a1 isValid] && !v47)
      {
        double v53 = @"Unrecognized FETCH key";
LABEL_143:
        [a1 emitError:v53];
        goto LABEL_144;
      }
LABEL_18:
      [a1 setStart:v8];
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      [a1 logReadChars];
      CFArrayRef v12 = [[MFIMAPFetchResult alloc] initWithType:v11];
      switch(v11)
      {
        case 1:
          unint64_t v13 = (void *)[a1 copyArray];
          [(MFIMAPFetchResult *)v12 setEnvelope:v13];
          goto LABEL_49;
        case 2:
          unint64_t v13 = (void *)[a1 copyDateTime];
          [(MFIMAPFetchResult *)v12 setInternalDate:v13];
          uint64_t v14 = MFLogGeneral();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            uint64_t v15 = [v13 description];
            *(_DWORD *)buf = v54;
            *(void *)&uint8_t buf[4] = v15;
            _os_log_impl(&dword_1A7EFF000, v14, OS_LOG_TYPE_INFO, "#Power [Server Fetch Time] InternalDate=%@", buf, 0xCu);
          }
          goto LABEL_49;
        case 3:
          unint64_t v13 = (void *)[a1 copyNumber];
          -[MFIMAPFetchResult setMessageSize:](v12, "setMessageSize:", [v13 unsignedIntValue]);
          goto LABEL_49;
        case 4:
          uint64_t v16 = a1;
          unint64_t v17 = @"HEADER";
          goto LABEL_31;
        case 5:
          uint64_t v16 = a1;
          unint64_t v17 = @"TEXT";
LABEL_31:
          id v18 = (void *)body_data(v16, (uint64_t)v17);
          if (v9) {
            [(MFIMAPFetchResult *)v12 setStartOffset:v9];
          }
          if (!v18) {
            goto LABEL_50;
          }
          goto LABEL_46;
        case 6:
          uint64_t v19 = (void *)[a1 copyArrayAllowingNulls:1];
          if (v19)
          {
            CFTypeID TypeID = CFArrayGetTypeID();
            if (TypeID != CFGetTypeID(v19))
            {

              uint64_t v19 = 0;
            }
          }
          BOOL v5 = v19 != 0;
          [(MFIMAPFetchResult *)v12 setBodyStructure:v19];

          goto LABEL_51;
        case 7:
          id v21 = objc_alloc_init(MEMORY[0x1E4F28E78]);
          [v21 appendString:@"BODY.PEEK["];
          if (v10) {
            [v21 appendString:v10];
          }
          [v21 appendString:@"]"];
          id v18 = (void *)body_data(a1, (uint64_t)v10);
          if (v10)
          {
            [(MFIMAPFetchResult *)v12 setSection:v10];
          }
          if (v9) {
            [(MFIMAPFetchResult *)v12 setStartOffset:v9];
          }

          if (v18)
          {
LABEL_46:
            [(MFIMAPFetchResult *)v12 setFetchData:v18];
          }
          goto LABEL_50;
        case 8:
          unint64_t v13 = (void *)[a1 copyNumber];
          -[MFIMAPFetchResult setUid:](v12, "setUid:", [v13 unsignedIntValue]);
          goto LABEL_49;
        case 9:
          unint64_t v13 = (void *)[a1 copyNumber];
          -[MFIMAPFetchResult setUniqueRemoteId:](v12, "setUniqueRemoteId:", [v13 unsignedLongLongValue]);
LABEL_49:

          goto LABEL_50;
        case 10:
          if (!objc_msgSend(a1, "match:", "(") || (objc_msgSend(a1, "match:", v6) & 1) != 0)
          {
            uint64_t v55 = 0;
            id v23 = 0;
            goto LABEL_56;
          }
          id v23 = 0;
          uint64_t v55 = 0;
          char v29 = 1;
          break;
        case 11:
          if (![a1 match:"(")] {
            goto LABEL_50;
          }
          uint64_t v24 = (void *)[a1 copyNumber];
          -[MFIMAPFetchResult setModSequenceNumber:](v12, "setModSequenceNumber:", [v24 unsignedLongLongValue]);

          if ([a1 match:v6]) {
            goto LABEL_50;
          }
          id v25 = a1;
          uint64_t v26 = @"Expected a right paren";
          goto LABEL_102;
        case 12:
          uint64_t v27 = (void *)[a1 copyArray];
          if (v27 || ([a1 match:"NIL"] & 1) != 0)
          {
            v56[0] = MEMORY[0x1E4F143A8];
            v56[1] = 3221225472;
            v56[2] = __fetch_response_block_invoke;
            v56[3] = &unk_1E5D3ECA8;
            v56[4] = a1;
            uint64_t v28 = objc_msgSend(v27, "ef_compactMap:", v56);

            [(MFIMAPFetchResult *)v12 setAppleRemoteLinks:v28];
          }
          else
          {
            id v25 = a1;
            uint64_t v26 = @"Couldn't parse FETCH: X-APPLE-REMOTE-LINKS has invalid format";
LABEL_102:
            [v25 emitError:v26];
          }
          goto LABEL_50;
        default:
          goto LABEL_50;
      }
      do
      {
        if ((v29 & 1) == 0)
        {
          while (1)
          {
            unint64_t v30 = [a1 start];
            if (v30 >= [a1 end]
              || ([a1 parseSpace] & 1) != 0
              || [a1 lookAhead] == 41)
            {
              break;
            }
            [a1 increment];
          }
          if ([a1 match:v6]) {
            break;
          }
        }
        if ([a1 lookAhead] == 92)
        {
          unint64_t v31 = [a1 start] + 1;
          if (v31 < [a1 end] && *(unsigned char *)(objc_msgSend(a1, "start") + 1) == 42)
          {
            unint64_t v32 = (unsigned __int8 *)([a1 start] + 2);
          }
          else
          {
            unint64_t v35 = [a1 start] + 1;
            do
            {
              unint64_t v32 = (unsigned __int8 *)v35;
              if (v35 >= [a1 end]) {
                break;
              }
              ++v35;
            }
            while (mf_isIMAPAtom(*v32));
          }
          if ((uint64_t)&v32[-[a1 start]] < 2) {
            break;
          }
          unsigned int v33 = v6;
          uint64_t v36 = objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", objc_msgSend(a1, "start"), v32, 0);
          [a1 setStart:v32];
        }
        else
        {
          unsigned int v33 = v6;
          if ([a1 lookAhead] == 34) {
            uint64_t v34 = [a1 copyQuotedString];
          }
          else {
            uint64_t v34 = [a1 copyAtom];
          }
          uint64_t v36 = (void *)v34;
        }
        if (!v36)
        {
          uint64_t v6 = v33;
          break;
        }
        id v37 = (void *)[v36 dataUsingEncoding:1 allowLossyConversion:1];
        uint64_t v38 = (const char *)[v37 bytes];
        size_t v39 = [v37 length];
        uint64_t v40 = 0;
        do
        {
          int v41 = strncasecmp(v38, (&IMAPMessageFlagsTable)[v40], v39);
          uint64_t v42 = v40 * 8 + 24;
          if (!v41) {
            break;
          }
          BOOL v43 = v40 == 45;
          v40 += 3;
        }
        while (!v43);
        if (v41)
        {
          uint64_t v6 = v33;
          if (!v23) {
            id v23 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
          }
          [v23 addObject:v36];
        }
        else
        {
          v55 |= *(unint64_t *)((char *)&IMAPMessageFlagsTable + v42 - 16);
          uint64_t v6 = v33;
        }

        int v44 = [a1 match:v6];
        char v29 = 0;
      }
      while (!v44);
LABEL_56:
      [(MFIMAPFetchResult *)v12 setMessageFlags:v55];
      [(MFIMAPFetchResult *)v12 setCustomFlagsArray:v23];

LABEL_50:
      BOOL v5 = 1;
LABEL_51:
      [v4 addObject:v12];

      unint64_t v22 = [a1 start];
      if (v22 >= [a1 end]) {
        goto LABEL_144;
      }
    }
    uint64_t v9 = 0;
    id v10 = 0;
    uint64_t v11 = 6;
    goto LABEL_17;
  }
  id v4 = 0;
LABEL_144:
  objc_msgSend((id)objc_msgSend(a1, "response"), "setFetchResults:", v4);
  if (v4) {
}
  }

void quotaroot_response(void *a1)
{
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 18);
  if ([a1 parseSpace])
  {
    unint64_t v2 = (void *)[a1 copyAString];
    if (v2 && [a1 parseSpace])
    {
      CFAllocatorRef allocator = 0;
      long long v3 = (const CFArrayCallBacks *)MEMORY[0x1E4F1D510];
      do
      {
        uint64_t v4 = [a1 copyAString];
        if (!v4) {
          break;
        }
        BOOL v5 = (void *)v4;
        CFMutableArrayRef Mutable = allocator;
        if (!allocator) {
          CFMutableArrayRef Mutable = CFArrayCreateMutable(0, 0, v3);
        }
        CFAllocatorRef allocator = Mutable;
        [(__CFArray *)Mutable addObject:v5];
      }
      while (([a1 parseSpace] & 1) != 0);
    }
    else
    {
      CFAllocatorRef allocator = 0;
    }
  }
  else
  {
    CFAllocatorRef allocator = 0;
    unint64_t v2 = 0;
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setMailboxName:quotaRootNames:", v2, allocator);
}

void quota_response(void *a1)
{
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 19);
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  unint64_t v2 = (void *)[a1 copyAString];
  if (v2 && [a1 parseSpace] && objc_msgSend(a1, "match:", "("))
  {
    CFAllocatorRef allocator = 0;
    long long v3 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E4F1D048];
    uint64_t v4 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E4F1D540];
    do
    {
      BOOL v5 = (void *)[a1 copyAtom];
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      uint64_t v6 = (void *)[a1 copyNumber];
      if (([a1 parseSpace] & 1) == 0) {
        [a1 emitWarning:@"Expected space"];
      }
      unsigned int v7 = (void *)[a1 copyNumber];
      if (v5)
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 3, v3, v4);
        [(__CFDictionary *)Mutable setObject:v5 forKey:@"_IMAPNameQuotaKey"];
        if (v6) {
          [(__CFDictionary *)Mutable setObject:v6 forKey:@"_IMAPCurrentUsageQuotaKey"];
        }
        if (v7) {
          [(__CFDictionary *)Mutable setObject:v7 forKey:@"_IMAPMaxUsageQuotaKey"];
        }
        CFMutableArrayRef v9 = allocator;
        if (!allocator) {
          CFMutableArrayRef v9 = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
        }
        CFAllocatorRef allocator = v9;
        [(__CFArray *)v9 addObject:Mutable];
      }
    }
    while (([a1 parseSpace] & 1) != 0);
  }
  else
  {
    CFAllocatorRef allocator = 0;
  }
  objc_msgSend((id)objc_msgSend(a1, "response"), "setQuotaRootName:quotas:", v2, allocator);
}

uint64_t esearch_response(void *a1)
{
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 20);
  unint64_t v2 = (void *)[a1 connection];
  return [v2 parseESearchResponseWithContext:a1];
}

void push_response(void *a1)
{
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  id v6 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  unint64_t v2 = (void *)[a1 copyNilOrString];
  [a1 parseSpace];
  uint64_t v3 = [a1 copyNilOrString];
  uint64_t v4 = (void *)v3;
  if (v2 && v3)
  {
    do
    {
      objc_msgSend(v6, "mf_addObject:forKey:", v4, v2);

      [a1 parseSpace];
      unint64_t v2 = (void *)[a1 copyNilOrString];
      [a1 parseSpace];
      uint64_t v5 = [a1 copyNilOrString];
      uint64_t v4 = (void *)v5;
    }
    while (v2 && v5);
  }

  objc_msgSend((id)objc_msgSend(a1, "response"), "setServerInfo:", v6);
}

void namespace_response(void *a1)
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  unsigned int v7 = __namespace_response_block_invoke;
  uint64_t v8 = &unk_1E5D3ECD0;
  CFMutableArrayRef v9 = a1;
  unint64_t v2 = __namespace_response_block_invoke((uint64_t)v6);
  uint64_t v3 = v7((uint64_t)v6);
  uint64_t v4 = v7((uint64_t)v6);
  uint64_t v5 = (void *)[a1 response];
  [v5 setResponseType:22];
  [v5 setPrivateNamespaces:v2];
  [v5 setPublicNamespaces:v3];
  [v5 setSharedNamespaces:v4];
}

void other_response(void *a1)
{
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", 23);
  [a1 parseSpace];
  unint64_t v2 = (void *)[a1 copyAtom];
  if ([a1 parseSpace])
  {
    id v8 = 0;
    while (1)
    {
      unint64_t v3 = [a1 start];
      if (v3 >= [a1 end]) {
        goto LABEL_19;
      }
      int v4 = [a1 lookAhead];
      switch(v4)
      {
        case '""':
          uint64_t v5 = [a1 copyQuotedString];
          break;
        case '(':
          uint64_t v5 = [a1 copyArray];
          break;
        case '{':
          uint64_t v5 = [a1 copyLiteralString];
          break;
        default:
          id v6 = (void *)[a1 copyNumber];
          unsigned int v7 = v8;
          if (v6) {
            goto LABEL_13;
          }
          uint64_t v5 = [a1 copyAtom];
          break;
      }
      id v6 = (void *)v5;
      unsigned int v7 = v8;
      if (v6)
      {
LABEL_13:
        if (!v7) {
          unsigned int v7 = (void *)[objc_allocWithZone(MEMORY[0x1E4F1CA48]) init];
        }
        id v8 = v7;
        [v7 addObject:v6];
      }
      if (([a1 parseSpace] & 1) == 0) {
        goto LABEL_19;
      }
    }
  }
  id v8 = 0;
LABEL_19:
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseName:parameters:", v2, v8);
}

__CFString *mailbox(void *a1)
{
  id v1 = (void *)[a1 copyAString];
  if (!v1 || [@"INBOX" caseInsensitiveCompare:v1]) {
    return (__CFString *)v1;
  }

  return @"INBOX";
}

__CFArray *flags_array(void *a1)
{
  if (![a1 match:"(")]
    return 0;
  unint64_t v2 = (__CFArray *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:3];
  if (([a1 match:"]") & 1) == 0)
  {
    while (1)
    {
      if ([a1 lookAhead] == 92)
      {
        unint64_t v3 = [a1 start] + 1;
        if (v3 < [a1 end] && *(unsigned char *)(objc_msgSend(a1, "start") + 1) == 42)
        {
          int v4 = (unsigned __int8 *)([a1 start] + 2);
        }
        else
        {
          unint64_t v6 = [a1 start] + 1;
          do
          {
            int v4 = (unsigned __int8 *)v6;
            if (v6 >= [a1 end]) {
              break;
            }
            ++v6;
          }
          while (mf_isIMAPAtom(*v4));
        }
        if ((uint64_t)&v4[-[a1 start]] < 2) {
          return v2;
        }
        unsigned int v7 = objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", objc_msgSend(a1, "start"), v4, 0);
        [a1 setStart:v4];
        if (!v7) {
          return v2;
        }
      }
      else
      {
        if ([a1 lookAhead] == 34) {
          uint64_t v5 = [a1 copyQuotedString];
        }
        else {
          uint64_t v5 = [a1 copyAtom];
        }
        unsigned int v7 = (void *)v5;
        if (!v5) {
          return v2;
        }
      }
      CFArrayAppendValue(v2, v7);

      if (![a1 match:"]"))
      {
        while (1)
        {
          unint64_t v8 = [a1 start];
          if (v8 >= [a1 end]
            || ([a1 parseSpace] & 1) != 0
            || [a1 lookAhead] == 41)
          {
            break;
          }
          [a1 increment];
        }
        if (([a1 match:"]") & 1) == 0) {
          continue;
        }
      }
      return v2;
    }
  }
  return v2;
}

void *capability_array(void *a1)
{
  unint64_t v2 = (void *)[objc_allocWithZone(MEMORY[0x1E4F1CA48]) init];
  if ([a1 parseSpace])
  {
    do
    {
      for (unint64_t i = (unsigned __int8 *)[a1 start];
            (unint64_t)i < [a1 end] && mf_isIMAPAtom(*i);
      if ((unint64_t)i > [a1 start])
      {
        int v4 = objc_msgSend(a1, "copyStringFrom:to:withCaseOption:", objc_msgSend(a1, "start"), i, 1);
        [a1 setStart:i];
        [v2 addObject:v4];
      }
    }
    while (([a1 parseSpace] & 1) != 0);
  }
  return v2;
}

uint64_t body_data(void *a1, uint64_t a2)
{
  uint64_t v4 = objc_msgSend((id)objc_msgSend(a1, "response"), "responseConsumer");
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (([a1 literalWithResponseConsumer:v4 section:a2] & 1) == 0) {
      [v5 appendData:(id)nilOrString(a1) forSection:a2];
    }
    return 0;
  }
  else
  {
    uint64_t result = [a1 copyLiteral];
    if (!result)
    {
      return nilOrString(a1);
    }
  }
  return result;
}

uint64_t __fetch_response_block_invoke(uint64_t a1, uint64_t a2)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F1CB10];
    return objc_msgSend(v4, "ef_urlWithString:", a2);
  }
  else
  {
    [*(id *)(a1 + 32) emitWarning:@"X-APPLE-REMOTE-LINKS contains non-string value"];
    return 0;
  }
}

uint64_t nilOrString(void *a1)
{
  uint64_t result = [a1 copyNilOrString];
  if (result)
  {
    unint64_t v2 = (void *)result;
    unint64_t v3 = (void *)MFCreateDataWithString();

    uint64_t v4 = [objc_alloc(MEMORY[0x1E4F734C0]) initWithImmutableData:v3];
    return v4;
  }
  return result;
}

void *__namespace_response_block_invoke(uint64_t a1)
{
  if (([*(id *)(a1 + 32) parseSpace] & 1) == 0) {
    [*(id *)(a1 + 32) emitWarning:@"Expected space"];
  }
  CFArrayRef v2 = (const __CFArray *)[*(id *)(a1 + 32) copyArrayAllowingNulls:1];
  if (v2)
  {
    CFArrayRef v3 = v2;
    CFIndex Count = CFArrayGetCount(v2);
    uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:Count];
    if (Count >= 1)
    {
      CFIndex v6 = 0;
      CFIndex v23 = Count;
      do
      {
        CFArrayRef ValueAtIndex = (const __CFArray *)CFArrayGetValueAtIndex(v3, v6);
        if (ValueAtIndex)
        {
          CFArrayRef v8 = ValueAtIndex;
          CFTypeID v9 = CFGetTypeID(ValueAtIndex);
          if (v9 == CFArrayGetTypeID())
          {
            CFIndex v10 = CFArrayGetCount(v8);
            if (v10 >= 2)
            {
              unint64_t v11 = v10;
              CFArrayRef v12 = CFArrayGetValueAtIndex(v8, 0);
              unint64_t v13 = CFArrayGetValueAtIndex(v8, 1);
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0 || v13 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
              {
                objc_msgSend(*(id *)(a1 + 32), "emitError:", @"couldn't parse namespace response: prefix and/or delimiter were not strings", v23);

                uint64_t v5 = 0;
              }
              id v14 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
              [v14 setObject:v12 forKeyedSubscript:@"_IMAPNamespacePrefixKey"];
              if (v13) {
                [v14 setObject:v13 forKeyedSubscript:@"_IMAPNamespaceDelimiterKey"];
              }
              if (v11 < 3)
              {
                CFIndex Count = v23;
              }
              else
              {
                if (v11)
                {
                  [*(id *)(a1 + 32) emitError:@"couldn't parse namespace response extensions: not enough values for keys"];
                  uint64_t v20 = v5;
                  uint64_t v5 = 0;
                  CFIndex Count = v23;
                }
                else
                {
                  uint64_t v24 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:(v11 >> 1) - 1];
                  CFIndex v15 = 2;
                  do
                  {
                    uint64_t v16 = CFArrayGetValueAtIndex(v8, v15);
                    CFIndex v17 = v15 + 1;
                    id v18 = CFArrayGetValueAtIndex(v8, v15 + 1);
                    if (v16
                      && (uint64_t v19 = v18) != 0
                      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
                      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
                    {
                      [v24 setObject:v19 forKeyedSubscript:v16];
                    }
                    else
                    {
                      objc_msgSend(*(id *)(a1 + 32), "emitError:", @"couldn't parse namespace response extensions: invalid key or value", v23);

                      uint64_t v5 = 0;
                    }
                    CFIndex v15 = v17 + 1;
                  }
                  while (v17 + 1 < (uint64_t)v11);
                  uint64_t v20 = v24;
                  CFIndex Count = v23;
                  if ([v24 count]) {
                    [v14 setObject:v24 forKeyedSubscript:@"_IMAPNamespaceExtensionsKey"];
                  }
                }
              }
              objc_msgSend(v5, "addObject:", v14, v23);
            }
          }
        }
        ++v6;
      }
      while (v6 != Count);
    }
    CFRelease(v3);
  }
  else
  {
    id v21 = (void *)[*(id *)(a1 + 32) copyAtom];
    if ([v21 caseInsensitiveCompare:@"NIL"]) {
      [*(id *)(a1 + 32) emitError:@"couldn't parse NAMESPACE: unexpected atom"];
    }

    return 0;
  }
  return v5;
}

void *response_without_tag(void *a1)
{
  unint64_t v7 = 0xAAAAAAAAAAAAAAAALL;
  if (![a1 getNumber:&v7])
  {
    if (objc_msgSend((id)objc_msgSend(a1, "response"), "isUntagged")) {
      int v6 = 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t result = matchResponseTableEntry(a1, v6);
    if (!result) {
      return result;
    }
    uint64_t v5 = (uint64_t (*)(void *))result[2];
    if (!v5) {
      return result;
    }
    return (void *)v5(a1);
  }
  if (([a1 parseSpace] & 1) == 0) {
    [a1 emitWarning:@"Expected space"];
  }
  unint64_t v2 = v7;
  matched = matchResponseTableEntry(a1, 4);
  uint64_t result = objc_msgSend((id)objc_msgSend(a1, "response"), "setNumber:", v2);
  if (matched)
  {
    uint64_t v5 = (uint64_t (*)(void *))matched[2];
    if (v5) {
      return (void *)v5(a1);
    }
  }
  return result;
}

void *matchResponseTableEntry(void *a1, int a2)
{
  uint64_t v4 = [a1 nextSeparator];
  uint64_t v5 = 0;
  size_t v6 = v4 - [a1 start];
  while (1)
  {
    if ((ResponseTypeTable[v5 + 3] & a2) == 0) {
      goto LABEL_6;
    }
    uint64_t v7 = LODWORD(ResponseTypeTable[v5]);
    if (!v7) {
      break;
    }
    if (v6 == v7)
    {
      CFArrayRef v8 = (const char *)ResponseTypeTable[v5 + 1];
      if (!strncasecmp(v8, (const char *)[a1 start], v6)) {
        goto LABEL_9;
      }
    }
LABEL_6:
    v5 += 4;
    if (&ResponseTypeTable[v5] >= __block_literal_global) {
      return 0;
    }
  }
  CFArrayRef v8 = (const char *)ResponseTypeTable[v5 + 1];
LABEL_9:
  [a1 match:v8];
  objc_msgSend((id)objc_msgSend(a1, "response"), "setResponseType:", (v5 * 8) >> 5);
  return &ResponseTypeTable[v5];
}

id MFMailCopyEventWithExternalIdentifierAndPersistentStoreID(void *a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v19 = a1;
  id v21 = a2;
  MFMailCopySharedEventStore();
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v20 = v29 = 0u;
  CFArrayRef v3 = [v20 sources];
  id v4 = (id)[v3 countByEnumeratingWithState:&v26 objects:v31 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v27;
    while (2)
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        CFArrayRef v8 = [v7 externalID];
        int v9 = [v8 isEqualToString:v21];

        if (v9)
        {
          id v4 = v7;
          goto LABEL_11;
        }
      }
      id v4 = (id)[v3 countByEnumeratingWithState:&v26 objects:v31 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  [v20 calendarItemsWithExternalIdentifier:v19];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  id v11 = (id)[v10 countByEnumeratingWithState:&v22 objects:v30 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v23;
    while (2)
    {
      for (uint64_t j = 0; j != v11; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v23 != v12) {
          objc_enumerationMutation(v10);
        }
        id v14 = *(void **)(*((void *)&v22 + 1) + 8 * (void)j);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          CFIndex v15 = [v14 calendar];
          uint64_t v16 = [v15 source];
          int v17 = [v16 isEqual:v4];

          if (v17)
          {
            id v11 = v14;
            goto LABEL_22;
          }
        }
      }
      id v11 = (id)[v10 countByEnumeratingWithState:&v22 objects:v30 count:16];
      if (v11) {
        continue;
      }
      break;
    }
  }
LABEL_22:

  return v11;
}

void sub_1A800E534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

id MFMailCopySharedEventStore()
{
  if (MFMailCopySharedEventStore_onceToken != -1) {
    dispatch_once(&MFMailCopySharedEventStore_onceToken, &__block_literal_global_36);
  }
  id v0 = (void *)MFMailCopySharedEventStore_sEventStore;
  return v0;
}

uint64_t MFMailGetEventUIDForUniqueIdentifierAndPersistentStoreID(void *a1, void *a2)
{
  unint64_t v2 = MFMailCopyEventWithExternalIdentifierAndPersistentStoreID(a1, a2);
  CFArrayRef v3 = v2;
  if (v2) {
    uint64_t v4 = [v2 rowID];
  }
  else {
    uint64_t v4 = 0xFFFFFFFFLL;
  }

  return v4;
}

void sub_1A800E658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __MFMailCopySharedEventStore_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F25550]);
  id v1 = (void *)MFMailCopySharedEventStore_sEventStore;
  MFMailCopySharedEventStore_sEventStore = (uint64_t)v0;
}

void sub_1A800E7C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A800EABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A800EBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  id v11 = v10;

  a9.super_class = (Class)MFLegacyIMAPMailboxTaskManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A800EE90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A800EF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A800F1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A800F494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A800F92C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sCompareMethod_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

void sub_1A80106F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_Unwind_Exception *exception_object,uint64_t a36,void *a37)
{
  _Unwind_Resume(a1);
}

void sub_1A8010D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8010E38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80112D0(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);

  os_unfair_lock_unlock(v15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v18 - 144), 8);

  _Unwind_Resume(a1);
}

void sub_1A8011C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void compactMessagesToUID(void *a1, uint64_t a2, unint64_t a3)
{
  v36[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = a1;
  v35[0] = @"uid";
  size_t v6 = [MEMORY[0x1E4F28ED0] numberWithUnsignedInteger:a2];
  v35[1] = @"limit";
  v36[0] = v6;
  uint64_t v7 = [MEMORY[0x1E4F28ED0] numberWithUnsignedInteger:a3];
  v36[1] = v7;
  CFArrayRef v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v36 forKeys:v35 count:2];
  +[MFPowerController powerlog:@"compactMessagesToUID" eventData:v8];

  if (a2)
  {
    int v9 = [v5 account];
    id v10 = [v5 mailbox];
    id v11 = [v9 storeForMailboxUid:v10];

    uint64_t v12 = [v11 serverMessagePersistence];
    unint64_t v13 = objc_msgSend(objc_alloc(MEMORY[0x1E4F28D60]), "initWithIndexesInRange:", 1, a2);
    id v14 = [v12 serverMessagesForIMAPUIDs:v13 limit:*MEMORY[0x1E4F60960] returnLastEntries:0];

    if ([v14 count] <= a3)
    {
      id v21 = +[MFLegacyIMAPMailboxTaskManager log];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v22 = v5[11];
        int v28 = 138543874;
        uint64_t v29 = v22;
        __int16 v30 = 1024;
        *(_DWORD *)unint64_t v31 = [v14 count];
        *(_WORD *)&v31[4] = 1024;
        *(_DWORD *)&v31[6] = a3;
        _os_log_impl(&dword_1A7EFF000, v21, OS_LOG_TYPE_DEFAULT, "%{public}@: Not compacting messages. Found %u (<= %u).", (uint8_t *)&v28, 0x18u);
      }
      goto LABEL_14;
    }
    if (a2 == 0x7FFFFFFFFFFFFFFFLL)
    {
      CFIndex v15 = +[MFLegacyIMAPMailboxTaskManager log];
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = v5[11];
        int v28 = 138543874;
        uint64_t v29 = v16;
        __int16 v30 = 1024;
        *(_DWORD *)unint64_t v31 = [v14 count];
        *(_WORD *)&v31[4] = 1024;
        *(_DWORD *)&v31[6] = a3;
        int v17 = "%{public}@: Compacting all messages. Found %u (> %u).";
        uint64_t v18 = v15;
        uint32_t v19 = 24;
LABEL_12:
        _os_log_impl(&dword_1A7EFF000, v18, OS_LOG_TYPE_DEFAULT, v17, (uint8_t *)&v28, v19);
      }
    }
    else
    {
      CFIndex v15 = +[MFLegacyIMAPMailboxTaskManager log];
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v23 = v5[11];
        int v28 = 138544130;
        uint64_t v29 = v23;
        __int16 v30 = 2048;
        *(void *)unint64_t v31 = a2;
        *(_WORD *)&v31[8] = 1024;
        int v32 = [v14 count];
        __int16 v33 = 1024;
        int v34 = a3;
        int v17 = "%{public}@: Compacting messages with UIDs <= %lu. Found %u (> %u).";
        uint64_t v18 = v15;
        uint32_t v19 = 34;
        goto LABEL_12;
      }
    }

    id v21 = [v14 valueForKey:@"remoteID"];
    long long v24 = [v5 library];
    long long v25 = [v24 messageChangeManager];
    long long v26 = [v5 mailbox];
    long long v27 = [v26 URL];
    [v25 reflectDeletedMessagesWithRemoteIDs:v21 mailboxURL:v27];

LABEL_14:
    goto LABEL_15;
  }
  id v11 = +[MFLegacyIMAPMailboxTaskManager log];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v20 = v5[11];
    int v28 = 138543362;
    uint64_t v29 = v20;
    _os_log_impl(&dword_1A7EFF000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@: No messages to compact", (uint8_t *)&v28, 0xCu);
  }
LABEL_15:
}

void sub_1A8012168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80125A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80126FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8012870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8012AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8012CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id fetchArgumentsForCriterion(void *a1, int a2)
{
  uint64_t v123 = *MEMORY[0x1E4F143B8];
  id v82 = a1;
  int v3 = needUTF8ForCriterion(v82);
  long long v81 = [v82 expression];
  if ((v3 & a2) == 1) {
    objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithObjects:", @"CHARSET", @"UTF-8", 0);
  }
  else {
  id v88 = [MEMORY[0x1E4F1CA48] array];
  }
  uint64_t v4 = [v82 criterionType];
  uint64_t v5 = @"FROM";
  switch(v4)
  {
    case 25:
      uint64_t v20 = objc_msgSend(MEMORY[0x1E4F1CA48], "array", @"FROM");
      long long v103 = 0u;
      long long v104 = 0u;
      long long v101 = 0u;
      long long v102 = 0u;
      id v21 = [v82 criteria];
      uint64_t v22 = [v21 countByEnumeratingWithState:&v101 objects:v119 count:16];
      if (v22)
      {
        uint64_t v23 = *(void *)v102;
        do
        {
          for (uint64_t i = 0; i != v22; ++i)
          {
            if (*(void *)v102 != v23) {
              objc_enumerationMutation(v21);
            }
            long long v25 = fetchArgumentsForCriterion(*(void *)(*((void *)&v101 + 1) + 8 * i), 0);
            if (v25) {
              [v20 addObject:v25];
            }
          }
          uint64_t v22 = [v21 countByEnumeratingWithState:&v101 objects:v119 count:16];
        }
        while (v22);
      }

      uint64_t v26 = [v20 count];
      if (v26 == 1)
      {
        id v21 = [v20 objectAtIndex:0];
        if ([v21 count] == 1)
        {

          goto LABEL_90;
        }
        if ((a2 & 1) == 0)
        {

          goto LABEL_99;
        }
      }
      else if (!a2)
      {
        goto LABEL_99;
      }
      int v55 = [v82 allCriteriaMustBeSatisfied];
      char v56 = v55;
      if (v26 == 1)
      {

        if ((v56 & 1) == 0) {
          goto LABEL_99;
        }
LABEL_90:
        long long v99 = 0u;
        long long v100 = 0u;
        long long v97 = 0u;
        long long v98 = 0u;
        id v57 = v20;
        uint64_t v58 = [v57 countByEnumeratingWithState:&v97 objects:v118 count:16];
        if (v58)
        {
          uint64_t v59 = *(void *)v98;
          do
          {
            for (uint64_t j = 0; j != v58; ++j)
            {
              if (*(void *)v98 != v59) {
                objc_enumerationMutation(v57);
              }
              [v88 addObjectsFromArray:*(void *)(*((void *)&v97 + 1) + 8 * j)];
            }
            uint64_t v58 = [v57 countByEnumeratingWithState:&v97 objects:v118 count:16];
          }
          while (v58);
        }
        goto LABEL_118;
      }
      if (v55) {
        goto LABEL_90;
      }
LABEL_99:
      if ([v82 allCriteriaMustBeSatisfied])
      {
        long long v95 = 0u;
        long long v96 = 0u;
        long long v93 = 0u;
        long long v94 = 0u;
        id v61 = v20;
        uint64_t v62 = [v61 countByEnumeratingWithState:&v93 objects:v117 count:16];
        if (!v62)
        {
LABEL_118:

          goto LABEL_124;
        }
        LOBYTE(v63) = 0;
        uint64_t v64 = *(void *)v94;
LABEL_102:
        uint64_t v65 = 0;
        while (1)
        {
          if (*(void *)v94 != v64) {
            objc_enumerationMutation(v61);
          }
          id v66 = *(void **)(*((void *)&v93 + 1) + 8 * v65);
          if (v63)
          {
            [v88 addObjectsFromArray:*(void *)(*((void *)&v93 + 1) + 8 * v65)];
          }
          else
          {
            unint64_t v67 = [*(id *)(*((void *)&v93 + 1) + 8 * v65) count];
            if (!v67)
            {
              int v63 = 0;
              goto LABEL_112;
            }
            uint64_t v68 = [v66 objectAtIndex:0];
            v69 = objc_msgSend(NSString, "stringWithFormat:", @"(%@"), v68;
            [v88 addObject:v69];

            if (v67 >= 2)
            {
              uint64_t v70 = objc_msgSend(v66, "subarrayWithRange:", 1, v67 - 1);
              [v88 addObjectsFromArray:v70];
            }
          }
          int v63 = 1;
LABEL_112:
          if (v62 == ++v65)
          {
            uint64_t v71 = [v61 countByEnumeratingWithState:&v93 objects:v117 count:16];
            uint64_t v62 = v71;
            if (!v71)
            {

              if (v63) {
                [v88 addObject:@""]);
              }
              goto LABEL_124;
            }
            goto LABEL_102;
          }
        }
      }
      uint64_t v72 = [v20 count];
      uint64_t v73 = v72 - 1;
      if (v72 != 1)
      {
        uint64_t v74 = 0;
        do
        {
          objc_msgSend(v88, "addObject:", @"(OR");
          long long v75 = [v20 objectAtIndex:v74];
          [v88 addObjectsFromArray:v75];

          ++v74;
        }
        while (v73 != v74);
      }
      v76 = [v20 lastObject];
      [v88 addObjectsFromArray:v76];

      for (; v73; --v73)
        [v88 addObject:@""]);
LABEL_124:

LABEL_125:
      return v88;
    case 26:
    case 46:
    case 49:
      size_t v6 = MFLogGeneral();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v122 = v82;
        _os_log_impl(&dword_1A7EFF000, v6, OS_LOG_TYPE_DEFAULT, "#Warning Ignoring criterion %@ IMAP search", buf, 0xCu);
      }

      goto LABEL_125;
    case 27:
      id v10 = objc_msgSend(MEMORY[0x1E4F28E78], "string", @"FROM");
      if ([v82 qualifier] == 7) {
        [v10 appendString:@"NOT "];
      }
      if (fetchArgumentsForCriterion_onceToken != -1) {
        dispatch_once(&fetchArgumentsForCriterion_onceToken, &__block_literal_global_490);
      }
      long long v27 = (void *)fetchArgumentsForCriterion_flagMap;
      int v28 = [v82 expression];
      uint64_t v12 = [v27 objectForKey:v28];

      if (!v12)
      {
        long long v78 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v79 = objc_msgSend(NSString, "stringWithUTF8String:", "NSArray<id> *fetchArgumentsForCriterion(MFMessageCriterion *__strong, BOOL)");
        [v78 handleFailureInFunction:v79, @"MFLegacyIMAPMailboxTaskManager.m", 1064, @"could not map expression to flag: %@", v82 file lineNumber description];
      }
      [v10 appendString:v12];
      [v88 addObject:v10];
LABEL_38:

      goto LABEL_125;
    case 28:
      uint64_t v29 = objc_msgSend(v82, "expression", @"FROM");
      uint64_t v30 = [v29 integerValue];

      long long v91 = 0u;
      long long v92 = 0u;
      long long v89 = 0u;
      long long v90 = 0u;
      v115[0] = @"$MailFlagBit0";
      v115[1] = @"$MailFlagBit1";
      v115[2] = @"$MailFlagBit2";
      unint64_t v31 = [MEMORY[0x1E4F1C978] arrayWithObjects:v115 count:3];
      id obj = v31;
      uint64_t v32 = [v31 countByEnumeratingWithState:&v89 objects:v116 count:16];
      if (v32)
      {
        int v33 = 0;
        uint64_t v34 = *(void *)v90;
        uint64_t v35 = ~v30;
        do
        {
          uint64_t v36 = 0;
          char v37 = v33;
          int v84 = v33 + v32;
          do
          {
            if (*(void *)v90 != v34) {
              objc_enumerationMutation(obj);
            }
            uint64_t v38 = *(void *)(*((void *)&v89 + 1) + 8 * v36);
            size_t v39 = [MEMORY[0x1E4F28E78] string];
            uint64_t v40 = v39;
            if (((1 << (v37 + v36)) & (unint64_t)v35) != 0) {
              int v41 = @"UNKEYWORD ";
            }
            else {
              int v41 = @"KEYWORD ";
            }
            [v39 appendString:v41];
            [v40 appendString:v38];
            [v88 addObject:v40];

            ++v36;
          }
          while (v32 != v36);
          unint64_t v31 = obj;
          uint64_t v32 = [obj countByEnumeratingWithState:&v89 objects:v116 count:16];
          int v33 = v84;
        }
        while (v32);
      }

      goto LABEL_125;
    case 29:
    case 30:
    case 31:
    case 32:
    case 34:
    case 36:
    case 37:
    case 38:
    case 39:
    case 42:
    case 43:
    case 44:
    case 45:
    case 47:
    case 48:
LABEL_128:
      long long v80 = MFLogGeneral();
      fetchArgumentsForCriterion_cold_1(v80, (uint64_t)v82);

      __assert_rtn("fetchArgumentsForCriterion", "MFLegacyIMAPMailboxTaskManager.m", 1112, "0 && \"Need to handle criterion for IMAP headers\"");
    case 33:
LABEL_13:
      id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      v105[0] = MEMORY[0x1E4F143A8];
      v105[1] = 3221225472;
      v105[2] = __fetchArgumentsForCriterion_block_invoke;
      v105[3] = &unk_1E5D3F0D0;
      id v15 = v14;
      id v106 = v15;
      [v82 tokenizeUsingTokenizationHandler:v105];
      id v16 = v15;
      id v17 = v88;
      uint64_t v18 = [v16 count];
      if (v18)
      {
        if (v18 == 1)
        {
          uint32_t v19 = [v16 lastObject];
          [v17 addObjectsFromArray:v19];
        }
        else
        {
          long long v113 = 0u;
          long long v114 = 0u;
          long long v111 = 0u;
          long long v112 = 0u;
          id v83 = v16;
          uint64_t v44 = [v83 countByEnumeratingWithState:&v111 objects:buf count:16];
          if (v44)
          {
            uint64_t v85 = *(void *)v112;
            BOOL v45 = 1;
            do
            {
              id obja = (id)v44;
              for (k = 0; k != obja; k = (char *)k + 1)
              {
                if (*(void *)v112 != v85) {
                  objc_enumerationMutation(v83);
                }
                int v47 = *(void **)(*((void *)&v111 + 1) + 8 * (void)k);
                if (v45)
                {
                  long long v109 = 0u;
                  long long v110 = 0u;
                  long long v107 = 0u;
                  long long v108 = 0u;
                  id v48 = v47;
                  uint64_t v49 = [v48 countByEnumeratingWithState:&v107 objects:v120 count:16];
                  BOOL v45 = v49 == 0;
                  if (v49)
                  {
                    uint64_t v50 = *(void *)v108;
                    char v51 = 1;
                    do
                    {
                      for (uint64_t m = 0; m != v49; ++m)
                      {
                        if (*(void *)v108 != v50) {
                          objc_enumerationMutation(v48);
                        }
                        if (v51)
                        {
                          double v53 = objc_msgSend(NSString, "stringWithFormat:", @"(%@"), *(void *)(*((void *)&v107 + 1) + 8 * m);
                          [v17 addObject:v53];
                        }
                        else
                        {
                          [v17 addObject:*(void *)(*((void *)&v107 + 1) + 8 * m)];
                        }
                        char v51 = 0;
                      }
                      uint64_t v49 = [v48 countByEnumeratingWithState:&v107 objects:v120 count:16];
                      char v51 = 0;
                    }
                    while (v49);
                  }
                }
                else
                {
                  [v17 addObjectsFromArray:v47];
                  BOOL v45 = 0;
                }
              }
              uint64_t v44 = [v83 countByEnumeratingWithState:&v111 objects:buf count:16];
            }
            while (v44);
          }

          [v17 addObject:@""]);
        }
      }

      goto LABEL_125;
    case 35:
      goto LABEL_18;
    case 40:
      uint64_t v5 = @"TO";
      goto LABEL_18;
    case 41:
      uint64_t v5 = @"CC";
LABEL_18:
      [v88 addObject:v5];
      addArgumentsForExpression(v81, v3, v88);
      goto LABEL_125;
    default:
      switch(v4)
      {
        case 1:
          uint64_t v42 = objc_msgSend(v82, "criterionIdentifier", @"FROM");
          if ([v42 isEqual:*MEMORY[0x1E4F60738]])
          {
            BOOL v43 = @"SUBJECT";
          }
          else
          {
            if (![v42 isEqualToString:*MEMORY[0x1E4F606F0]])
            {
              long long v54 = MFLogGeneral();
              if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                id v122 = v42;
                _os_log_impl(&dword_1A7EFF000, v54, OS_LOG_TYPE_DEFAULT, "#Warning unsupported header criterion type %@", buf, 0xCu);
              }

LABEL_84:
              addArgumentsForExpression(v81, v3, v88);

              goto LABEL_125;
            }
            [v88 addObject:@"HEADER"];
            if ([v82 qualifier] != 3) {
              __assert_rtn("fetchArgumentsForCriterion", "MFLegacyIMAPMailboxTaskManager.m", 955, "0 && \"Message ID header criterion must have a MessageRuleIsEqualTo qualifier\"");
            }
            BOOL v43 = @"Message-ID";
          }
          [v88 addObject:v43];
          goto LABEL_84;
        case 2:
          goto LABEL_13;
        case 9:
          objc_msgSend(v88, "addObject:", @"(OR TO");
          addArgumentsForExpression(v81, v3, v88);
          [v88 addObject:@"CC"];
          addArgumentsForExpression(v81, v3, v88);
          [v88 addObject:@""]);
          goto LABEL_125;
        case 11:
        case 12:
          if (objc_msgSend(v82, "qualifier", @"FROM") == 6) {
            uint64_t v7 = @"SINCE";
          }
          else {
            uint64_t v7 = @"BEFORE";
          }
          [v88 addObject:v7];
          CFArrayRef v8 = (void *)MEMORY[0x1E4F1C9C8];
          int v9 = [v82 expression];
          [v9 doubleValue];
          id v10 = objc_msgSend(v8, "dateWithTimeIntervalSince1970:");

          id v11 = NSString;
          uint64_t v12 = MFIMAPDateSearchStringForDate(v10);
          unint64_t v13 = [v11 stringWithFormat:@"\"%@\"", v12];
          [v88 addObject:v13];

          goto LABEL_38;
        default:
          goto LABEL_128;
      }
  }
}

void sub_1A80139FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A8013DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A8013F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80140B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A8014230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80144F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1A801463C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80146F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8014790(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A80148AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8014990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8014A08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8014AC4(_Unwind_Exception *exception_object)
{
}

void sub_1A8014BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A8014DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8014FF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80152F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  os_unfair_lock_unlock(v25);
  _Block_object_dispose(&a19, 8);

  _Unwind_Resume(a1);
}

void sub_1A80153C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80154AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8015554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801579C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A801591C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8015A44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8015D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Block_object_dispose((const void *)(v16 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1A8015FCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80160AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _compactMessageIfNoData(void *a1, void *a2, void *a3)
{
  id v11 = a1;
  id v5 = a2;
  id v6 = a3;
  if ([v5 isComplete])
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v7 = +[MFActivityMonitor currentMonitor];
      CFArrayRef v8 = [v7 error];

      if (!v8)
      {
        int v9 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1C978]), "initWithObjects:", v6, 0);
        id v10 = [v11 library];
        [v10 compactMessages:v9 permanently:1 notifyPersistence:0];
      }
    }
  }
}

void sub_1A80161C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1A80163D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v24 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_1A801662C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A801694C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8016A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8016B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8016D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v26 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_1A8016E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8017044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v23 - 80), 8);

  _Unwind_Resume(a1);
}

void sub_1A80171C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8017618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A801773C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80177FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80178A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8017FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A80183D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A801866C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8018764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801888C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A8018928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8018A4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8018F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A80191B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80193DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80194BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8019628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8019784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80198B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t needUTF8ForCriterion(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 criterionType] == 25)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    unint64_t v2 = objc_msgSend(v1, "criteria", 0);
    uint64_t v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v3)
    {
      uint64_t v4 = *(void *)v10;
      while (2)
      {
        for (uint64_t i = 0; i != v3; ++i)
        {
          if (*(void *)v10 != v4) {
            objc_enumerationMutation(v2);
          }
          if (needUTF8ForCriterion(*(void *)(*((void *)&v9 + 1) + 8 * i)))
          {
            uint64_t v3 = 1;
            goto LABEL_13;
          }
        }
        uint64_t v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (v3) {
          continue;
        }
        break;
      }
    }
LABEL_13:
  }
  else
  {
    id v6 = [v1 expression];
    uint64_t v7 = [v6 dataUsingEncoding:1];
    uint64_t v3 = v7 == 0;
  }
  return v3;
}

void sub_1A8019B30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __fetchArgumentsForCriterion_block_invoke(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = [v5 dataUsingEncoding:1];

  uint64_t v4 = [MEMORY[0x1E4F1CA48] array];
  objc_msgSend(v4, "addObject:", @"(OR FROM");
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", @"(OR SUBJECT");
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", @"(OR TO");
  addArgumentsForExpression(v5, v3 == 0, v4);
  objc_msgSend(v4, "addObject:", @"(OR CC");
  addArgumentsForExpression(v5, v3 == 0, v4);
  [v4 addObject:@"BODY"];
  addArgumentsForExpression(v5, v3 == 0, v4);
  [v4 addObject:@"]))"));

  if (v4) {
    [*(id *)(a1 + 32) addObject:v4];
  }
}

void sub_1A8019CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void addArgumentsForExpression(void *a1, int a2, void *a3)
{
  id v7 = a1;
  id v5 = a3;
  if (a2) {
    [v7 dataUsingEncoding:4];
  }
  else {
  id v6 = [NSString stringWithFormat:@"\"%@\"", v7];
  }
  [v5 addObject:v6];
}

void sub_1A8019DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void __fetchArgumentsForCriterion_block_invoke_488()
{
  void v4[4] = *MEMORY[0x1E4F143B8];
  v3[0] = @"MessageIsFlagged";
  v3[1] = @"MessageIsDeleted";
  v4[0] = @"FLAGGED";
  v4[1] = @"DELETED";
  v3[2] = @"MessageIsRead";
  v3[3] = @"MessageWasRepliedTo";
  _DWORD v4[2] = @"SEEN";
  v4[3] = @"ANSWERED";
  id v0 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v4 forKeys:v3 count:4];
  uint64_t v1 = [v0 copy];
  unint64_t v2 = (void *)fetchArgumentsForCriterion_flagMap;
  fetchArgumentsForCriterion_flagMap = v1;
}

void sub_1A8019EBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801A014(_Unwind_Exception *a1)
{
  id v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A801A0C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801A190(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A801A214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801A510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801A628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801A740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801A9D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801ACAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A801AFBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801B100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801B448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801B778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1A801BAA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801BB68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801BD18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801BF28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801C0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A801C2FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801C398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801C680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801C738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801CA24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801CD50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801CF3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801D090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801D118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801D1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801D40C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801D6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A801D9F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801DE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,void *a30)
{
  _Unwind_Resume(a1);
}

void sub_1A801DFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A801E318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801E5B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801E628()
{
  JUMPOUT(0x1A801E61CLL);
}

void sub_1A801E634()
{
}

void sub_1A801E734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801E7C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801E89C(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A801E928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801E99C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801EA34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801EAD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801EB68(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A801ED2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801EDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  _Unwind_Resume(a1);
}

void sub_1A801EF20(_Unwind_Exception *a1)
{
  objc_sync_exit(v2);
  _Unwind_Resume(a1);
}

void sub_1A801F11C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801F534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801F7E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_1A801F8F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A801FA80(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sanitizeStringForMarkup(void *a1)
{
  id v1 = a1;
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", @"<", @"&lt;",
    2,
    0,
    [v1 length]);
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", @">", @"&gt;",
    2,
    0,
    [v1 length]);
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", @"  ", @"&nbsp; ",
    2,
    0,
    [v1 length]);
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", @"\n", @"<BR>", 2, 0, objc_msgSend(v1, "length"));
}

void sub_1A801FB98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A801FEEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A80201F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1A8020520(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v3 - 160);

  _Unwind_Resume(a1);
}

void sub_1A802059C()
{
}

void sub_1A80205A4()
{
}

void sub_1A80205AC()
{
}

void sub_1A80205B4()
{
}

void sub_1A80205BC()
{
}

void sub_1A80205C4()
{
}

void sub_1A80206F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFLockStateMonitor;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A80208A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A8020930(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8020A24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8020AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8020BB4(_Unwind_Exception *a1)
{
  id v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A8020E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  uint64_t v26 = v25;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A8021068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8021170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80212FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, ...)
{
  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8021514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80215EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8021748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A80218B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802197C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8021A60(_Unwind_Exception *a1)
{
  id v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1A8021B28(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A8021C28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8021D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8021DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A8021E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8021EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8021FB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8022220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, void *a11, void *a12, int a13, char a14, void *a15)
{
  if (a14)
  {
  }
  if (!v21) {

  }
  _Unwind_Resume(a1);
}

void sub_1A80223E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802248C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8022A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32)
{
  objc_sync_exit(v33);

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v36 - 144));

  _Unwind_Resume(a1);
}

void sub_1A8022CF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8022E6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8022F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id downloadConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = [MEMORY[0x1E4F18DD0] backgroundSessionConfigurationWithIdentifier:a1];
  objc_msgSend(v3, "set_sourceApplicationBundleIdentifier:", *MEMORY[0x1E4F77E48]);
  [v3 setTimeoutIntervalForRequest:30.0];
  [v3 setTimeoutIntervalForResource:1800.0];
  [v3 setAllowsCellularAccess:a2];
  return v3;
}

void sub_1A8022F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802302C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8023168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1A8023354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80234A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80235E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80236E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80237B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8023868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8023934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8023B90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8023C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8023EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8023F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80242EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A8024B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Unwind_Resume(a1);
}

void sub_1A8025100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80254D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1A8025870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8025E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,void *a23,void *a24,void *a25)
{
  _Unwind_Resume(a1);
}

void sub_1A80260F0(_Unwind_Exception *a1)
{
  id v7 = v6;

  _Unwind_Resume(a1);
}

void sub_1A80262F0(_Unwind_Exception *a1)
{
  CFArrayRef v8 = v6;

  _Unwind_Resume(a1);
}

void sub_1A80265C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8026848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8026A0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8026B2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8026D78(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_4_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_1A8026F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8027254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80275DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A802788C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8027A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8027B5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8027F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A8028104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8028264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80282DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8028388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802866C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A802911C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _Unwind_Resume(a1);
}

void sub_1A8029418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802947C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8029790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _Unwind_Resume(a1);
}

void sub_1A80299DC(_Unwind_Exception *a1)
{
  id v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A8029B94(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A8029CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8029E7C(_Unwind_Exception *a1)
{
  unint64_t v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A8029FDC(_Unwind_Exception *a1)
{
  unint64_t v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A802A1AC(_Unwind_Exception *a1)
{
  unint64_t v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A802A400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802A558(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802A6E4(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A802A858(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A802A9B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802AB18(_Unwind_Exception *a1)
{
  unint64_t v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A802AC48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802AD74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802AE8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802AFB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802B03C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802B204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802B2C8(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A802B3A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802B43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802B624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802B7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A802B858()
{
}

void sub_1A802BA5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t performInsert(sqlite3_stmt *a1, void *a2)
{
  uint64_t v4 = sqlite3_step(a1);
  sqlite3_reset(a1);
  if ((v4 - 100) < 2 || v4 == 0) {
    return 1;
  }
  if (!a2) {
    return 0;
  }
  objc_msgSend(MEMORY[0x1E4F28C58], "ef_SQLiteErrorWithCode:", v4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t result = 0;
  *a2 = v7;
  return result;
}

void sub_1A802BBD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802BFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, id *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void rawAddress(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  if (a2 == 1)
  {
    uint64_t v5 = sqlite3_value_text(*a3);
    if (v5)
    {
      id v9 = (id)[[NSString alloc] initWithBytesNoCopy:v5 length:sqlite3_value_bytes(*a3) encoding:4 freeWhenDone:0];
      id v6 = objc_msgSend(MEMORY[0x1E4F605B0], "rawAddressFromFullAddress:cacheResults:");
      if ([v6 length]) {
        sqlite3_result_text(a1, (const char *)[v6 UTF8String], -1, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
      }
      else {
        sqlite3_result_null(a1);
      }
    }
    else
    {
      sqlite3_result_null(a1);
    }
  }
  else
  {
    CFArrayRef v8 = [MEMORY[0x1E4F60B80] log];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      rawAddress_cold_1(a2, v8);
    }
  }
}

void sub_1A802C1A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void displayName(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  if (a2 == 1)
  {
    uint64_t v5 = sqlite3_value_text(*a3);
    if (v5)
    {
      id v9 = (id)[[NSString alloc] initWithBytesNoCopy:v5 length:sqlite3_value_bytes(*a3) encoding:4 freeWhenDone:0];
      id v6 = objc_msgSend(MEMORY[0x1E4F605B0], "displayNameFromAddress:cacheResults:");
      if ([v6 length] && (objc_msgSend(v6, "isEqualToString:", v9) & 1) == 0) {
        sqlite3_result_text(a1, (const char *)[v6 UTF8String], -1, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
      }
      else {
        sqlite3_result_text(a1, "", 0, 0);
      }
    }
    else
    {
      sqlite3_result_null(a1);
    }
  }
  else
  {
    CFArrayRef v8 = [MEMORY[0x1E4F60B80] log];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      displayName_cold_1(a2, v8);
    }
  }
}

void sub_1A802C340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802C4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A802C59C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802CAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A802CB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802CC30(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A802CE34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802D04C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802D1D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802D388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802D4D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802D614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802D69C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802D9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A802DD88(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A802DEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A802DFE8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    id v7 = objc_begin_catch(a1);
    CFArrayRef v8 = EDLibraryLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      __78__MFMailMessageLibraryLocalActionsTablesMigrationStep__offlineCacheOperations__block_invoke_cold_1((uint64_t)v7, v8, v9);
    }

    objc_end_catch();
    JUMPOUT(0x1A802DFCCLL);
  }

  _Unwind_Resume(a1);
}

void sub_1A802E078()
{
  objc_end_catch();
  JUMPOUT(0x1A802DFFCLL);
}

void sub_1A802E390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Unwind_Resume(a1);
}

void sub_1A802E4AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802E5E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802E714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802E7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802EC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A802EE1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802EF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802F044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802F0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802F368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802F488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A802F5BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A802F8CC(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1A802FA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80301EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,id a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,id a59)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a44, 8);

  _Block_object_dispose(&a48, 8);
  _Block_object_dispose(&a54, 8);

  _Block_object_dispose((const void *)(v63 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1A8030494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8030568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80306EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80307EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A803099C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8030A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8030BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8030C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8031014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);

  _Unwind_Resume(a1);
}

void sub_1A803117C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A803123C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80313F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80314D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80315B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8031708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80317AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A803186C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8031980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8031AF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8031BD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8031CAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8031E04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8031EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8031F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8032000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A803260C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8032A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8032D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A80331AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A80333A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80334A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8033860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80339FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _LibraryVersion(sqlite3 *a1)
{
  ppStmt = 0;
  if (sqlite3_prepare_v2(a1, "SELECT value FROM properties WHERE id key = 'version'", -1, &ppStmt, 0)) {
    return 0;
  }
  if (sqlite3_step(ppStmt) == 100) {
    uint64_t v1 = sqlite3_column_int(ppStmt, 0);
  }
  else {
    uint64_t v1 = 0;
  }
  sqlite3_finalize(ppStmt);
  return v1;
}

void sub_1A8033DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1A8033EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A803CC38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _InitializeSchema(sqlite3 *a1, void *a2)
{
  uint64_t v3 = [a2 definitionWithDatabaseName:0];
  int v4 = _ExecuteSQL(a1, v3, @"performing statements from schema definition");

  if (!v4) {
    return 0;
  }
  uint64_t v5 = _SQLFromFile();
  if (v5) {
    uint64_t v6 = _ExecuteSQL(a1, v5, @"performing statements from file \"triggers.sql\"");
  }
  else {
    uint64_t v6 = 1;
  }

  return v6;
}

void sub_1A803D4F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _FixZeroedConversationHashes(sqlite3 *a1)
{
  ppStmt = (sqlite3_stmt *)0xAAAAAAAAAAAAAAAALL;
  int v2 = sqlite3_prepare_v2(a1, "SELECT rowid FROM messages WHERE conversation_id = 0 or conversation_id is NULL", -1, &ppStmt, 0);
  BOOL v3 = v2 == 0;
  id v4 = objc_alloc_init(MEMORY[0x1E4F60DB8]);
  if (!v2 && ppStmt)
  {
    while (1)
    {
      int v5 = sqlite3_step(ppStmt);
      if (v5 != 100) {
        break;
      }
      objc_msgSend(v4, "addIndex:", sqlite3_column_int64(ppStmt, 0));
    }
    _HandleSQLiteError(a1, @"gathering library ids of messages without conversation hashes");
    BOOL v3 = v5 == 101;
    sqlite3_finalize(ppStmt);
  }
  if (v3)
  {
    if ([v4 count])
    {
      sqlite3_int64 v6 = [v4 firstIndex];
      BOOL v7 = sqlite3_prepare_v2(a1, "UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL WHERE rowid = ?", -1, &ppStmt, 0) == 0;
      while (v7 && v6 != 0x7FFFFFFFFFFFFFFFLL)
      {
        sqlite3_int64 v8 = MFUniqueMessageIDHash();
        sqlite3_bind_int64(ppStmt, 1, v8);
        sqlite3_bind_int64(ppStmt, 2, v6);
        int v9 = sqlite3_step(ppStmt);
        BOOL v7 = v9 == 101;
        if (v9 == 101) {
          sqlite3_reset(ppStmt);
        }
        sqlite3_int64 v6 = [v4 indexGreaterThanIndex:v6];
      }
      _HandleSQLiteError(a1, @"updating messages with new conversation hashes");
      sqlite3_finalize(ppStmt);
    }
    else
    {
      BOOL v7 = 1;
    }
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

void sub_1A803D6A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _DropMessageDeletedIndex(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "DROP INDEX message_deleted_index", 0, 0, 0) == 0;
  _HandleSQLiteError(a1, @"dropping message deleted index");
  return v2;
}

BOOL _AddVIPSenderColumn(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "ALTER TABLE messages ADD COLUMN sender_vip;", 0, 0, 0) == 0;
  _HandleSQLiteError(a1, @"adding sender_vip column");
  return v2;
}

BOOL _AddUniqueRemoteIDColumn(sqlite3 *a1)
{
  int v2 = sqlite3_exec(a1, "ALTER TABLE messages ADD COLUMN unique_id;", 0, 0, 0);
  _HandleSQLiteError(a1, @"adding unique_id column");
  return v2 == 0;
}

BOOL _AddContentTransactionIDColumn(sqlite3 *a1)
{
  int v2 = sqlite3_exec(a1, "ALTER TABLE messages ADD COLUMN content_index_transaction_id INTEGER;", 0, 0, 0);
  _HandleSQLiteError(a1, @"adding content_index_transaction_id column");
  if (v2) {
    return 0;
  }
  BOOL v3 = sqlite3_exec(a1, "CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id);",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"adding content_index_transaction_id index");
  return v3;
}

BOOL _ImproveMessageConversationIndexes(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "DROP INDEX IF EXISTS message_conversation_id_index;\n"
         "CREATE INDEX message_conversation_id_index ON messages(conversation_id, mailbox, read, date_received);\n"
         "DROP INDEX IF EXISTS message_oldest_conversation_index;\n"
         "CREATE INDEX message_oldest_conversation_index on messages(mailbox, conversation_id, date_received);",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"replacing conversation indexes");
  return v2;
}

BOOL _AddSequenceIdentifierIndex(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "DROP INDEX IF EXISTS message_sequence_identifier_index;\n"
         "CREATE INDEX message_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"adding sequence identifier index");
  return v2;
}

uint64_t _AddFlaggedAndAttachmentColumnsAndTriggers(sqlite3 *a1)
{
  int v2 = sqlite3_exec(a1, "ALTER TABLE mailboxes ADD COLUMN flagged_count INTEGER DEFAULT 0; ALTER TABLE mailboxes ADD COLUMN attachment_c"
         "ount INTEGER DEFAULT 0;",
         0,
         0,
         0);
  _HandleSQLiteError(a1, @"altering mailboxes table");
  if (v2) {
    return 0;
  }
  int v3 = sqlite3_exec(a1, "update mailboxes set flagged_count = (select count(*) from messages where mailbox = mailboxes.rowid AND flags&16 > 0);",
         0,
         0,
         0);
  _HandleSQLiteError(a1, @"updating flagged_count");
  if (v3) {
    return 0;
  }
  int v4 = sqlite3_exec(a1, "update mailboxes set attachment_count = (select count(*) from messages where mailbox = mailboxes.rowid AND (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0);",
         0,
         0,
         0);
  _HandleSQLiteError(a1, @"updating attachment_count");
  if (v4) {
    return 0;
  }
  BOOL v7 = _SQLFromFile();
  uint64_t v5 = _ExecuteSQL(a1, v7, @"performing statements from file \"triggers.sql\"");

  return v5;
}

void sub_1A803D9EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _AddToCcCountColumnAndTriggers(sqlite3 *a1)
{
  int v2 = sqlite3_exec(a1, "ALTER TABLE mailboxes ADD COLUMN to_cc_count INTEGER DEFAULT 0;", 0, 0, 0);
  _HandleSQLiteError(a1, @"altering mailboxes table");
  if (v2) {
    return 0;
  }
  int v3 = sqlite3_exec(a1, "INSERT OR REPLACE INTO properties (key, value) VALUES ('MaxRowIdForMigrationToVersion31', (SELECT MAX(rowid) FROM messages));",
         0,
         0,
         0);
  _HandleSQLiteError(a1, @"adding maxrowid property");
  if (v3) {
    return 0;
  }
  sqlite3_int64 v6 = _SQLFromFile();
  uint64_t v4 = _ExecuteSQL(a1, v6, @"performing statements from file \"triggers.sql\"");

  return v4;
}

void sub_1A803DAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddServerOnlyUnreadCountColumn(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "ALTER TABLE mailboxes ADD COLUMN server_unread_count INTEGER DEFAULT 0;", 0, 0, 0) == 0;
  _HandleSQLiteError(a1, @"altering mailboxes table");
  return v2;
}

uint64_t _SochiFixFlaggedCount(sqlite3 *a1)
{
  int v2 = sqlite3_exec(a1, "UPDATE mailboxes SET flagged_count = (select count(*) FROM messages WHERE mailbox = mailboxes.rowid AND flags&16 > 0 AND flags&2 == 0);",
         0,
         0,
         0);
  _HandleSQLiteError(a1, @"updating flagged_count");
  if (v2) {
    return 0;
  }
  uint64_t v4 = _SQLFromFile();
  uint64_t v3 = _ExecuteSQL(a1, v4, @"performing statements from file \"triggers.sql\"");

  return v3;
}

void sub_1A803DB9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddConversationFlags(sqlite3 *a1)
{
  unint64_t v2 = 0;
  do
  {
    int v3 = sqlite3_exec(a1, off_1E5D3F5D8[v2], 0, 0, 0);
    _HandleSQLiteError(a1, @"creating conversations and conversation_id_message_id tables");
    if (v2 > 4) {
      break;
    }
    ++v2;
  }
  while (!v3);
  return v3 == 0;
}

BOOL _ResetStatusCountsForDrafts(sqlite3 *a1)
{
  ppStmt = (sqlite3_stmt *)0xAAAAAAAAAAAAAAAALL;
  int v2 = sqlite3_prepare_v2(a1, "SELECT DISTINCT mailbox FROM messages WHERE flags&64 = 64;", -1, &ppStmt, 0);
  BOOL v3 = v2 == 0;
  id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  if (!v2)
  {
    uint64_t v5 = ppStmt;
    if (ppStmt)
    {
      while (1)
      {
        int v6 = sqlite3_step(v5);
        if (v6 != 100) {
          break;
        }
        BOOL v7 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithLongLong:", sqlite3_column_int64(ppStmt, 0));
        [v4 addObject:v7];

        uint64_t v5 = ppStmt;
      }
      _HandleSQLiteError(a1, @"finding mailbox IDs of draft mailboxes");
      BOOL v3 = v6 == 101;
      sqlite3_finalize(ppStmt);
    }
  }
  if (v3)
  {
    id v8 = [v4 componentsJoinedByString:@", "];
    int v9 = (const char *)[v8 UTF8String];

    long long v10 = sqlite3_mprintf("UPDATE mailboxes SET last_sync_status_count = 0, most_recent_status_count = 0 WHERE url LIKE 'imap:%%' AND rowid IN (%s)", v9);
    LODWORD(v9) = sqlite3_exec(a1, v10, 0, 0, 0);
    sqlite3_free(v10);
    BOOL v11 = v9 == 0;
    _HandleSQLiteError(a1, @"updating count columns for non-draft mailboxes");
  }
  else
  {
    BOOL v11 = 0;
  }

  return v11;
}

void sub_1A803DDA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddProtectedDataIndexes(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "CREATE INDEX IF NOT EXISTS messages_subject_index ON messages(subject);\n"
         "CREATE INDEX IF NOT EXISTS messages_summary_index ON messages(summary);\n"
         "CREATE INDEX IF NOT EXISTS recipients_address_index ON recipients(address);\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"Creating indexes to protected data");
  return v2;
}

void _HandleSQLiteError(sqlite3 *a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = sqlite3_errcode(a1);
  int v5 = v4;
  if ((v4 - 100) >= 2 && v4)
  {
    int v6 = +[MFMailMessageLibraryMigrator log];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7[0] = 67109634;
      v7[1] = v5;
      __int16 v8 = 2114;
      id v9 = v3;
      __int16 v10 = 2082;
      BOOL v11 = sqlite3_errmsg(a1);
      _os_log_impl(&dword_1A7EFF000, v6, OS_LOG_TYPE_DEFAULT, "Error %d %{public}@: %{public}s", (uint8_t *)v7, 0x1Cu);
    }
  }
}

void sub_1A803DF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddThreadsSendersAndRecipientsIndexes(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "CREATE INDEX IF NOT EXISTS thread_senders_address_thread_index ON thread_senders(address, thread);\n"
         "CREATE INDEX IF NOT EXISTS thread_senders_thread_priority_date_index ON thread_senders(thread, priority, date);"
         "\n"
         "CREATE INDEX IF NOT EXISTS thread_recipients_address_thread_index ON thread_recipients(address, thread);\n"
         "CREATE INDEX IF NOT EXISTS thread_recipients_thread_priority_date_index ON thread_recipients(thread, priority, date);\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"Creating indexes for thread_senders and thread_recipients");
  return v2;
}

BOOL _AddThreadsJournaledColumn(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "ALTER TABLE threads ADD COLUMN journaled INTEGER NOT NULL DEFAULT 0;\n"
         "CREATE INDEX IF NOT EXISTS threads_journaled_scope_date_conversation_index ON threads(journaled, scope, date, c"
         "onversation);\n"
         "CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, c"
         "onversation) WHERE journaled = 1;\n"
         "DROP INDEX IF EXISTS threads_scope_read_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_flagged_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_red_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_orange_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_yellow_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_green_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_blue_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_purple_flag_date_conversation_index;\n"
         "DROP INDEX IF EXISTS threads_scope_has_gray_flag_date_conversation_index;\n"
         "CREATE INDEX IF NOT EXISTS messages_mailbox_conversation_id_flag_color_date_received_journaled_index ON message"
         "s(mailbox, conversation_id, flag_color, date_received, journaled);\n"
         "DROP INDEX IF EXISTS messages_mailbox_conversation_id_flag_color_date_received_index;\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"Adding threads.journaled and tweaking some indexes");
  return v2;
}

BOOL _AddMessageIndexesForThreadQueries(sqlite3 *a1)
{
  v11[4] = *MEMORY[0x1E4F143B8];
  BOOL v2 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF505B0];
  v11[0] = v2;
  id v3 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF505C8];
  v11[1] = v3;
  int v4 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF505E0];
  v11[2] = v4;
  int v5 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF505F8];
  v11[3] = v5;
  int v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:4];

  BOOL v7 = objc_msgSend(v6, "ef_map:", &__block_literal_global_774);
  id v8 = [v7 componentsJoinedByString:@"\n"];
  id v9 = (const char *)[v8 UTF8String];

  LODWORD(v7) = sqlite3_exec(a1, v9, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating indexes for thread_senders and thread_recipients");

  return v7 == 0;
}

void sub_1A803E1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddMessageIDIndex(sqlite3 *a1)
{
  BOOL v2 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF50610];
  id v3 = [v2 definitionWithDatabaseName:0];
  int v4 = (const char *)[v3 UTF8String];

  LODWORD(v3) = sqlite3_exec(a1, v4, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating messages_message_id_deleted_journaled_read_mailbox_index");

  return v3 == 0;
}

void sub_1A803E2B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddSenderVIPUnreadCountQueryIndex(sqlite3 *a1)
{
  v17[4] = *MEMORY[0x1E4F143B8];
  BOOL v2 = [MEMORY[0x1E4F60E78] column:@"sender_vip"];
  id v3 = [v2 equalTo:&unk_1EFF50DD8];

  int v4 = [MEMORY[0x1E4F60E78] column:@"journaled"];
  int v5 = [v4 equalTo:&unk_1EFF50DF0];

  int v6 = [MEMORY[0x1E4F60E78] column:@"deleted"];
  BOOL v7 = [v6 equalTo:&unk_1EFF50DF0];

  id v8 = [MEMORY[0x1E4F60E78] column:@"read"];
  id v9 = [v8 equalTo:&unk_1EFF50DF0];

  id v10 = objc_alloc(MEMORY[0x1E4F60E48]);
  v17[0] = v3;
  v17[1] = v5;
  v17[2] = v7;
  v17[3] = v9;
  BOOL v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v17 count:4];
  uint64_t v12 = (void *)[v10 initWithExpressions:v11];

  unint64_t v13 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF50628 where:v12 unique:0];
  id v14 = [v13 definitionWithDatabaseName:0];
  id v15 = (const char *)[v14 UTF8String];

  LODWORD(v14) = sqlite3_exec(a1, v15, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating messages_sender_vip_deleted_journaled_read_message_id_index");

  return v14 == 0;
}

void sub_1A803E4F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _UpdateDeletedMailboxIndex(sqlite3 *a1)
{
  v8[2] = *MEMORY[0x1E4F143B8];
  BOOL v2 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF50640];
  v8[0] = @"DROP INDEX IF EXISTS messages_deleted_mailbox_index;";
  id v3 = [v2 definitionWithDatabaseName:0];
  v8[1] = v3;
  int v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  id v5 = [v4 componentsJoinedByString:@"\n"];
  int v6 = (const char *)[v5 UTF8String];

  LODWORD(v3) = sqlite3_exec(a1, v6, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating messages_deleted_mailbox_date_received_index");

  return v3 == 0;
}

void sub_1A803E6C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddJournaledUndeletedIndex(sqlite3 *a1)
{
  v13[2] = *MEMORY[0x1E4F143B8];
  BOOL v2 = [MEMORY[0x1E4F60E78] column:@"journaled"];
  id v3 = [v2 equalTo:&unk_1EFF50DD8];

  int v4 = [MEMORY[0x1E4F60E78] column:@"deleted"];
  id v5 = [v4 equalTo:&unk_1EFF50DF0];

  id v6 = objc_alloc(MEMORY[0x1E4F60E48]);
  v13[0] = v3;
  v13[1] = v5;
  BOOL v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:2];
  id v8 = (void *)[v6 initWithExpressions:v7];

  id v9 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF50658 where:v8 unique:0];
  id v10 = [v9 definitionWithDatabaseName:0];
  BOOL v11 = (const char *)[v10 UTF8String];

  LODWORD(v10) = sqlite3_exec(a1, v11, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating messages_journaled_deleted_date_received_index");

  return v10 == 0;
}

void sub_1A803E8AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddThreadJournaledDateIndex(sqlite3 *a1)
{
  id v2 = objc_alloc(MEMORY[0x1E4F60EB0]);
  id v3 = [MEMORY[0x1E4F60E78] column:@"journaled"];
  int v4 = [v3 equalTo:&unk_1EFF50DD8];
  id v5 = (void *)[v2 initWithTableName:@"threads" columnNames:&unk_1EFF50670 where:v4 unique:0];

  id v6 = [v5 definitionWithDatabaseName:0];
  BOOL v7 = (const char *)[v6 UTF8String];

  LODWORD(v6) = sqlite3_exec(a1, v7, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating threads_journaled_date_scope_conversation_index");

  return v6 == 0;
}

void sub_1A803EA14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _AddUnreadCountJournalIndexes(sqlite3 *a1)
{
  v11[3] = *MEMORY[0x1E4F143B8];
  id v2 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"conversations" columnNames:&unk_1EFF50688];
  id v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F60EB0]), "initWithTableName:columnNames:", @"messages", &unk_1EFF506A0, v2);
  v11[1] = v3;
  int v4 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF506B8];
  v11[2] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:3];

  id v6 = objc_msgSend(v5, "ef_map:", &__block_literal_global_870);
  id v7 = [v6 componentsJoinedByString:@"\n"];
  id v8 = (const char *)[v7 UTF8String];

  LODWORD(v6) = sqlite3_exec(a1, v8, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating indexes for conversations and message unread counts");
  if (v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = _ExecuteQueries(a1, (uint64_t)off_1E5D3F6A8, 2, @"Updating indexes for unread counts");
  }

  return v9;
}

void sub_1A803EBEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddAppBadgeCountIndexes(sqlite3 *a1)
{
  v11[3] = *MEMORY[0x1E4F143B8];
  id v2 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF506D0];
  id v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F60EB0]), "initWithTableName:columnNames:", @"messages", &unk_1EFF506E8, v2);
  v11[1] = v3;
  int v4 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"thread_mailboxes" columnNames:&unk_1EFF50700];
  v11[2] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:3];

  id v6 = objc_msgSend(v5, "ef_map:", &__block_literal_global_898);
  id v7 = [v6 arrayByAddingObjectsFromArray:&unk_1EFF50718];
  id v8 = [v7 componentsJoinedByString:@"\n"];
  uint64_t v9 = (const char *)[v8 UTF8String];

  LODWORD(v6) = sqlite3_exec(a1, v9, 0, 0, 0);
  _HandleSQLiteError(a1, @"Creating indexes for app badge count");

  return v6 == 0;
}

void sub_1A803EDDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _protectedIndexHasBeenInitialized(void *a1)
{
  id v1 = a1;
  if (([v1 protectedDatabaseAttached] & 1) == 0)
  {
    int v4 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"BOOL _protectedIndexHasBeenInitialized(EDPersistenceDatabaseConnection *__strong)"];
    [v4 handleFailureInFunction:v5 file:@"MFMailMessageLibraryMigrator.m" lineNumber:3074 description:@"Protected database must be attached"];
  }
  uint64_t v2 = [v1 tableExists:@"addresses" inDatabase:@"protected"];

  return v2;
}

void sub_1A803EEF8(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

BOOL _ResetSummary(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "UPDATE messages SET summary = NULL WHERE summary in (select rowid from protected.summaries where summary = 'This message has no content');\n"
         "DELETE FROM protected.summaries where summary = 'This message has no content'\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"Deleting all summaries = 'This message has no content' in protected data");
  return v2;
}

BOOL _AddDeletedToMessagesConversationIDIndexes(sqlite3 *a1)
{
  v13[5] = *MEMORY[0x1E4F143B8];
  BOOL v2 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF50778];
  id v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F60EB0]), "initWithTableName:columnNames:", @"messages", &unk_1EFF50790, v2);
  v13[1] = v3;
  int v4 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF507A8];
  v13[2] = v4;
  id v5 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF507C0];
  void v13[3] = v5;
  id v6 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"messages" columnNames:&unk_1EFF507D8];
  void v13[4] = v6;
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:5];

  id v8 = objc_msgSend(v7, "ef_map:", &__block_literal_global_954);
  uint64_t v9 = [v8 arrayByAddingObjectsFromArray:&unk_1EFF507F0];
  id v10 = [v9 componentsJoinedByString:@"\n"];
  BOOL v11 = (const char *)[v10 UTF8String];

  LODWORD(v8) = sqlite3_exec(a1, v11, 0, 0, 0);
  _HandleSQLiteError(a1, @"Adding deleted to conversation_id indexes");

  return v8 == 0;
}

void sub_1A803F160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _AddFilterIndexesAndRemoveTriggers(sqlite3 *a1)
{
  v35[4] = *MEMORY[0x1E4F143B8];
  long long v25 = (void *)[objc_alloc(MEMORY[0x1E4F60EB8]) initWithColumnName:@"mailbox"];
  uint64_t v30 = (void *)[objc_alloc(MEMORY[0x1E4F60EB8]) initWithColumnName:@"date_received"];
  BOOL v2 = [MEMORY[0x1E4F60E78] column:@"deleted"];
  uint64_t v29 = [v2 equalTo:&unk_1EFF50DF0];

  id v3 = [MEMORY[0x1E4F60E78] column:@"journaled"];
  int v28 = [v3 equalTo:&unk_1EFF50DF0];

  int v4 = [MEMORY[0x1E4F60E78] column:@"read"];
  uint64_t v24 = a1;
  long long v27 = [v4 equalTo:&unk_1EFF50DF0];

  id v5 = objc_alloc(MEMORY[0x1E4F60EB0]);
  uint64_t v34 = v30;
  uint64_t v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v34 count:1];
  id v6 = objc_alloc(MEMORY[0x1E4F60E48]);
  v33[0] = v29;
  v33[1] = v28;
  v33[2] = v27;
  uint64_t v23 = [MEMORY[0x1E4F1C978] arrayWithObjects:v33 count:3];
  id v7 = objc_msgSend(v6, "initWithExpressions:");
  id v8 = (void *)[v5 initWithName:@"messages_date_received_deleted0_journaled0_read0_index" tableName:@"messages" indexedColumns:v26 where:v7 unique:0];
  v35[0] = v8;
  id v9 = objc_alloc(MEMORY[0x1E4F60EB0]);
  v32[0] = v25;
  v32[1] = v30;
  id v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v32 count:2];
  id v11 = objc_alloc(MEMORY[0x1E4F60E48]);
  v31[0] = v29;
  v31[1] = v28;
  v31[2] = v27;
  uint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v31 count:3];
  unint64_t v13 = (void *)[v11 initWithExpressions:v12];
  id v14 = (void *)[v9 initWithName:@"messages_mailbox_date_received_deleted0_journaled0_read0_index" tableName:@"messages" indexedColumns:v10 where:v13 unique:0];
  v35[1] = v14;
  id v15 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"threads" columnNames:&unk_1EFF50808];
  void v35[2] = v15;
  uint64_t v16 = (void *)[objc_alloc(MEMORY[0x1E4F60EB0]) initWithTableName:@"threads" columnNames:&unk_1EFF50820];
  void v35[3] = v16;
  id v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v35 count:4];

  uint64_t v18 = objc_msgSend(v17, "ef_map:", &__block_literal_global_1002);
  uint32_t v19 = [v18 arrayByAddingObjectsFromArray:&unk_1EFF50838];
  id v20 = [v19 componentsJoinedByString:@"\n"];
  id v21 = (const char *)[v20 UTF8String];

  LODWORD(v18) = sqlite3_exec(v24, v21, 0, 0, 0);
  _HandleSQLiteError(v24, @"Creating indexes for unread filters and dropping triggers");

  return v18 == 0;
}

void sub_1A803F5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

BOOL _ModifyMessagesSearchableMessageIndex(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "DROP INDEX IF EXISTS messages_deleted_searchable_message_index;\n"
         "CREATE INDEX IF NOT EXISTS messages_searchable_message_deleted_index ON messages(searchable_message, deleted);\n",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"Replacing messages_deleted_searchable_message_index with messages_searchable_message_deleted_index");
  return v2;
}

BOOL _AddMessagesMailboxDeletedDateReceivedIndex(sqlite3 *a1)
{
  BOOL v2 = sqlite3_exec(a1, "CREATE INDEX IF NOT EXISTS messages_mailbox_deleted_date_received_index ON messages(mailbox, deleted, date_received) WHERE journaled = 0;",
         0,
         0,
         0) == 0;
  _HandleSQLiteError(a1, @"Adding messages_mailbox_deleted_date_received_index");
  return v2;
}

uint64_t _UpdateGlobalIDIndex(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_msgSend(v1, "executeStatementString:errorMessage:", @"DROP INDEX IF EXISTS messages_global_message_id_index;",
         @"Unable to drop index messages_global_message_id_index");
  id v3 = objc_alloc(MEMORY[0x1E4F60EB0]);
  int v4 = [MEMORY[0x1E4F60B40] messagesTableName];
  id v5 = (void *)[v3 initWithTableName:v4 columnNames:&unk_1EFF50850];

  id v6 = [v5 definitionWithDatabaseName:0];
  if (v2) {
    uint64_t v2 = [v1 executeStatementString:v6 errorMessage:@"Unable to add index messages_global_message_id_mailbox_index"];
  }

  return v2;
}

void sub_1A803F868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _resetLocalAccountMboxCache()
{
  id v0 = +[LocalAccount localAccount];
  id v1 = [v0 mailboxCachePath];
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v15 = 0;
  int v3 = [v2 removeItemAtPath:v1 error:&v15];
  id v4 = v15;

  if (v3)
  {
    [v0 resetMailboxCache];
    id v5 = (id)[v0 sendLaterFolder];
    id v6 = (id)[v0 transientDraftsFolder];
    id v7 = +[MailAccount outboxMailboxUid];
  }
  else
  {
    id v8 = +[MFMailMessageLibraryMigrator log];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      _resetLocalAccountMboxCache_cold_1((uint64_t)v4, v8, v9, v10, v11, v12, v13, v14);
    }
  }
}

void sub_1A803F9B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _AddFilterPredicateToInboxThreadScopes(void *a1, uint64_t a2)
{
  v23[2] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = objc_alloc(MEMORY[0x1E4F60EF8]);
  id v5 = (void *)[v4 initWithResultColumn:*MEMORY[0x1E4F60D08] table:@"mailboxes"];
  id v6 = [MEMORY[0x1E4F60E78] column:@"url"];
  id v7 = [v6 endsWith:@"INBOX" caseSensitive:0];
  [v5 setWhere:v7];

  id v8 = (void *)[objc_alloc(MEMORY[0x1E4F60F10]) initWithTable:@"thread_scopes" conflictResolution:4];
  uint64_t v9 = [MEMORY[0x1E4F60E78] column:@"filter_predicate"];
  uint64_t v10 = [MEMORY[0x1E4F60EA8] ifNull:v9 second:&unk_1EFF50DF0];
  uint64_t v11 = (void *)MEMORY[0x1E4F60E68];
  uint64_t v12 = [MEMORY[0x1E4F28ED0] numberWithUnsignedInteger:a2];
  uint64_t v13 = [v11 or:v10 with:v12];
  [v8 setObject:v13 forKeyedSubscript:@"filter_predicate"];

  uint64_t v14 = [MEMORY[0x1E4F60E78] column:@"mailbox_type"];
  id v15 = [v14 equalTo:&unk_1EFF50E08];

  uint64_t v16 = [MEMORY[0x1E4F60E78] column:@"mailbox"];
  id v17 = [v16 in:v5];

  uint64_t v18 = (void *)MEMORY[0x1E4F60ED8];
  v23[0] = v15;
  v23[1] = v17;
  uint32_t v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v23 count:2];
  id v20 = [v18 combined:v19];
  [v8 setWhereClause:v20];

  uint64_t v21 = [v3 executeUpdateStatement:v8 error:0];
  return v21;
}

void sub_1A803FC5C(_Unwind_Exception *a1)
{
  uint64_t v10 = v6;

  _Unwind_Resume(a1);
}

BOOL _AddMessagesGlobalMessageIDUnreadUndeletedIndex(void *a1)
{
  id v1 = a1;
  BOOL v2 = sqlite3_exec((sqlite3 *)[v1 sqlDB], "CREATE INDEX IF NOT EXISTS messages_read_deleted_global_message_id_mailbox_read0_deleted0_index ON messages(read, deleted, global_message_id, mailbox) WHERE (read = 0 AND deleted = 0);",
         0,
         0,
         0) == 0;

  return v2;
}

void sub_1A803FD78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A803FE68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A803FFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A804029C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_1A80403D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804056C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80406FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8040834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80409A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8040A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8040B20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __EFGetElapsedTimeSinceAbsoluteTime_block_invoke_0()
{
  return mach_timebase_info((mach_timebase_info_t)&EFGetElapsedTimeSinceAbsoluteTime_sTimebaseInfo_0);
}

uint64_t _ExecuteSQL(sqlite3 *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5 && !sqlite3_exec(a1, (const char *)[v5 UTF8String], 0, 0, 0))
  {
    uint64_t v7 = 1;
  }
  else
  {
    _HandleSQLiteError(a1, v6);
    uint64_t v7 = 0;
  }

  return v7;
}

void sub_1A8040C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id _SQLFromFile()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v0 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
  id v1 = [v0 pathForResource:@"triggers.sql" ofType:0];

  if (v1)
  {
    id v7 = 0;
    BOOL v2 = (void *)[[NSString alloc] initWithContentsOfFile:v1 encoding:4 error:&v7];
    id v3 = v7;
    if (!v2)
    {
      id v4 = +[MFMailMessageLibraryMigrator log];
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        id v5 = [v3 ef_publicDescription];
        *(_DWORD *)buf = 138412546;
        uint64_t v9 = v1;
        __int16 v10 = 2114;
        uint64_t v11 = v5;
        _os_log_impl(&dword_1A7EFF000, v4, OS_LOG_TYPE_DEFAULT, "Error: failed to get contents of \"%@\": %{public}@", buf, 0x16u);
      }
    }
  }
  else
  {
    id v3 = +[MFMailMessageLibraryMigrator log];
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v9 = @"triggers.sql";
      _os_log_impl(&dword_1A7EFF000, v3, OS_LOG_TYPE_DEFAULT, "Error: failed to find \"%@\"", buf, 0xCu);
    }
    BOOL v2 = 0;
  }

  return v2;
}

void sub_1A8040E40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _ExecuteQueries(sqlite3 *a1, uint64_t a2, int a3, void *a4)
{
  id v7 = a4;
  if (a3 < 1)
  {
    uint64_t v11 = 1;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = a3;
    do
    {
      uint64_t v10 = executeQuery(1, a1, *(const char **)(a2 + 8 * v8), v7);
      uint64_t v11 = v10;
      if (++v8 < v9) {
        char v12 = v10;
      }
      else {
        char v12 = 0;
      }
    }
    while ((v12 & 1) != 0);
  }

  return v11;
}

void sub_1A8040F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t executeQuery(int a1, sqlite3 *a2, const char *a3, void *a4)
{
  LODWORD(v6) = a1;
  id v7 = a4;
  LODWORD(a3) = sqlite3_exec(a2, a3, 0, 0, 0);
  _HandleSQLiteError(a2, v7);
  if (a3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v6;
  }

  return v6;
}

void sub_1A8040F8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804114C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804150C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80419B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8041BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8041DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804245C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042790(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A8042824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80429F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042A9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8042ECC(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A8043094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8043AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28,void *a29)
{
  _Unwind_Resume(a1);
}

void sub_1A8043D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8043F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80440B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8044308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80445C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8044760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804480C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8044990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804509C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,void *a27,void *a28)
{
  _Unwind_Resume(a1);
}

void sub_1A8045240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38)
{
  JUMPOUT(0x1A8045214);
}

void sub_1A80452E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8045590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80456FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8045810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80458AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8045BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1A8045D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8045DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8045FF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8046168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8046298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80463EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8046B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,os_activity_scope_state_s state)
{
  _Unwind_Resume(a1);
}

void sub_1A8046E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8046F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8047010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80473DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A804763C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8047828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80479CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8047AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8047B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8047C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8047D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8047DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80482F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1A80485E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A80486C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804880C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v3);
  _Unwind_Resume(a1);
}

void sub_1A804885C()
{
}

void sub_1A8048A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8048BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8048CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8048D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8048F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8049000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80490A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8049154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8049250(_Unwind_Exception *a1)
{
  uint64_t v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A8049388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8049400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80496F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1A804987C(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A8049AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8049B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8049C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8049CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8049DAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8049E40(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A8049F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804A078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804A138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804A1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804A418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A804A948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A804ADD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_1A804AF50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804AFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804B084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  char v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A804B15C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804B284(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A804B330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804B400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804B8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A804BB88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804BC3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804BD00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804BDF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804BEA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804BF3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804C0E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804C4F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_1A804C608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804C6A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804C890(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804CA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A804CE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804D108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804D518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A804D7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804D86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804D970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804DCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804DF74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804E02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A804E134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804E310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A804F56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,void *a23,uint64_t a24,void *a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,void *a32)
{
  _Block_object_dispose(&STACK[0x280], 8);
  _Block_object_dispose(&STACK[0x2B0], 8);

  _Unwind_Resume(a1);
}

void sub_1A804FB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A804FC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1A804FD58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A804FEA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80500B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80501F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80503B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805047C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805056C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8050648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (!v10) {

  }
  _Unwind_Resume(a1);
}

void sub_1A80507F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1A8050AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_1A8050C00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8050EB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8050FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8051134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805126C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8051338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805149C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8051A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  _Unwind_Resume(a1);
}

void sub_1A8051CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1A8051F08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80520E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8052190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80522A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80523E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A8052500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8052624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8052748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8052898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (v12) {

  }
  _Unwind_Resume(a1);
}

void sub_1A8052AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8052CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A8052EB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8053354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33)
{
  _Unwind_Resume(a1);
}

void sub_1A8053638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19)
{
  objc_destroyWeak(v22);
  objc_destroyWeak((id *)(v23 - 72));

  _Unwind_Resume(a1);
}

void sub_1A80539D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  objc_destroyWeak(v35);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);

  _Unwind_Resume(a1);
}

void sub_1A8054078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8054288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80546B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80548E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8054C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A8054EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A8055570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,id a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,id a56)
{
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose(&a51, 8);

  _Unwind_Resume(a1);
}

void sub_1A8055754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80557D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8055820(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80559C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8055A2C()
{
}

void sub_1A8055A7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8055E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8056060(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80561E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80563F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805667C(_Unwind_Exception *a1)
{
  unint64_t v9 = v7;

  _Unwind_Resume(a1);
}

void sub_1A8056870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8056924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8056A78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8056B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8056BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8056CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8056DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  objc_destroyWeak(v14);
  objc_destroyWeak((id *)(v16 - 40));
  _Unwind_Resume(a1);
}

void sub_1A8056F20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8056FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8057088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8057148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A80571FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A80572BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A8057370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A80573F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80574F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8057870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A805797C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8057ADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *basicSearchExpressionFromCriterion(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 criterionType] == 25)
  {
    [v1 criteria];
    long long v10 = 0u;
    long long v11 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v3)
    {
      uint64_t v4 = *(void *)v9;
LABEL_4:
      uint64_t v5 = 0;
      while (1)
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v2);
        }
        basicSearchExpressionFromCriterion(*(void *)(*((void *)&v8 + 1) + 8 * v5));
        uint64_t v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (v6) {
          break;
        }
        if (v3 == ++v5)
        {
          uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
          if (v3) {
            goto LABEL_4;
          }
          uint64_t v6 = 0;
          break;
        }
      }
    }
    else
    {
      uint64_t v6 = &stru_1EFF11268;
    }
  }
  else
  {
    uint64_t v6 = [v1 expression];
  }

  return v6;
}

void sub_1A8057C4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8057E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8058060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8058154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8058298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80583DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A80584D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8058B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_1A8058D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80593CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8059630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805969C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805972C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8059A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8059B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805A53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805A8EC(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A805AA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805AAF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805AC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805ACDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805B0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A805B250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805B2F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805B600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805B6F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805B938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805B998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFMessageLoadingContext;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A805BAC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805BDB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805BFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  _Unwind_Resume(a1);
}

void sub_1A805C094(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A805C268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1A805C378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805C410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805C494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805C558(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805C6C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805D588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36)
{
  _Unwind_Resume(a1);
}

uint64_t _contentLoadedEmptyDocument(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 firstObject];
  if ([v3 count] == 1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if (a2) {
      uint64_t v5 = [v4 isVisuallyEmpty];
    }
    else {
      uint64_t v5 = 1;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_1A805D88C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805D9C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805DB7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805DD4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805E024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805E1E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805E460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805E758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A805E960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A805EAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805EC84(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1A805EE40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805EFEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805F684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,uint64_t a26,void *a27,void *a28)
{
  _Unwind_Resume(a1);
}

void sub_1A805F928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A805FBA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805FD70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A805FF28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8060088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806012C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80602BC(_Unwind_Exception *a1)
{
  uint64_t v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A8060348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80603A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8060510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8060658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8060930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);

  _Block_object_dispose((const void *)(v24 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1A8060B6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8060C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8060DE4(_Unwind_Exception *a1)
{
  id v7 = v6;

  _Unwind_Resume(a1);
}

void sub_1A8060F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8061010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8061098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80611B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A80613D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8061498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80616D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061748(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80617C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806197C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8061B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061C6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8061CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8061E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8061F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8061FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8062238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80622D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8062444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80624A8()
{
}

uint64_t MFErrorCodeWithDataStatus(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return -1;
  }
  else {
    return qword_1A8AC65A8[a1 - 1];
  }
}

void sub_1A80625DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _NetworkReachabilityCallBack(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 _setFlags:a2 forReachability:a1];
}

uint64_t _DynamicStoreCallBack(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 _checkKeys:a2 forStore:a1];
}

uint64_t _WiFiCallBack(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 _handleWiFiNotification:a2];
}

void sub_1A8062694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8062784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFNetworkController;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A8062C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8062C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8062E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8062EA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8062F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A80631C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  objc_destroyWeak(v21);
  objc_destroyWeak((id *)(v24 - 72));

  _Unwind_Resume(a1);
}

void sub_1A8063270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8063380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8063418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8063518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A806363C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8063734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80637EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80638FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8063B70(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A8063D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8063E68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8063EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  long long v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFNWConnectionWrapper;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A8063FC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8064100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8064748(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8064994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8064FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8065184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  _Unwind_Resume(a1);
}

void sub_1A806531C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8065418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80654BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8065550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80657FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A80658D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8065A7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8065F4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80663E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8066668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8066704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8066A34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8066D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8066F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8067138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806719C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806758C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8067D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067E88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067F08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067F80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8067FF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068060(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806847C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80685D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A806867C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80687E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80688C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068B80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8068C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8068E88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8069454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80695D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8069708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80697F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80698CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8069984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8069C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8069D5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8069DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8069E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

Class initNNMKContentAttributedStringHTMLParser()
{
  if (LoadNanoMailKitServer_loadPredicate != -1) {
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_53);
  }
  Class result = objc_getClass("NNMKContentAttributedStringHTMLParser");
  classNNMKContentAttributedStringHTMLParser = (uint64_t)result;
  getNNMKContentAttributedStringHTMLParserClass = (uint64_t (*)())NNMKContentAttributedStringHTMLParserFunction;
  return result;
}

id NNMKContentAttributedStringHTMLParserFunction()
{
  return (id)classNNMKContentAttributedStringHTMLParser;
}

void __LoadNanoMailKitServer_block_invoke()
{
  LoadNanoMailKitServer_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/NanoMailKitServer.framework/NanoMailKitServer", 2);
  if (!LoadNanoMailKitServer_frameworkLibrary) {
    NSLog(&cfstr_FailedToSoftLi_0.isa);
  }
}

Class initNNMKAttachment()
{
  if (LoadNanoMailKitServer_loadPredicate != -1) {
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_53);
  }
  Class result = objc_getClass("NNMKAttachment");
  classNNMKAttachment = (uint64_t)result;
  getNNMKAttachmentClass = (uint64_t (*)())NNMKAttachmentFunction;
  return result;
}

id NNMKAttachmentFunction()
{
  return (id)classNNMKAttachment;
}

Class initNNMKMessage()
{
  if (LoadNanoMailKitServer_loadPredicate != -1) {
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_53);
  }
  Class result = objc_getClass("NNMKMessage");
  classNNMKMessage = (uint64_t)result;
  getNNMKMessageClass = (uint64_t (*)())NNMKMessageFunction;
  return result;
}

id NNMKMessageFunction()
{
  return (id)classNNMKMessage;
}

Class initNNMKMessageContent()
{
  if (LoadNanoMailKitServer_loadPredicate != -1) {
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_53);
  }
  Class result = objc_getClass("NNMKMessageContent");
  classNNMKMessageContent = (uint64_t)result;
  getNNMKMessageContentClass = (uint64_t (*)())NNMKMessageContentFunction;
  return result;
}

id NNMKMessageContentFunction()
{
  return (id)classNNMKMessageContent;
}

Class initNNMKImageAttachment()
{
  if (LoadNanoMailKitServer_loadPredicate != -1) {
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_53);
  }
  Class result = objc_getClass("NNMKImageAttachment");
  classNNMKImageAttachment = (uint64_t)result;
  getNNMKImageAttachmentClass = (uint64_t (*)())NNMKImageAttachmentFunction;
  return result;
}

id NNMKImageAttachmentFunction()
{
  return (id)classNNMKImageAttachment;
}

Class initNNMKImageUtility()
{
  if (LoadNanoMailKitServer_loadPredicate != -1) {
    dispatch_once(&LoadNanoMailKitServer_loadPredicate, &__block_literal_global_53);
  }
  Class result = objc_getClass("NNMKImageUtility");
  classNNMKImageUtility = (uint64_t)result;
  getNNMKImageUtilityClass = (uint64_t (*)())NNMKImageUtilityFunction;
  return result;
}

id NNMKImageUtilityFunction()
{
  return (id)classNNMKImageUtility;
}

void sub_1A806A2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A806A9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A806B178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, id a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1A806B490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806B51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A806B58C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806B654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806B830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806BA38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806C114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A806C724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void __LoadicloudMCCKit_block_invoke_0()
{
  LoadicloudMCCKit_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/icloudMCCKit.framework/icloudMCCKit", 2);
  if (!LoadicloudMCCKit_frameworkLibrary_0) {
    NSLog(&cfstr_FailedToSoftLi.isa);
  }
}

Class initMCCCategoryRulesController()
{
  if (LoadicloudMCCKit_loadPredicate_0 != -1) {
    dispatch_once(&LoadicloudMCCKit_loadPredicate_0, &__block_literal_global_54);
  }
  Class result = objc_getClass("MCCCategoryRulesController");
  classMCCCategoryRulesController = (uint64_t)result;
  getMCCCategoryRulesControllerClass = (uint64_t (*)())MCCCategoryRulesControllerFunction;
  return result;
}

id MCCCategoryRulesControllerFunction()
{
  return (id)classMCCCategoryRulesController;
}

void sub_1A806C908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A806CA4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806CBD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806CC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A806CD64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806CE64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806D078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806D148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A806D1E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A806D3D8(_Unwind_Exception *exception_object)
{
}

void sub_1A806D4F4(_Unwind_Exception *exception_object)
{
}

void sub_1A806D66C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806D78C(_Unwind_Exception *exception_object)
{
}

void sub_1A806D8A4(_Unwind_Exception *exception_object)
{
}

void sub_1A806D9BC(_Unwind_Exception *exception_object)
{
}

void sub_1A806DB94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806DF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A806ECCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A806F1EC(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1A806F3D0(_Unwind_Exception *a1)
{
  id v2 = v1;

  _Unwind_Resume(a1);
}

void sub_1A806F62C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806F788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806F810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806F874(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _powerChanged(uint64_t a1, uint64_t a2, uint64_t a3, intptr_t a4)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = MFLogGeneral();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    HIDWORD(v8) = a3;
    LODWORD(v8) = a3 + 536870288;
    unsigned int v7 = v8 >> 4;
    if (v7 < 0xC && ((0xA07u >> v7) & 1) != 0)
    {
      long long v9 = off_1E5D40730[v7];
    }
    else
    {
      objc_msgSend(NSString, "stringWithFormat:", @"%d", a3);
      long long v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    *(_DWORD *)buf = 138412290;
    long long v11 = v9;
    _os_log_impl(&dword_1A7EFF000, v6, OS_LOG_TYPE_INFO, "Power changed: %@", buf, 0xCu);
  }
  switch(a3)
  {
    case 0xE0000300:
      dispatch_async(MEMORY[0x1E4F14428], &__block_literal_global_102);
      break;
    case 0xE0000280:
      dispatch_async(MEMORY[0x1E4F14428], &__block_literal_global_98);
      IOAllowPowerChange(sRootDomainConnect, a4);
      break;
    case 0xE0000270:
      IOAllowPowerChange(sRootDomainConnect, a4);
      break;
  }
}

void sub_1A806FA0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806FAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFPowerController;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A806FC2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806FC9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A806FF84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807012C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80702A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807052C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807097C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void MFUnregisterPowerObserver(void *a1)
{
  id v1 = a1;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  _DWORD v4[2] = __MFUnregisterPowerObserver_block_invoke;
  v4[3] = &unk_1E5D3B5C0;
  id v2 = v1;
  id v5 = v2;
  id v3 = [MEMORY[0x1E4F60F28] mainThreadScheduler];
  [v3 performBlock:v4];
}

void sub_1A8070A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t __MFUnregisterPowerObserver_block_invoke(uint64_t a1)
{
  return [(id)sObservers removeObject:*(void *)(a1 + 32)];
}

void sub_1A8070AE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070C7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070ED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8070FB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ___powerChanged_block_invoke()
{
  return [(id)sObservers makeObjectsPerformSelector:sel_systemWillSleep];
}

uint64_t ___powerChanged_block_invoke_2()
{
  return [(id)sObservers makeObjectsPerformSelector:sel_systemDidWake];
}

void sub_1A8071238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80713E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80714FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807157C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8071600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8071690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807176C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v13 = v11;

  _Unwind_Resume(a1);
}

void sub_1A80718DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80719C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8071A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8071AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8071C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8071D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8071E40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8071FC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8072098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80722A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8072360(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A8072568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A807267C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8072714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8072784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80727F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8072B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1A8072DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8072EEC(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A8073014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80730EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80731B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8073270(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80733C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80735B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807363C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807368C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80737AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8073844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807396C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1A8073A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8073AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8073B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8073BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8073CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8073D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8073F58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1A807419C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8074220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8074450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8074758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807493C(_Unwind_Exception *a1)
{
  uint64_t v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1A8074C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A807518C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1A8075830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1A80759F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8075AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8075F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1A8076140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8076228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80762C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8076448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807655C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8076724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807681C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MFSecureMIMECompositionManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A80769B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8076B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8076EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1A8077180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8077278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80772DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8077510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8077634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807781C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8077A10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8077BBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8077C28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8077CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8077D84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8077F94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8078180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8078388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80785C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80787A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8078D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

id checkCertificateExpiration(uint64_t a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  double Current = CFAbsoluteTimeGetCurrent();
  SecCertificateNotValidBefore();
  double v6 = v5;
  SecCertificateNotValidAfter();
  if (Current >= v6)
  {
    double v10 = v7;
    if (Current <= v7)
    {
      long long v11 = 0;
      uint64_t v12 = 0;
      goto LABEL_11;
    }
    uint64_t v8 = MFLookupLocalizedString(@"MF_SMIME_CERTIFICATE_EXPIRED_FORMAT", @"The certificate for the address “%@” expired on %@.", @"Delayed");
    uint64_t v9 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceReferenceDate:v10];
  }
  else
  {
    uint64_t v8 = MFLookupLocalizedString(@"MF_SMIME_CERTIFICATE_NOT_YET_VALID_FORMAT", @"The certificate for the address “%@” is not valid until %@.", @"Delayed");
    uint64_t v9 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceReferenceDate:v6];
  }
  long long v11 = (void *)v9;
  uint64_t v12 = (void *)v8;
  if (!v8)
  {
LABEL_11:
    uint64_t v17 = 0;
    goto LABEL_12;
  }
  if (!v9) {
    __assert_rtn("checkCertificateExpiration", "MFSecureMIMECompositionManager.m", 856, "date");
  }
  id v13 = objc_alloc_init(MEMORY[0x1E4F28C10]);
  [v13 setDateStyle:3];
  [v13 setTimeStyle:3];
  uint64_t v14 = NSString;
  id v15 = [v13 stringFromDate:v11];
  uint64_t v16 = objc_msgSend(v14, "stringWithFormat:", v12, v3, v15);

  uint64_t v17 = +[MFError errorWithDomain:@"MFMessageErrorDomain" code:1035 localizedDescription:v16];
  uint64_t v18 = MFLogGeneral();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
  {
    uint32_t v19 = objc_msgSend(v17, "ef_publicDescription");
    *(_DWORD *)buf = 138412802;
    uint64_t v22 = a1;
    __int16 v23 = 2112;
    id v24 = v3;
    __int16 v25 = 2114;
    uint64_t v26 = v19;
    _os_log_impl(&dword_1A7EFF000, v18, OS_LOG_TYPE_INFO, "#SMIMEErrors Certificate %@ for address %@ is not currently valid: %{public}@", buf, 0x20u);
  }
LABEL_12:

  return v17;
}

void sub_1A8079154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80792F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t MFHasAccountsEntitlement()
{
  if (MFHasAccountsEntitlement_once != -1) {
    dispatch_once(&MFHasAccountsEntitlement_once, &__block_literal_global_60);
  }
  return MFHasAccountsEntitlement___hasAccountsEntitlement;
}

void __MFHasAccountsEntitlement_block_invoke()
{
  id v0 = SecTaskCreateFromSelf((CFAllocatorRef)*MEMORY[0x1E4F1CF80]);
  if (v0)
  {
    id v1 = v0;
    CFDictionaryRef v2 = SecTaskCopyValuesForEntitlements(v0, (CFArrayRef)&unk_1EFF50AC0, 0);
    CFRelease(v1);
    MFHasAccountsEntitlement___hasAccountsEntitlement = [(__CFDictionary *)v2 count] != 0;
  }
}

void sub_1A807949C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807956C(_Unwind_Exception *a1)
{
  double v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A807965C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80798EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80799D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8079A5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8079BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8079C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8079CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8079D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8079DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8079EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8079FEC(_Unwind_Exception *a1)
{
  double v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A807A0C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807A144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807A1B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807A230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807A310(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807A508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807A704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807A910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807AB0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807AC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807ACF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807AE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807AEFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807B0B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807B1EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807B298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807B6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A807BB0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807BC14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807BF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Block_object_dispose((const void *)(v31 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_1A807C07C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807C37C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807C46C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807C708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807C798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807D544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50)
{
  _Unwind_Resume(a1);
}

void sub_1A807D898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807D918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807D9A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807DA98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807DB84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807DDD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807E090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A807E188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807E3B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807EB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

id _createParameterStringFromBytes(const UInt8 **a1, unint64_t a2)
{
  unint64_t v4 = (unint64_t)*a1;
  uint64_t v5 = MEMORY[0x1E4F14390];
  if ((unint64_t)*a1 < a2)
  {
    unint64_t v6 = a2 - v4;
    double v7 = (const UInt8 *)(v4 + 1);
    while (1)
    {
      unsigned int v8 = *((char *)v7 - 1);
      if ((v8 & 0x80000000) != 0)
      {
        if (!__maskrune(v8, 0x4000uLL))
        {
LABEL_9:
          unint64_t v4 = (unint64_t)*a1;
          break;
        }
      }
      else if ((*(_DWORD *)(v5 + 4 * v8 + 60) & 0x4000) == 0)
      {
        goto LABEL_9;
      }
      *a1 = v7++;
      if (!--v6)
      {
        unint64_t v4 = a2;
        break;
      }
    }
  }
  uint64_t v9 = (const UInt8 *)(v4 + 1);
  if (v4 + 1 >= a2)
  {
    BOOL v10 = 0;
    uint64_t v9 = (const UInt8 *)a2;
  }
  else
  {
    BOOL v10 = 0;
    unint64_t v11 = ~v4 + a2;
    do
    {
      unsigned int v12 = *(char *)v9;
      if ((v12 & 0x80000000) != 0)
      {
        if (__maskrune(*(char *)v9, 0x4000uLL)) {
          goto LABEL_24;
        }
      }
      else if ((*(_DWORD *)(v5 + 4 * v12 + 60) & 0x4000) != 0)
      {
        goto LABEL_24;
      }
      if (v10)
      {
        BOOL v10 = 1;
      }
      else
      {
        if ((v12 & 0x80000000) != 0) {
          int v13 = __maskrune(v12, 0x1000uLL);
        }
        else {
          int v13 = *(_DWORD *)(v5 + 4 * v12 + 60) & 0x1000;
        }
        BOOL v10 = v13 != 0;
      }
      ++v9;
      --v11;
    }
    while (v11);
    uint64_t v9 = (const UInt8 *)a2;
LABEL_24:
    unint64_t v4 = (unint64_t)*a1;
  }
  if (v4 >= (unint64_t)v9)
  {
    id v15 = 0;
  }
  else
  {
    uint64_t v14 = (__CFString *)CFStringCreateWithBytes(0, (const UInt8 *)v4, (CFIndex)&v9[-v4], 0x600u, 0);
    id v15 = v14;
    if (v14 != 0 && v10)
    {
      uint64_t v16 = [(__CFString *)v14 uppercaseString];

      id v15 = (void *)v16;
    }
  }
  if ((unint64_t)(v9 + 1) < a2) {
    uint64_t v17 = v9 + 1;
  }
  else {
    uint64_t v17 = (const UInt8 *)a2;
  }
  *a1 = v17;
  return v15;
}

void sub_1A807ED84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807EEA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807F074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807F1A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807F2E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807F424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A807F67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1A807F764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807F938(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A807FB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void probeMessageUpdate(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  if (a2 >= 5)
  {
    uint64_t v5 = sqlite3_context_db_handle(a1);
    sqlite3_int64 v6 = sqlite3_value_int64(*a3);
    sqlite3_int64 v7 = sqlite3_value_int64(a3[1]);
    sqlite3_int64 v8 = sqlite3_value_int64(a3[2]);
    sqlite3_int64 v9 = sqlite3_value_int64(a3[3]);
    sqlite3_int64 v10 = sqlite3_value_int64(a3[4]);
    duplicateMessageIDs(v5, v9, v6, v10);
    id v23 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v11 = unreadCountForMailbox(v5, v10);
    BOOL v12 = (v8 & 0x100080) == 0 && [v23 count] == 0;
    uint64_t v13 = v11 + v12;
    if (v8) {
      uint64_t v13 = v11;
    }
    uint64_t v14 = v11 - v12;
    if ((v8 & 1) == 0) {
      uint64_t v14 = v11;
    }
    if (v7) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = v14;
    }
    id v16 = objc_alloc_init(MEMORY[0x1E4F28E78]);
    objc_msgSend(v16, "appendFormat:", @"ROW: %lld; ", v6);
    objc_msgSend(v16, "appendFormat:", @"Count: %ld -> %ld; ", v11, v15);
    objc_msgSend(v16, "appendFormat:", @"Flags: %llu -> %llu ("), v7, v8;
    uint64_t v17 = NSStringFromBOOL();
    uint64_t v18 = NSStringFromBOOL();
    [v16 appendFormat:@"R: %@ -> %@ | ", v17, v18];

    uint32_t v19 = NSStringFromBOOL();
    id v20 = NSStringFromBOOL();
    [v16 appendFormat:@"SR: %@ -> %@ | ", v19, v20];

    uint64_t v21 = NSStringFromBOOL();
    uint64_t v22 = NSStringFromBOOL();
    [v16 appendFormat:@"TSR: %@ -> %@; "], v21, v22);

    objc_msgSend(v16, "appendFormat:", @"dup msgs: %lu;", objc_msgSend(v23, "count"));
    probUnreadLog(@"#Update", v16);
    sqlite3_result_null(a1);
  }
}

void sub_1A807FDB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void probeMessageAdd(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  if (a2 >= 4)
  {
    uint64_t v5 = sqlite3_context_db_handle(a1);
    sqlite3_int64 v6 = sqlite3_value_int64(*a3);
    sqlite3_int64 v7 = sqlite3_value_int64(a3[1]);
    sqlite3_int64 v8 = sqlite3_value_int64(a3[2]);
    sqlite3_int64 v9 = sqlite3_value_int64(a3[3]);
    duplicateMessageIDs(v5, v8, v6, v9);
    id v16 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v10 = unreadCountForMailbox(v5, v9);
    BOOL v11 = (v7 & 0x100081) == 0 && [v16 count] == 0;
    id v12 = objc_alloc_init(MEMORY[0x1E4F28E78]);
    objc_msgSend(v12, "appendFormat:", @"ROW: %lld; ", v6);
    objc_msgSend(v12, "appendFormat:", @"Count: %ld -> %ld; ", v10, v11 + v10);
    objc_msgSend(v12, "appendFormat:", @"Flags: %llu ("), v7;
    uint64_t v13 = NSStringFromBOOL();
    [v12 appendFormat:@"R: %@ | ", v13];

    uint64_t v14 = NSStringFromBOOL();
    [v12 appendFormat:@"SR: %@ | ", v14];

    uint64_t v15 = NSStringFromBOOL();
    [v12 appendFormat:@"TSR: %@; "], v15);

    objc_msgSend(v12, "appendFormat:", @"dup msgs: %lu;", objc_msgSend(v16, "count"));
    probUnreadLog(@"#Add", v12);
    sqlite3_result_null(a1);
  }
}

void sub_1A808000C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void probeMessageDelete(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  if (a2 >= 4)
  {
    uint64_t v5 = sqlite3_context_db_handle(a1);
    sqlite3_int64 v6 = sqlite3_value_int64(*a3);
    sqlite3_int64 v7 = sqlite3_value_int64(a3[1]);
    sqlite3_int64 v8 = sqlite3_value_int64(a3[2]);
    sqlite3_int64 v9 = sqlite3_value_int64(a3[3]);
    duplicateMessageIDs(v5, v8, v6, v9);
    id v16 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v10 = unreadCountForMailbox(v5, v9);
    if ((v7 & 0x100081) != 0)
    {
      uint64_t v11 = 0;
    }
    else if ([v16 count])
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = -1;
    }
    id v12 = objc_alloc_init(MEMORY[0x1E4F28E78]);
    objc_msgSend(v12, "appendFormat:", @"ROW: %lld; ", v6);
    objc_msgSend(v12, "appendFormat:", @"Count: %ld -> %ld; ", v10, v11 + v10);
    objc_msgSend(v12, "appendFormat:", @"Flags: %llu ("), v7;
    uint64_t v13 = NSStringFromBOOL();
    [v12 appendFormat:@"R: %@ | ", v13];

    uint64_t v14 = NSStringFromBOOL();
    [v12 appendFormat:@"SR: %@ | ", v14];

    uint64_t v15 = NSStringFromBOOL();
    [v12 appendFormat:@"TSR: %@; "], v15);

    objc_msgSend(v12, "appendFormat:", @"dup msgs: %lu;", objc_msgSend(v16, "count"));
    probUnreadLog(@"#Delete", v12);
    sqlite3_result_null(a1);
  }
}

void sub_1A8080248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1A80803F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id duplicateMessageIDs(sqlite3 *a1, sqlite3_int64 a2, sqlite3_int64 a3, sqlite3_int64 a4)
{
  id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  ppStmt = 0;
  sqlite3_prepare_v2(a1, "SELECT message_id FROM messages WHERE message_id = ? AND rowid != ? AND flags&2 > 0 AND mailbox = ? AND (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0)", -1, &ppStmt, 0);
  if (ppStmt)
  {
    sqlite3_bind_int64(ppStmt, 1, a2);
    sqlite3_bind_int64(ppStmt, 2, a3);
    sqlite3_bind_int64(ppStmt, 3, a4);
    while (sqlite3_step(ppStmt) == 100)
    {
      sqlite3_int64 v9 = objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithLongLong:", sqlite3_column_int64(ppStmt, 0));
      [v8 addObject:v9];
    }
    sqlite3_finalize(ppStmt);
  }
  return v8;
}

void sub_1A8080514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t unreadCountForMailbox(sqlite3 *a1, sqlite3_int64 a2)
{
  ppStmt = 0;
  sqlite3_prepare_v2(a1, "SELECT unread_count FROM mailboxes WHERE ROWID = ?", -1, &ppStmt, 0);
  if (!ppStmt) {
    return 0;
  }
  sqlite3_bind_int64(ppStmt, 1, a2);
  if (sqlite3_step(ppStmt) == 100) {
    uint64_t v3 = sqlite3_column_int(ppStmt, 0);
  }
  else {
    uint64_t v3 = 0;
  }
  sqlite3_finalize(ppStmt);
  return v3;
}

void probUnreadLog(__CFString *a1, void *a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  unint64_t v4 = &stru_1EFF11268;
  if (a1) {
    unint64_t v4 = a1;
  }
  uint64_t v5 = v4;
  sqlite3_int64 v6 = MFLogGeneral();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    int v7 = 138412546;
    id v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = [v3 UTF8String];
    _os_log_impl(&dword_1A7EFF000, v6, OS_LOG_TYPE_INFO, "#UnreadCount [UnreadCount] %@ %s", (uint8_t *)&v7, 0x16u);
  }
}

void sub_1A80806B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80807F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8080E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8081118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8081244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8081494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8081580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8081664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8081778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A8081888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void _removeDestructionHandler(void *a1, void *a2)
{
  id object = a1;
  id v3 = a2;
  unint64_t v4 = objc_getAssociatedObject(object, v3);
  [v4 setCache:0];
  objc_setAssociatedObject(object, v3, 0, (void *)1);
}

void sub_1A8081944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8081A98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL _releaseTopStackEntry(uint64_t a1)
{
  CFDictionaryRef v2 = (id **)_peekCommandStackEntry(a1);
  id v3 = v2;
  if (v2)
  {
    if ([**v2 isEqualToString:@"nofill"]) {
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a1 + 208) & 0xC0000000 | (*(_DWORD *)(a1 + 208) - 1) & 0x3FFFFFFF;
    }
    CFArrayRef v4 = *(const __CFArray **)(a1 + 224);
    CFIndex Count = CFArrayGetCount(v4);
    CFArrayRemoveValueAtIndex(v4, Count - 1);
    sqlite3_int64 v6 = v3[1];
    if (v6) {

    }
    free(v3);
  }
  return v3 != 0;
}

CFIndex _currentAttributeOfType(uint64_t a1, int a2)
{
  CFIndex result = CFArrayGetCount(*(CFArrayRef *)(a1 + 224));
  if (result)
  {
    CFIndex v5 = result - 1;
    do
    {
      CFArrayRef ValueAtIndex = CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 224), v5);
      if (((*(unsigned __int8 *)(*ValueAtIndex + 8) >> 3) & 3) == a2) {
        CFIndex result = ValueAtIndex[1];
      }
      else {
        CFIndex result = 0;
      }
      BOOL v7 = v5-- != 0;
    }
    while (v7 && !result);
  }
  return result;
}

CFStringRef _copyNextToken(uint64_t a1, CFCharacterSetRef theSet)
{
  CFIndex v5 = *(void *)(a1 + 192);
  CFIndex v4 = *(void *)(a1 + 200);
  if (v5 < v4)
  {
    uint64_t v6 = a1 + 8;
    if (v5 < 0 || (CFIndex v7 = *(void *)(a1 + 168), v7 <= v5))
    {
      UniChar v9 = 0;
    }
    else
    {
      uint64_t v8 = *(void *)(a1 + 144);
      if (v8)
      {
        UniChar v9 = *(_WORD *)(v8 + 2 * (*(void *)(a1 + 160) + v5));
      }
      else
      {
        uint64_t v28 = *(void *)(a1 + 152);
        if (v28)
        {
          UniChar v9 = *(char *)(v28 + *(void *)(a1 + 160) + v5);
        }
        else
        {
          if (*(void *)(a1 + 184) <= v5 || (CFIndex v30 = *(void *)(a1 + 176), v30 > v5))
          {
            CFIndex v31 = v5 - 4;
            if ((unint64_t)v5 < 4) {
              CFIndex v31 = 0;
            }
            if (v31 + 64 < v7) {
              CFIndex v7 = v31 + 64;
            }
            *(void *)(a1 + 176) = v31;
            *(void *)(a1 + 184) = v7;
            v36.location = *(void *)(a1 + 160) + v31;
            v36.length = v7 - v31;
            CFStringGetCharacters(*(CFStringRef *)(a1 + 136), v36, (UniChar *)(a1 + 8));
            CFIndex v30 = *(void *)(a1 + 176);
          }
          UniChar v9 = *(_WORD *)(v6 + 2 * (v5 - v30));
        }
      }
    }
    if (CFCharacterSetIsCharacterMember(theSet, v9))
    {
      if (v5 < 0 || (CFIndex v10 = *(void *)(a1 + 168), v10 <= v5))
      {
        UniChar v12 = 0;
      }
      else
      {
        uint64_t v11 = *(void *)(a1 + 144);
        if (v11)
        {
          UniChar v12 = *(_WORD *)(v11 + 2 * (*(void *)(a1 + 160) + v5));
        }
        else
        {
          uint64_t v29 = *(void *)(a1 + 152);
          if (v29)
          {
            UniChar v12 = *(char *)(v29 + *(void *)(a1 + 160) + v5);
          }
          else
          {
            if (*(void *)(a1 + 184) <= v5 || (CFIndex v32 = *(void *)(a1 + 176), v32 > v5))
            {
              CFIndex v33 = v5 - 4;
              if ((unint64_t)v5 < 4) {
                CFIndex v33 = 0;
              }
              if (v33 + 64 < v10) {
                CFIndex v10 = v33 + 64;
              }
              *(void *)(a1 + 176) = v33;
              *(void *)(a1 + 184) = v10;
              v37.location = *(void *)(a1 + 160) + v33;
              v37.length = v10 - v33;
              CFStringGetCharacters(*(CFStringRef *)(a1 + 136), v37, (UniChar *)(a1 + 8));
              CFIndex v32 = *(void *)(a1 + 176);
            }
            UniChar v12 = *(_WORD *)(v6 + 2 * (v5 - v32));
          }
        }
      }
      UniChar chars = v12;
      CFStringRef result = CFStringCreateWithCharacters(0, &chars, 1);
      ++v5;
      goto LABEL_43;
    }
    CFIndex v4 = *(void *)(a1 + 200);
  }
  if (v5 >= v4)
  {
    CFStringRef result = 0;
  }
  else
  {
    CFIndex v14 = -v5;
    CFIndex v15 = v5 + 64;
    int64_t v16 = v5;
    do
    {
      if ((unint64_t)v16 >= 4) {
        uint64_t v17 = 4;
      }
      else {
        uint64_t v17 = v16;
      }
      if (v16 < 0 || (int64_t v18 = *(void *)(a1 + 168), v18 <= v16))
      {
        UniChar v20 = 0;
      }
      else
      {
        uint64_t v19 = *(void *)(a1 + 144);
        if (v19)
        {
          UniChar v20 = *(_WORD *)(v19 + 2 * (v16 + *(void *)(a1 + 160)));
        }
        else
        {
          uint64_t v21 = *(void *)(a1 + 152);
          if (v21)
          {
            UniChar v20 = *(char *)(v21 + *(void *)(a1 + 160) + v16);
          }
          else
          {
            if (*(void *)(a1 + 184) <= v16 || (int64_t v22 = *(void *)(a1 + 176), v22 > v16))
            {
              uint64_t v23 = -v17;
              uint64_t v24 = v17 + v14;
              int64_t v25 = v15 - v17;
              int64_t v26 = v16 + v23;
              int64_t v27 = v26 + 64;
              if (v26 + 64 >= v18) {
                int64_t v27 = *(void *)(a1 + 168);
              }
              *(void *)(a1 + 176) = v26;
              *(void *)(a1 + 184) = v27;
              if (v18 >= v25) {
                int64_t v18 = v25;
              }
              v35.length = v18 + v24;
              v35.location = v26 + *(void *)(a1 + 160);
              CFStringGetCharacters(*(CFStringRef *)(a1 + 136), v35, (UniChar *)(a1 + 8));
              int64_t v22 = *(void *)(a1 + 176);
            }
            UniChar v20 = *(_WORD *)(a1 + 8 - 2 * v22 + 2 * v16);
          }
        }
      }
      if (CFCharacterSetIsCharacterMember(theSet, v20)) {
        break;
      }
      ++v16;
      --v14;
      ++v15;
    }
    while (v16 < *(void *)(a1 + 200));
    if (v16 <= v5)
    {
      CFStringRef result = 0;
    }
    else
    {
      v38.location = v5;
      v38.length = v16 - v5;
      CFStringRef result = CFStringCreateWithSubstring(0, *(CFStringRef *)(a1 + 136), v38);
    }
    CFIndex v5 = v16;
  }
LABEL_43:
  *(void *)(a1 + 192) = v5;
  return result;
}

const void *_peekCommandStackEntry(uint64_t a1)
{
  CFIndex Count = CFArrayGetCount(*(CFArrayRef *)(a1 + 224));
  CFIndex v3 = Count - 1;
  if (Count < 1) {
    return 0;
  }
  CFArrayRef v4 = *(const __CFArray **)(a1 + 224);
  return CFArrayGetValueAtIndex(v4, v3);
}

uint64_t MFMimeDataGetRangeOfHeader()
{
  return MEMORY[0x1F4117878]();
}

id MFMimeDataCreateStringFromHeaderBytes()
{
  id v0 = (void *)_MFCreateStringFromHeaderBytes();
  return v0;
}

void sub_1A8083F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8083FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80840C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  UniChar v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A80841C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  UniChar v12 = v11;

  _Unwind_Resume(a1);
}

uint64_t EFBreakIfInDebugger()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  memset(__b, 170, sizeof(__b));
  __b[8] = 0;
  *(void *)CFIndex v3 = 0xE00000001;
  int v4 = 1;
  pid_t v5 = getpid();
  size_t v1 = 648;
  uint64_t result = sysctl(v3, 4u, __b, &v1, 0, 0);
  if (!result && (__b[8] & 0x800) != 0) {
    __debugbreak();
  }
  return result;
}

void sub_1A8084390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8084510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8084720(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808481C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8084BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A8084E50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8084F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80867F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8086994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *MFCreateStringByCondensingWhitespace(__CFString *a1)
{
  if (!a1) {
    return 0;
  }
  CFAllocatorRef v2 = (const __CFAllocator *)MFGetMappedAllocator();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable(v2, 0);
  uint64_t v4 = [(__CFString *)a1 length];
  *(void *)&long long v5 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  long long v34 = v5;
  long long v35 = v5;
  long long v32 = v5;
  long long v33 = v5;
  long long v30 = v5;
  long long v31 = v5;
  *(_OWORD *)buffer = v5;
  long long v29 = v5;
  CFRange v36 = a1;
  uint64_t v39 = 0;
  int64_t v40 = v4;
  CharactersPtr = CFStringGetCharactersPtr(a1);
  CStringPtr = 0;
  CFRange v37 = CharactersPtr;
  if (!CharactersPtr) {
    CStringPtr = CFStringGetCStringPtr(a1, 0x600u);
  }
  CFRange v38 = CStringPtr;
  int64_t v41 = 0;
  int64_t v42 = 0;
  if (v4)
  {
    uint64_t v8 = 0;
    BOOL v9 = 0;
    int64_t v10 = 0;
    uint64_t v11 = 64;
    do
    {
      if ((unint64_t)v10 >= 4) {
        uint64_t v12 = 4;
      }
      else {
        uint64_t v12 = v10;
      }
      UniChar chars = -21846;
      if (v10 < 0 || (uint64_t v13 = v40, v40 <= v10))
      {
        BOOL v15 = 0;
        UniChar chars = 0;
      }
      else
      {
        if (v37)
        {
          UniChar v14 = v37[v10 + v39];
        }
        else if (v38)
        {
          UniChar v14 = v38[v39 + v10];
        }
        else
        {
          if (v42 <= v10 || (int64_t v16 = v41, v41 > v10))
          {
            uint64_t v17 = -v12;
            uint64_t v18 = v12 + v8;
            uint64_t v19 = v11 - v12;
            int64_t v20 = v10 + v17;
            int64_t v21 = v20 + 64;
            if (v20 + 64 >= v40) {
              int64_t v21 = v40;
            }
            int64_t v41 = v20;
            int64_t v42 = v21;
            if (v40 >= v19) {
              uint64_t v13 = v19;
            }
            v43.length = v13 + v18;
            v43.location = v20 + v39;
            CFStringGetCharacters(v36, v43, buffer);
            int64_t v16 = v41;
          }
          UniChar v14 = buffer[v10 - v16];
        }
        unsigned int v22 = v14;
        BOOL v15 = v14 == 13 || (unsigned __int16)(v14 - 9) < 2u || v14 == 32;
        UniChar chars = v14;
        uint64_t v24 = (1 << v14) & 0x100002600;
        if (v22 <= 0x20 && v24 != 0)
        {
          if (v10 != 0 && !v9) {
            CFStringAppend(Mutable, @" ");
          }
          goto LABEL_15;
        }
      }
      CFStringAppendCharacters(Mutable, &chars, 1);
LABEL_15:
      ++v10;
      --v8;
      ++v11;
      BOOL v9 = v15;
    }
    while (v4 != v10);
  }
  return Mutable;
}

void sub_1A80887F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8088868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t MFCopyResponseDataForURLRequest(void *a1)
{
  id v1 = a1;
  CFAllocatorRef v2 = MFUserAgent();
  if (v2 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    CFIndex v3 = [v2 sourceApplicationBundleIdentifier];
  }
  else
  {
    CFIndex v3 = 0;
  }
  uint64_t v4 = EFCopyResponseDataForURLRequest();

  return v4;
}

void sub_1A8088920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8088DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8088EA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808939C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808948C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089A90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089B40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089CE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089E74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8089F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808A058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808A1A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808A2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808A42C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808A558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808A88C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808AA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808ADBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808AEF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808B1E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808B30C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808B3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808B4BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808B50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808B848(_Unwind_Exception *a1)
{
  long long v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1A808BA44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808BD68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808C35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A808C57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808C5EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808C65C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808C8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A808CCB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808CE54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808D14C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808D2C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808D564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1A808D840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808E0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A808E61C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A808ED48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  _Unwind_Resume(a1);
}

void sub_1A808F7CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _ExtractContentWithTag(uint64_t a1, int a2)
{
  int v3 = SecCmsMessageContentLevelCount();
  if (v3 < 1) {
    return 0;
  }
  int v4 = v3;
  int v5 = 0;
  while (1)
  {
    SecCmsMessageContentLevel();
    if (SecCmsContentInfoGetContentTypeTag() == a2)
    {
      uint64_t result = SecCmsContentInfoGetContent();
      if (result) {
        break;
      }
    }
    if (v4 == ++v5) {
      return 0;
    }
  }
  return result;
}

void sub_1A808FC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)_MFSecCMSDecoder;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A808FD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A809024C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8090394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8090610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8090854(_Unwind_Exception *a1)
{
  uint64_t v8 = v5;

  _Unwind_Resume(a1);
}

void sub_1A8090DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A809107C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80911A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80914C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8091A5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8091E6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8092064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8092130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)_MFSecCMSEncoder;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1A80922D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_7_3(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_1A8092530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8092710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80929C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1A8092AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8092B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8092C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8092D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8092D88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8092F74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8093278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8093384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1A8093520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8093698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A80937C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80942C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,uint64_t a21,void *a22,void *a23,void *a24)
{
  _Unwind_Resume(a1);
}

__CFString *MFMFSMTPFailureReasonString(unint64_t a1)
{
  if (a1 > 7) {
    return @"MFSMTPFailureReasonUnknown";
  }
  else {
    return off_1E5D40DE0[a1];
  }
}

void sub_1A8094818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8094904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A809498C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8094AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8094BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8094DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8094E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8095028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A809519C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8095318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1A8095490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80955A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1A8095860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80959D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8095AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8095BA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8095C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8095D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8095EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sqlite3_exec_printf(sqlite3 *a1, char *a2, int (__cdecl *a3)(void *, int, char **, char **), void *a4, char **a5, ...)
{
  va_start(va, a5);
  BOOL v9 = sqlite3_vmprintf(a2, va);
  uint64_t v10 = sqlite3_exec(a1, v9, a3, a4, a5);
  sqlite3_free(v9);
  return v10;
}

void MFLogSQLiteError(sqlite3 *a1, int a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (a2 == 10)
  {
    __errnuuint64_t m = 0;
    sqlite3_file_control(a1, 0, 4, &__errnum);
    uint64_t v6 = MFLogGeneral();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = sqlite3_errmsg(a1);
      int v9 = __errnum;
      uint64_t v10 = strerror(__errnum);
      *(_DWORD *)buf = 67110402;
      int v13 = a2;
      __int16 v14 = 2048;
      BOOL v15 = a1;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2082;
      uint64_t v19 = v8;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2080;
      uint64_t v23 = v10;
      _os_log_error_impl(&dword_1A7EFF000, v6, OS_LOG_TYPE_ERROR, "Error %d on connection %p %{public}@: %{public}s - I/O error %d (%s)", buf, 0x36u);
    }
  }
  else
  {
    CFIndex v7 = MFLogGeneral();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109890;
      int v13 = a2;
      __int16 v14 = 2048;
      BOOL v15 = a1;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2082;
      uint64_t v19 = sqlite3_errmsg(a1);
      _os_log_error_impl(&dword_1A7EFF000, v7, OS_LOG_TYPE_ERROR, "Error %d on connection %p %{public}@: %{public}s", buf, 0x26u);
    }
  }
}

void sub_1A8096160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *MFNSStringFromColumnInStatement(sqlite3_stmt *a1, int a2)
{
  CFAllocatorRef v2 = sqlite3_column_text(a1, a2);
  if (v2) {
    int v3 = (__CFString *)[[NSString alloc] initWithUTF8String:v2];
  }
  else {
    int v3 = &stru_1EFF11268;
  }
  return v3;
}

id MFDatabaseEncodedStringForAddressList(void *a1)
{
  uint64_t v1 = [a1 componentsJoinedByString:@"\r\r\n"];
  return v1;
}

id MFAddressListFromDatabaseEncodedString(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    uint64_t v2 = [v1 componentsSeparatedByString:@"\r\r\n"];
LABEL_5:
    int v3 = (void *)v2;
    goto LABEL_6;
  }
  if (v1)
  {
    uint64_t v2 = [MEMORY[0x1E4F1C978] array];
    goto LABEL_5;
  }
  int v3 = 0;
LABEL_6:

  return v3;
}

void sub_1A80962A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

UChar *_ICUSQLiteMatch(const char *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  UErrorCode pErrorCode = U_ZERO_ERROR;
  uint64_t v8 = *(char **)(a4 + 160);
  if (!strcmp(v8, a2) && *(void *)(a4 + 176)) {
    goto LABEL_19;
  }
  int32_t pDestLength = 0;
  size_t v9 = strlen(a2);
  if (!v9) {
    return 0;
  }
  int32_t v10 = v9;
  size_t v11 = v9 + 1;
  if (v9 + 1 <= *(void *)(a4 + 168))
  {
    size_t v11 = *(void *)(a4 + 168);
  }
  else
  {
    uint64_t v12 = (char *)malloc_type_malloc(v9 + 1, 0x100004077774924uLL);
    if (!v12) {
      return 0;
    }
    uint64_t v8 = v12;
    int v13 = *(void **)(a4 + 160);
    if (v13 != (void *)(a4 + 32)) {
      free(v13);
    }
    *(void *)(a4 + 160) = v8;
    *(void *)(a4 + 168) = v11;
  }
  strlcpy(v8, a2, v11);
  u_strFromUTF8(*(UChar **)(a4 + 176), *(_DWORD *)(a4 + 184), &pDestLength, a2, v10, &pErrorCode);
  if (pErrorCode != U_BUFFER_OVERFLOW_ERROR && *(void *)(a4 + 176)) {
    goto LABEL_17;
  }
  __int16 v14 = (UChar *)malloc_type_malloc(2 * pDestLength + 2, 0x1000040BDFB0063uLL);
  if (!v14) {
    return 0;
  }
  BOOL v15 = v14;
  __int16 v16 = *(void **)(a4 + 176);
  if (v16) {
    free(v16);
  }
  *(void *)(a4 + 176) = v15;
  int32_t v17 = pDestLength + 1;
  *(_DWORD *)(a4 + 184) = pDestLength + 1;
  UErrorCode pErrorCode = U_ZERO_ERROR;
  u_strFromUTF8(v15, v17, &pDestLength, a2, v10, &pErrorCode);
LABEL_17:
  usearch_setPattern();
  if (pErrorCode >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    **(unsigned char **)(a4 + 160) = 0;
    return 0;
  }
LABEL_19:
  int32_t v27 = 0;
  int32_t v18 = strlen(a1);
  if (v18 < 1) {
    return 0;
  }
  u_strFromUTF8(*(UChar **)(a4 + 192), *(_DWORD *)(a4 + 712), &v27, a1, v18, &pErrorCode);
  if (pErrorCode == U_BUFFER_OVERFLOW_ERROR)
  {
    uint64_t result = (UChar *)malloc_type_malloc(2 * v27 + 2, 0x1000040BDFB0063uLL);
    if (!result) {
      return result;
    }
    __int16 v20 = result;
    int v21 = *(void **)(a4 + 192);
    if (v21 != (void *)(a4 + 200)) {
      free(v21);
    }
    *(void *)(a4 + 192) = v20;
    int32_t v22 = v27 + 1;
    *(_DWORD *)(a4 + 712) = v27 + 1;
    UErrorCode pErrorCode = U_ZERO_ERROR;
    u_strFromUTF8(v20, v22, &v27, a1, v18, &pErrorCode);
  }
  usearch_setText();
  if (a3 != 3)
  {
    int v25 = usearch_first();
    BOOL v26 = 0;
    switch(a3)
    {
      case 0:
        BOOL v26 = v25 != -1;
        goto LABEL_40;
      case 1:
        BOOL v24 = v25 == -1;
        goto LABEL_37;
      case 2:
        BOOL v24 = v25 == 0;
        goto LABEL_37;
      case 4:
        if (v25) {
          goto LABEL_35;
        }
        BOOL v24 = usearch_getMatchedLength() == v27;
        goto LABEL_37;
      default:
        goto LABEL_40;
    }
  }
  int v23 = usearch_last();
  if (v23 == -1)
  {
LABEL_35:
    BOOL v26 = 0;
  }
  else
  {
    BOOL v24 = usearch_getMatchedLength() + v23 == v27;
LABEL_37:
    BOOL v26 = v24;
  }
LABEL_40:
  if (pErrorCode < U_ILLEGAL_ARGUMENT_ERROR) {
    return (UChar *)v26;
  }
  else {
    return 0;
  }
}

void ICUSearch(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (a2 == 3)
  {
    id v5 = sqlite3_value_text(*a3);
    uint64_t v6 = sqlite3_value_text(a3[1]);
    int v7 = sqlite3_value_int(a3[2]);
    if (v5) {
      BOOL v8 = v6 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      uint64_t v11 = v7;
      uint64_t v12 = sqlite3_user_data(a1);
      int v13 = _ICUSQLiteMatch((const char *)v5, (const char *)v6, v11, (uint64_t)v12);
      __int16 v14 = a1;
LABEL_13:
      sqlite3_result_int(v14, v13);
      return;
    }
    if (v6 && v7 == 1)
    {
      __int16 v14 = a1;
      int v13 = 1;
      goto LABEL_13;
    }
    sqlite3_result_null(a1);
  }
  else
  {
    sqlite3_result_null(a1);
    int32_t v10 = MFLogGeneral();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v15[0] = 67109120;
      v15[1] = a2;
      _os_log_impl(&dword_1A7EFF000, v10, OS_LOG_TYPE_INFO, "wrong number of arguments (%d) to icusearch", (uint8_t *)v15, 8u);
    }
  }
}

void CPSearch(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if (a2 == 3)
  {
    id v5 = sqlite3_value_text(*a3);
    uint64_t v6 = sqlite3_value_text(a3[1]);
    uint64_t v7 = sqlite3_value_int(a3[2]);
    uint64_t v8 = v7;
    if (v5) {
      BOOL v9 = v6 == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      __int16 v14 = sqlite3_user_data(a1);
      if ([v14 lastSearchStringLength]
        && !strcmp((const char *)v6, (const char *)[v14 lastSearchString]))
      {
        BOOL v15 = [v14 lastMatcher];
      }
      else
      {
        BOOL v15 = (void *)strlen((const char *)v6);
        if (v15)
        {
          if ([v14 lastSearchString]) {
            free((void *)[v14 lastSearchString]);
          }
          [v14 setLastSearchString:strdup((const char *)v6)];
          [v14 setLastSearchStringLength:v15];
          uint64_t v16 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1C9B8]), "initWithBytesNoCopy:length:freeWhenDone:", objc_msgSend(v14, "lastSearchString"), v15, 0);
          int32_t v17 = [v14 matchers];
          BOOL v15 = [v17 objectForKeyedSubscript:v16];

          if (!v15)
          {
            id v18 = objc_alloc(MEMORY[0x1E4F4BE70]);
            uint64_t v19 = [NSString stringWithUTF8String:v6];
            BOOL v15 = (void *)[v18 initWithSearchString:v19 options:(*MEMORY[0x1E4F4BEA8] | *MEMORY[0x1E4F4BEA0]) | *MEMORY[0x1E4F4BEB0]];

            __int16 v20 = [v14 matchers];

            if (!v20)
            {
              id v21 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
              [v14 setMatchers:v21];
            }
            int32_t v22 = [v14 matchers];
            int v23 = [MEMORY[0x1E4F1C9B8] dataWithData:v16];
            [v22 setObject:v15 forKey:v23];
          }
          [v14 setLastMatcher:v15];
        }
      }
      BOOL v24 = [NSString stringWithUTF8String:v5];
      int v25 = [v15 matches:v24 matchType:v8];

      int32_t v10 = a1;
      int v11 = v25;
      goto LABEL_28;
    }
    if (v6 && v7 == 1)
    {
      int32_t v10 = a1;
      int v11 = 1;
LABEL_28:
      sqlite3_result_int(v10, v11);
      return;
    }
    sqlite3_result_null(a1);
  }
  else
  {
    sqlite3_result_null(a1);
    int v13 = MFLogGeneral();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v26[0] = 67109120;
      v26[1] = a2;
      _os_log_impl(&dword_1A7EFF000, v13, OS_LOG_TYPE_INFO, "wrong number of arguments (%d) to icusearch", (uint8_t *)v26, 8u);
    }
  }
}

void sub_1A8096BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void _MFMoveDatabase(void *a1, void *a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v20 = a2;
  int v4 = [v3 lastPathComponent];
  id v21 = [v20 stringByAppendingPathComponent:v4];

  id v5 = EDLibraryLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    id v28 = v3;
    __int16 v29 = 2112;
    id v30 = v21;
    _os_log_impl(&dword_1A7EFF000, v5, OS_LOG_TYPE_INFO, "Renaming database %@ to %@", buf, 0x16u);
  }

  id v6 = v3;
  uint64_t v7 = (const std::__fs::filesystem::path *)[v6 fileSystemRepresentation];
  id v8 = v21;
  BOOL v9 = (const std::__fs::filesystem::path *)[v8 fileSystemRepresentation];
  rename(v7, v9, v10);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v11 = [&unk_1EFF50B08 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v23 != v12) {
          objc_enumerationMutation(&unk_1EFF50B08);
        }
        uint64_t v14 = *(void *)(*((void *)&v22 + 1) + 8 * i);
        id v15 = [v6 stringByAppendingString:v14];
        uint64_t v16 = (const std::__fs::filesystem::path *)[v15 fileSystemRepresentation];
        id v17 = [v8 stringByAppendingString:v14];
        id v18 = (const std::__fs::filesystem::path *)[v17 fileSystemRepresentation];
        rename(v16, v18, v19);
      }
      uint64_t v11 = [&unk_1EFF50B08 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v11);
  }
}

void sub_1A8096E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t MFCreateURLForContentID(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [(__CFString *)v1 rangeOfString:@"<"];
    uint64_t v5 = v4;
    unint64_t v6 = [(__CFString *)v2 rangeOfString:@">"];
    if (v3 == 0x7FFFFFFFFFFFFFFFLL || v6 == 0x7FFFFFFFFFFFFFFFLL || v6 <= v3 + v5)
    {
      CFStringRef v7 = v2;
    }
    else
    {
      v14.location = v3 + v5;
      v14.length = v6 - (v3 + v5);
      CFStringRef v7 = CFStringCreateWithSubstring(0, v2, v14);
    }
    id v8 = (__CFString *)v7;
    BOOL v9 = objc_msgSend(MEMORY[0x1E4F1CB10], "ef_defaultAllowedCharacterSet");
    int32_t v10 = [(__CFString *)v8 stringByAddingPercentEncodingWithAllowedCharacters:v9];

    if (v10)
    {
      uint64_t v11 = [@"cid" stringByAppendingFormat:@":%@", v10];
      uint64_t v12 = [objc_allocWithZone(MEMORY[0x1E4F1CB10]) initWithString:v11];
    }
    else
    {
      uint64_t v12 = 0;
    }
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

void sub_1A8097020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _SortWebAttachmentSources(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  objc_opt_class();
  char v6 = isKindOfClass ^ objc_opt_isKindOfClass();
  uint64_t v7 = -1;
  if ((isKindOfClass & 1) == 0) {
    uint64_t v7 = 1;
  }
  if (v6) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }

  return v8;
}

void sub_1A80971C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097274(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1A8097498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80977CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1A809797C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097B50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097C14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097CB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097EF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8097FF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80980F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A809822C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8098304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80983D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8098580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8098670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80986FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8098778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80987D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A8098848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1A80988FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __RegisterYahooAuthSchemes_block_invoke()
{
  id v0 = (void *)MEMORY[0x1E4F607C8];
  uint64_t v1 = objc_opt_class();
  return [v0 registerSchemeClass:v1];
}

uint64_t sub_1A8098A40(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  v174.rawValue._countAndFlagsBits = a1;
  v174.rawValue._id object = a2;
  uint64_t v156 = a3;
  v157 = a4;
  uint64_t v158 = a5;
  uint64_t v175 = a6;
  uint64_t v159 = 0;
  v127 = sub_1A809F800;
  v128 = sub_1A809EB30;
  v129 = sub_1A809EAD8;
  v130 = sub_1A809EEB8;
  v131 = sub_1A809EAB8;
  v132 = sub_1A809F1F4;
  v133 = sub_1A809EBC4;
  v134 = sub_1A809EEB8;
  v135 = sub_1A809EBB8;
  v136 = sub_1A809F634;
  v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v139 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v140 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v141 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v142 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v144 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v145 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v146 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v147 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v148 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  v193 = 0;
  uint64_t v191 = 0;
  uint64_t v192 = 0;
  uint64_t v190 = 0;
  uint64_t v188 = 0;
  uint64_t v189 = 0;
  uint64_t v187 = 0;
  uint64_t v149 = 0;
  v177 = 0;
  uint64_t v194 = a6;
  uint64_t v150 = sub_1A8A754D8();
  uint64_t v151 = *(void *)(v150 - 8);
  uint64_t v152 = v150 - 8;
  unint64_t v153 = (*(void *)(v151 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  v154 = (char *)v75 - v153;
  unint64_t v155 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v8);
  uint64_t v173 = (uint64_t)v75 - v155;
  uint64_t v160 = _s6LoggerVMa();
  uint64_t v161 = *(void *)(v160 - 8);
  uint64_t v162 = v161;
  uint64_t v168 = *(void *)(v161 + 64);
  unint64_t v163 = (v168 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v159);
  uint64_t v164 = (uint64_t)v75 - v163;
  unint64_t v165 = (v168 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v9);
  uint64_t v166 = (uint64_t)v75 - v165;
  unint64_t v167 = (v168 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v10);
  uint64_t v169 = (uint64_t)v75 - v167;
  unint64_t v170 = (v168 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v11);
  uint64_t v172 = (uint64_t)v75 - v170;
  v193 = (char *)v75 - v170;
  uint64_t v191 = v12;
  uint64_t v192 = v13;
  uint64_t v190 = v14;
  uint64_t v188 = v15;
  uint64_t v189 = v16;
  uint64_t v187 = v6;
  type metadata accessor for SearchIndexerBackgroundTask();
  sub_1A84AB39C(v173);
  id v17 = (unsigned __int8 *)EngineTracingID.invalid.unsafeMutableAddressor();
  int v171 = EngineLoggerID.init(id:)(*v17);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  Swift::String v18 = String.init(_:)(v174);
  uint64_t v19 = AccountLoggerID.init(accountIdentifier:)(v18._countAndFlagsBits, (unint64_t)v18._object);
  unint64_t v186 = EngineAndAccountLoggerID.init(engine:account:)(v171, v19);
  LOBYTE(v185) = v186;
  HIDWORD(v185) = HIDWORD(v186);
  sub_1A81D2340(v173, v185, v172);
  v176 = (void *)sub_1A83649A4(v174.rawValue._countAndFlagsBits, (uint64_t)v174.rawValue._object, v175);
  if (v176)
  {
    v126 = v176;
    id v125 = v176;
    v177 = v176;
    sub_1A809A0C4(v172, v169);
    swift_retain();
    unint64_t v122 = (*(unsigned __int8 *)(v162 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
    unint64_t v123 = (v122 + v168 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v124 = swift_allocObject();
    sub_1A809A14C(v169, v124 + v122);
    uint64_t v20 = v158;
    uint64_t v21 = v156;
    uint64_t v22 = (uint64_t)v127;
    uint64_t v23 = v124;
    uint64_t v24 = v172;
    long long v25 = (void *)(v124 + v123);
    *long long v25 = v157;
    v25[1] = v20;
    sub_1A80F45B0(v24, v21, v22, v23);
    swift_release();

    return sub_1A809A1D4(v172);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v154, v172, v150);
    sub_1A809A0C4(v172, v169);
    sub_1A809A0C4(v169, v166);
    sub_1A809A14C(v169, v164);
    uint64_t v27 = (unsigned __int8 *)(v166 + *(int *)(v160 + 20));
    int v87 = *v27;
    int v88 = *((_DWORD *)v27 + 1);
    sub_1A809A1D4(v166);
    uint64_t v86 = 24;
    uint64_t v102 = 7;
    uint64_t v28 = swift_allocObject();
    int v29 = v88;
    uint64_t v95 = v28;
    *(unsigned char *)(v28 + 16) = v87;
    *(_DWORD *)(v28 + 20) = v29;
    sub_1A809EAE4();
    sub_1A809EAE4();
    sub_1A809EAE4();
    uint64_t v30 = swift_allocObject();
    int v31 = v88;
    uint64_t v89 = v30;
    *(unsigned char *)(v30 + 16) = v87;
    *(_DWORD *)(v30 + 20) = v31;
    swift_retain();
    uint64_t v101 = 32;
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v89;
    uint64_t v103 = v32;
    *(void *)(v32 + 16) = v128;
    *(void *)(v32 + 24) = v33;
    sub_1A809EAE4();
    sub_1A809EAE4();
    swift_release();
    sub_1A809A1D4(v164);
    v120 = sub_1A8A754B8();
    int v121 = sub_1A8A77448();
    long long v92 = &v183;
    uint64_t v183 = 23;
    unint64_t v90 = sub_1A809EBD0();
    unint64_t v91 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v93 = v184;
    uint64_t v99 = 17;
    uint64_t v105 = swift_allocObject();
    int v97 = 16;
    *(unsigned char *)(v105 + 16) = 16;
    uint64_t v106 = swift_allocObject();
    int v100 = 4;
    *(unsigned char *)(v106 + 16) = 4;
    uint64_t v34 = swift_allocObject();
    uint64_t v94 = v34;
    *(void *)(v34 + 16) = v129;
    *(void *)(v34 + 24) = 0;
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v94;
    uint64_t v107 = v35;
    *(void *)(v35 + 16) = v130;
    *(void *)(v35 + 24) = v36;
    uint64_t v108 = swift_allocObject();
    *(unsigned char *)(v108 + 16) = 0;
    uint64_t v109 = swift_allocObject();
    *(unsigned char *)(v109 + 16) = 1;
    uint64_t v37 = swift_allocObject();
    uint64_t v38 = v95;
    uint64_t v96 = v37;
    *(void *)(v37 + 16) = v131;
    *(void *)(v37 + 24) = v38;
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v96;
    uint64_t v110 = v39;
    *(void *)(v39 + 16) = v132;
    *(void *)(v39 + 24) = v40;
    uint64_t v111 = swift_allocObject();
    *(unsigned char *)(v111 + 16) = v97;
    uint64_t v112 = swift_allocObject();
    *(unsigned char *)(v112 + 16) = v100;
    uint64_t v41 = swift_allocObject();
    uint64_t v98 = v41;
    *(void *)(v41 + 16) = v133;
    *(void *)(v41 + 24) = 0;
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v98;
    uint64_t v113 = v42;
    *(void *)(v42 + 16) = v134;
    *(void *)(v42 + 24) = v43;
    uint64_t v114 = swift_allocObject();
    *(unsigned char *)(v114 + 16) = 0;
    uint64_t v115 = swift_allocObject();
    *(unsigned char *)(v115 + 16) = v100;
    uint64_t v44 = swift_allocObject();
    uint64_t v45 = v103;
    uint64_t v104 = v44;
    *(void *)(v44 + 16) = v135;
    *(void *)(v44 + 24) = v45;
    uint64_t v46 = swift_allocObject();
    uint64_t v47 = v104;
    uint64_t v117 = v46;
    *(void *)(v46 + 16) = v136;
    *(void *)(v46 + 24) = v47;
    uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v116 = sub_1A8A78558();
    v118 = v48;
    swift_retain();
    uint64_t v49 = v105;
    uint64_t v50 = v118;
    *v118 = v137;
    v50[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
    swift_retain();
    uint64_t v51 = v106;
    long long v52 = v118;
    v118[2] = v138;
    v52[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v51;
    swift_retain();
    double v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v107;
    long long v54 = v118;
    v118[4] = v139;
    v54[5] = v53;
    swift_retain();
    uint64_t v55 = v108;
    char v56 = v118;
    v118[6] = v140;
    v56[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v55;
    swift_retain();
    uint64_t v57 = v109;
    uint64_t v58 = v118;
    v118[8] = v141;
    v58[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v57;
    swift_retain();
    uint64_t v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v110;
    id v60 = v118;
    v118[10] = v142;
    v60[11] = v59;
    swift_retain();
    uint64_t v61 = v111;
    uint64_t v62 = v118;
    v118[12] = v143;
    v62[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v61;
    swift_retain();
    uint64_t v63 = v112;
    uint64_t v64 = v118;
    v118[14] = v144;
    v64[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v63;
    swift_retain();
    uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v113;
    id v66 = v118;
    v118[16] = v145;
    v66[17] = v65;
    swift_retain();
    uint64_t v67 = v114;
    uint64_t v68 = v118;
    v118[18] = v146;
    v68[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v67;
    swift_retain();
    uint64_t v69 = v115;
    uint64_t v70 = v118;
    v118[20] = v147;
    v70[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v69;
    swift_retain();
    uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v117;
    uint64_t v72 = v118;
    v118[22] = v148;
    v72[23] = v71;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v120, (os_log_type_t)v121))
    {
      uint64_t v73 = v149;
      long long v79 = (uint8_t *)sub_1A8A77888();
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v78 = 0;
      uint64_t v80 = sub_1A809E94C(0);
      uint64_t v81 = sub_1A809E94C(v78);
      id v82 = &v182;
      v182 = v79;
      id v83 = &v181;
      uint64_t v181 = v80;
      int v84 = &v180;
      uint64_t v180 = v81;
      sub_1A809E9A8(0, &v182);
      sub_1A809E9A8(4, v82);
      v178 = v137;
      uint64_t v179 = v105;
      sub_1A809E9BC(&v178, (uint64_t)v82, (uint64_t)v83, (uint64_t)v84);
      uint64_t v85 = v73;
      if (v73)
      {
        __break(1u);
      }
      else
      {
        v178 = v138;
        uint64_t v179 = v106;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        uint64_t v76 = 0;
        uint64_t v74 = v76;
        v178 = v139;
        uint64_t v179 = v107;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[10] = v74;
        v178 = v140;
        uint64_t v179 = v108;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[9] = 0;
        v178 = v141;
        uint64_t v179 = v109;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[8] = 0;
        v178 = v142;
        uint64_t v179 = v110;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[7] = 0;
        v178 = v143;
        uint64_t v179 = v111;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[6] = 0;
        v178 = v144;
        uint64_t v179 = v112;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[5] = 0;
        v178 = v145;
        uint64_t v179 = v113;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[4] = 0;
        v178 = v146;
        uint64_t v179 = v114;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[3] = 0;
        v178 = v147;
        uint64_t v179 = v115;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        v75[2] = 0;
        v178 = v148;
        uint64_t v179 = v117;
        sub_1A809E9BC(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
        _os_log_impl(&dword_1A7EFF000, v120, (os_log_type_t)v121, "[%.*hhx-%.*X] Failed to get account and credentials.", v79, v93);
        v75[1] = 0;
        sub_1A809EA08(v80);
        sub_1A809EA08(v81);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v151 + 8))(v154, v150);
    swift_retain();
    v75[0] = sub_1A8A78558();
    v157(v75[0]);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1A809A1D4(v172);
  }
}

uint64_t sub_1A809A0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1A8A754D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
  uint64_t v3 = _s6LoggerVMa();
  uint64_t result = a2;
  *(void *)(a2 + *(int *)(v3 + 20)) = *(void *)(a1 + *(int *)(v3 + 20));
  return result;
}

uint64_t sub_1A809A14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1A8A754D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 32))(a2, a1);
  uint64_t v3 = _s6LoggerVMa();
  uint64_t result = a2;
  *(void *)(a2 + *(int *)(v3 + 20)) = *(void *)(a1 + *(int *)(v3 + 20));
  return result;
}

uint64_t sub_1A809A1D4(uint64_t a1)
{
  uint64_t v1 = sub_1A8A754D8();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  return a1;
}

uint64_t sub_1A809A230(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v97 = a1;
  uint64_t v104 = a2;
  uint64_t v101 = a3;
  uint64_t v96 = a4;
  uint64_t v92 = 0;
  uint64_t v111 = sub_1A809EB30;
  v118 = sub_1A809EAD8;
  uint64_t v119 = sub_1A809EEB8;
  int v121 = sub_1A809EAB8;
  unint64_t v123 = sub_1A809F1F4;
  v126 = sub_1A809EBC4;
  v127 = sub_1A809EEB8;
  v131 = sub_1A809EBB8;
  v135 = sub_1A809F634;
  v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v139 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v141 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v145 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v147 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v151 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  unint64_t v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  unint64_t v90 = (void (*)(char *, char *))sub_1A809B594;
  uint64_t v178 = 0;
  uint64_t v177 = 0;
  uint64_t v175 = 0;
  uint64_t v176 = 0;
  uint64_t v91 = 0;
  uint64_t v171 = 0;
  uint64_t v106 = _s6LoggerVMa();
  unint64_t v93 = (*(void *)(*(void *)(v106 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v113 = (uint64_t)&v64 - v93;
  unint64_t v94 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v5);
  uint64_t v107 = (uint64_t)&v64 - v94;
  unint64_t v95 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v7);
  uint64_t v105 = (uint64_t)&v64 - v95;
  uint64_t v98 = sub_1A8A754D8();
  uint64_t v102 = *(void *)(v98 - 8);
  uint64_t v99 = v98 - 8;
  unint64_t v100 = (*(void *)(v102 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  double v8 = MEMORY[0x1F4188790](v97);
  uint64_t v103 = (char *)&v64 - v100;
  uint64_t v178 = v9;
  uint64_t v177 = v10;
  uint64_t v175 = v101;
  uint64_t v176 = v11;
  (*(void (**)(char *, double))(v102 + 16))((char *)&v64 - v100, v8);
  sub_1A809A0C4(v104, v105);
  sub_1A809A0C4(v105, v107);
  sub_1A809A14C(v105, v113);
  uint64_t v12 = (unsigned __int8 *)(v107 + *(int *)(v106 + 20));
  int v109 = *v12;
  int v110 = *((_DWORD *)v12 + 1);
  sub_1A809A1D4(v107);
  uint64_t v108 = 24;
  uint64_t v133 = 7;
  uint64_t v13 = swift_allocObject();
  int v14 = v110;
  uint64_t v122 = v13;
  *(unsigned char *)(v13 + 16) = v109;
  *(_DWORD *)(v13 + 20) = v14;
  sub_1A809EAE4();
  sub_1A809EAE4();
  sub_1A809EAE4();
  uint64_t v15 = swift_allocObject();
  int v16 = v110;
  uint64_t v112 = v15;
  *(unsigned char *)(v15 + 16) = v109;
  *(_DWORD *)(v15 + 20) = v16;
  swift_retain();
  uint64_t v132 = 32;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v112;
  uint64_t v134 = v17;
  *(void *)(v17 + 16) = v111;
  *(void *)(v17 + 24) = v18;
  sub_1A809EAE4();
  sub_1A809EAE4();
  swift_release();
  sub_1A809A1D4(v113);
  uint64_t v164 = sub_1A8A754B8();
  int v165 = sub_1A8A77438();
  uint64_t v116 = &v173;
  uint64_t v173 = 23;
  unint64_t v114 = sub_1A809EBD0();
  unint64_t v115 = sub_1A809EC4C();
  sub_1A809ECC8();
  sub_1A8A76B48();
  uint32_t v117 = v174;
  uint64_t v129 = 17;
  uint64_t v138 = swift_allocObject();
  int v125 = 16;
  *(unsigned char *)(v138 + 16) = 16;
  uint64_t v140 = swift_allocObject();
  int v130 = 4;
  *(unsigned char *)(v140 + 16) = 4;
  uint64_t v19 = swift_allocObject();
  uint64_t v120 = v19;
  *(void *)(v19 + 16) = v118;
  *(void *)(v19 + 24) = 0;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v120;
  uint64_t v142 = v20;
  *(void *)(v20 + 16) = v119;
  *(void *)(v20 + 24) = v21;
  uint64_t v144 = swift_allocObject();
  *(unsigned char *)(v144 + 16) = 0;
  uint64_t v146 = swift_allocObject();
  *(unsigned char *)(v146 + 16) = 1;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v122;
  uint64_t v124 = v22;
  *(void *)(v22 + 16) = v121;
  *(void *)(v22 + 24) = v23;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v124;
  uint64_t v148 = v24;
  *(void *)(v24 + 16) = v123;
  *(void *)(v24 + 24) = v25;
  uint64_t v150 = swift_allocObject();
  *(unsigned char *)(v150 + 16) = v125;
  uint64_t v152 = swift_allocObject();
  *(unsigned char *)(v152 + 16) = v130;
  uint64_t v26 = swift_allocObject();
  uint64_t v128 = v26;
  *(void *)(v26 + 16) = v126;
  *(void *)(v26 + 24) = 0;
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v128;
  uint64_t v154 = v27;
  *(void *)(v27 + 16) = v127;
  *(void *)(v27 + 24) = v28;
  uint64_t v156 = swift_allocObject();
  *(unsigned char *)(v156 + 16) = 0;
  uint64_t v158 = swift_allocObject();
  *(unsigned char *)(v158 + 16) = v130;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v134;
  uint64_t v136 = v29;
  *(void *)(v29 + 16) = v131;
  *(void *)(v29 + 24) = v30;
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v136;
  uint64_t v161 = v31;
  *(void *)(v31 + 16) = v135;
  *(void *)(v31 + 24) = v32;
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
  uint64_t v159 = sub_1A8A78558();
  uint64_t v162 = v33;
  swift_retain();
  uint64_t v34 = v138;
  uint64_t v35 = v162;
  *uint64_t v162 = v137;
  v35[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
  swift_retain();
  uint64_t v36 = v140;
  uint64_t v37 = v162;
  v162[2] = v139;
  v37[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
  swift_retain();
  uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v142;
  uint64_t v39 = v162;
  v162[4] = v141;
  v39[5] = v38;
  swift_retain();
  uint64_t v40 = v144;
  uint64_t v41 = v162;
  v162[6] = v143;
  v41[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
  swift_retain();
  uint64_t v42 = v146;
  uint64_t v43 = v162;
  v162[8] = v145;
  v43[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
  swift_retain();
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v148;
  uint64_t v45 = v162;
  v162[10] = v147;
  v45[11] = v44;
  swift_retain();
  uint64_t v46 = v150;
  uint64_t v47 = v162;
  v162[12] = v149;
  v47[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v46;
  swift_retain();
  uint64_t v48 = v152;
  uint64_t v49 = v162;
  v162[14] = v151;
  v49[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
  swift_retain();
  uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v154;
  uint64_t v51 = v162;
  v162[16] = v153;
  v51[17] = v50;
  swift_retain();
  uint64_t v52 = v156;
  double v53 = v162;
  v162[18] = v155;
  v53[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v52;
  swift_retain();
  uint64_t v54 = v158;
  uint64_t v55 = v162;
  v162[20] = v157;
  v55[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54;
  swift_retain();
  char v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v161;
  uint64_t v57 = v162;
  v162[22] = v160;
  v57[23] = v56;
  sub_1A809B5EC();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v164, (os_log_type_t)v165))
  {
    uint64_t v58 = v91;
    id v83 = (uint8_t *)sub_1A8A77888();
    uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
    uint64_t v82 = 0;
    uint64_t v84 = sub_1A809E94C(0);
    uint64_t v85 = sub_1A809E94C(v82);
    uint64_t v86 = &v170;
    unint64_t v170 = v83;
    int v87 = &v169;
    uint64_t v169 = v84;
    int v88 = &v168;
    uint64_t v168 = v85;
    sub_1A809E9A8(0, &v170);
    sub_1A809E9A8(4, v86);
    uint64_t v166 = v137;
    uint64_t v167 = v138;
    sub_1A809E9BC(&v166, (uint64_t)v86, (uint64_t)v87, (uint64_t)v88);
    uint64_t v89 = v58;
    if (v58)
    {
      __break(1u);
    }
    else
    {
      uint64_t v166 = v139;
      uint64_t v167 = v140;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v78 = 0;
      uint64_t v60 = v78;
      uint64_t v166 = v141;
      uint64_t v167 = v142;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v77 = v60;
      uint64_t v166 = v143;
      uint64_t v167 = v144;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v76 = 0;
      uint64_t v166 = v145;
      uint64_t v167 = v146;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v75 = 0;
      uint64_t v166 = v147;
      uint64_t v167 = v148;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v74 = 0;
      uint64_t v166 = v149;
      uint64_t v167 = v150;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v73 = 0;
      uint64_t v166 = v151;
      uint64_t v167 = v152;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v72 = 0;
      uint64_t v166 = v153;
      uint64_t v167 = v154;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v71 = 0;
      uint64_t v166 = v155;
      uint64_t v167 = v156;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v70 = 0;
      uint64_t v166 = v157;
      uint64_t v167 = v158;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v69 = 0;
      uint64_t v166 = v160;
      uint64_t v167 = v161;
      sub_1A809E9BC(&v166, (uint64_t)&v170, (uint64_t)&v169, (uint64_t)&v168);
      uint64_t v68 = 0;
      _os_log_impl(&dword_1A7EFF000, v164, (os_log_type_t)v165, "[%.*hhx-%.*X] Did generate credentials.", v83, v117);
      uint64_t v67 = 0;
      sub_1A809EA08(v84);
      sub_1A809EA08(v85);
      sub_1A8A77868();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v79 = v68;
    }
  }
  else
  {
    uint64_t v59 = v91;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v79 = v59;
  }
  uint64_t v61 = v79;

  (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v98);
  uint64_t v172 = v97;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9740DE0);
  unint64_t v62 = sub_1A80A39EC();
  uint64_t result = sub_1A80A4C0C(v90, 0, v65, (uint64_t)&type metadata for Credentials, MEMORY[0x1E4FBC248], v62, MEMORY[0x1E4FBC278], v80);
  uint64_t v66 = result;
  if (v61)
  {
    __break(1u);
  }
  else
  {
    uint64_t v64 = v66;
    uint64_t v171 = v66;
    swift_retain();
    v101(v64);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1A809B594@<X0>(const void *a1@<X0>, void *a2@<X8>)
{
  sub_1A80A3AE8(a1, __dst);
  sub_1A80A3B24((uint64_t)__dst);
  Credentials.init(_:)((uint64_t)__dst, v4);
  return sub_1A80A3AE8(v4, a2);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A809B5EC()
{
}

uint64_t sub_1A809B964()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809B9B0()
{
  return sub_1A8A782D8();
}

uint64_t sub_1A809B9EC()
{
  return sub_1A8A782A8();
}

uint64_t sub_1A809BA38()
{
  return sub_1A8A782B8() & 1;
}

uint64_t sub_1A809BA88()
{
  return sub_1A8A782C8();
}

uint64_t sub_1A809BAD4()
{
  return sub_1A8A78268();
}

uint64_t sub_1A809BB18()
{
  return sub_1A8A78298();
}

uint64_t sub_1A809BB64()
{
  return sub_1A8A78278();
}

uint64_t sub_1A809BBB0()
{
  return sub_1A8A782D8();
}

uint64_t sub_1A809BBEC()
{
  return sub_1A8A782A8();
}

uint64_t sub_1A809BC38()
{
  return sub_1A8A782B8() & 1;
}

uint64_t sub_1A809BC88()
{
  return sub_1A8A782C8();
}

uint64_t sub_1A809BCD4()
{
  return sub_1A8A78268();
}

uint64_t sub_1A809BD14()
{
  return sub_1A8A78298();
}

uint64_t sub_1A809BD5C()
{
  return sub_1A8A78278();
}

void sub_1A809BDA4(uint64_t a1@<X8>)
{
  sub_1A809BDE0();
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = v2 & 1;
}

void sub_1A809BE04(void *a1@<X8>)
{
  sub_1A809BE34();
  *a1 = v1;
}

uint64_t sub_1A809BE50()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809BE9C()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809BEE8()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809BF2C()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809BF68()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809BFA8()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809BFE8()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809C028()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809C06C()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809C0AC()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809C0EC()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809C130()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809C174()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809C1B8()
{
  return sub_1A8A77BA8();
}

uint64_t sub_1A809C1D0()
{
  return sub_1A8A77BC8() & 1;
}

uint64_t sub_1A809C1EC()
{
  return sub_1A8A77B88() & 1;
}

uint64_t sub_1A809C208()
{
  return sub_1A8A77B98() & 1;
}

uint64_t sub_1A809C224()
{
  return sub_1A8A77BB8() & 1;
}

uint64_t sub_1A809C240()
{
  return sub_1A8A77BE8();
}

uint64_t sub_1A809C27C()
{
  return sub_1A8A77BD8();
}

uint64_t sub_1A809C294@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A809C2C4()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809C310()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809C354()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809C390()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809C3D0()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809C410()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809C450()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809C494()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809C4D4()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809C514()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809C558()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809C59C()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809C5E0()
{
  return sub_1A8A782D8();
}

uint64_t sub_1A809C61C()
{
  return sub_1A8A782A8();
}

uint64_t sub_1A809C668()
{
  return sub_1A8A782B8() & 1;
}

uint64_t sub_1A809C6B8()
{
  return sub_1A8A782C8();
}

uint64_t sub_1A809C704()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809C748()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809C784()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809C7C4()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809C804()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809C844()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809C888()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809C8C8()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809C908()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809C94C()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809C990()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809C9D4@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A809CA04()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809CA50()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809CA94()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809CAD0()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809CB10()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809CB50()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809CB90()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809CBD4()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809CC14()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809CC54()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809CC98()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809CCDC()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809CD20()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809CD64()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809CDA0()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809CDE0()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809CE20()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809CE60()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809CEA4()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809CEE4()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809CF24()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809CF68()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809CFAC()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809CFF0()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809D034()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809D070()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809D0B0()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809D0F0()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809D130()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809D174()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809D1B4()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809D1F4()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809D238()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809D27C()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809D2C0()
{
  return sub_1A8A782D8();
}

uint64_t sub_1A809D2FC()
{
  return sub_1A8A782A8();
}

uint64_t sub_1A809D348()
{
  return sub_1A8A782B8() & 1;
}

uint64_t sub_1A809D398()
{
  return sub_1A8A782C8();
}

uint64_t sub_1A809D3E4()
{
  return sub_1A8A78268();
}

uint64_t sub_1A809D424()
{
  return sub_1A8A78298();
}

uint64_t sub_1A809D46C()
{
  return sub_1A8A78278();
}

uint64_t sub_1A809D4B4()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809D500()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809D54C()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809D598()
{
  return sub_1A8A782D8();
}

uint64_t sub_1A809D5D4()
{
  return sub_1A8A782A8();
}

uint64_t sub_1A809D620()
{
  return sub_1A8A782B8() & 1;
}

uint64_t sub_1A809D670()
{
  return sub_1A8A782C8();
}

uint64_t sub_1A809D6BC()
{
  return sub_1A8A78268();
}

uint64_t sub_1A809D6FC()
{
  return sub_1A8A78298();
}

uint64_t sub_1A809D744()
{
  return sub_1A8A78278();
}

uint64_t sub_1A809D78C()
{
  return sub_1A8A782B8() & 1;
}

uint64_t sub_1A809D7DC()
{
  return sub_1A8A782C8();
}

uint64_t sub_1A809D828()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809D878()
{
  return sub_1A8A78268();
}

uint64_t sub_1A809D8B8()
{
  return sub_1A8A78298();
}

uint64_t sub_1A809D900()
{
  return sub_1A8A78278();
}

uint64_t sub_1A809D948()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809D994()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809D9E0()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809DA20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1A809DA60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A809DA90()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809DAD4()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809DB10()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809DB50()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809DB90()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809DBD0()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809DC14()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809DC54()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809DC94()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809DCD8()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809DD1C()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809DD60()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809DDAC()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809DDEC()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809DE38()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809DE78@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_1A809DEB8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A809DEE8()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809DF34()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809DF74()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809DFC0()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809E000()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809E04C()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809E08C()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809E0D8()
{
  return sub_1A8A78B08();
}

uint64_t sub_1A809E11C()
{
  return sub_1A8A78A98() & 1;
}

uint64_t sub_1A809E158()
{
  return sub_1A8A78AC8();
}

uint64_t sub_1A809E198()
{
  return sub_1A8A78AA8();
}

uint64_t sub_1A809E1D8()
{
  return sub_1A8A78AB8();
}

uint64_t sub_1A809E218()
{
  return sub_1A8A78A68() & 1;
}

uint64_t sub_1A809E25C()
{
  return sub_1A8A78A78();
}

uint64_t sub_1A809E29C()
{
  return sub_1A8A78A88();
}

uint64_t sub_1A809E2DC()
{
  return sub_1A8A78AF8();
}

uint64_t sub_1A809E320()
{
  return sub_1A8A78AD8();
}

uint64_t sub_1A809E364()
{
  return sub_1A8A78AE8();
}

uint64_t sub_1A809E3A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A842CD5C(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A809E3F0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_1A809E420(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A809E420(uint64_t result)
{
  return result;
}

uint64_t sub_1A809E43C()
{
  return sub_1A8A785F8() & 1;
}

id sub_1A809E488@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_1A809E4B8(*a1);
  *a2 = result;
  return result;
}

id sub_1A809E4B8(void *a1)
{
  id v1 = a1;
  type metadata accessor for ProgressUserInfoKey();
  sub_1A7F06CE0();
  sub_1A7F06D64();
  id v5 = (id)sub_1A8A782D8();
  id v2 = v5;

  return v5;
}

uint64_t sub_1A809E53C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A809E56C(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A809E56C(void *a1)
{
  id v1 = a1;
  type metadata accessor for ProgressUserInfoKey();
  sub_1A7F06CE0();
  sub_1A7F06D64();
  sub_1A8A782C8();

  return v4;
}

uint64_t sub_1A809E5E4()
{
  return sub_1A8A78288();
}

uint64_t sub_1A809E634()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A809E680()
{
  return sub_1A8A78288();
}

uint64_t sub_1A809E6CC()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809E70C()
{
  return sub_1A8A78288();
}

uint64_t sub_1A809E758()
{
  return sub_1A8A78288();
}

uint64_t sub_1A809E7A4()
{
  return sub_1A8A77B78();
}

uint64_t sub_1A809E7E4()
{
  return sub_1A8A78288();
}

uint64_t sub_1A809E830()
{
  return sub_1A8A78288();
}

uint64_t sub_1A809E87C()
{
  return sub_1A8A78268();
}

uint64_t sub_1A809E8BC()
{
  return sub_1A8A78298();
}

uint64_t sub_1A809E904()
{
  return sub_1A8A78278();
}

uint64_t sub_1A809E94C(uint64_t a1)
{
  if (a1) {
    return sub_1A8A77888();
  }
  else {
    return 0;
  }
}

uint64_t sub_1A809E9A8(uint64_t result, unsigned char **a2)
{
  id v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1A809E9BC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A809EA08(uint64_t result)
{
  if (result)
  {
    sub_1A8A77878();
    return sub_1A8A77868();
  }
  return result;
}

uint64_t sub_1A809EA78(uint64_t result)
{
  return result;
}

uint64_t sub_1A809EA8C()
{
  return swift_deallocObject();
}

uint64_t sub_1A809EAB8()
{
  LOBYTE(v2) = *(unsigned char *)(v0 + 16);
  HIDWORD(v2) = *(_DWORD *)(v0 + 20);
  return sub_1A809EA78(v2);
}

uint64_t sub_1A809EAD8()
{
  return 2;
}

uint64_t sub_1A809EAE4()
{
  return 0;
}

uint64_t sub_1A809EAF0(uint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t sub_1A809EB04()
{
  return swift_deallocObject();
}

uint64_t sub_1A809EB30()
{
  LOBYTE(v2) = *(unsigned char *)(v0 + 16);
  HIDWORD(v2) = *(_DWORD *)(v0 + 20);
  return sub_1A809EAF0(v2);
}

uint64_t sub_1A809EB50(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A809EB78()
{
  return swift_deallocObject();
}

uint64_t sub_1A809EBB8()
{
  return sub_1A809EB50(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A809EBC4()
{
  return 8;
}

unint64_t sub_1A809EBD0()
{
  uint64_t v2 = qword_1E97489E0;
  if (!qword_1E97489E0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97489E0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A809EC4C()
{
  uint64_t v2 = qword_1E97489D0;
  if (!qword_1E97489D0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97489D0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A809ECC8()
{
  uint64_t v2 = qword_1E97488F0;
  if (!qword_1E97488F0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97488F0);
    return WitnessTable;
  }
  return v2;
}

void sub_1A809ED44()
{
  void *v0 = *v0;
}

uint64_t sub_1A809ED50@<X0>(uint64_t (*a1)(void)@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A809ED8C@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    *a2 = result;
    return result;
  }
  __break(1u);
  return result;
}

unsigned char **sub_1A809EE04(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  unsigned char *v4 = a4;
  UChar *result = v4 + 1;
  return result;
}

uint64_t sub_1A809EE18()
{
  return swift_deallocObject();
}

unsigned char **sub_1A809EE44(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1A809EE04(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1A809EE4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A809EE78()
{
  return swift_deallocObject();
}

uint64_t sub_1A809EEB8@<X0>(_DWORD *a1@<X8>)
{
  return sub_1A809ED8C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A809EEC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a1;
  uint64_t v21 = a6;
  v13[1] = a7;
  int v14 = sub_1A80A3D58;
  uint64_t v25 = a6;
  uint64_t v18 = *(void *)(a6 - 8);
  uint64_t v19 = a6 - 8;
  v13[0] = (*(void *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v20 = (uint64_t)v13 - v13[0];
  v8(v7);
  uint64_t v16 = sub_1A8A78078() >> 3;
  uint64_t v23 = *v17;
  uint64_t v24 = v23 + v16;
  sub_1A809F488(v20, v14, (uint64_t)v22, v21, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC278], v15);
  uint64_t v9 = v18;
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  *v17 += v16;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
}

uint64_t sub_1A809F02C()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F06C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  unint64_t v4 = sub_1A809F0E0();
  uint64_t v5 = MEMORY[0x1E4FBC150];
  return sub_1A809EEC4(a1, a2, a3, v9, v10, v5, v4);
}

unint64_t sub_1A809F0E0()
{
  uint64_t v2 = qword_1E9748880;
  if (!qword_1E9748880)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748880);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A809F15C()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F188()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F1B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F1F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A809ED50(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A809F200()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F240(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  unint64_t v4 = sub_1A809F2B4();
  uint64_t v5 = MEMORY[0x1E4FBC358];
  return sub_1A809EEC4(a1, a2, a3, v9, v10, v5, v4);
}

unint64_t sub_1A809F2B4()
{
  uint64_t v2 = qword_1E9745FD0;
  if (!qword_1E9745FD0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9745FD0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A809F330()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F35C()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F388()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F3C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F408()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F434()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F460()
{
  return sub_1A8A77958();
}

uint64_t sub_1A809F488(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = a2;
  uint64_t v12 = a5;
  uint64_t v13 = a8;
  uint64_t v23 = a4;
  uint64_t v22 = a5;
  uint64_t v21 = a6;
  uint64_t v14 = *(void *)(a5 - 8);
  uint64_t v15 = a5 - 8;
  unint64_t v16 = (*(void *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = MEMORY[0x1F4188790]();
  uint64_t v18 = (char *)&v12 - v16;
  uint64_t v20 = v9 + *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t result = v17();
  uint64_t v19 = v8;
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v18, v12);
  }
  return result;
}

uint64_t sub_1A809F5B8@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A809F5F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F634@<X0>(_DWORD *a1@<X8>)
{
  return sub_1A809F5B8(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A809F640()
{
  return swift_deallocObject();
}

uint64_t sub_1A809F680(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  unint64_t v4 = sub_1A809EBD0();
  uint64_t v5 = MEMORY[0x1E4FBC4C0];
  return sub_1A809EEC4(a1, a2, a3, v9, v10, v5, v4);
}

uint64_t sub_1A809F6F4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(_s6LoggerVMa() - 8) + 80);
  uint64_t v4 = (v1 + 16) & ~v1;
  uint64_t v2 = sub_1A8A754D8();
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v0 + v4);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A809F800(uint64_t a1)
{
  uint64_t v8 = *(void *)(_s6LoggerVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v3 = v1 + ((v2 + *(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = *(void (**)(void))v3;
  uint64_t v5 = *(void *)(v3 + 8);
  return sub_1A809A230(a1, v1 + v2, v4, v5);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A809F8B0()
{
}

uint64_t sub_1A809F8DC(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A809F920()
{
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A809F94C()
{
}

uint64_t type metadata accessor for Key()
{
  uint64_t v4 = qword_1E974AB70;
  if (!qword_1E974AB70)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974AB70);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for IMAPCapability()
{
  uint64_t v4 = qword_1E974AB78;
  if (!qword_1E974AB78)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974AB78);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECMessageFlagColor()
{
  uint64_t v4 = qword_1E974AB80;
  if (!qword_1E974AB80)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974AB80);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EMFetchOptionType()
{
  uint64_t v4 = qword_1E9748438;
  if (!qword_1E9748438)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9748438);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EMFetchOption()
{
  uint64_t v4 = qword_1E9744AE0;
  if (!qword_1E9744AE0)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744AE0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MessageRuleQualifier()
{
  uint64_t v4 = qword_1E9744CC8;
  if (!qword_1E9744CC8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744CC8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECMessageHeaderKey()
{
  uint64_t v4 = qword_1E9744C10;
  if (!qword_1E9744C10)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744C10);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for CriterionType()
{
  uint64_t v4 = qword_1E974AB88;
  if (!qword_1E974AB88)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974AB88);
      return v1;
    }
  }
  return v4;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1A809FEA4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      int v3 = *(_OWORD *)a1;
    }
    else {
      int v3 = -1;
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1A809FFD0(uint64_t result, int a2, int a3)
{
  BOOL v3 = a3 != 0;
  if (a2)
  {
    *(_OWORD *)__n128 result = (a2 - 1);
    if (a3)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else if (a3)
  {
    if (v3) {
      *(unsigned char *)(result + 16) = 0;
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for timeval()
{
  uint64_t v4 = qword_1E9745100;
  if (!qword_1E9745100)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9745100);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EMPersistenceStatisticsKey()
{
  uint64_t v4 = qword_1E9744EB8;
  if (!qword_1E9744EB8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744EB8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for WritingOptions()
{
  uint64_t v4 = qword_1E9744D40;
  if (!qword_1E9744D40)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744D40);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MutabilityOptions()
{
  uint64_t v4 = qword_1E9740FD8;
  if (!qword_1E9740FD8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9740FD8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ReadingOptions()
{
  uint64_t v4 = qword_1E9744D00;
  if (!qword_1E9744D00)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744D00);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for FlowedTextConversionOptions()
{
  uint64_t v4 = qword_1E9744F48;
  if (!qword_1E9744F48)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744F48);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MFMessageFlags()
{
  uint64_t v4 = qword_1E9740F60;
  if (!qword_1E9740F60)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9740F60);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MailboxAttributes()
{
  uint64_t v4 = qword_1E9744BE8;
  if (!qword_1E9744BE8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744BE8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for SearchOptions()
{
  uint64_t v4 = qword_1E974AB90;
  if (!qword_1E974AB90)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974AB90);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECTransferMessageActionType()
{
  uint64_t v4 = qword_1E9744EF8;
  if (!qword_1E9744EF8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744EF8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EFContentProtectionState()
{
  uint64_t v4 = qword_1E974ABA0;
  if (!qword_1E974ABA0)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974ABA0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for URLResourceKey()
{
  uint64_t v4 = qword_1E9748718;
  if (!qword_1E9748718)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9748718);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EDMailboxRowID_s()
{
  uint64_t v4 = qword_1E9747090;
  if (!qword_1E9747090)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9747090);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EMActivityFetchState()
{
  uint64_t v4 = qword_1E9744CB8;
  if (!qword_1E9744CB8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744CB8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EMActivityUserInfoKey()
{
  uint64_t v4 = qword_1E9744DB0;
  if (!qword_1E9744DB0)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744DB0);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A80A0B54()
{
  return sub_1A80A0B6C();
}

unint64_t sub_1A80A0B6C()
{
  uint64_t v2 = qword_1E9744D88;
  if (!qword_1E9744D88)
  {
    type metadata accessor for EMActivityUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D88);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A0BF0()
{
  return sub_1A80A0C08();
}

unint64_t sub_1A80A0C08()
{
  uint64_t v2 = qword_1E9744DA0;
  if (!qword_1E9744DA0)
  {
    type metadata accessor for EMActivityUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744DA0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A0C8C()
{
  return sub_1A80A0CA4();
}

unint64_t sub_1A80A0CA4()
{
  uint64_t v2 = qword_1E9748828;
  if (!qword_1E9748828)
  {
    type metadata accessor for URLResourceKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748828);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A0D28()
{
  return sub_1A80A0D40();
}

unint64_t sub_1A80A0D40()
{
  uint64_t v2 = qword_1E9748840;
  if (!qword_1E9748840)
  {
    type metadata accessor for URLResourceKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748840);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A0DC4()
{
  return sub_1A80A0DDC();
}

unint64_t sub_1A80A0DDC()
{
  uint64_t v2 = qword_1E974ABA8;
  if (!qword_1E974ABA8)
  {
    type metadata accessor for SearchOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABA8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A0E60()
{
  return sub_1A80A0E78();
}

unint64_t sub_1A80A0E78()
{
  uint64_t v2 = qword_1E974ABB0;
  if (!qword_1E974ABB0)
  {
    type metadata accessor for SearchOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABB0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A0EFC()
{
  return sub_1A80A0F14();
}

unint64_t sub_1A80A0F14()
{
  uint64_t v2 = qword_1E9744BB8;
  if (!qword_1E9744BB8)
  {
    type metadata accessor for MailboxAttributes();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744BB8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A0F98()
{
  return sub_1A80A0FB0();
}

unint64_t sub_1A80A0FB0()
{
  uint64_t v2 = qword_1E9744BD0;
  if (!qword_1E9744BD0)
  {
    type metadata accessor for MailboxAttributes();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744BD0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1034()
{
  return sub_1A80A104C();
}

unint64_t sub_1A80A104C()
{
  uint64_t v2 = qword_1E9744B18;
  if (!qword_1E9744B18)
  {
    type metadata accessor for MFMessageFlags();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744B18);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A10D0()
{
  return sub_1A80A10E8();
}

unint64_t sub_1A80A10E8()
{
  uint64_t v2 = qword_1E9744B20;
  if (!qword_1E9744B20)
  {
    type metadata accessor for MFMessageFlags();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744B20);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A116C()
{
  return sub_1A80A1184();
}

unint64_t sub_1A80A1184()
{
  uint64_t v2 = qword_1E9744CD8;
  if (!qword_1E9744CD8)
  {
    type metadata accessor for ReadingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744CD8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1208()
{
  return sub_1A80A1220();
}

unint64_t sub_1A80A1220()
{
  uint64_t v2 = qword_1E9744CE0;
  if (!qword_1E9744CE0)
  {
    type metadata accessor for ReadingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744CE0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A12A4()
{
  return sub_1A80A12BC();
}

unint64_t sub_1A80A12BC()
{
  uint64_t v2 = qword_1E9745058;
  if (!qword_1E9745058)
  {
    type metadata accessor for MutabilityOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9745058);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1340()
{
  return sub_1A80A1358();
}

unint64_t sub_1A80A1358()
{
  uint64_t v2 = qword_1E9745060;
  if (!qword_1E9745060)
  {
    type metadata accessor for MutabilityOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9745060);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A13DC()
{
  return sub_1A80A13F4();
}

unint64_t sub_1A80A13F4()
{
  uint64_t v2 = qword_1E9744D18;
  if (!qword_1E9744D18)
  {
    type metadata accessor for WritingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D18);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1478()
{
  return sub_1A80A1490();
}

unint64_t sub_1A80A1490()
{
  uint64_t v2 = qword_1E9744D20;
  if (!qword_1E9744D20)
  {
    type metadata accessor for WritingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D20);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1514()
{
  return sub_1A80A152C();
}

unint64_t sub_1A80A152C()
{
  uint64_t v2 = qword_1E9744E98;
  if (!qword_1E9744E98)
  {
    type metadata accessor for EMPersistenceStatisticsKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744E98);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A15B0()
{
  return sub_1A80A15C8();
}

unint64_t sub_1A80A15C8()
{
  uint64_t v2 = qword_1E9744EB0;
  if (!qword_1E9744EB0)
  {
    type metadata accessor for EMPersistenceStatisticsKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744EB0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A164C()
{
  return sub_1A80A1664();
}

unint64_t sub_1A80A1664()
{
  uint64_t v2 = qword_1E9744C08;
  if (!qword_1E9744C08)
  {
    type metadata accessor for ECMessageHeaderKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744C08);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A16E8()
{
  return sub_1A80A1700();
}

unint64_t sub_1A80A1700()
{
  uint64_t v2 = qword_1E974ABC0;
  if (!qword_1E974ABC0)
  {
    type metadata accessor for ECMessageHeaderKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABC0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1784()
{
  return sub_1A80A179C();
}

unint64_t sub_1A80A179C()
{
  uint64_t v2 = qword_1E9744BF8;
  if (!qword_1E9744BF8)
  {
    type metadata accessor for ECMessageHeaderKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744BF8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1820()
{
  return sub_1A80A1838();
}

unint64_t sub_1A80A1838()
{
  uint64_t v2 = qword_1E9744AB0;
  if (!qword_1E9744AB0)
  {
    type metadata accessor for EMFetchOption();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744AB0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A18BC()
{
  return sub_1A80A18D4();
}

unint64_t sub_1A80A18D4()
{
  uint64_t v2 = qword_1E9740F58;
  if (!qword_1E9740F58)
  {
    type metadata accessor for EMFetchOption();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9740F58);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1958()
{
  return sub_1A80A1970();
}

unint64_t sub_1A80A1970()
{
  uint64_t v2 = qword_1E974ABD0;
  if (!qword_1E974ABD0)
  {
    type metadata accessor for Key();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABD0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A19F4()
{
  return sub_1A80A1A0C();
}

unint64_t sub_1A80A1A0C()
{
  uint64_t v2 = qword_1E974ABD8;
  if (!qword_1E974ABD8)
  {
    type metadata accessor for Key();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABD8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1A90()
{
  return sub_1A80A1AA8();
}

unint64_t sub_1A80A1AA8()
{
  uint64_t v2 = qword_1E974ABE0;
  if (!qword_1E974ABE0)
  {
    type metadata accessor for Key();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABE0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1B2C()
{
  return sub_1A80A1B44();
}

unint64_t sub_1A80A1B44()
{
  uint64_t v2 = qword_1E9744AB8;
  if (!qword_1E9744AB8)
  {
    type metadata accessor for EMFetchOption();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744AB8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1BC8()
{
  return sub_1A80A1BE0();
}

unint64_t sub_1A80A1BE0()
{
  uint64_t v2 = qword_1E9744AD0;
  if (!qword_1E9744AD0)
  {
    type metadata accessor for EMFetchOption();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744AD0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1C64()
{
  return sub_1A80A1C7C();
}

unint64_t sub_1A80A1C7C()
{
  uint64_t v2 = qword_1E9744E88;
  if (!qword_1E9744E88)
  {
    type metadata accessor for EMPersistenceStatisticsKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744E88);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1D00()
{
  return sub_1A80A1D18();
}

unint64_t sub_1A80A1D18()
{
  uint64_t v2 = qword_1E9744D10;
  if (!qword_1E9744D10)
  {
    type metadata accessor for WritingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D10);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1D9C()
{
  return sub_1A80A1DB4();
}

unint64_t sub_1A80A1DB4()
{
  uint64_t v2 = qword_1E9744D28;
  if (!qword_1E9744D28)
  {
    type metadata accessor for WritingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D28);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1E38()
{
  return sub_1A80A1E50();
}

unint64_t sub_1A80A1E50()
{
  uint64_t v2 = qword_1E9745050;
  if (!qword_1E9745050)
  {
    type metadata accessor for MutabilityOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9745050);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1ED4()
{
  return sub_1A80A1EEC();
}

unint64_t sub_1A80A1EEC()
{
  uint64_t v2 = qword_1E9745068;
  if (!qword_1E9745068)
  {
    type metadata accessor for MutabilityOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9745068);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A1F70()
{
  return sub_1A80A1F88();
}

unint64_t sub_1A80A1F88()
{
  uint64_t v2 = qword_1E9744CD0;
  if (!qword_1E9744CD0)
  {
    type metadata accessor for ReadingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744CD0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A200C()
{
  return sub_1A80A2024();
}

unint64_t sub_1A80A2024()
{
  uint64_t v2 = qword_1E9744CE8;
  if (!qword_1E9744CE8)
  {
    type metadata accessor for ReadingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744CE8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A20A8()
{
  return sub_1A80A20C0();
}

unint64_t sub_1A80A20C0()
{
  uint64_t v2 = qword_1E9744F20;
  if (!qword_1E9744F20)
  {
    type metadata accessor for FlowedTextConversionOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744F20);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2144()
{
  return sub_1A80A215C();
}

unint64_t sub_1A80A215C()
{
  uint64_t v2 = qword_1E9744F30;
  if (!qword_1E9744F30)
  {
    type metadata accessor for FlowedTextConversionOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744F30);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A21E0()
{
  return sub_1A80A21F8();
}

unint64_t sub_1A80A21F8()
{
  uint64_t v2 = qword_1E9744F10;
  if (!qword_1E9744F10)
  {
    type metadata accessor for FlowedTextConversionOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744F10);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A227C()
{
  return sub_1A80A2294();
}

unint64_t sub_1A80A2294()
{
  uint64_t v2 = qword_1E9744F38;
  if (!qword_1E9744F38)
  {
    type metadata accessor for FlowedTextConversionOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744F38);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2318()
{
  return sub_1A80A2330();
}

unint64_t sub_1A80A2330()
{
  uint64_t v2 = qword_1E9744B10;
  if (!qword_1E9744B10)
  {
    type metadata accessor for MFMessageFlags();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744B10);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A23B4()
{
  return sub_1A80A23CC();
}

unint64_t sub_1A80A23CC()
{
  uint64_t v2 = qword_1E9744B28;
  if (!qword_1E9744B28)
  {
    type metadata accessor for MFMessageFlags();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744B28);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2450()
{
  return sub_1A80A2468();
}

unint64_t sub_1A80A2468()
{
  uint64_t v2 = qword_1E9744BC0;
  if (!qword_1E9744BC0)
  {
    type metadata accessor for MailboxAttributes();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744BC0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A24EC()
{
  return sub_1A80A2504();
}

unint64_t sub_1A80A2504()
{
  uint64_t v2 = qword_1E9744BC8;
  if (!qword_1E9744BC8)
  {
    type metadata accessor for MailboxAttributes();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744BC8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2588()
{
  return sub_1A80A25A0();
}

unint64_t sub_1A80A25A0()
{
  uint64_t v2 = qword_1E974ABF0;
  if (!qword_1E974ABF0)
  {
    type metadata accessor for SearchOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABF0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2624()
{
  return sub_1A80A263C();
}

unint64_t sub_1A80A263C()
{
  uint64_t v2 = qword_1E974ABF8;
  if (!qword_1E974ABF8)
  {
    type metadata accessor for SearchOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974ABF8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A26C0()
{
  return sub_1A80A26D8();
}

unint64_t sub_1A80A26D8()
{
  uint64_t v2 = qword_1E9748820;
  if (!qword_1E9748820)
  {
    type metadata accessor for URLResourceKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748820);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A275C()
{
  return sub_1A80A2774();
}

unint64_t sub_1A80A2774()
{
  uint64_t v2 = qword_1E9744D78;
  if (!qword_1E9744D78)
  {
    type metadata accessor for EMActivityUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D78);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A27F8()
{
  uint64_t v2 = qword_1E9744D90;
  if (!qword_1E9744D90)
  {
    type metadata accessor for EMActivityUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D90);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A287C()
{
  uint64_t v2 = qword_1E9744DC8;
  if (!qword_1E9744DC8)
  {
    type metadata accessor for ProgressUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744DC8);
    return WitnessTable;
  }
  return v2;
}

uint64_t type metadata accessor for ProgressUserInfoKey()
{
  uint64_t v4 = qword_1E97489F8;
  if (!qword_1E97489F8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E97489F8);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A80A29A4()
{
  uint64_t v2 = qword_1E9744CB0;
  if (!qword_1E9744CB0)
  {
    type metadata accessor for EMActivityFetchState();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744CB0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2A28()
{
  uint64_t v2 = qword_1E9748838;
  if (!qword_1E9748838)
  {
    type metadata accessor for URLResourceKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748838);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2AAC()
{
  uint64_t v2 = qword_1E974AC00;
  if (!qword_1E974AC00)
  {
    type metadata accessor for SearchOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AC00);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2B30()
{
  uint64_t v2 = qword_1E9743C50;
  if (!qword_1E9743C50)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743C50);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2BAC()
{
  uint64_t v2 = qword_1E9744B30;
  if (!qword_1E9744B30)
  {
    type metadata accessor for MFMessageFlags();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744B30);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2C30()
{
  uint64_t v2 = qword_1E9746040;
  if (!qword_1E9746040)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9746040);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2CAC()
{
  uint64_t v2 = qword_1E9744F40;
  if (!qword_1E9744F40)
  {
    type metadata accessor for FlowedTextConversionOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744F40);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2D30()
{
  uint64_t v2 = qword_1E9744CF8;
  if (!qword_1E9744CF8)
  {
    type metadata accessor for ReadingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744CF8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2DB4()
{
  uint64_t v2 = qword_1E9745070;
  if (!qword_1E9745070)
  {
    type metadata accessor for MutabilityOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9745070);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2E38()
{
  uint64_t v2 = qword_1E9744D38;
  if (!qword_1E9744D38)
  {
    type metadata accessor for WritingOptions();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D38);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2EBC()
{
  uint64_t v2 = qword_1E9744EA0;
  if (!qword_1E9744EA0)
  {
    type metadata accessor for EMPersistenceStatisticsKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744EA0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2F40()
{
  uint64_t v2 = qword_1E9748428;
  if (!qword_1E9748428)
  {
    type metadata accessor for EMFetchOptionType();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748428);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A2FC4()
{
  uint64_t v2 = qword_1E974AC10;
  if (!qword_1E974AC10)
  {
    type metadata accessor for Key();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AC10);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A3048()
{
  uint64_t v2 = qword_1E974AC20;
  if (!qword_1E974AC20)
  {
    type metadata accessor for Key();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AC20);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A30CC()
{
  uint64_t v2 = qword_1E974AC28;
  if (!qword_1E974AC28)
  {
    type metadata accessor for ECMessageFlagColor();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AC28);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A3150()
{
  uint64_t v2 = qword_1E9744AC0;
  if (!qword_1E9744AC0)
  {
    type metadata accessor for EMFetchOption();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744AC0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A31D4()
{
  uint64_t v2 = qword_1E974AC38;
  if (!qword_1E974AC38)
  {
    type metadata accessor for ECMessageHeaderKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AC38);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A3258()
{
  uint64_t v2 = qword_1E974AC40;
  if (!qword_1E974AC40)
  {
    type metadata accessor for ECMessageHeaderKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AC40);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A32DC()
{
  uint64_t v2 = qword_1E9744E78;
  if (!qword_1E9744E78)
  {
    type metadata accessor for EMPersistenceStatisticsKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744E78);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A3360()
{
  uint64_t v2 = qword_1E9744BE0;
  if (!qword_1E9744BE0)
  {
    type metadata accessor for MailboxAttributes();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744BE0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A33E4()
{
  uint64_t v2 = qword_1E9748818;
  if (!qword_1E9748818)
  {
    type metadata accessor for URLResourceKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748818);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A3468()
{
  uint64_t v2 = qword_1E9744DE0;
  if (!qword_1E9744DE0)
  {
    type metadata accessor for ProgressUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744DE0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A34EC()
{
  uint64_t v2 = qword_1E9744DD8;
  if (!qword_1E9744DD8)
  {
    type metadata accessor for ProgressUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744DD8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A3570()
{
  uint64_t v2 = qword_1E9744D68;
  if (!qword_1E9744D68)
  {
    type metadata accessor for EMActivityUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744D68);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80A35F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3620()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A364C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A368C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A36B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A36E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3724()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3764()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3790()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A37BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A37FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A383C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3868()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3894()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A38D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3914()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A3940()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A396C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80A39AC()
{
  return swift_deallocObject();
}

unint64_t sub_1A80A39EC()
{
  uint64_t v2 = qword_1E9746DE8;
  if (!qword_1E9746DE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9740DE0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9746DE8);
    return WitnessTable;
  }
  return v2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t v4 = *a1;
  if (*a1 < 0)
  {
    uint64_t TypeByMangledNameInContextInMetadataState2 = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = TypeByMangledNameInContextInMetadataState2;
    return TypeByMangledNameInContextInMetadataState2;
  }
  return v4;
}

void *sub_1A80A3AE8(const void *a1, void *__dst)
{
  return __dst;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A80A3B24(uint64_t a1)
{
}

uint64_t sub_1A80A3B84(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (((a8 & 0x2000000000000000) != 0) | (a10 >> 59) & 6)
  {
    uint64_t v11 = ((a8 & 0x2000000000000000) != 0) | ((a10 >> 59) & 6);
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = ((a8 & 0x2000000000000000) != 0) | ((a10 >> 59) & 6);
    char v10 = 0;
  }
  if ((v10 & 1) == 0)
  {
    switch(v11)
    {
      case 0:
        sub_1A80A3CCC(result, a2);
        __n128 result = sub_1A80A3CCC(a3, a4);
        break;
      case 1:
        sub_1A80A3CCC(result, a2);
        sub_1A80A3CCC(a3, a4);
        sub_1A80A3CCC(a5, a6);
        sub_1A80A3CCC(a7, a8 & 0xDFFFFFFFFFFFFFFFLL);
        __n128 result = sub_1A80A3CCC(a9, a10 & 0xCFFFFFFFFFFFFFFFLL);
        break;
      case 2:
        __n128 result = sub_1A80A3CCC(result, a2);
        break;
      case 3:
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        __n128 result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        break;
      default:
        JUMPOUT(0);
    }
  }
  return result;
}

uint64_t sub_1A80A3CCC(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 62) & 3) == 1) {
    return swift_retain();
  }
  if (((a2 >> 62) & 3) == 2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1A80A3D58()
{
  return sub_1A809F460();
}

uint64_t type metadata accessor for MFAccountPasswordPromptResult()
{
  uint64_t v4 = qword_1E974ACB0;
  if (!qword_1E974ACB0)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974ACB0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECJunkMailLevel()
{
  uint64_t v4 = qword_1E9744B58;
  if (!qword_1E9744B58)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744B58);
      return v1;
    }
  }
  return v4;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1A80A3EE4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(unsigned char *)(a1 + 24)) {
      int v3 = *(_DWORD *)a1;
    }
    else {
      int v3 = -1;
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1A80A3FC4(uint64_t result, int a2, int a3)
{
  BOOL v3 = a3 != 0;
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if (a3)
    {
      if (v3) {
        *(unsigned char *)(result + 24) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else if (a3)
  {
    if (v3) {
      *(unsigned char *)(result + 24) = 0;
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for MFMailMessageLibraryUIDMessageSize()
{
  uint64_t v4 = qword_1E97450A0;
  if (!qword_1E97450A0)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E97450A0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for EDMailboxActionType()
{
  uint64_t v4 = qword_1E974ACB8;
  if (!qword_1E974ACB8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974ACB8);
      return v1;
    }
  }
  return v4;
}

__n128 __swift_memcpy16_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1A80A42FC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0xFE && *(unsigned char *)(a1 + 16))
    {
      int v5 = *(_OWORD *)a1 + 254;
    }
    else
    {
      char v3 = *(unsigned char *)(a1 + 12);
      int v4 = -1;
      if ((v3 & 0xFE) != 0) {
        int v4 = v3 & 1 | ((v3 & 0xFE) - 2) & 0x7FFFFFFF;
      }
      int v5 = v4;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1A80A4468(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0xFE;
  if (a2 > 0xFE)
  {
    *(_OWORD *)__n128 result = a2 - 255;
    if (a3 > 0xFE)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else
  {
    if (a3 > 0xFE)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 0;
      }
      else {
        __break(1u);
      }
    }
    if (a2) {
      *(unsigned char *)(result + 12) = (a2 - 1) & 1 | (2 * (((a2 - 1) >> 1) + 1));
    }
  }
  return result;
}

uint64_t type metadata accessor for MFMailMessageLibraryIndexedUIDRange()
{
  uint64_t v4 = qword_1E97450B0;
  if (!qword_1E97450B0)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E97450B0);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECMessageBodyElementAttributes()
{
  uint64_t v4 = qword_1E9744FA8;
  if (!qword_1E9744FA8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9744FA8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for os_unfair_lock_s()
{
  uint64_t v4 = qword_1E9740F70;
  if (!qword_1E9740F70)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9740F70);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for BGSystemTaskExpirationReason()
{
  uint64_t v4 = qword_1E974ACC8;
  if (!qword_1E974ACC8)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E974ACC8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for MFActivityMonitorNewMessagesState()
{
  uint64_t v4 = qword_1E9745090;
  if (!qword_1E9745090)
  {
    ForeignTypeMetachar data = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9745090);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_1A80A49B4()
{
  return sub_1A80A49CC();
}

unint64_t sub_1A80A49CC()
{
  uint64_t v2 = qword_1E9748A10;
  if (!qword_1E9748A10)
  {
    type metadata accessor for ProgressUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748A10);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A4A50()
{
  return sub_1A80A4A68();
}

unint64_t sub_1A80A4A68()
{
  uint64_t v2 = qword_1E9748A28;
  if (!qword_1E9748A28)
  {
    type metadata accessor for ProgressUserInfoKey();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748A28);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A4AEC()
{
  return sub_1A80A34EC();
}

unint64_t sub_1A80A4B04()
{
  uint64_t v2 = qword_1E9744FA0;
  if (!qword_1E9744FA0)
  {
    type metadata accessor for ECMessageBodyElementAttributes();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744FA0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80A4B88()
{
  uint64_t v2 = qword_1E9744B48;
  if (!qword_1E9744B48)
  {
    type metadata accessor for ECJunkMailLevel();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744B48);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80A4C0C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v55 = a3;
  uint64_t v45 = a4;
  uint64_t v32 = a5;
  uint64_t v54 = a6;
  uint64_t v34 = a8;
  uint64_t v35 = "Fatal error";
  uint64_t v36 = "Index out of bounds";
  uint64_t v37 = "Swift/Collection.swift";
  uint64_t v38 = "Range requires lowerBound <= upperBound";
  uint64_t v39 = "Swift/Range.swift";
  uint64_t v40 = "Index out of range";
  uint64_t v70 = a3;
  uint64_t v69 = a4;
  uint64_t v68 = a5;
  uint64_t v41 = *(void *)(a5 - 8);
  uint64_t v42 = a5 - 8;
  unint64_t v43 = (*(void *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](a1);
  uint64_t v44 = (char *)&v15 - v43;
  uint64_t v46 = 0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v49 = AssociatedTypeWitness - 8;
  unint64_t v50 = (*(void *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = MEMORY[0x1F4188790](v46);
  uint64_t v51 = (char *)&v15 - v50;
  unint64_t v52 = (*(void *)(*(void *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v8);
  double v53 = (char *)&v15 - v52;
  uint64_t v56 = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = v56 - 8;
  unint64_t v59 = (*(void *)(v57 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = MEMORY[0x1F4188790](v55);
  uint64_t v60 = (char *)&v15 - v59;
  unint64_t v61 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v10);
  unint64_t v62 = (char *)&v15 - v61;
  uint64_t v63 = sub_1A8A771B8();
  if (v63)
  {
    uint64_t v67 = sub_1A8A77F98();
    uint64_t v29 = sub_1A8A77FA8();
    sub_1A8A77EF8();
    uint64_t result = sub_1A8A77198();
    if (v63 >= 0)
    {
      uint64_t v27 = 0;
      for (uint64_t i = v33; ; uint64_t i = v18)
      {
        uint64_t v25 = i;
        uint64_t v26 = v27;
        if (v27 == v63) {
          goto LABEL_17;
        }
        if (v26 < 0 || v26 >= v63) {
          goto LABEL_16;
        }
        uint64_t v65 = v26;
        if (v63 < 0) {
          goto LABEL_15;
        }
        if (v26 >= v63) {
          break;
        }
        uint64_t v24 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          return result;
        }
        char v66 = 0;
        uint64_t v23 = v24;
LABEL_18:
        uint64_t v22 = v23;
        if (v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v60, v62, v56);
          sub_1A8A77CD8();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v56);
          uint64_t v19 = v67;
          swift_retain();
          swift_release();
          uint64_t v20 = v19;
          uint64_t v21 = v25;
          return v20;
        }
        uint64_t v17 = &v64;
        unint64_t v16 = (void (*)(void))sub_1A8A77328();
        (*(void (**)(char *))(v48 + 16))(v51);
        v16();
        uint64_t v14 = v25;
        v30(v51, v44);
        uint64_t v18 = v14;
        if (v14)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v51, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v56);
          sub_1A809F8B0();
          (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v34, v44, v32);
          return v15;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v51, AssociatedTypeWitness);
        sub_1A8A77F68();
        sub_1A8A771F8();
        uint64_t result = v18;
        uint64_t v27 = v22;
      }
      sub_1A8A780E8();
      __break(1u);
LABEL_15:
      sub_1A8A780E8();
      __break(1u);
LABEL_16:
      sub_1A8A781F8();
      __break(1u);
LABEL_17:
      uint64_t v65 = 0;
      char v66 = 1;
      uint64_t v23 = v26;
      goto LABEL_18;
    }
    sub_1A8A780E8();
    __break(1u);
  }
  uint64_t v20 = sub_1A8A76D18();
  uint64_t v21 = v33;
  return v20;
}

unsigned char *sub_1A80A5548@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v3 = _s15MailboxActivityVMa();
  return sub_1A80C2E18(a2, (unsigned char *)a3 + *(int *)(v3 + 20));
}

uint64_t sub_1A80A5590()
{
  if ((*(unsigned char *)(v0 + 8) & 1) == 0)
  {
    sub_1A8A78758();
    sub_1A80C5868();
  }
  return sub_1A8A78758();
}

BOOL sub_1A80A5678(uint64_t *a1, uint64_t *a2)
{
  uint64_t v12 = 0;
  char v13 = 0;
  uint64_t v10 = 0;
  char v11 = 0;
  uint64_t v5 = *a1;
  char v2 = *((unsigned char *)a1 + 8);
  uint64_t v12 = *a1;
  char v13 = v2 & 1;
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v10 = *a2;
  char v11 = v7 & 1;
  if ((v2 & 1) == 0)
  {
    if ((v7 & 1) == 0)
    {
      uint64_t v9 = v5;
      uint64_t v8 = v6;
      return static MailboxRowID.== infix(_:_:)(&v9, &v8);
    }
    return 0;
  }
  return (v7 & 1) != 0;
}

uint64_t sub_1A80A5788()
{
  return sub_1A8A77CE8();
}

unint64_t sub_1A80A57FC()
{
  uint64_t v2 = qword_1E9743698;
  if (!qword_1E9743698)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743698);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80A587C()
{
  return sub_1A80A5788();
}

uint64_t sub_1A80A5894()
{
  return sub_1A80A5590();
}

uint64_t sub_1A80A58AC()
{
  return sub_1A8A76238();
}

BOOL sub_1A80A58C4(uint64_t *a1, uint64_t *a2)
{
  return sub_1A80A5678(a1, a2);
}

uint64_t sub_1A80A58E0(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v38 = 0;
  uint64_t v37 = 0;
  uint64_t v36 = 0;
  uint64_t v33 = 0;
  uint64_t v29 = v32;
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v18 = 0;
  uint64_t v11 = sub_1A8A744F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v11 - 8;
  unint64_t v14 = (*(void *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v6 - v14;
  unint64_t v16 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790]((char *)&v6 - v14);
  uint64_t v17 = (char *)&v6 - v16;
  uint64_t v38 = (char *)&v6 - v16;
  unint64_t v19 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9741290) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v6 - v19;
  unint64_t v21 = (*(void *)(*(void *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (uint64_t)&v6 - v21;
  uint64_t v37 = v3;
  uint64_t v36 = v1;
  uint64_t v22 = v1 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  uint64_t v23 = &v35;
  uint64_t v24 = 0;
  swift_beginAccess();
  sub_1A80A5D48(v22, v27);
  swift_endAccess();
  uint64_t v26 = &v34;
  swift_beginAccess();
  uint64_t v28 = sub_1A81D3848(v25, v27);
  swift_endAccess();
  sub_1A80A5E80(v27);
  uint64_t v33 = v28;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v31 = v28;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743F50);
  sub_1A80A5F40();
  sub_1A8A772F8();
  while (1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97454E0);
    sub_1A8A78038();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v20, 1, v11) == 1) {
      break;
    }
    uint64_t v4 = v15;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v20, v11);
    id v8 = objc_msgSend(self, sel_defaultCenter);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v4, v17, v11);
    id v7 = (id)sub_1A8A744C8();
    uint64_t v10 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v9 = v12 + 8;
    v10(v15, v11);
    objc_msgSend(v8, sel_postNotification_, v7);

    v10(v17, v11);
  }
  sub_1A809F94C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A80A5D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1A8A74998();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
  uint64_t v8 = _s18MailboxPersistenceVMa();
  uint64_t v6 = *(int *)(v8 + 20);
  id v7 = *(void **)(a1 + v6);
  id v3 = v7;
  *(void *)(a2 + v6) = v7;
  uint64_t v4 = *(int *)(v8 + 24);
  uint64_t v13 = (void *)(a1 + v4);
  uint64_t v15 = (void *)(a2 + v4);
  *(void *)(a2 + v4) = *(void *)(a1 + v4);
  uint64_t v10 = *(void *)(a1 + v4 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v15[1] = v10;
  uint64_t v11 = v13[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _DWORD v15[2] = v11;
  uint64_t v12 = v13[3];
  swift_retain();
  v15[3] = v12;
  uint64_t v16 = v13[4];
  swift_retain();
  uint64_t result = a2;
  void v15[4] = v16;
  return result;
}

uint64_t sub_1A80A5E80(uint64_t a1)
{
  uint64_t v1 = sub_1A8A74998();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1A80A5F40()
{
  uint64_t v2 = qword_1E9743F58;
  if (!qword_1E9743F58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9743F50);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743F58);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80A5FC4()
{
  uint64_t v11 = 0;
  unint64_t v3 = (*(void *)(*(void *)(sub_1A8A774C8() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v10 = (uint64_t)&v2 - v3;
  unint64_t v4 = (*(void *)(*(void *)(sub_1A8A77488() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v11);
  uint64_t v9 = (char *)&v2 - v4;
  unint64_t v5 = (*(void *)(*(void *)(sub_1A8A75CE8() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v11);
  uint64_t v8 = (char *)&v2 - v5;
  sub_1A80D3FCC();
  uint64_t v6 = sub_1A8A76728();
  uint64_t v7 = v0;
  sub_1A80D4034();
  sub_1A80D404C();
  sub_1A80D40E4(v10);
  uint64_t result = sub_1A8A77508();
  qword_1E9746A98 = result;
  return result;
}

uint64_t *sub_1A80A6160()
{
  if (qword_1E9746100 != -1) {
    swift_once();
  }
  return &qword_1E9746A98;
}

id *sub_1A80A61C4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  v645 = v2;
  uint64_t v523 = v1;
  uint64_t v643 = 0;
  v524 = sub_1A80AB6E0;
  v525 = sub_1A809EB30;
  v526 = sub_1A809EAD8;
  v527 = sub_1A809EEB8;
  v528 = sub_1A809EAB8;
  v529 = sub_1A809F1F4;
  v530 = sub_1A809EBC4;
  v531 = sub_1A809EEB8;
  v532 = sub_1A809EBB8;
  v533 = sub_1A809F634;
  v534 = sub_1A80C3B24;
  v535 = sub_1A80C40EC;
  v536 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v537 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v538 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v539 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v540 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v541 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v542 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v543 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v544 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v545 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v546 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v547 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  v548 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v549 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v550 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  v551 = sub_1A809EB30;
  v552 = sub_1A809EEB8;
  v553 = sub_1A809EAB8;
  v554 = sub_1A809F1F4;
  v555 = sub_1A809EEB8;
  v556 = sub_1A809EBB8;
  v557 = sub_1A809F634;
  v558 = sub_1A80C3B24;
  v559 = sub_1A80C40EC;
  v560 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v561 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v562 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v563 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v564 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v565 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v566 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v567 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v568 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v569 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v570 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v571 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  v572 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v573 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v574 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  v575 = sub_1A809EB30;
  v576 = sub_1A80C5310;
  v577 = sub_1A809EEB8;
  v578 = sub_1A809EAB8;
  v579 = sub_1A809F1F4;
  v580 = sub_1A809EEB8;
  v581 = sub_1A809EBB8;
  v582 = sub_1A809F634;
  v583 = sub_1A80C5358;
  v584 = sub_1A80C40EC;
  v585 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v586 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v587 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v588 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v589 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v590 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v591 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v592 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v593 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v594 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v595 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v596 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  v597 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v598 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v599 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  v739 = 0;
  v738 = 0;
  v737 = 0;
  v736 = 0;
  uint64_t v735 = 0;
  uint64_t v734 = 0;
  id v732 = 0;
  v660 = v731;
  size_t v662 = 40;
  memset(v731, 0, sizeof(v731));
  uint64_t v655 = 0;
  v663 = 0;
  v727 = 0;
  uint64_t v725 = 0;
  uint64_t v726 = 0;
  uint64_t v715 = 0;
  uint64_t v716 = 0;
  id v714 = 0;
  uint64_t v711 = 0;
  uint64_t v682 = 0;
  char v683 = 0;
  uint64_t v677 = 0;
  char v678 = 0;
  id v674 = 0;
  uint64_t v673 = 0;
  unint64_t v600 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9743200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  v601 = (char *)&v214 - v600;
  unint64_t v602 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v4);
  v603 = (char *)&v214 - v602;
  uint64_t v604 = type metadata accessor for Activity.MailboxStatus(v5);
  uint64_t v606 = *(void *)(v604 - 8);
  uint64_t v605 = v604 - 8;
  uint64_t v607 = v606;
  uint64_t v608 = *(void *)(v606 + 64);
  unint64_t v609 = (v608 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v604);
  v610 = (char *)&v214 - v609;
  v739 = (char *)&v214 - v609;
  unint64_t v611 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v7);
  v612 = (char *)&v214 - v611;
  unint64_t v613 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790]((char *)&v214 - v611);
  v614 = (char *)&v214 - v613;
  v738 = (char *)&v214 - v613;
  unint64_t v615 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97436F0) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v643);
  v616 = (id *)((char *)&v214 - v615);
  unint64_t v617 = (*(void *)(*(void *)(type metadata accessor for Activity(v9) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v643);
  v618 = (uint64_t *)((char *)&v214 - v617);
  uint64_t v619 = sub_1A8A754D8();
  uint64_t v620 = *(void *)(v619 - 8);
  uint64_t v621 = v619 - 8;
  unint64_t v622 = (*(void *)(v620 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v643);
  v623 = (char *)&v214 - v622;
  unint64_t v624 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v11);
  v625 = (char *)&v214 - v624;
  unint64_t v626 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v13);
  v627 = (char *)&v214 - v626;
  uint64_t v628 = _s6LoggerVMa();
  unint64_t v629 = (*(void *)(*(void *)(v628 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v643);
  uint64_t v630 = (uint64_t)&v214 - v629;
  unint64_t v631 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v15);
  uint64_t v632 = (uint64_t)&v214 - v631;
  unint64_t v633 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v17);
  uint64_t v634 = (uint64_t)&v214 - v633;
  unint64_t v635 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v19);
  uint64_t v636 = (uint64_t)&v214 - v635;
  uint64_t v657 = _s15MailboxActivityVMa();
  unint64_t v637 = (*(void *)(*(void *)(v657 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v657);
  v638 = (id *)((char *)&v214 - v637);
  v737 = (char *)&v214 - v637;
  unint64_t v639 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9740D10) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v643);
  v640 = (char *)&v214 - v639;
  unint64_t v641 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v21);
  v642 = (char *)&v214 - v641;
  unint64_t v644 = (*(void *)(*(void *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v643);
  uint64_t v650 = (uint64_t)&v214 - v644;
  unint64_t v646 = (*(void *)(*(void *)(_s18LastSyncDateHelperVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v645);
  v649 = (id *)((char *)&v214 - v646);
  v736 = (char *)&v214 - v646;
  uint64_t v735 = v22;
  uint64_t v734 = v1;
  v652 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence;
  id v651 = *(id *)(v1 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
  id v23 = v651;
  uint64_t v647 = v1 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  v648 = &v733;
  uint64_t v654 = 32;
  swift_beginAccess();
  sub_1A80A5D48(v647, v650);
  swift_endAccess();
  uint64_t v24 = sub_1A80AA700();
  sub_1A80AA728((uint64_t)v651, v650, v24, v649);
  id v653 = *(id *)(v1 + *v652);
  id v25 = v653;
  id v732 = v653;
  v656 = &v730;
  swift_beginAccess();
  uint64_t v658 = *(void *)(v1 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  unint64_t v659 = sub_1A80A57FC();
  v661 = &v740;
  sub_1A8A76038();
  memcpy(v660, v661, v662);
  v664 = v663;
  while (1)
  {
    v521 = v664;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743D30);
    sub_1A8A76148();
    sub_1A80AA78C(v640, v642);
    uint64_t v522 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743690);
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(*(void *)(v522 - 8) + 48))(v642, 1) == 1) {
      break;
    }
    uint64_t v518 = *(void *)v642;
    int v519 = v642[8];
    uint64_t v26 = &v642[*(int *)(v522 + 48)];
    uint64_t v677 = v518;
    int v520 = 1;
    char v678 = v519 & 1;
    sub_1A80C4C18(v26, v638);
    uint64_t v675 = v518;
    char v676 = v519 & 1 & v520;
    if ((sub_1A80AADEC((uint64_t)&v675) & 1) != 0 && (v517 = *v638, id v27 = v517, v517))
    {
      id v516 = v517;
      id v515 = v516;
      id v674 = v516;
      if (v519)
      {
        v513 = v521;
      }
      else
      {
        uint64_t v514 = v518;
        uint64_t v474 = v518;
        uint64_t v673 = v518;
        v467 = &v672;
        uint64_t v672 = v518;
        id v468 = objc_msgSend(v515, sel_objectID);
        sub_1A80AB0A0(v467, v468);
        uint64_t v28 = v627;

        v469 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
        sub_1A809A0C4(v523 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v636);
        (*(void (**)(char *, uint64_t, uint64_t))(v620 + 16))(v28, v636, v619);
        sub_1A809A1D4(v636);
        swift_retain();
        swift_retain();
        sub_1A809A0C4(v523 + *v469, v634);
        uint64_t v29 = (unsigned __int8 *)(v634 + *(int *)(v628 + 20));
        int v470 = *v29;
        int v471 = *((_DWORD *)v29 + 1);
        sub_1A809A1D4(v634);
        swift_release();
        uint64_t v473 = 24;
        uint64_t v490 = 7;
        uint64_t v30 = swift_allocObject();
        int v31 = v471;
        uint64_t v481 = v30;
        *(unsigned char *)(v30 + 16) = v470;
        *(_DWORD *)(v30 + 20) = v31;
        sub_1A809EAE4();
        sub_1A809EAE4();
        sub_1A809EAE4();
        uint64_t v32 = swift_allocObject();
        int v33 = v471;
        uint64_t v472 = v32;
        *(unsigned char *)(v32 + 16) = v470;
        *(_DWORD *)(v32 + 20) = v33;
        swift_retain();
        uint64_t v489 = 32;
        uint64_t v34 = swift_allocObject();
        uint64_t v35 = v472;
        uint64_t v486 = v34;
        *(void *)(v34 + 16) = v575;
        *(void *)(v34 + 24) = v35;
        sub_1A809EAE4();
        sub_1A809EAE4();
        swift_release();
        swift_release();
        uint64_t v475 = swift_allocObject();
        *(void *)(v475 + 16) = v474;
        swift_retain();
        uint64_t v36 = swift_allocObject();
        uint64_t v37 = v475;
        uint64_t v491 = v36;
        *(void *)(v36 + 16) = v576;
        *(void *)(v36 + 24) = v37;
        swift_release();
        v511 = sub_1A8A754B8();
        int v512 = sub_1A8A77468();
        v478 = &v670;
        uint64_t v670 = 33;
        unint64_t v476 = sub_1A809EBD0();
        unint64_t v477 = sub_1A809EC4C();
        sub_1A809ECC8();
        sub_1A8A76B48();
        uint32_t v479 = v671;
        uint64_t v488 = 17;
        uint64_t v493 = swift_allocObject();
        int v483 = 16;
        *(unsigned char *)(v493 + 16) = 16;
        uint64_t v494 = swift_allocObject();
        int v485 = 4;
        *(unsigned char *)(v494 + 16) = 4;
        uint64_t v38 = swift_allocObject();
        uint64_t v480 = v38;
        *(void *)(v38 + 16) = v526;
        *(void *)(v38 + 24) = 0;
        uint64_t v39 = swift_allocObject();
        uint64_t v40 = v480;
        uint64_t v495 = v39;
        *(void *)(v39 + 16) = v577;
        *(void *)(v39 + 24) = v40;
        uint64_t v496 = swift_allocObject();
        *(unsigned char *)(v496 + 16) = 0;
        uint64_t v497 = swift_allocObject();
        *(unsigned char *)(v497 + 16) = 1;
        uint64_t v41 = swift_allocObject();
        uint64_t v42 = v481;
        uint64_t v482 = v41;
        *(void *)(v41 + 16) = v578;
        *(void *)(v41 + 24) = v42;
        uint64_t v43 = swift_allocObject();
        uint64_t v44 = v482;
        uint64_t v498 = v43;
        *(void *)(v43 + 16) = v579;
        *(void *)(v43 + 24) = v44;
        uint64_t v499 = swift_allocObject();
        *(unsigned char *)(v499 + 16) = v483;
        uint64_t v500 = swift_allocObject();
        *(unsigned char *)(v500 + 16) = v485;
        uint64_t v45 = swift_allocObject();
        uint64_t v484 = v45;
        *(void *)(v45 + 16) = v530;
        *(void *)(v45 + 24) = 0;
        uint64_t v46 = swift_allocObject();
        uint64_t v47 = v484;
        uint64_t v501 = v46;
        *(void *)(v46 + 16) = v580;
        *(void *)(v46 + 24) = v47;
        uint64_t v502 = swift_allocObject();
        *(unsigned char *)(v502 + 16) = 0;
        uint64_t v503 = swift_allocObject();
        *(unsigned char *)(v503 + 16) = v485;
        uint64_t v48 = swift_allocObject();
        uint64_t v49 = v486;
        uint64_t v487 = v48;
        *(void *)(v48 + 16) = v581;
        *(void *)(v48 + 24) = v49;
        uint64_t v50 = swift_allocObject();
        uint64_t v51 = v487;
        uint64_t v504 = v50;
        *(void *)(v50 + 16) = v582;
        *(void *)(v50 + 24) = v51;
        uint64_t v505 = swift_allocObject();
        *(unsigned char *)(v505 + 16) = 32;
        uint64_t v506 = swift_allocObject();
        *(unsigned char *)(v506 + 16) = 8;
        uint64_t v52 = swift_allocObject();
        uint64_t v53 = v491;
        uint64_t v492 = v52;
        *(void *)(v52 + 16) = v583;
        *(void *)(v52 + 24) = v53;
        uint64_t v54 = swift_allocObject();
        uint64_t v55 = v492;
        uint64_t v508 = v54;
        *(void *)(v54 + 16) = v584;
        *(void *)(v54 + 24) = v55;
        uint64_t v510 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
        uint64_t v507 = sub_1A8A78558();
        v509 = v56;
        swift_retain();
        uint64_t v57 = v493;
        uint64_t v58 = v509;
        *v509 = v585;
        v58[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v57;
        swift_retain();
        uint64_t v59 = v494;
        uint64_t v60 = v509;
        v509[2] = v586;
        v60[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v59;
        swift_retain();
        unint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v495;
        unint64_t v62 = v509;
        v509[4] = v587;
        v62[5] = v61;
        swift_retain();
        uint64_t v63 = v496;
        char v64 = v509;
        v509[6] = v588;
        v64[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v63;
        swift_retain();
        uint64_t v65 = v497;
        char v66 = v509;
        v509[8] = v589;
        v66[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v65;
        swift_retain();
        uint64_t v67 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v498;
        uint64_t v68 = v509;
        v509[10] = v590;
        v68[11] = v67;
        swift_retain();
        uint64_t v69 = v499;
        uint64_t v70 = v509;
        v509[12] = v591;
        v70[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v69;
        swift_retain();
        uint64_t v71 = v500;
        uint64_t v72 = v509;
        v509[14] = v592;
        v72[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v71;
        swift_retain();
        uint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v501;
        uint64_t v74 = v509;
        v509[16] = v593;
        v74[17] = v73;
        swift_retain();
        uint64_t v75 = v502;
        uint64_t v76 = v509;
        v509[18] = v594;
        v76[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v75;
        swift_retain();
        uint64_t v77 = v503;
        uint64_t v78 = v509;
        v509[20] = v595;
        v78[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v77;
        swift_retain();
        uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v504;
        uint64_t v80 = v509;
        v509[22] = v596;
        v80[23] = v79;
        swift_retain();
        uint64_t v81 = v505;
        uint64_t v82 = v509;
        v509[24] = v597;
        v82[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v81;
        swift_retain();
        uint64_t v83 = v506;
        uint64_t v84 = v509;
        v509[26] = v598;
        v84[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v83;
        swift_retain();
        uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v508;
        uint64_t v86 = v509;
        v509[28] = v599;
        v86[29] = v85;
        sub_1A809B5EC();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v511, (os_log_type_t)v512))
        {
          int v87 = v521;
          v460 = (uint8_t *)sub_1A8A77888();
          uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
          uint64_t v461 = sub_1A809E94C(0);
          uint64_t v462 = sub_1A809E94C(1);
          v463 = &v669;
          v669 = v460;
          v464 = &v668;
          uint64_t v668 = v461;
          v465 = &v667;
          uint64_t v667 = v462;
          sub_1A809E9A8(2, &v669);
          sub_1A809E9A8(5, v463);
          v665 = v585;
          uint64_t v666 = v493;
          sub_1A809E9BC(&v665, (uint64_t)v463, (uint64_t)v464, (uint64_t)v465);
          v466 = v87;
          if (v87)
          {
            __break(1u);
          }
          else
          {
            v665 = v586;
            uint64_t v666 = v494;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v457 = 0;
            v665 = v587;
            uint64_t v666 = v495;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v456 = 0;
            v665 = v588;
            uint64_t v666 = v496;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v455 = 0;
            v665 = v589;
            uint64_t v666 = v497;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v454 = 0;
            v665 = v590;
            uint64_t v666 = v498;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v453 = 0;
            v665 = v591;
            uint64_t v666 = v499;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v452 = 0;
            v665 = v592;
            uint64_t v666 = v500;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v451 = 0;
            v665 = v593;
            uint64_t v666 = v501;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v450 = 0;
            v665 = v594;
            uint64_t v666 = v502;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v449 = 0;
            v665 = v595;
            uint64_t v666 = v503;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v448 = 0;
            v665 = v596;
            uint64_t v666 = v504;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v447 = 0;
            v665 = v597;
            uint64_t v666 = v505;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v446 = 0;
            v665 = v598;
            uint64_t v666 = v506;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            uint64_t v445 = 0;
            v665 = v599;
            uint64_t v666 = v508;
            sub_1A809E9BC(&v665, (uint64_t)&v669, (uint64_t)&v668, (uint64_t)&v667);
            v444 = 0;
            _os_log_impl(&dword_1A7EFF000, v511, (os_log_type_t)v512, "[%.*hhx-%.*X] Finished EMActivity for '%s'", v460, v479);
            sub_1A809EA08(v461);
            sub_1A809EA08(v462);
            sub_1A8A77868();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v458 = v444;
          }
        }
        else
        {
          int v88 = v521;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v458 = v88;
        }
        v443 = v458;

        (*(void (**)(char *, uint64_t))(v620 + 8))(v627, v619);
        v513 = v443;
      }
      v442 = v513;
      id v441 = objc_msgSend(v515, sel_objectID);
      objc_msgSend(v653, sel_activityWithID_finishedWithError_);

      sub_1A80C4FE0(v638);
      v664 = v442;
    }
    else
    {
      sub_1A80C4FE0(v638);
      v664 = v521;
    }
  }
  uint64_t v89 = v521;
  sub_1A80AAC20();
  v433 = &v729;
  swift_beginAccess();
  uint64_t v434 = *(void *)(v523 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  uint64_t v435 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v728 = v435;
  sub_1A80AB1D8(v645, v618);
  v436 = &v214;
  MEMORY[0x1F4188790](&v214);
  v437 = &v214 - 4;
  *(&v214 - 2) = v90;
  uint64_t v438 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743C88);
  sub_1A80AB70C();
  uint64_t result = (id *)sub_1A8A76A48();
  v439 = v89;
  v440 = result;
  if (!v89)
  {
    v430 = v440;
    sub_1A80AB790((uint64_t)v618);
    v727 = v430;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v724 = v430;
    uint64_t v431 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9744378);
    sub_1A80ABA24();
    sub_1A8A772F8();
    for (uint64_t i = v439; ; uint64_t i = v427)
    {
      v427 = i;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9745540);
      sub_1A8A78038();
      uint64_t v428 = v721[5];
      int v429 = v722;
      if (v723) {
        break;
      }
      uint64_t v425 = v428;
      int v426 = v429;
      uint64_t v682 = v428;
      char v683 = v429 & 1;
      v423 = &v680;
      uint64_t v680 = v428;
      char v681 = v429 & 1;
      v424 = &v679;
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743DD0);
      sub_1A8A76028();
      swift_endAccess();
      sub_1A80C4970(v616);
    }
    sub_1A809F94C();
    Activity.accountStatus.getter((uint64_t)v603);
    v421 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v606 + 48);
    uint64_t v422 = v606 + 48;
    if (v421(v603, 1, v604) != 1)
    {
      uint64_t v92 = v625;
      sub_1A80C2E18(v603, v614);
      v378 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A809A0C4(v523 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v632);
      (*(void (**)(char *, uint64_t, uint64_t))(v620 + 16))(v92, v632, v619);
      sub_1A809A1D4(v632);
      swift_retain();
      swift_retain();
      sub_1A809A0C4(v523 + *v378, v634);
      unint64_t v93 = (unsigned __int8 *)(v634 + *(int *)(v628 + 20));
      int v380 = *v93;
      int v381 = *((_DWORD *)v93 + 1);
      sub_1A809A1D4(v634);
      swift_release();
      uint64_t v379 = 24;
      uint64_t v398 = 7;
      uint64_t v94 = swift_allocObject();
      int v95 = v381;
      uint64_t v389 = v94;
      *(unsigned char *)(v94 + 16) = v380;
      *(_DWORD *)(v94 + 20) = v95;
      sub_1A809EAE4();
      sub_1A809EAE4();
      sub_1A809EAE4();
      uint64_t v96 = swift_allocObject();
      int v97 = v381;
      uint64_t v382 = v96;
      *(unsigned char *)(v96 + 16) = v380;
      *(_DWORD *)(v96 + 20) = v97;
      swift_retain();
      uint64_t v397 = 32;
      uint64_t v98 = swift_allocObject();
      uint64_t v99 = v382;
      uint64_t v394 = v98;
      *(void *)(v98 + 16) = v551;
      *(void *)(v98 + 24) = v99;
      sub_1A809EAE4();
      sub_1A809EAE4();
      swift_release();
      swift_release();
      sub_1A80C343C(v614, v612);
      unint64_t v383 = (*(unsigned __int8 *)(v607 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v607 + 80);
      uint64_t v399 = swift_allocObject();
      sub_1A80C2E18(v612, (unsigned char *)(v399 + v383));
      v419 = sub_1A8A754B8();
      int v420 = sub_1A8A77468();
      v386 = &v691;
      uint64_t v691 = 33;
      unint64_t v384 = sub_1A809EBD0();
      unint64_t v385 = sub_1A809EC4C();
      sub_1A809ECC8();
      sub_1A8A76B48();
      uint32_t v387 = v692;
      uint64_t v396 = 17;
      uint64_t v401 = swift_allocObject();
      int v391 = 16;
      *(unsigned char *)(v401 + 16) = 16;
      uint64_t v402 = swift_allocObject();
      int v393 = 4;
      *(unsigned char *)(v402 + 16) = 4;
      uint64_t v100 = swift_allocObject();
      uint64_t v388 = v100;
      *(void *)(v100 + 16) = v526;
      *(void *)(v100 + 24) = 0;
      uint64_t v101 = swift_allocObject();
      uint64_t v102 = v388;
      uint64_t v403 = v101;
      *(void *)(v101 + 16) = v552;
      *(void *)(v101 + 24) = v102;
      uint64_t v404 = swift_allocObject();
      *(unsigned char *)(v404 + 16) = 0;
      uint64_t v405 = swift_allocObject();
      *(unsigned char *)(v405 + 16) = 1;
      uint64_t v103 = swift_allocObject();
      uint64_t v104 = v389;
      uint64_t v390 = v103;
      *(void *)(v103 + 16) = v553;
      *(void *)(v103 + 24) = v104;
      uint64_t v105 = swift_allocObject();
      uint64_t v106 = v390;
      uint64_t v406 = v105;
      *(void *)(v105 + 16) = v554;
      *(void *)(v105 + 24) = v106;
      uint64_t v407 = swift_allocObject();
      *(unsigned char *)(v407 + 16) = v391;
      uint64_t v408 = swift_allocObject();
      *(unsigned char *)(v408 + 16) = v393;
      uint64_t v107 = swift_allocObject();
      uint64_t v392 = v107;
      *(void *)(v107 + 16) = v530;
      *(void *)(v107 + 24) = 0;
      uint64_t v108 = swift_allocObject();
      uint64_t v109 = v392;
      uint64_t v409 = v108;
      *(void *)(v108 + 16) = v555;
      *(void *)(v108 + 24) = v109;
      uint64_t v410 = swift_allocObject();
      *(unsigned char *)(v410 + 16) = 0;
      uint64_t v411 = swift_allocObject();
      *(unsigned char *)(v411 + 16) = v393;
      uint64_t v110 = swift_allocObject();
      uint64_t v111 = v394;
      uint64_t v395 = v110;
      *(void *)(v110 + 16) = v556;
      *(void *)(v110 + 24) = v111;
      uint64_t v112 = swift_allocObject();
      uint64_t v113 = v395;
      uint64_t v412 = v112;
      *(void *)(v112 + 16) = v557;
      *(void *)(v112 + 24) = v113;
      uint64_t v413 = swift_allocObject();
      *(unsigned char *)(v413 + 16) = 34;
      uint64_t v414 = swift_allocObject();
      *(unsigned char *)(v414 + 16) = 8;
      uint64_t v114 = swift_allocObject();
      uint64_t v115 = v399;
      uint64_t v400 = v114;
      *(void *)(v114 + 16) = v558;
      *(void *)(v114 + 24) = v115;
      uint64_t v116 = swift_allocObject();
      uint64_t v117 = v400;
      uint64_t v416 = v116;
      *(void *)(v116 + 16) = v559;
      *(void *)(v116 + 24) = v117;
      uint64_t v418 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
      uint64_t v415 = sub_1A8A78558();
      v417 = v118;
      swift_retain();
      uint64_t v119 = v401;
      uint64_t v120 = v417;
      *v417 = v560;
      v120[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v119;
      swift_retain();
      uint64_t v121 = v402;
      uint64_t v122 = v417;
      v417[2] = v561;
      v122[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v121;
      swift_retain();
      unint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v403;
      uint64_t v124 = v417;
      v417[4] = v562;
      v124[5] = v123;
      swift_retain();
      uint64_t v125 = v404;
      v126 = v417;
      v417[6] = v563;
      v126[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v125;
      swift_retain();
      uint64_t v127 = v405;
      uint64_t v128 = v417;
      v417[8] = v564;
      v128[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v127;
      swift_retain();
      uint64_t v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v406;
      int v130 = v417;
      v417[10] = v565;
      v130[11] = v129;
      swift_retain();
      uint64_t v131 = v407;
      uint64_t v132 = v417;
      v417[12] = v566;
      v132[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v131;
      swift_retain();
      uint64_t v133 = v408;
      uint64_t v134 = v417;
      v417[14] = v567;
      v134[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v133;
      swift_retain();
      v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v409;
      uint64_t v136 = v417;
      v417[16] = v568;
      v136[17] = v135;
      swift_retain();
      uint64_t v137 = v410;
      uint64_t v138 = v417;
      v417[18] = v569;
      v138[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v137;
      swift_retain();
      uint64_t v139 = v411;
      uint64_t v140 = v417;
      v417[20] = v570;
      v140[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v139;
      swift_retain();
      v141 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v412;
      uint64_t v142 = v417;
      v417[22] = v571;
      v142[23] = v141;
      swift_retain();
      uint64_t v143 = v413;
      uint64_t v144 = v417;
      v417[24] = v572;
      v144[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v143;
      swift_retain();
      uint64_t v145 = v414;
      uint64_t v146 = v417;
      v417[26] = v573;
      v146[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v145;
      swift_retain();
      v147 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v416;
      uint64_t v148 = v417;
      v417[28] = v574;
      v148[29] = v147;
      sub_1A809B5EC();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v419, (os_log_type_t)v420))
      {
        uint64_t v149 = v427;
        v371 = (uint8_t *)sub_1A8A77888();
        uint64_t v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
        uint64_t v372 = sub_1A809E94C(0);
        uint64_t v373 = sub_1A809E94C(1);
        v374 = &v688;
        v688 = v371;
        v375 = &v687;
        uint64_t v687 = v372;
        v376 = &v686;
        uint64_t v686 = v373;
        sub_1A809E9A8(2, &v688);
        sub_1A809E9A8(5, v374);
        v684 = v560;
        uint64_t v685 = v401;
        sub_1A809E9BC(&v684, (uint64_t)v374, (uint64_t)v375, (uint64_t)v376);
        v377 = v149;
        if (v149)
        {
          __break(1u);
        }
        else
        {
          v684 = v561;
          uint64_t v685 = v402;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v369 = 0;
          v684 = v562;
          uint64_t v685 = v403;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v368 = 0;
          v684 = v563;
          uint64_t v685 = v404;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v367 = 0;
          v684 = v564;
          uint64_t v685 = v405;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v366 = 0;
          v684 = v565;
          uint64_t v685 = v406;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v365 = 0;
          v684 = v566;
          uint64_t v685 = v407;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v364 = 0;
          v684 = v567;
          uint64_t v685 = v408;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v363 = 0;
          v684 = v568;
          uint64_t v685 = v409;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v362 = 0;
          v684 = v569;
          uint64_t v685 = v410;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v361 = 0;
          v684 = v570;
          uint64_t v685 = v411;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v360 = 0;
          v684 = v571;
          uint64_t v685 = v412;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v359 = 0;
          v684 = v572;
          uint64_t v685 = v413;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v358 = 0;
          v684 = v573;
          uint64_t v685 = v414;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          uint64_t v357 = 0;
          v684 = v574;
          uint64_t v685 = v416;
          sub_1A809E9BC(&v684, (uint64_t)&v688, (uint64_t)&v687, (uint64_t)&v686);
          _os_log_impl(&dword_1A7EFF000, v419, (os_log_type_t)v420, "[%.*hhx-%.*X] Account activity: %{public}s.", v371, v387);
          sub_1A809EA08(v372);
          sub_1A809EA08(v373);
          sub_1A8A77868();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v620 + 8))(v625, v619);
      uint64_t v689 = 0;
      char v690 = 1;
      sub_1A80ABDB8((uint64_t)&v689, v614);
      sub_1A80C3170((uint64_t)v614);
LABEL_97:
      swift_bridgeObjectRelease();

      sub_1A80AACA4((uint64_t)v649);
      return sub_1A80C2D1C(v649);
    }
    sub_1A80ABAA8((uint64_t)v603);
    Activity.allMailboxIDs.getter(&v720);
    uint64_t v352 = v720;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v353 = v352 + 56;
    uint64_t v355 = (1 << (*(unsigned char *)(v352 + 32) & 0x3F)) - 1;
    uint64_t v354 = *(void *)(v352 + 56);
    swift_release();
    uint64_t v356 = v355 + 1;
    if (v355 + 1 >= 64) {
      uint64_t v351 = v354;
    }
    else {
      uint64_t v351 = v354 & ((1 << (v356 & 0x3F)) - 1);
    }
    v348 = v742;
    v742[0] = v352;
    v742[1] = v353;
    v742[2] = v355;
    v742[3] = 0;
    v742[4] = v351;
    sub_1A80C2C14();
    v349 = &v741;
    sub_1A8A77058();
    memcpy(v721, v349, 0x28uLL);
    v350 = v427;
    while (1)
    {
      uint64_t result = v350;
      v347 = v350;
      if ((v721[0] & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        uint64_t v346 = v721[0];
        uint64_t v342 = v721[1];
        uint64_t v343 = v721[2];
        uint64_t v344 = v721[3];
        unint64_t v345 = v721[4];
        uint64_t result = (id *)sub_1A80C2C90();
        if (v346 < 0)
        {
          uint64_t v336 = v346 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t result = (id *)swift_release();
          __break(1u);
          goto LABEL_41;
        }
        uint64_t v337 = v346;
        uint64_t v338 = v342;
        uint64_t v339 = v343;
        uint64_t v340 = v344;
        unint64_t v341 = v345;
      }
      unint64_t v331 = v341;
      int64_t v332 = v340;
      uint64_t v333 = v339;
      uint64_t v334 = v338;
      uint64_t v335 = v337;
      if (v341)
      {
        unint64_t v324 = (v332 << 6) + __clz(__rbit64(v331));
        int64_t v325 = v332;
        unint64_t v326 = v331 & (v331 - 1);
        v327 = v347;
        goto LABEL_71;
      }
LABEL_41:
      int64_t v328 = (v333 + 64) / 0x40uLL;
      int64_t v329 = v332 + 1;
      BOOL v150 = __OFADD__(v332, 1);
      BOOL v330 = v150;
      if (v150) {
        goto LABEL_99;
      }
      if (v329 >= v328)
      {
        int64_t v320 = v332;
        unint64_t v321 = v331;
        v322 = v347;
LABEL_74:
        uint64_t v718 = 0;
        uint64_t v719 = 0;
        int64_t v302 = v320;
        unint64_t v303 = v321;
        v304 = v322;
        goto LABEL_72;
      }
      if (v330) {
        goto LABEL_100;
      }
      unint64_t v323 = *(void *)(v334 + 8 * v329);
      if (v323)
      {
        int64_t v315 = v329;
        unint64_t v316 = v323;
        v317 = v347;
      }
      else
      {
        int64_t v318 = v329 + 1;
        BOOL v151 = __OFADD__(v329, 1);
        BOOL v319 = v151;
        if (v151) {
          goto LABEL_101;
        }
        if (v318 >= v328)
        {
          int64_t v320 = v329;
          unint64_t v321 = v323;
          v322 = v347;
          goto LABEL_74;
        }
        if (v319) {
          goto LABEL_102;
        }
        unint64_t v314 = *(void *)(v334 + 8 * v318);
        if (!v314)
        {
          int64_t v311 = v318;
          unint64_t v312 = 0;
          for (uint64_t j = v347; ; uint64_t j = v306)
          {
            uint64_t result = j;
            v306 = j;
            unint64_t v307 = v312;
            int64_t v308 = v311;
            int64_t v309 = v311 + 1;
            BOOL v152 = __OFADD__(v311, 1);
            BOOL v310 = v152;
            if (v152) {
              break;
            }
            if (v309 >= v328)
            {
              int64_t v320 = v308;
              unint64_t v321 = v307;
              v322 = v306;
              goto LABEL_74;
            }
            if (v310) {
              goto LABEL_104;
            }
            unint64_t v305 = *(void *)(v334 + 8 * v309);
            if (v305)
            {
              int64_t v315 = v309;
              unint64_t v316 = v305;
              v317 = v306;
              goto LABEL_70;
            }
            int64_t v311 = v309;
            unint64_t v312 = 0;
          }
          goto LABEL_103;
        }
        int64_t v315 = v318;
        unint64_t v316 = v314;
        v317 = v347;
      }
LABEL_70:
      unint64_t v324 = (v315 << 6) + __clz(__rbit64(v316));
      int64_t v325 = v315;
      unint64_t v326 = v316 & (v316 - 1);
      v327 = v317;
LABEL_71:
      v301 = v327;
      unint64_t v300 = v326;
      uint64_t v299 = v325;
      sub_1A80C2CD4((uint64_t *)(*(void *)(v335 + 48) + 16 * v324), &v718);
      uint64_t v717 = v335;
      int64_t v302 = v299;
      unint64_t v303 = v300;
      v304 = v301;
LABEL_72:
      v296 = v304;
      v721[0] = v335;
      v721[1] = v334;
      v721[2] = v333;
      v721[3] = v302;
      v721[4] = v303;
      sub_1A80AAC60();
      uint64_t v297 = v718;
      uint64_t v298 = v719;
      if (!v718)
      {
        sub_1A80AAC20();
        sub_1A80AC7D4();
        sub_1A80ADBE0();
        goto LABEL_97;
      }
      uint64_t v294 = v297;
      uint64_t v295 = v298;
      uint64_t v290 = v298;
      uint64_t v291 = v297;
      uint64_t v715 = v297;
      uint64_t v716 = v298;
      id v292 = *(id *)(v523 + 128);
      id v153 = v292;
      id v293 = objc_msgSend(v292, sel_primaryMailboxUid);

      if (v293)
      {
        id v289 = v293;
        id v287 = v293;
        id v714 = v293;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A84A3060(v291, v290, (uint64_t)&v712);
        uint64_t v288 = v712;
        if (v713)
        {

          goto LABEL_95;
        }
        uint64_t v286 = v288;
        uint64_t v285 = v288;
        uint64_t v711 = v288;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        Activity.subscript.getter(v291, v290, (uint64_t)v601);
        if (v421(v601, 1, v604) == 1)
        {
          sub_1A80ABAA8((uint64_t)v601);
          swift_bridgeObjectRelease();

          goto LABEL_95;
        }
        sub_1A80C2E18(v601, v610);
        swift_bridgeObjectRelease();
        sub_1A84A3148((uint64_t)objc_msgSend(v287, sel_mailboxRowID), (uint64_t)&v709);
        uint64_t v705 = v285;
        char v706 = 0;
        uint64_t v707 = v709;
        char v708 = v710 & 1;
        sub_1A80C41C8((uint64_t)&v705, (uint64_t)&v695);
        if (v708)
        {
          BOOL v284 = 0;
        }
        else
        {
          uint64_t v694 = v695;
          uint64_t v693 = v707;
          BOOL v284 = static MailboxRowID.== infix(_:_:)(&v694, &v693);
        }
        if (v284)
        {
          unint64_t v155 = v623;
          v241 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
          sub_1A809A0C4(v523 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v630);
          (*(void (**)(char *, uint64_t, uint64_t))(v620 + 16))(v155, v630, v619);
          sub_1A809A1D4(v630);
          swift_retain();
          swift_retain();
          sub_1A809A0C4(v523 + *v241, v634);
          uint64_t v156 = (unsigned __int8 *)(v634 + *(int *)(v628 + 20));
          int v243 = *v156;
          int v244 = *((_DWORD *)v156 + 1);
          sub_1A809A1D4(v634);
          swift_release();
          uint64_t v242 = 24;
          uint64_t v261 = 7;
          uint64_t v157 = swift_allocObject();
          int v158 = v244;
          uint64_t v252 = v157;
          *(unsigned char *)(v157 + 16) = v243;
          *(_DWORD *)(v157 + 20) = v158;
          sub_1A809EAE4();
          sub_1A809EAE4();
          sub_1A809EAE4();
          uint64_t v159 = swift_allocObject();
          int v160 = v244;
          uint64_t v245 = v159;
          *(unsigned char *)(v159 + 16) = v243;
          *(_DWORD *)(v159 + 20) = v160;
          swift_retain();
          uint64_t v260 = 32;
          uint64_t v161 = swift_allocObject();
          uint64_t v162 = v245;
          uint64_t v257 = v161;
          *(void *)(v161 + 16) = v525;
          *(void *)(v161 + 24) = v162;
          sub_1A809EAE4();
          sub_1A809EAE4();
          swift_release();
          swift_release();
          sub_1A80C343C(v610, v612);
          unint64_t v246 = (*(unsigned __int8 *)(v607 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v607 + 80);
          uint64_t v262 = swift_allocObject();
          sub_1A80C2E18(v612, (unsigned char *)(v262 + v246));
          v282 = sub_1A8A754B8();
          int v283 = sub_1A8A77468();
          v249 = &v701;
          uint64_t v701 = 33;
          unint64_t v247 = sub_1A809EBD0();
          unint64_t v248 = sub_1A809EC4C();
          sub_1A809ECC8();
          sub_1A8A76B48();
          uint32_t v250 = v702;
          uint64_t v259 = 17;
          uint64_t v264 = swift_allocObject();
          int v254 = 16;
          *(unsigned char *)(v264 + 16) = 16;
          uint64_t v265 = swift_allocObject();
          int v256 = 4;
          *(unsigned char *)(v265 + 16) = 4;
          uint64_t v163 = swift_allocObject();
          uint64_t v251 = v163;
          *(void *)(v163 + 16) = v526;
          *(void *)(v163 + 24) = 0;
          uint64_t v164 = swift_allocObject();
          uint64_t v165 = v251;
          uint64_t v266 = v164;
          *(void *)(v164 + 16) = v527;
          *(void *)(v164 + 24) = v165;
          uint64_t v267 = swift_allocObject();
          *(unsigned char *)(v267 + 16) = 0;
          uint64_t v268 = swift_allocObject();
          *(unsigned char *)(v268 + 16) = 1;
          uint64_t v166 = swift_allocObject();
          uint64_t v167 = v252;
          uint64_t v253 = v166;
          *(void *)(v166 + 16) = v528;
          *(void *)(v166 + 24) = v167;
          uint64_t v168 = swift_allocObject();
          uint64_t v169 = v253;
          uint64_t v269 = v168;
          *(void *)(v168 + 16) = v529;
          *(void *)(v168 + 24) = v169;
          uint64_t v270 = swift_allocObject();
          *(unsigned char *)(v270 + 16) = v254;
          uint64_t v271 = swift_allocObject();
          *(unsigned char *)(v271 + 16) = v256;
          uint64_t v170 = swift_allocObject();
          uint64_t v255 = v170;
          *(void *)(v170 + 16) = v530;
          *(void *)(v170 + 24) = 0;
          uint64_t v171 = swift_allocObject();
          uint64_t v172 = v255;
          uint64_t v272 = v171;
          *(void *)(v171 + 16) = v531;
          *(void *)(v171 + 24) = v172;
          uint64_t v273 = swift_allocObject();
          *(unsigned char *)(v273 + 16) = 0;
          uint64_t v274 = swift_allocObject();
          *(unsigned char *)(v274 + 16) = v256;
          uint64_t v173 = swift_allocObject();
          uint64_t v174 = v257;
          uint64_t v258 = v173;
          *(void *)(v173 + 16) = v532;
          *(void *)(v173 + 24) = v174;
          uint64_t v175 = swift_allocObject();
          uint64_t v176 = v258;
          uint64_t v275 = v175;
          *(void *)(v175 + 16) = v533;
          *(void *)(v175 + 24) = v176;
          uint64_t v276 = swift_allocObject();
          *(unsigned char *)(v276 + 16) = 34;
          uint64_t v277 = swift_allocObject();
          *(unsigned char *)(v277 + 16) = 8;
          uint64_t v177 = swift_allocObject();
          uint64_t v178 = v262;
          uint64_t v263 = v177;
          *(void *)(v177 + 16) = v534;
          *(void *)(v177 + 24) = v178;
          uint64_t v179 = swift_allocObject();
          uint64_t v180 = v263;
          uint64_t v279 = v179;
          *(void *)(v179 + 16) = v535;
          *(void *)(v179 + 24) = v180;
          uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
          uint64_t v278 = sub_1A8A78558();
          v280 = v181;
          swift_retain();
          uint64_t v182 = v264;
          uint64_t v183 = v280;
          *v280 = v536;
          v183[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v182;
          swift_retain();
          uint64_t v184 = v265;
          uint64_t v185 = v280;
          v280[2] = v537;
          v185[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v184;
          swift_retain();
          unint64_t v186 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v266;
          uint64_t v187 = v280;
          v280[4] = v538;
          v187[5] = v186;
          swift_retain();
          uint64_t v188 = v267;
          uint64_t v189 = v280;
          v280[6] = v539;
          v189[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v188;
          swift_retain();
          uint64_t v190 = v268;
          uint64_t v191 = v280;
          v280[8] = v540;
          v191[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v190;
          swift_retain();
          uint64_t v192 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v269;
          v193 = v280;
          v280[10] = v541;
          v193[11] = v192;
          swift_retain();
          uint64_t v194 = v270;
          v195 = v280;
          v280[12] = v542;
          v195[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v194;
          swift_retain();
          uint64_t v196 = v271;
          v197 = v280;
          v280[14] = v543;
          v197[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v196;
          swift_retain();
          v198 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v272;
          v199 = v280;
          v280[16] = v544;
          v199[17] = v198;
          swift_retain();
          uint64_t v200 = v273;
          v201 = v280;
          v280[18] = v545;
          v201[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v200;
          swift_retain();
          uint64_t v202 = v274;
          v203 = v280;
          v280[20] = v546;
          v203[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v202;
          swift_retain();
          v204 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v275;
          v205 = v280;
          v280[22] = v547;
          v205[23] = v204;
          swift_retain();
          uint64_t v206 = v276;
          v207 = v280;
          v280[24] = v548;
          v207[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v206;
          swift_retain();
          uint64_t v208 = v277;
          v209 = v280;
          v280[26] = v549;
          v209[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v208;
          swift_retain();
          v210 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v279;
          v211 = v280;
          v280[28] = v550;
          v211[29] = v210;
          sub_1A809B5EC();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v282, (os_log_type_t)v283))
          {
            v212 = v296;
            v234 = (uint8_t *)sub_1A8A77888();
            uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
            uint64_t v235 = sub_1A809E94C(0);
            uint64_t v236 = sub_1A809E94C(1);
            v237 = &v700;
            v700 = v234;
            v238 = &v699;
            uint64_t v699 = v235;
            v239 = &v698;
            uint64_t v698 = v236;
            sub_1A809E9A8(2, &v700);
            sub_1A809E9A8(5, v237);
            v696 = v536;
            uint64_t v697 = v264;
            sub_1A809E9BC(&v696, (uint64_t)v237, (uint64_t)v238, (uint64_t)v239);
            v240 = v212;
            if (v212)
            {
              __break(1u);
            }
            else
            {
              v696 = v537;
              uint64_t v697 = v265;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v231 = 0;
              v696 = v538;
              uint64_t v697 = v266;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v230 = 0;
              v696 = v539;
              uint64_t v697 = v267;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v229 = 0;
              v696 = v540;
              uint64_t v697 = v268;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v228 = 0;
              v696 = v541;
              uint64_t v697 = v269;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v227 = 0;
              v696 = v542;
              uint64_t v697 = v270;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v226 = 0;
              v696 = v543;
              uint64_t v697 = v271;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v225 = 0;
              v696 = v544;
              uint64_t v697 = v272;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v224 = 0;
              v696 = v545;
              uint64_t v697 = v273;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v223 = 0;
              v696 = v546;
              uint64_t v697 = v274;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v222 = 0;
              v696 = v547;
              uint64_t v697 = v275;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v221 = 0;
              v696 = v548;
              uint64_t v697 = v276;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v220 = 0;
              v696 = v549;
              uint64_t v697 = v277;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              uint64_t v219 = 0;
              v696 = v550;
              uint64_t v697 = v279;
              sub_1A809E9BC(&v696, (uint64_t)&v700, (uint64_t)&v699, (uint64_t)&v698);
              v218 = 0;
              _os_log_impl(&dword_1A7EFF000, v282, (os_log_type_t)v283, "[%.*hhx-%.*X] INBOX Activity: %{public}s.", v234, v250);
              sub_1A809EA08(v235);
              sub_1A809EA08(v236);
              sub_1A8A77868();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v232 = v218;
            }
          }
          else
          {
            v213 = v296;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v232 = v213;
          }
          v216 = v232;

          (*(void (**)(char *, uint64_t))(v620 + 8))(v623, v619);
          v217 = v216;
        }
        else
        {
          v217 = v296;
        }
        v215 = v217;
        uint64_t v703 = v285;
        char v704 = 0;
        sub_1A80ABDB8((uint64_t)&v703, v610);
        sub_1A80C3170((uint64_t)v610);

        swift_bridgeObjectRelease();
        v350 = v215;
      }
      else
      {
LABEL_95:
        swift_bridgeObjectRelease();
        v350 = v296;
      }
    }
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t _s15MailboxActivityVMa()
{
  uint64_t v1 = qword_1E97436E0;
  if (!qword_1E97436E0) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t _s18LastSyncDateHelperVMa()
{
  uint64_t v1 = qword_1E9746110;
  if (!qword_1E9746110) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t sub_1A80AA700()
{
  return sub_1A8A78558();
}

uint64_t sub_1A80AA728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t SyncDateHelperVMa = _s18LastSyncDateHelperVMa();
  sub_1A80D3F24(a2, (uint64_t)a4 + *(int *)(SyncDateHelperVMa + 20));
  uint64_t result = SyncDateHelperVMa;
  *(void *)((char *)a4 + *(int *)(SyncDateHelperVMa + 24)) = a3;
  return result;
}

unsigned char *sub_1A80AA78C(unsigned char *a1, unsigned char *a2)
{
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743690);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 48))(a1, 1))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9740D10);
    memcpy(a2, a1, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *(void *)a2 = *(void *)a1;
    a2[8] = a1[8];
    uint64_t v17 = &a2[*(int *)(v24 + 48)];
    uint64_t v18 = &a1[*(int *)(v24 + 48)];
    *uint64_t v17 = *v18;
    uint64_t v2 = _s15MailboxActivityVMa();
    uint64_t v19 = (char *)v17 + *(int *)(v2 + 20);
    uint64_t v20 = (char *)v18 + *(int *)(v2 + 20);
    uint64_t v21 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v19 = *v20;
      uint64_t v12 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = &v19[*(int *)(v12 + 20)];
      __srCC_MD5_CTX c = &v20[*(int *)(v12 + 20)];
      uint64_t v15 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v16 + 48))(__src, 1))
      {
        uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
        memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, __src, *(void *)(v16 + 64));
        }
        else
        {
          uint64_t v3 = sub_1A8A75C38();
          (*(void (**)(unsigned char *, unsigned char *))(*(void *)(v3 - 8) + 32))(__dst, __src);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v8 = &v19[*(int *)(v12 + 24)];
      uint64_t v9 = &v20[*(int *)(v12 + 24)];
      uint64_t v10 = sub_1A8A74C38();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v11 + 48))(v9, 1))
      {
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
        memcpy(v8, v9, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(a2, 0, 1, v24);
  }
  return a2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A80AAC20()
{
}

uint64_t sub_1A80AAC60()
{
  return swift_release();
}

id *sub_1A80AACA4(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t v12 = 0;
  uint64_t v3 = 0;
  uint64_t v10 = sub_1A8A74C38();
  uint64_t v7 = *(void *)(v10 - 8);
  uint64_t v8 = v10 - 8;
  unint64_t v4 = (*(void *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v9 = (uint64_t)&v3 - v4;
  unint64_t v6 = (*(void *)(*(void *)(_s18LastSyncDateHelperVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v5);
  uint64_t v11 = (id *)((char *)&v3 - v6);
  uint64_t v12 = v1;
  sub_1A80D305C(v1, (uint64_t *)((char *)&v3 - v6));
  sub_1A80BCDB0();
  sub_1A80BCDC8(v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v10);
  return sub_1A80C2D1C(v11);
}

uint64_t sub_1A80AADEC(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v38 = 0;
  uint64_t v36 = 0;
  char v37 = 0;
  uint64_t v35 = 0;
  uint64_t v34 = 0;
  uint64_t v22 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = v22 - 8;
  unint64_t v25 = (*(void *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = &v15[-v25];
  uint64_t v38 = &v15[-v25];
  unint64_t v28 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9743200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = &v15[-v28];
  unint64_t v30 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v3);
  int v31 = &v15[-v30];
  uint64_t v32 = *(void *)v10;
  char v11 = *(unsigned char *)(v10 + 8);
  uint64_t v36 = v32;
  char v37 = v11 & 1;
  uint64_t v35 = v1;
  if (v11)
  {
    Activity.accountStatus.getter((uint64_t)v31);
    BOOL v20 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v31, 1, v22) == 1;
    BOOL v18 = v20;
    sub_1A80ABAA8((uint64_t)v31);
    int v19 = v18;
  }
  else
  {
    uint64_t v21 = v32;
    uint64_t v34 = v32;
    uint64_t v33 = v32;
    uint64_t v17 = sub_1A84A31D0(&v33, (uint64_t)&v15[-v30], v4, v5, v6, v7, v8, v9);
    Activity.subscript.getter((uint64_t)v17, v12, (uint64_t)v29);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v29, 1, v22) == 1)
    {
      sub_1A80ABAA8((uint64_t)v29);
      swift_bridgeObjectRelease();
      int v19 = 1;
    }
    else
    {
      sub_1A80C2E18(v29, v26);
      swift_bridgeObjectRelease();
      int v16 = Activity.MailboxStatus.isSelectedAndInSync.getter();
      sub_1A80C3170((uint64_t)v26);
      int v19 = v16;
    }
  }
  return v19 & 1;
}

uint64_t sub_1A80AB0A0(uint64_t *a1, id a2)
{
  uint64_t v8 = 0;
  id v7 = 0;
  void v6[2] = 0;
  uint64_t v8 = *a1;
  id v7 = a2;
  uint64_t v5 = v8;
  id v2 = a2;
  sub_1A80BCDA0(&v5, (uint64_t)a2, v6);
  _s18LastSyncDateHelperVMa();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746EE8);
  return sub_1A8A76DD8();
}

uint64_t sub_1A80AB154@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A80AB15C(uint64_t *a1, uint64_t a2)
{
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v6 = 0;
  char v2 = *((unsigned char *)a1 + 8);
  uint64_t v7 = *a1;
  char v8 = v2 & 1;
  uint64_t v6 = a2;
  uint64_t v4 = v7;
  char v5 = v2 & 1;
  return sub_1A80AADEC((uint64_t)&v4) & 1;
}

void *sub_1A80AB1D8(void *a1, void *a2)
{
  uint64_t v19 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *a2 = v19;
  uint64_t v21 = a1[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a2[1] = v21;
  uint64_t v22 = *(int *)(type metadata accessor for Activity(0) + 24);
  uint64_t v24 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v25 + 48))((char *)a1 + v22, 1))
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743140);
    memcpy((char *)a2 + v22, (char *)a1 + v22, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    *((unsigned char *)a2 + v22) = *((unsigned char *)a1 + v22);
    __dst = (void *)((char *)a2 + v22 + *(int *)(v24 + 20));
    __srCC_MD5_CTX c = (void *)((char *)a1 + v22 + *(int *)(v24 + 20));
    uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t))(v18 + 48))(__src, 1))
    {
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          void *__dst = *__src;
          uint64_t v13 = __src[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[1] = v13;
          __dst[2] = __src[2];
          uint64_t v14 = __src[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[3] = v14;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          void *__dst = *__src;
          uint64_t v12 = __src[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[1] = v12;
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          void *__dst = *__src;
          uint64_t v11 = __src[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[1] = v11;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          uint64_t v2 = sub_1A8A75C38();
          (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(__dst, __src);
          swift_storeEnumTagMultiPayload();
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v7 = (char *)a2 + v22 + *(int *)(v24 + 24);
    char v8 = (char *)a1 + v22 + *(int *)(v24 + 24);
    uint64_t v9 = sub_1A8A74C38();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(v8, 1))
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(v7, v8, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))((char *)a2 + v22, 0, 1, v24);
  }
  return a2;
}

uint64_t sub_1A80AB6E0(uint64_t *a1)
{
  return sub_1A80AB15C(a1, *(void *)(v1 + 16)) & 1;
}

unint64_t sub_1A80AB70C()
{
  uint64_t v2 = qword_1E9743C80;
  if (!qword_1E9743C80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9743C88);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743C80);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80AB790(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(type metadata accessor for Activity(0) + 24);
  uint64_t v13 = type metadata accessor for ConnectionStatus.Error(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(a1 + v11, 1))
  {
    uint64_t v9 = a1 + v11 + *(int *)(v13 + 20);
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1))
    {
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v3 = EnumCaseMultiPayload;
        char v2 = 1;
      }
      else
      {
        uint64_t v3 = 0;
        char v2 = 0;
      }
      if ((v2 & 1) == 0)
      {
        switch(v3)
        {
          case 0:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v9);
            break;
          case 1:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2:
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    uint64_t v6 = a1 + v11 + *(int *)(v13 + 24);
    uint64_t v7 = sub_1A8A74C38();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return a1;
}

unint64_t sub_1A80ABA24()
{
  uint64_t v2 = qword_1E9744380;
  if (!qword_1E9744380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9744378);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744380);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80ABAA8(uint64_t a1)
{
  uint64_t v13 = type metadata accessor for Activity.MailboxStatus(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(a1, 1)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v10 = a1 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1))
    {
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v3 = EnumCaseMultiPayload;
        char v2 = 1;
      }
      else
      {
        uint64_t v3 = 0;
        char v2 = 0;
      }
      if ((v2 & 1) == 0)
      {
        switch(v3)
        {
          case 0:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v10);
            break;
          case 1:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2:
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    uint64_t v6 = a1 + *(int *)(v9 + 24);
    uint64_t v7 = sub_1A8A74C38();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return a1;
}

uint64_t sub_1A80ABD28(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v5 = type metadata accessor for Activity.MailboxStatus(0);
  unint64_t v4 = (*(void *)(*(void *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v3 - v4;
  sub_1A80C343C(v1, (unsigned char *)&v3 - v4);
  return sub_1A8A76628();
}

id *sub_1A80ABDB8(uint64_t a1, unsigned char *a2)
{
  uint64_t v51 = a1;
  uint64_t v50 = a2;
  uint64_t v48 = 0;
  uint64_t v38 = sub_1A80C5860;
  int v87 = 0;
  uint64_t v86 = 0;
  uint64_t v84 = 0;
  char v85 = 0;
  uint64_t v83 = 0;
  uint64_t v82 = 0;
  unint64_t v39 = (*(void *)(*(void *)(_s6LoggerVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v40 = (uint64_t)&v19 - v39;
  uint64_t v4 = type metadata accessor for Activity.MailboxStatus(v3);
  unint64_t v41 = (*(void *)(*(void *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v4);
  uint64_t v42 = (char *)&v19 - v41;
  unint64_t v43 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97436F0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v48);
  uint64_t v44 = (uint64_t *)((char *)&v19 - v43);
  unint64_t v45 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v6);
  char v66 = (id *)((char *)&v19 - v45);
  uint64_t v68 = _s15MailboxActivityVMa();
  uint64_t v64 = *(void *)(v68 - 8);
  uint64_t v65 = v68 - 8;
  unint64_t v46 = (*(void *)(v64 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (uint64_t *)((char *)&v19 - v46);
  int v87 = (char *)&v19 - v46;
  unint64_t v49 = (*(void *)(*(void *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v48);
  uint64_t v56 = (uint64_t)&v19 - v49;
  unint64_t v52 = (*(void *)(*(void *)(_s18LastSyncDateHelperVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v51);
  uint64_t v55 = (id *)((char *)&v19 - v52);
  uint64_t v86 = (char *)&v19 - v52;
  uint64_t v60 = *v7;
  int v61 = *((unsigned __int8 *)v7 + 8);
  uint64_t v84 = v60;
  unsigned int v67 = 1;
  char v85 = v61 & 1;
  uint64_t v83 = v8;
  uint64_t v82 = v2;
  id v57 = *(id *)(v2 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
  id v9 = v57;
  uint64_t v53 = v2 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  uint64_t v54 = &v81;
  uint64_t v58 = 32;
  uint64_t v59 = 0;
  swift_beginAccess();
  sub_1A80A5D48(v53, v56);
  swift_endAccess();
  uint64_t v10 = sub_1A80AA700();
  sub_1A80AA728((uint64_t)v57, v56, v10, v55);
  swift_beginAccess();
  uint64_t v62 = *(void *)(v2 + 88);
  uint64_t v63 = &v79;
  uint64_t v79 = v60;
  char v80 = v61 & 1 & v67;
  unint64_t v11 = sub_1A80A57FC();
  MEMORY[0x1AD0DF2C0](v63, v62, &unk_1EFE8B440, v68, v11);
  if ((*(unsigned int (**)(id *, void, uint64_t))(v64 + 48))(v66, v67, v68) == 1)
  {
    sub_1A80C4970(v66);
    swift_endAccess();
    uint64_t v22 = &v77;
    uint64_t v77 = v60;
    unsigned int v24 = 1;
    char v78 = v61 & 1;
    sub_1A80C343C(v50, v42);
    BOOL v20 = sub_1A80AF36C();
    uint64_t v23 = v17;
    swift_retain();
    uint64_t v21 = *(void **)(v37 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
    id v18 = v21;
    sub_1A809A0C4(v37 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v40);
    sub_1A80B8790((uint64_t)v22, v42, (uint64_t)v20, v23, v21, v40, v44);
    swift_release();
    swift_release();
    (*(void (**)(void *, void, void, uint64_t))(v64 + 56))(v44, 0, v24, v68);
    uint64_t v25 = &v75;
    uint64_t v75 = v60;
    char v76 = v61 & 1 & v24;
    uint64_t v26 = &v74;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743DD0);
    sub_1A8A761E8();
    swift_endAccess();
  }
  else
  {
    sub_1A80C4C18(v66, v47);
    swift_endAccess();
    sub_1A80C343C((unsigned char *)v47 + *(int *)(v68 + 20), v42);
    int v36 = static Activity.MailboxStatus.__derived_enum_equals(_:_:)(v42, v50);
    sub_1A80C3170((uint64_t)v42);
    if (v36)
    {
      sub_1A80C4FE0((id *)v47);
      sub_1A80AACA4((uint64_t)v55);
      return sub_1A80C2D1C(v55);
    }
    uint64_t v29 = &v72;
    uint64_t v72 = v60;
    unsigned int v33 = 1;
    char v73 = v61 & 1;
    id v32 = *(id *)(v37 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
    id v12 = v32;
    uint64_t v27 = sub_1A80AF36C();
    uint64_t v31 = v13;
    swift_retain();
    unint64_t v30 = &v19;
    MEMORY[0x1F4188790](&v19);
    unint64_t v28 = &v19 - 4;
    *(&v19 - 2) = (uint64_t)v55;
    sub_1A809A0C4(v14 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v15);
    sub_1A80B3BD4((uint64_t)v29);
    swift_release();
    sub_1A809A1D4(v40);
    swift_release();

    (*(void (**)(void *, void, void, uint64_t))(v64 + 56))(v44, 0, v33, v68);
    uint64_t v34 = &v70;
    uint64_t v70 = v60;
    char v71 = v61 & 1 & v33;
    uint64_t v35 = &v69;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743DD0);
    sub_1A8A761E8();
    swift_endAccess();
    sub_1A80C4FE0((id *)v47);
  }
  sub_1A80AACA4((uint64_t)v55);
  return sub_1A80C2D1C(v55);
}

uint64_t sub_1A80AC7D4()
{
  uint64_t v190 = 0;
  uint64_t v148 = sub_1A809EB30;
  uint64_t v149 = sub_1A80C5310;
  BOOL v150 = sub_1A809EAD8;
  BOOL v151 = sub_1A809EEB8;
  BOOL v152 = sub_1A809EAB8;
  id v153 = sub_1A809F1F4;
  uint64_t v154 = sub_1A809EBC4;
  unint64_t v155 = sub_1A809EEB8;
  uint64_t v156 = sub_1A809EBB8;
  uint64_t v157 = sub_1A809F634;
  int v158 = sub_1A80C5358;
  uint64_t v159 = sub_1A80C40EC;
  int v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v161 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v163 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v165 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v166 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v169 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v171 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  uint64_t v172 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v216 = 0;
  uint64_t v214 = 0;
  v212 = 0;
  memset(__b, 0, sizeof(__b));
  uint64_t v208 = 0;
  id v205 = 0;
  uint64_t v192 = 0;
  uint64_t v175 = 0;
  uint64_t v176 = sub_1A8A754D8();
  uint64_t v177 = *(void *)(v176 - 8);
  uint64_t v178 = v176 - 8;
  unint64_t v179 = (*(void *)(v177 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v180 = (char *)&v68 - v179;
  uint64_t v181 = _s6LoggerVMa();
  unint64_t v182 = (*(void *)(*(void *)(v181 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v190);
  uint64_t v183 = (uint64_t)&v68 - v182;
  unint64_t v184 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v2);
  uint64_t v185 = (uint64_t)&v68 - v184;
  uint64_t v186 = type metadata accessor for Activity.MailboxStatus(v3);
  unint64_t v187 = (*(void *)(*(void *)(v186 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v186);
  uint64_t v188 = (uint64_t)&v68 - v187;
  uint64_t v216 = v0;
  uint64_t v189 = &v215;
  swift_beginAccess();
  uint64_t v195 = *(void *)(v0 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  uint64_t v214 = v195;
  uint64_t v196 = &type metadata for MailboxRowID;
  uint64_t v191 = sub_1A8A78558();
  unint64_t v197 = sub_1A80C5868();
  uint64_t v193 = sub_1A8A76F68();
  uint64_t v194 = &v213;
  swift_beginAccess();
  *(void *)(v0 + 80) = v193;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (sub_1A8A77028()) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v144 = *(void **)(v147 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
  id v4 = v144;
  v212 = v144;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v145 = &v217;
  sub_1A8A76F78();
  memcpy(__b, v145, sizeof(__b));
  uint64_t v146 = v175;
  while (1)
  {
    uint64_t v142 = v146;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746F98);
    sub_1A8A77038();
    uint64_t v143 = v209;
    if (v210) {
      break;
    }
    uint64_t v141 = v143;
    uint64_t v138 = v143;
    uint64_t v208 = v143;
    uint64_t v139 = &v206;
    uint64_t v206 = v143;
    char v207 = 0;
    swift_storeEnumTagMultiPayload();
    id v140 = sub_1A80AF440((uint64_t)v139, v188, v144);
    sub_1A80C3170(v188);
    if (v140)
    {
      id v137 = v140;
      uint64_t v5 = v180;
      id v92 = v140;
      id v205 = v140;
      id v93 = objc_msgSend(v140, sel_objectID);
      objc_msgSend(v144, sel_activityWithID_finishedWithError_);

      uint64_t v94 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A809A0C4(v147 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v185);
      (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v5, v185, v176);
      sub_1A809A1D4(v185);
      swift_retain();
      swift_retain();
      sub_1A809A0C4(v147 + *v94, v183);
      uint64_t v6 = (unsigned __int8 *)(v183 + *(int *)(v181 + 20));
      int v95 = *v6;
      int v96 = *((_DWORD *)v6 + 1);
      sub_1A809A1D4(v183);
      swift_release();
      uint64_t v98 = 24;
      uint64_t v114 = 7;
      uint64_t v7 = swift_allocObject();
      int v8 = v96;
      uint64_t v105 = v7;
      *(unsigned char *)(v7 + 16) = v95;
      *(_DWORD *)(v7 + 20) = v8;
      sub_1A809EAE4();
      sub_1A809EAE4();
      sub_1A809EAE4();
      uint64_t v9 = swift_allocObject();
      int v10 = v96;
      uint64_t v97 = v9;
      *(unsigned char *)(v9 + 16) = v95;
      *(_DWORD *)(v9 + 20) = v10;
      swift_retain();
      uint64_t v113 = 32;
      uint64_t v11 = swift_allocObject();
      uint64_t v12 = v97;
      uint64_t v110 = v11;
      *(void *)(v11 + 16) = v148;
      *(void *)(v11 + 24) = v12;
      sub_1A809EAE4();
      sub_1A809EAE4();
      swift_release();
      swift_release();
      uint64_t v99 = swift_allocObject();
      *(void *)(v99 + 16) = v138;
      swift_retain();
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v99;
      uint64_t v115 = v13;
      *(void *)(v13 + 16) = v149;
      *(void *)(v13 + 24) = v14;
      swift_release();
      v135 = sub_1A8A754B8();
      int v136 = sub_1A8A77468();
      uint64_t v102 = &v203;
      uint64_t v203 = 33;
      unint64_t v100 = sub_1A809EBD0();
      unint64_t v101 = sub_1A809EC4C();
      sub_1A809ECC8();
      sub_1A8A76B48();
      uint32_t v103 = v204;
      uint64_t v112 = 17;
      uint64_t v117 = swift_allocObject();
      int v107 = 16;
      *(unsigned char *)(v117 + 16) = 16;
      uint64_t v118 = swift_allocObject();
      int v109 = 4;
      *(unsigned char *)(v118 + 16) = 4;
      uint64_t v15 = swift_allocObject();
      uint64_t v104 = v15;
      *(void *)(v15 + 16) = v150;
      *(void *)(v15 + 24) = 0;
      uint64_t v16 = swift_allocObject();
      uint64_t v17 = v104;
      uint64_t v119 = v16;
      *(void *)(v16 + 16) = v151;
      *(void *)(v16 + 24) = v17;
      uint64_t v120 = swift_allocObject();
      *(unsigned char *)(v120 + 16) = 0;
      uint64_t v121 = swift_allocObject();
      *(unsigned char *)(v121 + 16) = 1;
      uint64_t v18 = swift_allocObject();
      uint64_t v19 = v105;
      uint64_t v106 = v18;
      *(void *)(v18 + 16) = v152;
      *(void *)(v18 + 24) = v19;
      uint64_t v20 = swift_allocObject();
      uint64_t v21 = v106;
      uint64_t v122 = v20;
      *(void *)(v20 + 16) = v153;
      *(void *)(v20 + 24) = v21;
      uint64_t v123 = swift_allocObject();
      *(unsigned char *)(v123 + 16) = v107;
      uint64_t v124 = swift_allocObject();
      *(unsigned char *)(v124 + 16) = v109;
      uint64_t v22 = swift_allocObject();
      uint64_t v108 = v22;
      *(void *)(v22 + 16) = v154;
      *(void *)(v22 + 24) = 0;
      uint64_t v23 = swift_allocObject();
      uint64_t v24 = v108;
      uint64_t v125 = v23;
      *(void *)(v23 + 16) = v155;
      *(void *)(v23 + 24) = v24;
      uint64_t v126 = swift_allocObject();
      *(unsigned char *)(v126 + 16) = 0;
      uint64_t v127 = swift_allocObject();
      *(unsigned char *)(v127 + 16) = v109;
      uint64_t v25 = swift_allocObject();
      uint64_t v26 = v110;
      uint64_t v111 = v25;
      *(void *)(v25 + 16) = v156;
      *(void *)(v25 + 24) = v26;
      uint64_t v27 = swift_allocObject();
      uint64_t v28 = v111;
      uint64_t v128 = v27;
      *(void *)(v27 + 16) = v157;
      *(void *)(v27 + 24) = v28;
      uint64_t v129 = swift_allocObject();
      *(unsigned char *)(v129 + 16) = 32;
      uint64_t v130 = swift_allocObject();
      *(unsigned char *)(v130 + 16) = 8;
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = v115;
      uint64_t v116 = v29;
      *(void *)(v29 + 16) = v158;
      *(void *)(v29 + 24) = v30;
      uint64_t v31 = swift_allocObject();
      uint64_t v32 = v116;
      uint64_t v132 = v31;
      *(void *)(v31 + 16) = v159;
      *(void *)(v31 + 24) = v32;
      uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
      uint64_t v131 = sub_1A8A78558();
      uint64_t v133 = v33;
      swift_retain();
      uint64_t v34 = v117;
      uint64_t v35 = v133;
      *uint64_t v133 = v160;
      v35[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
      swift_retain();
      uint64_t v36 = v118;
      uint64_t v37 = v133;
      v133[2] = v161;
      v37[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
      swift_retain();
      uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v119;
      unint64_t v39 = v133;
      v133[4] = v162;
      v39[5] = v38;
      swift_retain();
      uint64_t v40 = v120;
      unint64_t v41 = v133;
      v133[6] = v163;
      v41[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
      swift_retain();
      uint64_t v42 = v121;
      unint64_t v43 = v133;
      v133[8] = v164;
      v43[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
      swift_retain();
      uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v122;
      unint64_t v45 = v133;
      v133[10] = v165;
      v45[11] = v44;
      swift_retain();
      uint64_t v46 = v123;
      uint64_t v47 = v133;
      v133[12] = v166;
      v47[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v46;
      swift_retain();
      uint64_t v48 = v124;
      unint64_t v49 = v133;
      v133[14] = v167;
      v49[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
      swift_retain();
      uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v125;
      uint64_t v51 = v133;
      v133[16] = v168;
      v51[17] = v50;
      swift_retain();
      uint64_t v52 = v126;
      uint64_t v53 = v133;
      v133[18] = v169;
      v53[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v52;
      swift_retain();
      uint64_t v54 = v127;
      uint64_t v55 = v133;
      v133[20] = v170;
      v55[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54;
      swift_retain();
      uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v128;
      id v57 = v133;
      v133[22] = v171;
      v57[23] = v56;
      swift_retain();
      uint64_t v58 = v129;
      uint64_t v59 = v133;
      v133[24] = v172;
      v59[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v58;
      swift_retain();
      uint64_t v60 = v130;
      int v61 = v133;
      v133[26] = v173;
      v61[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v60;
      swift_retain();
      uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v132;
      uint64_t v63 = v133;
      v133[28] = v174;
      v63[29] = v62;
      sub_1A809B5EC();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v135, (os_log_type_t)v136))
      {
        uint64_t v64 = v142;
        char v85 = (uint8_t *)sub_1A8A77888();
        uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
        uint64_t v86 = sub_1A809E94C(0);
        uint64_t v87 = sub_1A809E94C(1);
        int v88 = &v202;
        uint64_t v202 = v85;
        uint64_t v89 = &v201;
        uint64_t v201 = v86;
        uint64_t v90 = &v200;
        uint64_t v200 = v87;
        sub_1A809E9A8(2, &v202);
        sub_1A809E9A8(5, v88);
        v198 = v160;
        uint64_t v199 = v117;
        sub_1A809E9BC(&v198, (uint64_t)v88, (uint64_t)v89, (uint64_t)v90);
        uint64_t v91 = v64;
        if (v64)
        {
          __break(1u);
        }
        else
        {
          v198 = v161;
          uint64_t v199 = v118;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v82 = 0;
          uint64_t v66 = v82;
          v198 = v162;
          uint64_t v199 = v119;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v81 = v66;
          v198 = v163;
          uint64_t v199 = v120;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v80 = 0;
          v198 = v164;
          uint64_t v199 = v121;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v79 = 0;
          v198 = v165;
          uint64_t v199 = v122;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v78 = 0;
          v198 = v166;
          uint64_t v199 = v123;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v77 = 0;
          v198 = v167;
          uint64_t v199 = v124;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v76 = 0;
          v198 = v168;
          uint64_t v199 = v125;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v75 = 0;
          v198 = v169;
          uint64_t v199 = v126;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v74 = 0;
          v198 = v170;
          uint64_t v199 = v127;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v73 = 0;
          v198 = v171;
          uint64_t v199 = v128;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v72 = 0;
          v198 = v172;
          uint64_t v199 = v129;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v71 = 0;
          v198 = v173;
          uint64_t v199 = v130;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v70 = 0;
          v198 = v174;
          uint64_t v199 = v132;
          sub_1A809E9BC(&v198, (uint64_t)&v202, (uint64_t)&v201, (uint64_t)&v200);
          uint64_t v69 = 0;
          _os_log_impl(&dword_1A7EFF000, v135, (os_log_type_t)v136, "[%.*hhx-%.*X] Finished EMActivity for pending '%s'.", v85, v103);
          sub_1A809EA08(v86);
          sub_1A809EA08(v87);
          sub_1A8A77868();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v83 = v69;
        }
      }
      else
      {
        uint64_t v65 = v142;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v83 = v65;
      }
      uint64_t v68 = v83;

      (*(void (**)(char *, uint64_t))(v177 + 8))(v180, v176);
      uint64_t v146 = v68;
    }
    else
    {
      uint64_t v146 = v142;
    }
  }
  sub_1A80AAC20();

  return swift_bridgeObjectRelease();
}

id *sub_1A80ADBE0()
{
  uint64_t v167 = 0;
  uint64_t v132 = sub_1A809EB30;
  uint64_t v133 = sub_1A809EAD8;
  uint64_t v134 = sub_1A809EEB8;
  v135 = sub_1A809EAB8;
  int v136 = sub_1A809F1F4;
  id v137 = sub_1A809EBC4;
  uint64_t v138 = sub_1A809EEB8;
  uint64_t v139 = sub_1A809EBB8;
  id v140 = sub_1A809F634;
  uint64_t v141 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v142 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v144 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v145 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v146 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v147 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v148 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  BOOL v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  BOOL v151 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  BOOL v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  uint64_t v194 = 0;
  uint64_t v193 = 0;
  id v190 = 0;
  uint64_t v169 = 0;
  uint64_t v153 = 0;
  id v180 = 0;
  id v179 = 0;
  uint64_t v154 = sub_1A8A754D8();
  uint64_t v155 = *(void *)(v154 - 8);
  uint64_t v156 = v154 - 8;
  unint64_t v157 = (*(void *)(v155 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  int v158 = (char *)&v62 - v157;
  uint64_t v159 = _s6LoggerVMa();
  unint64_t v160 = (*(void *)(*(void *)(v159 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v167);
  uint64_t v161 = (uint64_t)&v62 - v160;
  unint64_t v162 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v2);
  uint64_t v163 = (uint64_t)&v62 - v162;
  uint64_t v164 = type metadata accessor for Activity.MailboxStatus(v3);
  unint64_t v165 = (*(void *)(*(void *)(v164 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v164);
  uint64_t v166 = (uint64_t)&v62 - v165;
  unint64_t v168 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97436F0) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v167);
  uint64_t v176 = (id *)((char *)&v62 - v168);
  uint64_t v178 = _s15MailboxActivityVMa();
  uint64_t v174 = *(void *)(v178 - 8);
  uint64_t v175 = v178 - 8;
  unint64_t v170 = (*(void *)(v174 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v178);
  uint64_t v171 = (id *)((char *)&v62 - v170);
  uint64_t v194 = (char *)&v62 - v170;
  uint64_t v193 = v0;
  swift_beginAccess();
  uint64_t v172 = *(void *)(v0 + 88);
  uint64_t v173 = &v191;
  uint64_t v191 = 0;
  unsigned int v177 = 1;
  char v192 = 1;
  unint64_t v4 = sub_1A80A57FC();
  MEMORY[0x1AD0DF2C0](v173, v172, &unk_1EFE8B440, v178, v4);
  if ((*(unsigned int (**)(id *, void, uint64_t))(v174 + 48))(v176, v177, v178) == 1)
  {
    sub_1A80C4970(v176);
    return (id *)swift_endAccess();
  }
  else
  {
    sub_1A80C4C18(v176, v171);
    swift_endAccess();
    id v130 = *v171;
    id v5 = v130;
    if (v130)
    {
      id v129 = v130;
      id v128 = v130;
      id v179 = v130;
      id v6 = v130;
      id v190 = v128;

LABEL_19:
      id v65 = *(id *)(v131 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
      id v60 = v65;
      id v63 = v190;
      id v61 = v190;
      id v64 = objc_msgSend(v63, sel_objectID);

      objc_msgSend(v65, sel_activityWithID_finishedWithError_, v64, 0);
      sub_1A80BBB5C(v131);
      return sub_1A80C4FE0(v171);
    }
    uint64_t v7 = v131;
    uint64_t v125 = &v188;
    uint64_t v188 = 0;
    char v189 = 1;
    swift_storeEnumTagMultiPayload();
    uint64_t v126 = *(void **)(v7 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
    id v8 = v126;
    id v127 = sub_1A80AF440((uint64_t)v125, v166, v126);

    sub_1A80C3170(v166);
    if (v127)
    {
      id v124 = v127;
      id v66 = v127;
      id v180 = v127;
      id v59 = v127;
      id v190 = v66;

      goto LABEL_19;
    }
    uint64_t v9 = v158;
    uint64_t v87 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A809A0C4(v131 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v163);
    (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v9, v163, v154);
    sub_1A809A1D4(v163);
    swift_retain();
    swift_retain();
    sub_1A809A0C4(v131 + *v87, v161);
    int v10 = (unsigned __int8 *)(v161 + *(int *)(v159 + 20));
    int v89 = *v10;
    int v90 = *((_DWORD *)v10 + 1);
    sub_1A809A1D4(v161);
    swift_release();
    uint64_t v88 = 24;
    uint64_t v104 = 7;
    uint64_t v11 = swift_allocObject();
    int v12 = v90;
    uint64_t v97 = v11;
    *(unsigned char *)(v11 + 16) = v89;
    *(_DWORD *)(v11 + 20) = v12;
    sub_1A809EAE4();
    sub_1A809EAE4();
    sub_1A809EAE4();
    uint64_t v13 = swift_allocObject();
    int v14 = v90;
    uint64_t v91 = v13;
    *(unsigned char *)(v13 + 16) = v89;
    *(_DWORD *)(v13 + 20) = v14;
    swift_retain();
    uint64_t v103 = 32;
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v91;
    uint64_t v105 = v15;
    *(void *)(v15 + 16) = v132;
    *(void *)(v15 + 24) = v16;
    sub_1A809EAE4();
    sub_1A809EAE4();
    swift_release();
    swift_release();
    uint64_t v122 = sub_1A8A754B8();
    int v123 = sub_1A8A77448();
    uint64_t v94 = &v186;
    uint64_t v186 = 23;
    unint64_t v92 = sub_1A809EBD0();
    unint64_t v93 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v95 = v187;
    uint64_t v101 = 17;
    uint64_t v107 = swift_allocObject();
    int v99 = 16;
    *(unsigned char *)(v107 + 16) = 16;
    uint64_t v108 = swift_allocObject();
    int v102 = 4;
    *(unsigned char *)(v108 + 16) = 4;
    uint64_t v17 = swift_allocObject();
    uint64_t v96 = v17;
    *(void *)(v17 + 16) = v133;
    *(void *)(v17 + 24) = 0;
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v96;
    uint64_t v109 = v18;
    *(void *)(v18 + 16) = v134;
    *(void *)(v18 + 24) = v19;
    uint64_t v110 = swift_allocObject();
    *(unsigned char *)(v110 + 16) = 0;
    uint64_t v111 = swift_allocObject();
    *(unsigned char *)(v111 + 16) = 1;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v97;
    uint64_t v98 = v20;
    *(void *)(v20 + 16) = v135;
    *(void *)(v20 + 24) = v21;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v98;
    uint64_t v112 = v22;
    *(void *)(v22 + 16) = v136;
    *(void *)(v22 + 24) = v23;
    uint64_t v113 = swift_allocObject();
    *(unsigned char *)(v113 + 16) = v99;
    uint64_t v114 = swift_allocObject();
    *(unsigned char *)(v114 + 16) = v102;
    uint64_t v24 = swift_allocObject();
    uint64_t v100 = v24;
    *(void *)(v24 + 16) = v137;
    *(void *)(v24 + 24) = 0;
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v100;
    uint64_t v115 = v25;
    *(void *)(v25 + 16) = v138;
    *(void *)(v25 + 24) = v26;
    uint64_t v116 = swift_allocObject();
    *(unsigned char *)(v116 + 16) = 0;
    uint64_t v117 = swift_allocObject();
    *(unsigned char *)(v117 + 16) = v102;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v105;
    uint64_t v106 = v27;
    *(void *)(v27 + 16) = v139;
    *(void *)(v27 + 24) = v28;
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v106;
    uint64_t v119 = v29;
    *(void *)(v29 + 16) = v140;
    *(void *)(v29 + 24) = v30;
    uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v118 = sub_1A8A78558();
    uint64_t v120 = v31;
    swift_retain();
    uint64_t v32 = v107;
    unsigned int v33 = v120;
    NSObject *v120 = v141;
    v33[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
    swift_retain();
    uint64_t v34 = v108;
    uint64_t v35 = v120;
    v120[2] = v142;
    void v35[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
    swift_retain();
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v109;
    uint64_t v37 = v120;
    v120[4] = v143;
    v37[5] = v36;
    swift_retain();
    uint64_t v38 = v110;
    unint64_t v39 = v120;
    v120[6] = v144;
    v39[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
    swift_retain();
    uint64_t v40 = v111;
    unint64_t v41 = v120;
    v120[8] = v145;
    v41[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
    swift_retain();
    uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v112;
    unint64_t v43 = v120;
    v120[10] = v146;
    v43[11] = v42;
    swift_retain();
    uint64_t v44 = v113;
    unint64_t v45 = v120;
    v120[12] = v147;
    v45[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v44;
    swift_retain();
    uint64_t v46 = v114;
    uint64_t v47 = v120;
    v120[14] = v148;
    v47[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v46;
    swift_retain();
    uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v115;
    unint64_t v49 = v120;
    v120[16] = v149;
    v49[17] = v48;
    swift_retain();
    uint64_t v50 = v116;
    uint64_t v51 = v120;
    v120[18] = v150;
    v51[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v50;
    swift_retain();
    uint64_t v52 = v117;
    uint64_t v53 = v120;
    v120[20] = v151;
    v53[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v52;
    swift_retain();
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v119;
    uint64_t v55 = v120;
    v120[22] = v152;
    v55[23] = v54;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v122, (os_log_type_t)v123))
    {
      uint64_t v56 = v153;
      uint64_t v80 = (uint8_t *)sub_1A8A77888();
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v79 = 0;
      uint64_t v81 = sub_1A809E94C(0);
      uint64_t v82 = sub_1A809E94C(v79);
      uint64_t v83 = &v185;
      uint64_t v185 = v80;
      uint64_t v84 = &v184;
      uint64_t v184 = v81;
      char v85 = &v183;
      uint64_t v183 = v82;
      sub_1A809E9A8(0, &v185);
      sub_1A809E9A8(4, v83);
      uint64_t v181 = v141;
      uint64_t v182 = v107;
      sub_1A809E9BC(&v181, (uint64_t)v83, (uint64_t)v84, (uint64_t)v85);
      uint64_t v86 = v56;
      if (v56)
      {
        __break(1u);
      }
      else
      {
        uint64_t v181 = v142;
        uint64_t v182 = v108;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v77 = 0;
        uint64_t v57 = v77;
        uint64_t v181 = v143;
        uint64_t v182 = v109;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v76 = v57;
        uint64_t v181 = v144;
        uint64_t v182 = v110;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v75 = 0;
        uint64_t v181 = v145;
        uint64_t v182 = v111;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v74 = 0;
        uint64_t v181 = v146;
        uint64_t v182 = v112;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v73 = 0;
        uint64_t v181 = v147;
        uint64_t v182 = v113;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v72 = 0;
        uint64_t v181 = v148;
        uint64_t v182 = v114;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v71 = 0;
        uint64_t v181 = v149;
        uint64_t v182 = v115;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v70 = 0;
        uint64_t v181 = v150;
        uint64_t v182 = v116;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v69 = 0;
        uint64_t v181 = v151;
        uint64_t v182 = v117;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v68 = 0;
        uint64_t v181 = v152;
        uint64_t v182 = v119;
        sub_1A809E9BC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        _os_log_impl(&dword_1A7EFF000, v122, (os_log_type_t)v123, "[%.*hhx-%.*X] Unable to create account scope activity.", v80, v95);
        uint64_t v67 = 0;
        sub_1A809EA08(v81);
        sub_1A809EA08(v82);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v155 + 8))(v158, v154);
    sub_1A80BBB5C(v131);
    return sub_1A80C4FE0(v171);
  }
}

id (*sub_1A80AF36C())(uint64_t *a1, uint64_t a2, void *a3)
{
  return sub_1A80D3054;
}

id sub_1A80AF3B8(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v11 = 0;
  char v12 = 0;
  uint64_t v10 = 0;
  uint64_t v9 = 0;
  uint64_t v8 = 0;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v11 = *a1;
  char v12 = v4 & 1;
  uint64_t v10 = a2;
  uint64_t v9 = a3;
  uint64_t v8 = a4;
  uint64_t v6 = v11;
  char v7 = v4 & 1;
  return sub_1A80AF440((uint64_t)&v6, a2, a3);
}

id sub_1A80AF440(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v691 = a1;
  uint64_t v690 = a2;
  id v689 = a3;
  uint64_t v677 = 0;
  v560 = sub_1A809EB30;
  v561 = sub_1A80C5310;
  v562 = sub_1A809EAD8;
  v563 = sub_1A809EEB8;
  v564 = sub_1A809EAB8;
  v565 = sub_1A809F1F4;
  v566 = sub_1A809EBC4;
  v567 = sub_1A809EEB8;
  v568 = sub_1A809EBB8;
  v569 = sub_1A809F634;
  v570 = sub_1A80C5358;
  v571 = sub_1A80C40EC;
  v572 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v573 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v574 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v575 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v576 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v577 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v578 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v579 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v580 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v581 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v582 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v583 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  v584 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v585 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v586 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  v587 = sub_1A809EB30;
  v588 = sub_1A80C5310;
  v589 = sub_1A809EEB8;
  v590 = sub_1A809EAB8;
  v591 = sub_1A809F1F4;
  v592 = sub_1A809EEB8;
  v593 = sub_1A809EBB8;
  v594 = sub_1A809F634;
  v595 = sub_1A80C5358;
  v596 = sub_1A80C40EC;
  v597 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v598 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v599 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  unint64_t v600 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v601 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v602 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v603 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v604 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v605 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v606 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v607 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v608 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  unint64_t v609 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v610 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v611 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  v612 = sub_1A809EB30;
  unint64_t v613 = sub_1A80C5310;
  v614 = sub_1A809EEB8;
  unint64_t v615 = sub_1A809EAB8;
  v616 = sub_1A809F1F4;
  unint64_t v617 = sub_1A809EEB8;
  v618 = sub_1A809EBB8;
  uint64_t v619 = sub_1A809F634;
  uint64_t v620 = sub_1A80C5358;
  uint64_t v621 = sub_1A80C40EC;
  unint64_t v622 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v623 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v624 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  v625 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v626 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v627 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v628 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v629 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v630 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  unint64_t v631 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v632 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v633 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  uint64_t v634 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  unint64_t v637 = sub_1A809EB30;
  v638 = sub_1A809EEB8;
  unint64_t v639 = sub_1A809EAB8;
  v640 = sub_1A809F1F4;
  unint64_t v641 = sub_1A809EEB8;
  v642 = sub_1A809EBB8;
  uint64_t v643 = sub_1A809F634;
  unint64_t v644 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v645 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v646 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v647 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v648 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v649 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v650 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  id v651 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v652 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  id v653 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v654 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v655 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  v750 = 0;
  uint64_t v748 = 0;
  char v749 = 0;
  uint64_t v747 = 0;
  uint64_t v746 = 0;
  uint64_t v745 = 0;
  id v744 = 0;
  id v743 = 0;
  uint64_t v742 = 0;
  uint64_t v656 = 0;
  id v732 = 0;
  id v731 = 0;
  uint64_t v730 = 0;
  id v729 = 0;
  uint64_t v728 = 0;
  BOOL v722 = 0;
  id v697 = 0;
  id v696 = 0;
  unint64_t v657 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v658 = (uint64_t)v275 - v657;
  uint64_t v659 = sub_1A8A74C38();
  uint64_t v660 = *(void *)(v659 - 8);
  uint64_t v661 = v659 - 8;
  unint64_t v662 = (*(void *)(v660 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v677);
  v663 = (char *)v275 - v662;
  unint64_t v664 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v5);
  v665 = (char *)v275 - v664;
  v750 = (char *)v275 - v664;
  uint64_t v666 = sub_1A8A754D8();
  uint64_t v667 = *(void *)(v666 - 8);
  uint64_t v668 = v666 - 8;
  unint64_t v669 = (*(void *)(v667 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v677);
  uint64_t v670 = (char *)v275 - v669;
  unint64_t v671 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v7);
  uint64_t v672 = (char *)v275 - v671;
  unint64_t v673 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v9);
  id v674 = (char *)v275 - v673;
  unint64_t v675 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v11);
  char v676 = (char *)v275 - v675;
  uint64_t v678 = _s6LoggerVMa();
  unint64_t v679 = (*(void *)(*(void *)(v678 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v677);
  uint64_t v680 = (uint64_t)v275 - v679;
  unint64_t v681 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v13);
  uint64_t v682 = (uint64_t)v275 - v681;
  unint64_t v683 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v15);
  uint64_t v684 = (uint64_t)v275 - v683;
  unint64_t v685 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v17);
  uint64_t v686 = (uint64_t)v275 - v685;
  unint64_t v687 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v19);
  uint64_t v688 = (uint64_t)v275 - v687;
  unint64_t v692 = (*(void *)(*(void *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v691);
  uint64_t v693 = (uint64_t)v275 - v692;
  uint64_t v694 = *v20;
  int v695 = *((unsigned __int8 *)v20 + 8);
  uint64_t v748 = v694;
  char v749 = v695 & 1;
  uint64_t v747 = v21;
  uint64_t v746 = v22;
  uint64_t v745 = v3;
  if ((v695 & 1) == 0)
  {
    uint64_t v558 = v694;
    uint64_t v75 = v693;
    uint64_t v488 = v694;
    uint64_t v742 = v694;
    uint64_t v486 = v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
    uint64_t v487 = &v741;
    swift_beginAccess();
    sub_1A80A5D48(v486, v75);
    swift_endAccess();
    uint64_t v740 = v488;
    id v489 = (id)sub_1A81D937C((uint64_t)&v740);
    sub_1A80A5E80(v693);
    if (v489)
    {
      id v485 = v489;
      id v483 = v489;
      id v732 = v489;
      id v484 = objc_msgSend(v489, sel_objectID);
      if (v484)
      {
        id v482 = v484;
        id v481 = v484;
        id v731 = v484;
        id v76 = v483;
        id v744 = v483;
        id v77 = v481;
        id v743 = v481;

        goto LABEL_27;
      }
    }
    uint64_t v78 = v674;
    uint64_t v438 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A809A0C4(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v684);
    (*(void (**)(char *, uint64_t, uint64_t))(v667 + 16))(v78, v684, v666);
    sub_1A809A1D4(v684);
    swift_retain();
    swift_retain();
    sub_1A809A0C4(v559 + *v438, v686);
    uint64_t v79 = (unsigned __int8 *)(v686 + *(int *)(v678 + 20));
    int v439 = *v79;
    int v440 = *((_DWORD *)v79 + 1);
    sub_1A809A1D4(v686);
    swift_release();
    uint64_t v442 = 24;
    uint64_t v458 = 7;
    uint64_t v80 = swift_allocObject();
    int v81 = v440;
    uint64_t v449 = v80;
    *(unsigned char *)(v80 + 16) = v439;
    *(_DWORD *)(v80 + 20) = v81;
    sub_1A809EAE4();
    sub_1A809EAE4();
    sub_1A809EAE4();
    uint64_t v82 = swift_allocObject();
    int v83 = v440;
    uint64_t v441 = v82;
    *(unsigned char *)(v82 + 16) = v439;
    *(_DWORD *)(v82 + 20) = v83;
    swift_retain();
    uint64_t v457 = 32;
    uint64_t v84 = swift_allocObject();
    uint64_t v85 = v441;
    uint64_t v454 = v84;
    *(void *)(v84 + 16) = v560;
    *(void *)(v84 + 24) = v85;
    sub_1A809EAE4();
    sub_1A809EAE4();
    swift_release();
    swift_release();
    uint64_t v443 = swift_allocObject();
    *(void *)(v443 + 16) = v488;
    swift_retain();
    uint64_t v86 = swift_allocObject();
    uint64_t v87 = v443;
    uint64_t v459 = v86;
    *(void *)(v86 + 16) = v561;
    *(void *)(v86 + 24) = v87;
    swift_release();
    uint32_t v479 = sub_1A8A754B8();
    int v480 = sub_1A8A77448();
    uint64_t v446 = &v738;
    uint64_t v738 = 33;
    unint64_t v444 = sub_1A809EBD0();
    unint64_t v445 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v447 = v739;
    uint64_t v456 = 17;
    uint64_t v461 = swift_allocObject();
    int v451 = 16;
    *(unsigned char *)(v461 + 16) = 16;
    uint64_t v462 = swift_allocObject();
    int v453 = 4;
    *(unsigned char *)(v462 + 16) = 4;
    uint64_t v88 = swift_allocObject();
    uint64_t v448 = v88;
    *(void *)(v88 + 16) = v562;
    *(void *)(v88 + 24) = 0;
    uint64_t v89 = swift_allocObject();
    uint64_t v90 = v448;
    uint64_t v463 = v89;
    *(void *)(v89 + 16) = v563;
    *(void *)(v89 + 24) = v90;
    uint64_t v464 = swift_allocObject();
    *(unsigned char *)(v464 + 16) = 0;
    uint64_t v465 = swift_allocObject();
    *(unsigned char *)(v465 + 16) = 1;
    uint64_t v91 = swift_allocObject();
    uint64_t v92 = v449;
    uint64_t v450 = v91;
    *(void *)(v91 + 16) = v564;
    *(void *)(v91 + 24) = v92;
    uint64_t v93 = swift_allocObject();
    uint64_t v94 = v450;
    uint64_t v466 = v93;
    *(void *)(v93 + 16) = v565;
    *(void *)(v93 + 24) = v94;
    uint64_t v467 = swift_allocObject();
    *(unsigned char *)(v467 + 16) = v451;
    uint64_t v468 = swift_allocObject();
    *(unsigned char *)(v468 + 16) = v453;
    uint64_t v95 = swift_allocObject();
    uint64_t v452 = v95;
    *(void *)(v95 + 16) = v566;
    *(void *)(v95 + 24) = 0;
    uint64_t v96 = swift_allocObject();
    uint64_t v97 = v452;
    uint64_t v469 = v96;
    *(void *)(v96 + 16) = v567;
    *(void *)(v96 + 24) = v97;
    uint64_t v470 = swift_allocObject();
    *(unsigned char *)(v470 + 16) = 0;
    uint64_t v471 = swift_allocObject();
    *(unsigned char *)(v471 + 16) = v453;
    uint64_t v98 = swift_allocObject();
    uint64_t v99 = v454;
    uint64_t v455 = v98;
    *(void *)(v98 + 16) = v568;
    *(void *)(v98 + 24) = v99;
    uint64_t v100 = swift_allocObject();
    uint64_t v101 = v455;
    uint64_t v472 = v100;
    *(void *)(v100 + 16) = v569;
    *(void *)(v100 + 24) = v101;
    uint64_t v473 = swift_allocObject();
    *(unsigned char *)(v473 + 16) = 32;
    uint64_t v474 = swift_allocObject();
    *(unsigned char *)(v474 + 16) = 8;
    uint64_t v102 = swift_allocObject();
    uint64_t v103 = v459;
    uint64_t v460 = v102;
    *(void *)(v102 + 16) = v570;
    *(void *)(v102 + 24) = v103;
    uint64_t v104 = swift_allocObject();
    uint64_t v105 = v460;
    uint64_t v476 = v104;
    *(void *)(v104 + 16) = v571;
    *(void *)(v104 + 24) = v105;
    uint64_t v478 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v475 = sub_1A8A78558();
    unint64_t v477 = v106;
    swift_retain();
    uint64_t v107 = v461;
    uint64_t v108 = v477;
    *unint64_t v477 = v572;
    v108[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v107;
    swift_retain();
    uint64_t v109 = v462;
    uint64_t v110 = v477;
    v477[2] = v573;
    v110[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v109;
    swift_retain();
    uint64_t v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v463;
    uint64_t v112 = v477;
    v477[4] = v574;
    v112[5] = v111;
    swift_retain();
    uint64_t v113 = v464;
    uint64_t v114 = v477;
    v477[6] = v575;
    v114[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v113;
    swift_retain();
    uint64_t v115 = v465;
    uint64_t v116 = v477;
    v477[8] = v576;
    v116[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v115;
    swift_retain();
    uint64_t v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v466;
    uint64_t v118 = v477;
    v477[10] = v577;
    v118[11] = v117;
    swift_retain();
    uint64_t v119 = v467;
    uint64_t v120 = v477;
    v477[12] = v578;
    v120[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v119;
    swift_retain();
    uint64_t v121 = v468;
    uint64_t v122 = v477;
    v477[14] = v579;
    v122[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v121;
    swift_retain();
    int v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v469;
    id v124 = v477;
    v477[16] = v580;
    v124[17] = v123;
    swift_retain();
    uint64_t v125 = v470;
    uint64_t v126 = v477;
    v477[18] = v581;
    v126[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v125;
    swift_retain();
    uint64_t v127 = v471;
    id v128 = v477;
    v477[20] = v582;
    v128[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v127;
    swift_retain();
    id v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v472;
    id v130 = v477;
    v477[22] = v583;
    v130[23] = v129;
    swift_retain();
    uint64_t v131 = v473;
    uint64_t v132 = v477;
    v477[24] = v584;
    v132[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v131;
    swift_retain();
    uint64_t v133 = v474;
    uint64_t v134 = v477;
    v477[26] = v585;
    v134[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v133;
    swift_retain();
    v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v476;
    int v136 = v477;
    v477[28] = v586;
    v136[29] = v135;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v479, (os_log_type_t)v480))
    {
      uint64_t v137 = v656;
      uint64_t v431 = (uint8_t *)sub_1A8A77888();
      uint64_t v430 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v432 = sub_1A809E94C(0);
      uint64_t v433 = sub_1A809E94C(1);
      uint64_t v434 = &v737;
      v737 = v431;
      uint64_t v435 = &v736;
      uint64_t v736 = v432;
      v436 = &v735;
      uint64_t v735 = v433;
      sub_1A809E9A8(2, &v737);
      sub_1A809E9A8(5, v434);
      char v733 = v572;
      uint64_t v734 = v461;
      sub_1A809E9BC(&v733, (uint64_t)v434, (uint64_t)v435, (uint64_t)v436);
      uint64_t v437 = v137;
      if (v137)
      {
        __break(1u);
      }
      else
      {
        char v733 = v573;
        uint64_t v734 = v462;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v429 = 0;
        char v733 = v574;
        uint64_t v734 = v463;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v428 = 0;
        char v733 = v575;
        uint64_t v734 = v464;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v427 = 0;
        char v733 = v576;
        uint64_t v734 = v465;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v426 = 0;
        char v733 = v577;
        uint64_t v734 = v466;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v425 = 0;
        char v733 = v578;
        uint64_t v734 = v467;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v424 = 0;
        char v733 = v579;
        uint64_t v734 = v468;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v423 = 0;
        char v733 = v580;
        uint64_t v734 = v469;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v422 = 0;
        char v733 = v581;
        uint64_t v734 = v470;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v421 = 0;
        char v733 = v582;
        uint64_t v734 = v471;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v420 = 0;
        char v733 = v583;
        uint64_t v734 = v472;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v419 = 0;
        char v733 = v584;
        uint64_t v734 = v473;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v418 = 0;
        char v733 = v585;
        uint64_t v734 = v474;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        uint64_t v417 = 0;
        char v733 = v586;
        uint64_t v734 = v476;
        sub_1A809E9BC(&v733, (uint64_t)&v737, (uint64_t)&v736, (uint64_t)&v735);
        _os_log_impl(&dword_1A7EFF000, v479, (os_log_type_t)v480, "[%.*hhx-%.*X] EMActivity: Unable to get mailbox for '%s'.", v431, v447);
        sub_1A809EA08(v432);
        sub_1A809EA08(v433);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v667 + 8))(v674, v666);
    return (id)v677;
  }
  uint64_t v23 = v693;
  uint64_t v553 = v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_mailboxPersistence;
  v554 = &v705;
  swift_beginAccess();
  sub_1A80A5D48(v553, v23);
  swift_endAccess();
  uint64_t v24 = MailboxName.inbox.unsafeMutableAddressor();
  uint64_t v556 = *v24;
  int v555 = *((_DWORD *)v24 + 2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  id v557 = (id)sub_1A81D9154(v556, v555);
  swift_bridgeObjectRelease();
  sub_1A80A5E80(v693);
  if (!v557)
  {
LABEL_9:
    uint64_t v27 = v676;
    v511 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A809A0C4(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v688);
    (*(void (**)(char *, uint64_t, uint64_t))(v667 + 16))(v27, v688, v666);
    sub_1A809A1D4(v688);
    swift_retain();
    swift_retain();
    sub_1A809A0C4(v559 + *v511, v686);
    uint64_t v28 = (unsigned __int8 *)(v686 + *(int *)(v678 + 20));
    int v513 = *v28;
    int v514 = *((_DWORD *)v28 + 1);
    sub_1A809A1D4(v686);
    swift_release();
    uint64_t v512 = 24;
    uint64_t v528 = 7;
    uint64_t v29 = swift_allocObject();
    int v30 = v514;
    uint64_t v521 = v29;
    *(unsigned char *)(v29 + 16) = v513;
    *(_DWORD *)(v29 + 20) = v30;
    sub_1A809EAE4();
    sub_1A809EAE4();
    sub_1A809EAE4();
    uint64_t v31 = swift_allocObject();
    int v32 = v514;
    uint64_t v515 = v31;
    *(unsigned char *)(v31 + 16) = v513;
    *(_DWORD *)(v31 + 20) = v32;
    swift_retain();
    uint64_t v527 = 32;
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v515;
    uint64_t v529 = v33;
    *(void *)(v33 + 16) = v637;
    *(void *)(v33 + 24) = v34;
    sub_1A809EAE4();
    sub_1A809EAE4();
    swift_release();
    swift_release();
    v546 = sub_1A8A754B8();
    int v547 = sub_1A8A77448();
    uint64_t v518 = &v703;
    uint64_t v703 = 23;
    unint64_t v516 = sub_1A809EBD0();
    unint64_t v517 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v519 = v704;
    uint64_t v525 = 17;
    uint64_t v531 = swift_allocObject();
    int v523 = 16;
    *(unsigned char *)(v531 + 16) = 16;
    uint64_t v532 = swift_allocObject();
    int v526 = 4;
    *(unsigned char *)(v532 + 16) = 4;
    uint64_t v35 = swift_allocObject();
    uint64_t v520 = v35;
    *(void *)(v35 + 16) = v562;
    *(void *)(v35 + 24) = 0;
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = v520;
    uint64_t v533 = v36;
    *(void *)(v36 + 16) = v638;
    *(void *)(v36 + 24) = v37;
    uint64_t v534 = swift_allocObject();
    *(unsigned char *)(v534 + 16) = 0;
    uint64_t v535 = swift_allocObject();
    *(unsigned char *)(v535 + 16) = 1;
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = v521;
    uint64_t v522 = v38;
    *(void *)(v38 + 16) = v639;
    *(void *)(v38 + 24) = v39;
    uint64_t v40 = swift_allocObject();
    uint64_t v41 = v522;
    uint64_t v536 = v40;
    *(void *)(v40 + 16) = v640;
    *(void *)(v40 + 24) = v41;
    uint64_t v537 = swift_allocObject();
    *(unsigned char *)(v537 + 16) = v523;
    uint64_t v538 = swift_allocObject();
    *(unsigned char *)(v538 + 16) = v526;
    uint64_t v42 = swift_allocObject();
    uint64_t v524 = v42;
    *(void *)(v42 + 16) = v566;
    *(void *)(v42 + 24) = 0;
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v524;
    uint64_t v539 = v43;
    *(void *)(v43 + 16) = v641;
    *(void *)(v43 + 24) = v44;
    uint64_t v540 = swift_allocObject();
    *(unsigned char *)(v540 + 16) = 0;
    uint64_t v541 = swift_allocObject();
    *(unsigned char *)(v541 + 16) = v526;
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = v529;
    uint64_t v530 = v45;
    *(void *)(v45 + 16) = v642;
    *(void *)(v45 + 24) = v46;
    uint64_t v47 = swift_allocObject();
    uint64_t v48 = v530;
    uint64_t v543 = v47;
    *(void *)(v47 + 16) = v643;
    *(void *)(v47 + 24) = v48;
    uint64_t v545 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v542 = sub_1A8A78558();
    v544 = v49;
    swift_retain();
    uint64_t v50 = v531;
    uint64_t v51 = v544;
    *v544 = v644;
    v51[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v50;
    swift_retain();
    uint64_t v52 = v532;
    uint64_t v53 = v544;
    v544[2] = v645;
    v53[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v52;
    swift_retain();
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v533;
    uint64_t v55 = v544;
    v544[4] = v646;
    v55[5] = v54;
    swift_retain();
    uint64_t v56 = v534;
    uint64_t v57 = v544;
    v544[6] = v647;
    v57[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v56;
    swift_retain();
    uint64_t v58 = v535;
    id v59 = v544;
    v544[8] = v648;
    v59[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v58;
    swift_retain();
    id v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v536;
    id v61 = v544;
    v544[10] = v649;
    v61[11] = v60;
    swift_retain();
    uint64_t v62 = v537;
    id v63 = v544;
    v544[12] = v650;
    v63[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v62;
    swift_retain();
    uint64_t v64 = v538;
    id v65 = v544;
    v544[14] = v651;
    v65[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v64;
    swift_retain();
    id v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v539;
    uint64_t v67 = v544;
    v544[16] = v652;
    v67[17] = v66;
    swift_retain();
    uint64_t v68 = v540;
    uint64_t v69 = v544;
    v544[18] = v653;
    v69[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v68;
    swift_retain();
    uint64_t v70 = v541;
    uint64_t v71 = v544;
    v544[20] = v654;
    v71[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v70;
    swift_retain();
    uint64_t v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v543;
    uint64_t v73 = v544;
    v544[22] = v655;
    v73[23] = v72;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v546, (os_log_type_t)v547))
    {
      uint64_t v74 = v656;
      uint64_t v504 = (uint8_t *)sub_1A8A77888();
      uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v503 = 0;
      uint64_t v505 = sub_1A809E94C(0);
      uint64_t v506 = sub_1A809E94C(v503);
      uint64_t v507 = &v702;
      uint32_t v702 = v504;
      uint64_t v508 = &v701;
      uint64_t v701 = v505;
      v509 = &v700;
      uint64_t v700 = v506;
      sub_1A809E9A8(0, &v702);
      sub_1A809E9A8(4, v507);
      uint64_t v698 = v644;
      uint64_t v699 = v531;
      sub_1A809E9BC(&v698, (uint64_t)v507, (uint64_t)v508, (uint64_t)v509);
      uint64_t v510 = v74;
      if (v74)
      {
        __break(1u);
      }
      else
      {
        uint64_t v698 = v645;
        uint64_t v699 = v532;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v501 = 0;
        uint64_t v698 = v646;
        uint64_t v699 = v533;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v500 = 0;
        uint64_t v698 = v647;
        uint64_t v699 = v534;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v499 = 0;
        uint64_t v698 = v648;
        uint64_t v699 = v535;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v498 = 0;
        uint64_t v698 = v649;
        uint64_t v699 = v536;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v497 = 0;
        uint64_t v698 = v650;
        uint64_t v699 = v537;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v496 = 0;
        uint64_t v698 = v651;
        uint64_t v699 = v538;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v495 = 0;
        uint64_t v698 = v652;
        uint64_t v699 = v539;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v494 = 0;
        uint64_t v698 = v653;
        uint64_t v699 = v540;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v493 = 0;
        uint64_t v698 = v654;
        uint64_t v699 = v541;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        uint64_t v492 = 0;
        uint64_t v698 = v655;
        uint64_t v699 = v543;
        sub_1A809E9BC(&v698, (uint64_t)&v702, (uint64_t)&v701, (uint64_t)&v700);
        _os_log_impl(&dword_1A7EFF000, v546, (os_log_type_t)v547, "[%.*hhx-%.*X] EMActivity: Unable to get Inbox mailbox for account status.", v504, v519);
        uint64_t v491 = 0;
        sub_1A809EA08(v505);
        sub_1A809EA08(v506);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v667 + 8))(v676, v666);
    return (id)v677;
  }
  id v552 = v557;
  id v550 = v557;
  id v697 = v557;
  id v551 = objc_msgSend(v557, sel_objectID);
  if (!v551)
  {

    goto LABEL_9;
  }
  id v549 = v551;
  id v548 = v551;
  id v696 = v551;
  id v25 = v550;
  id v744 = v550;
  id v26 = v548;
  id v743 = v548;

LABEL_27:
  uint64_t v411 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744DB8);
  uint64_t v412 = sub_1A8A78558();
  uint64_t v410 = v138;
  sub_1A80C6754(MEMORY[0x1E4F5FC58], v138);
  id v409 = v743;
  id v139 = v743;
  uint64_t v413 = 0;
  unint64_t v140 = sub_1A80C678C();
  id v141 = v409;
  uint64_t v142 = v410;
  v410[4] = v140;
  v142[1] = v141;
  sub_1A80C6754(MEMORY[0x1E4F5FC48], v142 + 5);
  sub_1A80BC84C();
  sub_1A809BE34();
  uint64_t v143 = v410;
  v410[9] = MEMORY[0x1E4FBB550];
  v143[6] = v144;
  sub_1A80C6754(MEMORY[0x1E4F5FC60], v143 + 10);
  uint64_t v145 = v410;
  uint64_t v146 = v412;
  v410[14] = MEMORY[0x1E4FBB390];
  *((unsigned char *)v145 + 88) = 1;
  sub_1A809B5EC();
  uint64_t v415 = v146;
  uint64_t v414 = type metadata accessor for EMActivityUserInfoKey();
  unint64_t v416 = sub_1A80A3570();
  uint64_t v730 = sub_1A8A76048();
  if ((v695 & 1) == 0)
  {
    id v408 = v744;
    id v147 = v744;
    sub_1A80BCAEC(v658);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v660 + 48))(v658, 1, v659) != 1)
    {
      uint64_t v149 = v663;
      (*(void (**)(char *, uint64_t, uint64_t))(v660 + 32))(v665, v658, v659);

      id v402 = (id)*MEMORY[0x1E4F5FC50];
      id v150 = v402;
      (*(void (**)(char *, char *, uint64_t))(v660 + 16))(v149, v665, v659);
      uint64_t v403 = sub_1A8A74B98();
      unint64_t v151 = sub_1A80C731C();
      uint64_t v405 = v707;
      v707[3] = v151;
      v707[0] = v403;
      uint64_t v404 = &v706;
      id v706 = v402;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743E50);
      sub_1A8A761E8();
      uint64_t v407 = *(void (**)(char *, uint64_t))(v660 + 8);
      uint64_t v406 = v660 + 8;
      v407(v663, v659);
      v407(v665, v659);
    }
    else
    {
      sub_1A80C726C(v658);
    }
  }
  uint64_t v395 = v730;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  id v396 = (id)sub_1A8A76008();
  swift_bridgeObjectRelease();
  id v397 = objc_msgSend(v689, sel_startActivityOfType_userInfo_, 1, v396);

  id v729 = v397;
  uint64_t v400 = sub_1A80BC364();
  uint64_t v398 = v152;
  int v399 = v153;
  id v401 = objc_msgSend(v397, sel_objectID);
  sub_1A80BC4CC(v400, v398, v399 & 1, (uint64_t)v401);

  if ((v695 & 1) == 0)
  {
    uint64_t v394 = v694;
    uint64_t v391 = v694;
    uint64_t v728 = v694;
    uint64_t v392 = v726;
    v726[0] = v694;
    int v393 = &v725;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9746FD0);
    sub_1A8A77018();
    swift_endAccess();
    uint64_t v723 = v726[1];
    char v724 = v727 & 1;
    BOOL v390 = (v727 & 1) == 0;
    BOOL v722 = v390;
    if (v390)
    {
      uint64_t v154 = v672;
      v347 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A809A0C4(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v682);
      (*(void (**)(char *, uint64_t, uint64_t))(v667 + 16))(v154, v682, v666);
      sub_1A809A1D4(v682);
      swift_retain();
      swift_retain();
      sub_1A809A0C4(v559 + *v347, v686);
      uint64_t v155 = (unsigned __int8 *)(v686 + *(int *)(v678 + 20));
      int v348 = *v155;
      int v349 = *((_DWORD *)v155 + 1);
      sub_1A809A1D4(v686);
      swift_release();
      uint64_t v351 = 24;
      uint64_t v367 = 7;
      uint64_t v156 = swift_allocObject();
      int v157 = v349;
      uint64_t v358 = v156;
      *(unsigned char *)(v156 + 16) = v348;
      *(_DWORD *)(v156 + 20) = v157;
      sub_1A809EAE4();
      sub_1A809EAE4();
      sub_1A809EAE4();
      uint64_t v158 = swift_allocObject();
      int v159 = v349;
      uint64_t v350 = v158;
      *(unsigned char *)(v158 + 16) = v348;
      *(_DWORD *)(v158 + 20) = v159;
      swift_retain();
      uint64_t v366 = 32;
      uint64_t v160 = swift_allocObject();
      uint64_t v161 = v350;
      uint64_t v363 = v160;
      *(void *)(v160 + 16) = v612;
      *(void *)(v160 + 24) = v161;
      sub_1A809EAE4();
      sub_1A809EAE4();
      swift_release();
      swift_release();
      uint64_t v352 = swift_allocObject();
      *(void *)(v352 + 16) = v391;
      swift_retain();
      uint64_t v162 = swift_allocObject();
      uint64_t v163 = v352;
      uint64_t v368 = v162;
      *(void *)(v162 + 16) = v613;
      *(void *)(v162 + 24) = v163;
      swift_release();
      uint64_t v388 = sub_1A8A754B8();
      int v389 = sub_1A8A77468();
      uint64_t v355 = &v713;
      uint64_t v713 = 33;
      unint64_t v353 = sub_1A809EBD0();
      unint64_t v354 = sub_1A809EC4C();
      sub_1A809ECC8();
      sub_1A8A76B48();
      uint32_t v356 = v714;
      uint64_t v365 = 17;
      uint64_t v370 = swift_allocObject();
      int v360 = 16;
      *(unsigned char *)(v370 + 16) = 16;
      uint64_t v371 = swift_allocObject();
      int v362 = 4;
      *(unsigned char *)(v371 + 16) = 4;
      uint64_t v164 = swift_allocObject();
      uint64_t v357 = v164;
      *(void *)(v164 + 16) = v562;
      *(void *)(v164 + 24) = 0;
      uint64_t v165 = swift_allocObject();
      uint64_t v166 = v357;
      uint64_t v372 = v165;
      *(void *)(v165 + 16) = v614;
      *(void *)(v165 + 24) = v166;
      uint64_t v373 = swift_allocObject();
      *(unsigned char *)(v373 + 16) = 0;
      uint64_t v374 = swift_allocObject();
      *(unsigned char *)(v374 + 16) = 1;
      uint64_t v167 = swift_allocObject();
      uint64_t v168 = v358;
      uint64_t v359 = v167;
      *(void *)(v167 + 16) = v615;
      *(void *)(v167 + 24) = v168;
      uint64_t v169 = swift_allocObject();
      uint64_t v170 = v359;
      uint64_t v375 = v169;
      *(void *)(v169 + 16) = v616;
      *(void *)(v169 + 24) = v170;
      uint64_t v376 = swift_allocObject();
      *(unsigned char *)(v376 + 16) = v360;
      uint64_t v377 = swift_allocObject();
      *(unsigned char *)(v377 + 16) = v362;
      uint64_t v171 = swift_allocObject();
      uint64_t v361 = v171;
      *(void *)(v171 + 16) = v566;
      *(void *)(v171 + 24) = 0;
      uint64_t v172 = swift_allocObject();
      uint64_t v173 = v361;
      uint64_t v378 = v172;
      *(void *)(v172 + 16) = v617;
      *(void *)(v172 + 24) = v173;
      uint64_t v379 = swift_allocObject();
      *(unsigned char *)(v379 + 16) = 0;
      uint64_t v380 = swift_allocObject();
      *(unsigned char *)(v380 + 16) = v362;
      uint64_t v174 = swift_allocObject();
      uint64_t v175 = v363;
      uint64_t v364 = v174;
      *(void *)(v174 + 16) = v618;
      *(void *)(v174 + 24) = v175;
      uint64_t v176 = swift_allocObject();
      uint64_t v177 = v364;
      uint64_t v381 = v176;
      *(void *)(v176 + 16) = v619;
      *(void *)(v176 + 24) = v177;
      uint64_t v382 = swift_allocObject();
      *(unsigned char *)(v382 + 16) = 32;
      uint64_t v383 = swift_allocObject();
      *(unsigned char *)(v383 + 16) = 8;
      uint64_t v178 = swift_allocObject();
      uint64_t v179 = v368;
      uint64_t v369 = v178;
      *(void *)(v178 + 16) = v620;
      *(void *)(v178 + 24) = v179;
      uint64_t v180 = swift_allocObject();
      uint64_t v181 = v369;
      uint64_t v385 = v180;
      *(void *)(v180 + 16) = v621;
      *(void *)(v180 + 24) = v181;
      uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
      uint64_t v384 = sub_1A8A78558();
      v386 = v182;
      swift_retain();
      uint64_t v183 = v370;
      uint64_t v184 = v386;
      uint64_t *v386 = v622;
      v184[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v183;
      swift_retain();
      uint64_t v185 = v371;
      uint64_t v186 = v386;
      v386[2] = v623;
      v186[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v185;
      swift_retain();
      uint32_t v187 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v372;
      uint64_t v188 = v386;
      v386[4] = v624;
      v188[5] = v187;
      swift_retain();
      uint64_t v189 = v373;
      id v190 = v386;
      v386[6] = v625;
      v190[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v189;
      swift_retain();
      uint64_t v191 = v374;
      char v192 = v386;
      v386[8] = v626;
      v192[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v191;
      swift_retain();
      uint64_t v193 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v375;
      uint64_t v194 = v386;
      v386[10] = v627;
      v194[11] = v193;
      swift_retain();
      uint64_t v195 = v376;
      uint64_t v196 = v386;
      v386[12] = v628;
      v196[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v195;
      swift_retain();
      uint64_t v197 = v377;
      v198 = v386;
      v386[14] = v629;
      v198[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v197;
      swift_retain();
      uint64_t v199 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v378;
      uint64_t v200 = v386;
      v386[16] = v630;
      v200[17] = v199;
      swift_retain();
      uint64_t v201 = v379;
      uint64_t v202 = v386;
      v386[18] = v631;
      v202[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v201;
      swift_retain();
      uint64_t v203 = v380;
      uint32_t v204 = v386;
      v386[20] = v632;
      v204[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v203;
      swift_retain();
      id v205 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v381;
      uint64_t v206 = v386;
      v386[22] = v633;
      v206[23] = v205;
      swift_retain();
      uint64_t v207 = v382;
      uint64_t v208 = v386;
      v386[24] = v634;
      v208[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v207;
      swift_retain();
      uint64_t v209 = v383;
      char v210 = v386;
      v386[26] = v635;
      v210[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v209;
      swift_retain();
      v211 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v385;
      v212 = v386;
      v386[28] = v636;
      v212[29] = v211;
      sub_1A809B5EC();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v388, (os_log_type_t)v389))
      {
        uint64_t v213 = v656;
        uint64_t v340 = (uint8_t *)sub_1A8A77888();
        uint64_t v339 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
        uint64_t v341 = sub_1A809E94C(0);
        uint64_t v342 = sub_1A809E94C(1);
        uint64_t v343 = &v712;
        uint64_t v712 = v340;
        uint64_t v344 = &v711;
        uint64_t v711 = v341;
        unint64_t v345 = &v710;
        uint64_t v710 = v342;
        sub_1A809E9A8(2, &v712);
        sub_1A809E9A8(5, v343);
        char v708 = v622;
        uint64_t v709 = v370;
        sub_1A809E9BC(&v708, (uint64_t)v343, (uint64_t)v344, (uint64_t)v345);
        uint64_t v346 = v213;
        if (v213)
        {
          __break(1u);
        }
        else
        {
          char v708 = v623;
          uint64_t v709 = v371;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v338 = 0;
          char v708 = v624;
          uint64_t v709 = v372;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v337 = 0;
          char v708 = v625;
          uint64_t v709 = v373;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v336 = 0;
          char v708 = v626;
          uint64_t v709 = v374;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v335 = 0;
          char v708 = v627;
          uint64_t v709 = v375;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v334 = 0;
          char v708 = v628;
          uint64_t v709 = v376;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v333 = 0;
          char v708 = v629;
          uint64_t v709 = v377;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v332 = 0;
          char v708 = v630;
          uint64_t v709 = v378;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v331 = 0;
          char v708 = v631;
          uint64_t v709 = v379;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v330 = 0;
          char v708 = v632;
          uint64_t v709 = v380;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v329 = 0;
          char v708 = v633;
          uint64_t v709 = v381;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v328 = 0;
          char v708 = v634;
          uint64_t v709 = v382;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v327 = 0;
          char v708 = v635;
          uint64_t v709 = v383;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          uint64_t v326 = 0;
          char v708 = v636;
          uint64_t v709 = v385;
          sub_1A809E9BC(&v708, (uint64_t)&v712, (uint64_t)&v711, (uint64_t)&v710);
          _os_log_impl(&dword_1A7EFF000, v388, (os_log_type_t)v389, "[%.*hhx-%.*X] Created EMActivity for '%s'. Removed pending.", v340, v356);
          sub_1A809EA08(v341);
          sub_1A809EA08(v342);
          sub_1A8A77868();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v667 + 8))(v672, v666);
    }
    else
    {
      uint64_t v214 = v670;
      int v283 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
      sub_1A809A0C4(v559 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v680);
      (*(void (**)(char *, uint64_t, uint64_t))(v667 + 16))(v214, v680, v666);
      sub_1A809A1D4(v680);
      swift_retain();
      swift_retain();
      sub_1A809A0C4(v559 + *v283, v686);
      char v215 = (unsigned __int8 *)(v686 + *(int *)(v678 + 20));
      int v284 = *v215;
      int v285 = *((_DWORD *)v215 + 1);
      sub_1A809A1D4(v686);
      swift_release();
      uint64_t v287 = 24;
      uint64_t v303 = 7;
      uint64_t v216 = swift_allocObject();
      int v217 = v285;
      uint64_t v294 = v216;
      *(unsigned char *)(v216 + 16) = v284;
      *(_DWORD *)(v216 + 20) = v217;
      sub_1A809EAE4();
      sub_1A809EAE4();
      sub_1A809EAE4();
      uint64_t v218 = swift_allocObject();
      int v219 = v285;
      uint64_t v286 = v218;
      *(unsigned char *)(v218 + 16) = v284;
      *(_DWORD *)(v218 + 20) = v219;
      swift_retain();
      uint64_t v302 = 32;
      uint64_t v220 = swift_allocObject();
      uint64_t v221 = v286;
      uint64_t v299 = v220;
      *(void *)(v220 + 16) = v587;
      *(void *)(v220 + 24) = v221;
      sub_1A809EAE4();
      sub_1A809EAE4();
      swift_release();
      swift_release();
      uint64_t v288 = swift_allocObject();
      *(void *)(v288 + 16) = v391;
      swift_retain();
      uint64_t v222 = swift_allocObject();
      uint64_t v223 = v288;
      uint64_t v304 = v222;
      *(void *)(v222 + 16) = v588;
      *(void *)(v222 + 24) = v223;
      swift_release();
      unint64_t v324 = sub_1A8A754B8();
      int v325 = sub_1A8A77468();
      uint64_t v291 = &v720;
      uint64_t v720 = 33;
      unint64_t v289 = sub_1A809EBD0();
      unint64_t v290 = sub_1A809EC4C();
      sub_1A809ECC8();
      sub_1A8A76B48();
      uint32_t v292 = v721;
      uint64_t v301 = 17;
      uint64_t v306 = swift_allocObject();
      int v296 = 16;
      *(unsigned char *)(v306 + 16) = 16;
      uint64_t v307 = swift_allocObject();
      int v298 = 4;
      *(unsigned char *)(v307 + 16) = 4;
      uint64_t v224 = swift_allocObject();
      uint64_t v293 = v224;
      *(void *)(v224 + 16) = v562;
      *(void *)(v224 + 24) = 0;
      uint64_t v225 = swift_allocObject();
      uint64_t v226 = v293;
      uint64_t v308 = v225;
      *(void *)(v225 + 16) = v589;
      *(void *)(v225 + 24) = v226;
      uint64_t v309 = swift_allocObject();
      *(unsigned char *)(v309 + 16) = 0;
      uint64_t v310 = swift_allocObject();
      *(unsigned char *)(v310 + 16) = 1;
      uint64_t v227 = swift_allocObject();
      uint64_t v228 = v294;
      uint64_t v295 = v227;
      *(void *)(v227 + 16) = v590;
      *(void *)(v227 + 24) = v228;
      uint64_t v229 = swift_allocObject();
      uint64_t v230 = v295;
      uint64_t v311 = v229;
      *(void *)(v229 + 16) = v591;
      *(void *)(v229 + 24) = v230;
      uint64_t v312 = swift_allocObject();
      *(unsigned char *)(v312 + 16) = v296;
      uint64_t v313 = swift_allocObject();
      *(unsigned char *)(v313 + 16) = v298;
      uint64_t v231 = swift_allocObject();
      uint64_t v297 = v231;
      *(void *)(v231 + 16) = v566;
      *(void *)(v231 + 24) = 0;
      uint64_t v232 = swift_allocObject();
      uint64_t v233 = v297;
      uint64_t v314 = v232;
      *(void *)(v232 + 16) = v592;
      *(void *)(v232 + 24) = v233;
      uint64_t v315 = swift_allocObject();
      *(unsigned char *)(v315 + 16) = 0;
      uint64_t v316 = swift_allocObject();
      *(unsigned char *)(v316 + 16) = v298;
      uint64_t v234 = swift_allocObject();
      uint64_t v235 = v299;
      uint64_t v300 = v234;
      *(void *)(v234 + 16) = v593;
      *(void *)(v234 + 24) = v235;
      uint64_t v236 = swift_allocObject();
      uint64_t v237 = v300;
      uint64_t v317 = v236;
      *(void *)(v236 + 16) = v594;
      *(void *)(v236 + 24) = v237;
      uint64_t v318 = swift_allocObject();
      *(unsigned char *)(v318 + 16) = 32;
      uint64_t v319 = swift_allocObject();
      *(unsigned char *)(v319 + 16) = 8;
      uint64_t v238 = swift_allocObject();
      uint64_t v239 = v304;
      uint64_t v305 = v238;
      *(void *)(v238 + 16) = v595;
      *(void *)(v238 + 24) = v239;
      uint64_t v240 = swift_allocObject();
      uint64_t v241 = v305;
      uint64_t v321 = v240;
      *(void *)(v240 + 16) = v596;
      *(void *)(v240 + 24) = v241;
      uint64_t v323 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
      uint64_t v320 = sub_1A8A78558();
      v322 = v242;
      swift_retain();
      uint64_t v243 = v306;
      int v244 = v322;
      id *v322 = v597;
      v244[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v243;
      swift_retain();
      uint64_t v245 = v307;
      unint64_t v246 = v322;
      v322[2] = v598;
      v246[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v245;
      swift_retain();
      unint64_t v247 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v308;
      unint64_t v248 = v322;
      v322[4] = v599;
      v248[5] = v247;
      swift_retain();
      uint64_t v249 = v309;
      uint32_t v250 = v322;
      v322[6] = v600;
      v250[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v249;
      swift_retain();
      uint64_t v251 = v310;
      uint64_t v252 = v322;
      v322[8] = v601;
      v252[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v251;
      swift_retain();
      uint64_t v253 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v311;
      int v254 = v322;
      v322[10] = v602;
      v254[11] = v253;
      swift_retain();
      uint64_t v255 = v312;
      int v256 = v322;
      v322[12] = v603;
      v256[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v255;
      swift_retain();
      uint64_t v257 = v313;
      uint64_t v258 = v322;
      v322[14] = v604;
      v258[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v257;
      swift_retain();
      uint64_t v259 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v314;
      uint64_t v260 = v322;
      v322[16] = v605;
      v260[17] = v259;
      swift_retain();
      uint64_t v261 = v315;
      uint64_t v262 = v322;
      v322[18] = v606;
      v262[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v261;
      swift_retain();
      uint64_t v263 = v316;
      uint64_t v264 = v322;
      v322[20] = v607;
      v264[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v263;
      swift_retain();
      uint64_t v265 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v317;
      uint64_t v266 = v322;
      v322[22] = v608;
      v266[23] = v265;
      swift_retain();
      uint64_t v267 = v318;
      uint64_t v268 = v322;
      v322[24] = v609;
      v268[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v267;
      swift_retain();
      uint64_t v269 = v319;
      uint64_t v270 = v322;
      v322[26] = v610;
      v270[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v269;
      swift_retain();
      uint64_t v271 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v321;
      uint64_t v272 = v322;
      v322[28] = v611;
      v272[29] = v271;
      sub_1A809B5EC();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v324, (os_log_type_t)v325))
      {
        uint64_t v273 = v656;
        uint64_t v276 = (uint8_t *)sub_1A8A77888();
        v275[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
        uint64_t v277 = sub_1A809E94C(0);
        uint64_t v278 = sub_1A809E94C(1);
        uint64_t v279 = &v719;
        uint64_t v719 = v276;
        v280 = &v718;
        uint64_t v718 = v277;
        uint64_t v281 = &v717;
        uint64_t v717 = v278;
        sub_1A809E9A8(2, &v719);
        sub_1A809E9A8(5, v279);
        uint64_t v715 = v597;
        uint64_t v716 = v306;
        sub_1A809E9BC(&v715, (uint64_t)v279, (uint64_t)v280, (uint64_t)v281);
        uint64_t v282 = v273;
        if (v273)
        {
          __break(1u);
        }
        else
        {
          uint64_t v715 = v598;
          uint64_t v716 = v307;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[13] = 0;
          uint64_t v715 = v599;
          uint64_t v716 = v308;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[12] = 0;
          uint64_t v715 = v600;
          uint64_t v716 = v309;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[11] = 0;
          uint64_t v715 = v601;
          uint64_t v716 = v310;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[10] = 0;
          uint64_t v715 = v602;
          uint64_t v716 = v311;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[9] = 0;
          uint64_t v715 = v603;
          uint64_t v716 = v312;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[8] = 0;
          uint64_t v715 = v604;
          uint64_t v716 = v313;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[7] = 0;
          uint64_t v715 = v605;
          uint64_t v716 = v314;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[6] = 0;
          uint64_t v715 = v606;
          uint64_t v716 = v315;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[5] = 0;
          uint64_t v715 = v607;
          uint64_t v716 = v316;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[4] = 0;
          uint64_t v715 = v608;
          uint64_t v716 = v317;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[3] = 0;
          uint64_t v715 = v609;
          uint64_t v716 = v318;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[2] = 0;
          uint64_t v715 = v610;
          uint64_t v716 = v319;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          v275[1] = 0;
          uint64_t v715 = v611;
          uint64_t v716 = v321;
          sub_1A809E9BC(&v715, (uint64_t)&v719, (uint64_t)&v718, (uint64_t)&v717);
          _os_log_impl(&dword_1A7EFF000, v324, (os_log_type_t)v325, "[%.*hhx-%.*X] Created EMActivity for '%s'.", v276, v292);
          sub_1A809EA08(v277);
          sub_1A809EA08(v278);
          sub_1A8A77868();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v667 + 8))(v670, v666);
    }
  }
  sub_1A809F94C();

  return v397;
}

void sub_1A80B3B5C(uint64_t *a1, id a2, uint64_t a3)
{
  uint64_t v8 = 0;
  id v7 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = *a1;
  id v7 = a2;
  uint64_t v6 = a3;
  uint64_t v5 = v8;
  id v3 = a2;
  sub_1A80AB0A0(&v5, a2);
}

id *sub_1A80B3BD4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v619 = v2;
  uint64_t v759 = v3;
  uint64_t v752 = v4;
  id v753 = v5;
  v754 = v6;
  uint64_t v755 = v7;
  v756 = v8;
  uint64_t v757 = v9;
  uint64_t v758 = v10;
  uint64_t v740 = 0;
  uint64_t v620 = sub_1A809EB30;
  uint64_t v621 = sub_1A80C5310;
  unint64_t v622 = sub_1A809EAD8;
  v623 = sub_1A809EEB8;
  unint64_t v624 = sub_1A809EAB8;
  v625 = sub_1A809F1F4;
  unint64_t v626 = sub_1A809EBC4;
  v627 = sub_1A809EEB8;
  uint64_t v628 = sub_1A809EBB8;
  unint64_t v629 = sub_1A809F634;
  uint64_t v630 = sub_1A80C5358;
  unint64_t v631 = sub_1A80C40EC;
  uint64_t v632 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v633 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v634 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  unint64_t v635 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v637 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v638 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v639 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v640 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  unint64_t v641 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v642 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v643 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  unint64_t v644 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v645 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v646 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v647 = sub_1A809EB30;
  v648 = sub_1A80C5310;
  v649 = sub_1A809EEB8;
  uint64_t v650 = sub_1A809EAB8;
  id v651 = sub_1A809F1F4;
  v652 = sub_1A809EEB8;
  id v653 = sub_1A809EBB8;
  uint64_t v654 = sub_1A809F634;
  uint64_t v655 = sub_1A80C5358;
  uint64_t v656 = sub_1A80C40EC;
  unint64_t v657 = sub_1A80C8EDC;
  uint64_t v658 = sub_1A80C40EC;
  uint64_t v659 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v660 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v661 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  unint64_t v662 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  v663 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v664 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  v665 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v666 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v667 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v668 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v669 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v670 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  unint64_t v671 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v672 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v673 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  id v674 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v675 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  char v676 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v677 = sub_1A809EB30;
  uint64_t v678 = sub_1A80C5310;
  unint64_t v679 = sub_1A809EEB8;
  uint64_t v680 = sub_1A809EAB8;
  unint64_t v681 = sub_1A809F1F4;
  uint64_t v682 = sub_1A809EEB8;
  unint64_t v683 = sub_1A809EBB8;
  uint64_t v684 = sub_1A809F634;
  unint64_t v685 = sub_1A80C5358;
  uint64_t v686 = sub_1A80C40EC;
  unint64_t v687 = sub_1A80C8894;
  uint64_t v688 = sub_1A80C40EC;
  id v689 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v690 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v691 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  unint64_t v692 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v693 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v694 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  int v695 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  id v696 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  id v697 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v698 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v699 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v700 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  uint64_t v701 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint32_t v702 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v703 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint32_t v704 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v705 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  id v706 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v707 = sub_1A809EB30;
  char v708 = sub_1A80C5310;
  uint64_t v709 = sub_1A809EEB8;
  uint64_t v710 = sub_1A809EAB8;
  uint64_t v711 = sub_1A809F1F4;
  uint64_t v712 = sub_1A809EEB8;
  uint64_t v713 = sub_1A809EBB8;
  uint32_t v714 = sub_1A809F634;
  uint64_t v715 = sub_1A80C5358;
  uint64_t v716 = sub_1A80C40EC;
  uint64_t v717 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v718 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v719 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v720 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint32_t v721 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  BOOL v722 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v723 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  char v724 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v725 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v726 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  char v727 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v728 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  id v729 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v730 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  id v731 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  v828 = 0;
  uint64_t v826 = 0;
  char v827 = 0;
  uint64_t v825 = 0;
  uint64_t v824 = 0;
  uint64_t v822 = 0;
  uint64_t v823 = 0;
  uint64_t v820 = 0;
  uint64_t v821 = 0;
  uint64_t v819 = 0;
  v818 = 0;
  id v815 = 0;
  v814 = 0;
  uint64_t v813 = 0;
  uint64_t v732 = 0;
  uint64_t v805 = 0;
  uint64_t v794 = 0;
  uint64_t v795 = 0;
  char v796 = 0;
  unint64_t v791 = 0;
  unint64_t v792 = 0;
  char v793 = 0;
  uint64_t v785 = 0;
  uint64_t v784 = 0;
  uint64_t v781 = 0;
  uint64_t v773 = 0;
  uint64_t v733 = _s6LoggerVMa();
  unint64_t v734 = (*(void *)(*(void *)(v733 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v735 = (uint64_t)&v305 - v734;
  unint64_t v736 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v12);
  uint64_t v737 = (uint64_t)&v305 - v736;
  unint64_t v738 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v14);
  uint64_t v739 = (uint64_t)&v305 - v738;
  uint64_t v741 = sub_1A8A754D8();
  uint64_t v742 = *(void *)(v741 - 8);
  uint64_t v743 = v741 - 8;
  unint64_t v744 = (*(void *)(v742 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v740);
  uint64_t v745 = (char *)&v305 - v744;
  unint64_t v746 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v16);
  uint64_t v747 = (char *)&v305 - v746;
  unint64_t v748 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v18);
  char v749 = (char *)&v305 - v748;
  unint64_t v750 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v20);
  v751 = (char *)&v305 - v750;
  unint64_t v760 = (*(void *)(*(void *)(_s15MailboxActivityVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v759);
  v761 = (id *)((char *)&v305 - v760);
  v828 = (char *)&v305 - v760;
  uint64_t v762 = *v21;
  int v763 = *((unsigned __int8 *)v21 + 8);
  uint64_t v826 = v762;
  char v827 = v763 & 1;
  uint64_t v825 = v22;
  uint64_t v824 = v23;
  uint64_t v822 = v24;
  uint64_t v823 = v25;
  uint64_t v820 = v26;
  uint64_t v821 = v27;
  uint64_t v819 = v28;
  v818 = v1;
  sub_1A80C777C(v1, (uint64_t *)((char *)&v305 - v760));
  id v764 = *v1;
  id v29 = v764;
  if (v764)
  {
    id v618 = v764;
    id v616 = v764;
    id v815 = v764;
    unint64_t v617 = (void *)sub_1A80BBD54();
    if (v617)
    {
      if (v617 == (void *)1)
      {
        id v178 = *v761;
        id *v761 = 0;

        id v442 = objc_msgSend(v616, sel_objectID);
        objc_msgSend(v753, sel_activityWithID_finishedWithError_);

        if ((v763 & 1) == 0)
        {
          uint64_t v441 = v762;
          uint64_t v402 = v762;
          uint64_t v805 = v762;
          id v396 = &v804;
          uint64_t v804 = v762;
          id v397 = objc_msgSend(v616, sel_objectID);
          v756(v396);
          uint64_t v179 = v747;

          (*(void (**)(char *, uint64_t, uint64_t))(v742 + 16))(v179, v758, v741);
          sub_1A809A0C4(v758, v739);
          sub_1A809A0C4(v739, v737);
          sub_1A809A14C(v739, v735);
          uint64_t v180 = (unsigned __int8 *)(v737 + *(int *)(v733 + 20));
          int v398 = *v180;
          int v399 = *((_DWORD *)v180 + 1);
          sub_1A809A1D4(v737);
          uint64_t v401 = 24;
          uint64_t v418 = 7;
          uint64_t v181 = swift_allocObject();
          int v182 = v399;
          uint64_t v409 = v181;
          *(unsigned char *)(v181 + 16) = v398;
          *(_DWORD *)(v181 + 20) = v182;
          sub_1A809EAE4();
          sub_1A809EAE4();
          sub_1A809EAE4();
          uint64_t v183 = swift_allocObject();
          int v184 = v399;
          uint64_t v400 = v183;
          *(unsigned char *)(v183 + 16) = v398;
          *(_DWORD *)(v183 + 20) = v184;
          swift_retain();
          uint64_t v417 = 32;
          uint64_t v185 = swift_allocObject();
          uint64_t v186 = v400;
          uint64_t v414 = v185;
          *(void *)(v185 + 16) = v620;
          *(void *)(v185 + 24) = v186;
          sub_1A809EAE4();
          sub_1A809EAE4();
          swift_release();
          sub_1A809A1D4(v735);
          uint64_t v403 = swift_allocObject();
          *(void *)(v403 + 16) = v402;
          swift_retain();
          uint64_t v187 = swift_allocObject();
          uint64_t v188 = v403;
          uint64_t v419 = v187;
          *(void *)(v187 + 16) = v621;
          *(void *)(v187 + 24) = v188;
          swift_release();
          int v439 = sub_1A8A754B8();
          int v440 = sub_1A8A77468();
          uint64_t v406 = &v802;
          uint64_t v802 = 33;
          unint64_t v404 = sub_1A809EBD0();
          unint64_t v405 = sub_1A809EC4C();
          sub_1A809ECC8();
          sub_1A8A76B48();
          uint32_t v407 = v803;
          uint64_t v416 = 17;
          uint64_t v421 = swift_allocObject();
          int v411 = 16;
          *(unsigned char *)(v421 + 16) = 16;
          uint64_t v422 = swift_allocObject();
          int v413 = 4;
          *(unsigned char *)(v422 + 16) = 4;
          uint64_t v189 = swift_allocObject();
          uint64_t v408 = v189;
          *(void *)(v189 + 16) = v622;
          *(void *)(v189 + 24) = 0;
          uint64_t v190 = swift_allocObject();
          uint64_t v191 = v408;
          uint64_t v423 = v190;
          *(void *)(v190 + 16) = v623;
          *(void *)(v190 + 24) = v191;
          uint64_t v424 = swift_allocObject();
          *(unsigned char *)(v424 + 16) = 0;
          uint64_t v425 = swift_allocObject();
          *(unsigned char *)(v425 + 16) = 1;
          uint64_t v192 = swift_allocObject();
          uint64_t v193 = v409;
          uint64_t v410 = v192;
          *(void *)(v192 + 16) = v624;
          *(void *)(v192 + 24) = v193;
          uint64_t v194 = swift_allocObject();
          uint64_t v195 = v410;
          uint64_t v426 = v194;
          *(void *)(v194 + 16) = v625;
          *(void *)(v194 + 24) = v195;
          uint64_t v427 = swift_allocObject();
          *(unsigned char *)(v427 + 16) = v411;
          uint64_t v428 = swift_allocObject();
          *(unsigned char *)(v428 + 16) = v413;
          uint64_t v196 = swift_allocObject();
          uint64_t v412 = v196;
          *(void *)(v196 + 16) = v626;
          *(void *)(v196 + 24) = 0;
          uint64_t v197 = swift_allocObject();
          uint64_t v198 = v412;
          uint64_t v429 = v197;
          *(void *)(v197 + 16) = v627;
          *(void *)(v197 + 24) = v198;
          uint64_t v430 = swift_allocObject();
          *(unsigned char *)(v430 + 16) = 0;
          uint64_t v431 = swift_allocObject();
          *(unsigned char *)(v431 + 16) = v413;
          uint64_t v199 = swift_allocObject();
          uint64_t v200 = v414;
          uint64_t v415 = v199;
          *(void *)(v199 + 16) = v628;
          *(void *)(v199 + 24) = v200;
          uint64_t v201 = swift_allocObject();
          uint64_t v202 = v415;
          uint64_t v432 = v201;
          *(void *)(v201 + 16) = v629;
          *(void *)(v201 + 24) = v202;
          uint64_t v433 = swift_allocObject();
          *(unsigned char *)(v433 + 16) = 32;
          uint64_t v434 = swift_allocObject();
          *(unsigned char *)(v434 + 16) = 8;
          uint64_t v203 = swift_allocObject();
          uint64_t v204 = v419;
          uint64_t v420 = v203;
          *(void *)(v203 + 16) = v630;
          *(void *)(v203 + 24) = v204;
          uint64_t v205 = swift_allocObject();
          uint64_t v206 = v420;
          uint64_t v436 = v205;
          *(void *)(v205 + 16) = v631;
          *(void *)(v205 + 24) = v206;
          uint64_t v438 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
          uint64_t v435 = sub_1A8A78558();
          uint64_t v437 = v207;
          swift_retain();
          uint64_t v208 = v421;
          uint64_t v209 = v437;
          uint64_t *v437 = v632;
          v209[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v208;
          swift_retain();
          uint64_t v210 = v422;
          v211 = v437;
          v437[2] = v633;
          v211[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v210;
          swift_retain();
          v212 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v423;
          uint64_t v213 = v437;
          v437[4] = v634;
          v213[5] = v212;
          swift_retain();
          uint64_t v214 = v424;
          char v215 = v437;
          v437[6] = v635;
          v215[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v214;
          swift_retain();
          uint64_t v216 = v425;
          int v217 = v437;
          v437[8] = v636;
          v217[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v216;
          swift_retain();
          uint64_t v218 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v426;
          int v219 = v437;
          v437[10] = v637;
          v219[11] = v218;
          swift_retain();
          uint64_t v220 = v427;
          uint64_t v221 = v437;
          v437[12] = v638;
          v221[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v220;
          swift_retain();
          uint64_t v222 = v428;
          uint64_t v223 = v437;
          v437[14] = v639;
          v223[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v222;
          swift_retain();
          uint64_t v224 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v429;
          uint64_t v225 = v437;
          v437[16] = v640;
          v225[17] = v224;
          swift_retain();
          uint64_t v226 = v430;
          uint64_t v227 = v437;
          v437[18] = v641;
          v227[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v226;
          swift_retain();
          uint64_t v228 = v431;
          uint64_t v229 = v437;
          v437[20] = v642;
          v229[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v228;
          swift_retain();
          uint64_t v230 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v432;
          uint64_t v231 = v437;
          v437[22] = v643;
          v231[23] = v230;
          swift_retain();
          uint64_t v232 = v433;
          uint64_t v233 = v437;
          v437[24] = v644;
          v233[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v232;
          swift_retain();
          uint64_t v234 = v434;
          uint64_t v235 = v437;
          v437[26] = v645;
          v235[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v234;
          swift_retain();
          uint64_t v236 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v436;
          uint64_t v237 = v437;
          v437[28] = v646;
          v237[29] = v236;
          sub_1A809B5EC();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v439, (os_log_type_t)v440))
          {
            uint64_t v238 = v732;
            int v389 = (uint8_t *)sub_1A8A77888();
            uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
            uint64_t v390 = sub_1A809E94C(0);
            uint64_t v391 = sub_1A809E94C(1);
            uint64_t v392 = &v801;
            v801 = v389;
            int v393 = &v800;
            uint64_t v800 = v390;
            uint64_t v394 = &v799;
            uint64_t v799 = v391;
            sub_1A809E9A8(2, &v801);
            sub_1A809E9A8(5, v392);
            v797 = v632;
            uint64_t v798 = v421;
            sub_1A809E9BC(&v797, (uint64_t)v392, (uint64_t)v393, (uint64_t)v394);
            uint64_t v395 = v238;
            if (v238)
            {
              __break(1u);
            }
            else
            {
              v797 = v633;
              uint64_t v798 = v422;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v387 = 0;
              uint64_t v239 = v387;
              v797 = v634;
              uint64_t v798 = v423;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v386 = v239;
              v797 = v635;
              uint64_t v798 = v424;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v385 = 0;
              v797 = v636;
              uint64_t v798 = v425;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v384 = 0;
              v797 = v637;
              uint64_t v798 = v426;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v383 = 0;
              v797 = v638;
              uint64_t v798 = v427;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v382 = 0;
              v797 = v639;
              uint64_t v798 = v428;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v381 = 0;
              v797 = v640;
              uint64_t v798 = v429;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v380 = 0;
              v797 = v641;
              uint64_t v798 = v430;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v379 = 0;
              v797 = v642;
              uint64_t v798 = v431;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v378 = 0;
              v797 = v643;
              uint64_t v798 = v432;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v377 = 0;
              v797 = v644;
              uint64_t v798 = v433;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v376 = 0;
              v797 = v645;
              uint64_t v798 = v434;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              uint64_t v375 = 0;
              v797 = v646;
              uint64_t v798 = v436;
              sub_1A809E9BC(&v797, (uint64_t)&v801, (uint64_t)&v800, (uint64_t)&v799);
              _os_log_impl(&dword_1A7EFF000, v439, (os_log_type_t)v440, "[%.*hhx-%.*X] Finished EMActivity for '%s'. Updated last sync date.", v389, v407);
              sub_1A809EA08(v390);
              sub_1A809EA08(v391);
              sub_1A8A77868();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
          }
          else
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }

          (*(void (**)(char *, uint64_t))(v742 + 8))(v747, v741);
        }
      }
      else
      {
        unint64_t v615 = v617;
        id v372 = v617;
        v814 = v617;
        id v240 = *v761;
        id *v761 = 0;

        id v374 = objc_msgSend(v616, sel_objectID);
        id v241 = v372;
        id v373 = (id)sub_1A8A747C8();

        objc_msgSend(v753, sel_activityWithID_finishedWithError_, v374, v373);
        if ((v763 & 1) == 0)
        {
          uint64_t v371 = v762;
          uint64_t v332 = v762;
          uint64_t v813 = v762;
          (*(void (**)(char *, uint64_t, uint64_t))(v742 + 16))(v745, v758, v741);
          sub_1A809A0C4(v758, v739);
          sub_1A809A0C4(v739, v737);
          sub_1A809A14C(v739, v735);
          uint64_t v242 = (unsigned __int8 *)(v737 + *(int *)(v733 + 20));
          int v328 = *v242;
          int v329 = *((_DWORD *)v242 + 1);
          sub_1A809A1D4(v737);
          uint64_t v331 = 24;
          uint64_t v348 = 7;
          uint64_t v243 = swift_allocObject();
          int v244 = v329;
          uint64_t v339 = v243;
          *(unsigned char *)(v243 + 16) = v328;
          *(_DWORD *)(v243 + 20) = v244;
          sub_1A809EAE4();
          sub_1A809EAE4();
          sub_1A809EAE4();
          uint64_t v245 = swift_allocObject();
          int v246 = v329;
          uint64_t v330 = v245;
          *(unsigned char *)(v245 + 16) = v328;
          *(_DWORD *)(v245 + 20) = v246;
          swift_retain();
          uint64_t v347 = 32;
          uint64_t v247 = swift_allocObject();
          uint64_t v248 = v330;
          uint64_t v344 = v247;
          *(void *)(v247 + 16) = v707;
          *(void *)(v247 + 24) = v248;
          sub_1A809EAE4();
          sub_1A809EAE4();
          swift_release();
          sub_1A809A1D4(v735);
          uint64_t v333 = swift_allocObject();
          *(void *)(v333 + 16) = v332;
          swift_retain();
          uint64_t v249 = swift_allocObject();
          uint64_t v250 = v333;
          uint64_t v349 = v249;
          *(void *)(v249 + 16) = v708;
          *(void *)(v249 + 24) = v250;
          swift_release();
          uint64_t v369 = sub_1A8A754B8();
          int v370 = sub_1A8A77448();
          uint64_t v336 = &v811;
          uint64_t v811 = 33;
          unint64_t v334 = sub_1A809EBD0();
          unint64_t v335 = sub_1A809EC4C();
          sub_1A809ECC8();
          sub_1A8A76B48();
          uint32_t v337 = v812;
          uint64_t v346 = 17;
          uint64_t v351 = swift_allocObject();
          int v341 = 16;
          *(unsigned char *)(v351 + 16) = 16;
          uint64_t v352 = swift_allocObject();
          int v343 = 4;
          *(unsigned char *)(v352 + 16) = 4;
          uint64_t v251 = swift_allocObject();
          uint64_t v338 = v251;
          *(void *)(v251 + 16) = v622;
          *(void *)(v251 + 24) = 0;
          uint64_t v252 = swift_allocObject();
          uint64_t v253 = v338;
          uint64_t v353 = v252;
          *(void *)(v252 + 16) = v709;
          *(void *)(v252 + 24) = v253;
          uint64_t v354 = swift_allocObject();
          *(unsigned char *)(v354 + 16) = 0;
          uint64_t v355 = swift_allocObject();
          *(unsigned char *)(v355 + 16) = 1;
          uint64_t v254 = swift_allocObject();
          uint64_t v255 = v339;
          uint64_t v340 = v254;
          *(void *)(v254 + 16) = v710;
          *(void *)(v254 + 24) = v255;
          uint64_t v256 = swift_allocObject();
          uint64_t v257 = v340;
          uint64_t v356 = v256;
          *(void *)(v256 + 16) = v711;
          *(void *)(v256 + 24) = v257;
          uint64_t v357 = swift_allocObject();
          *(unsigned char *)(v357 + 16) = v341;
          uint64_t v358 = swift_allocObject();
          *(unsigned char *)(v358 + 16) = v343;
          uint64_t v258 = swift_allocObject();
          uint64_t v342 = v258;
          *(void *)(v258 + 16) = v626;
          *(void *)(v258 + 24) = 0;
          uint64_t v259 = swift_allocObject();
          uint64_t v260 = v342;
          uint64_t v359 = v259;
          *(void *)(v259 + 16) = v712;
          *(void *)(v259 + 24) = v260;
          uint64_t v360 = swift_allocObject();
          *(unsigned char *)(v360 + 16) = 0;
          uint64_t v361 = swift_allocObject();
          *(unsigned char *)(v361 + 16) = v343;
          uint64_t v261 = swift_allocObject();
          uint64_t v262 = v344;
          uint64_t v345 = v261;
          *(void *)(v261 + 16) = v713;
          *(void *)(v261 + 24) = v262;
          uint64_t v263 = swift_allocObject();
          uint64_t v264 = v345;
          uint64_t v362 = v263;
          *(void *)(v263 + 16) = v714;
          *(void *)(v263 + 24) = v264;
          uint64_t v363 = swift_allocObject();
          *(unsigned char *)(v363 + 16) = 32;
          uint64_t v364 = swift_allocObject();
          *(unsigned char *)(v364 + 16) = 8;
          uint64_t v265 = swift_allocObject();
          uint64_t v266 = v349;
          uint64_t v350 = v265;
          *(void *)(v265 + 16) = v715;
          *(void *)(v265 + 24) = v266;
          uint64_t v267 = swift_allocObject();
          uint64_t v268 = v350;
          uint64_t v366 = v267;
          *(void *)(v267 + 16) = v716;
          *(void *)(v267 + 24) = v268;
          uint64_t v368 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
          uint64_t v365 = sub_1A8A78558();
          uint64_t v367 = v269;
          swift_retain();
          uint64_t v270 = v351;
          uint64_t v271 = v367;
          *uint64_t v367 = v717;
          v271[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v270;
          swift_retain();
          uint64_t v272 = v352;
          uint64_t v273 = v367;
          v367[2] = v718;
          v273[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v272;
          swift_retain();
          uint64_t v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v353;
          uint64_t v275 = v367;
          v367[4] = v719;
          v275[5] = v274;
          swift_retain();
          uint64_t v276 = v354;
          uint64_t v277 = v367;
          v367[6] = v720;
          v277[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v276;
          swift_retain();
          uint64_t v278 = v355;
          uint64_t v279 = v367;
          v367[8] = v721;
          v279[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v278;
          swift_retain();
          v280 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v356;
          uint64_t v281 = v367;
          v367[10] = v722;
          v281[11] = v280;
          swift_retain();
          uint64_t v282 = v357;
          int v283 = v367;
          v367[12] = v723;
          v283[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v282;
          swift_retain();
          uint64_t v284 = v358;
          int v285 = v367;
          v367[14] = v724;
          v285[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v284;
          swift_retain();
          uint64_t v286 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v359;
          uint64_t v287 = v367;
          v367[16] = v725;
          v287[17] = v286;
          swift_retain();
          uint64_t v288 = v360;
          unint64_t v289 = v367;
          v367[18] = v726;
          v289[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v288;
          swift_retain();
          uint64_t v290 = v361;
          uint64_t v291 = v367;
          v367[20] = v727;
          v291[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v290;
          swift_retain();
          uint32_t v292 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v362;
          uint64_t v293 = v367;
          v367[22] = v728;
          v293[23] = v292;
          swift_retain();
          uint64_t v294 = v363;
          uint64_t v295 = v367;
          v367[24] = v729;
          v295[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v294;
          swift_retain();
          uint64_t v296 = v364;
          uint64_t v297 = v367;
          v367[26] = v730;
          v297[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v296;
          swift_retain();
          int v298 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v366;
          uint64_t v299 = v367;
          v367[28] = v731;
          v299[29] = v298;
          sub_1A809B5EC();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v369, (os_log_type_t)v370))
          {
            uint64_t v300 = v732;
            uint64_t v321 = (uint8_t *)sub_1A8A77888();
            uint64_t v320 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
            uint64_t v322 = sub_1A809E94C(0);
            uint64_t v323 = sub_1A809E94C(1);
            unint64_t v324 = &v810;
            v810 = v321;
            int v325 = &v809;
            uint64_t v809 = v322;
            uint64_t v326 = &v808;
            uint64_t v808 = v323;
            sub_1A809E9A8(2, &v810);
            sub_1A809E9A8(5, v324);
            v806 = v717;
            uint64_t v807 = v351;
            sub_1A809E9BC(&v806, (uint64_t)v324, (uint64_t)v325, (uint64_t)v326);
            uint64_t v327 = v300;
            if (v300)
            {
              __break(1u);
            }
            else
            {
              v806 = v718;
              uint64_t v807 = v352;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v319 = 0;
              uint64_t v301 = v319;
              v806 = v719;
              uint64_t v807 = v353;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v318 = v301;
              v806 = v720;
              uint64_t v807 = v354;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v317 = 0;
              v806 = v721;
              uint64_t v807 = v355;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v316 = 0;
              v806 = v722;
              uint64_t v807 = v356;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v315 = 0;
              v806 = v723;
              uint64_t v807 = v357;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v314 = 0;
              v806 = v724;
              uint64_t v807 = v358;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v313 = 0;
              v806 = v725;
              uint64_t v807 = v359;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v312 = 0;
              v806 = v726;
              uint64_t v807 = v360;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v311 = 0;
              v806 = v727;
              uint64_t v807 = v361;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v310 = 0;
              v806 = v728;
              uint64_t v807 = v362;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v309 = 0;
              v806 = v729;
              uint64_t v807 = v363;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v308 = 0;
              v806 = v730;
              uint64_t v807 = v364;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              uint64_t v307 = 0;
              v806 = v731;
              uint64_t v807 = v366;
              sub_1A809E9BC(&v806, (uint64_t)&v810, (uint64_t)&v809, (uint64_t)&v808);
              _os_log_impl(&dword_1A7EFF000, v369, (os_log_type_t)v370, "[%.*hhx-%.*X] Finished EMActivity for '%s' with error.", v321, v337);
              sub_1A809EA08(v322);
              sub_1A809EA08(v323);
              sub_1A8A77868();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
          }
          else
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }

          (*(void (**)(char *, uint64_t))(v742 + 8))(v745, v741);
        }
      }
LABEL_94:

      goto LABEL_98;
    }
    uint64_t v609 = sub_1A80BC0E0();
    uint64_t v611 = v30;
    int v613 = v31;
    uint64_t v794 = v609;
    uint64_t v795 = v30;
    int v608 = 1;
    char v796 = v31 & 1;
    unint64_t v610 = sub_1A80BC364();
    unint64_t v612 = v32;
    int v614 = v33;
    unint64_t v791 = v610;
    unint64_t v792 = v32;
    char v793 = v33 & 1 & v608;
    v786.n128_u64[0] = v610;
    v786.n128_u64[1] = v32;
    char v787 = v793;
    uint64_t v788 = v609;
    uint64_t v789 = v611;
    char v790 = v613 & 1 & v608;
    if (v793)
    {
      if (v790)
      {
        BOOL v607 = 1;
LABEL_11:
        if (v607)
        {
          uint64_t v527 = v732;
        }
        else
        {
          if (v763)
          {
            uint64_t v605 = v732;
          }
          else
          {
            uint64_t v606 = v762;
            uint64_t v559 = v762;
            uint64_t v773 = v762;
            (*(void (**)(char *, uint64_t, uint64_t))(v742 + 16))(v751, v758, v741);
            sub_1A809A0C4(v758, v739);
            sub_1A809A0C4(v739, v737);
            sub_1A809A14C(v739, v735);
            uint64_t v34 = (unsigned __int8 *)(v737 + *(int *)(v733 + 20));
            int v555 = *v34;
            int v556 = *((_DWORD *)v34 + 1);
            sub_1A809A1D4(v737);
            uint64_t v558 = 24;
            uint64_t v579 = 7;
            uint64_t v35 = swift_allocObject();
            int v36 = v556;
            uint64_t v567 = v35;
            *(unsigned char *)(v35 + 16) = v555;
            *(_DWORD *)(v35 + 20) = v36;
            sub_1A809EAE4();
            sub_1A809EAE4();
            sub_1A809EAE4();
            uint64_t v37 = swift_allocObject();
            int v38 = v556;
            uint64_t v557 = v37;
            *(unsigned char *)(v37 + 16) = v555;
            *(_DWORD *)(v37 + 20) = v38;
            swift_retain();
            uint64_t v578 = 32;
            uint64_t v39 = swift_allocObject();
            uint64_t v40 = v557;
            uint64_t v572 = v39;
            *(void *)(v39 + 16) = v647;
            *(void *)(v39 + 24) = v40;
            sub_1A809EAE4();
            sub_1A809EAE4();
            swift_release();
            sub_1A809A1D4(v735);
            uint64_t v560 = swift_allocObject();
            *(void *)(v560 + 16) = v559;
            swift_retain();
            uint64_t v41 = swift_allocObject();
            uint64_t v42 = v560;
            uint64_t v574 = v41;
            *(void *)(v41 + 16) = v648;
            *(void *)(v41 + 24) = v42;
            swift_release();
            uint64_t v43 = swift_allocObject();
            uint64_t v44 = v612;
            char v45 = v614;
            uint64_t v580 = v43;
            *(void *)(v43 + 16) = v610;
            *(void *)(v43 + 24) = v44;
            int v566 = 1;
            *(unsigned char *)(v43 + 32) = v45 & 1;
            v603 = sub_1A8A754B8();
            int v604 = sub_1A8A77468();
            v563 = &v771;
            uint64_t v771 = 43;
            unint64_t v561 = sub_1A809EBD0();
            unint64_t v562 = sub_1A809EC4C();
            sub_1A809ECC8();
            sub_1A8A76B48();
            uint32_t v564 = v772;
            uint64_t v576 = 17;
            uint64_t v582 = swift_allocObject();
            int v569 = 16;
            *(unsigned char *)(v582 + 16) = 16;
            uint64_t v583 = swift_allocObject();
            int v571 = 4;
            *(unsigned char *)(v583 + 16) = 4;
            uint64_t v46 = swift_allocObject();
            uint64_t v565 = v46;
            *(void *)(v46 + 16) = v622;
            *(void *)(v46 + 24) = 0;
            uint64_t v47 = swift_allocObject();
            uint64_t v48 = v565;
            uint64_t v584 = v47;
            *(void *)(v47 + 16) = v649;
            *(void *)(v47 + 24) = v48;
            uint64_t v585 = swift_allocObject();
            *(unsigned char *)(v585 + 16) = 0;
            uint64_t v586 = swift_allocObject();
            *(unsigned char *)(v586 + 16) = v566;
            uint64_t v49 = swift_allocObject();
            uint64_t v50 = v567;
            uint64_t v568 = v49;
            *(void *)(v49 + 16) = v650;
            *(void *)(v49 + 24) = v50;
            uint64_t v51 = swift_allocObject();
            uint64_t v52 = v568;
            uint64_t v587 = v51;
            *(void *)(v51 + 16) = v651;
            *(void *)(v51 + 24) = v52;
            uint64_t v588 = swift_allocObject();
            *(unsigned char *)(v588 + 16) = v569;
            uint64_t v589 = swift_allocObject();
            *(unsigned char *)(v589 + 16) = v571;
            uint64_t v53 = swift_allocObject();
            uint64_t v570 = v53;
            *(void *)(v53 + 16) = v626;
            *(void *)(v53 + 24) = 0;
            uint64_t v54 = swift_allocObject();
            uint64_t v55 = v570;
            uint64_t v590 = v54;
            *(void *)(v54 + 16) = v652;
            *(void *)(v54 + 24) = v55;
            uint64_t v591 = swift_allocObject();
            *(unsigned char *)(v591 + 16) = 0;
            uint64_t v592 = swift_allocObject();
            *(unsigned char *)(v592 + 16) = v571;
            uint64_t v56 = swift_allocObject();
            uint64_t v57 = v572;
            uint64_t v573 = v56;
            *(void *)(v56 + 16) = v653;
            *(void *)(v56 + 24) = v57;
            uint64_t v58 = swift_allocObject();
            uint64_t v59 = v573;
            uint64_t v593 = v58;
            *(void *)(v58 + 16) = v654;
            *(void *)(v58 + 24) = v59;
            uint64_t v594 = swift_allocObject();
            *(unsigned char *)(v594 + 16) = 32;
            uint64_t v595 = swift_allocObject();
            int v577 = 8;
            *(unsigned char *)(v595 + 16) = 8;
            uint64_t v60 = swift_allocObject();
            uint64_t v61 = v574;
            uint64_t v575 = v60;
            *(void *)(v60 + 16) = v655;
            *(void *)(v60 + 24) = v61;
            uint64_t v62 = swift_allocObject();
            uint64_t v63 = v575;
            uint64_t v596 = v62;
            *(void *)(v62 + 16) = v656;
            *(void *)(v62 + 24) = v63;
            uint64_t v597 = swift_allocObject();
            *(unsigned char *)(v597 + 16) = 34;
            uint64_t v598 = swift_allocObject();
            *(unsigned char *)(v598 + 16) = v577;
            uint64_t v64 = swift_allocObject();
            uint64_t v65 = v580;
            uint64_t v581 = v64;
            *(void *)(v64 + 16) = v657;
            *(void *)(v64 + 24) = v65;
            uint64_t v66 = swift_allocObject();
            uint64_t v67 = v581;
            uint64_t v600 = v66;
            *(void *)(v66 + 16) = v658;
            *(void *)(v66 + 24) = v67;
            uint64_t v602 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
            uint64_t v599 = sub_1A8A78558();
            v601 = v68;
            swift_retain();
            uint64_t v69 = v582;
            uint64_t v70 = v601;
            unsigned char *v601 = v659;
            v70[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v69;
            swift_retain();
            uint64_t v71 = v583;
            uint64_t v72 = v601;
            v601[2] = v660;
            v72[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v71;
            swift_retain();
            uint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v584;
            uint64_t v74 = v601;
            v601[4] = v661;
            v74[5] = v73;
            swift_retain();
            uint64_t v75 = v585;
            id v76 = v601;
            v601[6] = v662;
            v76[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v75;
            swift_retain();
            uint64_t v77 = v586;
            uint64_t v78 = v601;
            v601[8] = v663;
            v78[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v77;
            swift_retain();
            uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v587;
            uint64_t v80 = v601;
            v601[10] = v664;
            v80[11] = v79;
            swift_retain();
            uint64_t v81 = v588;
            uint64_t v82 = v601;
            v601[12] = v665;
            v82[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v81;
            swift_retain();
            uint64_t v83 = v589;
            uint64_t v84 = v601;
            v601[14] = v666;
            v84[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v83;
            swift_retain();
            uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v590;
            uint64_t v86 = v601;
            v601[16] = v667;
            v86[17] = v85;
            swift_retain();
            uint64_t v87 = v591;
            uint64_t v88 = v601;
            v601[18] = v668;
            v88[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v87;
            swift_retain();
            uint64_t v89 = v592;
            uint64_t v90 = v601;
            v601[20] = v669;
            v90[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v89;
            swift_retain();
            uint64_t v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v593;
            uint64_t v92 = v601;
            v601[22] = v670;
            v92[23] = v91;
            swift_retain();
            uint64_t v93 = v594;
            uint64_t v94 = v601;
            v601[24] = v671;
            v94[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v93;
            swift_retain();
            uint64_t v95 = v595;
            uint64_t v96 = v601;
            v601[26] = v672;
            v96[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v95;
            swift_retain();
            uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v596;
            uint64_t v98 = v601;
            v601[28] = v673;
            v98[29] = v97;
            swift_retain();
            uint64_t v99 = v597;
            uint64_t v100 = v601;
            v601[30] = v674;
            v100[31] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v99;
            swift_retain();
            uint64_t v101 = v598;
            uint64_t v102 = v601;
            v601[32] = v675;
            v102[33] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v101;
            swift_retain();
            uint64_t v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v600;
            uint64_t v104 = v601;
            v601[34] = v676;
            v104[35] = v103;
            sub_1A809B5EC();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v603, (os_log_type_t)v604))
            {
              uint64_t v105 = v732;
              id v548 = (uint8_t *)sub_1A8A77888();
              uint64_t v547 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
              uint64_t v549 = sub_1A809E94C(0);
              uint64_t v550 = sub_1A809E94C(2);
              id v551 = &v770;
              v770 = v548;
              id v552 = &v769;
              uint64_t v769 = v549;
              uint64_t v553 = &v768;
              uint64_t v768 = v550;
              sub_1A809E9A8(2, &v770);
              sub_1A809E9A8(6, v551);
              v766 = v659;
              uint64_t v767 = v582;
              sub_1A809E9BC(&v766, (uint64_t)v551, (uint64_t)v552, (uint64_t)v553);
              uint64_t v554 = v105;
              if (v105)
              {
                __break(1u);
              }
              else
              {
                v766 = v660;
                uint64_t v767 = v583;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v545 = 0;
                uint64_t v107 = v545;
                v766 = v661;
                uint64_t v767 = v584;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v544 = v107;
                v766 = v662;
                uint64_t v767 = v585;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v543 = 0;
                v766 = v663;
                uint64_t v767 = v586;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v542 = 0;
                v766 = v664;
                uint64_t v767 = v587;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v541 = 0;
                v766 = v665;
                uint64_t v767 = v588;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v540 = 0;
                v766 = v666;
                uint64_t v767 = v589;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v539 = 0;
                v766 = v667;
                uint64_t v767 = v590;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v538 = 0;
                v766 = v668;
                uint64_t v767 = v591;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v537 = 0;
                v766 = v669;
                uint64_t v767 = v592;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v536 = 0;
                v766 = v670;
                uint64_t v767 = v593;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v535 = 0;
                v766 = v671;
                uint64_t v767 = v594;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v534 = 0;
                v766 = v672;
                uint64_t v767 = v595;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v533 = 0;
                v766 = v673;
                uint64_t v767 = v596;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v532 = 0;
                v766 = v674;
                uint64_t v767 = v597;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v531 = 0;
                v766 = v675;
                uint64_t v767 = v598;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v530 = 0;
                v766 = v676;
                uint64_t v767 = v600;
                sub_1A809E9BC(&v766, (uint64_t)&v770, (uint64_t)&v769, (uint64_t)&v768);
                uint64_t v529 = 0;
                _os_log_impl(&dword_1A7EFF000, v603, (os_log_type_t)v604, "[%.*hhx-%.*X] Updating EMActivity status for '%s': %{public}s", v548, v564);
                sub_1A809EA08(v549);
                sub_1A809EA08(v550);
                sub_1A8A77868();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v546 = v529;
              }
            }
            else
            {
              uint64_t v106 = v732;
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v546 = v106;
            }
            uint64_t v528 = v546;

            (*(void (**)(char *, uint64_t))(v742 + 8))(v751, v741);
            uint64_t v605 = v528;
          }
          uint64_t v526 = v605;
          id v525 = objc_msgSend(v616, sel_objectID);
          sub_1A80BC4CC(v610, v612, v614 & 1, (uint64_t)v525);

          uint64_t v527 = v526;
        }
        uint64_t v519 = v527;
        uint64_t v520 = sub_1A80BC644();
        uint64_t v785 = v520;
        uint64_t v521 = sub_1A80BC84C();
        uint64_t v784 = v521;
        uint64_t v524 = &v783;
        uint64_t v783 = v520;
        uint64_t v522 = &v782;
        uint64_t v782 = v521;
        uint64_t State = type metadata accessor for EMActivityFetchState();
        sub_1A80C86E0();
        if ((sub_1A8A76498() & 1) == 0)
        {
          if ((v763 & 1) == 0)
          {
            uint64_t v518 = v762;
            uint64_t v471 = v762;
            uint64_t v781 = v762;
            (*(void (**)(char *, uint64_t, uint64_t))(v742 + 16))(v749, v758, v741);
            sub_1A809A0C4(v758, v739);
            sub_1A809A0C4(v739, v737);
            sub_1A809A14C(v739, v735);
            uint64_t v108 = (unsigned __int8 *)(v737 + *(int *)(v733 + 20));
            int v468 = *v108;
            int v469 = *((_DWORD *)v108 + 1);
            sub_1A809A1D4(v737);
            uint64_t v473 = 24;
            uint64_t v492 = 7;
            uint64_t v109 = swift_allocObject();
            int v110 = v469;
            uint64_t v479 = v109;
            *(unsigned char *)(v109 + 16) = v468;
            *(_DWORD *)(v109 + 20) = v110;
            sub_1A809EAE4();
            sub_1A809EAE4();
            sub_1A809EAE4();
            uint64_t v111 = swift_allocObject();
            int v112 = v469;
            uint64_t v470 = v111;
            *(unsigned char *)(v111 + 16) = v468;
            *(_DWORD *)(v111 + 20) = v112;
            swift_retain();
            uint64_t v491 = 32;
            uint64_t v113 = swift_allocObject();
            uint64_t v114 = v470;
            uint64_t v484 = v113;
            *(void *)(v113 + 16) = v677;
            *(void *)(v113 + 24) = v114;
            sub_1A809EAE4();
            sub_1A809EAE4();
            swift_release();
            sub_1A809A1D4(v735);
            uint64_t v472 = swift_allocObject();
            *(void *)(v472 + 16) = v471;
            swift_retain();
            uint64_t v115 = swift_allocObject();
            uint64_t v116 = v472;
            uint64_t v486 = v115;
            *(void *)(v115 + 16) = v678;
            *(void *)(v115 + 24) = v116;
            swift_release();
            uint64_t v493 = swift_allocObject();
            *(void *)(v493 + 16) = v521;
            unint64_t v516 = sub_1A8A754B8();
            int v517 = sub_1A8A77468();
            uint64_t v476 = &v779;
            uint64_t v779 = 43;
            unint64_t v474 = sub_1A809EBD0();
            unint64_t v475 = sub_1A809EC4C();
            sub_1A809ECC8();
            sub_1A8A76B48();
            uint32_t v477 = v780;
            uint64_t v489 = 17;
            uint64_t v495 = swift_allocObject();
            int v481 = 16;
            *(unsigned char *)(v495 + 16) = 16;
            uint64_t v496 = swift_allocObject();
            int v483 = 4;
            *(unsigned char *)(v496 + 16) = 4;
            uint64_t v117 = swift_allocObject();
            uint64_t v478 = v117;
            *(void *)(v117 + 16) = v622;
            *(void *)(v117 + 24) = 0;
            uint64_t v118 = swift_allocObject();
            uint64_t v119 = v478;
            uint64_t v497 = v118;
            *(void *)(v118 + 16) = v679;
            *(void *)(v118 + 24) = v119;
            uint64_t v498 = swift_allocObject();
            *(unsigned char *)(v498 + 16) = 0;
            uint64_t v499 = swift_allocObject();
            *(unsigned char *)(v499 + 16) = 1;
            uint64_t v120 = swift_allocObject();
            uint64_t v121 = v479;
            uint64_t v480 = v120;
            *(void *)(v120 + 16) = v680;
            *(void *)(v120 + 24) = v121;
            uint64_t v122 = swift_allocObject();
            uint64_t v123 = v480;
            uint64_t v500 = v122;
            *(void *)(v122 + 16) = v681;
            *(void *)(v122 + 24) = v123;
            uint64_t v501 = swift_allocObject();
            *(unsigned char *)(v501 + 16) = v481;
            uint64_t v502 = swift_allocObject();
            *(unsigned char *)(v502 + 16) = v483;
            uint64_t v124 = swift_allocObject();
            uint64_t v482 = v124;
            *(void *)(v124 + 16) = v626;
            *(void *)(v124 + 24) = 0;
            uint64_t v125 = swift_allocObject();
            uint64_t v126 = v482;
            uint64_t v503 = v125;
            *(void *)(v125 + 16) = v682;
            *(void *)(v125 + 24) = v126;
            uint64_t v504 = swift_allocObject();
            *(unsigned char *)(v504 + 16) = 0;
            uint64_t v505 = swift_allocObject();
            *(unsigned char *)(v505 + 16) = v483;
            uint64_t v127 = swift_allocObject();
            uint64_t v128 = v484;
            uint64_t v485 = v127;
            *(void *)(v127 + 16) = v683;
            *(void *)(v127 + 24) = v128;
            uint64_t v129 = swift_allocObject();
            uint64_t v130 = v485;
            uint64_t v506 = v129;
            *(void *)(v129 + 16) = v684;
            *(void *)(v129 + 24) = v130;
            uint64_t v507 = swift_allocObject();
            int v488 = 32;
            *(unsigned char *)(v507 + 16) = 32;
            uint64_t v508 = swift_allocObject();
            int v490 = 8;
            *(unsigned char *)(v508 + 16) = 8;
            uint64_t v131 = swift_allocObject();
            uint64_t v132 = v486;
            uint64_t v487 = v131;
            *(void *)(v131 + 16) = v685;
            *(void *)(v131 + 24) = v132;
            uint64_t v133 = swift_allocObject();
            uint64_t v134 = v487;
            uint64_t v509 = v133;
            *(void *)(v133 + 16) = v686;
            *(void *)(v133 + 24) = v134;
            uint64_t v510 = swift_allocObject();
            *(unsigned char *)(v510 + 16) = v488;
            uint64_t v511 = swift_allocObject();
            *(unsigned char *)(v511 + 16) = v490;
            uint64_t v135 = swift_allocObject();
            uint64_t v136 = v493;
            uint64_t v494 = v135;
            *(void *)(v135 + 16) = v687;
            *(void *)(v135 + 24) = v136;
            uint64_t v137 = swift_allocObject();
            uint64_t v138 = v494;
            uint64_t v513 = v137;
            *(void *)(v137 + 16) = v688;
            *(void *)(v137 + 24) = v138;
            uint64_t v515 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
            uint64_t v512 = sub_1A8A78558();
            int v514 = v139;
            swift_retain();
            uint64_t v140 = v495;
            id v141 = v514;
            *int v514 = v689;
            v141[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v140;
            swift_retain();
            uint64_t v142 = v496;
            uint64_t v143 = v514;
            v514[2] = v690;
            v143[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v142;
            swift_retain();
            uint64_t v144 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v497;
            uint64_t v145 = v514;
            v514[4] = v691;
            v145[5] = v144;
            swift_retain();
            uint64_t v146 = v498;
            id v147 = v514;
            v514[6] = v692;
            v147[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v146;
            swift_retain();
            uint64_t v148 = v499;
            uint64_t v149 = v514;
            v514[8] = v693;
            v149[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v148;
            swift_retain();
            id v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v500;
            unint64_t v151 = v514;
            v514[10] = v694;
            v151[11] = v150;
            swift_retain();
            uint64_t v152 = v501;
            int v153 = v514;
            v514[12] = v695;
            v153[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v152;
            swift_retain();
            uint64_t v154 = v502;
            uint64_t v155 = v514;
            v514[14] = v696;
            v155[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v154;
            swift_retain();
            uint64_t v156 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v503;
            int v157 = v514;
            v514[16] = v697;
            v157[17] = v156;
            swift_retain();
            uint64_t v158 = v504;
            int v159 = v514;
            v514[18] = v698;
            v159[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v158;
            swift_retain();
            uint64_t v160 = v505;
            uint64_t v161 = v514;
            v514[20] = v699;
            v161[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v160;
            swift_retain();
            uint64_t v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v506;
            uint64_t v163 = v514;
            v514[22] = v700;
            v163[23] = v162;
            swift_retain();
            uint64_t v164 = v507;
            uint64_t v165 = v514;
            v514[24] = v701;
            v165[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v164;
            swift_retain();
            uint64_t v166 = v508;
            uint64_t v167 = v514;
            v514[26] = v702;
            v167[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v166;
            swift_retain();
            uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v509;
            uint64_t v169 = v514;
            v514[28] = v703;
            v169[29] = v168;
            swift_retain();
            uint64_t v170 = v510;
            uint64_t v171 = v514;
            v514[30] = v704;
            v171[31] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v170;
            swift_retain();
            uint64_t v172 = v511;
            uint64_t v173 = v514;
            v514[32] = v705;
            v173[33] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v172;
            swift_retain();
            uint64_t v174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v513;
            uint64_t v175 = v514;
            v514[34] = v706;
            v175[35] = v174;
            sub_1A809B5EC();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v516, (os_log_type_t)v517))
            {
              uint64_t v176 = v519;
              uint64_t v461 = (uint8_t *)sub_1A8A77888();
              uint64_t v460 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
              uint64_t v462 = sub_1A809E94C(0);
              uint64_t v463 = sub_1A809E94C(2);
              uint64_t v464 = &v778;
              v778 = v461;
              uint64_t v465 = &v777;
              uint64_t v777 = v462;
              uint64_t v466 = &v776;
              uint64_t v776 = v463;
              sub_1A809E9A8(2, &v778);
              sub_1A809E9A8(6, v464);
              v774 = v689;
              uint64_t v775 = v495;
              sub_1A809E9BC(&v774, (uint64_t)v464, (uint64_t)v465, (uint64_t)v466);
              uint64_t v467 = v176;
              if (v176)
              {
                __break(1u);
              }
              else
              {
                v774 = v690;
                uint64_t v775 = v496;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v459 = 0;
                uint64_t v177 = v459;
                v774 = v691;
                uint64_t v775 = v497;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v458 = v177;
                v774 = v692;
                uint64_t v775 = v498;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v457 = 0;
                v774 = v693;
                uint64_t v775 = v499;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v456 = 0;
                v774 = v694;
                uint64_t v775 = v500;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v455 = 0;
                v774 = v695;
                uint64_t v775 = v501;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v454 = 0;
                v774 = v696;
                uint64_t v775 = v502;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v453 = 0;
                v774 = v697;
                uint64_t v775 = v503;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v452 = 0;
                v774 = v698;
                uint64_t v775 = v504;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v451 = 0;
                v774 = v699;
                uint64_t v775 = v505;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v450 = 0;
                v774 = v700;
                uint64_t v775 = v506;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v449 = 0;
                v774 = v701;
                uint64_t v775 = v507;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v448 = 0;
                v774 = v702;
                uint64_t v775 = v508;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v447 = 0;
                v774 = v703;
                uint64_t v775 = v509;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v446 = 0;
                v774 = v704;
                uint64_t v775 = v510;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v445 = 0;
                v774 = v705;
                uint64_t v775 = v511;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                uint64_t v444 = 0;
                v774 = v706;
                uint64_t v775 = v513;
                sub_1A809E9BC(&v774, (uint64_t)&v778, (uint64_t)&v777, (uint64_t)&v776);
                _os_log_impl(&dword_1A7EFF000, v516, (os_log_type_t)v517, "[%.*hhx-%.*X] Updating EMActivity state for '%s': %s", v461, v477);
                sub_1A809EA08(v462);
                sub_1A809EA08(v463);
                sub_1A8A77868();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
              }
            }
            else
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }

            (*(void (**)(char *, uint64_t))(v742 + 8))(v749, v741);
          }
          id v443 = objc_msgSend(v616, sel_objectID);
          sub_1A80BCA48(v521, (uint64_t)v443);
        }
        goto LABEL_94;
      }
    }
    else
    {
      sub_1A80C9400(&v786, &v765);
      if ((v790 & 1) == 0)
      {
        BOOL v607 = static Activity.MailboxStatus.Info.FetchProgress.__derived_struct_equals(_:_:)(v765.n128_i64[0], v765.n128_i64[1], v788, v789);
        goto LABEL_11;
      }
    }
    BOOL v607 = 0;
    goto LABEL_11;
  }
  uint64_t v306 = (void *)sub_1A80BBD54();
  if (v306)
  {
    sub_1A80C7C28(v306);
  }
  else
  {
    uint64_t v816 = v762;
    char v817 = v763 & 1;
    uint64_t v302 = (void *)v754(&v816, v752, v753);
    id v303 = *v761;
    id *v761 = v302;
  }
LABEL_98:
  sub_1A80C777C(v761, v619);
  sub_1A80BBC94((uint64_t)v761, v752);
  return sub_1A80C4FE0(v761);
}

id *sub_1A80B8790@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v154 = a7;
  uint64_t v200 = a1;
  uint64_t v206 = a2;
  uint64_t v199 = a3;
  id v198 = a5;
  uint64_t v197 = a6;
  uint64_t v195 = 0;
  uint64_t v155 = sub_1A809EB30;
  uint64_t v156 = sub_1A80C5310;
  int v157 = sub_1A809EAD8;
  uint64_t v158 = sub_1A809EEB8;
  int v159 = sub_1A809EAB8;
  uint64_t v160 = sub_1A809F1F4;
  uint64_t v161 = sub_1A809EBC4;
  uint64_t v162 = sub_1A809EEB8;
  uint64_t v163 = sub_1A809EBB8;
  uint64_t v164 = sub_1A809F634;
  uint64_t v165 = sub_1A80C5358;
  uint64_t v166 = sub_1A80C40EC;
  uint64_t v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v169 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v171 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v172 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v175 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v176 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  id v178 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v180 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v181 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v231 = 0;
  uint64_t v229 = 0;
  char v230 = 0;
  uint64_t v228 = 0;
  uint64_t v226 = 0;
  uint64_t v227 = 0;
  uint64_t v225 = 0;
  uint64_t v224 = 0;
  id v221 = 0;
  uint64_t v220 = 0;
  uint64_t v219 = 0;
  uint64_t v182 = 0;
  uint64_t v183 = _s6LoggerVMa();
  unint64_t v184 = (*(void *)(*(void *)(v183 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v185 = (uint64_t)&v82 - v184;
  unint64_t v186 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v9);
  uint64_t v187 = (uint64_t)&v82 - v186;
  unint64_t v188 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v11);
  uint64_t v189 = (uint64_t)&v82 - v188;
  uint64_t v190 = sub_1A8A754D8();
  uint64_t v191 = *(void *)(v190 - 8);
  uint64_t v192 = v190 - 8;
  unint64_t v193 = (*(void *)(v191 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v195);
  uint64_t v194 = (char *)&v82 - v193;
  unint64_t v196 = (*(void *)(*(void *)(type metadata accessor for Activity.MailboxStatus(v12) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v195);
  uint64_t v207 = (char *)&v82 - v196;
  uint64_t v202 = *(void *)(*(void *)(_s15MailboxActivityVMa() - 8) + 64);
  unint64_t v201 = (v202 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v200);
  uint64_t v209 = (id *)((char *)&v82 - v201);
  unint64_t v203 = (v202 + 15) & 0xFFFFFFFFFFFFFFF0;
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v210 = (id *)((char *)&v82 - v203);
  uint64_t v231 = (char *)&v82 - v203;
  uint64_t v204 = *v15;
  int v205 = *((unsigned __int8 *)v15 + 8);
  uint64_t v229 = v204;
  char v230 = v205 & 1;
  uint64_t v228 = v16;
  uint64_t v226 = v17;
  uint64_t v227 = a4;
  uint64_t v225 = v18;
  uint64_t v224 = v19;
  uint64_t v222 = v204;
  char v223 = v205 & 1;
  uint64_t v208 = v17(&v222, v14);
  sub_1A80C343C(v206, v207);
  sub_1A80A5548(v208, v207, v209);
  sub_1A80C4C18(v209, v210);
  id v211 = *v210;
  id v20 = v211;
  if (v211)
  {
    id v153 = v211;
    id v151 = v211;
    id v221 = v211;
    uint64_t v152 = (void *)sub_1A80BBD54();
    if ((unint64_t)v152 <= 1)
    {
      sub_1A80C7C28(v152);
    }
    else
    {
      id v150 = v152;
      id v149 = v150;
      uint64_t v220 = v150;
      if ((v205 & 1) == 0)
      {
        uint64_t v148 = v204;
        uint64_t v109 = v204;
        uint64_t v219 = v204;
        (*(void (**)(char *, uint64_t, uint64_t))(v191 + 16))(v194, v197, v190);
        sub_1A809A0C4(v197, v189);
        sub_1A809A0C4(v189, v187);
        sub_1A809A14C(v189, v185);
        uint64_t v21 = (unsigned __int8 *)(v187 + *(int *)(v183 + 20));
        int v105 = *v21;
        int v106 = *((_DWORD *)v21 + 1);
        sub_1A809A1D4(v187);
        uint64_t v108 = 24;
        uint64_t v125 = 7;
        uint64_t v22 = swift_allocObject();
        int v23 = v106;
        uint64_t v116 = v22;
        *(unsigned char *)(v22 + 16) = v105;
        *(_DWORD *)(v22 + 20) = v23;
        sub_1A809EAE4();
        sub_1A809EAE4();
        sub_1A809EAE4();
        uint64_t v24 = swift_allocObject();
        int v25 = v106;
        uint64_t v107 = v24;
        *(unsigned char *)(v24 + 16) = v105;
        *(_DWORD *)(v24 + 20) = v25;
        swift_retain();
        uint64_t v124 = 32;
        uint64_t v26 = swift_allocObject();
        uint64_t v27 = v107;
        uint64_t v121 = v26;
        *(void *)(v26 + 16) = v155;
        *(void *)(v26 + 24) = v27;
        sub_1A809EAE4();
        sub_1A809EAE4();
        swift_release();
        sub_1A809A1D4(v185);
        uint64_t v110 = swift_allocObject();
        *(void *)(v110 + 16) = v109;
        swift_retain();
        uint64_t v28 = swift_allocObject();
        uint64_t v29 = v110;
        uint64_t v126 = v28;
        *(void *)(v28 + 16) = v156;
        *(void *)(v28 + 24) = v29;
        swift_release();
        uint64_t v146 = sub_1A8A754B8();
        int v147 = sub_1A8A77468();
        uint64_t v113 = &v217;
        uint64_t v217 = 33;
        unint64_t v111 = sub_1A809EBD0();
        unint64_t v112 = sub_1A809EC4C();
        sub_1A809ECC8();
        sub_1A8A76B48();
        uint32_t v114 = v218;
        uint64_t v123 = 17;
        uint64_t v128 = swift_allocObject();
        int v118 = 16;
        *(unsigned char *)(v128 + 16) = 16;
        uint64_t v129 = swift_allocObject();
        int v120 = 4;
        *(unsigned char *)(v129 + 16) = 4;
        uint64_t v30 = swift_allocObject();
        uint64_t v115 = v30;
        *(void *)(v30 + 16) = v157;
        *(void *)(v30 + 24) = 0;
        uint64_t v31 = swift_allocObject();
        uint64_t v32 = v115;
        uint64_t v130 = v31;
        *(void *)(v31 + 16) = v158;
        *(void *)(v31 + 24) = v32;
        uint64_t v131 = swift_allocObject();
        *(unsigned char *)(v131 + 16) = 0;
        uint64_t v132 = swift_allocObject();
        *(unsigned char *)(v132 + 16) = 1;
        uint64_t v33 = swift_allocObject();
        uint64_t v34 = v116;
        uint64_t v117 = v33;
        *(void *)(v33 + 16) = v159;
        *(void *)(v33 + 24) = v34;
        uint64_t v35 = swift_allocObject();
        uint64_t v36 = v117;
        uint64_t v133 = v35;
        *(void *)(v35 + 16) = v160;
        *(void *)(v35 + 24) = v36;
        uint64_t v134 = swift_allocObject();
        *(unsigned char *)(v134 + 16) = v118;
        uint64_t v135 = swift_allocObject();
        *(unsigned char *)(v135 + 16) = v120;
        uint64_t v37 = swift_allocObject();
        uint64_t v119 = v37;
        *(void *)(v37 + 16) = v161;
        *(void *)(v37 + 24) = 0;
        uint64_t v38 = swift_allocObject();
        uint64_t v39 = v119;
        uint64_t v136 = v38;
        *(void *)(v38 + 16) = v162;
        *(void *)(v38 + 24) = v39;
        uint64_t v137 = swift_allocObject();
        *(unsigned char *)(v137 + 16) = 0;
        uint64_t v138 = swift_allocObject();
        *(unsigned char *)(v138 + 16) = v120;
        uint64_t v40 = swift_allocObject();
        uint64_t v41 = v121;
        uint64_t v122 = v40;
        *(void *)(v40 + 16) = v163;
        *(void *)(v40 + 24) = v41;
        uint64_t v42 = swift_allocObject();
        uint64_t v43 = v122;
        uint64_t v139 = v42;
        *(void *)(v42 + 16) = v164;
        *(void *)(v42 + 24) = v43;
        uint64_t v140 = swift_allocObject();
        *(unsigned char *)(v140 + 16) = 32;
        uint64_t v141 = swift_allocObject();
        *(unsigned char *)(v141 + 16) = 8;
        uint64_t v44 = swift_allocObject();
        uint64_t v45 = v126;
        uint64_t v127 = v44;
        *(void *)(v44 + 16) = v165;
        *(void *)(v44 + 24) = v45;
        uint64_t v46 = swift_allocObject();
        uint64_t v47 = v127;
        uint64_t v143 = v46;
        *(void *)(v46 + 16) = v166;
        *(void *)(v46 + 24) = v47;
        uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
        uint64_t v142 = sub_1A8A78558();
        uint64_t v144 = v48;
        swift_retain();
        uint64_t v49 = v128;
        uint64_t v50 = v144;
        *uint64_t v144 = v167;
        v50[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
        swift_retain();
        uint64_t v51 = v129;
        uint64_t v52 = v144;
        v144[2] = v168;
        v52[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v51;
        swift_retain();
        uint64_t v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v130;
        uint64_t v54 = v144;
        v144[4] = v169;
        v54[5] = v53;
        swift_retain();
        uint64_t v55 = v131;
        uint64_t v56 = v144;
        v144[6] = v170;
        v56[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v55;
        swift_retain();
        uint64_t v57 = v132;
        uint64_t v58 = v144;
        v144[8] = v171;
        v58[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v57;
        swift_retain();
        uint64_t v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v133;
        uint64_t v60 = v144;
        v144[10] = v172;
        v60[11] = v59;
        swift_retain();
        uint64_t v61 = v134;
        uint64_t v62 = v144;
        v144[12] = v173;
        v62[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v61;
        swift_retain();
        uint64_t v63 = v135;
        uint64_t v64 = v144;
        v144[14] = v174;
        v64[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v63;
        swift_retain();
        uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v136;
        uint64_t v66 = v144;
        v144[16] = v175;
        v66[17] = v65;
        swift_retain();
        uint64_t v67 = v137;
        uint64_t v68 = v144;
        v144[18] = v176;
        v68[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v67;
        swift_retain();
        uint64_t v69 = v138;
        uint64_t v70 = v144;
        v144[20] = v177;
        v70[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v69;
        swift_retain();
        uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v139;
        uint64_t v72 = v144;
        v144[22] = v178;
        v72[23] = v71;
        swift_retain();
        uint64_t v73 = v140;
        uint64_t v74 = v144;
        v144[24] = v179;
        v74[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v73;
        swift_retain();
        uint64_t v75 = v141;
        id v76 = v144;
        v144[26] = v180;
        v76[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v75;
        swift_retain();
        uint64_t v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v143;
        uint64_t v78 = v144;
        v144[28] = v181;
        v78[29] = v77;
        sub_1A809B5EC();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v146, (os_log_type_t)v147))
        {
          uint64_t v79 = v182;
          uint64_t v98 = (uint8_t *)sub_1A8A77888();
          uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
          uint64_t v99 = sub_1A809E94C(0);
          uint64_t v100 = sub_1A809E94C(1);
          uint64_t v101 = &v216;
          uint64_t v216 = v98;
          uint64_t v102 = &v215;
          uint64_t v215 = v99;
          uint64_t v103 = &v214;
          uint64_t v214 = v100;
          sub_1A809E9A8(2, &v216);
          sub_1A809E9A8(5, v101);
          v212 = v167;
          uint64_t v213 = v128;
          sub_1A809E9BC(&v212, (uint64_t)v101, (uint64_t)v102, (uint64_t)v103);
          uint64_t v104 = v79;
          if (v79)
          {
            __break(1u);
          }
          else
          {
            v212 = v168;
            uint64_t v213 = v129;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v96 = 0;
            v212 = v169;
            uint64_t v213 = v130;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v95 = 0;
            v212 = v170;
            uint64_t v213 = v131;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v94 = 0;
            v212 = v171;
            uint64_t v213 = v132;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v93 = 0;
            v212 = v172;
            uint64_t v213 = v133;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v92 = 0;
            v212 = v173;
            uint64_t v213 = v134;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v91 = 0;
            v212 = v174;
            uint64_t v213 = v135;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v90 = 0;
            v212 = v175;
            uint64_t v213 = v136;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v89 = 0;
            v212 = v176;
            uint64_t v213 = v137;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v88 = 0;
            v212 = v177;
            uint64_t v213 = v138;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v87 = 0;
            v212 = v178;
            uint64_t v213 = v139;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v86 = 0;
            v212 = v179;
            uint64_t v213 = v140;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v85 = 0;
            v212 = v180;
            uint64_t v213 = v141;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            uint64_t v84 = 0;
            v212 = v181;
            uint64_t v213 = v143;
            sub_1A809E9BC(&v212, (uint64_t)&v216, (uint64_t)&v215, (uint64_t)&v214);
            _os_log_impl(&dword_1A7EFF000, v146, (os_log_type_t)v147, "[%.*hhx-%.*X] Marking EMActivity for '%s' as failed.", v98, v114);
            sub_1A809EA08(v99);
            sub_1A809EA08(v100);
            sub_1A8A77868();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v191 + 8))(v194, v190);
      }
      id v83 = objc_msgSend(v151, sel_objectID);
      id v80 = v149;
      id v82 = (id)sub_1A8A747C8();

      objc_msgSend(v198, sel_activityWithID_finishedWithError_, v83, v82);
    }
  }
  sub_1A80C777C(v210, v154);
  sub_1A809A1D4(v197);

  sub_1A80C3170((uint64_t)v206);
  return sub_1A80C4FE0(v210);
}

uint64_t sub_1A80BA260()
{
  uint64_t v176 = 0;
  uint64_t v143 = sub_1A80BB6DC;
  uint64_t v144 = sub_1A809EB30;
  uint64_t v145 = sub_1A809EAD8;
  uint64_t v146 = sub_1A809EEB8;
  int v147 = sub_1A809EAB8;
  uint64_t v148 = sub_1A809F1F4;
  id v149 = sub_1A809EBC4;
  id v150 = sub_1A809EEB8;
  id v151 = sub_1A809EBB8;
  uint64_t v152 = sub_1A809F634;
  id v153 = sub_1A80C9BF0;
  uint64_t v154 = sub_1A80C9FF0;
  uint64_t v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v156 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  int v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v158 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  int v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F240;
  uint64_t v161 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v163 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F06C;
  uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v165 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v166 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809F680;
  uint64_t v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v169 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80CA03C;
  uint64_t v218 = 0;
  uint64_t v217 = 0;
  memset(__b, 0, sizeof(__b));
  uint64_t v170 = 0;
  uint64_t v189 = 0;
  uint64_t v171 = sub_1A8A754D8();
  uint64_t v172 = *(void *)(v171 - 8);
  uint64_t v173 = v171 - 8;
  unint64_t v174 = (*(void *)(v172 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v175 = (char *)v68 - v174;
  uint64_t v177 = _s6LoggerVMa();
  unint64_t v178 = (*(void *)(*(void *)(v177 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v176);
  uint64_t v179 = (uint64_t)v68 - v178;
  unint64_t v180 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v2);
  uint64_t v181 = (uint64_t)v68 - v180;
  uint64_t v186 = sub_1A8A75EC8();
  uint64_t v184 = *(void *)(v186 - 8);
  uint64_t v185 = v186 - 8;
  unint64_t v182 = (*(void *)(v184 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v186);
  uint64_t v187 = (void *)((char *)v68 - v182);
  uint64_t v218 = v0;
  swift_retain();
  id v183 = *(id *)(v0 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_workloop);
  id v3 = v183;
  uint64_t v4 = v184;
  *uint64_t v187 = v183;
  (*(void (**)(void))(v4 + 104))();
  unsigned int v188 = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v184 + 8))(v187, v186);
  uint64_t result = v188;
  if (v188)
  {
    swift_release();
    uint64_t v136 = 0;
    uint64_t v217 = 0;
    uint64_t v131 = &v208;
    uint64_t v137 = 0;
    swift_beginAccess();
    uint64_t v130 = *(void *)(v142 + 88);
    uint64_t v129 = _s15MailboxActivityVMa();
    sub_1A80A57FC();
    uint64_t v134 = sub_1A8A76128();
    swift_endAccess();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v133 = &v206;
    uint64_t v206 = v134;
    uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746C20);
    unint64_t v6 = sub_1A80C9958();
    MEMORY[0x1AD0DFB10](&v207, v132, v6);
    sub_1A809F94C();
    uint64_t v135 = v207;
    swift_bridgeObjectRelease();
    uint64_t v140 = &v205;
    uint64_t v205 = v135;
    uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97471A8);
    unint64_t v139 = sub_1A80C99DC();
    sub_1A80C9A44();
    sub_1A8A78228();
    sub_1A809F94C();
    uint64_t v198 = v209;
    uint64_t v199 = v210;
    uint64_t v200 = v211;
    uint64_t v201 = v212;
    uint64_t v202 = v213;
    uint64_t v203 = v214;
    uint64_t v204 = v215;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9747228);
    sub_1A8A77FD8();
    for (uint64_t i = v170; ; uint64_t i = v127)
    {
      uint64_t v127 = i;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9747200);
      uint64_t result = sub_1A8A77FE8();
      uint64_t v128 = v197;
      if (!v197) {
        break;
      }
      uint64_t v126 = v128;
      id v124 = v128;
      uint64_t v189 = v128;
      uint64_t v125 = v217 + 1;
      if (__OFADD__(v217, 1)) {
        goto LABEL_25;
      }
      uint64_t v217 = v125;
      id v123 = *(id *)(v142 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_activityPersistence);
      id v8 = v123;
      id v122 = objc_msgSend(v124, sel_objectID);
      objc_msgSend(v123, sel_activityWithID_finishedWithError_);
    }
    uint64_t v9 = v175;
    sub_1A80C9AC8();
    uint64_t v79 = &OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger;
    sub_1A809A0C4(v142 + OBJC_IVAR____TtC7Message18PersistenceAdaptor_logger, v181);
    (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v9, v181, v171);
    sub_1A809A1D4(v181);
    swift_retain();
    swift_retain();
    sub_1A809A0C4(v142 + *v79, v179);
    uint64_t v10 = (unsigned __int8 *)(v179 + *(int *)(v177 + 20));
    int v80 = *v10;
    int v81 = *((_DWORD *)v10 + 1);
    sub_1A809A1D4(v179);
    swift_release();
    uint64_t v83 = 24;
    uint64_t v99 = 7;
    uint64_t v11 = swift_allocObject();
    int v12 = v81;
    uint64_t v90 = v11;
    *(unsigned char *)(v11 + 16) = v80;
    *(_DWORD *)(v11 + 20) = v12;
    sub_1A809EAE4();
    sub_1A809EAE4();
    sub_1A809EAE4();
    uint64_t v13 = swift_allocObject();
    int v14 = v81;
    uint64_t v82 = v13;
    *(unsigned char *)(v13 + 16) = v80;
    *(_DWORD *)(v13 + 20) = v14;
    swift_retain();
    uint64_t v98 = 32;
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v82;
    uint64_t v95 = v15;
    *(void *)(v15 + 16) = v144;
    *(void *)(v15 + 24) = v16;
    sub_1A809EAE4();
    sub_1A809EAE4();
    swift_release();
    swift_release();
    uint64_t v84 = v217;
    uint64_t v100 = swift_allocObject();
    *(void *)(v100 + 16) = v84;
    int v120 = sub_1A8A754B8();
    int v121 = sub_1A8A77468();
    uint64_t v87 = &v195;
    uint64_t v195 = 33;
    unint64_t v85 = sub_1A809EBD0();
    unint64_t v86 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v88 = v196;
    uint64_t v97 = 17;
    uint64_t v102 = swift_allocObject();
    int v92 = 16;
    *(unsigned char *)(v102 + 16) = 16;
    uint64_t v103 = swift_allocObject();
    int v94 = 4;
    *(unsigned char *)(v103 + 16) = 4;
    uint64_t v17 = swift_allocObject();
    uint64_t v89 = v17;
    *(void *)(v17 + 16) = v145;
    *(void *)(v17 + 24) = 0;
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v89;
    uint64_t v104 = v18;
    *(void *)(v18 + 16) = v146;
    *(void *)(v18 + 24) = v19;
    uint64_t v105 = swift_allocObject();
    *(unsigned char *)(v105 + 16) = 0;
    uint64_t v106 = swift_allocObject();
    *(unsigned char *)(v106 + 16) = 1;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v90;
    uint64_t v91 = v20;
    *(void *)(v20 + 16) = v147;
    *(void *)(v20 + 24) = v21;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v91;
    uint64_t v107 = v22;
    *(void *)(v22 + 16) = v148;
    *(void *)(v22 + 24) = v23;
    uint64_t v108 = swift_allocObject();
    *(unsigned char *)(v108 + 16) = v92;
    uint64_t v109 = swift_allocObject();
    *(unsigned char *)(v109 + 16) = v94;
    uint64_t v24 = swift_allocObject();
    uint64_t v93 = v24;
    *(void *)(v24 + 16) = v149;
    *(void *)(v24 + 24) = 0;
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v93;
    uint64_t v110 = v25;
    *(void *)(v25 + 16) = v150;
    *(void *)(v25 + 24) = v26;
    uint64_t v111 = swift_allocObject();
    *(unsigned char *)(v111 + 16) = 0;
    uint64_t v112 = swift_allocObject();
    *(unsigned char *)(v112 + 16) = v94;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v95;
    uint64_t v96 = v27;
    *(void *)(v27 + 16) = v151;
    *(void *)(v27 + 24) = v28;
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v96;
    uint64_t v113 = v29;
    *(void *)(v29 + 16) = v152;
    *(void *)(v29 + 24) = v30;
    uint64_t v114 = swift_allocObject();
    *(unsigned char *)(v114 + 16) = 0;
    uint64_t v115 = swift_allocObject();
    *(unsigned char *)(v115 + 16) = 8;
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v100;
    uint64_t v101 = v31;
    *(void *)(v31 + 16) = v153;
    *(void *)(v31 + 24) = v32;
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v101;
    uint64_t v117 = v33;
    *(void *)(v33 + 16) = v154;
    *(void *)(v33 + 24) = v34;
    uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v116 = sub_1A8A78558();
    int v118 = v35;
    swift_retain();
    uint64_t v36 = v102;
    uint64_t v37 = v118;
    *int v118 = v155;
    v37[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
    swift_retain();
    uint64_t v38 = v103;
    uint64_t v39 = v118;
    v118[2] = v156;
    v39[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
    swift_retain();
    uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v104;
    uint64_t v41 = v118;
    v118[4] = v157;
    v41[5] = v40;
    swift_retain();
    uint64_t v42 = v105;
    uint64_t v43 = v118;
    v118[6] = v158;
    v43[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
    swift_retain();
    uint64_t v44 = v106;
    uint64_t v45 = v118;
    v118[8] = v159;
    v45[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v44;
    swift_retain();
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v107;
    uint64_t v47 = v118;
    v118[10] = v160;
    v47[11] = v46;
    swift_retain();
    uint64_t v48 = v108;
    uint64_t v49 = v118;
    v118[12] = v161;
    v49[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
    swift_retain();
    uint64_t v50 = v109;
    uint64_t v51 = v118;
    v118[14] = v162;
    v51[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v50;
    swift_retain();
    uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v110;
    uint64_t v53 = v118;
    v118[16] = v163;
    v53[17] = v52;
    swift_retain();
    uint64_t v54 = v111;
    uint64_t v55 = v118;
    v118[18] = v164;
    v55[19] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54;
    swift_retain();
    uint64_t v56 = v112;
    uint64_t v57 = v118;
    v118[20] = v165;
    v57[21] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v56;
    swift_retain();
    uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v113;
    uint64_t v59 = v118;
    v118[22] = v166;
    v59[23] = v58;
    swift_retain();
    uint64_t v60 = v114;
    uint64_t v61 = v118;
    v118[24] = v167;
    v61[25] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v60;
    swift_retain();
    uint64_t v62 = v115;
    uint64_t v63 = v118;
    v118[26] = v168;
    v63[27] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v62;
    swift_retain();
    uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v117;
    uint64_t v65 = v118;
    v118[28] = v169;
    v65[29] = v64;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v120, (os_log_type_t)v121))
    {
      uint64_t v66 = v127;
      uint64_t v72 = (uint8_t *)sub_1A8A77888();
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v71 = 0;
      uint64_t v73 = sub_1A809E94C(0);
      uint64_t v74 = sub_1A809E94C(v71);
      uint64_t v75 = &v194;
      uint64_t v194 = v72;
      id v76 = &v193;
      uint64_t v193 = v73;
      uint64_t v77 = &v192;
      uint64_t v192 = v74;
      sub_1A809E9A8(0, &v194);
      sub_1A809E9A8(5, v75);
      uint64_t v190 = v155;
      uint64_t v191 = v102;
      sub_1A809E9BC(&v190, (uint64_t)v75, (uint64_t)v76, (uint64_t)v77);
      uint64_t v78 = v66;
      if (v66)
      {
        __break(1u);
      }
      else
      {
        uint64_t v190 = v156;
        uint64_t v191 = v103;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        uint64_t v69 = 0;
        uint64_t v67 = v69;
        uint64_t v190 = v157;
        uint64_t v191 = v104;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[13] = v67;
        uint64_t v190 = v158;
        uint64_t v191 = v105;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[12] = 0;
        uint64_t v190 = v159;
        uint64_t v191 = v106;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[11] = 0;
        uint64_t v190 = v160;
        uint64_t v191 = v107;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[10] = 0;
        uint64_t v190 = v161;
        uint64_t v191 = v108;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[9] = 0;
        uint64_t v190 = v162;
        uint64_t v191 = v109;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[8] = 0;
        uint64_t v190 = v163;
        uint64_t v191 = v110;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[7] = 0;
        uint64_t v190 = v164;
        uint64_t v191 = v111;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[6] = 0;
        uint64_t v190 = v165;
        uint64_t v191 = v112;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[5] = 0;
        uint64_t v190 = v166;
        uint64_t v191 = v113;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[4] = 0;
        uint64_t v190 = v167;
        uint64_t v191 = v114;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[3] = 0;
        uint64_t v190 = v168;
        uint64_t v191 = v115;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        v68[2] = 0;
        uint64_t v190 = v169;
        uint64_t v191 = v117;
        sub_1A809E9BC(&v190, (uint64_t)&v194, (uint64_t)&v193, (uint64_t)&v192);
        _os_log_impl(&dword_1A7EFF000, v120, (os_log_type_t)v121, "[%.*hhx-%.*X] Finished %ld activities as part of tear down.", v72, v88);
        v68[1] = 0;
        sub_1A809EA08(v73);
        sub_1A809EA08(v74);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v172 + 8))(v175, v171);
  }
  else
  {
    __break(1u);
LABEL_25:
    __break(1u);
  }
  return result;
}

void *sub_1A80BB6DC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_1A80C6754(a1, a2);
}

uint64_t sub_1A80BB720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v11 = sub_1A80CA12C;
  uint64_t v20 = 0;
  uint64_t v19 = 0;
  uint64_t v18 = 0;
  uint64_t v21 = a2;
  uint64_t v10 = *(void *)(a2 - 8);
  unint64_t v9 = (*(void *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  double v3 = MEMORY[0x1F4188790](a3);
  uint64_t v20 = v4;
  uint64_t v19 = v12;
  (*(void (**)(char *, double))(v10 + 16))((char *)v6 - v9, v3);
  swift_retain();
  uint64_t v15 = sub_1A8A76A48();
  uint64_t v7 = v15;
  swift_release();
  uint64_t v18 = v7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  void v6[3] = &v17;
  uint64_t v17 = v7;
  void v6[4] = &v16;
  swift_beginAccess();
  v6[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9746FD0);
  void v6[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97442F0);
  sub_1A80CA154();
  sub_1A8A770A8();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

BOOL sub_1A80BB8E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = *a1;
  uint64_t v4 = a2;
  uint64_t v3 = v5;
  return !sub_1A80BB944((uint64_t)&v3);
}

BOOL sub_1A80BB944(uint64_t a1)
{
  uint64_t v12 = a1;
  uint64_t v25 = 0;
  uint64_t v24 = 0;
  unint64_t v13 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97436F0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (id *)((char *)&v6 - v13);
  uint64_t v14 = *v2;
  uint64_t v25 = v14;
  uint64_t v24 = v1;
  swift_beginAccess();
  uint64_t v15 = *(void *)(v1 + 88);
  char v16 = &v22;
  uint64_t v22 = v14;
  unsigned int v18 = 1;
  char v23 = 0;
  uint64_t v19 = _s15MailboxActivityVMa();
  unint64_t v3 = sub_1A80A57FC();
  MEMORY[0x1AD0DF2C0](v16, v15, &unk_1EFE8B440, v19, v3);
  if ((*(uint64_t (**)(id *, void))(*(void *)(v19 - 8) + 48))(v17, v18) == 0)
  {
    id v10 = *v17;
    id v4 = v10;
    sub_1A80C4970(v17);
    swift_endAccess();
    id v11 = v10;
  }
  else
  {
    uint64_t v7 = 0;
    sub_1A80C4970(v17);
    swift_endAccess();
    id v11 = v7;
  }
  id v21 = v11;
  BOOL v9 = v11 != 0;
  BOOL v8 = v9;
  sub_1A80CA1D8(&v21);
  return v8;
}

uint64_t sub_1A80BBB5C(uint64_t a1)
{
  uint64_t v6 = a1;
  uint64_t v13 = 0;
  unint64_t v4 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E97436F0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)&v4 - v4;
  uint64_t v13 = v1;
  uint64_t v2 = *(void (**)(char *, uint64_t))(*(void *)(_s15MailboxActivityVMa() - 8) + 56);
  int v5 = 1;
  v2(v8, 1);
  uint64_t v7 = &v11;
  uint64_t v11 = 0;
  char v12 = v5 & 1;
  BOOL v9 = &v10;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743DD0);
  sub_1A8A761E8();
  return swift_endAccess();
}

unsigned char *sub_1A80BBC94(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = a1;
  uint64_t v7 = a2;
  uint64_t v13 = 0;
  char v12 = 0;
  uint64_t v9 = 0;
  unint64_t v8 = (*(void *)(*(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v6 - v8;
  uint64_t v13 = v2;
  char v12 = v3;
  sub_1A80C343C(v3, (unsigned char *)&v6 - v8);
  uint64_t v4 = _s15MailboxActivityVMa();
  return sub_1A80D2CE0(v11, (unsigned char *)(v10 + *(int *)(v4 + 20)));
}

uint64_t sub_1A80BBD54()
{
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  __int16 v37 = 0;
  uint64_t v21 = 0;
  uint64_t v18 = type metadata accessor for SyncError();
  unint64_t v19 = (*(void *)(*(void *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v20 = (char *)&v8 - v19;
  unint64_t v22 = (*(void *)(*(void *)(type metadata accessor for ConnectionStatus.Error(v0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v21);
  char v23 = (char *)&v8 - v22;
  unint64_t v24 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v2);
  uint64_t v25 = (char *)&v8 - v24;
  uint64_t v39 = (char *)&v8 - v24;
  uint64_t v28 = type metadata accessor for Activity.MailboxStatus(v3);
  unint64_t v27 = (*(void *)(*(void *)(v28 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v8 - v27;
  uint64_t v38 = v4;
  sub_1A80C343C(v4, (unsigned char *)&v8 - v27);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1A80CA27C(v29, v25);
      uint64_t v39 = v25;
      sub_1A80CA59C(v25, v23);
      sub_1A80BCAD0(v23, v20);
      sub_1A80CA9C0();
      id v8 = (id)swift_allocError();
      sub_1A80CA27C(v20, v6);
      uint64_t v9 = sub_1A8A747C8();

      sub_1A80CAA44((uint64_t)v25);
      uint64_t v17 = v9;
      break;
    case 2:
    case 3:
      uint64_t v17 = v21;
      break;
    default:
      char v5 = *v29;
      uint64_t v13 = *((void *)v29 + 1);
      uint64_t v14 = *((void *)v29 + 2);
      int v15 = v29[24];
      int v16 = v29[25];
      LOBYTE(v34) = v5 & 1;
      uint64_t v35 = v13;
      uint64_t v36 = v14;
      LOBYTE(v37) = v15 & 1;
      HIBYTE(v37) = v16 & 1;
      if (v5)
      {
        BOOL v11 = 0;
      }
      else
      {
        uint64_t v31 = v13;
        uint64_t v32 = v14;
        char v33 = v15 & 1;
        BOOL v12 = (v15 & 1) != 0;
        BOOL v11 = v12;
      }
      if (v11) {
        int v10 = v16 ^ 1;
      }
      else {
        int v10 = 0;
      }
      if (v10) {
        uint64_t v17 = 1;
      }
      else {
        uint64_t v17 = v21;
      }
      break;
  }
  return v17;
}

uint64_t sub_1A80BC0E0()
{
  id v5 = objc_msgSend(v0, sel_progress);
  if (!v5) {
    return 0;
  }
  objc_msgSend(v5, sel_totalUnitCount);
  sub_1A80CA0B0();
  sub_1A80CAC7C();
  sub_1A80CACF8();
  sub_1A8A76C28();
  if ((v9 & 1) != 0
    || (objc_msgSend(v5, sel_completedUnitCount), uint64_t result = sub_1A8A76C28(), (v7 & 1) != 0
                                                                         || v8 <= 0
                                                                         || v6 < 0
                                                                         || v8 < v6))
  {

    return 0;
  }
  if (!__OFSUB__(v8, v6))
  {
    Swift::Int remaining = Activity.MailboxStatus.Info.FetchProgress.init(remaining:completed:)(v8 - v6, v6).remaining;

    return remaining;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A80BC364()
{
  uint64_t v14 = 0;
  uint64_t v13 = 0;
  uint64_t v11 = type metadata accessor for Activity.MailboxStatus(0);
  unint64_t v10 = (*(void *)(*(void *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t)&v5 - v10;
  uint64_t v14 = v0;
  sub_1A80C343C(v0, (unsigned char *)&v5 - v10);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v5 = 0;
    sub_1A80C3170(v12);
    uint64_t v6 = v5;
    uint64_t v7 = v5;
    int v8 = 1;
  }
  else
  {
    uint64_t v1 = *(void *)(v12 + 8);
    uint64_t v2 = *(void *)(v12 + 16);
    int v3 = *(unsigned __int8 *)(v12 + 24);
    uint64_t v13 = v12;
    uint64_t v6 = v1;
    uint64_t v7 = v2;
    int v8 = v3;
  }
  return v6;
}

uint64_t sub_1A80BC47C()
{
  return sub_1A8A76628();
}

id sub_1A80BC4CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3) {
    return objc_msgSend(v8, sel_activityWithID_setCompletedCount_totalCount_, a4, 0, -1);
  }
  sub_1A80CAD74();
  sub_1A80CADF0();
  sub_1A809ECC8();
  sub_1A8A76C38();
  Activity.MailboxStatus.Info.FetchProgress.total.getter(a1, a2);
  sub_1A8A76C38();
  return objc_msgSend(v8, sel_activityWithID_setCompletedCount_totalCount_, a4, v10, v9);
}

uint64_t sub_1A80BC644()
{
  uint64_t v12 = v0;
  id v8 = objc_msgSend(v0, sel_userInfo);
  type metadata accessor for EMActivityUserInfoKey();
  sub_1A80A3570();
  sub_1A8A76018();
  uint64_t v9 = (void *)*MEMORY[0x1E4F5FC48];
  id v1 = (id)*MEMORY[0x1E4F5FC48];
  id v10 = v9;
  MEMORY[0x1AD0DF2C0](v11);
  sub_1A80CA1D8(&v10);
  swift_bridgeObjectRelease();
  if (v11[3])
  {
    BOOL v7 = (swift_dynamicCast() & 1) == 0;

    char v6 = v7;
  }
  else
  {

    sub_1A809F8DC((uint64_t)v11);
    char v6 = 1;
  }
  if (v6) {
    return 3;
  }
  sub_1A809BDE0();
  if (v3) {
    return 3;
  }
  else {
    return v2;
  }
}

uint64_t sub_1A80BC84C()
{
  uint64_t v8 = 1;
  uint64_t v9 = 3;
  unint64_t v19 = 0;
  uint64_t v18 = 0;
  uint64_t v12 = type metadata accessor for Activity.MailboxStatus(0);
  unint64_t v11 = (*(void *)(*(void *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (unsigned __int8 *)&v5 - v11;
  unint64_t v19 = v0;
  sub_1A80C343C(v0, (unsigned char *)&v5 - v11);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1A80CAA44((uint64_t)v13);
      uint64_t v7 = v9;
      break;
    case 2:
      uint64_t v7 = 0;
      break;
    case 3:
      uint64_t v7 = v8;
      break;
    default:
      int v6 = *v13;
      uint64_t v1 = *((void *)v13 + 1);
      uint64_t v2 = *((void *)v13 + 2);
      unsigned __int8 v3 = v13[24];
      uint64_t v18 = v13;
      uint64_t v15 = v1;
      uint64_t v16 = v2;
      char v17 = v3 & 1;
      BOOL v5 = (v3 & 1) == 0;
      if (v3)
      {
        if (v6) {
          uint64_t v7 = v8;
        }
        else {
          uint64_t v7 = v9;
        }
      }
      else
      {
        uint64_t v7 = 2;
      }
      break;
  }
  return v7;
}

uint64_t sub_1A80BCA0C()
{
  return sub_1A8A76628();
}

uint64_t sub_1A80BCA48(uint64_t a1, uint64_t a2)
{
  sub_1A809BE34();
  uint64_t v7 = sub_1A8A770E8();
  id v6 = (id)*MEMORY[0x1E4F5FC48];
  id v2 = (id)*MEMORY[0x1E4F5FC48];
  objc_msgSend(v5, sel_activityWithID_setUserInfoObject_forKey_, a2, v7, v6);

  return swift_unknownObjectRelease();
}

unsigned char *sub_1A80BCAD0@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A80CA27C(a1, a2);
}

uint64_t sub_1A80BCAEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1;
  uint64_t v20 = 0;
  unint64_t v19 = 0;
  id v18 = 0;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746138);
  unint64_t v8 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v1);
  uint64_t v9 = (uint64_t)v6 - v8;
  uint64_t v10 = sub_1A8A776F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v10 - 8;
  unint64_t v13 = (*(void *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  double v2 = MEMORY[0x1F4188790](v15);
  uint64_t v14 = (char *)v6 - v13;
  uint64_t v20 = (char *)v6 - v13;
  unint64_t v19 = v3;
  id v16 = objc_msgSend(v3, sel_mailboxRowID, v2);
  id v18 = v16;
  id v17 = objc_msgSend(v15, sel_mailboxPersistence);
  if (v17)
  {
    v6[1] = v17;
    v6[0] = v17;
    sub_1A8A77708();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A80CAE6C(v9);
    uint64_t v5 = sub_1A8A74C38();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v7, 1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v14, v9, v10);
    sub_1A8A776E8();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

void *sub_1A80BCDA0@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1A80BCDB0()
{
  return sub_1A8A74C28();
}

uint64_t sub_1A80BCDC8(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v25 = 0;
  unint64_t v22 = (void (*)(char *, char *))sub_1A80BD13C;
  uint64_t v42 = 0;
  uint64_t v41 = 0;
  uint64_t v23 = 0;
  v39[0] = 0;
  v39[1] = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  unint64_t v26 = (*(void *)(*(void *)(_s18MailboxPersistenceVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v27 = (uint64_t)&v7 - v26;
  uint64_t v42 = v2;
  uint64_t v41 = v1;
  uint64_t SyncDateHelperVMa = _s18LastSyncDateHelperVMa();
  uint64_t v32 = *(void *)(v1 + *(int *)(SyncDateHelperVMa + 24));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v31 = &v40;
  uint64_t v40 = v32;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746EE8);
  unint64_t v30 = sub_1A80CAF1C();
  unsigned int v33 = sub_1A8A772A8();
  sub_1A809F94C();
  swift_bridgeObjectRelease();
  uint64_t result = v33;
  if ((v33 & 1) == 0)
  {
    uint64_t v4 = v23;
    sub_1A80A5D48((uint64_t)v21 + *(int *)(SyncDateHelperVMa + 20), v27);
    uint64_t v17 = *(uint64_t *)((char *)v21 + *(int *)(SyncDateHelperVMa + 24));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v39[2] = v17;
    uint64_t result = sub_1A80A4C0C(v22, 0, v29, (uint64_t)&type metadata for MailboxRowID, MEMORY[0x1E4FBC248], v30, MEMORY[0x1E4FBC278], v18);
    uint64_t v19 = v4;
    uint64_t v20 = result;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      uint64_t v14 = v20;
      sub_1A809F94C();
      sub_1A81D9524();
      swift_bridgeObjectRelease();
      sub_1A80A5E80(v27);
      uint64_t v15 = *(uint64_t *)((char *)v21 + *(int *)(SyncDateHelperVMa + 24));
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v38 = v15;
      sub_1A8A772F8();
      for (uint64_t i = v19; ; uint64_t i = v11)
      {
        uint64_t v11 = i;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9747288);
        sub_1A8A78038();
        uint64_t v12 = v36;
        unint64_t v13 = v37;
        if (v37 == (void *)1) {
          break;
        }
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        unint64_t v8 = v13;
        uint64_t v34 = v12;
        uint64_t v35 = v13;
        id v7 = *v21;
        id v5 = v7;
        id v6 = v8;
        sub_1A80BD15C(v24, v8);
      }
      uint64_t result = (uint64_t)v39;
      sub_1A809F94C();
    }
  }
  return result;
}

void *sub_1A80BD13C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A80BD15C(uint64_t a1, void *a2)
{
  uint64_t v12 = a1;
  uint64_t v18 = a2;
  uint64_t v22 = 0;
  uint64_t v21 = 0;
  uint64_t v20 = 0;
  uint64_t v19 = 0;
  uint64_t v13 = sub_1A8A74C38();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v13 - 8;
  unint64_t v16 = (*(void *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v18);
  uint64_t v17 = (char *)&v7 - v16;
  uint64_t v22 = v3;
  uint64_t v21 = v4;
  uint64_t v20 = v2;
  id v5 = v4;
  if (v18)
  {
    uint64_t v10 = v18;
    id v9 = v18;
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v12, v13);
    uint64_t v8 = sub_1A8A74B98();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    id v7 = (id)*MEMORY[0x1E4F5FC50];
    id v6 = v7;
    objc_msgSend(v11, sel_activityWithID_setUserInfoObject_forKey_, v9, v8, v7);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A80BD308()
{
  uint64_t result = sub_1A8A76728();
  qword_1E97439B8 = result;
  qword_1E97439C0 = v1;
  return result;
}

uint64_t *sub_1A80BD34C()
{
  if (qword_1E97439C8 != -1) {
    swift_once();
  }
  return &qword_1E97439B8;
}

uint64_t static SyncError.errorDomain.getter()
{
  uint64_t v1 = *sub_1A80BD34C();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t SyncError.errorCode.getter()
{
  uint64_t v8 = 0;
  unint64_t v4 = (*(void *)(*(void *)(type metadata accessor for ConnectionStatus.Error(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  id v5 = (unsigned __int8 *)&v1 - v4;
  uint64_t v8 = (unsigned char *)MEMORY[0x1F4188790](v3);
  sub_1A80CA59C(v8, (unsigned char *)&v1 - v4);
  int v6 = *v5;
  sub_1A80CAA44((uint64_t)v5);
  uint64_t v7 = v6;
  switch((char)v6)
  {
    case 1:
      uint64_t v2 = 2;
      break;
    case 2:
      uint64_t v2 = 3;
      break;
    case 3:
      uint64_t v2 = 4;
      break;
    case 4:
      uint64_t v2 = 5;
      break;
    case 5:
      uint64_t v2 = 6;
      break;
    default:
      uint64_t v2 = 1;
      break;
  }
  return v2;
}

uint64_t SyncError.errorUserInfo.getter()
{
  uint64_t v45 = 0;
  uint64_t v20 = &v44;
  uint64_t v44 = 0;
  uint64_t v19 = 0;
  uint64_t v0 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v17 = *(void *)(*(void *)(v0 - 8) + 64);
  unint64_t v16 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v0);
  unsigned int v33 = (char *)&v12 - v16;
  unint64_t v18 = v16;
  MEMORY[0x1F4188790]((char *)&v12 - v16);
  uint64_t v1 = (char *)&v12 - v18;
  uint64_t v22 = (uint64_t)&v12 - v18;
  uint64_t v45 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743F30);
  sub_1A8A78558();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  uint64_t v44 = sub_1A8A76048();
  id v28 = (id)*MEMORY[0x1E4F28568];
  id v3 = v28;
  uint64_t v24 = sub_1A8A76558();
  uint64_t v23 = v4;
  sub_1A80CA59C(v30, v1);
  uint64_t v5 = sub_1A80BD814();
  unint64_t v26 = v43;
  v43[3] = v21;
  v43[0] = v5;
  v43[1] = v6;
  sub_1A80CAA44(v22);
  uint64_t v25 = v42;
  v42[0] = v24;
  v42[1] = v23;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743E38);
  sub_1A8A761E8();
  uint64_t v7 = v33;

  id v29 = (id)*MEMORY[0x1E4F28588];
  id v8 = v29;
  uint64_t v31 = sub_1A8A76558();
  uint64_t v32 = v9;
  sub_1A80CA59C(v30, v7);
  uint64_t v34 = sub_1A80BF1A0();
  uint64_t v35 = v10;
  sub_1A80CAA44((uint64_t)v33);
  if (v35)
  {
    uint64_t v14 = v34;
    uint64_t v15 = v35;
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    uint64_t v38 = v34;
    uint64_t v39 = v35;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
  }
  uint64_t v36 = v31;
  uint64_t v37 = v32;
  uint64_t v12 = &v44;
  sub_1A8A761E8();

  uint64_t v13 = v44;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A809F94C();
  return v13;
}

uint64_t sub_1A80BD814()
{
  uint64_t v267 = 0;
  uint64_t v274 = (void (*)(char *, char *))sub_1A80C0AAC;
  uint64_t v303 = 0;
  uint64_t v271 = 0;
  uint64_t v299 = 0;
  uint64_t v300 = 0;
  uint64_t v297 = 0;
  uint64_t v298 = 0;
  uint64_t v295 = 0;
  uint64_t v296 = 0;
  uint64_t v293 = 0;
  uint64_t v294 = 0;
  uint64_t v291 = 0;
  uint64_t v292 = 0;
  uint64_t v289 = 0;
  uint64_t v290 = 0;
  uint64_t v287 = 0;
  uint64_t v288 = 0;
  uint64_t v285 = 0;
  uint64_t v286 = 0;
  uint64_t v283 = 0;
  uint64_t v284 = 0;
  uint64_t v281 = 0;
  uint64_t v282 = 0;
  uint64_t v279 = 0;
  uint64_t v280 = 0;
  uint64_t v277 = 0;
  uint64_t v278 = 0;
  uint64_t v275 = 0;
  uint64_t v276 = 0;
  uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
  unint64_t v268 = (*(void *)(*(void *)(v272 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v0 = MEMORY[0x1F4188790](0);
  uint64_t v1 = (char *)v101 - v268;
  uint64_t v269 = (uint64_t)v101 - v268;
  uint64_t v303 = v2;
  uint64_t v3 = type metadata accessor for ConnectionStatus.Error(v0);
  sub_1A80CAFA0(&v270[*(int *)(v3 + 24)], v1);
  sub_1A8364BF0(v274, v271, v272, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB1A0], v273, (uint64_t)&v301);
  sub_1A80C726C(v269);
  uint64_t v263 = v301;
  uint64_t v264 = v302;
  uint64_t v299 = v301;
  uint64_t v300 = v302;
  int v265 = *v270;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v266 = v265;
  switch((char)v265)
  {
    case 1:
      if (v264)
      {
        uint64_t v233 = v263;
        uint64_t v234 = v264;
        uint64_t v222 = v264;
        uint64_t v215 = v263;
        uint64_t v281 = v263;
        uint64_t v282 = v264;
        uint64_t v210 = sub_1A8A76728();
        uint64_t v214 = v24;
        uint64_t v209 = sub_1A8A76728();
        uint64_t v213 = v25;
        id v212 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v211 = v26;
        uint64_t v219 = sub_1A8A746A8();
        uint64_t v221 = v27;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v279 = v219;
        uint64_t v280 = v221;
        uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v218 = sub_1A8A78558();
        uint64_t v216 = v28;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v216[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v29 = sub_1A80CB0C8();
        uint64_t v30 = v215;
        uint64_t v31 = v216;
        uint64_t v32 = v222;
        unint64_t v33 = v29;
        uint64_t v34 = v218;
        v216[4] = v33;
        void *v31 = v30;
        v31[1] = v32;
        sub_1A809B5EC();
        uint64_t v220 = v34;
        uint64_t v223 = sub_1A8A76548();
        uint64_t v224 = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v223;
        uint64_t v260 = v224;
      }
      else
      {
        uint64_t v226 = sub_1A8A76728();
        uint64_t v230 = v20;
        uint64_t v225 = sub_1A8A76728();
        uint64_t v229 = v21;
        id v228 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v227 = v22;
        uint64_t v231 = sub_1A8A746A8();
        uint64_t v232 = v23;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v231;
        uint64_t v260 = v232;
      }
      break;
    case 2:
      if (v264)
      {
        uint64_t v207 = v263;
        uint64_t v208 = v264;
        uint64_t v195 = v264;
        uint64_t v188 = v263;
        uint64_t v285 = v263;
        uint64_t v286 = v264;
        int v181 = 1;
        uint64_t v183 = sub_1A8A76728();
        uint64_t v187 = v40;
        uint64_t v182 = sub_1A8A76728();
        uint64_t v186 = v41;
        id v185 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v184 = v42;
        uint64_t v192 = sub_1A8A746A8();
        uint64_t v194 = v43;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v283 = v192;
        uint64_t v284 = v194;
        uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v191 = sub_1A8A78558();
        uint64_t v189 = v44;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v189[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v45 = sub_1A80CB0C8();
        uint64_t v46 = v188;
        uint64_t v47 = v189;
        uint64_t v48 = v195;
        unint64_t v49 = v45;
        uint64_t v50 = v191;
        v189[4] = v49;
        void *v47 = v46;
        v47[1] = v48;
        sub_1A809B5EC();
        uint64_t v193 = v50;
        uint64_t v196 = sub_1A8A76548();
        uint64_t v197 = v51;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v196;
        uint64_t v260 = v197;
      }
      else
      {
        int v198 = 1;
        uint64_t v200 = sub_1A8A76728();
        uint64_t v204 = v36;
        uint64_t v199 = sub_1A8A76728();
        uint64_t v203 = v37;
        id v202 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v201 = v38;
        uint64_t v205 = sub_1A8A746A8();
        uint64_t v206 = v39;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v205;
        uint64_t v260 = v206;
      }
      break;
    case 3:
      if (v264)
      {
        uint64_t v179 = v263;
        uint64_t v180 = v264;
        uint64_t v167 = v264;
        uint64_t v160 = v263;
        uint64_t v289 = v263;
        uint64_t v290 = v264;
        int v153 = 1;
        uint64_t v155 = sub_1A8A76728();
        uint64_t v159 = v56;
        uint64_t v154 = sub_1A8A76728();
        uint64_t v158 = v57;
        id v157 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v156 = v58;
        uint64_t v164 = sub_1A8A746A8();
        uint64_t v166 = v59;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v287 = v164;
        uint64_t v288 = v166;
        uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v163 = sub_1A8A78558();
        uint64_t v161 = v60;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v161[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v61 = sub_1A80CB0C8();
        uint64_t v62 = v160;
        uint64_t v63 = v161;
        uint64_t v64 = v167;
        unint64_t v65 = v61;
        uint64_t v66 = v163;
        v161[4] = v65;
        *uint64_t v63 = v62;
        v63[1] = v64;
        sub_1A809B5EC();
        uint64_t v165 = v66;
        uint64_t v168 = sub_1A8A76548();
        uint64_t v169 = v67;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v168;
        uint64_t v260 = v169;
      }
      else
      {
        int v170 = 1;
        uint64_t v172 = sub_1A8A76728();
        uint64_t v176 = v52;
        uint64_t v171 = sub_1A8A76728();
        uint64_t v175 = v53;
        id v174 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v173 = v54;
        uint64_t v177 = sub_1A8A746A8();
        uint64_t v178 = v55;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v177;
        uint64_t v260 = v178;
      }
      break;
    case 4:
      if (v264)
      {
        uint64_t v151 = v263;
        uint64_t v152 = v264;
        uint64_t v139 = v264;
        uint64_t v132 = v263;
        uint64_t v293 = v263;
        uint64_t v294 = v264;
        int v125 = 1;
        uint64_t v127 = sub_1A8A76728();
        uint64_t v131 = v72;
        uint64_t v126 = sub_1A8A76728();
        uint64_t v130 = v73;
        id v129 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v128 = v74;
        uint64_t v136 = sub_1A8A746A8();
        uint64_t v138 = v75;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v291 = v136;
        uint64_t v292 = v138;
        uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v135 = sub_1A8A78558();
        uint64_t v133 = v76;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v133[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v77 = sub_1A80CB0C8();
        uint64_t v78 = v132;
        uint64_t v79 = v133;
        uint64_t v80 = v139;
        unint64_t v81 = v77;
        uint64_t v82 = v135;
        v133[4] = v81;
        void *v79 = v78;
        v79[1] = v80;
        sub_1A809B5EC();
        uint64_t v137 = v82;
        uint64_t v140 = sub_1A8A76548();
        uint64_t v141 = v83;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v140;
        uint64_t v260 = v141;
      }
      else
      {
        int v142 = 1;
        uint64_t v144 = sub_1A8A76728();
        uint64_t v148 = v68;
        uint64_t v143 = sub_1A8A76728();
        uint64_t v147 = v69;
        id v146 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v145 = v70;
        uint64_t v149 = sub_1A8A746A8();
        uint64_t v150 = v71;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v149;
        uint64_t v260 = v150;
      }
      break;
    case 5:
      if (v264)
      {
        uint64_t v123 = v263;
        uint64_t v124 = v264;
        uint64_t v112 = v264;
        uint64_t v105 = v263;
        uint64_t v297 = v263;
        uint64_t v298 = v264;
        v101[2] = sub_1A8A76728();
        uint64_t v104 = v88;
        v101[1] = sub_1A8A76728();
        uint64_t v103 = v89;
        id v102 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        v101[3] = v90;
        uint64_t v109 = sub_1A8A746A8();
        uint64_t v111 = v91;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v295 = v109;
        uint64_t v296 = v111;
        uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v108 = sub_1A8A78558();
        uint64_t v106 = v92;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v106[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v93 = sub_1A80CB0C8();
        uint64_t v94 = v105;
        uint64_t v95 = v106;
        uint64_t v96 = v112;
        unint64_t v97 = v93;
        uint64_t v98 = v108;
        v106[4] = v97;
        *uint64_t v95 = v94;
        v95[1] = v96;
        sub_1A809B5EC();
        uint64_t v110 = v98;
        uint64_t v113 = sub_1A8A76548();
        uint64_t v114 = v99;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v113;
        uint64_t v260 = v114;
      }
      else
      {
        uint64_t v116 = sub_1A8A76728();
        uint64_t v120 = v84;
        uint64_t v115 = sub_1A8A76728();
        uint64_t v119 = v85;
        id v118 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v117 = v86;
        uint64_t v121 = sub_1A8A746A8();
        uint64_t v122 = v87;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v121;
        uint64_t v260 = v122;
      }
      break;
    default:
      if (v264)
      {
        uint64_t v261 = v263;
        uint64_t v262 = v264;
        uint64_t v248 = v264;
        uint64_t v241 = v263;
        uint64_t v277 = v263;
        uint64_t v278 = v264;
        uint64_t v236 = sub_1A8A76728();
        uint64_t v240 = v8;
        uint64_t v235 = sub_1A8A76728();
        uint64_t v239 = v9;
        id v238 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v237 = v10;
        uint64_t v245 = sub_1A8A746A8();
        uint64_t v247 = v11;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v275 = v245;
        uint64_t v276 = v247;
        uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v244 = sub_1A8A78558();
        uint64_t v242 = v12;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v242[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v13 = sub_1A80CB0C8();
        uint64_t v14 = v241;
        uint64_t v15 = v242;
        uint64_t v16 = v248;
        unint64_t v17 = v13;
        uint64_t v18 = v244;
        v242[4] = v17;
        *uint64_t v15 = v14;
        v15[1] = v16;
        sub_1A809B5EC();
        uint64_t v246 = v18;
        uint64_t v249 = sub_1A8A76548();
        uint64_t v250 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v249;
        uint64_t v260 = v250;
      }
      else
      {
        uint64_t v252 = sub_1A8A76728();
        uint64_t v256 = v4;
        uint64_t v251 = sub_1A8A76728();
        uint64_t v255 = v5;
        id v254 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v253 = v6;
        uint64_t v257 = sub_1A8A746A8();
        uint64_t v258 = v7;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = v257;
        uint64_t v260 = v258;
      }
      break;
  }
  return v259;
}

uint64_t sub_1A80BF1A0()
{
  uint64_t v290 = 0;
  uint64_t v289 = 0;
  uint64_t v287 = 0;
  uint64_t v288 = 0;
  uint64_t v285 = 0;
  uint64_t v286 = 0;
  uint64_t v283 = 0;
  uint64_t v284 = 0;
  uint64_t v281 = 0;
  uint64_t v282 = 0;
  uint64_t v279 = 0;
  uint64_t v280 = 0;
  uint64_t v277 = 0;
  uint64_t v278 = 0;
  uint64_t v275 = 0;
  uint64_t v276 = 0;
  unsigned int v274 = 0;
  uint64_t v272 = 0;
  uint64_t v273 = 0;
  CFStringRef v271 = 0;
  uint64_t v269 = 0;
  uint64_t v270 = 0;
  unsigned int v268 = 0;
  uint64_t v266 = 0;
  uint64_t v267 = 0;
  int v265 = 0;
  uint64_t v263 = 0;
  uint64_t v264 = 0;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
  unint64_t v253 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v1);
  uint64_t v262 = (uint64_t *)((char *)&v101 - v253);
  uint64_t v254 = 0;
  uint64_t v261 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v259 = *(void *)(v261 - 8);
  uint64_t v260 = v261 - 8;
  unint64_t v255 = (*(void *)(v259 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = MEMORY[0x1F4188790](v254);
  uint64_t v256 = (uint64_t *)((char *)&v101 - v255);
  unint64_t v257 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v258 = (char *)&v101 - v257;
  uint64_t v290 = (char *)&v101 - v257;
  uint64_t v289 = v0;
  uint64_t v5 = type metadata accessor for ConnectionStatus.Error(v4);
  sub_1A80CB144((void *)(v0 + *(int *)(v5 + 20)), v262);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v259 + 48))(v262, 1, v261) == 1)
  {
    uint64_t v101 = 0;
    sub_1A80CB3A0((uint64_t)v262);
    uint64_t v246 = v101;
    uint64_t v247 = v101;
  }
  else
  {
    sub_1A80CB4E8(v262, v258);
    sub_1A80CB5B4(v258, v256);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v143 = *v256;
        uint64_t v154 = v256[1];
        uint64_t v147 = v256[2];
        uint64_t v153 = v256[3];
        uint64_t v279 = v143;
        uint64_t v280 = v154;
        uint64_t v277 = v147;
        uint64_t v278 = v153;
        int v136 = 1;
        uint64_t v138 = sub_1A8A76728();
        uint64_t v142 = v61;
        uint64_t v137 = sub_1A8A76728();
        uint64_t v141 = v62;
        id v140 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v139 = v63;
        uint64_t v150 = sub_1A8A746A8();
        uint64_t v152 = v64;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v275 = v150;
        uint64_t v276 = v152;
        uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v144 = sub_1A8A78558();
        uint64_t v148 = v65;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v145 = MEMORY[0x1E4FBB1A0];
        v148[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v66 = sub_1A80CB0C8();
        uint64_t v67 = v143;
        uint64_t v68 = v148;
        uint64_t v69 = v154;
        unint64_t v146 = v66;
        v148[4] = v66;
        void *v68 = v67;
        v68[1] = v69;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v70 = v144;
        unint64_t v71 = v146;
        uint64_t v72 = v147;
        uint64_t v73 = v148;
        uint64_t v74 = v153;
        v148[8] = v145;
        v73[9] = v71;
        v73[5] = v72;
        v73[6] = v74;
        sub_1A809B5EC();
        uint64_t v151 = v70;
        uint64_t v155 = sub_1A8A76548();
        uint64_t v156 = v75;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A80CB750((uint64_t)v258);
        uint64_t v246 = v155;
        uint64_t v247 = v156;
        break;
      case 2:
        uint64_t v126 = *v256;
        uint64_t v133 = v256[1];
        uint64_t v283 = v126;
        uint64_t v284 = v133;
        int v119 = 1;
        uint64_t v121 = sub_1A8A76728();
        uint64_t v125 = v76;
        uint64_t v120 = sub_1A8A76728();
        uint64_t v124 = v77;
        id v123 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v122 = v78;
        uint64_t v130 = sub_1A8A746A8();
        uint64_t v132 = v79;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v281 = v130;
        uint64_t v282 = v132;
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v129 = sub_1A8A78558();
        uint64_t v127 = v80;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v127[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v81 = sub_1A80CB0C8();
        uint64_t v82 = v126;
        uint64_t v83 = v127;
        uint64_t v84 = v133;
        unint64_t v85 = v81;
        uint64_t v86 = v129;
        v127[4] = v85;
        *uint64_t v83 = v82;
        v83[1] = v84;
        sub_1A809B5EC();
        uint64_t v131 = v86;
        uint64_t v134 = sub_1A8A76548();
        uint64_t v135 = v87;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A80CB750((uint64_t)v258);
        uint64_t v246 = v134;
        uint64_t v247 = v135;
        break;
      case 3:
        uint64_t v109 = *v256;
        uint64_t v116 = v256[1];
        uint64_t v287 = v109;
        uint64_t v288 = v116;
        int v102 = 1;
        uint64_t v104 = sub_1A8A76728();
        uint64_t v108 = v88;
        uint64_t v103 = sub_1A8A76728();
        uint64_t v107 = v89;
        id v106 = sub_1A80C0DAC();
        sub_1A80C0DEC();
        uint64_t v105 = v90;
        uint64_t v113 = sub_1A8A746A8();
        uint64_t v115 = v91;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v285 = v113;
        uint64_t v286 = v115;
        uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
        uint64_t v112 = sub_1A8A78558();
        uint64_t v110 = v92;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v110[3] = MEMORY[0x1E4FBB1A0];
        unint64_t v93 = sub_1A80CB0C8();
        uint64_t v94 = v109;
        uint64_t v95 = v110;
        uint64_t v96 = v116;
        unint64_t v97 = v93;
        uint64_t v98 = v112;
        v110[4] = v97;
        *uint64_t v95 = v94;
        v95[1] = v96;
        sub_1A809B5EC();
        uint64_t v114 = v98;
        uint64_t v117 = sub_1A8A76548();
        uint64_t v118 = v99;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A80CB750((uint64_t)v258);
        uint64_t v246 = v117;
        uint64_t v247 = v118;
        break;
      default:
        uint64_t v248 = sub_1A8A75C38();
        uint64_t v249 = *(void *)(v248 - 8);
        uint64_t v250 = v248 - 8;
        int v251 = (*(uint64_t (**)(uint64_t *))(v249 + 88))(v256);
        if (v251 == *MEMORY[0x1E4F38B48])
        {
          (*(void (**)(uint64_t *, uint64_t))(v249 + 96))(v256, v248);
          int v235 = *(_DWORD *)v256;
          int v265 = v235;
          int v227 = 1;
          uint64_t v229 = sub_1A8A76728();
          uint64_t v233 = v6;
          uint64_t v228 = sub_1A8A76728();
          uint64_t v232 = v7;
          id v231 = sub_1A80C0DAC();
          sub_1A80C0DEC();
          uint64_t v230 = v8;
          uint64_t v234 = 0;
          uint64_t v241 = sub_1A8A746A8();
          uint64_t v243 = v9;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v263 = v241;
          uint64_t v264 = v243;
          uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
          uint64_t v240 = sub_1A8A78558();
          id v238 = v10;
          unint64_t v236 = sub_1A80CB84C();
          unsigned int v11 = sub_1A8A755F8();
          id v237 = sub_1A80C0E18(v11);
          v238[3] = v236;
          unint64_t v12 = sub_1A80CB8B4();
          id v13 = v237;
          uint64_t v14 = v238;
          unint64_t v15 = v12;
          uint64_t v16 = v240;
          v238[4] = v15;
          *uint64_t v14 = v13;
          sub_1A809B5EC();
          uint64_t v242 = v16;
          uint64_t v244 = sub_1A8A76548();
          uint64_t v245 = v17;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A80CB750((uint64_t)v258);
          uint64_t v246 = v244;
          uint64_t v247 = v245;
        }
        else if (v251 == *MEMORY[0x1E4F38B38])
        {
          (*(void (**)(uint64_t *, uint64_t))(v249 + 96))(v256, v248);
          unsigned int v216 = *(_DWORD *)v256;
          unsigned int v268 = v216;
          int v208 = 1;
          uint64_t v210 = sub_1A8A76728();
          uint64_t v214 = v18;
          uint64_t v209 = sub_1A8A76728();
          uint64_t v213 = v19;
          id v212 = sub_1A80C0DAC();
          sub_1A80C0DEC();
          uint64_t v211 = v20;
          uint64_t v215 = 0;
          uint64_t v222 = sub_1A8A746A8();
          uint64_t v224 = v21;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v266 = v222;
          uint64_t v267 = v224;
          uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
          uint64_t v221 = sub_1A8A78558();
          uint64_t v219 = v22;
          unint64_t v217 = sub_1A80CB84C();
          id v218 = sub_1A80C0E18(v216);
          v219[3] = v217;
          unint64_t v23 = sub_1A80CB8B4();
          id v24 = v218;
          uint64_t v25 = v219;
          unint64_t v26 = v23;
          uint64_t v27 = v221;
          v219[4] = v26;
          *uint64_t v25 = v24;
          sub_1A809B5EC();
          uint64_t v223 = v27;
          uint64_t v225 = sub_1A8A76548();
          uint64_t v226 = v28;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A80CB750((uint64_t)v258);
          uint64_t v246 = v225;
          uint64_t v247 = v226;
        }
        else if (v251 == *MEMORY[0x1E4F38B40])
        {
          (*(void (**)(uint64_t *, uint64_t))(v249 + 96))(v256, v248);
          unsigned int v206 = *(_DWORD *)v256;
          unsigned int v274 = v206;
          CFStringRef v207 = SecCopyErrorMessageString(v206, 0);
          if (v207)
          {
            CFStringRef v205 = v207;
            id v202 = (__CFString *)v207;
            CFStringRef v271 = v207;
            int v184 = 1;
            uint64_t v186 = sub_1A8A76728();
            uint64_t v190 = v29;
            uint64_t v185 = sub_1A8A76728();
            uint64_t v189 = v30;
            id v188 = sub_1A80C0DAC();
            sub_1A80C0DEC();
            uint64_t v187 = v31;
            uint64_t v193 = 0;
            uint64_t v199 = sub_1A8A746A8();
            uint64_t v201 = v32;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v269 = v199;
            uint64_t v270 = v201;
            uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
            uint64_t v198 = sub_1A8A78558();
            uint64_t v196 = v33;
            uint64_t v34 = v202;
            uint64_t v191 = sub_1A8A76558();
            uint64_t v192 = v35;
            v196[3] = MEMORY[0x1E4FBB1A0];
            unint64_t v36 = sub_1A80CB0C8();
            uint64_t v37 = v191;
            uint64_t v38 = v192;
            uint64_t v39 = v196;
            v196[4] = v36;
            *uint64_t v39 = v37;
            v39[1] = v38;
            unint64_t v194 = sub_1A80CB84C();
            id v195 = sub_1A80C0E18(v206);
            v196[8] = v194;
            unint64_t v40 = sub_1A80CB8B4();
            uint64_t v41 = (uint64_t)v195;
            uint64_t v42 = v196;
            unint64_t v43 = v40;
            uint64_t v44 = v198;
            v196[9] = v43;
            v42[5] = v41;
            sub_1A809B5EC();
            uint64_t v200 = v44;

            uint64_t v203 = sub_1A8A76548();
            uint64_t v204 = v45;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_1A80CB750((uint64_t)v258);
            uint64_t v246 = v203;
            uint64_t v247 = v204;
          }
          else
          {
            int v166 = 1;
            uint64_t v168 = sub_1A8A76728();
            uint64_t v172 = v46;
            uint64_t v167 = sub_1A8A76728();
            uint64_t v171 = v47;
            id v170 = sub_1A80C0DAC();
            sub_1A80C0DEC();
            uint64_t v169 = v48;
            uint64_t v173 = 0;
            uint64_t v179 = sub_1A8A746A8();
            uint64_t v181 = v49;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v272 = v179;
            uint64_t v273 = v181;
            uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9746050);
            uint64_t v178 = sub_1A8A78558();
            uint64_t v176 = v50;
            unint64_t v174 = sub_1A80CB84C();
            id v175 = sub_1A80C0E18(v206);
            v176[3] = v174;
            unint64_t v51 = sub_1A80CB8B4();
            id v52 = v175;
            uint64_t v53 = v176;
            unint64_t v54 = v51;
            uint64_t v55 = v178;
            v176[4] = v54;
            *uint64_t v53 = v52;
            sub_1A809B5EC();
            uint64_t v180 = v55;
            uint64_t v182 = sub_1A8A76548();
            uint64_t v183 = v56;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A80CB750((uint64_t)v258);
            uint64_t v246 = v182;
            uint64_t v247 = v183;
          }
        }
        else
        {
          int v157 = 1;
          uint64_t v159 = sub_1A8A76728();
          uint64_t v163 = v57;
          uint64_t v158 = sub_1A8A76728();
          uint64_t v162 = v58;
          id v161 = sub_1A80C0DAC();
          sub_1A80C0DEC();
          uint64_t v160 = v59;
          uint64_t v164 = sub_1A8A746A8();
          uint64_t v165 = v60;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t *, uint64_t))(v249 + 8))(v256, v248);
          sub_1A80CB750((uint64_t)v258);
          uint64_t v246 = v164;
          uint64_t v247 = v165;
        }
        break;
    }
  }
  return v246;
}

uint64_t sub_1A80C09D4()
{
  return static SyncError.errorDomain.getter();
}

uint64_t sub_1A80C09EC()
{
  return SyncError.errorCode.getter();
}

uint64_t sub_1A80C0A04()
{
  return SyncError.errorUserInfo.getter();
}

uint64_t sub_1A80C0A1C()
{
  return sub_1A8A786C8();
}

uint64_t sub_1A80C0A4C()
{
  return sub_1A8A786B8();
}

uint64_t sub_1A80C0A7C()
{
  return sub_1A8A78708();
}

uint64_t sub_1A80C0A94()
{
  return sub_1A8A786D8();
}

void sub_1A80C0AAC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v23 = a1;
  uint64_t v33 = 0;
  id v32 = 0;
  uint64_t v13 = 0;
  uint64_t v26 = sub_1A8A74C38();
  uint64_t v24 = *(void *)(v26 - 8);
  uint64_t v25 = v26 - 8;
  unint64_t v12 = (*(void *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v27 = (char *)&v11 - v12;
  uint64_t v17 = sub_1A8A74CE8();
  uint64_t v15 = *(void *)(v17 - 8);
  uint64_t v16 = v17 - 8;
  unint64_t v14 = (*(void *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v11 - v14;
  uint64_t v33 = v2;
  sub_1A80D2C78();
  id v31 = sub_1A80C0D7C();
  id v32 = v31;
  id v19 = objc_msgSend(self, sel_currentLocale);
  sub_1A8A74CC8();
  uint64_t v3 = (void *)sub_1A8A74CA8();
  uint64_t v4 = v27;
  id v20 = v3;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v17);

  objc_msgSend(v31, sel_setLocale_, v20);
  sub_1A8A76728();
  uint64_t v21 = v5;
  id v22 = (id)sub_1A8A76538();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setLocalizedDateFormatFromTemplate_, v22);

  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v4, v23, v26);
  id v28 = (id)sub_1A8A74B98();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v26);
  id v30 = objc_msgSend(v31, sel_stringFromDate_, v28);

  uint64_t v6 = sub_1A8A76558();
  uint64_t v7 = v29;
  uint64_t v8 = v6;
  uint64_t v9 = v30;
  uint64_t *v29 = v8;
  v7[1] = v10;
}

id sub_1A80C0D7C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1A80C2BC8();
}

id sub_1A80C0DAC()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  return v0;
}

uint64_t sub_1A80C0DEC()
{
  return sub_1A8A76728();
}

id sub_1A80C0E18(unsigned int a1)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1A80C2BEC(a1);
}

void sub_1A80C0E58(void *a1@<X8>)
{
  uint64_t v14 = v1;
  swift_beginAccess();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  sub_1A80C5868();
  uint64_t v6 = sub_1A8A76FD8();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 88);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_endAccess();
  uint64_t v13 = v7;
  uint64_t v11 = sub_1A80C0FF4;
  uint64_t v12 = 0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743DD0);
  unint64_t v2 = sub_1A80CB9EC();
  sub_1A80A4C0C((void (*)(char *, char *))sub_1A80CB9BC, (uint64_t)v10, v8, (uint64_t)&unk_1EFE8C028, MEMORY[0x1E4FBC248], v2, MEMORY[0x1E4FBC278], v9);
  sub_1A809F94C();
  nullsub_1(v6);
  *a1 = v3;
  a1[1] = v4;
}

void *sub_1A80C0FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v12 = a3;
  uint64_t v7 = a1;
  uint64_t v8 = a2;
  uint64_t v17 = 0;
  char v18 = 0;
  uint64_t v16 = 0;
  unint64_t v9 = (*(void *)(*(void *)(_s15MailboxActivityVMa() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (id *)((char *)&v7 - v9);
  uint64_t v4 = *(void *)v3;
  LOBYTE(v3) = *(unsigned char *)(v3 + 8);
  uint64_t v17 = v4;
  char v18 = v3 & 1;
  uint64_t v16 = v5;
  uint64_t v11 = &v14;
  uint64_t v14 = v4;
  char v15 = v3 & 1;
  sub_1A80C777C(v5, (uint64_t *)((char *)&v7 - v9));
  uint64_t v13 = v19;
  sub_1A80C10F0((uint64_t)v11, v10, v19);
  return memcpy(v12, v13, 0x30uLL);
}

uint64_t sub_1A80C10F0@<X0>(uint64_t a1@<X0>, id *a2@<X1>, void *a3@<X8>)
{
  id v32 = a3;
  uint64_t v37 = a1;
  unint64_t v36 = a2;
  uint64_t v34 = 0;
  uint64_t v33 = sub_1A80C2758;
  memset(__b, 0, sizeof(__b));
  uint64_t v46 = 0;
  char v47 = 0;
  uint64_t v45 = 0;
  uint64_t v44 = 0;
  uint64_t v35 = 0;
  uint64_t v38 = type metadata accessor for Activity.MailboxStatus(0);
  unint64_t v39 = (*(void *)(*(void *)(v38 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v37);
  unint64_t v40 = (char *)v19 - v39;
  uint64_t v41 = *v3;
  char v4 = *((unsigned char *)v3 + 8);
  uint64_t v46 = v41;
  char v47 = v4 & 1;
  uint64_t v45 = v5;
  __b[2] = 0;
  __b[3] = 0;
  if (v4)
  {
    __b[0] = 0;
    __b[1] = 0;
  }
  else
  {
    uint64_t v31 = v41;
    uint64_t v44 = v41;
    void v43[4] = v41;
    v43[2] = sub_1A8A76628();
    v43[3] = v6;
    sub_1A80CBA70();
    sub_1A8A77298();
    uint64_t v28 = v43[8];
    uint64_t v29 = MEMORY[0x1AD0DFA30](v43[5], v43[6], v43[7]);
    uint64_t v30 = v7;
    swift_bridgeObjectRelease();
    __b[0] = v29;
    __b[1] = v30;
  }
  uint64_t v8 = v35;
  id v26 = *v36;
  id v9 = v26;
  id v42 = v26;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9744A78);
  uint64_t result = sub_1A80C2880((void (*)(char *, char *))v33, 0, v10, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB1A0], v27, (uint64_t)v43);
  if (v8)
  {
    __break(1u);
  }
  else
  {
    sub_1A80CA1D8(&v42);
    uint64_t v22 = v43[0];
    uint64_t v23 = v43[1];
    v19[1] = __b;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __b[2] = v22;
    __b[3] = v23;
    swift_bridgeObjectRelease();
    uint64_t v12 = _s15MailboxActivityVMa();
    sub_1A80C343C((unsigned char *)v36 + *(int *)(v12 + 20), v40);
    uint64_t v25 = sub_1A8A76628();
    uint64_t v24 = v13;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __b[4] = v25;
    __b[5] = v24;
    uint64_t v20 = __b[0];
    uint64_t v21 = __b[1];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A80C4FE0(v36);
    sub_1A80CBAEC();
    uint64_t v14 = v21;
    uint64_t v15 = v22;
    uint64_t v16 = v23;
    uint64_t v17 = v24;
    char v18 = v32;
    uint64_t result = v25;
    *id v32 = v20;
    v18[1] = v14;
    v18[2] = v15;
    v18[3] = v16;
    v18[4] = result;
    v18[5] = v17;
  }
  return result;
}

void *sub_1A80C14BC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, void *a3@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743690);
  a2(a1, a1 + *(int *)(v3 + 48));
  return memcpy(a3, v8, 0x30uLL);
}

BOOL sub_1A80C153C(char a1, char a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 1;
    }
    else {
      uint64_t v4 = 2;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = 2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v4 == v3;
}

uint64_t sub_1A80C1610()
{
  return sub_1A8A78758();
}

uint64_t sub_1A80C16BC()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A76728();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v4 = sub_1A8A76748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v5 = 0;
LABEL_8:
    swift_bridgeObjectRelease();
    return v5;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A76728();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v3 = sub_1A8A76748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v5 = 1;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A76728();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v2 = sub_1A8A76748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v5 = 2;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 3;
}

uint64_t sub_1A80C18F0()
{
  return 3;
}

uint64_t sub_1A80C1908()
{
  return sub_1A8A77CE8();
}

uint64_t sub_1A80C1954()
{
  return 0;
}

uint64_t sub_1A80C1970()
{
  return sub_1A8A76728();
}

BOOL sub_1A80C1A44(char *a1, char *a2)
{
  return sub_1A80C153C(*a1, *a2);
}

uint64_t sub_1A80C1A68()
{
  return sub_1A80C1908();
}

uint64_t sub_1A80C1A84()
{
  return sub_1A80C1610();
}

uint64_t sub_1A80C1AA0()
{
  return sub_1A80C1970();
}

uint64_t sub_1A80C1ABC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A80C16BC();
  *a1 = result;
  return result;
}

uint64_t sub_1A80C1AE8()
{
  return sub_1A80C1954();
}

uint64_t sub_1A80C1B08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A80C18F0();
  *a1 = result;
  return result;
}

uint64_t sub_1A80C1B34()
{
  return sub_1A8A78A48();
}

uint64_t sub_1A80C1B64()
{
  return sub_1A8A78A58();
}

uint64_t sub_1A80C1B94(uint64_t a1)
{
  uint64_t v17 = a1;
  uint64_t v35 = 0;
  uint64_t v34 = 0;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97458C0);
  uint64_t v18 = *(void *)(v28 - 8);
  uint64_t v19 = v28 - 8;
  unint64_t v20 = (*(void *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v23 = (char *)v6 - v20;
  uint64_t v35 = (void *)MEMORY[0x1F4188790](v17);
  uint64_t v34 = v1;
  uint64_t v21 = v35[3];
  uint64_t v22 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v21);
  sub_1A80CBBB0();
  sub_1A8A78858();
  uint64_t v2 = v25;
  uint64_t v26 = *v24;
  uint64_t v27 = v24[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v33 = 0;
  sub_1A8A783D8();
  uint64_t v29 = v2;
  uint64_t v30 = v2;
  if (v2)
  {
    uint64_t v7 = v30;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v28);
    uint64_t v8 = v7;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = v29;
    uint64_t v13 = v24[2];
    uint64_t v14 = v24[3];
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v32 = 1;
    sub_1A8A783D8();
    uint64_t v15 = v3;
    uint64_t v16 = v3;
    if (v3)
    {
      id v6[2] = v16;
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v28);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v15;
      uint64_t v9 = v24[4];
      uint64_t v10 = v24[5];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char v31 = 2;
      sub_1A8A78438();
      uint64_t v11 = v4;
      uint64_t v12 = v4;
      if (v4) {
        v6[1] = v12;
      }
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v28);
    }
  }
  return result;
}

BOOL sub_1A80C1EC0(char a1, char a2)
{
  return ((a1 & 1) != 0) == (unint64_t)((a2 & 1) != 0);
}

uint64_t sub_1A80C1F44()
{
  return sub_1A8A78758();
}

uint64_t sub_1A80C1FC4()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A76728();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v3 = sub_1A8A76748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
LABEL_6:
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A76728();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char v2 = sub_1A8A76748();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
    char v4 = 1;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 2;
}

uint64_t sub_1A80C2164()
{
  return 2;
}

uint64_t sub_1A80C217C()
{
  return sub_1A8A77CE8();
}

uint64_t sub_1A80C21D8()
{
  return 0;
}

uint64_t sub_1A80C21FC()
{
  return sub_1A8A76728();
}

uint64_t sub_1A80C2288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = a1;
  uint64_t v18 = a2;
  uint64_t v10 = a3;
  uint64_t v28 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97458C8);
  uint64_t v12 = *(void *)(v19 - 8);
  uint64_t v13 = v19 - 8;
  unint64_t v14 = (*(void *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v17 = (char *)v8 - v14;
  uint64_t v28 = (void *)MEMORY[0x1F4188790](v11);
  uint64_t v26 = v3;
  uint64_t v27 = v4;
  uint64_t v15 = v28[3];
  uint64_t v16 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v15);
  sub_1A80CBCB0();
  sub_1A8A78858();
  uint64_t v5 = v20;
  char v25 = 0;
  sub_1A8A78458();
  uint64_t v21 = v5;
  uint64_t v22 = v5;
  if (v5)
  {
    v8[2] = v22;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    v8[6] = &v24;
    uint64_t v24 = v10;
    v8[4] = &v23;
    char v23 = 1;
    v8[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9744420);
    sub_1A80D29C8();
    uint64_t v6 = v21;
    sub_1A8A78468();
    v8[7] = v6;
    uint64_t v9 = v6;
    if (v6) {
      v8[1] = v9;
    }
    sub_1A809F94C();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v19);
  }
}

uint64_t sub_1A80C2514(uint64_t a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1A80C1B94(a1);
}

BOOL sub_1A80C258C(unsigned char *a1, unsigned char *a2)
{
  return sub_1A80C1EC0(*a1 & 1, *a2 & 1);
}

uint64_t sub_1A80C25B8()
{
  return sub_1A80C217C();
}

uint64_t sub_1A80C25D8()
{
  return sub_1A80C1F44();
}

uint64_t sub_1A80C25F8()
{
  return sub_1A80C21FC();
}

uint64_t sub_1A80C2618@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A80C1FC4();
  *a1 = result;
  return result;
}

uint64_t sub_1A80C2644()
{
  return sub_1A80C21D8();
}

uint64_t sub_1A80C2668@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A80C2164();
  *a1 = result;
  return result;
}

uint64_t sub_1A80C2694()
{
  return sub_1A8A78A48();
}

uint64_t sub_1A80C26C4()
{
  return sub_1A8A78A58();
}

uint64_t sub_1A80C26F4(uint64_t a1)
{
  return sub_1A80C2288(a1, *v1, v1[1]);
}

uint64_t sub_1A80C2758@<X0>(uint64_t *a1@<X8>)
{
  sub_1A8A78538();
  sub_1A8A76728();
  sub_1A8A78528();
  swift_bridgeObjectRelease();
  sub_1A80C99DC();
  sub_1A80D2BF4();
  sub_1A8A78508();
  sub_1A8A76728();
  sub_1A8A78528();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A809F920();
  uint64_t result = sub_1A8A76708();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_1A80C2880@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v18 = a7;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v25 = a6;
  uint64_t v39 = a4;
  uint64_t v38 = a5;
  uint64_t v26 = *(void *)(a4 - 8);
  uint64_t v27 = a4 - 8;
  unint64_t v28 = (*(void *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v29 = (char *)v17 - v28;
  uint64_t v35 = *(void *)(v9 + 16);
  uint64_t v37 = v35;
  uint64_t v33 = *(void *)(v35 - 8);
  uint64_t v34 = v35 - 8;
  unint64_t v30 = (*(void *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v31 = (char *)v17 - v30;
  unint64_t v32 = (*(void *)(*(void *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = (const void *)MEMORY[0x1F4188790](v10);
  unint64_t v36 = (char *)v17 - v32;
  sub_1A80D2ADC(v12, (char *)v17 - v32, v13, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v36, 1, v35) == 1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 1);
    v17[1] = v24;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v36, v35);
    uint64_t v16 = v24;
    v19(v31, v29);
    v17[0] = v16;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v35);
    if (v16)
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v29, v22);
    }
    else
    {
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 0, 1);
      return v17[0];
    }
  }
  return result;
}

id sub_1A80C2BC8()
{
  return objc_msgSend(v0, sel_init);
}

id sub_1A80C2BEC(uint64_t a1)
{
  return objc_msgSend(v1, sel_initWithInt_, a1);
}

unint64_t sub_1A80C2C14()
{
  uint64_t v2 = qword_1E9743020;
  if (!qword_1E9743020)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743020);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80C2C90()
{
  return swift_retain();
}

void *sub_1A80C2CD4(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = a2;
  *a2 = v4;
  a2[1] = a1[1];
  return result;
}

id *sub_1A80C2D1C(id *a1)
{
  uint64_t v3 = *(int *)(_s18LastSyncDateHelperVMa() + 20);
  uint64_t v1 = sub_1A8A74998();
  (*(void (**)(void))(*(void *)(v1 - 8) + 8))();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_1A80C2E18(unsigned char *a1, unsigned char *a2)
{
  uint64_t v17 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a2 = *a1;
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error(0);
    __dst = &a2[*(int *)(v10 + 20)];
    uint64_t v12 = &a1[*(int *)(v10 + 20)];
    uint64_t v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v14 + 48))(v12, 1))
    {
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(__dst, v12, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dst, v12, *(void *)(v14 + 64));
      }
      else
      {
        uint64_t v2 = sub_1A8A75C38();
        (*(void (**)(unsigned char *, unsigned char *))(*(void *)(v2 - 8) + 32))(__dst, v12);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v6 = &a2[*(int *)(v10 + 24)];
    __srCC_MD5_CTX c = &a1[*(int *)(v10 + 24)];
    uint64_t v8 = sub_1A8A74C38();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 48))(__src, 1))
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(v6, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v6, __src, v8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v17 - 8) + 64));
  }
  return a2;
}

uint64_t sub_1A80C3170(uint64_t a1)
{
  type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v10 = a1 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1))
    {
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v3 = EnumCaseMultiPayload;
        char v2 = 1;
      }
      else
      {
        uint64_t v3 = 0;
        char v2 = 0;
      }
      if ((v2 & 1) == 0)
      {
        switch(v3)
        {
          case 0:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v10);
            break;
          case 1:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2:
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    uint64_t v6 = a1 + *(int *)(v9 + 24);
    uint64_t v7 = sub_1A8A74C38();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return a1;
}

uint64_t sub_1A80C33A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C33D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C33FC()
{
  return swift_deallocObject();
}

unsigned char *sub_1A80C343C(unsigned char *a1, unsigned char *a2)
{
  uint64_t v21 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a2 = *a1;
    uint64_t v14 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v15 = &a2[*(int *)(v14 + 20)];
    uint64_t v16 = &a1[*(int *)(v14 + 20)];
    uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t))(v18 + 48))(v16, 1))
    {
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(v15, v16, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v15 = *v16;
          uint64_t v12 = v16[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v15[1] = v12;
          _DWORD v15[2] = v16[2];
          uint64_t v13 = v16[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v15[3] = v13;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *uint64_t v15 = *v16;
          uint64_t v11 = v16[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v15[1] = v11;
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *uint64_t v15 = *v16;
          uint64_t v10 = v16[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v15[1] = v10;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          uint64_t v2 = sub_1A8A75C38();
          (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(v15, v16);
          swift_storeEnumTagMultiPayload();
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    __dst = &a2[*(int *)(v14 + 24)];
    __srCC_MD5_CTX c = &a1[*(int *)(v14 + 24)];
    uint64_t v8 = sub_1A8A74C38();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 48))(__src, 1))
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(__dst, __src, v8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v21 - 8) + 64));
  }
  return a2;
}

uint64_t sub_1A80C3868()
{
  uint64_t v0 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 80);
  uint64_t v13 = (v0 + 16) & ~v0;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v10 = v12 + v13 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1))
    {
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v3 = EnumCaseMultiPayload;
        char v2 = 1;
      }
      else
      {
        uint64_t v3 = 0;
        char v2 = 0;
      }
      if ((v2 & 1) == 0)
      {
        switch(v3)
        {
          case 0:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v10);
            break;
          case 1:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2:
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    uint64_t v6 = v12 + v13 + *(int *)(v9 + 24);
    uint64_t v7 = sub_1A8A74C38();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1A80C3B24()
{
  uint64_t v1 = *(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1A80ABD28(v2);
}

uint64_t sub_1A80C3B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = a3;
  v7[1] = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = a3 - 8;
  v7[0] = (*(void *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = (void (*)(void))MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v7 - v7[0];
  v4();
  uint64_t v12 = sub_1A8A784D8();
  uint64_t v13 = v5;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v11);
  return v12;
}

uint64_t sub_1A80C3C70(uint64_t a1)
{
  return sub_1A80C3C88(a1);
}

uint64_t sub_1A80C3C88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_1A80C3C90@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A80C3CCC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3CF8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3D24()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3D64()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3DA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3DD0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3DFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3E3C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3E7C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3EA8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3ED4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3F14()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3F54()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3F80()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3FAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C3FEC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C402C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4058()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4084(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A80C40AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C40EC()
{
  return sub_1A80C4084(*(uint64_t (**)(void))(v0 + 16));
}

void *sub_1A80C40F8(void *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a4();
  sub_1A80D320C(v4, v5, a3);
  uint64_t v8 = *a1;
  sub_1A8A77958();
  swift_bridgeObjectRelease();
  uint64_t result = a1;
  *a1 = v8 + 8;
  return result;
}

uint64_t sub_1A80C417C()
{
  return swift_deallocObject();
}

void *sub_1A80C41BC(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1A80C40F8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1A80C41C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = a2;
  *(void *)a2 = *(void *)a1;
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 8);
  return result;
}

uint64_t sub_1A80C41E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4210()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C423C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C427C()
{
  uint64_t v0 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 80);
  uint64_t v13 = (v0 + 16) & ~v0;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v10 = v12 + v13 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1))
    {
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v3 = EnumCaseMultiPayload;
        char v2 = 1;
      }
      else
      {
        uint64_t v3 = 0;
        char v2 = 0;
      }
      if ((v2 & 1) == 0)
      {
        switch(v3)
        {
          case 0:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v10);
            break;
          case 1:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2:
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    uint64_t v6 = v12 + v13 + *(int *)(v9 + 24);
    uint64_t v7 = sub_1A8A74C38();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1A80C4538()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4564()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4590()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C45D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4610()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C463C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4668()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C46A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C46E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4714()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4740()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4780()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C47C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C47EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4818()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4858()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4898()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C48C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C48F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C4930()
{
  return swift_deallocObject();
}

id *sub_1A80C4970(id *a1)
{
  uint64_t v14 = _s15MailboxActivityVMa();
  if (!(*(unsigned int (**)(id *, uint64_t))(*(void *)(v14 - 8) + 48))(a1, 1))
  {

    uint64_t v12 = (char *)a1 + *(int *)(v14 + 20);
    type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v10 = &v12[*(int *)(v9 + 20)];
      uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
      if (!(*(unsigned int (**)(char *, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1))
      {
        unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          uint64_t v3 = EnumCaseMultiPayload;
          char v2 = 1;
        }
        else
        {
          uint64_t v3 = 0;
          char v2 = 0;
        }
        if ((v2 & 1) == 0)
        {
          switch(v3)
          {
            case 0:
              uint64_t v4 = sub_1A8A75C38();
              (*(void (**)(char *))(*(void *)(v4 - 8) + 8))(v10);
              break;
            case 1:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              break;
            case 2:
            case 3:
              swift_bridgeObjectRelease();
              break;
            default:
              JUMPOUT(0);
          }
        }
      }
      uint64_t v6 = &v12[*(int *)(v9 + 24)];
      uint64_t v7 = sub_1A8A74C38();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t))(v8 + 48))(v6, 1)) {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
      }
    }
  }
  return a1;
}

void *sub_1A80C4C18(void *a1, void *a2)
{
  *a2 = *a1;
  uint64_t v16 = *(int *)(_s15MailboxActivityVMa() + 20);
  uint64_t v18 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((unsigned char *)a2 + v16) = *((unsigned char *)a1 + v16);
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error(0);
    __dst = (char *)a2 + v16 + *(int *)(v10 + 20);
    __srCC_MD5_CTX c = (char *)a1 + v16 + *(int *)(v10 + 20);
    uint64_t v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(__src, 1))
    {
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dst, __src, *(void *)(v14 + 64));
      }
      else
      {
        uint64_t v2 = sub_1A8A75C38();
        (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(__dst, __src);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v6 = (char *)a2 + v16 + *(int *)(v10 + 24);
    uint64_t v7 = (char *)a1 + v16 + *(int *)(v10 + 24);
    uint64_t v8 = sub_1A8A74C38();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 48))(v7, 1))
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(v6, v7, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a2 + v16, (char *)a1 + v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a2;
}

id *sub_1A80C4FE0(id *a1)
{
  uint64_t v12 = *(int *)(_s15MailboxActivityVMa() + 20);
  type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v10 = (char *)a1 + v12 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(char *, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1))
    {
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v3 = EnumCaseMultiPayload;
        char v2 = 1;
      }
      else
      {
        uint64_t v3 = 0;
        char v2 = 0;
      }
      if ((v2 & 1) == 0)
      {
        switch(v3)
        {
          case 0:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(char *))(*(void *)(v4 - 8) + 8))(v10);
            break;
          case 1:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2:
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    uint64_t v6 = (char *)a1 + v12 + *(int *)(v9 + 24);
    uint64_t v7 = sub_1A8A74C38();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return a1;
}

uint64_t sub_1A80C524C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5278()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C52A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C52E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5310@<X0>(void *a1@<X8>)
{
  return sub_1A80AB154(*(void *)(v1 + 16), a1);
}

uint64_t sub_1A80C5318()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5358()
{
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v1 = sub_1A80C53AC();
  return sub_1A80C3B8C(v4, v3, (uint64_t)&type metadata for MailboxRowID, v1);
}

unint64_t sub_1A80C53AC()
{
  uint64_t v2 = qword_1E97435E0;
  if (!qword_1E97435E0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97435E0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80C5428()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5454()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5480()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C54C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5500()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C552C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5558()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5598()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C55D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5604()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5630()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5670()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C56B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C56DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5708()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5748()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5788()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C57B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C57E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5820()
{
  return swift_deallocObject();
}

void sub_1A80C5860(uint64_t *a1, void *a2)
{
  sub_1A80B3B5C(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1A80C5868()
{
  uint64_t v2 = qword_1E97435D0;
  if (!qword_1E97435D0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97435D0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80C58E4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5910()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C593C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C597C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C59A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C59E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5A14()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5A40()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5A80()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5AC0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5AEC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5B18()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5B58()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5B98()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5BC4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5BF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5C30()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5C70()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5C9C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5CC8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5D08()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5D48()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5D74()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5DA0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5DE0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5E20()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5E4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5E78()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5EB8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5EE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5F10()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5F50()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5F90()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5FBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C5FE8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6028()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6068()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6094()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C60C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6100()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6140()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C616C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6198()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C61D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6218()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6244()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6270()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C62B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C62DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C631C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6348()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6374()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C63B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C63F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6420()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C644C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C648C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C64CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C64F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6524()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6564()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C65A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C65D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C65FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C663C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C667C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C66A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C66D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6714()
{
  return swift_deallocObject();
}

void *sub_1A80C6754(id *a1, void *a2)
{
  id v4 = *a1;
  id v2 = *a1;
  uint64_t result = a2;
  *a2 = v4;
  return result;
}

unint64_t sub_1A80C678C()
{
  uint64_t v2 = qword_1E9744BA0;
  if (!qword_1E9744BA0)
  {
    self;
    ObjCClassMetachar data = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1E9744BA0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1A80C67F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6820()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C684C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C688C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C68B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C68F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6924()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6950()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6990()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C69D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C69FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6A28()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6A68()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6AA8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6AD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6B00()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6B40()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6B80()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6BAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6BD8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6C18()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6C58()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6C84()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6CB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6CF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6D30()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6D5C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6D88()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6DC8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6DF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6E34()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6E60()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6E8C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6ECC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6F0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6F38()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6F64()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6FA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C6FE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7010()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C703C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C707C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C70BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C70E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7114()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7154()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7194()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C71C0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C71EC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C722C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C726C(uint64_t a1)
{
  uint64_t v3 = sub_1A8A74C38();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return a1;
}

unint64_t sub_1A80C731C()
{
  uint64_t v2 = qword_1E97450E0;
  if (!qword_1E97450E0)
  {
    self;
    ObjCClassMetachar data = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1E97450E0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1A80C7384()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C73B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C73DC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C741C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7448()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7474()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C74B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C74F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7520()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C754C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C758C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C75CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C75F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7624()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7664()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C76A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C76D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C76FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C773C()
{
  return swift_deallocObject();
}

void *sub_1A80C777C(id *a1, void *a2)
{
  id v21 = *a1;
  id v2 = *a1;
  *a2 = v21;
  uint64_t v22 = *(int *)(_s15MailboxActivityVMa() + 20);
  uint64_t v24 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((unsigned char *)a2 + v22) = *((unsigned char *)a1 + v22);
    uint64_t v15 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v16 = (void *)((char *)a2 + v22 + *(int *)(v15 + 20));
    uint64_t v17 = (id *)((char *)a1 + v22 + *(int *)(v15 + 20));
    uint64_t v18 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(void *, uint64_t))(v19 + 48))(v17, 1))
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(v16, v17, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v16 = *v17;
          uint64_t v13 = v17[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v16[1] = v13;
          v16[2] = v17[2];
          uint64_t v14 = v17[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v16[3] = v14;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *uint64_t v16 = *v17;
          uint64_t v12 = v17[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v16[1] = v12;
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *uint64_t v16 = *v17;
          uint64_t v11 = v17[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v16[1] = v11;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          uint64_t v3 = sub_1A8A75C38();
          (*(void (**)(void *, void *))(*(void *)(v3 - 8) + 16))(v16, v17);
          swift_storeEnumTagMultiPayload();
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    __dst = (char *)a2 + v22 + *(int *)(v15 + 24);
    __srCC_MD5_CTX c = (char *)a1 + v22 + *(int *)(v15 + 24);
    uint64_t v9 = sub_1A8A74C38();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(__src, 1))
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, __src, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a2 + v22, (char *)a1 + v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  return a2;
}

void sub_1A80C7C28(void *a1)
{
  if ((unint64_t)a1 > 1) {
}
  }

uint64_t sub_1A80C7C68()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7C94()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7CC0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7D00()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7D2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7D6C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7D98()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7DC4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7E04()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7E44()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7E70()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7E9C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7EDC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7F1C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7F48()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7F74()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7FB4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C7FF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8020()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C804C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C808C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C80CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C80F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8124()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8164()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C81A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C81D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C81FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C823C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8268()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C82A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C82D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8300()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8340()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8380()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C83AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C83D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8418()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8458()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8484()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C84B0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C84F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8530()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C855C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8588()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C85C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8608()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8634()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8660()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C86A0()
{
  return swift_deallocObject();
}

unint64_t sub_1A80C86E0()
{
  uint64_t v2 = qword_1E9744CA0;
  if (!qword_1E9744CA0)
  {
    type metadata accessor for EMActivityFetchState();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744CA0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80C8764()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8790()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C87BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C87FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8828()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8868()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8894()
{
  return sub_1A80BCA0C();
}

uint64_t sub_1A80C889C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C88C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C88F4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8934()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8974()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C89A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C89CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8A0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8A4C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8A78()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8AA4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8AE4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8B24()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8B50()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8B7C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8BBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8BFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8C28()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8C54()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8C94()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8CD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8D00()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8D2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8D6C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8DAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8DD8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8E04()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8E44()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8E70()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8EB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8EDC()
{
  return sub_1A80BC47C();
}

uint64_t sub_1A80C8EF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8F1C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8F48()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8F88()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8FC8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C8FF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9020()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9060()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C90A0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C90CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C90F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9138()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9178()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C91A4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C91D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9210()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9250()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C927C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C92A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C92E8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9328()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9354()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9380()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C93C0()
{
  return swift_deallocObject();
}

__n128 sub_1A80C9400(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = a1[1].n128_u8[0];
  return result;
}

uint64_t sub_1A80C941C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9448()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9474()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C94B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C94E0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9520()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C954C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9578()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C95B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C95F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9624()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9650()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9690()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C96D0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C96FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9728()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9768()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C97A8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C97D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9800()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9840()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9880()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C98AC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C98D8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9918()
{
  return swift_deallocObject();
}

unint64_t sub_1A80C9958()
{
  uint64_t v2 = qword_1E9746C18;
  if (!qword_1E9746C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9746C20);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9746C18);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80C99DC()
{
  uint64_t v2 = qword_1E9744A70;
  if (!qword_1E9744A70)
  {
    self;
    ObjCClassMetachar data = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1E9744A70);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_1A80C9A44()
{
  uint64_t v2 = qword_1E97471A0;
  if (!qword_1E97471A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E97471A8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97471A0);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A80C9AC8()
{
}

uint64_t sub_1A80C9B2C()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9B58()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9B84()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9BC4()
{
  return swift_deallocObject();
}

void sub_1A80C9BF0()
{
}

uint64_t sub_1A80C9BF8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9C24()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9C50()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9C90()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9CD0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9CFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9D28()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9D68()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9DA8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9DD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9E00()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9E40()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9E80()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9EAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9ED8()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9F18()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9F58()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9F84()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9FB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A80C9FF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A80C3C90(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1A80C9FFC()
{
  return swift_deallocObject();
}

uint64_t sub_1A80CA03C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  unint64_t v4 = sub_1A80CA0B0();
  uint64_t v5 = MEMORY[0x1E4FBB550];
  return sub_1A809EEC4(a1, a2, a3, v9, v10, v5, v4);
}

unint64_t sub_1A80CA0B0()
{
  uint64_t v2 = qword_1E97487C0;
  if (!qword_1E97487C0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97487C0);
    return WitnessTable;
  }
  return v2;
}

BOOL sub_1A80CA12C(uint64_t *a1)
{
  return sub_1A80BB8E8(a1, v1);
}

unint64_t sub_1A80CA154()
{
  uint64_t v2 = qword_1E9746E98;
  if (!qword_1E9746E98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E97442F0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9746E98);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A80CA1D8(id *a1)
{
}

uint64_t type metadata accessor for SyncError()
{
  uint64_t v1 = qword_1E97439E0;
  if (!qword_1E97439E0) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

unsigned char *sub_1A80CA27C(unsigned char *a1, unsigned char *a2)
{
  *a2 = *a1;
  uint64_t v11 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v15 + 48))(&a1[v12], 1))
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
    memcpy(&a2[v12], &a1[v12], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(&a2[v12], &a1[v12], *(void *)(v15 + 64));
    }
    else
    {
      uint64_t v2 = sub_1A8A75C38();
      (*(void (**)(void))(*(void *)(v2 - 8) + 32))();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(&a2[v12], 0, 1, v14);
  }
  __dst = &a2[*(int *)(v11 + 24)];
  __srCC_MD5_CTX c = &a1[*(int *)(v11 + 24)];
  uint64_t v8 = sub_1A8A74C38();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 48))(__src, 1))
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(__dst, __src, v8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a2;
}

unsigned char *sub_1A80CA59C(unsigned char *a1, unsigned char *a2)
{
  *a2 = *a1;
  uint64_t v16 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v19 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v20 + 48))(&a1[v17], 1))
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
    memcpy(&a2[v17], &a1[v17], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = &a2[v17];
        *(void *)&a2[v17] = *(void *)&a1[v17];
        uint64_t v12 = *(void *)&a1[v17 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v13[1] = v12;
        void v13[2] = *(void *)&a1[v17 + 16];
        uint64_t v14 = *(void *)&a1[v17 + 24];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        void v13[3] = v14;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)&a2[v17] = *(void *)&a1[v17];
        uint64_t v11 = *(void *)&a1[v17 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(void *)&a2[v17 + 8] = v11;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)&a2[v17] = *(void *)&a1[v17];
        uint64_t v10 = *(void *)&a1[v17 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(void *)&a2[v17 + 8] = v10;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v2 = sub_1A8A75C38();
        (*(void (**)(void))(*(void *)(v2 - 8) + 16))();
        swift_storeEnumTagMultiPayload();
        break;
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(&a2[v17], 0, 1, v19);
  }
  __dst = &a2[*(int *)(v16 + 24)];
  __srCC_MD5_CTX c = &a1[*(int *)(v16 + 24)];
  uint64_t v8 = sub_1A8A74C38();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 48))(__src, 1))
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(__dst, __src, v8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a2;
}

unint64_t sub_1A80CA9C0()
{
  uint64_t v2 = qword_1E97439D8;
  if (!qword_1E97439D8)
  {
    type metadata accessor for SyncError();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97439D8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80CAA44(uint64_t a1)
{
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v12 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(a1 + v10, 1))
  {
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      uint64_t v3 = EnumCaseMultiPayload;
      char v2 = 1;
    }
    else
    {
      uint64_t v3 = 0;
      char v2 = 0;
    }
    if ((v2 & 1) == 0)
    {
      switch(v3)
      {
        case 0:
          uint64_t v4 = sub_1A8A75C38();
          (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(a1 + v10);
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 2:
        case 3:
          swift_bridgeObjectRelease();
          break;
        default:
          JUMPOUT(0);
      }
    }
  }
  uint64_t v6 = a1 + *(int *)(v9 + 24);
  uint64_t v7 = sub_1A8A74C38();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return a1;
}

unint64_t sub_1A80CAC7C()
{
  uint64_t v2 = qword_1E97487B0;
  if (!qword_1E97487B0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97487B0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CACF8()
{
  uint64_t v2 = qword_1E97488A0;
  if (!qword_1E97488A0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97488A0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CAD74()
{
  uint64_t v2 = qword_1E97488B0;
  if (!qword_1E97488B0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97488B0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CADF0()
{
  uint64_t v2 = qword_1E9748888;
  if (!qword_1E9748888)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9748888);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1A80CAE6C(uint64_t a1)
{
  uint64_t v3 = sub_1A8A776F8();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return a1;
}

unint64_t sub_1A80CAF1C()
{
  uint64_t v2 = qword_1E9746EF0;
  if (!qword_1E9746EF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9746EE8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9746EF0);
    return WitnessTable;
  }
  return v2;
}

void *sub_1A80CAFA0(const void *a1, void *a2)
{
  uint64_t v6 = sub_1A8A74C38();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

unint64_t sub_1A80CB0C8()
{
  uint64_t v2 = qword_1E9743C28;
  if (!qword_1E9743C28)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743C28);
    return WitnessTable;
  }
  return v2;
}

void *sub_1A80CB144(void *a1, void *a2)
{
  uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v12 + 48))(a1, 1))
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
    memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a2 = *a1;
        uint64_t v7 = a1[1];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        a2[1] = v7;
        a2[2] = a1[2];
        uint64_t v8 = a1[3];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        a2[3] = v8;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a2 = *a1;
        uint64_t v6 = a1[1];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        a2[1] = v6;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a2 = *a1;
        uint64_t v5 = a1[1];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        a2[1] = v5;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v2 = sub_1A8A75C38();
        (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(a2, a1);
        swift_storeEnumTagMultiPayload();
        break;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  return a2;
}

uint64_t sub_1A80CB3A0(uint64_t a1)
{
  uint64_t v7 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(a1, 1))
  {
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      uint64_t v3 = EnumCaseMultiPayload;
      char v2 = 1;
    }
    else
    {
      uint64_t v3 = 0;
      char v2 = 0;
    }
    if ((v2 & 1) == 0)
    {
      switch(v3)
      {
        case 0:
          uint64_t v4 = sub_1A8A75C38();
          (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(a1);
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 2:
        case 3:
          swift_bridgeObjectRelease();
          break;
        default:
          JUMPOUT(0);
      }
    }
  }
  return a1;
}

void *sub_1A80CB4E8(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a2, a1, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v2 = sub_1A8A75C38();
    (*(void (**)(void *, const void *))(*(void *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

void *sub_1A80CB5B4(void *a1, void *a2)
{
  type metadata accessor for ConnectionStatus.Error.Details(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a2 = *a1;
      uint64_t v6 = a1[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a2[1] = v6;
      a2[2] = a1[2];
      uint64_t v7 = a1[3];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a2[3] = v7;
      swift_storeEnumTagMultiPayload();
      break;
    case 2u:
      *a2 = *a1;
      uint64_t v5 = a1[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a2[1] = v5;
      swift_storeEnumTagMultiPayload();
      break;
    case 3u:
      *a2 = *a1;
      uint64_t v4 = a1[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      a2[1] = v4;
      swift_storeEnumTagMultiPayload();
      break;
    default:
      uint64_t v2 = sub_1A8A75C38();
      (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(a2, a1);
      swift_storeEnumTagMultiPayload();
      break;
  }
  return a2;
}

uint64_t sub_1A80CB750(uint64_t a1)
{
  type metadata accessor for ConnectionStatus.Error.Details(0);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v3 = EnumCaseMultiPayload;
    char v2 = 1;
  }
  else
  {
    uint64_t v3 = 0;
    char v2 = 0;
  }
  if ((v2 & 1) == 0)
  {
    switch(v3)
    {
      case 0:
        uint64_t v4 = sub_1A8A75C38();
        (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(a1);
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 2:
      case 3:
        swift_bridgeObjectRelease();
        break;
      default:
        JUMPOUT(0);
    }
  }
  return a1;
}

unint64_t sub_1A80CB84C()
{
  uint64_t v2 = qword_1E9745130;
  if (!qword_1E9745130)
  {
    self;
    ObjCClassMetachar data = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1E9745130);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_1A80CB8B4()
{
  uint64_t v2 = qword_1E974AEB0;
  if (!qword_1E974AEB0)
  {
    sub_1A80CB84C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AEB0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CB938()
{
  uint64_t v2 = qword_1E97439D0;
  if (!qword_1E97439D0)
  {
    type metadata accessor for SyncError();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97439D0);
    return WitnessTable;
  }
  return v2;
}

void *sub_1A80CB9BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1A80C14BC(a1, *(void (**)(uint64_t, uint64_t))(v2 + 16), a2);
}

unint64_t sub_1A80CB9EC()
{
  uint64_t v2 = qword_1E9743DD8;
  if (!qword_1E9743DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9743DD0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743DD8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CBA70()
{
  uint64_t v2 = qword_1E9740D80;
  if (!qword_1E9740D80)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9740D80);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A80CBAEC()
{
}

unint64_t sub_1A80CBB30()
{
  uint64_t v2 = qword_1E974AEB8;
  if (!qword_1E974AEB8)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AEB8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CBBB0()
{
  uint64_t v2 = qword_1E9743730;
  if (!qword_1E9743730)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743730);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CBC30()
{
  uint64_t v2 = qword_1E974AEC0;
  if (!qword_1E974AEC0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AEC0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CBCB0()
{
  uint64_t v2 = qword_1E9743750;
  if (!qword_1E9743750)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743750);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80CBD30()
{
  return sub_1A80CA9C0();
}

unint64_t sub_1A80CBD48(void *a1, id *a2, uint64_t a3)
{
  int v30 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v30 & 0x20000) != 0)
  {
    id v25 = *a2;
    swift_retain();
    *a1 = v25;
    return *a1 + ((v30 + 16) & ~(unint64_t)v30);
  }
  else
  {
    id v21 = *a2;
    id v3 = *a2;
    *a1 = v21;
    uint64_t v22 = (char *)a1 + *(int *)(a3 + 20);
    uint64_t v23 = (char *)a2 + *(int *)(a3 + 20);
    uint64_t v24 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned char *v22 = *v23;
      uint64_t v16 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = &v22[*(int *)(v16 + 20)];
      __srCC_MD5_CTX c = &v23[*(int *)(v16 + 20)];
      uint64_t v19 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t))(v20 + 48))(__src, 1))
      {
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
        memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            void *__dst = *__src;
            uint64_t v14 = __src[1];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            __dst[1] = v14;
            __dst[2] = __src[2];
            uint64_t v15 = __src[3];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            __dst[3] = v15;
            swift_storeEnumTagMultiPayload();
            break;
          case 2u:
            void *__dst = *__src;
            uint64_t v13 = __src[1];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            __dst[1] = v13;
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            void *__dst = *__src;
            uint64_t v12 = __src[1];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            __dst[1] = v12;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(void *, void *))(*(void *)(v4 - 8) + 16))(__dst, __src);
            swift_storeEnumTagMultiPayload();
            break;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      }
      uint64_t v8 = &v22[*(int *)(v16 + 24)];
      uint64_t v9 = &v23[*(int *)(v16 + 24)];
      uint64_t v10 = sub_1A8A74C38();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v11 + 48))(v9, 1))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
        memcpy(v8, v9, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    return (unint64_t)a1;
  }
}

uint64_t sub_1A80CC23C(id *a1, uint64_t a2)
{
  uint64_t v14 = *(int *)(a2 + 20);
  type metadata accessor for Activity.MailboxStatus(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v11 = (char *)a1 + v14 + *(int *)(v10 + 20);
    uint64_t v12 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(char *, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1))
    {
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v5 = EnumCaseMultiPayload;
        char v4 = 1;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 0;
      }
      if ((v4 & 1) == 0)
      {
        switch(v5)
        {
          case 0:
            uint64_t v6 = sub_1A8A75C38();
            (*(void (**)(char *))(*(void *)(v6 - 8) + 8))(v11);
            break;
          case 1:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 2:
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
    }
    uint64_t v7 = (char *)a1 + v14 + *(int *)(v10 + 24);
    uint64_t v8 = sub_1A8A74C38();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 48))(v7, 1);
    if (!result) {
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  return result;
}

void *sub_1A80CC49C(void *a1, id *a2, uint64_t a3)
{
  id v21 = *a2;
  id v3 = *a2;
  *a1 = v21;
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v26 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
    uint64_t v16 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v17 = (void *)((char *)a1 + v24 + *(int *)(v16 + 20));
    uint64_t v18 = (id *)((char *)a2 + v24 + *(int *)(v16 + 20));
    uint64_t v19 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t))(v20 + 48))(v18, 1))
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(v17, v18, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v17 = *v18;
          uint64_t v14 = v18[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17[1] = v14;
          void v17[2] = v18[2];
          uint64_t v15 = v18[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17[3] = v15;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *uint64_t v17 = *v18;
          uint64_t v13 = v18[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17[1] = v13;
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *uint64_t v17 = *v18;
          uint64_t v12 = v18[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17[1] = v12;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          uint64_t v4 = sub_1A8A75C38();
          (*(void (**)(void *, void *))(*(void *)(v4 - 8) + 16))(v17, v18);
          swift_storeEnumTagMultiPayload();
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    __dst = (char *)a1 + v24 + *(int *)(v16 + 24);
    __srCC_MD5_CTX c = (char *)a2 + v24 + *(int *)(v16 + 24);
    uint64_t v10 = sub_1A8A74C38();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(__src, 1))
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, __src, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a1 + v24, (char *)a2 + v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  return a1;
}

void **sub_1A80CC940(void **a1, id *a2, uint64_t a3)
{
  uint64_t v23 = *a1;
  id v22 = *a2;
  id v3 = *a2;
  *a1 = v22;

  uint64_t v27 = *(int *)(a3 + 20);
  if ((char *)a1 + v27 != (char *)a2 + v27)
  {
    sub_1A80C3170((uint64_t)a1 + v27);
    uint64_t v21 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
      uint64_t v16 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v17 = (void **)((char *)a1 + v27 + *(int *)(v16 + 20));
      uint64_t v18 = (id *)((char *)a2 + v27 + *(int *)(v16 + 20));
      uint64_t v19 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t))(v20 + 48))(v18, 1))
      {
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
        memcpy(v17, v18, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v17 = *v18;
            uint64_t v14 = v18[1];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v17[1] = v14;
            void v17[2] = v18[2];
            uint64_t v15 = v18[3];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v17[3] = v15;
            swift_storeEnumTagMultiPayload();
            break;
          case 2u:
            *uint64_t v17 = *v18;
            uint64_t v13 = v18[1];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v17[1] = v13;
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            *uint64_t v17 = *v18;
            uint64_t v12 = v18[1];
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            v17[1] = v12;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v4 = sub_1A8A75C38();
            (*(void (**)(void *, void *))(*(void *)(v4 - 8) + 16))(v17, v18);
            swift_storeEnumTagMultiPayload();
            break;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      __dst = (char *)a1 + v27 + *(int *)(v16 + 24);
      __srCC_MD5_CTX c = (char *)a2 + v27 + *(int *)(v16 + 24);
      uint64_t v10 = sub_1A8A74C38();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(__src, 1))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
        memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, __src, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy((char *)a1 + v27, (char *)a2 + v27, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  return a1;
}

void *sub_1A80CCE28(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v19 = type metadata accessor for Activity.MailboxStatus(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v11 = type metadata accessor for ConnectionStatus.Error(0);
    __dst = (char *)a1 + v17 + *(int *)(v11 + 20);
    uint64_t v13 = (char *)a2 + v17 + *(int *)(v11 + 20);
    uint64_t v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(v13, 1))
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(__dst, v13, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dst, v13, *(void *)(v15 + 64));
      }
      else
      {
        uint64_t v3 = sub_1A8A75C38();
        (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(__dst, v13);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v7 = (char *)a1 + v17 + *(int *)(v11 + 24);
    __srCC_MD5_CTX c = (char *)a2 + v17 + *(int *)(v11 + 24);
    uint64_t v9 = sub_1A8A74C38();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(__src, 1))
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(v7, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, __src, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy((char *)a1 + v17, (char *)a2 + v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

void **sub_1A80CD1E0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  *a1 = *a2;

  uint64_t v22 = *(int *)(a3 + 20);
  if ((char *)a1 + v22 != (char *)a2 + v22)
  {
    sub_1A80C3170((uint64_t)a1 + v22);
    uint64_t v18 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
      uint64_t v13 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = (char *)a1 + v22 + *(int *)(v13 + 20);
      __srCC_MD5_CTX c = (char *)a2 + v22 + *(int *)(v13 + 20);
      uint64_t v16 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v17 + 48))(__src, 1))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
        memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, __src, *(void *)(v17 + 64));
        }
        else
        {
          uint64_t v5 = sub_1A8A75C38();
          (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 32))(__dst, __src);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      uint64_t v9 = (char *)a1 + v22 + *(int *)(v13 + 24);
      uint64_t v10 = (char *)a2 + v22 + *(int *)(v13 + 24);
      uint64_t v11 = sub_1A8A74C38();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(v10, 1))
      {
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
        memcpy(v9, v10, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy((char *)a1 + v22, (char *)a2 + v22, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A80CD5E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A80CD608(char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    int v7 = -1;
    if (*(void *)a1 < 0x100000000uLL) {
      int v7 = *(void *)a1;
    }
    int v3 = v7 - 1;
    if (v7 - 1 < 0) {
      int v3 = -1;
    }
    return (v3 + 1);
  }
  else
  {
    uint64_t v5 = type metadata accessor for Activity.MailboxStatus(0);
    if (a2 == *(_DWORD *)(*(void *)(v5 - 8) + 84)) {
      return (*(unsigned int (**)(char *, void, uint64_t))(*(void *)(v5 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v5);
    }
    else {
      __break(1u);
    }
  }
  return v6;
}

uint64_t sub_1A80CD744()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A80CD76C(char *result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v4 = result;
  if (a3 == 2147483646)
  {
    *(void *)uint64_t result = a2;
  }
  else
  {
    uint64_t result = (char *)type metadata accessor for Activity.MailboxStatus(0);
    if (a3 == *(_DWORD *)(*((void *)result - 1) + 84)) {
      return (char *)(*(uint64_t (**)(char *, void, void, char *))(*((void *)result - 1) + 56))(&v4[*(int *)(a4 + 20)], a2, a2, result);
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A80CD868()
{
  uint64_t v2 = type metadata accessor for Activity.MailboxStatus(319);
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

uint64_t sub_1A80CD948(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(unsigned char *)(a1 + 9)) {
      int v3 = *(void *)a1;
    }
    else {
      int v3 = -1;
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1A80CDA78(uint64_t result, int a2, int a3)
{
  uint64_t v3 = result;
  uint64_t v4 = (unsigned char *)(result + 9);
  if (a2)
  {
    uint64_t result = 0;
    *(unsigned char *)(v3 + 8) = 0;
    *(void *)uint64_t v3 = (a2 - 1);
    if (a3) {
      unsigned char *v4 = 1;
    }
  }
  else if (a3)
  {
    unsigned char *v4 = 0;
  }
  return result;
}

uint64_t sub_1A80CDC10(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(unk_1EFE8A330 + 48))(a1, 1);
}

uint64_t sub_1A80CDC58(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(unk_1EFE8A330 + 56))(a1, a2, 1);
}

void *_s13ActivityScopeOMa()
{
  return &unk_1EFE8B440;
}

id *sub_1A80CDCB4(id *a1, id *a2)
{
  if ((unint64_t)*a2 <= 1)
  {
    *a1 = *a2;
  }
  else
  {
    id v4 = *a2;
    id v2 = *a2;
    *a1 = v4;
  }
  return a1;
}

void sub_1A80CDD28(id *a1)
{
  if ((unint64_t)*a1 > 1) {
}
  }

id *sub_1A80CDD70(id *a1, id *a2)
{
  if ((unint64_t)*a1 <= 1)
  {
    if ((unint64_t)*a2 <= 1)
    {
      *a1 = *a2;
    }
    else
    {
      id v6 = *a2;
      id v4 = *a2;
      *a1 = v6;
    }
  }
  else if ((unint64_t)*a2 <= 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v7 = *a2;
    id v2 = *a2;
    id v3 = *a1;
    *a1 = v7;
  }
  return a1;
}

id *sub_1A80CDE64(id *a1, id *a2)
{
  if ((unint64_t)*a1 <= 1)
  {
    *a1 = *a2;
  }
  else if ((unint64_t)*a2 <= 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v2 = *a1;
    *a1 = *a2;
  }
  return a1;
}

uint64_t sub_1A80CDF40(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 8))
    {
      int v5 = *(void *)a1 + 2147483645;
    }
    else
    {
      int v4 = -1;
      if (*(void *)a1 < 0x100000000uLL) {
        int v4 = *(void *)a1;
      }
      int v2 = v4 - 2;
      if (v4 - 2 < 0) {
        int v2 = -1;
      }
      int v5 = v2;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1A80CE0BC(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFD;
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
    {
      if (v3) {
        *(unsigned char *)(result + 8) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
    {
      if (v3) {
        *(unsigned char *)(result + 8) = 0;
      }
      else {
        __break(1u);
      }
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A80CE2C0(uint64_t a1)
{
  unint64_t v1 = sub_1A80CE31C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1, 2);
}

unint64_t sub_1A80CE31C()
{
  uint64_t v2 = qword_1E97450E8;
  if (!qword_1E97450E8)
  {
    self;
    ObjCClassMetachar data = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1E97450E8);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1A80CE384(uint64_t a1, unsigned int a2)
{
  unint64_t v2 = sub_1A80CE31C();
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 56))(a1, a2, 2);
}

void *_s18EmailActivityStateOMa()
{
  return &unk_1EFE86B30;
}

unint64_t sub_1A80CE3FC(void *a1, id *a2, uint64_t a3)
{
  int v26 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v26 & 0x20000) != 0)
  {
    id v21 = *a2;
    swift_retain();
    *a1 = v21;
    return *a1 + ((v26 + 16) & ~(unint64_t)v26);
  }
  else
  {
    id v7 = *a2;
    id v3 = *a2;
    *a1 = v7;
    uint64_t v10 = (char *)a1 + *(int *)(a3 + 20);
    uint64_t v11 = (char *)a2 + *(int *)(a3 + 20);
    uint64_t v4 = sub_1A8A74998();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v10, v11);
    uint64_t v12 = _s18MailboxPersistenceVMa();
    uint64_t v8 = *(int *)(v12 + 20);
    uint64_t v9 = *(void **)&v11[v8];
    id v5 = v9;
    *(void *)&v10[v8] = v9;
    uint64_t v17 = &v10[*(int *)(v12 + 24)];
    uint64_t v16 = &v11[*(int *)(v12 + 24)];
    *(void *)uint64_t v17 = *(void *)v16;
    uint64_t v13 = *((void *)v16 + 1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *((void *)v17 + 1) = v13;
    uint64_t v14 = *((void *)v16 + 2);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *((void *)v17 + 2) = v14;
    uint64_t v15 = *((void *)v16 + 3);
    swift_retain();
    *((void *)v17 + 3) = v15;
    uint64_t v18 = *((void *)v16 + 4);
    swift_retain();
    *((void *)v17 + 4) = v18;
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = *(uint64_t *)((char *)a2 + v19);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    *(void *)((char *)a1 + v19) = v20;
    return (unint64_t)a1;
  }
}

uint64_t sub_1A80CE624(id *a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 20);
  uint64_t v2 = sub_1A8A74998();
  (*(void (**)(void))(*(void *)(v2 - 8) + 8))();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void *sub_1A80CE714(void *a1, id *a2, uint64_t a3)
{
  id v8 = *a2;
  id v3 = *a2;
  *a1 = v8;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v4 = sub_1A8A74998();
  uint64_t v12 = (char *)a1 + v9;
  (*(void (**)(void))(*(void *)(v4 - 8) + 16))();
  uint64_t v13 = _s18MailboxPersistenceVMa();
  uint64_t v10 = *(int *)(v13 + 20);
  uint64_t v11 = *(id *)((char *)a2 + v9 + v10);
  id v5 = v11;
  *(void *)&v12[v10] = v11;
  uint64_t v6 = *(int *)(v13 + 24);
  uint64_t v17 = (id *)((char *)a2 + v9 + v6);
  uint64_t v18 = (void *)((char *)a1 + v9 + v6);
  *(void *)&v12[v6] = *v17;
  uint64_t v14 = v17[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[1] = v14;
  uint64_t v15 = v17[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[2] = v15;
  uint64_t v16 = v17[3];
  swift_retain();
  v18[3] = v16;
  uint64_t v19 = v17[4];
  swift_retain();
  v18[4] = v19;
  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = *(uint64_t *)((char *)a2 + v23);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = a1;
  *(void *)((char *)a1 + v23) = v24;
  return result;
}

void **sub_1A80CE8BC(void **a1, id *a2, uint64_t a3)
{
  id v9 = *a2;
  id v3 = *a2;
  uint64_t v4 = *a1;
  *a1 = v9;

  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v5 = sub_1A8A74998();
  (*(void (**)(void))(*(void *)(v5 - 8) + 24))();
  uint64_t v13 = _s18MailboxPersistenceVMa();
  uint64_t v11 = *(int *)(v13 + 20);
  uint64_t v12 = *(id *)((char *)a2 + v10 + v11);
  id v6 = v12;
  id v7 = *(void **)((char *)a1 + v10 + v11);
  *(void **)((char *)a1 + v10 + v11) = v12;

  uint64_t v17 = (id *)((char *)a2 + v10 + *(int *)(v13 + 24));
  uint64_t v18 = (void **)((char *)a1 + v10 + *(int *)(v13 + 24));
  void *v18 = *v17;
  uint64_t v14 = v17[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v17[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[2] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v17[3];
  swift_retain();
  v18[3] = v16;
  swift_release();
  uint64_t v19 = v17[4];
  swift_retain();
  v18[4] = v19;
  swift_release();
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = *(id *)((char *)a2 + v22);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(void **)((char *)a1 + v22) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1A80CEAB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v3 = sub_1A8A74998();
  (*(void (**)(void))(*(void *)(v3 - 8) + 32))();
  uint64_t v4 = _s18MailboxPersistenceVMa();
  *(void *)((char *)a1 + v6 + *(int *)(v4 + 20)) = *(void *)((char *)a2 + v6 + *(int *)(v4 + 20));
  memcpy((char *)a1 + v6 + *(int *)(v4 + 24), (char *)a2 + v6 + *(int *)(v4 + 24), 0x28uLL);
  uint64_t result = a1;
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return result;
}

void **sub_1A80CEBA8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  *a1 = *a2;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v5 = sub_1A8A74998();
  (*(void (**)(void))(*(void *)(v5 - 8) + 40))();
  uint64_t v10 = _s18MailboxPersistenceVMa();
  uint64_t v6 = (void **)((char *)a1 + v9 + *(int *)(v10 + 20));
  id v7 = *v6;
  char *v6 = *(void **)((char *)a2 + v9 + *(int *)(v10 + 20));

  uint64_t v11 = (void **)((char *)a2 + v9 + *(int *)(v10 + 24));
  uint64_t v12 = (void **)((char *)a1 + v9 + *(int *)(v10 + 24));
  void *v12 = *v11;
  v12[1] = v11[1];
  swift_bridgeObjectRelease();
  v12[2] = v11[2];
  swift_bridgeObjectRelease();
  v12[3] = v11[3];
  swift_release();
  v12[4] = v11[4];
  swift_release();
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(void **)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A80CED30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A80CED58(char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    int v6 = -1;
    if (*(void *)a1 < 0x100000000uLL) {
      int v6 = *(void *)a1;
    }
    return (v6 + 1);
  }
  else
  {
    uint64_t v4 = _s18MailboxPersistenceVMa();
    if (a2 == *(_DWORD *)(*(void *)(v4 - 8) + 84)) {
      return (*(unsigned int (**)(char *, void, uint64_t))(*(void *)(v4 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v4);
    }
    else {
      __break(1u);
    }
  }
  return v5;
}

uint64_t sub_1A80CEE7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A80CEEA4(char *result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v4 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = a2 - 1;
  }
  else
  {
    uint64_t result = (char *)_s18MailboxPersistenceVMa();
    if (a3 == *(_DWORD *)(*((void *)result - 1) + 84)) {
      return (char *)(*(uint64_t (**)(char *, void, void, char *))(*((void *)result - 1) + 56))(&v4[*(int *)(a4 + 20)], a2, a2, result);
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A80CEF9C()
{
  uint64_t v2 = _s18MailboxPersistenceVMa();
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

void *sub_1A80CF090(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  id v2 = v4;
  uint64_t result = a1;
  a1[1] = v4;
  return result;
}

void sub_1A80CF0D0(uint64_t a1)
{
}

void *sub_1A80CF0EC(void *a1, void *a2)
{
  *a1 = *a2;
  id v5 = (id)a1[1];
  uint64_t v4 = (void *)a2[1];
  id v2 = v4;
  a1[1] = v4;

  return a1;
}

void *sub_1A80CF140(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

uint64_t sub_1A80CF180(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFE && *(unsigned char *)(a1 + 16))
    {
      int v5 = *(_OWORD *)a1 + 2147483646;
    }
    else
    {
      int v4 = -1;
      if (*(void *)(a1 + 8) < 0x100000000uLL) {
        int v4 = *(void *)(a1 + 8);
      }
      int v2 = v4 - 1;
      if (v4 - 1 < 0) {
        int v2 = -1;
      }
      int v5 = v2;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1A80CF2F8(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFE;
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 > 0x7FFFFFFE)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFE)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 0;
      }
      else {
        __break(1u);
      }
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *_s18LastSyncDateHelperV6UpdateVMa()
{
  return &unk_1EFE9A3C0;
}

unint64_t initializeBufferWithCopyOfBuffer for SyncError(void *a1, uint64_t *a2)
{
  uint64_t v22 = type metadata accessor for ConnectionStatus.Error(0);
  int v23 = *(_DWORD *)(*(void *)(v22 - 8) + 80);
  if ((v23 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    swift_retain();
    *a1 = v18;
    return *a1 + ((v23 + 16) & ~(unint64_t)v23);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    __dst = (void *)((char *)a1 + *(int *)(v22 + 20));
    uint64_t v15 = (uint64_t *)((char *)a2 + *(int *)(v22 + 20));
    uint64_t v16 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t))(v17 + 48))(v15, 1))
    {
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(__dst, v15, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          void *__dst = *v15;
          uint64_t v12 = v15[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[1] = v12;
          __dst[2] = v15[2];
          uint64_t v13 = v15[3];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[3] = v13;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          void *__dst = *v15;
          uint64_t v11 = v15[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[1] = v11;
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          void *__dst = *v15;
          uint64_t v10 = v15[1];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          __dst[1] = v10;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          uint64_t v2 = sub_1A8A75C38();
          (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(__dst, v15);
          swift_storeEnumTagMultiPayload();
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    int v6 = (char *)a1 + *(int *)(v22 + 24);
    __srCC_MD5_CTX c = (char *)a2 + *(int *)(v22 + 24);
    uint64_t v8 = sub_1A8A74C38();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 48))(__src, 1))
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(v6, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, __src, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    return (unint64_t)a1;
  }
}

uint64_t destroy for SyncError(uint64_t a1)
{
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v12 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(a1 + v10, 1))
  {
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      uint64_t v3 = EnumCaseMultiPayload;
      char v2 = 1;
    }
    else
    {
      uint64_t v3 = 0;
      char v2 = 0;
    }
    if ((v2 & 1) == 0)
    {
      switch(v3)
      {
        case 0:
          uint64_t v4 = sub_1A8A75C38();
          (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(a1 + v10);
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 2:
        case 3:
          swift_bridgeObjectRelease();
          break;
        default:
          JUMPOUT(0);
      }
    }
  }
  uint64_t v6 = a1 + *(int *)(v9 + 24);
  uint64_t v7 = sub_1A8A74C38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1);
  if (!result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return result;
}

unsigned char *initializeWithCopy for SyncError(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v16 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v19 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v20 + 48))(&a2[v17], 1))
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
    memcpy(&a1[v17], &a2[v17], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = &a1[v17];
        *(void *)&a1[v17] = *(void *)&a2[v17];
        uint64_t v12 = *(void *)&a2[v17 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v13[1] = v12;
        void v13[2] = *(void *)&a2[v17 + 16];
        uint64_t v14 = *(void *)&a2[v17 + 24];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        void v13[3] = v14;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)&a1[v17] = *(void *)&a2[v17];
        uint64_t v11 = *(void *)&a2[v17 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(void *)&a1[v17 + 8] = v11;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)&a1[v17] = *(void *)&a2[v17];
        uint64_t v10 = *(void *)&a2[v17 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(void *)&a1[v17 + 8] = v10;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v2 = sub_1A8A75C38();
        (*(void (**)(void))(*(void *)(v2 - 8) + 16))();
        swift_storeEnumTagMultiPayload();
        break;
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(&a1[v17], 0, 1, v19);
  }
  __dst = &a1[*(int *)(v16 + 24)];
  __srCC_MD5_CTX c = &a2[*(int *)(v16 + 24)];
  uint64_t v8 = sub_1A8A74C38();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 48))(__src, 1))
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(__dst, __src, v8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a1;
}

unsigned char *assignWithCopy for SyncError(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v25 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v28 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v29 = *(void *)(v28 - 8);
  int v30 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v29 + 48);
  if (((unsigned int (*)(unsigned char *, uint64_t))v30)(&a1[v26], 1))
  {
    if (v30(&a2[v26], 1, v28))
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(&a1[v26], &a2[v26], *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v17 = &a1[v26];
          *(void *)&a1[v26] = *(void *)&a2[v26];
          uint64_t v16 = *(void *)&a2[v26 + 8];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17[1] = v16;
          void v17[2] = *(void *)&a2[v26 + 16];
          uint64_t v18 = *(void *)&a2[v26 + 24];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v17[3] = v18;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          *(void *)&a1[v26] = *(void *)&a2[v26];
          uint64_t v15 = *(void *)&a2[v26 + 8];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(void *)&a1[v26 + 8] = v15;
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          *(void *)&a1[v26] = *(void *)&a2[v26];
          uint64_t v14 = *(void *)&a2[v26 + 8];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          *(void *)&a1[v26 + 8] = v14;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          uint64_t v4 = sub_1A8A75C38();
          (*(void (**)(void))(*(void *)(v4 - 8) + 16))();
          swift_storeEnumTagMultiPayload();
          break;
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v29 + 56))(&a1[v26], 0, 1, v28);
    }
  }
  else if (v30(&a2[v26], 1, v28))
  {
    sub_1A80CB750((uint64_t)&a1[v26]);
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
    memcpy(&a1[v26], &a2[v26], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else if (&a1[v26] != &a2[v26])
  {
    sub_1A80CB750((uint64_t)&a1[v26]);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v22 = &a1[v26];
        *(void *)&a1[v26] = *(void *)&a2[v26];
        uint64_t v21 = *(void *)&a2[v26 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v22[1] = v21;
        v22[2] = *(void *)&a2[v26 + 16];
        uint64_t v23 = *(void *)&a2[v26 + 24];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        v22[3] = v23;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)&a1[v26] = *(void *)&a2[v26];
        uint64_t v20 = *(void *)&a2[v26 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(void *)&a1[v26 + 8] = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)&a1[v26] = *(void *)&a2[v26];
        uint64_t v19 = *(void *)&a2[v26 + 8];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        *(void *)&a1[v26 + 8] = v19;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v2 = sub_1A8A75C38();
        (*(void (**)(void))(*(void *)(v2 - 8) + 16))();
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  uint64_t v10 = &a1[*(int *)(v25 + 24)];
  __srCC_MD5_CTX c = &a2[*(int *)(v25 + 24)];
  uint64_t v11 = sub_1A8A74C38();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (((unsigned int (*)(unsigned char *, uint64_t))v13)(v10, 1))
  {
    if (v13(__src, 1, v11))
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(v10, __src, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v10, __src, v11);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  else if (v13(__src, 1, v11))
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v10, v11);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
    memcpy(v10, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v10, __src, v11);
  }
  return a1;
}

unsigned char *initializeWithTake for SyncError(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v11 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v15 + 48))(&a2[v12], 1))
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
    memcpy(&a1[v12], &a2[v12], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(&a1[v12], &a2[v12], *(void *)(v15 + 64));
    }
    else
    {
      uint64_t v2 = sub_1A8A75C38();
      (*(void (**)(void))(*(void *)(v2 - 8) + 32))();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(&a1[v12], 0, 1, v14);
  }
  __dst = &a1[*(int *)(v11 + 24)];
  __srCC_MD5_CTX c = &a2[*(int *)(v11 + 24)];
  uint64_t v8 = sub_1A8A74C38();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 48))(__src, 1))
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(__dst, __src, v8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  return a1;
}

unsigned char *assignWithTake for SyncError(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v15 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v18 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  if (((unsigned int (*)(unsigned char *, uint64_t))v20)(&a1[v16], 1))
  {
    if (v20(&a2[v16], 1, v18))
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
      memcpy(&a1[v16], &a2[v16], *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(&a1[v16], &a2[v16], *(void *)(v19 + 64));
      }
      else
      {
        uint64_t v4 = sub_1A8A75C38();
        (*(void (**)(void))(*(void *)(v4 - 8) + 32))();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(&a1[v16], 0, 1, v18);
    }
  }
  else if (v20(&a2[v16], 1, v18))
  {
    sub_1A80CB750((uint64_t)&a1[v16]);
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
    memcpy(&a1[v16], &a2[v16], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else if (&a1[v16] != &a2[v16])
  {
    sub_1A80CB750((uint64_t)&a1[v16]);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(&a1[v16], &a2[v16], *(void *)(v19 + 64));
    }
    else
    {
      uint64_t v2 = sub_1A8A75C38();
      (*(void (**)(void))(*(void *)(v2 - 8) + 32))();
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v10 = &a1[*(int *)(v15 + 24)];
  __srCC_MD5_CTX c = &a2[*(int *)(v15 + 24)];
  uint64_t v11 = sub_1A8A74C38();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (((unsigned int (*)(unsigned char *, uint64_t))v13)(v10, 1))
  {
    if (v13(__src, 1, v11))
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
      memcpy(v10, __src, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v10, __src, v11);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  else if (v13(__src, 1, v11))
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v10, v11);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
    memcpy(v10, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 40))(v10, __src, v11);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A80D10F0(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = type metadata accessor for ConnectionStatus.Error(0);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v2 - 8) + 48))(a1, a2);
}

uint64_t storeEnumTagSinglePayload for SyncError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A80D1178(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = type metadata accessor for ConnectionStatus.Error(0);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v2 - 8) + 56))(a1, a2);
}

uint64_t sub_1A80D11DC()
{
  uint64_t v2 = type metadata accessor for ConnectionStatus.Error(319);
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

void *sub_1A80D12B0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = a1;
  a1[1] = v4;
  return result;
}

uint64_t destroy for RecentMailboxes.Element()
{
  return swift_bridgeObjectRelease();
}

void *sub_1A80D130C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1A80D1358(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
}

uint64_t sub_1A80D1398(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v4 = *(_OWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      int v3 = -1;
      if (*(void *)(a1 + 8) < 0x100000000uLL) {
        int v3 = *(void *)(a1 + 8);
      }
      int v4 = v3;
    }
  }
  else
  {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1A80D14F8(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_OWORD *)uint64_t result = a2 + 0x80000000;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 0;
      }
      else {
        __break(1u);
      }
    }
    if (a2) {
      *(void *)(result + 8) = a2 - 1;
    }
  }
  return result;
}

void *_s21ActivityCapturedStateVMa()
{
  return &unk_1EFE8C140;
}

uint64_t sub_1A80D1714(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  swift_retain();
  *a1 = v4;
  return *a1 + 16;
}

uint64_t sub_1A80D1754()
{
  return swift_bridgeObjectRelease();
}

void *sub_1A80D1794(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[1] = v3;
  a1[2] = a2[2];
  uint64_t v4 = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[3] = v4;
  a1[4] = a2[4];
  uint64_t v7 = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = a1;
  a1[5] = v7;
  return result;
}

void *sub_1A80D1820(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[1] = v3;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v4 = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[3] = v4;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> __swift_memcpy48_8(void *a1, const void *a2)
{
}

void *sub_1A80D1900(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A80D1984(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      int v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      int v3 = -1;
      if (!HIDWORD(*(void *)(a1 + 40))) {
        int v3 = *(void *)(a1 + 40);
      }
      int v4 = v3;
    }
  }
  else
  {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1A80D1A9C(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(void *)uint64_t result = a2 + 0x80000000;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
    *(void *)(result + 40) = 0;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(unsigned char *)(result + 48) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(unsigned char *)(result + 48) = 0;
      }
      else {
        __break(1u);
      }
    }
    if (a2) {
      *(void *)(result + 40) = a2 - 1;
    }
  }
  return result;
}

void *_s21ActivityCapturedStateV16CapturedActivityVMa()
{
  return &unk_1EFE8C028;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  void *result = *a2;
  return result;
}

uint64_t sub_1A80D1CCC(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 <= 0xFD) {
      goto LABEL_15;
    }
    unsigned int v7 = ((a2 + 2) >> 8) + 1;
    int v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000) {
        int v2 = 4;
      }
      else {
        int v2 = 2;
      }
      int v8 = v2;
    }
    if (v8 == 1) {
      int v6 = a1[1];
    }
    else {
      int v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    }
    if (v6)
    {
      int v5 = (*a1 | ((v6 - 1) << 8)) + 253;
    }
    else
    {
LABEL_15:
      int v3 = *a1 - 3;
      if (v3 < 0) {
        int v3 = -1;
      }
      int v5 = v3;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1A80D1E7C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  int v7 = 0;
  if (a3 > 0xFD)
  {
    unsigned int v5 = ((a3 + 2) >> 8) + 1;
    int v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000) {
        int v3 = 4;
      }
      else {
        int v3 = 2;
      }
      int v6 = v3;
    }
    int v7 = v6;
  }
  if (a2 > 0xFD)
  {
    unsigned int v4 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2) {
      void *result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1A80D20C0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1A80D20C8(unsigned char *result, char a2)
{
  void *result = a2;
  return result;
}

void *_s21ActivityCapturedStateV16CapturedActivityV10CodingKeysOMa()
{
  return &unk_1EFE8BF98;
}

uint64_t sub_1A80D20E4(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 <= 0xFE) {
      goto LABEL_15;
    }
    unsigned int v7 = ((a2 + 1) >> 8) + 1;
    int v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000) {
        int v2 = 4;
      }
      else {
        int v2 = 2;
      }
      int v8 = v2;
    }
    if (v8 == 1) {
      int v6 = a1[1];
    }
    else {
      int v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    }
    if (v6)
    {
      int v5 = (*a1 | ((v6 - 1) << 8)) + 254;
    }
    else
    {
LABEL_15:
      int v3 = *a1 - 2;
      if (v3 < 0) {
        int v3 = -1;
      }
      int v5 = v3;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1A80D2294(unsigned char *result, unsigned int a2, unsigned int a3)
{
  int v7 = 0;
  if (a3 > 0xFE)
  {
    unsigned int v5 = ((a3 + 1) >> 8) + 1;
    int v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000) {
        int v3 = 4;
      }
      else {
        int v3 = 2;
      }
      int v6 = v3;
    }
    int v7 = v6;
  }
  if (a2 > 0xFE)
  {
    unsigned int v4 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2) {
      void *result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1A80D24D8(unsigned char *a1)
{
  return *a1 & 1;
}

unsigned char *sub_1A80D24E4(unsigned char *result, char a2)
{
  void *result = a2 & 1;
  return result;
}

void *_s21ActivityCapturedStateV10CodingKeysOMa()
{
  return &unk_1EFE8C0B0;
}

unint64_t sub_1A80D2508()
{
  return sub_1A80D2520();
}

unint64_t sub_1A80D2520()
{
  uint64_t v2 = qword_1E9743768;
  if (!qword_1E9743768)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743768);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D25A0()
{
  return sub_1A80D25B8();
}

unint64_t sub_1A80D25B8()
{
  uint64_t v2 = qword_1E9743760;
  if (!qword_1E9743760)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743760);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D2638()
{
  return sub_1A80D2650();
}

unint64_t sub_1A80D2650()
{
  uint64_t v2 = qword_1E9743758;
  if (!qword_1E9743758)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743758);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D26D0()
{
  return sub_1A80D26E8();
}

unint64_t sub_1A80D26E8()
{
  uint64_t v2 = qword_1E974AEC8;
  if (!qword_1E974AEC8)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AEC8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D2768()
{
  return sub_1A80D2780();
}

unint64_t sub_1A80D2780()
{
  uint64_t v2 = qword_1E9743740;
  if (!qword_1E9743740)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743740);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D2800()
{
  return sub_1A80D2818();
}

unint64_t sub_1A80D2818()
{
  uint64_t v2 = qword_1E9743738;
  if (!qword_1E9743738)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743738);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D2898()
{
  return sub_1A80D28B0();
}

unint64_t sub_1A80D28B0()
{
  uint64_t v2 = qword_1E974AED0;
  if (!qword_1E974AED0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E974AED0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D2930()
{
  return sub_1A80D2948();
}

unint64_t sub_1A80D2948()
{
  uint64_t v2 = qword_1E97436A0;
  if (!qword_1E97436A0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E97436A0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D29C8()
{
  uint64_t v2 = qword_1E9744428;
  if (!qword_1E9744428)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9744420);
    sub_1A80D2A5C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744428);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D2A5C()
{
  uint64_t v2 = qword_1E9743748;
  if (!qword_1E9743748)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9743748);
    return WitnessTable;
  }
  return v2;
}

void *sub_1A80D2ADC(const void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v9 + 48))(a1, 1))
  {
    memcpy(a2, a1, *(void *)(*(void *)(a4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a2, a1, a3);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, a3);
  }
  return a2;
}

unint64_t sub_1A80D2BF4()
{
  uint64_t v2 = qword_1E9744A80;
  if (!qword_1E9744A80)
  {
    sub_1A80C99DC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1E9744A80);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1A80D2C78()
{
  uint64_t v2 = qword_1E9744B78;
  if (!qword_1E9744B78)
  {
    self;
    ObjCClassMetachar data = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1E9744B78);
    return ObjCClassMetadata;
  }
  return v2;
}

unsigned char *sub_1A80D2CE0(unsigned char *a1, unsigned char *a2)
{
  if (a2 != a1)
  {
    sub_1A80C3170((uint64_t)a2);
    uint64_t v15 = type metadata accessor for Activity.MailboxStatus(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a2 = *a1;
      uint64_t v10 = type metadata accessor for ConnectionStatus.Error(0);
      __dst = &a2[*(int *)(v10 + 20)];
      uint64_t v12 = &a1[*(int *)(v10 + 20)];
      uint64_t v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v14 + 48))(v12, 1))
      {
        uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9743100);
        memcpy(__dst, v12, *(void *)(*(void *)(v3 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, v12, *(void *)(v14 + 64));
        }
        else
        {
          uint64_t v2 = sub_1A8A75C38();
          (*(void (**)(unsigned char *, unsigned char *))(*(void *)(v2 - 8) + 32))(__dst, v12);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
      int v6 = &a2[*(int *)(v10 + 24)];
      __srCC_MD5_CTX c = &a1[*(int *)(v10 + 24)];
      uint64_t v8 = sub_1A8A74C38();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v9 + 48))(__src, 1))
      {
        uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9741340);
        memcpy(v6, __src, *(void *)(*(void *)(v4 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v6, __src, v8);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a2, a1, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  return a2;
}

id sub_1A80D3054(uint64_t *a1, uint64_t a2, void *a3)
{
  return sub_1A80AF3B8(a1, a2, a3, v3);
}

void *sub_1A80D305C(id *a1, void *a2)
{
  id v7 = *a1;
  id v2 = *a1;
  *a2 = v7;
  uint64_t SyncDateHelperVMa = _s18LastSyncDateHelperVMa();
  uint64_t v8 = *(int *)(SyncDateHelperVMa + 20);
  uint64_t v3 = sub_1A8A74998();
  uint64_t v11 = (char *)a2 + v8;
  (*(void (**)(void))(*(void *)(v3 - 8) + 16))();
  uint64_t v12 = _s18MailboxPersistenceVMa();
  uint64_t v9 = *(int *)(v12 + 20);
  uint64_t v10 = *(id *)((char *)a1 + v8 + v9);
  id v4 = v10;
  *(void *)&v11[v9] = v10;
  uint64_t v5 = *(int *)(v12 + 24);
  uint64_t v16 = (id *)((char *)a1 + v8 + v5);
  uint64_t v18 = (void *)((char *)a2 + v8 + v5);
  *(void *)&v11[v5] = *v16;
  uint64_t v13 = v16[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[1] = v13;
  uint64_t v14 = v16[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v18[2] = v14;
  uint64_t v15 = v16[3];
  swift_retain();
  v18[3] = v15;
  uint64_t v19 = v16[4];
  swift_retain();
  v18[4] = v19;
  uint64_t v22 = *(int *)(SyncDateHelperVMa + 24);
  uint64_t v23 = *(uint64_t *)((char *)a1 + v22);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = a2;
  *(void *)((char *)a2 + v22) = v23;
  return result;
}

uint64_t sub_1A80D320C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v14 = sub_1A80D3380((uint64_t)&v17, 0, 0, 1, a1, a2);
  uint64_t v15 = v3;
  __int16 v16 = v4;
  uint64_t v11 = v17;
  if (v14)
  {
    v12[3] = swift_getObjectType();
    v12[0] = v14;
    uint64_t v6 = *a3;
    if (*a3)
    {
      sub_1A80D36F8((uint64_t)v12, v6);
      *a3 = v6 + 32;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  else
  {
    void v13[3] = MEMORY[0x1E4FBB9B0];
    v13[0] = a1;
    v13[1] = a2;
    uint64_t v7 = *a3;
    if (*a3)
    {
      sub_1A80D36F8((uint64_t)v13, v7);
      *a3 = v7 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  return v11;
}

uint64_t sub_1A80D3380(uint64_t result, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = (void *)result;
  uint64_t v24 = a6;
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (a2)
      {
        if (!a3) {
          __break(1u);
        }
        int64_t v16 = a3 - (void)a2;
      }
      else
      {
        int64_t v16 = 0;
      }
      int64_t v15 = (a6 & 0xF00000000000000uLL) >> 56;
      if (v15 < v16)
      {
        if (a2)
        {
          v21[0] = a5;
          v21[1] = a6 & (-(uint64_t)bswap64(0xFFuLL) - 1);
          sub_1A80D375C(v21, v15, a2);
          sub_1A8A779C8();
          *uint64_t v17 = a2;
          uint64_t v11 = 0;
          uint64_t v12 = v15;
          char v13 = 1;
          char v14 = 0;
LABEL_26:
          v21[2] = v11;
          v21[3] = v12;
          char v22 = v13 & 1;
          char v23 = v14 & 1;
          return (uint64_t)v11;
        }
        goto LABEL_28;
      }
    }
LABEL_13:
    uint64_t v6 = sub_1A80D379C(a5, a6);
    *uint64_t v17 = v7;
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    char v13 = 0;
    char v14 = 1;
    goto LABEL_26;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v10 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
      goto LABEL_21;
    }
    __break(1u);
  }
  uint64_t result = sub_1A8A77E88();
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v10 = result;
LABEL_21:
  *uint64_t v17 = v10;
  if (a6 < 0)
  {
    uint64_t v9 = 0;
LABEL_25:
    uint64_t v11 = (void *)v9;
    uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL;
    char v13 = 0;
    char v14 = 0;
    goto LABEL_26;
  }
  if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0)
  {
    swift_unknownObjectRetain();
    uint64_t v9 = a6 & 0xFFFFFFFFFFFFFFFLL;
    goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A80D36F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

void *sub_1A80D375C(const void *a1, size_t a2, void *__dst)
{
  return __dst;
}

void *sub_1A80D379C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1A80D3850(a1, a2);
  sub_1A80D39CC();
  uint64_t v4 = v6[2];
  sub_1A80D3A44(v4);
  sub_1A80D3AC8(v4, 0);
  sub_1A809ED44();
  swift_retain();
  uint64_t v5 = sub_1A80C3C70((uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)v5;
  if (!__OFSUB__(v5, 1)) {
    return v6;
  }
  __break(1u);
  return result;
}

void *sub_1A80D3850(uint64_t a1, uint64_t a2)
{
  v8[2] = a2;
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = sub_1A8A76848();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v7 = (a2 & 0xF00000000000000uLL) >> 56;
  }
  else
  {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7) {
    return (void *)sub_1A8244D78();
  }
  uint64_t v5 = sub_1A84F3E00(v7, 0);
  swift_retain();
  swift_release();
  uint64_t result = (void *)sub_1A8A77DD8();
  uint64_t v6 = result;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = v8;
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    sub_1A809F920();
    if (v6 == (void *)v7) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A80D39CC()
{
  uint64_t v4 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v0 = v4;
  if ((result & 1) == 0)
  {
    uint64_t v2 = sub_1A80C3C70(*v3);
    uint64_t result = sub_1A80D3B38(0, v2 + 1, 1, *v3);
    uint64_t *v3 = result;
  }
  return result;
}

uint64_t sub_1A80D3A44(uint64_t result)
{
  if (*(void *)(*(void *)v1 + 24) >> 1 < result + 1)
  {
    uint64_t result = sub_1A80D3B38(*(void *)(*(void *)v1 + 24) >> 1 != 0, result + 1, 1, *v2);
    uint64_t *v2 = result;
  }
  return result;
}

uint64_t sub_1A80D3AC8(uint64_t a1, char a2)
{
  uint64_t v5 = a1 + 1;
  uint64_t v4 = *v2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  *(void *)(v4 + 16) = v5;
  swift_release();
  uint64_t v6 = *v2;
  swift_retain();
  *(unsigned char *)(v6 + 32 + a1) = a2;
  return swift_release();
}

uint64_t sub_1A80D3B38(char a1, uint64_t a2, char a3, uint64_t a4)
{
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v16 = *(void *)(a4 + 24) >> 1;
  if (a3)
  {
    if (v16 < a2)
    {
      if ((unsigned __int128)(v16 * (__int128)2) >> 64 != (2 * v16) >> 63)
      {
        __break(1u);
        return result;
      }
      if (2 * v16 < a2) {
        uint64_t v11 = a2;
      }
      else {
        uint64_t v11 = 2 * v16;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(a4 + 24) >> 1;
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  int64_t v10 = *(void *)(a4 + 16);
  if (v11 < v10) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v11;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9745E98);
    uint64_t v8 = (void *)swift_allocObject();
    if (_swift_stdlib_has_malloc_size())
    {
      size_t v6 = (size_t)v8 + _swift_stdlib_malloc_size(v8);
      swift_retain();
      v8[2] = v10;
      void v8[3] = 2 * (v6 - (void)(v8 + 4));
    }
    else
    {
      swift_retain();
      v8[2] = v10;
      void v8[3] = 2 * v9;
    }
    swift_release();
    uint64_t v7 = (char *)v8;
  }
  else
  {
    uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
    swift_retain();
    uint64_t v7 = v5;
  }
  if (a1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A80D3E70((char *)(a4 + 32), v10, v7 + 32);
    *(void *)(a4 + 16) = 0;
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    swift_release();
    sub_1A80D3E38((const void *)(a4 + 32), v10, v7 + 32);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v7;
}

void *sub_1A80D3E38(const void *a1, size_t a2, void *__dst)
{
  return memcpy(__dst, a1, a2);
}

char *sub_1A80D3E70(char *result, size_t a2, char *a3)
{
  if (a3 < result || a3 >= &result[a2] || a3 != result) {
    return (char *)memmove(a3, result, a2);
  }
  return result;
}

uint64_t sub_1A80D3F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1A8A74998();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 32))(a2, a1);
  uint64_t v3 = _s18MailboxPersistenceVMa();
  *(void *)(a2 + *(int *)(v3 + 20)) = *(void *)(a1 + *(int *)(v3 + 20));
  memcpy((void *)(a2 + *(int *)(v3 + 24)), (const void *)(a1 + *(int *)(v3 + 24)), 0x28uLL);
  return a2;
}

unint64_t sub_1A80D3FCC()
{
  uint64_t v2 = qword_1E97488C0;
  if (!qword_1E97488C0)
  {
    self;
    ObjCClassMetachar data = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1E97488C0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1A80D4034()
{
  return sub_1A8A75CB8();
}

uint64_t sub_1A80D404C()
{
  return sub_1A8A77BF8();
}

uint64_t sub_1A80D40E4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *MEMORY[0x1E4FBCC58];
  uint64_t v1 = sub_1A8A774C8();
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 8) + 104))(a1, v3);
}

uint64_t sub_1A80D4150()
{
  uint64_t v1 = sub_1A8A754D8();
  __swift_allocate_value_buffer(v1, qword_1E97439A0);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E97439A0);
  sub_1A8A76728();
  sub_1A8A76728();
  return sub_1A8A754C8();
}

uint64_t sub_1A80D41F4()
{
  if (qword_1E9740D40 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A8A754D8();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1E97439A0);
}

uint64_t sub_1A80D4264()
{
  uint64_t result = sub_1A8A76728();
  qword_1E97435B8 = result;
  qword_1E97435C0 = v1;
  return result;
}

uint64_t *sub_1A80D42A8()
{
  if (qword_1E97435C8 != -1) {
    swift_once();
  }
  return &qword_1E97435B8;
}

void sub_1A80D430C()
{
}

id sub_1A80D4338(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAccountsProvider_, a1);
  swift_unknownObjectRelease();
  return v2;
}

id sub_1A80D4388(uint64_t a1)
{
  uint64_t v33 = a1;
  id v37 = 0;
  uint64_t v36 = 0;
  uint64_t v30 = 0;
  unint64_t v21 = (*(void *)(*(void *)(sub_1A8A774C8() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v29 = (uint64_t)&v21 - v21;
  unint64_t v22 = (*(void *)(*(void *)(sub_1A8A77488() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v30);
  uint64_t v28 = (char *)&v21 - v22;
  unint64_t v23 = (*(void *)(*(void *)(sub_1A8A75CE8() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v1 = (void *)MEMORY[0x1F4188790](v32);
  uint64_t v27 = (char *)&v21 - v23;
  uint64_t v36 = v2;
  id v3 = v1;
  uint64_t v4 = v32;
  uint64_t v5 = v32;
  size_t v6 = v32;
  uint64_t v7 = v32;
  id v8 = v32;
  id v37 = v32;
  v32[OBJC_IVAR___MFBackFillMessageBodyScheduler_didSetCriteria] = 0;

  id v9 = v32;
  *(void *)&v32[OBJC_IVAR___MFBackFillMessageBodyScheduler_activity] = v30;

  uint64_t v24 = OBJC_IVAR___MFBackFillMessageBodyScheduler_nextActivityID;
  sub_1A80D430C();
  __int16 v11 = v10;
  id v12 = v32;
  *(_WORD *)&v32[v24] = v11;

  uint64_t v31 = OBJC_IVAR___MFBackFillMessageBodyScheduler_queue;
  sub_1A80D3FCC();
  uint64_t v25 = sub_1A8A76728();
  uint64_t v26 = v13;
  sub_1A80D4034();
  sub_1A80D404C();
  sub_1A80D40E4(v29);
  uint64_t v14 = sub_1A8A77508();
  id v15 = v32;
  *(void *)&v32[v31] = v14;

  swift_unknownObjectRetain();
  id v16 = v32;
  *(void *)&v32[OBJC_IVAR___MFBackFillMessageBodyScheduler_accountProvider] = v33;

  v35.receiver = v37;
  v35.super_class = (Class)MFBackFillMessageBodyScheduler;
  id v17 = objc_msgSendSuper2(&v35, sel_init);
  id v34 = v17;
  id v18 = v17;
  id v19 = v17;
  id v37 = v17;
  sub_1A80D4660();

  swift_unknownObjectRelease();
  return v34;
}

uint64_t sub_1A80D4660()
{
  uint64_t v44 = 0;
  uint64_t v31 = sub_1A80E733C;
  unint64_t v32 = sub_1A80E7334;
  uint64_t v61 = 0;
  uint64_t v33 = 0;
  uint64_t v39 = sub_1A8A754D8();
  uint64_t v37 = *(void *)(v39 - 8);
  uint64_t v38 = v39 - 8;
  unint64_t v35 = (*(void *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v39);
  uint64_t v0 = (char *)v10 - v35;
  uint64_t v36 = (char *)v10 - v35;
  uint64_t v61 = v1;
  uint64_t v2 = sub_1A80D41F4();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v0, v2, v39);
  uint64_t v46 = sub_1A8A754B8();
  int v45 = sub_1A8A77468();
  id v42 = &v59;
  uint64_t v59 = 2;
  unint64_t v40 = sub_1A809EBD0();
  unint64_t v41 = sub_1A809EC4C();
  sub_1A809ECC8();
  sub_1A8A76B48();
  uint32_t v43 = v60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
  uint64_t v47 = sub_1A8A78558();
  if (os_log_type_enabled(v46, (os_log_type_t)v45))
  {
    uint64_t v3 = v33;
    unint64_t v21 = (uint8_t *)sub_1A8A77888();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
    uint64_t v20 = 0;
    uint64_t v22 = sub_1A809E94C(0);
    uint64_t v23 = sub_1A809E94C(v20);
    uint64_t v27 = &v51;
    unint64_t v51 = v21;
    uint64_t v28 = &v50;
    uint64_t v50 = v22;
    uint64_t v25 = &v49;
    uint64_t v49 = v23;
    unsigned int v24 = 0;
    sub_1A809E9A8(0, &v51);
    sub_1A809E9A8(v24, v27);
    uint64_t v48 = v47;
    uint64_t v26 = v10;
    MEMORY[0x1F4188790](v10);
    uint64_t v4 = v28;
    uint64_t v5 = &v10[-6];
    uint64_t v29 = &v10[-6];
    v5[2] = v27;
    v5[3] = v4;
    v5[4] = v6;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744960);
    sub_1A80E736C();
    sub_1A8A76A98();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl(&dword_1A7EFF000, v46, (os_log_type_t)v45, "Registering.", v21, v43);
      uint64_t v18 = 0;
      sub_1A809EA08(v22);
      sub_1A809EA08(v23);
      sub_1A8A77868();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v39);
  uint64_t v7 = sub_1A80D42A8();
  uint64_t v12 = *v7;
  uint64_t v17 = v7[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  xpc_object_t v16 = (xpc_object_t)*MEMORY[0x1E4F14158];
  swift_unknownObjectRetain();
  uint64_t v11 = swift_allocObject();
  v10[1] = v11 + 16;
  id v8 = v34;
  swift_unknownObjectWeakInit();

  swift_retain();
  uint64_t v57 = v32;
  uint64_t v58 = v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  int v53 = 1107296256;
  int v54 = 0;
  uint64_t v55 = sub_1A80D6FCC;
  uint64_t v56 = &block_descriptor;
  id v15 = _Block_copy(&aBlock);
  swift_release();
  swift_release();
  uint64_t v14 = sub_1A8A76648();
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v13 = (const char *)(v14 + 32);
  swift_bridgeObjectRelease();
  xpc_activity_register(v13, v16, v15);
  swift_unknownObjectRelease();
  _Block_release(v15);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void __swiftcall MFBackFillMessageBodyScheduler.init()(MFBackFillMessageBodyScheduler *__return_ptr retstr)
{
}

uint64_t MFBackFillMessageBodyScheduler.init()()
{
  if (!"Message_Private.MFBackFillMessageBodyScheduler")
  {
    sub_1A8A780E8();
    __break(1u);
  }
  uint64_t result = sub_1A80E73F0((uint64_t)"Message_Private.MFBackFillMessageBodyScheduler", 46, (unint64_t)"", 0, 2, (unint64_t)"", 0, 2, v1, 0, 0);
  __break(1u);
  return result;
}

void sub_1A80D4DD0(_xpc_activity_s *a1, uint64_t a2)
{
  uint64_t v58 = a1;
  uint64_t v57 = a2;
  uint64_t v64 = 0;
  unint64_t v51 = sub_1A80E9D18;
  id v52 = sub_1A80C9FF0;
  int v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  int v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80CA03C;
  xpc_activity_t v77 = 0;
  uint64_t v76 = 0;
  xpc_activity_state_t v75 = 0;
  uint64_t v56 = 0;
  uint64_t v59 = sub_1A8A754D8();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = v59 - 8;
  unint64_t v62 = (*(void *)(v60 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v63 = (char *)v19 - v62;
  xpc_activity_t v77 = (xpc_activity_t)MEMORY[0x1F4188790](v58);
  uint64_t v76 = v2 + 16;
  xpc_activity_state_t state = xpc_activity_get_state(v77);
  xpc_activity_state_t v75 = state;
  if (v64 == state)
  {
    uint64_t v50 = v57 + 16;
    swift_beginAccess();
    id v66 = (id)MEMORY[0x1AD0E4DE0](v50);
    if (v66)
    {
      uint64_t v48 = &v66;
      id v49 = v66;
      id v3 = v66;
      sub_1A80CA1D8(v48);
      swift_endAccess();
      sub_1A80D5680(v58);
    }
    else
    {
      sub_1A80CA1D8(&v66);
      swift_endAccess();
    }
  }
  else if (state == 2)
  {
    uint64_t v47 = v57 + 16;
    swift_beginAccess();
    id v67 = (id)MEMORY[0x1AD0E4DE0](v47);
    if (v67)
    {
      int v45 = &v67;
      id v46 = v67;
      id v4 = v67;
      sub_1A80CA1D8(v45);
      swift_endAccess();
      sub_1A80D6338((uint64_t)v58);
    }
    else
    {
      sub_1A80CA1D8(&v67);
      swift_endAccess();
    }
  }
  else
  {
    uint64_t v5 = v63;
    uint64_t v6 = sub_1A80D41F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v5, v6, v59);
    uint64_t v34 = 7;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = state;
    uint32_t v43 = sub_1A8A754B8();
    int v44 = sub_1A8A77448();
    uint64_t v30 = &v73;
    uint64_t v73 = 12;
    unint64_t v28 = sub_1A809EBD0();
    unint64_t v29 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v31 = v74;
    uint64_t v32 = 17;
    uint64_t v37 = swift_allocObject();
    *(unsigned char *)(v37 + 16) = 0;
    uint64_t v38 = swift_allocObject();
    *(unsigned char *)(v38 + 16) = 8;
    uint64_t v33 = 32;
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = v35;
    uint64_t v36 = v7;
    *(void *)(v7 + 16) = v51;
    *(void *)(v7 + 24) = v8;
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = v36;
    uint64_t v40 = v9;
    *(void *)(v9 + 16) = v52;
    *(void *)(v9 + 24) = v10;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v39 = sub_1A8A78558();
    unint64_t v41 = v11;
    swift_retain();
    uint64_t v12 = v37;
    uint64_t v13 = v41;
    *unint64_t v41 = v53;
    v13[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v12;
    swift_retain();
    uint64_t v14 = v38;
    id v15 = v41;
    v41[2] = v54;
    v15[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v14;
    swift_retain();
    xpc_object_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
    uint64_t v17 = v41;
    v41[4] = v55;
    void v17[5] = v16;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      uint64_t v18 = v56;
      unint64_t v21 = (uint8_t *)sub_1A8A77888();
      v19[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v20 = 0;
      uint64_t v22 = sub_1A809E94C(0);
      uint64_t v23 = sub_1A809E94C(v20);
      unsigned int v24 = &v72;
      uint64_t v72 = v21;
      uint64_t v25 = &v71;
      uint64_t v71 = v22;
      uint64_t v26 = &v70;
      uint64_t v70 = v23;
      sub_1A809E9A8(0, &v72);
      sub_1A809E9A8(1, v24);
      uint64_t v68 = v53;
      uint64_t v69 = v37;
      sub_1A809E9BC(&v68, (uint64_t)v24, (uint64_t)v25, (uint64_t)v26);
      uint64_t v27 = v18;
      if (v18)
      {
        __break(1u);
      }
      else
      {
        uint64_t v68 = v54;
        uint64_t v69 = v38;
        sub_1A809E9BC(&v68, (uint64_t)&v72, (uint64_t)&v71, (uint64_t)&v70);
        v19[1] = 0;
        uint64_t v68 = v55;
        uint64_t v69 = v40;
        sub_1A809E9BC(&v68, (uint64_t)&v72, (uint64_t)&v71, (uint64_t)&v70);
        _os_log_impl(&dword_1A7EFF000, v43, (os_log_type_t)v44, "Unexpected activity state: %ld.", v21, v31);
        v19[0] = 0;
        sub_1A809EA08(v22);
        sub_1A809EA08(v23);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v59);
  }
}

uint64_t sub_1A80D5680(_xpc_activity_s *a1)
{
  xpc_activity_t v80 = a1;
  uint64_t v73 = sub_1A80E733C;
  uint32_t v74 = sub_1A80E7830;
  xpc_activity_state_t v75 = sub_1A80C40EC;
  uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  xpc_activity_t v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v78 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v114 = 0;
  uint64_t v113 = 0;
  xpc_object_t v112 = 0;
  xpc_object_t v111 = 0;
  BOOL v110 = 0;
  uint64_t v90 = 0;
  uint64_t v79 = 0;
  xpc_object_t v95 = 0;
  uint64_t v81 = sub_1A8A754D8();
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v83 = v81 - 8;
  unint64_t v84 = (*(void *)(v82 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = MEMORY[0x1F4188790](v80);
  unint64_t v85 = (char *)v26 - v84;
  unint64_t v86 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v4 = (_xpc_activity_s *)MEMORY[0x1F4188790](v2);
  uint64_t v87 = (char *)v26 - v86;
  uint64_t v114 = v4;
  uint64_t v113 = v1;
  xpc_object_t v88 = xpc_activity_copy_criteria(v4);
  xpc_object_t v112 = v88;
  xpc_object_t v91 = sub_1A80D749C();
  xpc_object_t v111 = v91;
  int v92 = (unsigned __int8 *)(v89 + OBJC_IVAR___MFBackFillMessageBodyScheduler_didSetCriteria);
  unint64_t v93 = &v109;
  swift_beginAccess();
  int v94 = *v92;
  swift_endAccess();
  if (v94)
  {
    swift_unknownObjectRetain();
    if (v88)
    {
      xpc_object_t v72 = v88;
      xpc_object_t v71 = v88;
      xpc_object_t v95 = v88;
      BOOL v110 = !xpc_equal(v91, v88);
      swift_unknownObjectRelease();
    }
    else
    {
      BOOL v110 = 1;
    }
  }
  else
  {
    BOOL v110 = 1;
  }
  if (v110)
  {
    uint64_t v5 = v87;
    uint64_t v6 = sub_1A80D41F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v5, v6, v81);
    swift_unknownObjectRetain();
    uint64_t v60 = 7;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v91;
    uint64_t v69 = sub_1A8A754B8();
    int v70 = sub_1A8A77468();
    uint64_t v56 = &v101;
    uint64_t v101 = 12;
    unint64_t v54 = sub_1A809EBD0();
    unint64_t v55 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v57 = v102;
    uint64_t v58 = 17;
    uint64_t v63 = swift_allocObject();
    *(unsigned char *)(v63 + 16) = 34;
    uint64_t v64 = swift_allocObject();
    *(unsigned char *)(v64 + 16) = 8;
    uint64_t v59 = 32;
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = v61;
    uint64_t v62 = v7;
    *(void *)(v7 + 16) = v74;
    *(void *)(v7 + 24) = v8;
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = v62;
    uint64_t v66 = v9;
    *(void *)(v9 + 16) = v75;
    *(void *)(v9 + 24) = v10;
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v65 = sub_1A8A78558();
    id v67 = v11;
    swift_retain();
    uint64_t v12 = v63;
    uint64_t v13 = v67;
    void *v67 = v76;
    v13[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v12;
    swift_retain();
    uint64_t v14 = v64;
    id v15 = v67;
    v67[2] = v77;
    v15[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v14;
    swift_retain();
    xpc_object_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v66;
    uint64_t v17 = v67;
    v67[4] = v78;
    void v17[5] = v16;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v69, (os_log_type_t)v70))
    {
      uint64_t v18 = v79;
      uint64_t v47 = (uint8_t *)sub_1A8A77888();
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v48 = sub_1A809E94C(0);
      uint64_t v49 = sub_1A809E94C(1);
      uint64_t v50 = &v100;
      uint64_t v100 = v47;
      unint64_t v51 = &v99;
      uint64_t v99 = v48;
      id v52 = &v98;
      uint64_t v98 = v49;
      sub_1A809E9A8(2, &v100);
      sub_1A809E9A8(1, v50);
      uint64_t v96 = v76;
      uint64_t v97 = v63;
      sub_1A809E9BC(&v96, (uint64_t)v50, (uint64_t)v51, (uint64_t)v52);
      uint64_t v53 = v18;
      if (v18)
      {
        __break(1u);
      }
      else
      {
        uint64_t v96 = v77;
        uint64_t v97 = v64;
        sub_1A809E9BC(&v96, (uint64_t)&v100, (uint64_t)&v99, (uint64_t)&v98);
        uint64_t v45 = 0;
        uint64_t v96 = v78;
        uint64_t v97 = v66;
        sub_1A809E9BC(&v96, (uint64_t)&v100, (uint64_t)&v99, (uint64_t)&v98);
        _os_log_impl(&dword_1A7EFF000, v69, (os_log_type_t)v70, "Checking in: Updating criteria to %{public}s", v47, v57);
        sub_1A809EA08(v48);
        sub_1A809EA08(v49);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v81);
    xpc_activity_set_criteria(v80, v91);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v20 = v85;
    uint64_t v21 = sub_1A80D41F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v20, v21, v81);
    uint32_t v43 = sub_1A8A754B8();
    int v42 = sub_1A8A77468();
    uint64_t v40 = &v107;
    uint64_t v107 = 2;
    unint64_t v38 = sub_1A809EBD0();
    unint64_t v39 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v41 = v108;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v44 = sub_1A8A78558();
    if (os_log_type_enabled(v43, (os_log_type_t)v42))
    {
      uint64_t v22 = v79;
      unint64_t v28 = (uint8_t *)sub_1A8A77888();
      v26[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v27 = 0;
      uint64_t v29 = sub_1A809E94C(0);
      uint64_t v30 = sub_1A809E94C(v27);
      uint64_t v34 = &v106;
      id v106 = v28;
      uint64_t v35 = &v105;
      uint64_t v105 = v29;
      uint64_t v32 = &v104;
      uint64_t v104 = v30;
      unsigned int v31 = 0;
      sub_1A809E9A8(0, &v106);
      sub_1A809E9A8(v31, v34);
      uint64_t v103 = v44;
      uint64_t v33 = v26;
      MEMORY[0x1F4188790](v26);
      uint64_t v23 = v35;
      unsigned int v24 = &v26[-6];
      uint64_t v36 = &v26[-6];
      v24[2] = v34;
      void v24[3] = v23;
      v24[4] = v25;
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744960);
      sub_1A80E736C();
      sub_1A8A76A98();
      if (v22)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl(&dword_1A7EFF000, v43, (os_log_type_t)v42, "Checked in.", v28, v41);
        v26[0] = 0;
        sub_1A809EA08(v29);
        sub_1A809EA08(v30);
        sub_1A8A77868();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v81);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1A80D6338(uint64_t a1)
{
  uint64_t v91 = a1;
  uint64_t v85 = 0;
  uint64_t v76 = sub_1A80E733C;
  xpc_activity_t v77 = sub_1A80E733C;
  uint64_t v78 = sub_1A80E8758;
  uint64_t v121 = 0;
  uint64_t v120 = 0;
  uint64_t v79 = 0;
  uint64_t v110 = 0;
  uint64_t v80 = sub_1A8A75C98();
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = v80 - 8;
  unint64_t v83 = (*(void *)(v81 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  unint64_t v84 = (char *)v26 - v83;
  uint64_t v86 = sub_1A8A75CE8();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = v86 - 8;
  unint64_t v89 = (*(void *)(v87 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v85);
  uint64_t v90 = (char *)v26 - v89;
  uint64_t v92 = sub_1A8A754D8();
  uint64_t v93 = *(void *)(v92 - 8);
  uint64_t v94 = v92 - 8;
  unint64_t v95 = (*(void *)(v93 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = MEMORY[0x1F4188790](v91);
  uint64_t v96 = (char *)v26 - v95;
  unint64_t v97 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v4 = (_xpc_activity_s *)MEMORY[0x1F4188790](v2);
  uint64_t v98 = (char *)v26 - v97;
  uint64_t v121 = v4;
  uint64_t v120 = v1;
  if (xpc_activity_set_state(v4, 4))
  {
    uint64_t v5 = v98;
    uint64_t v6 = sub_1A80D41F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v5, v6, v92);
    uint64_t v73 = sub_1A8A754B8();
    int v72 = sub_1A8A77468();
    int v70 = &v112;
    uint64_t v112 = 2;
    unint64_t v68 = sub_1A809EBD0();
    unint64_t v69 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v71 = v113;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v74 = sub_1A8A78558();
    if (os_log_type_enabled(v73, (os_log_type_t)v72))
    {
      uint64_t v7 = v79;
      uint64_t v58 = (uint8_t *)sub_1A8A77888();
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v57 = 0;
      uint64_t v59 = sub_1A809E94C(0);
      uint64_t v60 = sub_1A809E94C(v57);
      uint64_t v64 = &v102;
      uint32_t v102 = v58;
      uint64_t v65 = &v101;
      uint64_t v101 = v59;
      uint64_t v62 = &v100;
      uint64_t v100 = v60;
      unsigned int v61 = 0;
      sub_1A809E9A8(0, &v102);
      sub_1A809E9A8(v61, v64);
      uint64_t v99 = v74;
      uint64_t v63 = v26;
      MEMORY[0x1F4188790](v26);
      uint64_t v8 = v65;
      uint64_t v9 = &v26[-6];
      uint64_t v66 = &v26[-6];
      void v9[2] = v64;
      void v9[3] = v8;
      void v9[4] = v10;
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744960);
      sub_1A80E736C();
      sub_1A8A76A98();
      if (v7)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl(&dword_1A7EFF000, v73, (os_log_type_t)v72, "Run", v58, v71);
        uint64_t v55 = 0;
        sub_1A809EA08(v59);
        sub_1A809EA08(v60);
        sub_1A8A77868();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v93 + 8))(v98, v92);
    uint64_t v51 = 0;
    _s8ActivityCMa();
    uint64_t v45 = &v75[OBJC_IVAR___MFBackFillMessageBodyScheduler_nextActivityID];
    uint64_t v46 = &v111;
    uint64_t v50 = 32;
    swift_beginAccess();
    int v48 = *(unsigned __int16 *)v45;
    swift_endAccess();
    swift_unknownObjectRetain();
    uint64_t v11 = v75;
    uint64_t v49 = &off_1E974A000;
    uint64_t v47 = *(void **)&v75[OBJC_IVAR___MFBackFillMessageBodyScheduler_queue];
    id v12 = v47;
    uint64_t v54 = sub_1A80D7970(v48, v91, v75, v47);
    uint64_t v110 = v54;
    id v53 = *(char **)((char *)v49[479] + (void)v75);
    id v13 = v53;
    uint64_t v14 = v75;
    swift_retain();
    uint64_t v15 = swift_allocObject();
    xpc_object_t v16 = v78;
    uint64_t v17 = v15;
    uint64_t v18 = v54;
    *(void *)(v17 + 16) = v75;
    *(void *)(v17 + 24) = v18;
    uint32_t v108 = v16;
    uint64_t v109 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    int v104 = 1107296256;
    int v105 = 0;
    id v106 = sub_1A80D86F8;
    uint64_t v107 = &block_descriptor_24;
    id v52 = _Block_copy(&aBlock);
    sub_1A80D4034();
    sub_1A80D8748();
    MEMORY[0x1AD0E05D0](v51, v90, v84, v52);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v84, v80);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v86);
    _Block_release(v52);
    swift_release();

    swift_release();
    return sub_1A80D78B4((uint64_t)v75);
  }
  else
  {
    uint64_t v20 = v96;
    uint64_t v21 = sub_1A80D41F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v20, v21, v92);
    uint32_t v43 = sub_1A8A754B8();
    int v42 = sub_1A8A77448();
    uint64_t v40 = &v118;
    uint64_t v118 = 2;
    unint64_t v38 = sub_1A809EBD0();
    unint64_t v39 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v41 = v119;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v44 = sub_1A8A78558();
    if (os_log_type_enabled(v43, (os_log_type_t)v42))
    {
      uint64_t v22 = v79;
      unint64_t v28 = (uint8_t *)sub_1A8A77888();
      v26[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v27 = 0;
      uint64_t v29 = sub_1A809E94C(0);
      uint64_t v30 = sub_1A809E94C(v27);
      uint64_t v34 = &v117;
      uint64_t v117 = v28;
      uint64_t v35 = &v116;
      uint64_t v116 = v29;
      uint64_t v32 = &v115;
      uint64_t v115 = v30;
      unsigned int v31 = 0;
      sub_1A809E9A8(0, &v117);
      sub_1A809E9A8(v31, v34);
      uint64_t v114 = v44;
      uint64_t v33 = v26;
      MEMORY[0x1F4188790](v26);
      uint64_t v23 = v35;
      unsigned int v24 = &v26[-6];
      uint64_t v36 = &v26[-6];
      v24[2] = v34;
      void v24[3] = v23;
      v24[4] = v25;
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744960);
      sub_1A80E736C();
      sub_1A8A76A98();
      if (v22)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl(&dword_1A7EFF000, v43, (os_log_type_t)v42, "Unable to set state to CONTINUE.", v28, v41);
        v26[0] = 0;
        sub_1A809EA08(v29);
        sub_1A809EA08(v30);
        sub_1A8A77868();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v96, v92);
  }
}

uint64_t sub_1A80D6FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v3(a2);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1A80D7034()
{
  uint64_t v37 = 0;
  uint64_t v26 = sub_1A80E733C;
  uint64_t v47 = 0;
  uint64_t v27 = 0;
  uint64_t v32 = sub_1A8A754D8();
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v31 = v32 - 8;
  unint64_t v28 = (*(void *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v32);
  uint64_t v0 = (char *)&v9 - v28;
  uint64_t v29 = (char *)&v9 - v28;
  uint64_t v47 = v1;
  uint64_t v2 = sub_1A80D41F4();
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v0, v2, v32);
  unint64_t v39 = sub_1A8A754B8();
  int v38 = sub_1A8A77468();
  uint64_t v35 = &v45;
  uint64_t v45 = 2;
  unint64_t v33 = sub_1A809EBD0();
  unint64_t v34 = sub_1A809EC4C();
  sub_1A809ECC8();
  sub_1A8A76B48();
  uint32_t v36 = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
  uint64_t v40 = sub_1A8A78558();
  if (os_log_type_enabled(v39, (os_log_type_t)v38))
  {
    uint64_t v3 = v27;
    xpc_object_t v16 = (uint8_t *)sub_1A8A77888();
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
    uint64_t v15 = 0;
    uint64_t v17 = sub_1A809E94C(0);
    uint64_t v18 = sub_1A809E94C(v15);
    uint64_t v22 = &v44;
    uint64_t v44 = v16;
    uint64_t v23 = &v43;
    uint64_t v43 = v17;
    uint64_t v20 = &v42;
    uint64_t v42 = v18;
    unsigned int v19 = 0;
    sub_1A809E9A8(0, &v44);
    sub_1A809E9A8(v19, v22);
    uint64_t v41 = v40;
    uint64_t v21 = &v9;
    MEMORY[0x1F4188790](&v9);
    id v4 = v23;
    uint64_t v5 = &v9 - 6;
    unsigned int v24 = &v9 - 6;
    v5[2] = (uint64_t)v22;
    v5[3] = (uint64_t)v4;
    v5[4] = v6;
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744960);
    sub_1A80E736C();
    sub_1A8A76A98();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl(&dword_1A7EFF000, v39, (os_log_type_t)v38, "Un-registering.", v16, v36);
      uint64_t v13 = 0;
      sub_1A809EA08(v17);
      sub_1A809EA08(v18);
      sub_1A8A77868();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v32);
  uint64_t v7 = sub_1A80D42A8();
  uint64_t v9 = *v7;
  uint64_t v12 = v7[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v11 = sub_1A8A76648();
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v10 = (const char *)(v11 + 32);
  swift_bridgeObjectRelease();
  xpc_activity_unregister(v10);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

xpc_object_t sub_1A80D749C()
{
  xpc_object_t empty = xpc_dictionary_create_empty();
  xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E4F142F8], 1);
  uint64_t v5 = (int64_t *)MEMORY[0x1E4F141E8];
  xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E4F141C8], *MEMORY[0x1E4F141E8]);
  xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E4F14170], *MEMORY[0x1E4F14210]);
  xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E4F141A8], *v5);
  if (*MEMORY[0x1E4F141A0])
  {
    xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E4F141A0], *MEMORY[0x1E4F14210]);
  }
  else
  {
    sub_1A8A780E8();
    __break(1u);
    xpc_dictionary_set_int64(empty, key, *MEMORY[0x1E4F14210]);
  }
  xpc_dictionary_set_string(empty, (const char *)*MEMORY[0x1E4F142C8], (const char *)*MEMORY[0x1E4F142E0]);
  xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E4F14138], 0);
  if (*MEMORY[0x1E4F14330])
  {
    xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E4F14330], 1);
  }
  else
  {
    sub_1A8A780E8();
    __break(1u);
    xpc_dictionary_set_BOOL(empty, v3, 1);
  }
  if (*MEMORY[0x1E4F14260])
  {
    xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E4F14260], 104857600);
  }
  else
  {
    sub_1A8A780E8();
    __break(1u);
    xpc_dictionary_set_int64(empty, v2, 104857600);
  }
  if (*MEMORY[0x1E4F142A0])
  {
    xpc_dictionary_set_int64(empty, (const char *)*MEMORY[0x1E4F142A0], 0x100000);
  }
  else
  {
    sub_1A8A780E8();
    __break(1u);
    xpc_dictionary_set_int64(empty, v1, 0x100000);
  }
  return empty;
}

uint64_t sub_1A80D77E4()
{
  return sub_1A80D77FC();
}

uint64_t sub_1A80D77FC()
{
  uint64_t v3 = (void *)xpc_copy_clean_description();
  if (!v3) {
    return sub_1A8A76728();
  }
  uint64_t v1 = sub_1A8A76808();
  sub_1A80E72CC(v3);
  return v1;
}

uint64_t sub_1A80D78B4(uint64_t a1)
{
  swift_beginAccess();
  swift_endAccess();
  sub_1A80E0574();
  __int16 v5 = v1;
  id v4 = (_WORD *)(a1 + OBJC_IVAR___MFBackFillMessageBodyScheduler_nextActivityID);
  swift_beginAccess();
  _WORD *v4 = v5;
  return swift_endAccess();
}

uint64_t sub_1A80D7970(__int16 a1, uint64_t a2, void *a3, void *a4)
{
  return sub_1A80DE9F4(a1, a2, a3, a4);
}

void sub_1A80D79D4(uint64_t a1, uint64_t a2)
{
}

void sub_1A80D7A1C(uint64_t a1)
{
  uint64_t v91 = a1;
  uint64_t v85 = 0;
  uint64_t v74 = sub_1A80E87C8;
  xpc_activity_state_t v75 = sub_1A80E88EC;
  uint64_t v76 = sub_1A80E8810;
  xpc_activity_t v77 = sub_1A80E88EC;
  uint64_t v78 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v83 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v110 = 0;
  uint64_t v109 = 0;
  uint64_t v84 = 0;
  uint64_t v86 = sub_1A8A754D8();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = v86 - 8;
  unint64_t v89 = (*(void *)(v87 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v90 = (char *)v33 - v89;
  uint64_t v96 = sub_1A8A75EC8();
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v95 = v96 - 8;
  unint64_t v92 = (*(void *)(v94 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = MEMORY[0x1F4188790](v91);
  unint64_t v97 = (void *)((char *)v33 - v92);
  uint64_t v110 = v2;
  uint64_t v109 = v1;
  uint64_t v3 = v1;
  id v93 = *(id *)&v1[OBJC_IVAR___MFBackFillMessageBodyScheduler_queue];
  id v4 = v93;
  uint64_t v5 = v94;
  *unint64_t v97 = v93;
  (*(void (**)(void))(v5 + 104))();
  int v98 = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v94 + 8))(v97, v96);
  if (v98)
  {

    int v70 = &v73[OBJC_IVAR___MFBackFillMessageBodyScheduler_activity];
    uint32_t v71 = &v108;
    swift_beginAccess();
    uint64_t v72 = *(void *)v70;
    swift_retain();
    swift_endAccess();
    uint64_t v107 = v72;
    BOOL v69 = v72 == 0;
    BOOL v68 = v69;
    sub_1A809F8B0();
    if (v68)
    {
      uint64_t v6 = v91;
      swift_retain();
      uint64_t v66 = &v73[OBJC_IVAR___MFBackFillMessageBodyScheduler_activity];
      uint64_t v67 = &v99;
      swift_beginAccess();
      *(void *)uint64_t v66 = v6;
      swift_release();
      swift_endAccess();
      sub_1A80D9B7C();
    }
    else
    {
      uint64_t v7 = v90;
      uint64_t v8 = sub_1A80D41F4();
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v7, v8, v86);
      swift_retain();
      uint64_t v9 = v73;
      uint64_t v52 = 7;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v73;
      uint64_t v64 = sub_1A8A754B8();
      int v65 = sub_1A8A77448();
      uint32_t v46 = &v105;
      uint64_t v105 = 10;
      unint64_t v44 = sub_1A809EBD0();
      unint64_t v45 = sub_1A809EC4C();
      sub_1A809ECC8();
      sub_1A8A76B48();
      uint32_t v47 = v106;
      uint64_t v49 = 17;
      uint64_t v55 = swift_allocObject();
      *(unsigned char *)(v55 + 16) = 0;
      uint64_t v56 = swift_allocObject();
      int v50 = 2;
      *(unsigned char *)(v56 + 16) = 2;
      uint64_t v51 = 32;
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = v91;
      uint64_t v48 = v10;
      *(void *)(v10 + 16) = v74;
      *(void *)(v10 + 24) = v11;
      uint64_t v12 = swift_allocObject();
      uint64_t v13 = v48;
      uint64_t v57 = v12;
      *(void *)(v12 + 16) = v75;
      *(void *)(v12 + 24) = v13;
      uint64_t v58 = swift_allocObject();
      *(unsigned char *)(v58 + 16) = 0;
      uint64_t v59 = swift_allocObject();
      *(unsigned char *)(v59 + 16) = v50;
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v53;
      uint64_t v54 = v14;
      *(void *)(v14 + 16) = v76;
      *(void *)(v14 + 24) = v15;
      uint64_t v16 = swift_allocObject();
      uint64_t v17 = v54;
      uint64_t v61 = v16;
      *(void *)(v16 + 16) = v77;
      *(void *)(v16 + 24) = v17;
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
      uint64_t v60 = sub_1A8A78558();
      uint64_t v62 = v18;
      swift_retain();
      uint64_t v19 = v55;
      uint64_t v20 = v62;
      uint64_t *v62 = v78;
      v20[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v19;
      swift_retain();
      uint64_t v21 = v56;
      uint64_t v22 = v62;
      v62[2] = v79;
      v22[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v21;
      swift_retain();
      uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v57;
      unsigned int v24 = v62;
      v62[4] = v80;
      v24[5] = v23;
      swift_retain();
      uint64_t v25 = v58;
      uint64_t v26 = v62;
      v62[6] = v81;
      v26[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v25;
      swift_retain();
      uint64_t v27 = v59;
      unint64_t v28 = v62;
      v62[8] = v82;
      v28[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
      swift_retain();
      uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v61;
      uint64_t v30 = v62;
      v62[10] = v83;
      v30[11] = v29;
      sub_1A809B5EC();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v64, (os_log_type_t)v65))
      {
        uint64_t v31 = v84;
        uint64_t v37 = (uint8_t *)sub_1A8A77888();
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
        uint64_t v36 = 0;
        uint64_t v38 = sub_1A809E94C(0);
        uint64_t v39 = sub_1A809E94C(v36);
        uint64_t v40 = &v104;
        int v104 = v37;
        uint64_t v41 = &v103;
        uint64_t v103 = v38;
        uint64_t v42 = &v102;
        uint64_t v102 = v39;
        sub_1A809E9A8(0, &v104);
        sub_1A809E9A8(2, v40);
        uint64_t v100 = v78;
        uint64_t v101 = v55;
        sub_1A809E9BC(&v100, (uint64_t)v40, (uint64_t)v41, (uint64_t)v42);
        uint64_t v43 = v31;
        if (v31)
        {
          __break(1u);
        }
        else
        {
          uint64_t v100 = v79;
          uint64_t v101 = v56;
          sub_1A809E9BC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          uint64_t v34 = 0;
          uint64_t v32 = v34;
          uint64_t v100 = v80;
          uint64_t v101 = v57;
          sub_1A809E9BC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          v33[4] = v32;
          uint64_t v100 = v81;
          uint64_t v101 = v58;
          sub_1A809E9BC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          void v33[3] = 0;
          uint64_t v100 = v82;
          uint64_t v101 = v59;
          sub_1A809E9BC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          v33[2] = 0;
          uint64_t v100 = v83;
          uint64_t v101 = v61;
          sub_1A809E9BC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
          _os_log_impl(&dword_1A7EFF000, v64, (os_log_type_t)v65, "Received new activity '%hx', but already have an existing one %hx.", v37, v47);
          v33[1] = 0;
          sub_1A809EA08(v38);
          sub_1A809EA08(v39);
          sub_1A8A77868();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v86);
      sub_1A80D88F8(3u);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A80D86F8(uint64_t a1)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v1 = swift_retain();
  v3(v1);
  return swift_release();
}

uint64_t sub_1A80D8748()
{
  return sub_1A8A77BF8();
}

uint64_t sub_1A80D87E0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1
                             + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_id);
}

uint64_t sub_1A80D87F0(uint64_t a1)
{
  id v4 = (uint64_t *)(a1 + OBJC_IVAR___MFBackFillMessageBodyScheduler_activity);
  swift_beginAccess();
  uint64_t v5 = *v4;
  swift_retain();
  swift_endAccess();
  if (v5)
  {
    uint64_t v3 = v5;
  }
  else
  {
    sub_1A8A780E8();
    __break(1u);
  }
  unsigned int v2 = *(unsigned __int16 *)(v3
                           + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_id);
  swift_release();
  return v2;
}

void sub_1A80D88F8(unsigned int a1)
{
  unsigned int v169 = a1;
  uint64_t v161 = 0;
  id v140 = sub_1A80E87C8;
  uint64_t v141 = sub_1A80E88EC;
  uint64_t v142 = sub_1A80E8B2C;
  uint64_t v143 = sub_1A80C40EC;
  uint64_t v144 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v145 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v146 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v147 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v148 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v150 = sub_1A80E87C8;
  uint64_t v151 = sub_1A80E88EC;
  uint64_t v152 = sub_1A80E8B2C;
  uint64_t v153 = sub_1A80C40EC;
  uint64_t v154 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v156 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  int v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v158 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  char v196 = 0;
  uint64_t v195 = 0;
  uint64_t v160 = 0;
  uint64_t v162 = sub_1A8A754D8();
  uint64_t v163 = *(void *)(v162 - 8);
  uint64_t v164 = v162 - 8;
  unint64_t v165 = (*(void *)(v163 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = MEMORY[0x1F4188790](0);
  int v166 = (char *)&v58 - v165;
  unint64_t v167 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v2);
  uint64_t v168 = (char *)&v58 - v167;
  uint64_t v174 = sub_1A8A75EC8();
  uint64_t v172 = *(void *)(v174 - 8);
  uint64_t v173 = v174 - 8;
  unint64_t v170 = (*(void *)(v172 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  char v4 = MEMORY[0x1F4188790](v169);
  id v175 = (id **)((char *)&v58 - v170);
  char v196 = v4;
  uint64_t v195 = v1;
  swift_retain();
  id v171 = *(id *)(v1
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  id v5 = v171;
  uint64_t v6 = v172;
  *id v175 = v171;
  (*(void (**)(void))(v6 + 104))();
  int v176 = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v172 + 8))(v175, v174);
  if (v176)
  {
    swift_release();
    uint64_t v137 = &v194;
    swift_beginAccess();
    int v138 = *(unsigned __int8 *)(v139 + 48);
    swift_endAccess();
    if ((v138 & 1) == 0)
    {
      uint64_t v135 = &v193;
      uint64_t v136 = 0;
      swift_beginAccess();
      *(unsigned char *)(v139 + 48) = 1;
      swift_endAccess();
      swift_beginAccess();
      if (*(void *)(v139 + 40))
      {
        uint64_t v134 = *(void *)(v139 + 40);
        swift_unknownObjectRetain();
        swift_endAccess();
        swift_getObjectType();
        sub_1A8A77598();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_endAccess();
      }
      uint64_t v131 = &v192;
      swift_beginAccess();
      *(void *)(v139 + 40) = 0;
      swift_unknownObjectRelease();
      swift_endAccess();
      uint64_t v132 = *(void *)(v139 + 24);
      swift_unknownObjectRetain();
      sub_1A80E05A4(v169);
      int v133 = xpc_activity_set_completion_status();
      swift_unknownObjectRelease();
      if (v133)
      {
        uint64_t v32 = v166;
        uint64_t v33 = sub_1A80D41F4();
        (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v32, v33, v162);
        swift_retain();
        uint64_t v74 = 16;
        uint64_t v80 = 17;
        uint64_t v82 = 7;
        uint64_t v83 = swift_allocObject();
        *(unsigned char *)(v83 + 16) = v169;
        uint64_t v94 = sub_1A8A754B8();
        int v95 = sub_1A8A77468();
        xpc_activity_t v77 = &v190;
        uint64_t v190 = v74;
        unint64_t v75 = sub_1A809EBD0();
        unint64_t v76 = sub_1A809EC4C();
        sub_1A809ECC8();
        sub_1A8A76B48();
        uint32_t v78 = v191;
        uint64_t v85 = swift_allocObject();
        *(unsigned char *)(v85 + 16) = 0;
        uint64_t v86 = swift_allocObject();
        *(unsigned char *)(v86 + 16) = 2;
        uint64_t v81 = 32;
        uint64_t v34 = swift_allocObject();
        uint64_t v35 = v139;
        uint64_t v79 = v34;
        *(void *)(v34 + 16) = v140;
        *(void *)(v34 + 24) = v35;
        uint64_t v36 = swift_allocObject();
        uint64_t v37 = v79;
        uint64_t v87 = v36;
        *(void *)(v36 + 16) = v141;
        *(void *)(v36 + 24) = v37;
        uint64_t v88 = swift_allocObject();
        *(unsigned char *)(v88 + 16) = 34;
        uint64_t v89 = swift_allocObject();
        *(unsigned char *)(v89 + 16) = 8;
        uint64_t v38 = swift_allocObject();
        uint64_t v39 = v83;
        uint64_t v84 = v38;
        *(void *)(v38 + 16) = v142;
        *(void *)(v38 + 24) = v39;
        uint64_t v40 = swift_allocObject();
        uint64_t v41 = v84;
        uint64_t v91 = v40;
        *(void *)(v40 + 16) = v143;
        *(void *)(v40 + 24) = v41;
        uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
        uint64_t v90 = sub_1A8A78558();
        unint64_t v92 = v42;
        swift_retain();
        uint64_t v43 = v85;
        unint64_t v44 = v92;
        *unint64_t v92 = v144;
        v44[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v43;
        swift_retain();
        uint64_t v45 = v86;
        uint32_t v46 = v92;
        v92[2] = v145;
        v46[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v45;
        swift_retain();
        uint32_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v87;
        uint64_t v48 = v92;
        v92[4] = v146;
        v48[5] = v47;
        swift_retain();
        uint64_t v49 = v88;
        int v50 = v92;
        v92[6] = v147;
        v50[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
        swift_retain();
        uint64_t v51 = v89;
        uint64_t v52 = v92;
        v92[8] = v148;
        v52[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v51;
        swift_retain();
        uint64_t v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v91;
        uint64_t v54 = v92;
        v92[10] = v149;
        v54[11] = v53;
        sub_1A809B5EC();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v94, (os_log_type_t)v95))
        {
          uint64_t v55 = v160;
          uint64_t v66 = (uint8_t *)sub_1A8A77888();
          uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
          uint64_t v67 = sub_1A809E94C(0);
          uint64_t v68 = sub_1A809E94C(1);
          int v70 = &v188;
          id v188 = v66;
          uint32_t v71 = &v187;
          uint64_t v187 = v67;
          uint64_t v72 = &v186;
          uint64_t v186 = v68;
          unsigned int v69 = 2;
          sub_1A809E9A8(2, &v188);
          sub_1A809E9A8(v69, v70);
          int v184 = v144;
          uint64_t v185 = v85;
          sub_1A809E9BC(&v184, (uint64_t)v70, (uint64_t)v71, (uint64_t)v72);
          uint64_t v73 = v55;
          if (v55)
          {
            __break(1u);
          }
          else
          {
            int v184 = v145;
            uint64_t v185 = v86;
            sub_1A809E9BC(&v184, (uint64_t)&v188, (uint64_t)&v187, (uint64_t)&v186);
            uint64_t v64 = 0;
            uint64_t v56 = v64;
            int v184 = v146;
            uint64_t v185 = v87;
            sub_1A809E9BC(&v184, (uint64_t)&v188, (uint64_t)&v187, (uint64_t)&v186);
            uint64_t v63 = v56;
            int v184 = v147;
            uint64_t v185 = v88;
            sub_1A809E9BC(&v184, (uint64_t)&v188, (uint64_t)&v187, (uint64_t)&v186);
            uint64_t v62 = 0;
            int v184 = v148;
            uint64_t v185 = v89;
            sub_1A809E9BC(&v184, (uint64_t)&v188, (uint64_t)&v187, (uint64_t)&v186);
            uint64_t v61 = 0;
            int v184 = v149;
            uint64_t v185 = v91;
            sub_1A809E9BC(&v184, (uint64_t)&v188, (uint64_t)&v187, (uint64_t)&v186);
            _os_log_impl(&dword_1A7EFF000, v94, (os_log_type_t)v95, "%hx: Completed with status: %{public}s", v66, v78);
            sub_1A809EA08(v67);
            sub_1A809EA08(v68);
            sub_1A8A77868();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v163 + 8))(v166, v162);
      }
      else
      {
        uint64_t v7 = v168;
        uint64_t v8 = sub_1A80D41F4();
        (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v7, v8, v162);
        swift_retain();
        uint64_t v109 = 16;
        uint64_t v115 = 17;
        uint64_t v117 = 7;
        uint64_t v118 = swift_allocObject();
        *(unsigned char *)(v118 + 16) = v169;
        uint64_t v129 = sub_1A8A754B8();
        int v130 = sub_1A8A77448();
        uint64_t v112 = &v182;
        uint64_t v182 = v109;
        unint64_t v110 = sub_1A809EBD0();
        unint64_t v111 = sub_1A809EC4C();
        sub_1A809ECC8();
        sub_1A8A76B48();
        uint32_t v113 = v183;
        uint64_t v120 = swift_allocObject();
        *(unsigned char *)(v120 + 16) = 0;
        uint64_t v121 = swift_allocObject();
        *(unsigned char *)(v121 + 16) = 2;
        uint64_t v116 = 32;
        uint64_t v9 = swift_allocObject();
        uint64_t v10 = v139;
        uint64_t v114 = v9;
        *(void *)(v9 + 16) = v150;
        *(void *)(v9 + 24) = v10;
        uint64_t v11 = swift_allocObject();
        uint64_t v12 = v114;
        uint64_t v122 = v11;
        *(void *)(v11 + 16) = v151;
        *(void *)(v11 + 24) = v12;
        uint64_t v123 = swift_allocObject();
        *(unsigned char *)(v123 + 16) = 34;
        uint64_t v124 = swift_allocObject();
        *(unsigned char *)(v124 + 16) = 8;
        uint64_t v13 = swift_allocObject();
        uint64_t v14 = v118;
        uint64_t v119 = v13;
        *(void *)(v13 + 16) = v152;
        *(void *)(v13 + 24) = v14;
        uint64_t v15 = swift_allocObject();
        uint64_t v16 = v119;
        uint64_t v126 = v15;
        *(void *)(v15 + 16) = v153;
        *(void *)(v15 + 24) = v16;
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
        uint64_t v125 = sub_1A8A78558();
        uint64_t v127 = v17;
        swift_retain();
        uint64_t v18 = v120;
        uint64_t v19 = v127;
        *uint64_t v127 = v154;
        v19[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v18;
        swift_retain();
        uint64_t v20 = v121;
        uint64_t v21 = v127;
        v127[2] = v155;
        v21[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v20;
        swift_retain();
        uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v122;
        uint64_t v23 = v127;
        v127[4] = v156;
        v23[5] = v22;
        swift_retain();
        uint64_t v24 = v123;
        uint64_t v25 = v127;
        v127[6] = v157;
        v25[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v24;
        swift_retain();
        uint64_t v26 = v124;
        uint64_t v27 = v127;
        v127[8] = v158;
        v27[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
        swift_retain();
        unint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v126;
        uint64_t v29 = v127;
        v127[10] = v159;
        v29[11] = v28;
        sub_1A809B5EC();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v129, (os_log_type_t)v130))
        {
          uint64_t v30 = v160;
          uint64_t v101 = (uint8_t *)sub_1A8A77888();
          uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
          uint64_t v102 = sub_1A809E94C(0);
          uint64_t v103 = sub_1A809E94C(1);
          uint64_t v105 = &v181;
          uint64_t v181 = v101;
          uint32_t v106 = &v180;
          uint64_t v180 = v102;
          uint64_t v107 = &v179;
          uint64_t v179 = v103;
          unsigned int v104 = 2;
          sub_1A809E9A8(2, &v181);
          sub_1A809E9A8(v104, v105);
          uint64_t v177 = v154;
          uint64_t v178 = v120;
          sub_1A809E9BC(&v177, (uint64_t)v105, (uint64_t)v106, (uint64_t)v107);
          uint64_t v108 = v30;
          if (v30)
          {
            __break(1u);
          }
          else
          {
            uint64_t v177 = v155;
            uint64_t v178 = v121;
            sub_1A809E9BC(&v177, (uint64_t)&v181, (uint64_t)&v180, (uint64_t)&v179);
            uint64_t v99 = 0;
            uint64_t v31 = v99;
            uint64_t v177 = v156;
            uint64_t v178 = v122;
            sub_1A809E9BC(&v177, (uint64_t)&v181, (uint64_t)&v180, (uint64_t)&v179);
            uint64_t v98 = v31;
            uint64_t v177 = v157;
            uint64_t v178 = v123;
            sub_1A809E9BC(&v177, (uint64_t)&v181, (uint64_t)&v180, (uint64_t)&v179);
            uint64_t v97 = 0;
            uint64_t v177 = v158;
            uint64_t v178 = v124;
            sub_1A809E9BC(&v177, (uint64_t)&v181, (uint64_t)&v180, (uint64_t)&v179);
            uint64_t v96 = 0;
            uint64_t v177 = v159;
            uint64_t v178 = v126;
            sub_1A809E9BC(&v177, (uint64_t)&v181, (uint64_t)&v180, (uint64_t)&v179);
            _os_log_impl(&dword_1A7EFF000, v129, (os_log_type_t)v130, "%hx: Failed to set completion status to %{public}s", v101, v113);
            sub_1A809EA08(v102);
            sub_1A809EA08(v103);
            sub_1A8A77868();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v163 + 8))(v168, v162);
      }
      uint64_t v60 = v139 + 16;
      swift_beginAccess();
      id v189 = (id)MEMORY[0x1AD0E4DE0](v60);
      if (v189)
      {
        uint64_t v58 = &v189;
        id v59 = v189;
        id v57 = v189;
        sub_1A80CA1D8(v58);
        swift_endAccess();
        sub_1A80DA19C(v139);
      }
      else
      {
        sub_1A80CA1D8(&v189);
        swift_endAccess();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1A80D9B7C()
{
  uint64_t v37 = sub_1A80E87C8;
  uint64_t v40 = sub_1A80E88EC;
  uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  unint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint32_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v60 = 0;
  uint64_t v25 = 0;
  uint64_t v30 = sub_1A8A754D8();
  uint64_t v28 = *(void *)(v30 - 8);
  uint64_t v29 = v30 - 8;
  unint64_t v26 = (*(void *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v30);
  uint64_t v0 = (char *)v16 - v26;
  uint64_t v27 = (char *)v16 - v26;
  uint64_t v60 = v1;
  uint64_t v2 = sub_1A80D41F4();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v0, v2, v30);
  swift_retain();
  uint64_t v51 = sub_1A8A754B8();
  int v52 = sub_1A8A77448();
  uint64_t v33 = &v58;
  uint64_t v58 = 6;
  unint64_t v31 = sub_1A809EBD0();
  unint64_t v32 = sub_1A809EC4C();
  sub_1A809ECC8();
  sub_1A8A76B48();
  uint64_t v3 = v34;
  uint32_t v35 = v59;
  uint64_t v36 = 17;
  uint64_t v39 = 7;
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + 16) = 0;
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = 2;
  uint64_t v38 = 32;
  uint64_t v4 = swift_allocObject();
  uint64_t v41 = v4;
  *(void *)(v4 + 16) = v37;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = v41;
  uint64_t v48 = v5;
  *(void *)(v5 + 16) = v40;
  *(void *)(v5 + 24) = v6;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
  uint64_t v46 = sub_1A8A78558();
  uint64_t v49 = v7;
  swift_retain();
  uint64_t v8 = v43;
  uint64_t v9 = v49;
  char *v49 = v42;
  v9[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8;
  swift_retain();
  uint64_t v10 = v45;
  uint64_t v11 = v49;
  v49[2] = v44;
  v11[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v10;
  swift_retain();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
  uint64_t v13 = v49;
  v49[4] = v47;
  v13[5] = v12;
  sub_1A809B5EC();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v51, (os_log_type_t)v52))
  {
    uint64_t v14 = v25;
    uint64_t v18 = (uint8_t *)sub_1A8A77888();
    v16[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
    uint64_t v17 = 0;
    uint64_t v19 = sub_1A809E94C(0);
    uint64_t v20 = sub_1A809E94C(v17);
    uint64_t v21 = &v57;
    id v57 = v18;
    uint64_t v22 = &v56;
    uint64_t v56 = v19;
    uint64_t v23 = &v55;
    uint64_t v55 = v20;
    sub_1A809E9A8(0, &v57);
    sub_1A809E9A8(1, v21);
    uint64_t v53 = v42;
    uint64_t v54 = v43;
    sub_1A809E9BC(&v53, (uint64_t)v21, (uint64_t)v22, (uint64_t)v23);
    uint64_t v24 = v14;
    if (v14)
    {
      __break(1u);
    }
    else
    {
      uint64_t v53 = v44;
      uint64_t v54 = v45;
      sub_1A809E9BC(&v53, (uint64_t)&v57, (uint64_t)&v56, (uint64_t)&v55);
      v16[1] = 0;
      uint64_t v53 = v47;
      uint64_t v54 = v48;
      sub_1A809E9BC(&v53, (uint64_t)&v57, (uint64_t)&v56, (uint64_t)&v55);
      _os_log_impl(&dword_1A7EFF000, v51, (os_log_type_t)v52, "%hx: Running.", v18, v35);
      v16[0] = 0;
      sub_1A809EA08(v19);
      sub_1A809EA08(v20);
      sub_1A8A77868();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v30);
  sub_1A80DECBC();
  return sub_1A80DFB78();
}

uint64_t sub_1A80DA19C(uint64_t a1)
{
  uint64_t v105 = a1;
  uint64_t v93 = sub_1A80E87C8;
  uint64_t v94 = sub_1A80E88EC;
  int v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v98 = sub_1A80E87C8;
  uint64_t v99 = sub_1A80E88EC;
  uint64_t v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v101 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v102 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v133 = 0;
  uint64_t v132 = 0;
  uint64_t v104 = 0;
  uint64_t v103 = 0;
  uint64_t v106 = sub_1A8A754D8();
  uint64_t v107 = *(void *)(v106 - 8);
  uint64_t v108 = v106 - 8;
  unint64_t v109 = (*(void *)(v107 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = MEMORY[0x1F4188790](v105);
  unint64_t v110 = (char *)v34 - v109;
  unint64_t v111 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v112 = (char *)v34 - v111;
  uint64_t v133 = v4;
  uint64_t v132 = v1;
  uint32_t v113 = (uint64_t *)(v1 + OBJC_IVAR___MFBackFillMessageBodyScheduler_activity);
  uint64_t v114 = &v131;
  swift_beginAccess();
  uint64_t v115 = *v113;
  swift_retain();
  swift_endAccess();
  if (v115)
  {
    uint64_t v91 = v115;
    uint64_t v90 = v115;
  }
  else
  {
    uint64_t v90 = 0;
  }
  uint64_t v88 = v90;
  swift_retain();
  int v89 = sub_1A8A78658();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v89)
  {
    uint64_t v5 = v112;
    int v70 = (void *)(v92 + OBJC_IVAR___MFBackFillMessageBodyScheduler_activity);
    uint32_t v71 = &v123;
    swift_beginAccess();
    void *v70 = 0;
    swift_release();
    swift_endAccess();
    uint64_t v6 = sub_1A80D41F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v5, v6, v106);
    swift_retain();
    uint64_t v86 = sub_1A8A754B8();
    int v87 = sub_1A8A77468();
    uint64_t v74 = &v121;
    uint64_t v121 = 6;
    unint64_t v72 = sub_1A809EBD0();
    unint64_t v73 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v75 = v122;
    uint64_t v76 = 17;
    uint64_t v78 = 7;
    uint64_t v80 = swift_allocObject();
    *(unsigned char *)(v80 + 16) = 0;
    uint64_t v81 = swift_allocObject();
    *(unsigned char *)(v81 + 16) = 2;
    uint64_t v77 = 32;
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = v105;
    uint64_t v79 = v7;
    *(void *)(v7 + 16) = v98;
    *(void *)(v7 + 24) = v8;
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = v79;
    uint64_t v83 = v9;
    *(void *)(v9 + 16) = v99;
    *(void *)(v9 + 24) = v10;
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v82 = sub_1A8A78558();
    uint64_t v84 = v11;
    swift_retain();
    uint64_t v12 = v80;
    uint64_t v13 = v84;
    *uint64_t v84 = v100;
    v13[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v12;
    swift_retain();
    uint64_t v14 = v81;
    uint64_t v15 = v84;
    v84[2] = v101;
    v15[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v14;
    swift_retain();
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v83;
    uint64_t v17 = v84;
    v84[4] = v102;
    void v17[5] = v16;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v86, (os_log_type_t)v87))
    {
      uint64_t v18 = v103;
      uint64_t v63 = (uint8_t *)sub_1A8A77888();
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v62 = 0;
      uint64_t v64 = sub_1A809E94C(0);
      uint64_t v65 = sub_1A809E94C(v62);
      uint64_t v66 = &v120;
      uint64_t v120 = v63;
      uint64_t v67 = &v119;
      uint64_t v119 = v64;
      uint64_t v68 = &v118;
      uint64_t v118 = v65;
      sub_1A809E9A8(0, &v120);
      sub_1A809E9A8(1, v66);
      uint64_t v116 = v100;
      uint64_t v117 = v80;
      sub_1A809E9BC(&v116, (uint64_t)v66, (uint64_t)v67, (uint64_t)v68);
      uint64_t v69 = v18;
      if (v18)
      {
        __break(1u);
      }
      else
      {
        uint64_t v116 = v101;
        uint64_t v117 = v81;
        sub_1A809E9BC(&v116, (uint64_t)&v120, (uint64_t)&v119, (uint64_t)&v118);
        uint64_t v60 = 0;
        uint64_t v116 = v102;
        uint64_t v117 = v83;
        sub_1A809E9BC(&v116, (uint64_t)&v120, (uint64_t)&v119, (uint64_t)&v118);
        _os_log_impl(&dword_1A7EFF000, v86, (os_log_type_t)v87, "Activity '%hx' did complete.", v63, v75);
        uint64_t v59 = 0;
        sub_1A809EA08(v64);
        sub_1A809EA08(v65);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v112, v106);
  }
  else
  {
    uint64_t v20 = v110;
    uint64_t v21 = sub_1A80D41F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v20, v21, v106);
    swift_retain();
    id v57 = sub_1A8A754B8();
    int v58 = sub_1A8A77448();
    uint64_t v45 = &v129;
    uint64_t v129 = 6;
    unint64_t v43 = sub_1A809EBD0();
    unint64_t v44 = sub_1A809EC4C();
    sub_1A809ECC8();
    sub_1A8A76B48();
    uint32_t v46 = v130;
    uint64_t v47 = 17;
    uint64_t v49 = 7;
    uint64_t v51 = swift_allocObject();
    *(unsigned char *)(v51 + 16) = 0;
    uint64_t v52 = swift_allocObject();
    *(unsigned char *)(v52 + 16) = 2;
    uint64_t v48 = 32;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v105;
    uint64_t v50 = v22;
    *(void *)(v22 + 16) = v93;
    *(void *)(v22 + 24) = v23;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v50;
    uint64_t v54 = v24;
    *(void *)(v24 + 16) = v94;
    *(void *)(v24 + 24) = v25;
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
    uint64_t v53 = sub_1A8A78558();
    uint64_t v55 = v26;
    swift_retain();
    uint64_t v27 = v51;
    uint64_t v28 = v55;
    id *v55 = v95;
    v28[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
    swift_retain();
    uint64_t v29 = v52;
    uint64_t v30 = v55;
    v55[2] = v96;
    v30[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
    swift_retain();
    unint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54;
    unint64_t v32 = v55;
    v55[4] = v97;
    v32[5] = v31;
    sub_1A809B5EC();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v57, (os_log_type_t)v58))
    {
      uint64_t v33 = v103;
      uint64_t v36 = (uint8_t *)sub_1A8A77888();
      v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
      uint64_t v35 = 0;
      uint64_t v37 = sub_1A809E94C(0);
      uint64_t v38 = sub_1A809E94C(v35);
      uint64_t v39 = &v128;
      uint64_t v128 = v36;
      uint64_t v40 = &v127;
      uint64_t v127 = v37;
      uint64_t v41 = &v126;
      uint64_t v126 = v38;
      sub_1A809E9A8(0, &v128);
      sub_1A809E9A8(1, v39);
      uint64_t v124 = v95;
      uint64_t v125 = v51;
      sub_1A809E9BC(&v124, (uint64_t)v39, (uint64_t)v40, (uint64_t)v41);
      uint64_t v42 = v33;
      if (v33)
      {
        __break(1u);
      }
      else
      {
        uint64_t v124 = v96;
        uint64_t v125 = v52;
        sub_1A809E9BC(&v124, (uint64_t)&v128, (uint64_t)&v127, (uint64_t)&v126);
        v34[2] = 0;
        uint64_t v124 = v97;
        uint64_t v125 = v54;
        sub_1A809E9BC(&v124, (uint64_t)&v128, (uint64_t)&v127, (uint64_t)&v126);
        _os_log_impl(&dword_1A7EFF000, v57, (os_log_type_t)v58, "Activity '%hx' did complete, but we no longer have a reference to it.", v36, v46);
        v34[1] = 0;
        sub_1A809EA08(v37);
        sub_1A809EA08(v38);
        sub_1A8A77868();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v110, v106);
  }
}

uint64_t sub_1A80DB090()
{
  sub_1A8A78558();
  *(void *)uint64_t v0 = "complete";
  *(void *)(v0 + 8) = 8;
  *(unsigned char *)(v0 + 16) = 2;
  *(void *)(v0 + 24) = "pendingWork";
  *(void *)(v0 + 32) = 11;
  *(unsigned char *)(v0 + 40) = 2;
  *(void *)(v0 + 48) = "noWork";
  *(void *)(v0 + 56) = 6;
  *(unsigned char *)(v0 + 64) = 2;
  *(void *)(v0 + 72) = "error";
  *(void *)(v0 + 80) = 5;
  *(unsigned char *)(v0 + 88) = 2;
  *(void *)(v0 + 96) = "deallocated";
  *(void *)(v0 + 104) = 11;
  *(unsigned char *)(v0 + 112) = 2;
  sub_1A809B5EC();
  uint64_t v3 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  switch(v3)
  {
    case 0:
      unsigned __int8 v4 = 0;
LABEL_12:
      swift_bridgeObjectRelease();
      return v4;
    case 1:
      unsigned __int8 v4 = 1;
      goto LABEL_12;
    case 2:
      unsigned __int8 v4 = 2;
      goto LABEL_12;
    case 3:
      unsigned __int8 v4 = 3;
      goto LABEL_12;
    case 4:
      unsigned __int8 v4 = 4;
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  return 5;
}

uint64_t sub_1A80DB294()
{
  return sub_1A8A76728();
}

uint64_t sub_1A80DB3D0()
{
  return sub_1A8A785F8() & 1;
}

uint64_t sub_1A80DB41C()
{
  return sub_1A8A76BE8();
}

uint64_t sub_1A80DB45C()
{
  return sub_1A8A76C08();
}

uint64_t sub_1A80DB4A4()
{
  return sub_1A8A76BF8();
}

uint64_t sub_1A80DB4EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A80DB090();
  *a1 = result;
  return result;
}

uint64_t sub_1A80DB524@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A80DB294();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_1A80DB558(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a1;
  uint64_t v7 = a2;
  uint64_t v10 = a2;
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = a2 - 8;
  unint64_t v3 = (*(void *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (uint64_t)&v3 - v3;
  (*(void (**)(void))(v5 + 16))();
  uint64_t v9 = sub_1A833804C(v4, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v7);
  return v9;
}

void sub_1A80DB64C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request__deferred);
  swift_retain();
  sub_1A80DB720((void (*)(uint64_t))sub_1A80DB6FC, 0, v1, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB390]);
  swift_release();
}

unsigned char *sub_1A80DB6FC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A80DB720(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1A80DB788(char a1)
{
  char v6 = a1 & 1;
  uint64_t v5 = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request__deferred);
  swift_retain();
  v4[16] = a1 & 1;
  sub_1A80DB720((void (*)(uint64_t))sub_1A80E91C8, (uint64_t)v4, v3, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBC848] + 8);
  swift_release();
}

unsigned char *sub_1A80DB860(unsigned char *result, char a2)
{
  void *result = a2 & 1;
  return result;
}

id sub_1A80DB894(uint64_t a1, __int16 a2)
{
  id v3 = objc_allocWithZone(v2);
  return sub_1A80DB8D8(a1, a2);
}

id sub_1A80DB8D8(uint64_t a1, __int16 a2)
{
  ObjectCFStringRef Type = (objc_class *)swift_getObjectType();
  uint64_t v19 = a1;
  __int16 v18 = a2;
  id v3 = v2;
  uint64_t v4 = v2;
  uint64_t v5 = v2;
  char v6 = v2;
  uint64_t v7 = v2;
  id v20 = v2;
  swift_weakInit();

  uint64_t v10 = OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request__deferred;
  char v17 = 0;
  *(void *)&v2[v10] = sub_1A80DB558((uint64_t)&v17, MEMORY[0x1E4FBB390]);

  swift_retain();
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  swift_endAccess();

  *(_WORD *)&v12[OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_activityID] = *(_WORD *)(a1 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_id);
  *(_WORD *)&v12[OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_id] = a2;

  v16.receiver = v20;
  v16.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v16, sel_init);
  id v8 = v15;
  id v20 = v15;
  swift_release();

  return v15;
}

uint64_t sub_1A80DBAEC()
{
  return *(unsigned __int16 *)(v0 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_id);
}

BOOL sub_1A80DBB68()
{
  sub_1A80DB64C();
  char v6 = v0;
  id v1 = v5;
  if (v6)
  {
    BOOL v4 = 1;
  }
  else
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    swift_endAccess();
    sub_1A809F8B0();
    BOOL v4 = Strong == 0;
  }

  return v4;
}

void sub_1A80DBC68()
{
}

id sub_1A80DBC9C()
{
  uint64_t v10 = 0;
  id v8 = sub_1A80E91F4;
  ObjectCFStringRef Type = (objc_class *)swift_getObjectType();
  uint64_t v34 = 0;
  uint64_t v31 = 0;
  uint64_t v11 = sub_1A8A75C98();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v11 - 8;
  unint64_t v14 = (*(void *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  id v15 = (char *)&v3 - v14;
  uint64_t v16 = sub_1A8A75CE8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = v16 - 8;
  unint64_t v19 = (*(void *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v3 - v19;
  uint64_t v34 = v0;
  uint64_t v21 = v0 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_activity;
  uint64_t v22 = &v33;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_endAccess();
  if (Strong)
  {
    uint64_t v6 = Strong;
    uint64_t v5 = Strong;
    uint64_t v31 = Strong;
    id v4 = *(id *)(Strong
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
    id v1 = v4;
    swift_retain();
    uint64_t v29 = v8;
    uint64_t v30 = v5;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    int v25 = 1107296256;
    int v26 = 0;
    uint64_t v27 = sub_1A80D86F8;
    uint64_t v28 = &block_descriptor_180;
    id v3 = _Block_copy(&aBlock);
    sub_1A80D4034();
    sub_1A80D8748();
    MEMORY[0x1AD0E05D0](0, v20, v15, v3);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    _Block_release(v3);
    swift_release();

    swift_release();
  }
  v32.receiver = v7;
  v32.super_class = ObjectType;
  return objc_msgSendSuper2(&v32, sel_dealloc);
}

void sub_1A80DBFAC()
{
}

void sub_1A80DBFEC(void *a1, int a2)
{
  id v308 = a1;
  int v307 = a2;
  uint64_t v297 = 0;
  unint64_t v255 = sub_1A80E9738;
  uint64_t v256 = sub_1A80E87C8;
  unint64_t v257 = sub_1A80E88EC;
  uint64_t v258 = sub_1A80E8B2C;
  uint64_t v259 = sub_1A80C40EC;
  uint64_t v260 = sub_1A80E94A8;
  uint64_t v261 = sub_1A80E88EC;
  uint64_t v262 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v263 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v264 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  int v265 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v266 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v267 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  unsigned int v268 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v269 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v270 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  CFStringRef v271 = sub_1A80E87C8;
  uint64_t v272 = sub_1A80E88EC;
  uint64_t v273 = sub_1A80E8B2C;
  unsigned int v274 = sub_1A80C40EC;
  uint64_t v275 = sub_1A80E94A8;
  uint64_t v276 = sub_1A80E88EC;
  uint64_t v277 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v278 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v279 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v280 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v281 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v282 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v283 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v284 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v285 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v286 = sub_1A80E87C8;
  uint64_t v287 = sub_1A80E88EC;
  uint64_t v288 = sub_1A80E8B2C;
  uint64_t v289 = sub_1A80C40EC;
  uint64_t v290 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v291 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v292 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v293 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v294 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v295 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80C41BC;
  uint64_t v348 = 0;
  char v347 = 0;
  uint64_t v346 = 0;
  uint64_t v296 = 0;
  id v338 = 0;
  id v330 = 0;
  uint64_t v325 = 0;
  uint64_t v298 = sub_1A8A754D8();
  uint64_t v299 = *(void *)(v298 - 8);
  uint64_t v300 = v298 - 8;
  unint64_t v301 = (*(void *)(v299 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = MEMORY[0x1F4188790](0);
  uint64_t v302 = (char *)v119 - v301;
  unint64_t v303 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v304 = (char *)v119 - v303;
  unint64_t v305 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v5);
  uint64_t v306 = (char *)v119 - v305;
  uint64_t v313 = sub_1A8A75EC8();
  uint64_t v311 = *(void *)(v313 - 8);
  uint64_t v312 = v313 - 8;
  unint64_t v309 = (*(void *)(v311 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = MEMORY[0x1F4188790](v308);
  uint64_t v314 = (void *)((char *)v119 - v309);
  uint64_t v348 = v7;
  char v347 = v8;
  uint64_t v346 = v2;
  swift_retain();
  id v310 = *(id *)(v2
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  id v9 = v310;
  uint64_t v10 = v311;
  *uint64_t v314 = v310;
  (*(void (**)(void))(v10 + 104))();
  int v315 = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v311 + 8))(v314, v313);
  if (v315)
  {
    swift_release();
    id v11 = v308;
    if (!v308)
    {
      uint64_t v252 = v296;
      goto LABEL_21;
    }
    id v253 = v308;
    uint64_t v12 = v296;
    id v247 = v308;
    id v330 = v308;
    uint64_t v246 = 32;
    uint64_t v244 = &v327;
    swift_beginAccess();
    uint64_t v245 = *(void *)(v254 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_endAccess();
    uint64_t v326 = v245;
    id v13 = v247;
    uint64_t v248 = v119;
    MEMORY[0x1F4188790](v119);
    uint64_t v249 = &v119[-4];
    v119[-2] = v14;
    uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744858);
    sub_1A80E9764();
    sub_1A8A77218();
    uint64_t v251 = v12;
    if (!v12)
    {

      sub_1A809F94C();
      uint64_t v243 = v328;
      if ((v329 & 1) == 0)
      {
        uint64_t v242 = v243;
        id v15 = v306;
        uint64_t v214 = v243;
        uint64_t v325 = v243;
        uint64_t v16 = sub_1A80D41F4();
        (*(void (**)(char *, uint64_t, uint64_t))(v299 + 16))(v15, v16, v298);
        swift_retain();
        uint64_t v222 = 17;
        uint64_t v225 = 7;
        uint64_t v17 = swift_allocObject();
        id v18 = v247;
        uint64_t v220 = v17;
        *(unsigned char *)(v17 + 16) = v307;
        id v19 = v18;
        uint64_t v226 = swift_allocObject();
        *(void *)(v226 + 16) = v247;
        uint64_t v240 = sub_1A8A754B8();
        int v241 = sub_1A8A77468();
        unint64_t v217 = &v323;
        uint64_t v323 = 20;
        unint64_t v215 = sub_1A809EBD0();
        unint64_t v216 = sub_1A809EC4C();
        sub_1A809ECC8();
        sub_1A8A76B48();
        uint32_t v218 = v324;
        uint64_t v228 = swift_allocObject();
        *(unsigned char *)(v228 + 16) = 0;
        uint64_t v229 = swift_allocObject();
        int v223 = 2;
        *(unsigned char *)(v229 + 16) = 2;
        uint64_t v224 = 32;
        uint64_t v20 = swift_allocObject();
        uint64_t v21 = v254;
        uint64_t v219 = v20;
        *(void *)(v20 + 16) = v256;
        *(void *)(v20 + 2sub_1A80DBFEC(0, 4) = v21;
        uint64_t v22 = swift_allocObject();
        uint64_t v23 = v219;
        uint64_t v230 = v22;
        *(void *)(v22 + 16) = v257;
        *(void *)(v22 + 2sub_1A80DBFEC(0, 4) = v23;
        uint64_t v231 = swift_allocObject();
        *(unsigned char *)(v231 + 16) = 34;
        uint64_t v232 = swift_allocObject();
        *(unsigned char *)(v232 + 16) = 8;
        uint64_t v24 = swift_allocObject();
        uint64_t v25 = v220;
        uint64_t v221 = v24;
        *(void *)(v24 + 16) = v258;
        *(void *)(v24 + 2sub_1A80DBFEC(0, 4) = v25;
        uint64_t v26 = swift_allocObject();
        uint64_t v27 = v221;
        uint64_t v233 = v26;
        *(void *)(v26 + 16) = v259;
        *(void *)(v26 + 2sub_1A80DBFEC(0, 4) = v27;
        uint64_t v234 = swift_allocObject();
        *(unsigned char *)(v234 + 16) = 0;
        uint64_t v235 = swift_allocObject();
        *(unsigned char *)(v235 + 16) = v223;
        uint64_t v28 = swift_allocObject();
        uint64_t v29 = v226;
        uint64_t v227 = v28;
        *(void *)(v28 + 16) = v260;
        *(void *)(v28 + 2sub_1A80DBFEC(0, 4) = v29;
        uint64_t v30 = swift_allocObject();
        uint64_t v31 = v227;
        uint64_t v237 = v30;
        *(void *)(v30 + 16) = v261;
        *(void *)(v30 + 2sub_1A80DBFEC(0, 4) = v31;
        uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
        uint64_t v236 = sub_1A8A78558();
        id v238 = v32;
        swift_retain();
        uint64_t v33 = v228;
        uint64_t v34 = v238;
        void *v238 = v262;
        v34[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v33;
        swift_retain();
        uint64_t v35 = v229;
        uint64_t v36 = v238;
        v238[2] = v263;
        void v36[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35;
        swift_retain();
        uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v230;
        uint64_t v38 = v238;
        v238[4] = v264;
        v38[5] = v37;
        swift_retain();
        uint64_t v39 = v231;
        uint64_t v40 = v238;
        v238[6] = v265;
        v40[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v39;
        swift_retain();
        uint64_t v41 = v232;
        uint64_t v42 = v238;
        v238[8] = v266;
        v42[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v41;
        swift_retain();
        unint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v233;
        unint64_t v44 = v238;
        v238[10] = v267;
        v44[11] = v43;
        swift_retain();
        uint64_t v45 = v234;
        uint32_t v46 = v238;
        v238[12] = v268;
        v46[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v45;
        swift_retain();
        uint64_t v47 = v235;
        uint64_t v48 = v238;
        v238[14] = v269;
        v48[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v47;
        swift_retain();
        uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v237;
        uint64_t v50 = v238;
        v238[16] = v270;
        v50[17] = v49;
        sub_1A809B5EC();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v240, (os_log_type_t)v241))
        {
          uint64_t v51 = v251;
          CFStringRef v207 = (uint8_t *)sub_1A8A77888();
          uint64_t v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
          uint64_t v208 = sub_1A809E94C(0);
          uint64_t v209 = sub_1A809E94C(1);
          uint64_t v210 = &v320;
          uint64_t v320 = v207;
          uint64_t v211 = &v319;
          uint64_t v319 = v208;
          id v212 = &v318;
          uint64_t v318 = v209;
          sub_1A809E9A8(2, &v320);
          sub_1A809E9A8(3, v210);
          uint64_t v316 = v262;
          uint64_t v317 = v228;
          sub_1A809E9BC(&v316, (uint64_t)v210, (uint64_t)v211, (uint64_t)v212);
          uint64_t v213 = v51;
          if (v51)
          {
            __break(1u);
          }
          else
          {
            uint64_t v316 = v263;
            uint64_t v317 = v229;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            uint64_t v205 = 0;
            uint64_t v52 = v205;
            uint64_t v316 = v264;
            uint64_t v317 = v230;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            uint64_t v204 = v52;
            uint64_t v316 = v265;
            uint64_t v317 = v231;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            uint64_t v203 = 0;
            uint64_t v316 = v266;
            uint64_t v317 = v232;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            uint64_t v202 = 0;
            uint64_t v316 = v267;
            uint64_t v317 = v233;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            uint64_t v201 = 0;
            uint64_t v316 = v268;
            uint64_t v317 = v234;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            uint64_t v200 = 0;
            uint64_t v316 = v269;
            uint64_t v317 = v235;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            uint64_t v199 = 0;
            uint64_t v316 = v270;
            uint64_t v317 = v237;
            sub_1A809E9BC(&v316, (uint64_t)&v320, (uint64_t)&v319, (uint64_t)&v318);
            _os_log_impl(&dword_1A7EFF000, v240, (os_log_type_t)v241, "%hx: Received '%{public}s' from request #%hu.", v207, v218);
            sub_1A809EA08(v208);
            sub_1A809EA08(v209);
            sub_1A8A77868();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v299 + 8))(v306, v298);
        uint64_t v198 = &v322;
        swift_beginAccess();
        uint64_t v197 = &v321;
        uint64_t v53 = (void (*)(void))sub_1A8A76EA8();
        *(unsigned char *)(v54 + 8) = v307;
        v53();
        swift_endAccess();

LABEL_44:
        sub_1A80E1810();
        return;
      }

      uint64_t v252 = v251;
LABEL_21:
      uint64_t v196 = v252;
      id v55 = v308;
      if (v308)
      {
        id v195 = v308;
        uint64_t v56 = v304;
        id v167 = v308;
        id v338 = v308;
        uint64_t v57 = sub_1A80D41F4();
        (*(void (**)(char *, uint64_t, uint64_t))(v299 + 16))(v56, v57, v298);
        swift_retain();
        uint64_t v175 = 17;
        uint64_t v178 = 7;
        uint64_t v58 = swift_allocObject();
        id v59 = v167;
        uint64_t v173 = v58;
        *(unsigned char *)(v58 + 16) = v307;
        id v60 = v59;
        uint64_t v179 = swift_allocObject();
        *(void *)(v179 + 16) = v167;
        char v193 = sub_1A8A754B8();
        int v194 = sub_1A8A77468();
        unint64_t v170 = &v336;
        uint64_t v336 = 20;
        unint64_t v168 = sub_1A809EBD0();
        unint64_t v169 = sub_1A809EC4C();
        sub_1A809ECC8();
        sub_1A8A76B48();
        uint32_t v171 = v337;
        uint64_t v181 = swift_allocObject();
        *(unsigned char *)(v181 + 16) = 0;
        uint64_t v182 = swift_allocObject();
        int v176 = 2;
        *(unsigned char *)(v182 + 16) = 2;
        uint64_t v177 = 32;
        uint64_t v61 = swift_allocObject();
        uint64_t v62 = v254;
        uint64_t v172 = v61;
        *(void *)(v61 + 16) = v271;
        *(void *)(v61 + 2sub_1A80DBFEC(0, 4) = v62;
        uint64_t v63 = swift_allocObject();
        uint64_t v64 = v172;
        uint64_t v183 = v63;
        *(void *)(v63 + 16) = v272;
        *(void *)(v63 + 2sub_1A80DBFEC(0, 4) = v64;
        uint64_t v184 = swift_allocObject();
        *(unsigned char *)(v184 + 16) = 34;
        uint64_t v185 = swift_allocObject();
        *(unsigned char *)(v185 + 16) = 8;
        uint64_t v65 = swift_allocObject();
        uint64_t v66 = v173;
        uint64_t v174 = v65;
        *(void *)(v65 + 16) = v273;
        *(void *)(v65 + 2sub_1A80DBFEC(0, 4) = v66;
        uint64_t v67 = swift_allocObject();
        uint64_t v68 = v174;
        uint64_t v186 = v67;
        *(void *)(v67 + 16) = v274;
        *(void *)(v67 + 2sub_1A80DBFEC(0, 4) = v68;
        uint64_t v187 = swift_allocObject();
        *(unsigned char *)(v187 + 16) = 0;
        uint64_t v188 = swift_allocObject();
        *(unsigned char *)(v188 + 16) = v176;
        uint64_t v69 = swift_allocObject();
        uint64_t v70 = v179;
        uint64_t v180 = v69;
        *(void *)(v69 + 16) = v275;
        *(void *)(v69 + 2sub_1A80DBFEC(0, 4) = v70;
        uint64_t v71 = swift_allocObject();
        uint64_t v72 = v180;
        uint64_t v190 = v71;
        *(void *)(v71 + 16) = v276;
        *(void *)(v71 + 2sub_1A80DBFEC(0, 4) = v72;
        uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
        uint64_t v189 = sub_1A8A78558();
        uint32_t v191 = v73;
        swift_retain();
        uint64_t v74 = v181;
        uint32_t v75 = v191;
        *uint32_t v191 = v277;
        v75[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74;
        swift_retain();
        uint64_t v76 = v182;
        uint64_t v77 = v191;
        v191[2] = v278;
        v77[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v76;
        swift_retain();
        uint64_t v78 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v183;
        uint64_t v79 = v191;
        v191[4] = v279;
        v79[5] = v78;
        swift_retain();
        uint64_t v80 = v184;
        uint64_t v81 = v191;
        v191[6] = v280;
        v81[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v80;
        swift_retain();
        uint64_t v82 = v185;
        uint64_t v83 = v191;
        v191[8] = v281;
        v83[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v82;
        swift_retain();
        uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v186;
        uint64_t v85 = v191;
        v191[10] = v282;
        v85[11] = v84;
        swift_retain();
        uint64_t v86 = v187;
        int v87 = v191;
        v191[12] = v283;
        v87[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v86;
        swift_retain();
        uint64_t v88 = v188;
        int v89 = v191;
        v191[14] = v284;
        v89[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v88;
        swift_retain();
        uint64_t v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v190;
        uint64_t v91 = v191;
        v191[16] = v285;
        v91[17] = v90;
        sub_1A809B5EC();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v193, (os_log_type_t)v194))
        {
          uint64_t v92 = v196;
          uint64_t v160 = (uint8_t *)sub_1A8A77888();
          uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
          uint64_t v161 = sub_1A809E94C(0);
          uint64_t v162 = sub_1A809E94C(1);
          uint64_t v163 = &v335;
          unint64_t v335 = v160;
          uint64_t v164 = &v334;
          uint64_t v334 = v161;
          unint64_t v165 = &v333;
          uint64_t v333 = v162;
          sub_1A809E9A8(2, &v335);
          sub_1A809E9A8(3, v163);
          uint64_t v331 = v277;
          uint64_t v332 = v181;
          sub_1A809E9BC(&v331, (uint64_t)v163, (uint64_t)v164, (uint64_t)v165);
          uint64_t v166 = v92;
          if (v92)
          {
            __break(1u);
          }
          else
          {
            uint64_t v331 = v278;
            uint64_t v332 = v182;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            uint64_t v158 = 0;
            uint64_t v93 = v158;
            uint64_t v331 = v279;
            uint64_t v332 = v183;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            uint64_t v157 = v93;
            uint64_t v331 = v280;
            uint64_t v332 = v184;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            uint64_t v156 = 0;
            uint64_t v331 = v281;
            uint64_t v332 = v185;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            uint64_t v155 = 0;
            uint64_t v331 = v282;
            uint64_t v332 = v186;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            uint64_t v154 = 0;
            uint64_t v331 = v283;
            uint64_t v332 = v187;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            uint64_t v153 = 0;
            uint64_t v331 = v284;
            uint64_t v332 = v188;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            uint64_t v152 = 0;
            uint64_t v331 = v285;
            uint64_t v332 = v190;
            sub_1A809E9BC(&v331, (uint64_t)&v335, (uint64_t)&v334, (uint64_t)&v333);
            _os_log_impl(&dword_1A7EFF000, v193, (os_log_type_t)v194, "%hx: Received '%{public}s' from unknown request #%hu.", v160, v171);
            sub_1A809EA08(v161);
            sub_1A809EA08(v162);
            sub_1A8A77868();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v299 + 8))(v304, v298);
      }
      else
      {
        uint64_t v94 = v302;
        uint64_t v95 = sub_1A80D41F4();
        (*(void (**)(char *, uint64_t, uint64_t))(v299 + 16))(v94, v95, v298);
        swift_retain();
        uint64_t v130 = 16;
        uint64_t v136 = 17;
        uint64_t v138 = 7;
        uint64_t v139 = swift_allocObject();
        *(unsigned char *)(v139 + 16) = v307;
        uint64_t v150 = sub_1A8A754B8();
        int v151 = sub_1A8A77448();
        uint64_t v133 = &v344;
        uint64_t v344 = v130;
        unint64_t v131 = sub_1A809EBD0();
        unint64_t v132 = sub_1A809EC4C();
        sub_1A809ECC8();
        sub_1A8A76B48();
        uint32_t v134 = v345;
        uint64_t v141 = swift_allocObject();
        *(unsigned char *)(v141 + 16) = 0;
        uint64_t v142 = swift_allocObject();
        *(unsigned char *)(v142 + 16) = 2;
        uint64_t v137 = 32;
        uint64_t v96 = swift_allocObject();
        uint64_t v97 = v254;
        uint64_t v135 = v96;
        *(void *)(v96 + 16) = v286;
        *(void *)(v96 + 2sub_1A80DBFEC(0, 4) = v97;
        uint64_t v98 = swift_allocObject();
        uint64_t v99 = v135;
        uint64_t v143 = v98;
        *(void *)(v98 + 16) = v287;
        *(void *)(v98 + 2sub_1A80DBFEC(0, 4) = v99;
        uint64_t v144 = swift_allocObject();
        *(unsigned char *)(v144 + 16) = 34;
        uint64_t v145 = swift_allocObject();
        *(unsigned char *)(v145 + 16) = 8;
        uint64_t v100 = swift_allocObject();
        uint64_t v101 = v139;
        uint64_t v140 = v100;
        *(void *)(v100 + 16) = v288;
        *(void *)(v100 + 2sub_1A80DBFEC(0, 4) = v101;
        uint64_t v102 = swift_allocObject();
        uint64_t v103 = v140;
        uint64_t v147 = v102;
        *(void *)(v102 + 16) = v289;
        *(void *)(v102 + 2sub_1A80DBFEC(0, 4) = v103;
        uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
        uint64_t v146 = sub_1A8A78558();
        uint64_t v148 = v104;
        swift_retain();
        uint64_t v105 = v141;
        uint64_t v106 = v148;
        *uint64_t v148 = v290;
        v106[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v105;
        swift_retain();
        uint64_t v107 = v142;
        uint64_t v108 = v148;
        v148[2] = v291;
        v108[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v107;
        swift_retain();
        unint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v143;
        unint64_t v110 = v148;
        v148[4] = v292;
        v110[5] = v109;
        swift_retain();
        uint64_t v111 = v144;
        uint64_t v112 = v148;
        v148[6] = v293;
        v112[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v111;
        swift_retain();
        uint64_t v113 = v145;
        uint64_t v114 = v148;
        v148[8] = v294;
        v114[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v113;
        swift_retain();
        uint64_t v115 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v147;
        uint64_t v116 = v148;
        v148[10] = v295;
        v116[11] = v115;
        sub_1A809B5EC();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v150, (os_log_type_t)v151))
        {
          uint64_t v117 = v196;
          uint32_t v122 = (uint8_t *)sub_1A8A77888();
          uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
          uint64_t v123 = sub_1A809E94C(0);
          uint64_t v124 = sub_1A809E94C(1);
          uint64_t v126 = &v343;
          int v343 = v122;
          uint64_t v127 = &v342;
          uint64_t v342 = v123;
          uint64_t v128 = &v341;
          uint64_t v341 = v124;
          unsigned int v125 = 2;
          sub_1A809E9A8(2, &v343);
          sub_1A809E9A8(v125, v126);
          uint64_t v339 = v290;
          uint64_t v340 = v141;
          sub_1A809E9BC(&v339, (uint64_t)v126, (uint64_t)v127, (uint64_t)v128);
          uint64_t v129 = v117;
          if (v117)
          {
            __break(1u);
          }
          else
          {
            uint64_t v339 = v291;
            uint64_t v340 = v142;
            sub_1A809E9BC(&v339, (uint64_t)&v343, (uint64_t)&v342, (uint64_t)&v341);
            uint64_t v120 = 0;
            uint64_t v118 = v120;
            uint64_t v339 = v292;
            uint64_t v340 = v143;
            sub_1A809E9BC(&v339, (uint64_t)&v343, (uint64_t)&v342, (uint64_t)&v341);
            v119[2] = v118;
            uint64_t v339 = v293;
            uint64_t v340 = v144;
            sub_1A809E9BC(&v339, (uint64_t)&v343, (uint64_t)&v342, (uint64_t)&v341);
            v119[1] = 0;
            uint64_t v339 = v294;
            uint64_t v340 = v145;
            sub_1A809E9BC(&v339, (uint64_t)&v343, (uint64_t)&v342, (uint64_t)&v341);
            v119[0] = 0;
            uint64_t v339 = v295;
            uint64_t v340 = v147;
            sub_1A809E9BC(&v339, (uint64_t)&v343, (uint64_t)&v342, (uint64_t)&v341);
            _os_log_impl(&dword_1A7EFF000, v150, (os_log_type_t)v151, "%hx: Received '%{public}s' without request.", v122, v134);
            sub_1A809EA08(v123);
            sub_1A809EA08(v124);
            sub_1A8A77868();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(char *, uint64_t))(v299 + 8))(v302, v298);
      }
      goto LABEL_44;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A80DE03C()
{
  return sub_1A8A76708();
}

uint64_t sub_1A80DE20C()
{
  return 0;
}

uint64_t sub_1A80DE224(unsigned int a1)
{
  unsigned int v23 = a1;
  uint64_t v17 = 0;
  uint64_t v16 = sub_1A80E9BA0;
  unsigned int v44 = 0;
  uint64_t v43 = 0;
  char v42 = 0;
  uint64_t v40 = 0;
  uint64_t v18 = sub_1A8A75C98();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v18 - 8;
  unint64_t v21 = (*(void *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v22 = (char *)&v10 - v21;
  uint64_t v24 = sub_1A8A75CE8();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v24 - 8;
  unint64_t v27 = (*(void *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v2 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v10 - v27;
  unsigned int v44 = v2;
  uint64_t v43 = v1;
  int v29 = sub_1A80DE570(v2);
  char v42 = v29;
  uint64_t v30 = v1 + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodyScheduler7Request_activity;
  uint64_t v31 = &v41;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_endAccess();
  uint64_t result = Strong;
  if (Strong)
  {
    uint64_t v14 = Strong;
    uint64_t v13 = Strong;
    uint64_t v40 = Strong;
    id v12 = *(id *)(Strong
                + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
    id v4 = v12;
    swift_retain();
    id v5 = v15;
    uint64_t v6 = swift_allocObject();
    id v7 = v15;
    char v8 = v29;
    id v9 = v16;
    *(void *)(v6 + 16) = v13;
    *(void *)(v6 + 2sub_1A80DBFEC(0, 4) = v7;
    *(unsigned char *)(v6 + 32) = v8;
    uint64_t v38 = v9;
    uint64_t v39 = v6;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    int v34 = 1107296256;
    int v35 = 0;
    uint64_t v36 = sub_1A80D86F8;
    uint64_t v37 = &block_descriptor_329;
    id v11 = _Block_copy(&aBlock);
    sub_1A80D4034();
    sub_1A80D8748();
    MEMORY[0x1AD0E05D0](0, v28, v22, v11);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    _Block_release(v11);
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_1A80DE570(unsigned int a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
    char v1 = 1;
  }
  else
  {
    uint64_t v2 = 0;
    char v1 = 0;
  }
  if (v1)
  {
    return 3;
  }
  else
  {
    switch(v2)
    {
      case 0:
        unsigned __int8 v4 = 0;
        break;
      case 1:
        unsigned __int8 v4 = 1;
        break;
      case 2:
        unsigned __int8 v4 = 2;
        break;
      case 3:
        unsigned __int8 v4 = 3;
        break;
      default:
        JUMPOUT(0);
    }
  }
  return v4;
}

void sub_1A80DE60C(int a1, id a2, int a3)
{
  id v3 = a2;
  sub_1A80DBFEC(a2, a3);
}

uint64_t sub_1A80DE6BC()
{
  if (!"Message.Request")
  {
    sub_1A8A780E8();
    __break(1u);
  }
  uint64_t result = sub_1A80E73F0((uint64_t)"Message.Request", 15, (unint64_t)"init()", 6, 2, (unint64_t)"Message/BackFillMessageBodies.swift", 35, 2, v1, 0x9AuLL, 0x11uLL);
  __break(1u);
  return result;
}

uint64_t sub_1A80DE810()
{
  __int16 v1 = 0;
  uint64_t result = sub_1A80DB558((uint64_t)&v1, MEMORY[0x1E4FBC450]);
  qword_1E9744FC8 = result;
  return result;
}

uint64_t *sub_1A80DE848()
{
  if (qword_1E9744FD0 != -1) {
    swift_once();
  }
  return &qword_1E9744FC8;
}

void sub_1A80DE8AC()
{
  uint64_t v0 = *sub_1A80DE848();
  swift_retain();
  sub_1A80DB720((void (*)(uint64_t))sub_1A80DE94C, 0, v0, MEMORY[0x1E4FBC450], (uint64_t)&unk_1EFE93108);
  swift_release();
}

void sub_1A80DE94C(_WORD *a1@<X0>, _WORD *a2@<X8>)
{
  ++*a1;
  sub_1A80DE7F4();
  *a2 = v2;
}

uint64_t sub_1A80DE99C()
{
  uint64_t v1 = sub_1A8A78558();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A809F94C();
  return v1;
}

uint64_t sub_1A80DE9F4(__int16 a1, uint64_t a2, void *a3, void *a4)
{
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 32) = sub_1A80DE99C();
  *(void *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 48) = 0;
  *(unsigned char *)(v4 + 49) = 0;
  sub_1A8A74C28();
  *(_WORD *)(v4
           + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_uint64_t (*v754)(uint64_t *, uint64_t, id) = a1;
  id v5 = a3;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  swift_endAccess();
  swift_unknownObjectRetain();
  *(void *)(v4 + 2sub_1A80DBFEC(0, 4) = a2;
  id v6 = a4;
  *(void *)(v4
            + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue) = a4;

  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1A80DEB20()
{
  swift_beginAccess();
  if (*(void *)(v0 + 40))
  {
    swift_unknownObjectRetain();
    swift_endAccess();
    swift_getObjectType();
    sub_1A8A77598();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectRelease();
  sub_1A809F94C();
  sub_1A80E9C14();
  uint64_t v3 = v4
     + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_startDate;
  uint64_t v1 = sub_1A8A74C38();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3);
  objc_release(*(id *)(v4
                     + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue));
  return v4;
}

uint64_t sub_1A80DEC54()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1A80DECBC()
{
  uint64_t v99 = 0;
  uint64_t v88 = sub_1A80E87C8;
  int v89 = sub_1A80E88EC;
  uint64_t v90 = sub_1A80E9D18;
  uint64_t v91 = sub_1A80E9ECC;
  uint64_t v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v93 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v94 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E8938;
  uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A809EE44;
  uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A80E9F18;
  uint64_t v130 = 0;
  v128[0] = 0;
  v128[1] = 0;
  unsigned int v125 = 0;
  id v124 = 0;
  id v119 = 0;
  uint64_t v98 = 0;
  uint64_t v100 = sub_1A8A754D8();
  uint64_t v101 = *(void *)(v100 - 8);
  uint64_t v102 = v100 - 8;
  unint64_t v103 = (*(void *)(v101 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](0);
  uint64_t v104 = (char *)&v34 - v103;
  uint64_t v109 = sub_1A8A75EC8();
  uint64_t v107 = *(void *)(v109 - 8);
  uint64_t v108 = v109 - 8;
  unint64_t v105 = (*(void *)(v107 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x1F4188790](v109);
  unint64_t v110 = (uint64_t *)((char *)&v34 - v105);
  uint64_t v130 = v0;
  swift_retain();
  id v106 = *(id *)(v0
               + OBJC_IVAR____TtCE7MessageCSo30MFBackFillMessageBodySchedulerP33_8C94728D29B9D9CACC7F5FFB5564322B8Activity_queue);
  id v1 = v106;
  uint64_t v2 = v107;
  *unint64_t v110 = v106;
  (*(void (**)(void))(v2 + 104))();
  unsigned int v111 = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v107 + 8))(v110, v109);
  unint64_t result = v111;
  if (v111)
  {
    uint64_t v4 = v87;
    swift_release();
    uint64_t v83 = sub_1A8A78558();
    uint64_t v84 = &v129;
    swift_beginAccess();
    *(void *)(v4 + 32) = v83;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v127 = sub_1A80E06A8();
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9744638);
    sub_1A80E9C40();
    sub_1A8A772F8();
    for (uint64_t i = v98; ; uint64_t i = v35)
    {
      uint64_t v81 = i;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9745578);
      sub_1A8A78038();
      uint64_t v82 = v126;
      if (!v126) {
        break;
      }
      uint64_t v80 = v82;
      id v79 = v82;
      unsigned int v125 = v82;
      _s7RequestCMa();
      swift_retain();
      sub_1A80DE8AC();
      id v76 = sub_1A80DB894(v87, v5);
      id v124 = v76;
      id v6 = v76;
      uint64_t v77 = v123;
      sub_1A80E07D0(v76, 5, (uint64_t)v123);
      uint64_t v78 = &v122;
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9744858);
      sub_1A8A76DD8();
      swift_endAccess();
      id v121 = v79;
      id v120 = v79;
      if (v79) {
        id v75 = v120;
      }
      else {
        id v75 = 0;
      }
      id v7 = v104;
      id v52 = v75;
      id v119 = v75;
      uint64_t v8 = sub_1A80D41F4();
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v7, v8, v100);
      swift_retain();
      uint64_t v53 = 16;
      uint64_t v61 = 7;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v52;
      unint64_t v73 = sub_1A8A754B8();
      int v74 = sub_1A8A77468();
      uint64_t v56 = &v117;
      uint64_t v117 = v53;
      unint64_t v54 = sub_1A809EBD0();
      unint64_t v55 = sub_1A809EC4C();
      sub_1A809ECC8();
      sub_1A8A76B48();
      uint32_t v57 = v118;
      uint64_t v59 = 17;
      uint64_t v64 = swift_allocObject();
      *(unsigned char *)(v64 + 16) = 0;
      uint64_t v65 = swift_allocObject();
      *(unsigned char *)(v65 + 16) = 2;
      uint64_t v60 = 32;
      uint64_t v9 = swift_allocObject();
      uint64_t v10 = v87;
      uint64_t v58 = v9;
      *(void *)(v9 + 16) = v88;
      *(void *)(v9 + 2sub_1A80DBFEC(0, 4) = v10;
      uint64_t v11 = swift_allocObject();
      uint64_t v12 = v58;
      uint64_t v66 = v11;
      *(void *)(v11 + 16) = v89;
      *(void *)(v11 + 2sub_1A80DBFEC(0, 4) = v12;
      uint64_t v67 = swift_allocObject();
      *(unsigned char *)(v67 + 16) = 0;
      uint64_t v68 = swift_allocObject();
      *(unsigned char *)(v68 + 16) = 8;
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v62;
      uint64_t v63 = v13;
      *(void *)(v13 + 16) = v90;
      *(void *)(v13 + 2sub_1A80DBFEC(0, 4) = v14;
      uint64_t v15 = swift_allocObject();
      uint64_t v16 = v63;
      uint64_t v70 = v15;
      *(void *)(v15 + 16) = v91;
      *(void *)(v15 + 2sub_1A80DBFEC(0, 4) = v16;
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E97489F0);
      uint64_t v69 = sub_1A8A78558();
      uint64_t v71 = v17;
      swift_retain();
      uint64_t v18 = v64;
      uint64_t v19 = v71;
      *uint64_t v71 = v92;
      v19[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v18;
      swift_retain();
      uint64_t v20 = v65;
      unint64_t v21 = v71;
      v71[2] = v93;
      v21[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v20;
      swift_retain();
      uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v66;
      unsigned int v23 = v71;
      v71[4] = v94;
      v23[5] = v22;
      swift_retain();
      uint64_t v24 = v67;
      uint64_t v25 = v71;
      v71[6] = v95;
      v25[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v24;
      swift_retain();
      uint64_t v26 = v68;
      unint64_t v27 = v71;
      v71[8] = v96;
      v27[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
      swift_retain();
      uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v70;
      int v29 = v71;
      v71[10] = v97;
      v29[11] = v28;
      sub_1A809B5EC();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v73, (os_log_type_t)v74))
      {
        uint64_t v30 = v81;
        uint64_t v45 = (uint8_t *)sub_1A8A77888();
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9748720);
        uint64_t v44 = 0;
        uint64_t v46 = sub_1A809E94C(0);
        uint64_t v47 = sub_1A809E94C(v44);
        uint64_t v48 = &v116;
        uint64_t v116 = v45;
        uint64_t v49 = &v115;
        uint64_t v115 = v46;
        uint64_t v50 = &v114;
        uint64_t v114 = v47;
        sub_1A809E9A8(0, &v116);
        sub_1A809E9A8(2, v48);
        uint64_t v112 = v92;
        uint64_t v113 = v64;
        sub_1A809E9BC(&v112, (uint64_t)v48, (uint64_t)v49, (uint64_t)v50);
        uint64_t v51 = v30;
        if (v30)
        {
          __break(1u);
        }
        else
        {
          uint64_t v112 = v93;
          uint64_t v113 = v65;
          sub_1A809E9BC(&v112, (uint64_t)&v116, (uint64_t)&v115, (uint64_t)&v114);
          uint64_t v41 = 0;
          uint64_t v32 = v41;
          uint64_t v112 = v94;
          uint64_t v113 = v66;
          sub_1A809E9BC(&v112, (uint64_t)&v116, (uint64_t)&v115, (uint64_t)&v114);
          uint64_t v40 = v32;
          uint64_t v112 = v95;
          uint64_t v113 = v67;
          sub_1A809E9BC(&v112, (uint64_t)&v116, (uint64_t)&v115, (uint64_t)&v114);
          uint64_t v39 = 0;
          uint64_t v112 = v96;
          uint64_t v113 = v68;
          sub_1A809E9BC(&v112, (uint64_t)&v116, (uint64_t)&v115, (uint64_t)&v114);
          uint64_t v38 = 0;
          uint64_t v112 = v97;
          uint64_t v113 = v70;
          sub_1A809E9BC(&v112, (uint64_t)&v116, (uint64_t)&v115, (uint64_t)&v114);
          uint64_t v37 = 0;
          _os_log_impl(&dword_1A7EFF000, v73, (os_log_type_t)v74, "%hx: Starting back-filling messages on task manager %lx.", v45, v57);
          uint64_t v36 = 0;
          sub_1A809EA08(v46);
          sub_1A809EA08(v47);
          sub_1A8A77868();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v42 = v37;
        }
      }
      else
      {
        uint64_t v31 = v81;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v42 = v31;
      }
      uint64_t v35 = v42;

      (*(void (**)(char *, uint64_t))(v101 + 8))(v104, v100);
      swift_getObjectType();
      id v33 = v76;
      objc_msgSend(v79, sel_startBackFillingMessageBodyDownloadWithRequest_, v76);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
    unint64_t result = (unint64_t)v128;
    sub_1A809F94C();
  }
  else
  {
    __break(1u);
  }
  return result;
}