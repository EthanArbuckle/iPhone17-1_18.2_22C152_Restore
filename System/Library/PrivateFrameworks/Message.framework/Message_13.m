void sub_1A8846894(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  BOOL v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unint64_t v43;
  unsigned __int8 v44;
  unint64_t v45;
  unsigned __int8 v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;

  sub_1A882E0A8(a1, a2, a3);
  if (!v5)
  {
    OUTLINED_FUNCTION_38_7();
    v13 = sub_1A882CF44(v8, v9, v10, v11, v12, 176);
    v14 = v13;
    v16 = v15;
    v17 = HIBYTE(v15) & 0xF;
    v18 = v13 & 0xFFFFFFFFFFFFLL;
    if ((v16 & 0x2000000000000000) != 0) {
      v19 = v17;
    }
    else {
      v19 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (!v19) {
      goto LABEL_43;
    }
    if ((v16 & 0x1000000000000000) != 0)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      v48 = OUTLINED_FUNCTION_225();
      v21 = sub_1A8740E48(v48, v49, 10);
      v51 = v50;
      swift_bridgeObjectRelease();
      LOBYTE(v17) = v51;
      goto LABEL_38;
    }
    if ((v16 & 0x2000000000000000) == 0)
    {
      if ((v13 & 0x1000000000000000) != 0)
      {
        v20 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        OUTLINED_FUNCTION_225();
        v20 = (unsigned __int8 *)sub_1A8A77E88();
      }
      v21 = (unint64_t)sub_1A8740E18(v20, v18);
      LOBYTE(v17) = v22 & 1;
LABEL_38:
      if ((v17 & 1) == 0)
      {
        if (a4) {
          goto LABEL_46;
        }
        v34 = OUTLINED_FUNCTION_225();
        v36 = sub_1A877DD10(v34, v35);
        if ((v36 & 0x100) == 0)
        {
          if (v36 == 48)
          {
            swift_bridgeObjectRelease();
            sub_1A87A3EF0();
            OUTLINED_FUNCTION_7_0();
            strcpy((char *)v37, "starts with 0");
            *(_WORD *)(v37 + 14) = -4864;
            *(void *)(v37 + 16) = 0xD000000000000020;
            *(void *)(v37 + 24) = 0x80000001A8B3AED0;
            v38 = 181;
LABEL_44:
            *(void *)(v37 + 32) = v38;
            swift_willThrow();
            swift_release();
            return;
          }
LABEL_46:
          *a5 = v21;
          OUTLINED_FUNCTION_225();
          v39 = sub_1A8A76778();
          swift_bridgeObjectRelease();
          swift_release();
          a5[1] = v39;
          return;
        }
LABEL_71:
        __break(1u);
        return;
      }
LABEL_43:
      sub_1A8A77DC8();
      swift_bridgeObjectRelease();
      sub_1A8A767E8();
      sub_1A87A3EF0();
      OUTLINED_FUNCTION_7_0();
      *(void *)v37 = v14;
      *(void *)(v37 + 8) = v16;
      *(void *)(v37 + 16) = 0xD000000000000020;
      *(void *)(v37 + 24) = 0x80000001A8B3AED0;
      v38 = 178;
      goto LABEL_44;
    }
    if (v13 == 43)
    {
      if (v17)
      {
        if (v17 != 1)
        {
          OUTLINED_FUNCTION_2_17();
          if (v26 || !v25)
          {
            v21 = v29;
            if (v28 == 2) {
              goto LABEL_37;
            }
            OUTLINED_FUNCTION_2_17();
            if (v26 || !v25)
            {
              v21 = 10 * v21 + v31;
              if (v30 != 3)
              {
                while (1)
                {
                  OUTLINED_FUNCTION_194();
                  if (!v26 && v25) {
                    goto LABEL_34;
                  }
                  if (!is_mul_ok(v21, v33)) {
                    goto LABEL_34;
                  }
                  v25 = __CFADD__(10 * v21, v32);
                  v21 = 10 * v21 + v32;
                  if (v25) {
                    goto LABEL_34;
                  }
                  OUTLINED_FUNCTION_181_1();
                  if (v26) {
                    goto LABEL_38;
                  }
                }
              }
              goto LABEL_37;
            }
          }
          goto LABEL_34;
        }
        goto LABEL_68;
      }
    }
    else
    {
      if (v13 != 45)
      {
        if (v17 && (v13 - 48) <= 9u)
        {
          v21 = (v13 - 48);
          if (v17 == 1) {
            goto LABEL_37;
          }
          OUTLINED_FUNCTION_2_17();
          if (v26 || !v25)
          {
            v21 = 10 * v21 + v41;
            if (v40 != 2)
            {
              while (1)
              {
                OUTLINED_FUNCTION_194();
                if (!v26 && v25) {
                  goto LABEL_34;
                }
                if (!is_mul_ok(v21, v43)) {
                  goto LABEL_34;
                }
                v25 = __CFADD__(10 * v21, v42);
                v21 = 10 * v21 + v42;
                if (v25) {
                  goto LABEL_34;
                }
                OUTLINED_FUNCTION_181_1();
                if (v26) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
LABEL_34:
        v21 = 0;
LABEL_35:
        LOBYTE(v17) = 1;
        goto LABEL_38;
      }
      if (v17)
      {
        if (v17 != 1)
        {
          OUTLINED_FUNCTION_2_17();
          if (v26 || !v25)
          {
            v21 = 0;
            v25 = v24 == 0;
            v27 = -(uint64_t)v24;
            if (!v25) {
              goto LABEL_35;
            }
            if (v23 == 2)
            {
              LOBYTE(v17) = 0;
              v21 = v27;
              goto LABEL_38;
            }
            v44 = BYTE2(v14) - 48;
            if ((BYTE2(v14) - 48) <= 9u && is_mul_ok(v27, 0xAuLL))
            {
              v45 = 10 * v27;
              v21 = v45 - v44;
              if (v45 >= v44)
              {
                if (v23 != 3)
                {
                  while (1)
                  {
                    OUTLINED_FUNCTION_194();
                    if (!v26 && v25) {
                      goto LABEL_34;
                    }
                    if (!is_mul_ok(v21, v47)) {
                      goto LABEL_34;
                    }
                    v25 = 10 * v21 >= v46;
                    v21 = 10 * v21 - v46;
                    if (!v25) {
                      goto LABEL_34;
                    }
                    OUTLINED_FUNCTION_181_1();
                    if (v26) {
                      goto LABEL_38;
                    }
                  }
                }
LABEL_37:
                LOBYTE(v17) = 0;
                goto LABEL_38;
              }
            }
          }
          goto LABEL_34;
        }
LABEL_68:
        v21 = 0;
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_71;
  }
}

void sub_1A8846CD4()
{
  OUTLINED_FUNCTION_168_0();
  unint64_t v2 = *((unsigned int *)v0 + 2);
  unint64_t v1 = *((unsigned int *)v0 + 3);
  if (v1 == v2)
  {
    sub_1A87F04B4();
    OUTLINED_FUNCTION_7_0();
LABEL_3:
    swift_willThrow();
LABEL_15:
    OUTLINED_FUNCTION_67_5();
    return;
  }
  if (v1 < v2)
  {
LABEL_19:
    __break(1u);
  }
  else
  {
    v3 = v0;
    unint64_t v4 = *((unsigned __int8 *)v0 + 22) | ((unint64_t)*((unsigned __int16 *)v0 + 10) << 8);
    if (*((_DWORD *)v0 + 4) - (int)v4 >= v1)
    {
      uint64_t v5 = *v0;
      OUTLINED_FUNCTION_0_11();
      unint64_t v6 = v2;
      while (1)
      {
        if (v6 >= v1)
        {
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
        if (v6 >= v2 + (v1 - v2)) {
          goto LABEL_18;
        }
        if (*(unsigned char *)(*(void *)(v5 + 24) + v4 + v6) != 32) {
          break;
        }
        if (v1 == ++v6)
        {
          *((_DWORD *)v3 + 2) = v1;
          goto LABEL_15;
        }
      }
      if (v6 <= v2)
      {
        sub_1A8A77DC8();
        swift_bridgeObjectRelease();
        sub_1A8A784D8();
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        sub_1A87A3EF0();
        OUTLINED_FUNCTION_7_0();
        void *v7 = 0xD000000000000016;
        v7[1] = 0x80000001A8B3B7A0;
        OUTLINED_FUNCTION_110_2((uint64_t)v7, 0xD000000000000020);
        *(void *)(v8 + 32) = 201;
        goto LABEL_3;
      }
      if (v1 < v6) {
        goto LABEL_21;
      }
      *((_DWORD *)v3 + 2) = v6;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
}

void sub_1A8846E90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, char a7)
{
  if ((a4 & 1) == 0 || (sub_1A8838484(), !v7))
  {
    unint64_t v36 = a5;
    char v27 = a7;
    if ((a6 & 0x1000000000000000) != 0)
    {
      uint64_t v12 = sub_1A8A76848();
    }
    else if ((a6 & 0x2000000000000000) != 0)
    {
      uint64_t v12 = HIBYTE(a6) & 0xF;
    }
    else
    {
      uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL;
    }
    unint64_t v13 = *(void *)a1;
    uint64_t v15 = *(unsigned int *)(a1 + 8);
    unint64_t v14 = *(unsigned int *)(a1 + 12);
    int v16 = *(_DWORD *)(a1 + 16);
    unint64_t v17 = *(unsigned __int16 *)(a1 + 20);
    unsigned int v18 = *(unsigned __int8 *)(a1 + 22);
    if (v12 < 0 || v12 > (v14 - v15))
    {
      if (v14 >= v15)
      {
        uint64_t v12 = v18 | (v17 << 8);
        if (v16 - (int)v12 >= v14)
        {
          unint64_t v28 = *(void *)a1;
          int v29 = v15;
          int v30 = v14;
          int v31 = v16;
          __int16 v32 = v17;
          char v33 = v18;
          uint64_t v34 = v15;
          unint64_t v35 = v14;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          char v24 = sub_1A8847388((uint64_t)&v28, v36, a6);
          swift_bridgeObjectRelease();
          swift_release();
          if (v24)
          {
            sub_1A87F04B4();
            OUTLINED_FUNCTION_7_0();
LABEL_24:
            swift_willThrow();
            return;
          }
          sub_1A8A77DC8();
          swift_bridgeObjectRelease();
          sub_1A8A767E8();
          sub_1A8A767E8();
          OUTLINED_FUNCTION_0_11();
          sub_1A8A766E8();
          sub_1A8A767E8();
          swift_bridgeObjectRelease();
          sub_1A87A3EF0();
          OUTLINED_FUNCTION_7_0();
          void *v25 = 0x6F74206465697254;
          v25[1] = 0xEF20657372617020;
          OUTLINED_FUNCTION_110_2((uint64_t)v25, 0xD000000000000020);
          uint64_t v23 = 218;
LABEL_23:
          v22[4] = v23;
          goto LABEL_24;
        }
        goto LABEL_36;
      }
    }
    else
    {
      OUTLINED_FUNCTION_0_11();
      uint64_t v19 = sub_1A8A766E8();
      if (!__CFADD__(v15, v12))
      {
        unint64_t v14 = v19;
        unint64_t v13 = v20;
        *(_DWORD *)(a1 + 8) = v15 + v12;
        unint64_t v17 = v36;
        BOOL v21 = v19 == v36 && v20 == a6;
        if (v21 || (sub_1A8A78588() & 1) != 0) {
          goto LABEL_21;
        }
        if (v27)
        {
          sub_1A8A77DC8();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_169_1();
          OUTLINED_FUNCTION_162_1();
          sub_1A8A767E8();
          swift_bridgeObjectRelease();
          sub_1A87A3EF0();
          OUTLINED_FUNCTION_7_0();
          void *v22 = 0;
          v22[1] = 0xE000000000000000;
          v22[2] = 0xD000000000000020;
          v22[3] = 0x80000001A8B3AED0;
          uint64_t v23 = 234;
          goto LABEL_23;
        }
        if ((v13 & 0x1000000000000000) == 0)
        {
          if ((v13 & 0x2000000000000000) != 0) {
            uint64_t v26 = HIBYTE(v13) & 0xF;
          }
          else {
            uint64_t v26 = v14 & 0xFFFFFFFFFFFFLL;
          }
LABEL_30:
          if (v12 != v26 || (sub_1A8847648(v17, a6, v14, v13) & 1) == 0)
          {
            sub_1A8A77DC8();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_169_1();
            OUTLINED_FUNCTION_162_1();
            sub_1A8A767E8();
            swift_bridgeObjectRelease();
            sub_1A87A3EF0();
            OUTLINED_FUNCTION_7_0();
            void *v22 = 0;
            v22[1] = 0xE000000000000000;
            v22[2] = 0xD000000000000020;
            v22[3] = 0x80000001A8B3AED0;
            uint64_t v23 = 231;
            goto LABEL_23;
          }
LABEL_21:
          swift_bridgeObjectRelease();
          return;
        }
LABEL_37:
        uint64_t v26 = sub_1A8A76848();
        goto LABEL_30;
      }
      __break(1u);
    }
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
}

void sub_1A88472C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFADD__(a2, 1);
  uint64_t v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
    return;
  }
  if (v5 >= a3)
  {
    sub_1A87EA600();
    swift_allocError();
    *unint64_t v13 = a3;
  }
  else
  {
    uint64_t v8 = *a1;
    uint64_t v9 = a1[1];
    int v10 = *((_DWORD *)a1 + 4);
    __int16 v11 = *((_WORD *)a1 + 10);
    char v12 = *((unsigned char *)a1 + 22);
    sub_1A8846CD4();
    if (!v3) {
      return;
    }
    *a1 = v8;
    a1[1] = v9;
    *((_DWORD *)a1 + 4) = v10;
    *((_WORD *)a1 + 10) = v11;
    *((unsigned char *)a1 + 22) = v12;
  }
  swift_willThrow();
}

unint64_t sub_1A8847388(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(unsigned int *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 12);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
  }
  int v21 = *(_DWORD *)(a1 + 12);
  if (v8)
  {
    unint64_t v29 = v8;
    uint64_t v25 = 4 * v8;
    uint64_t v10 = *(unsigned __int8 *)(a1 + 22);
    uint64_t v11 = (a2 >> 59) & 1;
    if ((a3 & 0x1000000000000000) == 0) {
      LOBYTE(v11) = 1;
    }
    uint64_t v12 = *(unsigned __int16 *)(a1 + 20);
    uint64_t v31 = 4 << v11;
    uint64_t v23 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v24 = a3 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v13 = (void *)(v3 + 24);
    uint64_t v26 = v10 | (v12 << 8);
    uint64_t v27 = (v4 - v5);
    unint64_t v14 = 15;
    uint64_t v15 = v6;
    while (1)
    {
      unint64_t result = v14;
      if ((v14 & 0xC) == v31) {
        unint64_t result = sub_1A877E160(v14, a2, a3);
      }
      unint64_t v17 = result >> 16;
      uint64_t v18 = a2;
      if (result >> 16 >= v29) {
        break;
      }
      if ((a3 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1A8A76888();
        uint64_t v18 = a2;
        unsigned __int8 v19 = result;
      }
      else if ((a3 & 0x2000000000000000) != 0)
      {
        v30[0] = a2;
        v30[1] = v24;
        unsigned __int8 v19 = *((unsigned char *)v30 + v17);
      }
      else
      {
        unint64_t result = v23;
        if ((a2 & 0x1000000000000000) == 0)
        {
          unint64_t result = sub_1A8A77E88();
          uint64_t v18 = a2;
        }
        unsigned __int8 v19 = *(unsigned char *)(result + v17);
      }
      if ((v14 & 0xC) == v31)
      {
        unint64_t result = sub_1A877E160(v14, v18, a3);
        unint64_t v14 = result;
      }
      if ((a3 & 0x1000000000000000) != 0)
      {
        if (v29 <= v14 >> 16) {
          goto LABEL_48;
        }
        unint64_t result = sub_1A8A76858();
        unint64_t v14 = result;
      }
      else
      {
        unint64_t v14 = (v14 & 0xFFFFFFFFFFFF0000) + 65540;
      }
      if (v7 == v15) {
        goto LABEL_40;
      }
      if (v15 >= v7) {
        goto LABEL_45;
      }
      if (v6 < v5) {
        goto LABEL_46;
      }
      if (v15 - v5 >= v27) {
        goto LABEL_47;
      }
      swift_beginAccess();
      if (((*(unsigned char *)(*v13 + v26 + v15) ^ v19) & 0xDF) != 0)
      {
        sub_1A858B1E0(a1);
        swift_release();
        return 0;
      }
      ++v15;
      if (v25 == v14 >> 14) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v15 = *(void *)(a1 + 24);
LABEL_31:
  sub_1A858B1E0(a1);
  unint64_t result = swift_release();
  if (v15 == v7) {
    return 1;
  }
  if (v15 < v6 || v15 >= v7)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v15 >= v5)
  {
    if (v15 - v5 < (v21 - v5)) {
      return 0;
    }
    __break(1u);
LABEL_40:
    sub_1A858B1E0(a1);
    swift_release();
    return 1;
  }
LABEL_50:
  __break(1u);
  return result;
}

unint64_t sub_1A8847648(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v24 = v6;
  uint64_t v7 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v7) = 1;
  }
  uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a2) & 0xF;
  }
  uint64_t v32 = 4 * v6;
  uint64_t v27 = 4 << v7;
  unint64_t v28 = v8;
  uint64_t v20 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v21 = a4 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v26 = 4 * v8;
  uint64_t v9 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = 4 << v9;
  uint64_t v22 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v11 = 15;
  unint64_t v12 = 15;
  while (1)
  {
    unint64_t v13 = v12 >> 14;
    BOOL v14 = v12 >> 14 == v32;
    if (v12 >> 14 == v32)
    {
      unsigned __int8 v15 = 0;
      goto LABEL_29;
    }
    unint64_t result = v12;
    if ((v12 & 0xC) == v27) {
      unint64_t result = sub_1A877E160(v12, a3, a4);
    }
    unint64_t v17 = result >> 16;
    if (result >> 16 >= v24) {
      goto LABEL_51;
    }
    if ((a4 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1A8A76888();
      unsigned __int8 v15 = result;
    }
    else if ((a4 & 0x2000000000000000) != 0)
    {
      unint64_t v30 = a3;
      uint64_t v31 = v21;
      unsigned __int8 v15 = *((unsigned char *)&v30 + v17);
    }
    else
    {
      unint64_t result = v20;
      if ((a3 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1A8A77E88();
      }
      unsigned __int8 v15 = *(unsigned char *)(result + v17);
    }
    if ((v12 & 0xC) == v27)
    {
      unint64_t result = sub_1A877E160(v12, a3, a4);
      unint64_t v12 = result;
      if ((a4 & 0x1000000000000000) == 0)
      {
LABEL_24:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_29;
      }
    }
    else if ((a4 & 0x1000000000000000) == 0)
    {
      goto LABEL_24;
    }
    if (v24 <= v12 >> 16) {
      goto LABEL_53;
    }
    unint64_t v12 = sub_1A8A76858();
LABEL_29:
    if (v26 == v11 >> 14) {
      return v14;
    }
    unint64_t result = v11;
    if ((v11 & 0xC) == v10) {
      unint64_t result = sub_1A877E160(v11, a1, a2);
    }
    unint64_t v18 = result >> 16;
    if (result >> 16 >= v28) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1A8A76888();
      unsigned __int8 v19 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      unint64_t v30 = a1;
      uint64_t v31 = v23;
      unsigned __int8 v19 = *((unsigned char *)&v30 + v18);
    }
    else
    {
      unint64_t result = v22;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1A8A77E88();
      }
      unsigned __int8 v19 = *(unsigned char *)(result + v18);
    }
    if ((v11 & 0xC) == v10)
    {
      unint64_t result = sub_1A877E160(v11, a1, a2);
      unint64_t v11 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_41:
        unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_46;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_41;
    }
    if (v28 <= v11 >> 16) {
      goto LABEL_52;
    }
    unint64_t v11 = sub_1A8A76858();
LABEL_46:
    if (v13 == v32 || ((v19 ^ v15) & 0xDF) != 0) {
      return 0;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1A884794C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result = sub_1A883BA8C(a1);
  if (!v4 && result != a4)
  {
    sub_1A8A77DC8();
    swift_bridgeObjectRelease();
    strcpy((char *)v9, "looking for ");
    BYTE5(v9[1]) = 0;
    HIWORD(v9[1]) = -5120;
    sub_1A8A784D8();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    sub_1A8A784D8();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    uint64_t v7 = v9[1];
    sub_1A87A3EF0();
    swift_allocError();
    *uint64_t v8 = v9[0];
    v8[1] = v7;
    v8[2] = 0xD000000000000020;
    v8[3] = 0x80000001A8B3AED0;
    v8[4] = 246;
    return swift_willThrow();
  }
  return result;
}

void *sub_1A8847AB0(void *(*a1)(uint64_t *__return_ptr, uint64_t, void), uint64_t a2, uint64_t a3)
{
  return sub_1A8847AC8(a1, a2, a3);
}

void *sub_1A8847AC8(void *(*a1)(uint64_t *__return_ptr, uint64_t, void), uint64_t a2, uint64_t a3)
{
  uint64_t result = a1(&v5, a3 + 32, *(void *)(a3 + 16));
  if (!v3) {
    return (void *)v5;
  }
  return result;
}

void sub_1A8847B1C()
{
  OUTLINED_FUNCTION_190_1();
  sub_1A8847D68(0, v0, 0, v1, (void (*)(uint64_t, uint64_t, void *))sub_1A873C7D4);
}

void sub_1A8847B54()
{
}

void sub_1A8847B9C()
{
  OUTLINED_FUNCTION_190_1();
  sub_1A884802C(0, v0, 0, v1, (void (*)(unint64_t, uint64_t, char *))sub_1A873C81C);
}

void sub_1A8847BD4()
{
}

void sub_1A8847C1C()
{
}

void sub_1A8847C64()
{
}

void sub_1A8847CAC()
{
}

void sub_1A8847CF8()
{
}

void sub_1A8847D0C()
{
}

void sub_1A8847D20()
{
}

void sub_1A8847D38(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1A8847D50(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1A8847D68(char a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_1_23();
    if (v9 != v10)
    {
      OUTLINED_FUNCTION_3_20();
      if (v9)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  else
  {
    uint64_t v8 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v8 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v8;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DD70);
    unint64_t v13 = (void *)OUTLINED_FUNCTION_6_16();
    _swift_stdlib_malloc_size_0(v13);
    OUTLINED_FUNCTION_137_2();
    v13[2] = v11;
    v13[3] = v14;
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  if (a1)
  {
    a5(a4 + 32, v11, v13 + 4);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13 + 4, (const void *)(a4 + 32), 16 * v11);
  }
  swift_release();
}

void sub_1A8847E44(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1A8847E5C()
{
}

void sub_1A8847E84()
{
}

void sub_1A8847EAC()
{
  OUTLINED_FUNCTION_8_13();
  if (v4)
  {
    OUTLINED_FUNCTION_1_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_3_20();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  OUTLINED_FUNCTION_5_15();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EA8);
    uint64_t v7 = swift_allocObject();
    size_t v8 = _swift_stdlib_malloc_size_0((const void *)v7);
    *(void *)(v7 + 16) = v2;
    *(void *)(v7 + 24) = 2 * v8 - 64;
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  if (v1)
  {
    sub_1A873C7F4((char *)(v0 + 32), v2, (char *)(v7 + 32));
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    memcpy((void *)(v7 + 32), (const void *)(v0 + 32), v2);
  }
  swift_release();
}

void sub_1A8847F70()
{
  OUTLINED_FUNCTION_8_13();
  if (v4)
  {
    OUTLINED_FUNCTION_1_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_3_20();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  OUTLINED_FUNCTION_5_15();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E40);
    uint64_t v7 = (char *)OUTLINED_FUNCTION_6_16();
    size_t v8 = _swift_stdlib_malloc_size_0(v7);
    OUTLINED_FUNCTION_177_0(v8);
  }
  else
  {
    uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  }
  if (v1)
  {
    sub_1A873C7B4((char *)(v0 + 32), v2, v7 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    memcpy(v7 + 32, (const void *)(v0 + 32), 8 * v2);
  }
  swift_release();
}

void sub_1A884802C(char a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(unint64_t, uint64_t, char *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_1_23();
    if (v9 != v10)
    {
      OUTLINED_FUNCTION_3_20();
      if (v9)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  else
  {
    uint64_t v8 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v8 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v8;
  }
  if (!v12)
  {
    unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DD08);
  uint64_t v13 = type metadata accessor for ParameterValue();
  OUTLINED_FUNCTION_3_56(v13);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_23;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_18:
  type metadata accessor for ParameterValue();
  OUTLINED_FUNCTION_1_69();
  if (a1)
  {
    unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    a5(a4 + v22, v11, (char *)v18 + v22);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_1A8848188()
{
  OUTLINED_FUNCTION_8_13();
  if (v3)
  {
    OUTLINED_FUNCTION_1_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_3_20();
      if (v5)
      {
LABEL_23:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8) {
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DD50);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747838);
  OUTLINED_FUNCTION_3_56(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  size_t v15 = _swift_stdlib_malloc_size_0(v14);
  if (!v11)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v15 - v13 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_22;
  }
  v14[2] = v7;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v11);
LABEL_17:
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747838);
  OUTLINED_FUNCTION_1_69();
  if (v1)
  {
    sub_1A873C834();
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_1A88482E0()
{
}

void sub_1A8848308()
{
}

void sub_1A8848330()
{
}

void sub_1A8848358()
{
  OUTLINED_FUNCTION_223();
  if (v5)
  {
    OUTLINED_FUNCTION_1_23();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_3_20();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(v4);
    uint64_t v11 = (void *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v2)
  {
    v1(v0 + 32, v9, v11 + 4);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_1A8848444()
{
}

void sub_1A884846C()
{
}

void sub_1A8848494()
{
  OUTLINED_FUNCTION_223();
  if (v5)
  {
    OUTLINED_FUNCTION_1_23();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_3_20();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(v4);
    uint64_t v11 = (void *)OUTLINED_FUNCTION_6_16();
    _swift_stdlib_malloc_size_0(v11);
    OUTLINED_FUNCTION_137_2();
    v11[2] = v9;
    v11[3] = v12;
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v2)
  {
    v1(v0 + 32, v9, v11 + 4);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_1A8848564()
{
  OUTLINED_FUNCTION_8_13();
  if (v4)
  {
    OUTLINED_FUNCTION_1_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_3_20();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  OUTLINED_FUNCTION_5_15();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97411B0);
    uint64_t v7 = OUTLINED_FUNCTION_6_16();
    _swift_stdlib_malloc_size_0((const void *)v7);
    OUTLINED_FUNCTION_137_2();
    *(void *)(v7 + 16) = v2;
    *(void *)(v7 + 24) = v8;
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  if (v1)
  {
    sub_1A873C7D4((char *)(v0 + 32), v2, (char *)(v7 + 32));
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743EF8);
    OUTLINED_FUNCTION_22_8();
  }
  swift_release();
}

void sub_1A8848630()
{
  OUTLINED_FUNCTION_8_13();
  if (v4)
  {
    OUTLINED_FUNCTION_1_23();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_3_20();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_0_27();
    }
  }
  OUTLINED_FUNCTION_5_15();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DCF0);
    uint64_t v7 = (char *)OUTLINED_FUNCTION_6_16();
    size_t v8 = _swift_stdlib_malloc_size_0(v7);
    OUTLINED_FUNCTION_177_0(v8);
  }
  else
  {
    uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  }
  if (v1)
  {
    sub_1A873C7B4((char *)(v0 + 32), v2, v7 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DCF8);
    OUTLINED_FUNCTION_22_8();
  }
  swift_release();
}

void sub_1A88486F8()
{
}

void sub_1A8848714()
{
}

uint64_t sub_1A8848730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

void sub_1A8848764()
{
  OUTLINED_FUNCTION_1_4();
  sub_1A880BC54(v0, v1, v2);
}

uint64_t sub_1A8848780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A88487B0(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1A871D040);
}

uint64_t sub_1A8848798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A88487B0(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1A871D060);
}

uint64_t sub_1A88487B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  char v6 = v4;
  uint64_t v11 = v4[1];
  uint64_t v9 = v4 + 1;
  uint64_t v10 = v11;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v9 = v11;
  if ((result & 1) == 0)
  {
    uint64_t v13 = OUTLINED_FUNCTION_8_37();
    uint64_t result = a4(v13);
    uint64_t v10 = *v9;
  }
  unint64_t v15 = *(void *)(v10 + 16);
  unint64_t v14 = *(void *)(v10 + 24);
  if (v15 >= v14 >> 1)
  {
    uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t))a4)(v14 > 1, v15 + 1, 1);
    uint64_t v10 = *v9;
  }
  *(void *)(v10 + 16) = v15 + 1;
  uint64_t v16 = v10 + 16 * v15;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  v6[1] = v10;
  unint64_t v17 = *(void *)(v10 + 16);
  uint64_t v18 = *v6;
  if (*v6)
  {
    OUTLINED_FUNCTION_0_11();
    if (MEMORY[0x1AD0DE160](*(void *)(v18 + 16) & 0x3FLL) < (uint64_t)v17)
    {
      if (v17 <= 0xF && (*(void *)(v18 + 24) & 0x3FLL) == 0)
      {
        uint64_t result = swift_release();
        *char v6 = 0;
        return result;
      }
      goto LABEL_14;
    }
    uint64_t result = sub_1A8848C80();
    if (*v6) {
      return sub_1A8848CCC();
    }
    else {
      __break(1u);
    }
  }
  else if (v17 > 0xF)
  {
LABEL_14:
    MEMORY[0x1AD0DE190](v17);
    return sub_1A8848D38();
  }
  return result;
}

uint64_t sub_1A8848918(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8848970(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A871D100);
}

uint64_t sub_1A8848944(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8848970(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A871D120);
}

uint64_t sub_1A8848970(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = v5;
  int v9 = a2;
  unint64_t v11 = HIDWORD(a2);
  uint64_t v14 = v5[1];
  uint64_t v12 = v5 + 1;
  uint64_t v13 = v14;
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v12 = v14;
  if ((result & 1) == 0)
  {
    uint64_t v16 = OUTLINED_FUNCTION_8_37();
    uint64_t result = a5(v16);
    uint64_t v13 = *v12;
  }
  unint64_t v18 = *(void *)(v13 + 16);
  unint64_t v17 = *(void *)(v13 + 24);
  if (v18 >= v17 >> 1)
  {
    uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t))a5)(v17 > 1, v18 + 1, 1);
    uint64_t v13 = *v12;
  }
  *(void *)(v13 + 16) = v18 + 1;
  uint64_t v19 = v13 + 24 * v18;
  *(void *)(v19 + 32) = a1;
  *(_DWORD *)(v19 + 40) = v9;
  *(_DWORD *)(v19 + 44) = v11;
  *(_DWORD *)(v19 + 48) = a3;
  *(_WORD *)(v19 + 52) = WORD2(a3);
  *(unsigned char *)(v19 + 54) = BYTE6(a3);
  v7[1] = v13;
  uint64_t v20 = *v7;
  if (!*v7)
  {
    if (v18 <= 0xE) {
      return result;
    }
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_0_11();
  if (MEMORY[0x1AD0DE160](*(void *)(v20 + 16) & 0x3FLL) <= (uint64_t)v18)
  {
    if (v18 <= 0xE && (*(void *)(v20 + 24) & 0x3FLL) == 0)
    {
      uint64_t result = swift_release();
      uint64_t *v7 = 0;
      return result;
    }
LABEL_15:
    MEMORY[0x1AD0DE190](v18 + 1);
    return sub_1A8848D84();
  }
  uint64_t result = sub_1A8848C80();
  if (*v7) {
    return sub_1A8848CCC();
  }
  __break(1u);
  return result;
}

void sub_1A8848B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  char v6 = v2 + 1;
  uint64_t v7 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *char v6 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1A871D160();
    uint64_t v7 = *v6;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  if (v10 >= *(void *)(v7 + 24) >> 1)
  {
    sub_1A871D160();
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v10 + 1;
  uint64_t v11 = v7 + 16 * v10;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  v3[1] = v7;
  unint64_t v12 = *(void *)(v7 + 16);
  uint64_t v13 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (MEMORY[0x1AD0DE160](*(void *)(v13 + 16) & 0x3FLL) < (uint64_t)v12)
    {
      if (v12 <= 0xF && (*(void *)(v13 + 24) & 0x3FLL) == 0)
      {
        swift_release();
        uint64_t *v3 = 0;
        return;
      }
      goto LABEL_14;
    }
    sub_1A8848C80();
    if (*v3) {
      sub_1A8848CCC();
    }
    else {
      __break(1u);
    }
  }
  else if (v12 > 0xF)
  {
LABEL_14:
    MEMORY[0x1AD0DE190](v12);
    sub_1A8848D84();
  }
}

uint64_t sub_1A8848C80()
{
  uint64_t result = *v0;
  if (*v0)
  {
    uint64_t result = swift_isUniquelyReferenced_native();
    if (!result)
    {
      uint64_t result = *v0;
      if (*v0)
      {
        uint64_t v2 = sub_1A8A75098();
        uint64_t result = swift_release();
        uint64_t *v0 = v2;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1A8848CCC()
{
  return sub_1A8A75038();
}

uint64_t sub_1A8848D38()
{
  uint64_t v1 = OUTLINED_FUNCTION_166_1();
  uint64_t v5 = sub_1A8848DBC(v1, v2, v3, v4);
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_1A8848D6C()
{
  return sub_1A8848D84();
}

uint64_t sub_1A8848D84()
{
  uint64_t v1 = OUTLINED_FUNCTION_166_1();
  uint64_t v6 = sub_1A8848E44(v1, v2, v3, v4, v5);
  uint64_t result = swift_release();
  uint64_t *v0 = v6;
  return result;
}

uint64_t sub_1A8848DBC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1AD0DE190](*(void *)(a1 + 16));
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = MEMORY[0x1AD0DE1A0]();
    sub_1A8848ED4(a1);
  }
  return v9;
}

uint64_t sub_1A8848E44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = MEMORY[0x1AD0DE190](*(void *)(a1 + 16));
  uint64_t v11 = 0;
  if (a3) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = a2;
  }
  if (v12 <= v10) {
    uint64_t v12 = v10;
  }
  if (v12 <= a4) {
    uint64_t v13 = a4;
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13 >= 5)
  {
    uint64_t v11 = MEMORY[0x1AD0DE1A0]();
    a5(a1, v11 + 16, v11 + 32);
  }
  return v11;
}

void sub_1A8848ED4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    while (1)
    {
      sub_1A8A78738();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A762A8();
      sub_1A8A787C8();
      OUTLINED_FUNCTION_146_1();
      if (v3) {
        break;
      }
      uint64_t v4 = sub_1A8A75018();
      swift_bridgeObjectRelease();
      if (v4)
      {
        while (1)
          sub_1A8A75068();
      }
      sub_1A8A75058();
      if (++v2 == v1) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1A8848FE0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      sub_1A8A78738();
      swift_beginAccess();
      sub_1A8A78748();
      uint64_t result = sub_1A8A787C8();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      if (sub_1A8A75018())
      {
        while (1)
          sub_1A8A75068();
      }
      uint64_t result = sub_1A8A75058();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8849108(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      sub_1A8A78738();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A762A8();
      uint64_t result = sub_1A8A787C8();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      uint64_t v5 = sub_1A8A75018();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_1A8A75068();
      }
      uint64_t result = sub_1A8A75058();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1A8849220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A8A78738();
  sub_1A8A762A8();
  sub_1A8A787C8();
  OUTLINED_FUNCTION_146_1();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    sub_1A8A75018();
    uint64_t v7 = sub_1A8A75048();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = (void *)(a3 + 16 * v7);
      if (*v9 != a1 || v9[1] != a2)
      {
        do
        {
          if (sub_1A8A78588()) {
            break;
          }
          sub_1A8A75068();
          uint64_t v11 = sub_1A8A75048();
          if (v12) {
            break;
          }
          uint64_t v13 = (void *)(a3 + 16 * v11);
        }
        while (*v13 != a1 || v13[1] != a2);
      }
    }
  }
}

void sub_1A884937C()
{
  OUTLINED_FUNCTION_115_2();
  OUTLINED_FUNCTION_0_11();
  OUTLINED_FUNCTION_98_3();
  sub_1A8A787C8();
  OUTLINED_FUNCTION_146_1();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_188_1();
    uint64_t v4 = OUTLINED_FUNCTION_187_1();
    OUTLINED_FUNCTION_153_2(v4, v5, v6, v7, v8, v9, v10, v11, v33, v35, v37, v0 + 24, v40, v42, v44, v46, v48, v50, v52,
      v54,
      v55,
      v57,
      v58,
      v60,
      v61,
      v63,
      v64,
      v65,
      v66,
      v67);
    if ((v12 & 1) == 0)
    {
      OUTLINED_FUNCTION_97_3();
      do
      {
        OUTLINED_FUNCTION_213();
        if (v13)
        {
          OUTLINED_FUNCTION_160_1();
          BOOL v13 = v13 && v2 == v38;
          BOOL v14 = v13 && v1 == v36;
          if (v14 && v0 == v41) {
            break;
          }
          uint64_t v16 = OUTLINED_FUNCTION_0_11();
          uint64_t v0 = 24;
          if (!OUTLINED_FUNCTION_114_3(v16, v17, v18, v19, v20, v21, v22, v23, v34, v36, v38, v39)) {
            break;
          }
        }
        uint64_t v24 = sub_1A8A75068();
        OUTLINED_FUNCTION_118_2(v24, v25, v26, v27, v28, v29, v30, v31, v34, v36, v38, (uint64_t)v39, v41, v43, v45, v47, v49, v51, v53,
          v56,
          v59,
          v62);
      }
      while ((v32 & 1) == 0);
    }
  }
}

uint64_t sub_1A884946C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A8A787C8();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A8A75018();
    uint64_t v10 = sub_1A8A75048();
    uint64_t v11 = v10;
    if ((v12 & 1) == 0)
    {
      BOOL v13 = (void *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if (sub_1A8A78588()) {
            break;
          }
          sub_1A8A75068();
          uint64_t v15 = sub_1A8A75048();
          uint64_t v11 = v15;
          if (v16) {
            break;
          }
          uint64_t v17 = (void *)(a3 + 16 * v15);
        }
        while (*v17 != a1 || v17[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

uint64_t sub_1A88495E0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = (void *)result;
  uint64_t v8 = *a4;
  uint64_t v9 = a4[1];
  if (a3)
  {
    swift_retain();
    sub_1A8849220(v8, v9, (uint64_t)v6);
    uint64_t v11 = v10;
    char v13 = v12;
    uint64_t v15 = v14;
    uint64_t result = swift_release();
    char v16 = v13 & 1;
  }
  else
  {
    if (!a2) {
      goto LABEL_11;
    }
    uint64_t result = *(void *)result;
    BOOL v17 = *v6 == v8 && v6[1] == v9;
    if (v17 || (uint64_t result = OUTLINED_FUNCTION_173_1(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      uint64_t v11 = 0;
      char v16 = 0;
      goto LABEL_12;
    }
    if (a2 == 1) {
      goto LABEL_11;
    }
    uint64_t result = v6[2];
    BOOL v18 = result == v8 && v6[3] == v9;
    if (v18 || (uint64_t result = OUTLINED_FUNCTION_173_1(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      char v16 = 0;
      uint64_t v11 = 1;
      goto LABEL_12;
    }
    if (a2 == 2)
    {
LABEL_11:
      uint64_t v15 = 0;
      uint64_t v11 = 0;
      char v16 = 1;
      goto LABEL_12;
    }
    uint64_t result = v6[4];
    BOOL v19 = result == v8 && v6[5] == v9;
    if (v19 || (uint64_t result = OUTLINED_FUNCTION_173_1(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      char v16 = 0;
      uint64_t v11 = 2;
    }
    else
    {
      uint64_t v20 = v6 + 7;
      uint64_t v21 = 2;
      uint64_t v22 = 3;
      while (1)
      {
        char v16 = a2 == v22;
        if (a2 == v22)
        {
          uint64_t v15 = 0;
          uint64_t v11 = 0;
          goto LABEL_12;
        }
        uint64_t v23 = v21 + 1;
        uint64_t result = *(v20 - 1);
        if (result == v8 && *v20 == v9) {
          break;
        }
        uint64_t v25 = v23;
        uint64_t v11 = v22;
        uint64_t result = sub_1A8A78588();
        uint64_t v15 = 0;
        uint64_t v22 = v11 + 1;
        v20 += 2;
        uint64_t v21 = v25;
        if (result) {
          goto LABEL_12;
        }
      }
      uint64_t v15 = 0;
      uint64_t v11 = v23;
    }
  }
LABEL_12:
  *(void *)a5 = v11;
  *(unsigned char *)(a5 + 8) = v16;
  *(void *)(a5 + 16) = v15;
  return result;
}

uint64_t sub_1A88497A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = a2;
  uint64_t v6 = *((unsigned int *)a4 + 2);
  int v7 = *((_DWORD *)a4 + 4);
  uint64_t v8 = *((unsigned __int16 *)a4 + 10);
  uint64_t v9 = *((unsigned __int8 *)a4 + 22);
  if (a3)
  {
    uint64_t v10 = a5;
    swift_retain();
    sub_1A884937C();
    uint64_t v12 = v11;
    char v14 = v13;
    uint64_t v5 = v15;
    uint64_t result = swift_release();
    a5 = v10;
    char v16 = v14 & 1;
  }
  else if (a2)
  {
    uint64_t v30 = a5;
    uint64_t v12 = 0;
    uint64_t v17 = (*((_DWORD *)a4 + 3) - v6);
    uint64_t v36 = *a4;
    char v32 = (void *)(*a4 + 24);
    int v33 = *((unsigned __int16 *)a4 + 10);
    BOOL v18 = (unsigned __int8 *)(result + 22);
    uint64_t v31 = (v9 | (v8 << 8)) + v6;
    int v35 = *((_DWORD *)a4 + 4);
    while (1)
    {
      uint64_t v19 = *(unsigned int *)(v18 - 14);
      uint64_t v20 = *(unsigned int *)(v18 - 10);
      if (v20 - v19 == v17)
      {
        uint64_t v21 = *(void *)(v18 - 22);
        uint64_t v22 = *((unsigned __int16 *)v18 - 1);
        uint64_t v23 = *v18;
        BOOL v24 = *(_DWORD *)(v18 - 6) == v7 && v22 == v8;
        BOOL v25 = v24 && v23 == v9;
        if (v25 && v21 == v36) {
          break;
        }
        uint64_t v27 = v9;
        uint64_t v28 = v17;
        swift_beginAccess();
        uint64_t v29 = (const void *)(*(void *)(v21 + 24) + (v23 | (v22 << 8)) + v19);
        OUTLINED_FUNCTION_0_11();
        uint64_t result = memcmp(v29, (const void *)(*v32 + v31), v20 - v19);
        uint64_t v17 = v28;
        uint64_t v9 = v27;
        LODWORD(v8) = v33;
        uint64_t v5 = a2;
        int v7 = v35;
        if (!result) {
          break;
        }
      }
      v18 += 24;
      if (v5 == ++v12)
      {
        uint64_t v5 = 0;
        uint64_t v12 = 0;
        char v16 = 1;
        goto LABEL_21;
      }
    }
    uint64_t v5 = 0;
    char v16 = 0;
LABEL_21:
    a5 = v30;
  }
  else
  {
    uint64_t v12 = 0;
    char v16 = 1;
  }
  *(void *)a5 = v12;
  *(unsigned char *)(a5 + 8) = v16;
  *(void *)(a5 + 16) = v5;
  return result;
}

uint64_t sub_1A884998C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A88499CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A8849A04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A8849A44()
{
  return sub_1A87F9F8C();
}

uint64_t sub_1A8849A60(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1A8849AA0()
{
}

uint64_t *sub_1A8849ABC(uint64_t *a1)
{
  return a1;
}

void sub_1A8849AF0()
{
}

void sub_1A8849B0C()
{
}

void sub_1A8849B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A883E5BC(a1, a2, a3, *(void *)(v3 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, double))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 16));
}

void sub_1A8849B48()
{
}

void sub_1A8849B64()
{
  OUTLINED_FUNCTION_1_4();
  sub_1A8814F10(v0, v1, v2);
}

uint64_t sub_1A8849B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A8849BE8()
{
  OUTLINED_FUNCTION_1_4();
  sub_1A8801BBC(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A8849C04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 >> 1 != 0xFFFFFFFF) {
    return sub_1A86FD584(result, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_1A8849C18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5 != 251) {
    return sub_1A8849C70(result, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1A86FD51C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A86FD56C);
  }
  return result;
}

uint64_t sub_1A8849C70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if ((a5 & 0xFC | 2) != 0xFE)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

double sub_1A8849CF8()
{
  OUTLINED_FUNCTION_1_4();
  return sub_1A880170C(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1A8849D14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A8849D4C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6();
  uint64_t v4 = OUTLINED_FUNCTION_164();
  v5(v4);
  return a2;
}

uint64_t sub_1A8849DA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1A8849E00(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void type metadata accessor for ParseBuffer()
{
}

unint64_t sub_1A8849E68()
{
  unint64_t result = qword_1E974DD78;
  if (!qword_1E974DD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DD78);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_69()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_3_57()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_57()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_40()
{
  return v0;
}

void OUTLINED_FUNCTION_10_39()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

uint64_t OUTLINED_FUNCTION_11_35()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_12_36()
{
  return v0;
}

void OUTLINED_FUNCTION_13_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_15_28()
{
  return v0;
}

void OUTLINED_FUNCTION_16_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  *(void *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v12;
  *(_WORD *)(v11 + 20) = v13;
  *(unsigned char *)(v11 + 22) = a11;
}

uint64_t OUTLINED_FUNCTION_19_23()
{
  return v0;
}

void OUTLINED_FUNCTION_21_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  *(void *)(v15 + 8) = v16;
  *(_DWORD *)(v15 + 16) = a15;
  *(_WORD *)(v15 + 20) = a14;
  *(unsigned char *)(v15 + 22) = a12;
}

uint64_t OUTLINED_FUNCTION_22_19()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_23_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_15()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_26_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_27_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_29_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_30_11()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_31_13()
{
  return v0;
}

void OUTLINED_FUNCTION_33_10(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_34_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_12()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_37_11()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_38_9(uint64_t a1, void *a2)
{
  *a2 = v2;
}

void OUTLINED_FUNCTION_40_10()
{
  JUMPOUT(0x1AD0DF7E0);
}

void OUTLINED_FUNCTION_45_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, __int16 a10, __int16 a11)
{
  *(void *)uint64_t v11 = v12;
  *(void *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v13;
  *(_WORD *)(v11 + 20) = a11;
  *(unsigned char *)(v11 + 22) = a9;
}

void OUTLINED_FUNCTION_49_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_51_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_54_5()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_57_7()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_58_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  *(void *)uint64_t v15 = v16;
  *(void *)(v15 + 8) = v17;
  *(_DWORD *)(v15 + 16) = a15;
  *(_WORD *)(v15 + 20) = a14;
  *(unsigned char *)(v15 + 22) = a12;
}

void OUTLINED_FUNCTION_59_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14)
{
  *(void *)uint64_t v14 = v15;
  *(void *)(v14 + 8) = v16;
  *(_DWORD *)(v14 + 16) = a14;
  *(_WORD *)(v14 + 20) = a13;
  *(unsigned char *)(v14 + 22) = a11;
}

uint64_t OUTLINED_FUNCTION_61_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1A8821098(v12, v13, v14, v16, v11, v15, a11);
}

uint64_t OUTLINED_FUNCTION_63_7()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_64_6()
{
  sub_1A882CD9C();
}

void OUTLINED_FUNCTION_65_7()
{
  sub_1A882CD9C();
}

void OUTLINED_FUNCTION_66_7()
{
  sub_1A882CD9C();
}

uint64_t OUTLINED_FUNCTION_69_4()
{
  return v0;
}

void OUTLINED_FUNCTION_70_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14)
{
  *(void *)(v14 + 8) = v15;
  *(_DWORD *)(v14 + 16) = a14;
  *(_WORD *)(v14 + 20) = a13;
  *(unsigned char *)(v14 + 22) = a11;
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_75_2(uint64_t a1, void *a2)
{
  *a2 = v2;
}

void OUTLINED_FUNCTION_76_3(uint64_t a1, void *a2)
{
  *a2 = v2;
}

void OUTLINED_FUNCTION_77_3()
{
  sub_1A882CD9C();
}

void OUTLINED_FUNCTION_78_4()
{
  sub_1A882CD9C();
}

uint64_t OUTLINED_FUNCTION_79_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_84_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_86_4()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_89_3(uint64_t a1, void *a2)
{
  *a2 = v2;
}

void OUTLINED_FUNCTION_90_4()
{
  sub_1A882CD9C();
}

void OUTLINED_FUNCTION_92_3(uint64_t a1, void *a2)
{
  *a2 = 0x6E776F6E6B6E55;
  a2[1] = 0xE700000000000000;
}

uint64_t *OUTLINED_FUNCTION_95_2()
{
  return sub_1A883BFCC(v0, v2, v1, 1);
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_98_3()
{
  return sub_1A8A78748();
}

uint64_t OUTLINED_FUNCTION_102_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_105_3()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_107_2()
{
  return v0;
}

void OUTLINED_FUNCTION_108_3(void *a1@<X1>, uint64_t a2@<X8>)
{
  a1[2] = a2;
  a1[3] = (v2 - 32) | 0x8000000000000000;
  a1[4] = 110;
}

uint64_t OUTLINED_FUNCTION_109_3()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_110_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_111_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_113_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)uint64_t v13 = v14;
  *(void *)(v13 + 8) = v15;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_114_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v19 = (const void *)(*(void *)(v12 + 24) + (v16 | (v17 << 8)) + v13);
  uint64_t v20 = (const void *)(*a12 + v14);
  return memcmp(v19, v20, v15 - v13);
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  return sub_1A8A78738();
}

void OUTLINED_FUNCTION_116_3()
{
  sub_1A881963C();
}

uint64_t OUTLINED_FUNCTION_117_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1A8837B90(v9, v14, v10, v13, v8, v12, v11, a8);
}

uint64_t OUTLINED_FUNCTION_118_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, long long a20,long long a21,char a22)
{
  *(_OWORD *)(v22 - 160) = a19;
  *(_OWORD *)(v22 - 144) = a20;
  *(_OWORD *)(v22 - 128) = a21;
  *(unsigned char *)(v22 - 112) = a22;
  return sub_1A8A75048();
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  return v0;
}

void OUTLINED_FUNCTION_120_2(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_124_2()
{
  return v0;
}

void OUTLINED_FUNCTION_125_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12)
{
  *(void *)uint64_t v13 = v14;
  *(void *)(v13 + 8) = v15;
  *(_DWORD *)(v13 + 16) = v12;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t OUTLINED_FUNCTION_126_2(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_WORD *)(v3 + 20) = WORD2(a3);
  *(unsigned char *)(v3 + 22) = BYTE6(a3);
  return result;
}

void OUTLINED_FUNCTION_127_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  *(void *)uint64_t v16 = v15;
  *(void *)(v16 + 8) = v17;
  *(_DWORD *)(v16 + 16) = a15;
  *(_WORD *)(v16 + 20) = a14;
  *(unsigned char *)(v16 + 22) = a12;
}

void OUTLINED_FUNCTION_129_2()
{
  sub_1A882CD9C();
}

void OUTLINED_FUNCTION_130_2()
{
  sub_1A882CD9C();
}

void OUTLINED_FUNCTION_131_2()
{
  sub_1A882CD9C();
}

uint64_t OUTLINED_FUNCTION_133_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_138_2()
{
  return 34;
}

uint64_t OUTLINED_FUNCTION_140_1()
{
  return v0;
}

void OUTLINED_FUNCTION_141_2()
{
  sub_1A882CD9C();
}

uint64_t OUTLINED_FUNCTION_142_2()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_143_2()
{
  return swift_release();
}

void OUTLINED_FUNCTION_144_2()
{
  *(void *)(v0 + 8) = v4;
  *(_DWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 20) = v2;
  *(unsigned char *)(v0 + 22) = v3;
}

uint64_t OUTLINED_FUNCTION_145_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_152_2()
{
  return swift_retain();
}

__n128 OUTLINED_FUNCTION_153_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,long long a30)
{
  return (__n128)a30;
}

uint64_t OUTLINED_FUNCTION_155_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_156_0()
{
  return sub_1A8A77DC8();
}

uint64_t OUTLINED_FUNCTION_157_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t OUTLINED_FUNCTION_158_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_159_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_162_1()
{
  return sub_1A8A767E8();
}

uint64_t OUTLINED_FUNCTION_163_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_164_1()
{
  return v0;
}

id OUTLINED_FUNCTION_165_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return v16;
}

uint64_t OUTLINED_FUNCTION_166_1()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_167_1()
{
  return 0;
}

void OUTLINED_FUNCTION_168_1()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

uint64_t OUTLINED_FUNCTION_169_1()
{
  return sub_1A8A767E8();
}

void OUTLINED_FUNCTION_171_1(uint64_t a1, uint64_t a2)
{
  sub_1A882CE98(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_173_1()
{
  return sub_1A8A78588();
}

uint64_t OUTLINED_FUNCTION_174_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t OUTLINED_FUNCTION_177_0(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  return sub_1A8A767E8();
}

id OUTLINED_FUNCTION_180_1()
{
  *(void *)(v1 - 88) = v0;
  return v0;
}

void OUTLINED_FUNCTION_182_1()
{
  *(void *)(v0 + 8) = v3;
  *(_DWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 20) = v2;
}

void OUTLINED_FUNCTION_183_1()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  return v0;
}

void OUTLINED_FUNCTION_185_1()
{
  sub_1A882CE98(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_186_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_187_1()
{
  return sub_1A8A75048();
}

uint64_t OUTLINED_FUNCTION_188_1()
{
  return sub_1A8A75018();
}

uint64_t OUTLINED_FUNCTION_192()
{
  return v0;
}

void OUTLINED_FUNCTION_195(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_196()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_197()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_203()
{
  return swift_dynamicCast();
}

id OUTLINED_FUNCTION_204()
{
  *(void *)(v1 - 8) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_207(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_210()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_211()
{
  return v0;
}

void OUTLINED_FUNCTION_212()
{
  sub_1A882CE98(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_214()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_217()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_219()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_220()
{
  return v0;
}

void OUTLINED_FUNCTION_221()
{
  sub_1A882CE98(v0, v2, v1);
}

id OUTLINED_FUNCTION_222(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return v16;
}

uint64_t OUTLINED_FUNCTION_225()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_226()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A884B520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A884BCAC(a1, a2, a3, a4);
}

#error "1A884B5DC: call analysis failed (funcsize=68)"

uint64_t sub_1A884B690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A884BA20(a1, a2, a3, a4);
}

uint64_t sub_1A884B6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A884BCAC(a1, a2, a3, a4);
}

void sub_1A884B730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_28_14(a1, a2, a3, a4, a5);
  int v8 = sub_1A882F308();
  if (v6)
  {
    OUTLINED_FUNCTION_58_7(v8, v9, v10, v11, v12, v13, v14, v15, v26, v28, v30, v32, v34, v36, v38, (uint64_t)v40);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F38);
    if (OUTLINED_FUNCTION_44_7())
    {

LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_45_9();
      sub_1A882F308();
      return;
    }

    OUTLINED_FUNCTION_58_7(v16, v17, v18, v19, v20, v21, v22, v23, v27, v29, v31, v33, v35, v37, v39, (uint64_t)v41);
    if (OUTLINED_FUNCTION_44_7())
    {

      OUTLINED_FUNCTION_62_6();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v24 = *(void *)(v7 + 32);
    long long v25 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v25;
    *(void *)(v5 + 32) = v24;
  }
}

#error "1A884B878: call analysis failed (funcsize=49)"

uint64_t sub_1A884B8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A884C208(a1, a2, a3, a4);
}

uint64_t sub_1A884B944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A884C038(a1, a2, a3, a4);
}

#error "1A884B9C0: call analysis failed (funcsize=14)"

uint64_t sub_1A884B9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A884BF5C(a1, a2, a3, a4);
}

#error "1A884BA78: call analysis failed (funcsize=55)"

#error "1A884BB5C: call analysis failed (funcsize=49)"

#error "1A884BC2C: call analysis failed (funcsize=50)"

#error "1A884BD04: call analysis failed (funcsize=53)"

void sub_1A884BD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_28_14(a1, a2, a3, a4, a5);
  int v8 = sub_1A8834600();
  if (v6)
  {
    OUTLINED_FUNCTION_58_7(v8, v9, v10, v11, v12, v13, v14, v15, v26, v28, v30, v32, v34, v36, v38, (uint64_t)v40);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F38);
    if (OUTLINED_FUNCTION_44_7())
    {

LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_45_9();
      sub_1A8834600();
      return;
    }

    OUTLINED_FUNCTION_58_7(v16, v17, v18, v19, v20, v21, v22, v23, v27, v29, v31, v33, v35, v37, v39, (uint64_t)v41);
    if (OUTLINED_FUNCTION_44_7())
    {

      OUTLINED_FUNCTION_62_6();
      goto LABEL_6;
    }
  }
  else
  {
    int v24 = *(_DWORD *)(v7 + 32);
    long long v25 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v25;
    *(_DWORD *)(v5 + 32) = v24;
  }
}

#error "1A884BED4: call analysis failed (funcsize=52)"

#error "1A884BFB4: call analysis failed (funcsize=52)"

#error "1A884C090: call analysis failed (funcsize=52)"

void sub_1A884C114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_28_14(a1, a2, a3, a4, a5);
  int v8 = sub_1A8837AA0();
  if (v6)
  {
    OUTLINED_FUNCTION_58_7(v8, v9, v10, v11, v12, v13, v14, v15, v26, v28, v30, v32, v34, v36, v38, (uint64_t)v40);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F38);
    if (OUTLINED_FUNCTION_44_7())
    {

LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_45_9();
      sub_1A8837AA0();
      return;
    }

    OUTLINED_FUNCTION_58_7(v16, v17, v18, v19, v20, v21, v22, v23, v27, v29, v31, v33, v35, v37, v39, (uint64_t)v41);
    if (OUTLINED_FUNCTION_44_7())
    {

      OUTLINED_FUNCTION_62_6();
      goto LABEL_6;
    }
  }
  else
  {
    char v24 = *(unsigned char *)(v7 + 32);
    long long v25 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v25;
    *(unsigned char *)(v5 + 32) = v24;
  }
}

#error "1A884C260: call analysis failed (funcsize=52)"

#error "1A884C350: call analysis failed (funcsize=70)"

#error "1A884C4C8: call analysis failed (funcsize=107)"

#error "1A884C694: call analysis failed (funcsize=107)"

#error "1A884C860: call analysis failed (funcsize=107)"

#error "1A884CA2C: call analysis failed (funcsize=106)"

#error "1A884CBF4: call analysis failed (funcsize=106)"

#error "1A884CDBC: call analysis failed (funcsize=106)"

#error "1A884CF84: call analysis failed (funcsize=106)"

#error "1A884D14C: call analysis failed (funcsize=106)"

#error "1A884D314: call analysis failed (funcsize=108)"

#error "1A884D4E4: call analysis failed (funcsize=106)"

#error "1A884D6AC: call analysis failed (funcsize=106)"

#error "1A884D874: call analysis failed (funcsize=106)"

#error "1A884DA3C: call analysis failed (funcsize=107)"

#error "1A884DC08: call analysis failed (funcsize=106)"

#error "1A884DDD0: call analysis failed (funcsize=106)"

#error "1A884DF98: call analysis failed (funcsize=106)"

#error "1A884E160: call analysis failed (funcsize=109)"

#error "1A884E334: call analysis failed (funcsize=107)"

#error "1A884E500: call analysis failed (funcsize=108)"

#error "1A884E6D0: call analysis failed (funcsize=107)"

#error "1A884E89C: call analysis failed (funcsize=107)"

#error "1A884EA68: call analysis failed (funcsize=108)"

#error "1A884EC38: call analysis failed (funcsize=107)"

#error "1A884EE04: call analysis failed (funcsize=108)"

uint64_t sub_1A884EF18(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a7;
  uint64_t v9 = a6;
  uint64_t v10 = a5;
  uint64_t v31 = *(void *)(result + 16);
  if (!v31)
  {
LABEL_14:
    sub_1A87A3EF0();
    swift_allocError();
    *uint64_t v26 = 0xD000000000000019;
    v26[1] = 0x80000001A8B3B8D0;
    v26[2] = v10;
    v26[3] = v9;
    v26[4] = v8;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return swift_willThrow();
  }
  uint64_t v32 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
    return result;
  }
  int v11 = v7;
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a3 + 1;
  uint64_t v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v14 + 16 * v15 + 32);
    if (v16 >= a4)
    {
      sub_1A87EA600();
      int v11 = (void *)swift_allocError();
      *int v23 = a4;
      swift_retain();
    }
    else
    {
      uint64_t v17 = *a2;
      uint64_t v18 = a2[1];
      int v19 = *((_DWORD *)a2 + 4);
      __int16 v20 = *((_WORD *)a2 + 10);
      uint64_t v21 = a4;
      char v22 = *((unsigned char *)a2 + 22);
      swift_retain();
      swift_retain();
      sub_1A8851784();
      if (!v11)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      *a2 = v17;
      a2[1] = v18;
      *((_DWORD *)a2 + 4) = v19;
      *((_WORD *)a2 + 10) = v20;
      *((unsigned char *)a2 + 22) = v22;
      uint64_t v14 = v30;
      a4 = v21;
      uint64_t v16 = v32;
    }
    swift_willThrow();
    uint64_t v33 = v11;
    id v24 = v11;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F38);
    if (!swift_dynamicCast()) {
      break;
    }

LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    int v11 = 0;
    if (v31 == ++v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = a7;
      uint64_t v9 = a6;
      uint64_t v10 = a5;
      goto LABEL_14;
    }
  }

  uint64_t v33 = v11;
  id v25 = v11;
  if (swift_dynamicCast())
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1A884F210@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A881A3E4(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A884F240(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  v5[0] = a1;
  v5[1] = a2;
  a3(&v4, v5);
  return v4;
}

uint64_t ExceededMaximumMessageAttributesError.actualCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*ExceededMaximumMessageAttributesError.actualCount.modify())(void)
{
  return nullsub_1;
}

uint64_t ExceededMaximumMessageAttributesError.maximumCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

double (*ExceededMaximumMessageAttributesError.maximumCount.modify())(void)
{
  return nullsub_1;
}

uint64_t ExceededMaximumBodySizeError.actualCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*ExceededMaximumBodySizeError.actualCount.modify())(void)
{
  return nullsub_1;
}

uint64_t ExceededMaximumBodySizeError.maximumCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ExceededMaximumBodySizeError.maximumCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*ExceededMaximumBodySizeError.maximumCount.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A884F334(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    sub_1A8A78768();
  }
  return sub_1A8A78768();
}

BOOL sub_1A884F374(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0) {
      return a1 == a3;
    }
    return 0;
  }
  return (a4 & 1) != 0;
}

uint64_t sub_1A884F39C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1A8A78768();
  }
  sub_1A8A78768();
  return sub_1A8A787C8();
}

uint64_t sub_1A884F3FC(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a4)
  {
    if (a4 != 1) {
      sub_1A8A78768();
    }
    goto LABEL_7;
  }
  sub_1A8A78768();
  if ((a3 & 1) == 0) {
LABEL_7:
  }
    sub_1A8A78768();
  return sub_1A8A78768();
}

uint64_t sub_1A884F478(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (a6) {
      return 0;
    }
    if (a2)
    {
      if ((a5 & 1) == 0) {
        return 0;
      }
    }
    else if ((a5 & 1) != 0 || a1 != a4)
    {
      return 0;
    }
    return 1;
  }
  BOOL v7 = a6 == 1 && a1 == a4;
  BOOL v10 = a6 == 2 && a1 == a4 && a2 == a5;
  if (a3 == 1) {
    return v7;
  }
  else {
    return v10;
  }
}

uint64_t sub_1A884F4DC(uint64_t a1, char a2, char a3)
{
  sub_1A8A78738();
  sub_1A884F3FC((uint64_t)v7, a1, a2, a3);
  return sub_1A8A787C8();
}

uint64_t sub_1A884F53C()
{
  return sub_1A884F39C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1A884F548(uint64_t a1)
{
  return sub_1A884F334(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_1A884F554()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_1A8A78738();
  if ((v1 & 1) == 0) {
    sub_1A8A78768();
  }
  sub_1A8A78768();
  return sub_1A8A787C8();
}

BOOL sub_1A884F5B4(uint64_t a1, uint64_t a2)
{
  return sub_1A884F374(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_1A884F5D0()
{
  return sub_1A884F4DC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1A884F5DC(uint64_t a1)
{
  return sub_1A884F3FC(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_1A884F5E8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1A8A78738();
  sub_1A884F3FC((uint64_t)v5, v1, v2, v3);
  return sub_1A8A787C8();
}

uint64_t sub_1A884F640(uint64_t a1, uint64_t a2)
{
  return sub_1A884F478(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

double ResponseParser.init(bufferLimit:messageAttributeLimit:bodySizeLimit:literalSizeLimit:parsedStringCache:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  if (a5)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a5;
    *(void *)(v14 + 24) = a6;
    uint64_t v15 = sub_1A884F790;
  }
  else
  {
    uint64_t v15 = sub_1A884F210;
    uint64_t v14 = 0;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v14;
  *(void *)a7 = sub_1A884F788;
  *(void *)(a7 + 8) = v16;
  *(void *)(a7 + 16) = a4;
  *(void *)(a7 + 24) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a7 + 32) = a1;
  *(void *)(a7 + 40) = a2;
  *(void *)(a7 + 48) = a3;
  double result = 0.0;
  *(_OWORD *)(a7 + 56) = xmmword_1A8AD8FE0;
  *(unsigned char *)(a7 + 72) = 0;
  return result;
}

uint64_t sub_1A884F750()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A884F788(uint64_t a1, uint64_t a2)
{
  return sub_1A884F240(a1, a2, *(void (**)(uint64_t *__return_ptr, void *))(v2 + 16));
}

uint64_t sub_1A884F790@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

void ResponseParser.parseResponseStream(buffer:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *(void *)a1;
  unsigned int v8 = *(_DWORD *)(a1 + 8);
  unsigned int v7 = *(_DWORD *)(a1 + 12);
  unsigned int v9 = *(_DWORD *)(a1 + 16);
  __int16 v10 = *(_WORD *)(a1 + 20);
  LOBYTE(v11) = *(unsigned char *)(a1 + 22);
  uint64_t v35 = *(void *)a1;
  unsigned int v36 = v8;
  unsigned int v37 = v7;
  unsigned int v38 = v9;
  __int16 v39 = v10;
  char v40 = v11;
  uint64_t v12 = *(void *)(v2 + 56);
  uint64_t v13 = *(void *)(v2 + 64);
  if (!*(unsigned char *)(v2 + 72)) {
    goto LABEL_7;
  }
  unsigned int v9 = v8;
  unsigned int v11 = v7;
  if (*(unsigned char *)(v2 + 72) == 1)
  {
    swift_retain();
    sub_1A884FE4C((uint64_t)&v35, v12, a2);
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_10;
    }
    uint64_t v6 = type metadata accessor for ResponseOrContinuationRequest(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = OUTLINED_FUNCTION_61_7();
    __swift_storeEnumTagSinglePayload(v14, v15, v16, v6);
    unsigned int v7 = v36;
    unsigned int v17 = v11 - v37 + v36;
    if (__CFADD__(v9, v11 - (v9 + v37) + v36))
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v17) {
      goto LABEL_19;
    }
    __break(1u);
LABEL_7:
    unsigned int v33 = v8;
    unsigned int v34 = v7;
    swift_retain_n();
    sub_1A885024C(&v35, 1, 100, v2, (uint64_t)a2);
    uint64_t v2 = v3;
    if (v3)
    {
      swift_release();
      uint64_t v35 = v6;
      unsigned int v36 = v33;
      unsigned int v37 = v34;
      unsigned int v38 = v9;
      __int16 v39 = v10;
      char v40 = v11;
      swift_willThrow();
      goto LABEL_10;
    }
    swift_release();
    type metadata accessor for ResponseOrContinuationRequest(0);
    uint64_t v25 = OUTLINED_FUNCTION_61_7();
    __swift_storeEnumTagSinglePayload(v25, v26, v27, v28);
    unsigned int v17 = v34 - v37 + v36;
    if (__CFADD__(v33, v34 - (v33 + v37) + v36))
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v34 < v17)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
LABEL_19:
    *(_DWORD *)(a1 + 8) = v17;
    goto LABEL_20;
  }
  swift_retain();
  sub_1A884FACC((uint64_t)&v35, v12, v13, (uint64_t)a2);
  uint64_t v2 = v3;
  if (v3)
  {
LABEL_10:
    id v41 = (id)v2;
    id v18 = (id)v2;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F38);
    if (swift_dynamicCast())
    {

      uint64_t v19 = type metadata accessor for ResponseOrContinuationRequest(0);
      __swift_storeEnumTagSinglePayload((uint64_t)a2, 1, 1, v19);

      OUTLINED_FUNCTION_56_7();
      if (v22)
      {
        __break(1u);
      }
      else if (v20 >= v21)
      {
        *(_DWORD *)(a1 + 8) = v21;
LABEL_20:
        swift_release();
        return;
      }
      __break(1u);
    }
    else
    {

      OUTLINED_FUNCTION_56_7();
      if (!v22)
      {
        if (v23 >= v24)
        {
          *(_DWORD *)(a1 + 8) = v24;
          swift_release();
          return;
        }
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v29 = type metadata accessor for ResponseOrContinuationRequest(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = OUTLINED_FUNCTION_61_7();
  __swift_storeEnumTagSinglePayload(v30, v31, v32, v29);
  swift_release();
  if (__CFADD__(v9, v36 - v9))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v11 >= v36)
  {
    *(_DWORD *)(a1 + 8) = v36;
    return;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1A884FACC@<X0>(uint64_t a1@<X0>, int64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v10 = type metadata accessor for Response(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v25 - v14;
  if (a2)
  {
    uint64_t result = sub_1A8838184(a1, 0, 100, a2);
    if (v5) {
      return result;
    }
    uint64_t v19 = (HIDWORD(v17) - v17);
    uint64_t v35 = a2 - v19;
    if (!__OFSUB__(a2, v19))
    {
      __src[0] = result;
      __src[1] = v17;
      int v32 = v18;
      __int16 v33 = WORD2(v18);
      char v34 = BYTE6(v18);
      sub_1A8800654((uint64_t)__src);
      sub_1A8795F00(__src, v12);
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = *(void *)(v4 + 56);
      a1 = *(void *)(v4 + 64);
      int v20 = *(unsigned __int8 *)(v4 + 72);
      if (v20 != 2 || v10 != a2 || a1 != a3)
      {
        while (1)
        {
          char v24 = v20;
          uint64_t v26 = 0;
          unint64_t v27 = 0xE000000000000000;
          swift_retain();
          sub_1A8A77DC8();
          uint64_t v29 = v26;
          unint64_t v30 = v27;
          sub_1A8A767E8();
          uint64_t v26 = v10;
          unint64_t v27 = a1;
          char v28 = v24;
LABEL_23:
          sub_1A8A78028();
          sub_1A8A780F8();
          __break(1u);
        }
      }
      *(void *)(v4 + 56) = v35;
      *(void *)(v4 + 64) = a3;
      *(unsigned char *)(v4 + 72) = 2;
      uint64_t v23 = (uint64_t)v12;
      return sub_1A88519C0(v23, a4, type metadata accessor for Response);
    }
    goto LABEL_21;
  }
  a1 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1A8A77DC8();
    uint64_t v29 = v26;
    unint64_t v30 = v27;
    sub_1A8A767E8();
    uint64_t v26 = v10;
    unint64_t v27 = a2;
    char v28 = (char)v12;
    goto LABEL_23;
  }
  sub_1A8800610(__src);
  sub_1A8795F00(__src, v15);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(void *)(v4 + 56);
  a2 = *(void *)(v4 + 64);
  LODWORD(v12) = *(unsigned __int8 *)(v4 + 72);
  if (v12 != 2 || v10 || a2 != a3) {
    goto LABEL_22;
  }
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 64) = 0;
  *(unsigned char *)(v4 + 72) = 0;
  uint64_t v23 = (uint64_t)v15;
  return sub_1A88519C0(v23, a4, type metadata accessor for Response);
}

uint64_t sub_1A884FE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  int v10 = *(_DWORD *)(a1 + 16);
  __int16 v11 = *(_WORD *)(a1 + 20);
  char v12 = *(unsigned char *)(a1 + 22);
  swift_retain();
  sub_1A88227D4(a1, 1, 100, v19);
  if (v4)
  {
    swift_release();
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(_DWORD *)(a1 + 16) = v10;
    *(_WORD *)(a1 + 20) = v11;
    *(unsigned char *)(a1 + 22) = v12;
    return swift_willThrow();
  }
  else
  {
    swift_release();
    __src[0] = v19[0];
    __src[1] = v19[1];
    int v16 = v20;
    __int16 v17 = v21;
    char v18 = v22;
    sub_1A8800654((uint64_t)__src);
    sub_1A8795F00(__src, a3);
    type metadata accessor for Response(0);
    uint64_t result = swift_storeEnumTagMultiPayload();
    if (*(unsigned char *)(v3 + 72) == 1 && *(void *)(v3 + 56) == a2)
    {
      *(void *)(v3 + 56) = 0;
      *(void *)(v3 + 64) = a2;
      *(unsigned char *)(v3 + 72) = 2;
    }
    else
    {
      swift_retain();
      sub_1A8A77DC8();
      sub_1A8A767E8();
      sub_1A8A78028();
      uint64_t result = sub_1A8A780F8();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A8850034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W4>, uint64_t *a5@<X5>, void *a6@<X8>)
{
  uint64_t v13 = *a5;
  uint64_t v12 = a5[1];
  uint64_t v14 = a5[2];
  uint64_t v15 = a5[3];
  swift_retain();
  if (a4)
  {
    __int16 v17 = &v20;
    sub_1A87FF488(a1, a2, a3, v13, v12, v14, v15, v16, v19, v20);
  }
  else
  {
    __int16 v17 = (uint64_t *)&v21;
    sub_1A880001C(a1, a2, a3, v13, v12, v14, v15, v16, v19, v20);
  }
  uint64_t result = swift_release();
  if (!v6)
  {
    sub_1A8795F00(v17, a6);
    type metadata accessor for ResponseParser._Response();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1A885012C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for ResponsePayload();
  MEMORY[0x1F4188790](v9 - 8);
  __int16 v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1A8809834(a1, a2, a3);
  uint64_t result = swift_release();
  if (!v4)
  {
    sub_1A88519C0((uint64_t)v11, a4, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
    type metadata accessor for ResponseParser._Response();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void sub_1A885024C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v63 = a5;
  uint64_t v62 = type metadata accessor for ResponseParser._Response();
  MEMORY[0x1F4188790](v62);
  __int16 v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v65 = (unint64_t)&v62 - v13;
  v85 = a1;
  uint64_t v14 = (uint64_t)a1;
  uint64_t v15 = a2;
  uint64_t v64 = a3;
  sub_1A882CE98(v14, a2, a3);
  if (v5) {

  }
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = a4;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = v65;
  sub_1A884C2E4((int)sub_1A8850D44, v21, (int)sub_1A8850D68, (int)v60, (int)v85, v15, v64, v19 + 15, 0x80000001A8B3AED0, 145, (uint64_t)sub_1A882D030, v61, v62, v63, v64, v65, v66, v67, v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81);
  sub_1A8850F78(v20, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A8853418(v20, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
    sub_1A88519C0((uint64_t)v11, v63, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
    type metadata accessor for Response(0);
LABEL_39:
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ResponseOrContinuationRequest(0);
    swift_storeEnumTagMultiPayload();
    return;
  }
  sub_1A8795F00(v11, v82);
  sub_1A8795F00(v82, v83);
  switch(sub_1A87A9F60((uint64_t)v83))
  {
    case 1u:
      uint64_t v45 = (int *)sub_1A87AA04C((uint64_t)v83);
      uint64_t v24 = v17 + 56;
      unint64_t v20 = *(void *)(v17 + 64);
      LODWORD(v17) = *(unsigned __int8 *)(v17 + 72);
      if (v17 || (v20 & 1) == 0) {
        goto LABEL_50;
      }
      int v46 = *v45;
      *(void *)uint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      *(unsigned char *)(v24 + 16) = 0;
      sub_1A8853418(v65, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      LODWORD(v68) = v46;
      sub_1A88005A8((uint64_t)&v68);
      goto LABEL_38;
    case 2u:
      uint64_t v37 = sub_1A87AA04C((uint64_t)v83);
      uint64_t v24 = *(unsigned __int8 *)(v17 + 72);
      if (*(unsigned char *)(v17 + 72) || (uint64_t v24 = *(unsigned __int8 *)(v17 + 64), (v24 & 1) != 0))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        uint64_t v59 = *(void *)v24;
        uint64_t v68 = 0;
        id v69 = (id)0xE000000000000000;
        sub_1A8A77DC8();
        uint64_t v66 = v68;
        uint64_t v67 = (uint64_t)v69;
        sub_1A8A767E8();
        uint64_t v68 = v59;
        id v69 = (id)v20;
        LOBYTE(v70) = v17;
        sub_1A8A78028();
        LODWORD(v61) = 0;
        v60[2] = 110;
        sub_1A8A780F8();
        __break(1u);
        JUMPOUT(0x1A8850A90);
      }
      uint64_t v38 = *(void *)(v17 + 40);
      uint64_t v39 = *(void *)(v17 + 56);
      if (v39 < v38)
      {
        char v40 = (void *)v37;
        *(void *)(v17 + 56) = v39 + 1;
        *(void *)(v17 + 64) = 0;
        *(unsigned char *)(v17 + 72) = 0;
        sub_1A8853418(v65, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
        sub_1A8795F00(v40, &v68);
        sub_1A8800640((uint64_t)&v68);
LABEL_38:
        sub_1A8795F00(&v68, (void *)v63);
        type metadata accessor for Response(0);
        goto LABEL_39;
      }
      sub_1A8850FDC();
      uint64_t v42 = (void *)swift_allocError();
      *long long v56 = v39;
      v56[1] = v38;
      swift_retain();
      swift_willThrow();
      sub_1A8853418(v65, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
LABEL_43:
      swift_release();
      sub_1A8851028((uint64_t)v82);
LABEL_44:
      uint64_t v57 = v64;
      v82[0] = v42;
      id v22 = v42;
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F38);
      if (swift_dynamicCast())
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(__dst, (const void *)v17, 0x49uLL);
        sub_1A8850F20((uint64_t)__dst);
        sub_1A8850D84(v85, v15, v57);
        sub_1A8850F4C((uint64_t)__dst);
      }

      return;
    case 3u:
      uint64_t v41 = sub_1A87AA04C((uint64_t)v83);
      uint64_t v27 = *(void *)v41;
      char v28 = *(void **)(v41 + 8);
      uint64_t v29 = *(void *)(v41 + 16);
      uint64_t v30 = *(void *)(v41 + 24);
      char v31 = *(unsigned char *)(v41 + 32);
      unint64_t v32 = *(void *)(v41 + 40);
      uint64_t v33 = *(void *)(v17 + 40);
      uint64_t v34 = *(void *)(v17 + 56);
      if ((v32 & 0x8000000000000000) == 0)
      {
        unint64_t v20 = *(void *)(v17 + 48);
        if (v32 >= v20) {
          goto LABEL_25;
        }
      }
      uint64_t v24 = *(unsigned __int8 *)(v17 + 72);
      if (*(unsigned char *)(v17 + 72)) {
        goto LABEL_49;
      }
      uint64_t v24 = *(void *)(v17 + 64);
      if (v24) {
        goto LABEL_49;
      }
      uint64_t v35 = v65;
      if (v34 >= v33) {
        goto LABEL_40;
      }
      *(void *)(v17 + 56) = v32;
      *(void *)(v17 + 64) = v34 + 1;
      char v36 = 2;
      goto LABEL_37;
    case 4u:
      uint64_t v26 = sub_1A87AA04C((uint64_t)v83);
      uint64_t v27 = *(void *)v26;
      char v28 = *(void **)(v26 + 8);
      uint64_t v29 = *(void *)(v26 + 16);
      uint64_t v30 = *(void *)(v26 + 24);
      char v31 = *(unsigned char *)(v26 + 32);
      unint64_t v32 = *(void *)(v26 + 40);
      uint64_t v33 = *(void *)(v17 + 40);
      uint64_t v34 = *(void *)(v17 + 56);
      if ((v32 & 0x8000000000000000) != 0 || (unint64_t v20 = *(void *)(v17 + 48), v32 < v20))
      {
        uint64_t v24 = *(unsigned __int8 *)(v17 + 72);
        if (*(unsigned char *)(v17 + 72)) {
          goto LABEL_48;
        }
        uint64_t v24 = *(void *)(v17 + 64);
        if (v24) {
          goto LABEL_48;
        }
        uint64_t v35 = v65;
        if (v34 < v33)
        {
          *(void *)(v17 + 56) = v34 + 1;
          *(void *)(v17 + 64) = 0;
          char v36 = 1;
LABEL_37:
          *(unsigned char *)(v17 + 72) = v36;
          uint64_t v49 = v35;
          uint64_t v50 = v27;
          uint64_t v51 = v28;
          uint64_t v52 = v29;
          uint64_t v53 = v30;
          char v54 = v31;
          sub_1A8853418(v49, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
          uint64_t v68 = v50;
          id v69 = v51;
          uint64_t v70 = v52;
          uint64_t v71 = v53;
          LOBYTE(v72) = v54;
          unint64_t v73 = v32;
          sub_1A88006CC((uint64_t)&v68);
          goto LABEL_38;
        }
LABEL_40:
        sub_1A8850FDC();
        uint64_t v42 = (void *)swift_allocError();
        *uint64_t v55 = v34;
        v55[1] = v33;
        swift_retain();
        swift_willThrow();
        uint64_t v44 = v35;
      }
      else
      {
LABEL_25:
        sub_1A88510F4();
        uint64_t v42 = (void *)swift_allocError();
        *uint64_t v43 = v32;
        v43[1] = v20;
        swift_retain();
        swift_willThrow();
        uint64_t v44 = v65;
      }
      sub_1A8853418(v44, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      goto LABEL_43;
    case 5u:
      uint64_t v24 = *(unsigned __int8 *)(v17 + 72);
      if (*(unsigned char *)(v17 + 72)) {
        goto LABEL_47;
      }
      uint64_t v24 = *(unsigned __int8 *)(v17 + 64);
      if (v24) {
        goto LABEL_47;
      }
      uint64_t v47 = *(void *)(v17 + 40);
      uint64_t v48 = *(void *)(v17 + 56);
      if (v48 < v47)
      {
        *(_OWORD *)(v17 + 56) = xmmword_1A8AD8FE0;
        *(unsigned char *)(v17 + 72) = 0;
        sub_1A8853418(v20, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
        sub_1A88510BC((uint64_t)&v68);
        goto LABEL_38;
      }
      sub_1A8850FDC();
      uint64_t v42 = (void *)swift_allocError();
      *uint64_t v58 = v48;
      v58[1] = v47;
      swift_retain();
      swift_willThrow();
      sub_1A8853418(v20, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      swift_release();
      goto LABEL_44;
    default:
      uint64_t v23 = (int *)sub_1A87AA04C((uint64_t)v83);
      uint64_t v24 = v17 + 56;
      unint64_t v20 = *(void *)(v17 + 64);
      LODWORD(v17) = *(unsigned __int8 *)(v17 + 72);
      if (v17 || (v20 & 1) == 0) {
        goto LABEL_50;
      }
      int v25 = *v23;
      *(void *)uint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      *(unsigned char *)(v24 + 16) = 0;
      sub_1A8853418(v65, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      LODWORD(v68) = v25;
      sub_1A87AA04C((uint64_t)&v68);
      goto LABEL_38;
  }
}

void type metadata accessor for ExceededMaximumMessageAttributesError()
{
}

void type metadata accessor for ExceededMaximumBodySizeError()
{
}

uint64_t initializeWithCopy for ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  return a1;
}

void *__swift_memcpy73_8_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ResponseParser(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseParser(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseParser()
{
}

uint64_t sub_1A8850C90(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A8850C98(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ResponseParser.Mode()
{
}

unint64_t sub_1A8850CB0()
{
  unint64_t result = qword_1E974DD80;
  if (!qword_1E974DD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DD80);
  }
  return result;
}

uint64_t type metadata accessor for ResponseParser._Response()
{
  uint64_t result = qword_1E9747850;
  if (!qword_1E9747850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A8850D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1A8850034(a1, a2, a3, *(unsigned char *)(v4 + 24), *(uint64_t **)(v4 + 32), a4);
}

uint64_t sub_1A8850D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A885012C(a1, a2, a3, a4);
}

uint64_t sub_1A8850D84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97410E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8AD8F20;
  uint64_t v9 = swift_allocObject();
  memcpy((void *)(v9 + 16), v4, 0x49uLL);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1A88511DC;
  *(void *)(v10 + 24) = v9;
  *(void *)(inited + 32) = sub_1A87F2220;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = swift_allocObject();
  memcpy((void *)(v11 + 16), v4, 0x49uLL);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1A88512C4;
  *(void *)(v12 + 24) = v11;
  *(void *)(inited + 48) = sub_1A87F73A0;
  *(void *)(inited + 56) = v12;
  sub_1A8850F20((uint64_t)v4);
  sub_1A8850F20((uint64_t)v4);
  sub_1A884EF18(inited, a1, a2, a3, 0xD000000000000020, 0x80000001A8B3AED0, 220);
  swift_setDeallocating();
  return sub_1A8858D98();
}

uint64_t sub_1A8850F20(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A8850F4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A8850F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponseParser._Response();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A8850FDC()
{
  unint64_t result = qword_1E974DD88;
  if (!qword_1E974DD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DD88);
  }
  return result;
}

uint64_t sub_1A8851028(uint64_t a1)
{
  sub_1A88520F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A871D360,
    (uint64_t (*)(void))sub_1A871D290);
  return a1;
}

void sub_1A88510BC(uint64_t a1)
{
  *(void *)a1 = 1;
  bzero((void *)(a1 + 8), 0xA8uLL);
  *(_WORD *)(a1 + 176) = 2560;
}

unint64_t sub_1A88510F4()
{
  unint64_t result = qword_1E974DD90;
  if (!qword_1E974DD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DD90);
  }
  return result;
}

void sub_1A8851140(uint64_t a1@<X8>)
{
  sub_1A881AC9C();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6 & 1;
    type metadata accessor for ResponseOrContinuationRequest(0);
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1A88511A4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A88511DC(uint64_t a1@<X8>)
{
}

void sub_1A88511F8(_OWORD *a1@<X8>)
{
  swift_retain();
  sub_1A8833AC0();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = *(_OWORD *)v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)&v4[9];
    type metadata accessor for Response(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ResponseOrContinuationRequest(0);
    swift_storeEnumTagMultiPayload();
  }
}

void sub_1A88512C4(_OWORD *a1@<X8>)
{
}

uint64_t sub_1A88512E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ResponsePayload();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = &__dst[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for ResponseParser._Response();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &__dst[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A8850F78(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A8795F00(v9, __dst);
    sub_1A8A78768();
    sub_1A87FF834(a1);
    return sub_1A8851028((uint64_t)__dst);
  }
  else
  {
    sub_1A88519C0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
    sub_1A8A78768();
    ResponsePayload.hash(into:)(a1);
    return sub_1A8853418((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
  }
}

uint64_t sub_1A8851450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponsePayload();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for ResponseParser._Response();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v20[-v11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDA8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = &v15[*(int *)(v16 + 56)];
  sub_1A8850F78(a1, (uint64_t)v15);
  sub_1A8850F78(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1A8850F78((uint64_t)v15, (uint64_t)v9);
    sub_1A8795F00(v9, v20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1A8795F00(v17, v21);
      char v18 = sub_1A87FFAC4(v20, v21);
      sub_1A8851028((uint64_t)v21);
      sub_1A8851028((uint64_t)v20);
LABEL_9:
      sub_1A8853418((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      return v18 & 1;
    }
    sub_1A8851028((uint64_t)v20);
  }
  else
  {
    sub_1A8850F78((uint64_t)v15, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1A88519C0((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      char v18 = static ResponsePayload.__derived_enum_equals(_:_:)((unint64_t)v12, (uint64_t)v6);
      sub_1A8853418((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      sub_1A8853418((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      goto LABEL_9;
    }
    sub_1A8853418((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
  }
  sub_1A8853478((uint64_t)v15);
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_1A88516FC()
{
  sub_1A8A78738();
  sub_1A88512E0((uint64_t)v1);
  return sub_1A8A787C8();
}

uint64_t sub_1A8851744()
{
  sub_1A8A78738();
  sub_1A88512E0((uint64_t)v1);
  return sub_1A8A787C8();
}

uint64_t sub_1A8851784()
{
  return sub_1A8851924();
}

double sub_1A885179C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *__return_ptr, uint64_t, void *)@<X3>, _OWORD *a5@<X8>)
{
  v8[0] = a2;
  v8[1] = a3;
  a4(&v9, a1, v8);
  if (!v5)
  {
    double result = *(double *)&v9;
    *a5 = v9;
  }
  return result;
}

uint64_t sub_1A88517E8()
{
  OUTLINED_FUNCTION_60_7();
  uint64_t result = v2();
  if (!v1) {
    void *v0 = v4;
  }
  return result;
}

uint64_t sub_1A8851820()
{
  return sub_1A88517E8();
}

double sub_1A885183C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *__return_ptr, uint64_t, void *)@<X3>, uint64_t a5@<X8>)
{
  v10[0] = a2;
  v10[1] = a3;
  a4(&v11, a1, v10);
  if (!v5)
  {
    uint64_t v8 = v12;
    char v9 = v13;
    double result = *(double *)&v11;
    *(_OWORD *)a5 = v11;
    *(void *)(a5 + 16) = v8;
    *(unsigned char *)(a5 + 24) = v9;
  }
  return result;
}

double sub_1A8851898@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *__return_ptr, uint64_t, void *)@<X3>, uint64_t a5@<X8>)
{
  v9[0] = a2;
  v9[1] = a3;
  a4(&v10, a1, v9);
  if (!v5)
  {
    char v8 = v11;
    double result = *(double *)&v10;
    *(_OWORD *)a5 = v10;
    *(unsigned char *)(a5 + 16) = v8;
  }
  return result;
}

double sub_1A88518EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A8851898(a1, a2, a3, *(void (**)(long long *__return_ptr, uint64_t, void *))(v4 + 16), a4);
}

double sub_1A8851908@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A885183C(a1, a2, a3, *(void (**)(long long *__return_ptr, uint64_t, void *))(v4 + 16), a4);
}

uint64_t sub_1A8851924()
{
  OUTLINED_FUNCTION_53_7();
  return v0();
}

uint64_t sub_1A8851950()
{
  return sub_1A8851A44();
}

double sub_1A885196C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  return sub_1A885179C(a1, a2, a3, *(void (**)(long long *__return_ptr, uint64_t, void *))(v4 + 16), a4);
}

uint64_t sub_1A8851988()
{
  OUTLINED_FUNCTION_59_6();
  uint64_t result = v2();
  if (!v1)
  {
    void *v0 = v4;
    v0[1] = v5;
  }
  return result;
}

uint64_t sub_1A88519C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A8851A28()
{
  return sub_1A8851988();
}

uint64_t sub_1A8851A44()
{
  OUTLINED_FUNCTION_59_6();
  uint64_t result = v2();
  if (!v1)
  {
    *(void *)uint64_t v0 = v4;
    *(unsigned char *)(v0 + 8) = v5;
  }
  return result;
}

unint64_t sub_1A8851A84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      uint64_t v10 = *(void *)(a2 + 32);
      uint64_t v11 = *(void *)(a2 + 40);
      uint64_t v12 = *(void *)(a2 + 48);
      uint64_t v13 = *(void *)(a2 + 56);
      uint64_t v48 = *(void *)(a2 + 72);
      uint64_t v49 = *(void *)(a2 + 80);
      uint64_t v50 = *(void *)(a2 + 88);
      uint64_t v51 = *(void *)(a2 + 96);
      uint64_t v52 = *(void *)(a2 + 104);
      uint64_t v53 = *(void *)(a2 + 112);
      uint64_t v54 = *(void *)(a2 + 120);
      uint64_t v56 = *(void *)(a2 + 128);
      uint64_t v58 = *(void *)(a2 + 136);
      uint64_t v60 = *(void *)(a2 + 144);
      uint64_t v62 = *(void *)(a2 + 152);
      uint64_t v64 = *(void *)(a2 + 160);
      uint64_t v66 = *(void *)(a2 + 168);
      unsigned __int16 v68 = *(_WORD *)(a2 + 176);
      uint64_t v14 = *(void *)(a2 + 64);
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      uint64_t v17 = v8;
      uint64_t v18 = v9;
      uint64_t v19 = v12;
      uint64_t v20 = v13;
      sub_1A88520F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v48, v49, v50, v51, v52, v53, v54, v56, v58, v60,
        v62,
        v64,
        v66,
        v68,
        (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A8795FCC,
        (uint64_t (*)(void))sub_1A87961BC);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = v18;
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      *(void *)(a1 + 48) = v19;
      *(void *)(a1 + 56) = v20;
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = v48;
      *(void *)(a1 + 80) = v49;
      *(void *)(a1 + 88) = v50;
      *(void *)(a1 + 96) = v51;
      *(void *)(a1 + 104) = v52;
      *(void *)(a1 + 112) = v53;
      *(void *)(a1 + 120) = v54;
      *(void *)(a1 + 128) = v56;
      *(void *)(a1 + 136) = v58;
      *(void *)(a1 + 144) = v60;
      *(void *)(a1 + 152) = v62;
      *(void *)(a1 + 160) = v64;
      *(void *)(a1 + 168) = v66;
      *(_WORD *)(a1 + 176) = v68;
    }
    else
    {
      type metadata accessor for ResponsePayload();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v26 = *(void *)a2;
          uint64_t v27 = *(void *)(a2 + 8);
          uint64_t v28 = *(void *)(a2 + 16);
          uint64_t v29 = *(void *)(a2 + 24);
          uint64_t v30 = *(void *)(a2 + 32);
          uint64_t v31 = *(void *)(a2 + 40);
          uint64_t v55 = *(void *)(a2 + 64);
          uint64_t v57 = *(void *)(a2 + 72);
          uint64_t v59 = *(void *)(a2 + 80);
          uint64_t v61 = *(void *)(a2 + 88);
          uint64_t v63 = *(void *)(a2 + 96);
          uint64_t v65 = *(void *)(a2 + 104);
          uint64_t v67 = *(void *)(a2 + 112);
          unsigned __int8 v69 = *(unsigned char *)(a2 + 120);
          uint64_t v32 = *(void *)a2;
          uint64_t v33 = *(void *)(a2 + 48);
          uint64_t v34 = *(void *)(a2 + 56);
          sub_1A878D344(v32, v27, v28, v29, v30, v31, v33, v34, v55, v57, v59, v61, v63, v65, v67, v69);
          *(void *)a1 = v26;
          *(void *)(a1 + 8) = v27;
          *(void *)(a1 + 16) = v28;
          *(void *)(a1 + 24) = v29;
          *(void *)(a1 + 32) = v30;
          *(void *)(a1 + 40) = v31;
          *(void *)(a1 + 48) = v33;
          *(void *)(a1 + 56) = v34;
          *(void *)(a1 + 64) = v55;
          *(void *)(a1 + 72) = v57;
          *(void *)(a1 + 80) = v59;
          *(void *)(a1 + 88) = v61;
          *(void *)(a1 + 96) = v63;
          *(void *)(a1 + 104) = v65;
          *(void *)(a1 + 112) = v67;
          *(unsigned char *)(a1 + 120) = v69;
          break;
        case 2u:
          uint64_t v35 = type metadata accessor for MessageData();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 2u:
              uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
              (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
              goto LABEL_18;
            case 3u:
            case 4u:
              *(void *)a1 = *(void *)a2;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_18:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v35 - 8) + 64));
              break;
          }
          break;
        case 3u:
        case 4u:
          *(void *)a1 = *(void *)a2;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          break;
        case 5u:
          uint64_t v37 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v37;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          break;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          break;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
          *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          break;
        case 8u:
          uint64_t v38 = *(void *)a2;
          uint64_t v39 = *(void *)(a2 + 8);
          uint64_t v40 = *(void *)(a2 + 16);
          uint64_t v41 = *(void *)(a2 + 24);
          int v42 = *(_DWORD *)(a2 + 32);
          sub_1A879A6F4(v38, v39, v40);
          *(void *)a1 = v38;
          *(void *)(a1 + 8) = v39;
          *(void *)(a1 + 16) = v40;
          *(void *)(a1 + 24) = v41;
          *(_DWORD *)(a1 + 32) = v42;
          break;
        case 9u:
          uint64_t v43 = *(void *)a2;
          uint64_t v44 = *(void *)(a2 + 8);
          uint64_t v45 = *(void *)(a2 + 16);
          char v46 = *(unsigned char *)(a2 + 24);
          sub_1A87A3240();
          *(void *)a1 = v43;
          *(void *)(a1 + 8) = v44;
          *(void *)(a1 + 16) = v45;
          *(unsigned char *)(a1 + 24) = v46;
          break;
        default:
          unint64_t v22 = *(void *)a2;
          uint64_t v23 = *(void *)(a2 + 8);
          uint64_t v24 = *(void *)(a2 + 16);
          unsigned __int8 v25 = *(unsigned char *)(a2 + 24);
          sub_1A87AAA84(v22, v23, v24, v25);
          *(void *)a1 = v22;
          *(void *)(a1 + 8) = v23;
          *(void *)(a1 + 16) = v24;
          *(unsigned char *)(a1 + 24) = v25;
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A88520F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,uint64_t (*a24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a25)(void))
{
  int v26 = (a23 >> 9) & 7;
  if (v26 == 4 || v26 == 3)
  {
    return a25();
  }
  else if (v26 == 2)
  {
    return a24(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return result;
}

unint64_t sub_1A88521B4(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1A88520F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
  }
             *(void *)(a1 + 152),
             *(void *)(a1 + 160),
             *(void *)(a1 + 168),
             *(_WORD *)(a1 + 176),
             (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A871D360,
             (uint64_t (*)(void))sub_1A871D290);
  type metadata accessor for ResponsePayload();
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      unint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      unsigned __int8 v6 = *(unsigned char *)(a1 + 24);
      return sub_1A87AAE54(v3, v4, v5, v6);
    case 1:
      return sub_1A878D19C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
    case 2:
      type metadata accessor for MessageData();
      unint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
        case 2:
          uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
          unint64_t result = v8(a1, v7);
          break;
        case 3:
        case 4:
          goto LABEL_19;
        default:
          return result;
      }
      return result;
    case 3:
    case 4:
      goto LABEL_19;
    case 5:
      swift_release();
      swift_release();
      goto LABEL_15;
    case 6:
      swift_bridgeObjectRelease();
LABEL_15:
      unint64_t result = swift_release();
      break;
    case 7:
      swift_release();
LABEL_19:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    case 8:
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = *(void *)(a1 + 16);
      unint64_t result = sub_1A879A770(v9, v10, v11);
      break;
    case 9:
      unint64_t result = sub_1A87A3260();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A885248C(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v45 = *(void *)(a2 + 72);
    uint64_t v46 = *(void *)(a2 + 80);
    uint64_t v47 = *(void *)(a2 + 88);
    uint64_t v48 = *(void *)(a2 + 96);
    uint64_t v49 = *(void *)(a2 + 104);
    uint64_t v50 = *(void *)(a2 + 112);
    uint64_t v51 = *(void *)(a2 + 120);
    uint64_t v53 = *(void *)(a2 + 128);
    uint64_t v55 = *(void *)(a2 + 136);
    uint64_t v57 = *(void *)(a2 + 144);
    uint64_t v59 = *(void *)(a2 + 152);
    uint64_t v61 = *(void *)(a2 + 160);
    uint64_t v63 = *(void *)(a2 + 168);
    unsigned __int16 v65 = *(_WORD *)(a2 + 176);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = v4;
    uint64_t v14 = v5;
    uint64_t v15 = v6;
    uint64_t v16 = v7;
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    sub_1A88520F0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v45, v46, v47, v48, v49, v50, v51, v53, v55, v57,
      v59,
      v61,
      v63,
      v65,
      (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A8795FCC,
      (uint64_t (*)(void))sub_1A87961BC);
    *(void *)a1 = v13;
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 16) = v15;
    *(void *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v17;
    *(void *)(a1 + 56) = v18;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v45;
    *(void *)(a1 + 80) = v46;
    *(void *)(a1 + 88) = v47;
    *(void *)(a1 + 96) = v48;
    *(void *)(a1 + 104) = v49;
    *(void *)(a1 + 112) = v50;
    *(void *)(a1 + 120) = v51;
    *(void *)(a1 + 128) = v53;
    *(void *)(a1 + 136) = v55;
    *(void *)(a1 + 144) = v57;
    *(void *)(a1 + 152) = v59;
    *(void *)(a1 + 160) = v61;
    *(void *)(a1 + 168) = v63;
    *(_WORD *)(a1 + 176) = v65;
  }
  else
  {
    type metadata accessor for ResponsePayload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v23 = *(void *)a2;
        uint64_t v24 = *(void *)(a2 + 8);
        uint64_t v25 = *(void *)(a2 + 16);
        uint64_t v26 = *(void *)(a2 + 24);
        uint64_t v27 = *(void *)(a2 + 32);
        uint64_t v28 = *(void *)(a2 + 40);
        uint64_t v52 = *(void *)(a2 + 64);
        uint64_t v54 = *(void *)(a2 + 72);
        uint64_t v56 = *(void *)(a2 + 80);
        uint64_t v58 = *(void *)(a2 + 88);
        uint64_t v60 = *(void *)(a2 + 96);
        uint64_t v62 = *(void *)(a2 + 104);
        uint64_t v64 = *(void *)(a2 + 112);
        unsigned __int8 v66 = *(unsigned char *)(a2 + 120);
        uint64_t v29 = *(void *)a2;
        uint64_t v30 = *(void *)(a2 + 48);
        uint64_t v31 = *(void *)(a2 + 56);
        sub_1A878D344(v29, v24, v25, v26, v27, v28, v30, v31, v52, v54, v56, v58, v60, v62, v64, v66);
        *(void *)a1 = v23;
        *(void *)(a1 + 8) = v24;
        *(void *)(a1 + 16) = v25;
        *(void *)(a1 + 24) = v26;
        *(void *)(a1 + 32) = v27;
        *(void *)(a1 + 40) = v28;
        *(void *)(a1 + 48) = v30;
        *(void *)(a1 + 56) = v31;
        *(void *)(a1 + 64) = v52;
        *(void *)(a1 + 72) = v54;
        *(void *)(a1 + 80) = v56;
        *(void *)(a1 + 88) = v58;
        *(void *)(a1 + 96) = v60;
        *(void *)(a1 + 104) = v62;
        *(void *)(a1 + 112) = v64;
        *(unsigned char *)(a1 + 120) = v66;
        break;
      case 2u:
        uint64_t v32 = type metadata accessor for MessageData();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 2u:
            uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
            goto LABEL_16;
          case 3u:
          case 4u:
            *(void *)a1 = *(void *)a2;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_16:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v32 - 8) + 64));
            break;
        }
        break;
      case 3u:
      case 4u:
        *(void *)a1 = *(void *)a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        break;
      case 5u:
        uint64_t v34 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v34;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_retain();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        break;
      case 8u:
        uint64_t v35 = *(void *)a2;
        uint64_t v36 = *(void *)(a2 + 8);
        uint64_t v37 = *(void *)(a2 + 16);
        uint64_t v38 = *(void *)(a2 + 24);
        int v39 = *(_DWORD *)(a2 + 32);
        sub_1A879A6F4(v35, v36, v37);
        *(void *)a1 = v35;
        *(void *)(a1 + 8) = v36;
        *(void *)(a1 + 16) = v37;
        *(void *)(a1 + 24) = v38;
        *(_DWORD *)(a1 + 32) = v39;
        break;
      case 9u:
        uint64_t v40 = *(void *)a2;
        uint64_t v41 = *(void *)(a2 + 8);
        uint64_t v42 = *(void *)(a2 + 16);
        char v43 = *(unsigned char *)(a2 + 24);
        sub_1A87A3240();
        *(void *)a1 = v40;
        *(void *)(a1 + 8) = v41;
        *(void *)(a1 + 16) = v42;
        *(unsigned char *)(a1 + 24) = v43;
        break;
      default:
        unint64_t v19 = *(void *)a2;
        uint64_t v20 = *(void *)(a2 + 8);
        uint64_t v21 = *(void *)(a2 + 16);
        unsigned __int8 v22 = *(unsigned char *)(a2 + 24);
        sub_1A87AAA84(v19, v20, v21, v22);
        *(void *)a1 = v19;
        *(void *)(a1 + 8) = v20;
        *(void *)(a1 + 16) = v21;
        *(unsigned char *)(a1 + 24) = v22;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1A8852AA8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1A8853418(a1, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void *)a2;
      uint64_t v5 = *(void *)(a2 + 8);
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      uint64_t v8 = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 40);
      uint64_t v10 = *(void *)(a2 + 48);
      uint64_t v11 = *(void *)(a2 + 56);
      uint64_t v47 = *(void *)(a2 + 72);
      uint64_t v48 = *(void *)(a2 + 80);
      uint64_t v49 = *(void *)(a2 + 88);
      uint64_t v50 = *(void *)(a2 + 96);
      uint64_t v51 = *(void *)(a2 + 104);
      uint64_t v52 = *(void *)(a2 + 112);
      uint64_t v53 = *(void *)(a2 + 120);
      uint64_t v55 = *(void *)(a2 + 128);
      uint64_t v57 = *(void *)(a2 + 136);
      uint64_t v59 = *(void *)(a2 + 144);
      uint64_t v61 = *(void *)(a2 + 152);
      uint64_t v63 = *(void *)(a2 + 160);
      uint64_t v65 = *(void *)(a2 + 168);
      unsigned __int16 v67 = *(_WORD *)(a2 + 176);
      uint64_t v12 = *(void *)(a2 + 64);
      uint64_t v13 = v4;
      uint64_t v14 = v5;
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      uint64_t v19 = v11;
      sub_1A88520F0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v47, v48, v49, v50, v51, v52, v53, v55, v57, v59,
        v61,
        v63,
        v65,
        v67,
        (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A8795FCC,
        (uint64_t (*)(void))sub_1A87961BC);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v15;
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = v17;
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v18;
      *(void *)(a1 + 56) = v19;
      *(void *)(a1 + 64) = v12;
      *(void *)(a1 + 72) = v47;
      *(void *)(a1 + 80) = v48;
      *(void *)(a1 + 88) = v49;
      *(void *)(a1 + 96) = v50;
      *(void *)(a1 + 104) = v51;
      *(void *)(a1 + 112) = v52;
      *(void *)(a1 + 120) = v53;
      *(void *)(a1 + 128) = v55;
      *(void *)(a1 + 136) = v57;
      *(void *)(a1 + 144) = v59;
      *(void *)(a1 + 152) = v61;
      *(void *)(a1 + 160) = v63;
      *(void *)(a1 + 168) = v65;
      *(_WORD *)(a1 + 176) = v67;
    }
    else
    {
      type metadata accessor for ResponsePayload();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v24 = *(void *)a2;
          uint64_t v25 = *(void *)(a2 + 8);
          uint64_t v26 = *(void *)(a2 + 16);
          uint64_t v27 = *(void *)(a2 + 24);
          uint64_t v28 = *(void *)(a2 + 32);
          uint64_t v29 = *(void *)(a2 + 40);
          uint64_t v30 = *(void *)(a2 + 48);
          uint64_t v54 = *(void *)(a2 + 64);
          uint64_t v56 = *(void *)(a2 + 72);
          uint64_t v58 = *(void *)(a2 + 80);
          uint64_t v60 = *(void *)(a2 + 88);
          uint64_t v62 = *(void *)(a2 + 96);
          uint64_t v64 = *(void *)(a2 + 104);
          uint64_t v66 = *(void *)(a2 + 112);
          unsigned __int8 v68 = *(unsigned char *)(a2 + 120);
          uint64_t v31 = *(void *)a2;
          uint64_t v32 = *(void *)(a2 + 56);
          sub_1A878D344(v31, v25, v26, v27, v28, v29, v30, v32, v54, v56, v58, v60, v62, v64, v66, v68);
          *(void *)a1 = v24;
          *(void *)(a1 + 8) = v25;
          *(void *)(a1 + 16) = v26;
          *(void *)(a1 + 24) = v27;
          *(void *)(a1 + 32) = v28;
          *(void *)(a1 + 40) = v29;
          *(void *)(a1 + 48) = v30;
          *(void *)(a1 + 56) = v32;
          *(void *)(a1 + 64) = v54;
          *(void *)(a1 + 72) = v56;
          *(void *)(a1 + 80) = v58;
          *(void *)(a1 + 88) = v60;
          *(void *)(a1 + 96) = v62;
          *(void *)(a1 + 104) = v64;
          *(void *)(a1 + 112) = v66;
          *(unsigned char *)(a1 + 120) = v68;
          break;
        case 2u:
          uint64_t v33 = type metadata accessor for MessageData();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 2u:
              uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
              goto LABEL_17;
            case 3u:
            case 4u:
              *(void *)a1 = *(void *)a2;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_17:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v33 - 8) + 64));
              break;
          }
          break;
        case 3u:
        case 4u:
          *(void *)a1 = *(void *)a2;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          break;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
          int v35 = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          *(_DWORD *)(a1 + 32) = v35;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          break;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
          int v36 = *(_DWORD *)(a2 + 16);
          *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
          *(_DWORD *)(a1 + 16) = v36;
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          break;
        case 8u:
          uint64_t v37 = *(void *)a2;
          uint64_t v38 = *(void *)(a2 + 8);
          uint64_t v39 = *(void *)(a2 + 16);
          uint64_t v40 = *(void *)(a2 + 24);
          int v41 = *(_DWORD *)(a2 + 32);
          sub_1A879A6F4(v37, v38, v39);
          *(void *)a1 = v37;
          *(void *)(a1 + 8) = v38;
          *(void *)(a1 + 16) = v39;
          *(void *)(a1 + 24) = v40;
          *(_DWORD *)(a1 + 32) = v41;
          break;
        case 9u:
          uint64_t v42 = *(void *)a2;
          uint64_t v43 = *(void *)(a2 + 8);
          uint64_t v44 = *(void *)(a2 + 16);
          char v45 = *(unsigned char *)(a2 + 24);
          sub_1A87A3240();
          *(void *)a1 = v42;
          *(void *)(a1 + 8) = v43;
          *(void *)(a1 + 16) = v44;
          *(unsigned char *)(a1 + 24) = v45;
          break;
        default:
          unint64_t v20 = *(void *)a2;
          uint64_t v21 = *(void *)(a2 + 8);
          uint64_t v22 = *(void *)(a2 + 16);
          unsigned __int8 v23 = *(unsigned char *)(a2 + 24);
          sub_1A87AAA84(v20, v21, v22, v23);
          *(void *)a1 = v20;
          *(void *)(a1 + 8) = v21;
          *(void *)(a1 + 16) = v22;
          *(unsigned char *)(a1 + 24) = v23;
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1A88530D4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8853418((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for ResponsePayload();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v7 = type metadata accessor for MessageData();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A88532B8()
{
  uint64_t result = type metadata accessor for ResponsePayload();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A8853348(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

void type metadata accessor for ResponseParser.ResponseState()
{
}

unint64_t sub_1A8853378()
{
  unint64_t result = qword_1E974DD98;
  if (!qword_1E974DD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DD98);
  }
  return result;
}

unint64_t sub_1A88533C8()
{
  unint64_t result = qword_1E974DDA0;
  if (!qword_1E974DDA0)
  {
    type metadata accessor for ResponseParser._Response();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DDA0);
  }
  return result;
}

uint64_t sub_1A8853418(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A8853478(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A8853550()
{
  return sub_1A8851A28();
}

uint64_t sub_1A8853568()
{
  return sub_1A8851950();
}

uint64_t sub_1A8853580()
{
  return sub_1A8851820();
}

void OUTLINED_FUNCTION_3_58()
{
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = v5;
  *(_DWORD *)(v4 + 16) = v1;
  *(_WORD *)(v4 + 20) = v3;
  *(unsigned char *)(v4 + 22) = v2;
}

void OUTLINED_FUNCTION_4_58()
{
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = v5;
  *(_DWORD *)(v4 + 16) = v1;
  *(_WORD *)(v4 + 20) = v3;
  *(unsigned char *)(v4 + 22) = v2;
}

uint64_t OUTLINED_FUNCTION_7_47()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_11_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_37()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t OUTLINED_FUNCTION_13_36@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

char *OUTLINED_FUNCTION_14_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

__n128 OUTLINED_FUNCTION_15_29(__n128 *a1)
{
  __n128 result = v1[2];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_30()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_24()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_19_24()
{
  return v0;
}

char *OUTLINED_FUNCTION_20_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_21_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t OUTLINED_FUNCTION_22_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

__n128 OUTLINED_FUNCTION_24_20(__n128 *a1)
{
  __n128 result = v1[2];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_14()
{
  return swift_retain();
}

id OUTLINED_FUNCTION_27_14()
{
  *(void *)(v1 - 88) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t OUTLINED_FUNCTION_30_12(uint64_t a1, void *a2)
{
  *a2 = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_33_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return a20;
}

uint64_t OUTLINED_FUNCTION_34_13()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_36_13(uint64_t a1, void *a2)
{
  *a2 = v2;
  return swift_retain();
}

id OUTLINED_FUNCTION_37_12()
{
  *(void *)(v1 - 56) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_40_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_52_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

id OUTLINED_FUNCTION_54_6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return v20;
}

uint64_t OUTLINED_FUNCTION_55_8()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_58_7(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return v16;
}

uint64_t OUTLINED_FUNCTION_61_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_62_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_63_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a16;
}

uint64_t sub_1A8853B50(uint64_t a1)
{
  BOOL v1 = __OFSUB__(a1, 1);
  uint64_t result = a1 - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t SynchronizingLiteralParser.init()()
{
  return 0;
}

void SynchronizingLiteralParser.parseContinuationsNecessary(_:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  int v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  unint64_t v8 = HIDWORD(a2);
  uint64_t v9 = *v3;
  unint64_t v10 = a2;
  unint64_t v11 = a3 - (BYTE6(a3) | (a3 >> 24) & 0xFFFF00);
  int v12 = BYTE6(a3) | (WORD2(a3) << 8);
  uint64_t v123 = (a3 - v12);
  unsigned int v13 = v12 + a2;
  BOOL v14 = __CFADD__(v12, a2);
  unsigned int v101 = v13;
  BOOL v102 = v14;
  int v96 = v13;
  int v97 = (unsigned __int16)(v13 >> 8);
  uint64_t v95 = a3 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v105 = a3 - (BYTE6(a3) | (a3 >> 24) & 0xFFFF00);
  unint64_t v106 = HIWORD(a3);
  int v100 = a3;
  while (*((unsigned char *)v4 + 24) != 1)
  {
    if (v8 < v10) {
      goto LABEL_96;
    }
    if (v11 < v8) {
      goto LABEL_99;
    }
    uint64_t v35 = v10 + v9;
    if (__OFADD__(v10, v9)) {
      goto LABEL_100;
    }
    BOOL v36 = __OFSUB__(v8, v35);
    uint64_t v37 = v8 - v35;
    if (v36) {
      goto LABEL_102;
    }
    uint64_t v38 = v4[2];
    if (v37 >= v38)
    {
      v4[2] = 0;
      *((unsigned char *)v4 + 24) = 1;
      uint64_t v20 = v9 + v38;
      if (__OFADD__(v9, v38)) {
        goto LABEL_112;
      }
    }
    else
    {
      BOOL v36 = __OFSUB__(v38, v37);
      uint64_t v39 = v38 - v37;
      if (v36) {
        goto LABEL_110;
      }
      v4[2] = v39;
      *((unsigned char *)v4 + 24) = 0;
      uint64_t v20 = v9 + v37;
      if (__OFADD__(v9, v37)) {
        goto LABEL_111;
      }
    }
    *uint64_t v4 = v20;
LABEL_45:
    if (v9 >= v20) {
      goto LABEL_85;
    }
    if (v8 < v10)
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      sub_1A87A3EF0();
      uint64_t v93 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_2_71(v93, v94);
      uint64_t v88 = 80;
LABEL_90:
      v86[1] = v87;
      v86[2] = 0xD000000000000020;
      v86[3] = 0x80000001A8B3AED0;
      v86[4] = v88;
      swift_willThrow();
LABEL_91:
      swift_release();
      swift_release();
      return;
    }
    if (v11 < v8) {
      goto LABEL_93;
    }
    uint64_t v9 = v20;
    if (v20 >= (uint64_t)v8)
    {
LABEL_85:
      v4[1] = 0;
      return;
    }
  }
  if (v8 > v123)
  {
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  uint64_t v15 = v10 + v9;
  if (__OFADD__(v10, v9)) {
    goto LABEL_97;
  }
  if (v8 < v10 || (uint64_t)v8 < v15) {
    goto LABEL_98;
  }
  if (v15 < 0) {
    goto LABEL_101;
  }
  uint64_t v115 = v7;
  int v116 = v6;
  int v117 = v8;
  int v118 = v5;
  __int16 v119 = v107;
  char v120 = v106;
  uint64_t v121 = v10 + v9;
  unint64_t v122 = v8;
  uint64_t v17 = sub_1A8854568();
  if (v18)
  {
    uint64_t v20 = v9;
LABEL_44:
    unint64_t v11 = v105;
    goto LABEL_45;
  }
  unint64_t v19 = v17 - v10;
  if (__OFSUB__(v17, v10)) {
    goto LABEL_108;
  }
  uint64_t v20 = v19 + 1;
  if (__OFADD__(v19, 1)) {
    goto LABEL_109;
  }
  *uint64_t v4 = v20;
  uint64_t v21 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_113;
  }
  if (v21 < (uint64_t)v10) {
    goto LABEL_114;
  }
  if (v21 > v123) {
    goto LABEL_115;
  }
  int64_t v22 = v21 - v10;
  if ((uint64_t)(v21 - v10) < 0) {
    goto LABEL_116;
  }
  if ((uint64_t)v8 < v22) {
    goto LABEL_117;
  }
  if ((uint64_t)(v8 - v22) < (uint64_t)v10) {
    goto LABEL_118;
  }
  if (v102) {
    goto LABEL_119;
  }
  if (HIBYTE(v101))
  {
    swift_retain();
    unint64_t v98 = v98 & 0xFF00000000000000 | v95;
    uint64_t v23 = ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(v6, v22, v7);
    unsigned int v31 = v24;
    int v32 = v25;
    int64_t v22 = HIDWORD(v24);
    int v33 = WORD2(v25);
    int v34 = BYTE6(v25);
  }
  else
  {
    int v32 = v101 + v22;
    uint64_t v23 = swift_retain_n();
    unsigned int v31 = 0;
    int v34 = v96;
    int v33 = v97;
  }
  uint64_t v104 = v23;
  uint64_t v109 = v23;
  unsigned int v110 = v31;
  unsigned int v111 = v22;
  int v112 = v32;
  __int16 v113 = v33;
  char v114 = v34;
  sub_1A88541CC(&v109, v24, v25, v26, v27, v28, v29, v30);
  if (v108) {
    goto LABEL_91;
  }
  if (v111 == v31 || (sub_1A8854370(0x7DuLL, (uint64_t)&v109, v40, v41, v42, v43, v44, v45) & 1) == 0)
  {
    uint64_t v108 = 0;
    uint64_t v7 = a1;
    swift_release();
    swift_release();
    uint64_t v6 = a2;
    int v5 = v100;
    goto LABEL_44;
  }
  uint64_t v58 = v34 | (v33 << 8);
  if (sub_1A8854370(0x2BuLL, (uint64_t)&v109, v46, v47, v48, v49, v50, v51))
  {
    uint64_t v108 = 0;
    goto LABEL_51;
  }
  uint64_t v108 = 0;
  if (sub_1A8854370(0x2DuLL, (uint64_t)&v109, v52, v53, v54, v55, v56, v57))
  {
LABEL_51:
    swift_beginAccess();
    if (v111 >= v31)
    {
      OUTLINED_FUNCTION_0_97();
      while (v60 >= v63)
      {
        if (!(v62 + v63)) {
          goto LABEL_86;
        }
        uint64_t v65 = v63 + v61;
        if (v65 >= v62 + v63) {
          goto LABEL_105;
        }
        char v66 = *(unsigned char *)(*(void *)(v104 + 24) + v59 + v65);
        if ((v66 - 58) < 0xF6u)
        {
          unsigned int v111 = v63;
          if (v64 == 1) {
            goto LABEL_94;
          }
          swift_release();
          swift_release();
          goto LABEL_82;
        }
        uint64_t v67 = (v66 - 48);
        uint64_t v68 = v64 * v67;
        if ((unsigned __int128)(v64 * (__int128)v67) >> 64 != (v64 * v67) >> 63) {
          goto LABEL_106;
        }
        BOOL v36 = __OFADD__(v58, v68);
        v58 += v68;
        if (v36) {
          goto LABEL_87;
        }
        OUTLINED_FUNCTION_3_59();
        if (!v71) {
          goto LABEL_89;
        }
        unsigned int v63 = v70 - 1;
        if (v60 < v63) {
          goto LABEL_107;
        }
        if (v63 < v31) {
          goto LABEL_103;
        }
      }
      goto LABEL_104;
    }
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
  swift_beginAccess();
  if (v111 < v31) {
    goto LABEL_121;
  }
  OUTLINED_FUNCTION_0_97();
  while (v73 >= v63)
  {
    if (!(v75 + v63))
    {
LABEL_86:
      unsigned int v111 = v31;
      sub_1A87A3EF0();
      uint64_t v84 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_2_71(v84, v85);
      uint64_t v88 = 85;
      goto LABEL_90;
    }
    uint64_t v77 = v63 + v74;
    if (v77 >= v75 + v63) {
      goto LABEL_122;
    }
    char v78 = *(unsigned char *)(*(void *)(v104 + 24) + v72 + v77);
    if ((v78 - 58) < 0xF6u)
    {
      unsigned int v111 = v63;
      if (v76 == 1) {
        goto LABEL_94;
      }
      swift_release();
      swift_release();
      uint64_t v82 = v4[1];
      BOOL v36 = __OFADD__(v82, 1);
      uint64_t v83 = v82 + 1;
      if (!v36)
      {
        v4[1] = v83;
LABEL_82:
        uint64_t v6 = a2;
        int v5 = v100;
        unint64_t v11 = v105;
        if (v58 >= 1)
        {
          v4[2] = v58;
          *((unsigned char *)v4 + 24) = 0;
        }
        uint64_t v7 = a1;
        goto LABEL_45;
      }
      goto LABEL_125;
    }
    uint64_t v79 = (v78 - 48);
    uint64_t v80 = v76 * v79;
    if ((unsigned __int128)(v76 * (__int128)v79) >> 64 != (v76 * v79) >> 63) {
      goto LABEL_123;
    }
    BOOL v36 = __OFADD__(v58, v80);
    v58 += v80;
    if (v36)
    {
LABEL_87:
      unsigned int v111 = v63;
      sub_1A87A3EF0();
      uint64_t v89 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_1_85(v89, v90);
      uint64_t v88 = 69;
      goto LABEL_90;
    }
    OUTLINED_FUNCTION_3_59();
    if (!v71)
    {
LABEL_89:
      unsigned int v111 = v69 - 18;
      sub_1A87A3EF0();
      uint64_t v91 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_1_85(v91, v92);
      uint64_t v88 = 74;
      goto LABEL_90;
    }
    unsigned int v63 = v81 - 1;
    if (v73 < v63) {
      goto LABEL_124;
    }
    if (v63 < v31) {
      goto LABEL_121;
    }
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
}

Swift::Void __swiftcall SynchronizingLiteralParser.consumed(_:)(Swift::Int a1)
{
  if (*v1 < a1)
  {
    __break(1u);
  }
  else if (!__OFSUB__(*v1, a1))
  {
    *v1 -= a1;
    return;
  }
  __break(1u);
}

void sub_1A88541CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *((unsigned int *)a1 + 2);
  uint64_t v9 = *((unsigned int *)a1 + 3);
  if (v9 < v8)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (*((_DWORD *)a1 + 4) - (*((unsigned __int8 *)a1 + 22) | (*((unsigned __int16 *)a1 + 10) << 8)) < v9)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v16 = *a1;
  unint64_t v17 = __PAIR64__(v9, v8);
  LODWORD(v18) = *((_DWORD *)a1 + 4);
  WORD2(v18) = *((_WORD *)a1 + 10);
  BYTE6(v18) = *((unsigned char *)a1 + 22);
  uint64_t v19 = *((unsigned int *)a1 + 2);
  Swift::Int v10 = v9 - 1;
  if (v8 == v9) {
    uint64_t v11 = *((unsigned int *)a1 + 2);
  }
  else {
    uint64_t v11 = v9 - 1;
  }
  if (v11 < v8) {
    goto LABEL_26;
  }
  if (v11 > v9)
  {
LABEL_27:
    __break(1u);
    return;
  }
  if (v11 == v8)
  {
    BOOL v12 = 0;
  }
  else
  {
    uint64_t v11 = sub_1A88546F4(v11);
    BOOL v12 = v11 == 13;
  }
  __int16 v13 = sub_1A8739344(v11, a2, a3, a4, a5, a6, a7, a8, v16, v17, v18, v19);
  if (v12)
  {
    if ((v13 & 0x100) == 0)
    {
      if (v13 == 13)
      {
LABEL_22:
        ByteBuffer.moveWriterIndex(to:)(v10);
        return;
      }
      if (v13 == 10)
      {
        Swift::Int v10 = v9 - 2;
        goto LABEL_22;
      }
    }
  }
  else if ((v13 & 0x100) == 0 && (v13 == 10 || v13 == 13))
  {
    goto LABEL_22;
  }
  sub_1A87A3EF0();
  swift_allocError();
  *uint64_t v15 = 0x6E776F6E6B6E55;
  v15[1] = 0xE700000000000000;
  v15[2] = 0xD000000000000020;
  v15[3] = 0x80000001A8B3AED0;
  v15[4] = 45;
  swift_willThrow();
}

unint64_t sub_1A8854370(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(unsigned int *)(a2 + 12);
  if (v8 < *(_DWORD *)(a2 + 8))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a2 + 16) - (*(unsigned __int8 *)(a2 + 22) | (*(unsigned __int16 *)(a2 + 20) << 8)) < v8)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  unsigned __int8 v9 = result;
  __int16 v10 = sub_1A8739344(result, a2, a3, a4, a5, a6, a7, a8);
  if ((v10 & 0x100) != 0)
  {
    sub_1A8A77DC8();
    swift_bridgeObjectRelease();
    sub_1A8A784D8();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    unint64_t v11 = 0x80000001A8B3B8F0;
    sub_1A87A3EF0();
    swift_allocError();
    *BOOL v12 = 0xD000000000000013;
    v12[1] = 0x80000001A8B3B8F0;
    v12[2] = 0xD000000000000020;
    v12[3] = 0x80000001A8B3AED0;
    v12[4] = 57;
    swift_willThrow();
  }
  else
  {
    LOBYTE(v11) = v10 == v9;
    if ((_BYTE)v11) {
      ByteBuffer.moveWriterIndex(to:)(v8 - 1);
    }
  }
  return v11 & 1;
}

uint64_t SynchronizingLiteralParser.FramingResult.maximumValidBytes.setter(uint64_t result)
{
  *BOOL v1 = result;
  return result;
}

double (*SynchronizingLiteralParser.FramingResult.maximumValidBytes.modify())(void)
{
  return nullsub_1;
}

uint64_t SynchronizingLiteralParser.FramingResult.synchronizingLiteralCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SynchronizingLiteralParser.FramingResult.synchronizingLiteralCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*SynchronizingLiteralParser.FramingResult.synchronizingLiteralCount.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A8854568()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  if (v2 == v1) {
    return 0;
  }
  uint64_t v3 = *v0;
  uint64_t v4 = *((unsigned int *)v0 + 2);
  uint64_t v5 = *((unsigned __int16 *)v0 + 10);
  uint64_t v6 = *((unsigned __int8 *)v0 + 22);
  uint64_t v7 = (*((_DWORD *)v0 + 3) - v4);
  uint64_t v8 = v6 | (v5 << 8);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 24) + v8;
  uint64_t result = v2;
  while (1)
  {
    if (result >= v1)
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return result;
    }
    if (v2 < v4) {
      goto LABEL_16;
    }
    if (result - v4 >= v7) {
      goto LABEL_17;
    }
    int v11 = *(unsigned __int8 *)(v9 + result);
    if (v11 == 10) {
      return result;
    }
    if (v11 == 13) {
      break;
    }
    if (v1 == ++result) {
      return 0;
    }
  }
  if (result + 1 >= v1) {
    return result;
  }
  if (result - v4 + 1 >= v7) {
    goto LABEL_18;
  }
  if (*(unsigned char *)(v9 + result + 1) == 10) {
    ++result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser()
{
  return &type metadata for SynchronizingLiteralParser;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser.FramingResult()
{
  return &type metadata for SynchronizingLiteralParser.FramingResult;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser.State()
{
  return &type metadata for SynchronizingLiteralParser.State;
}

unint64_t sub_1A88546A8()
{
  unint64_t result = qword_1E974DDB0;
  if (!qword_1E974DDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DDB0);
  }
  return result;
}

uint64_t sub_1A88546F4(uint64_t result)
{
  if (*(void *)v1 < result || *(void *)(v1 + 8) >= result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (*(void *)(v1 + 40) >= result) {
    goto LABEL_11;
  }
  if (*(void *)(v1 + 48) < result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = *(unsigned int *)(v1 + 24);
  if (v3 >= result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v4 = result - 1;
  if (result - 1 - v3 < (*(_DWORD *)(v1 + 28) - v3))
  {
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = *(unsigned __int16 *)(v1 + 36);
    uint64_t v7 = *(unsigned __int8 *)(v1 + 38);
    swift_beginAccess();
    return *(unsigned __int8 *)(*(void *)(v5 + 24) + (v7 | (v6 << 8)) + v4);
  }
LABEL_14:
  __break(1u);
  return result;
}

void OUTLINED_FUNCTION_1_85(uint64_t a1, void *a2)
{
  *a2 = 0x776F6C667265764FLL;
}

void OUTLINED_FUNCTION_2_71(uint64_t a1, void *a2)
{
  *a2 = 0x6E776F6E6B6E55;
}

BOOL sub_1A8854808(char a1)
{
  BOOL v1 = a1 == 10 || a1 == 13;
  if (v1 || a1 < 0 || !a1) {
    return 0;
  }
  if (a1 == 34) {
    return 0;
  }
  return a1 != 92;
}

BOOL sub_1A8854844(unsigned __int8 a1)
{
  return a1 - 58 > 0xFFFFFFF5 || a1 - 103 > 0xFFFFFFF9 || a1 - 65 < 6;
}

uint64_t sub_1A8854870(unsigned __int8 a1)
{
  int v1 = a1;
  int v2 = isalnum(a1);
  BOOL v3 = v1 == 126;
  if (v1 == 95) {
    BOOL v3 = 1;
  }
  unsigned int v4 = (v1 - 45) < 2 || v3;
  if (v2) {
    return 1;
  }
  else {
    return v4;
  }
}

uint64_t sub_1A88548C4(unsigned __int8 a1)
{
  return (a1 < 0x2Du) & (0x1F9200000000uLL >> a1);
}

uint64_t sub_1A88548E0(unsigned __int8 a1)
{
  BOOL v1 = a1 - 65 < 0x1A;
  if (a1 - 123 > 0xFFFFFFE5) {
    BOOL v1 = 1;
  }
  return a1 - 45 <= 0x32 && ((1 << (a1 - 45)) & 0x4000000000003) != 0 || v1;
}

uint64_t sub_1A8854928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C20);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741E20);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = 0xFFFFFFFF00000000;
  sub_1A872DF54();
  sub_1A8A78A28();
  sub_1A8758FD8((uint64_t)v4, (uint64_t)v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (result != 1) {
    return sub_1A87AEA48((uint64_t)v7, a1);
  }
  __break(1u);
  return result;
}

uint64_t PipeliningRequirement.hash(into:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  uint64_t v4 = OUTLINED_FUNCTION_32(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_30_13();
  type metadata accessor for PipeliningRequirement(v5);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_25_3();
  sub_1A88552C8(v1, v2, (void (*)(void))type metadata accessor for PipeliningRequirement);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
      uint64_t result = sub_1A8A78768();
      break;
    default:
      OUTLINED_FUNCTION_52_8();
      sub_1A8A78768();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      sub_1A8734E44();
      OUTLINED_FUNCTION_51_9();
      uint64_t result = sub_1A86FDAC4(v0, &qword_1E9746200);
      break;
  }
  return result;
}

uint64_t type metadata accessor for PipeliningRequirement(uint64_t a1)
{
  return sub_1A87A9CB4(a1, (uint64_t *)&unk_1E974DDE0);
}

void static PipeliningRequirement.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_14();
  a19 = v25;
  a20 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  uint64_t v32 = OUTLINED_FUNCTION_32(v31);
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_9_41();
  MEMORY[0x1F4188790](v33);
  uint64_t v34 = OUTLINED_FUNCTION_48_9();
  type metadata accessor for PipeliningRequirement(v34);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_42_3();
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&a9 - v37;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDB8);
  uint64_t v40 = OUTLINED_FUNCTION_32(v39);
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_24_21();
  sub_1A88552C8(v30, v20, (void (*)(void))type metadata accessor for PipeliningRequirement);
  sub_1A88552C8(v28, v24, (void (*)(void))type metadata accessor for PipeliningRequirement);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A88552C8(v20, v23, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (OUTLINED_FUNCTION_7_48() != 1) {
        goto LABEL_6;
      }
      sub_1A87AEA48(v24, v21);
      sub_1A872DF54();
      sub_1A8A78928();
      sub_1A86FDAC4(v21, &qword_1E9746200);
      uint64_t v41 = OUTLINED_FUNCTION_191();
      goto LABEL_14;
    case 2u:
      if (OUTLINED_FUNCTION_7_48() == 2) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 3u:
      if (OUTLINED_FUNCTION_7_48() != 3) {
        goto LABEL_12;
      }
      goto LABEL_8;
    case 4u:
      if (OUTLINED_FUNCTION_7_48() != 4) {
        goto LABEL_12;
      }
LABEL_8:
      sub_1A8855650(v20, (void (*)(void))type metadata accessor for PipeliningRequirement);
      break;
    default:
      sub_1A88552C8(v20, (uint64_t)v38, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (OUTLINED_FUNCTION_7_48())
      {
        uint64_t v23 = (uint64_t)v38;
LABEL_6:
        sub_1A86FDAC4(v23, &qword_1E9746200);
LABEL_12:
        sub_1A86FDAC4(v20, &qword_1E974DDB8);
      }
      else
      {
        sub_1A87AEA48(v24, v22);
        sub_1A872DF54();
        sub_1A8A78928();
        sub_1A86FDAC4(v22, &qword_1E9746200);
        uint64_t v41 = (uint64_t)v38;
        uint64_t v42 = &qword_1E9746200;
LABEL_14:
        sub_1A86FDAC4(v41, v42);
        sub_1A8855650(v20, (void (*)(void))type metadata accessor for PipeliningRequirement);
      }
      break;
  }
  OUTLINED_FUNCTION_11();
}

uint64_t PipeliningRequirement.hashValue.getter()
{
  return sub_1A88556C0((void (*)(unsigned char *))PipeliningRequirement.hash(into:));
}

uint64_t sub_1A8854EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A8855728(a1, a2, a3, (void (*)(unsigned char *))PipeliningRequirement.hash(into:));
}

uint64_t sub_1A8854F04(uint64_t a1)
{
  return sub_1A8854FA8(a1, type metadata accessor for PipeliningRequirement, static PipeliningRequirement.noFlagChangesToAnyMessage);
}

uint64_t PipeliningRequirement.noFlagChangesToAnyMessage.unsafeMutableAddressor()
{
  return sub_1A8855058(&qword_1E974CF08, type metadata accessor for PipeliningRequirement, (uint64_t)static PipeliningRequirement.noFlagChangesToAnyMessage);
}

uint64_t static PipeliningRequirement.noFlagChangesToAnyMessage.getter()
{
  return sub_1A88550D8();
}

uint64_t sub_1A8854F84(uint64_t a1)
{
  return sub_1A8854FA8(a1, type metadata accessor for PipeliningRequirement, static PipeliningRequirement.noFlagReadsFromAnyMessage);
}

uint64_t sub_1A8854FA8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = a2(0);
  __swift_allocate_value_buffer_0(v4, a3);
  uint64_t v5 = __swift_project_value_buffer_0(v4, (uint64_t)a3);
  sub_1A8854928(v5);
  return swift_storeEnumTagMultiPayload();
}

uint64_t PipeliningRequirement.noFlagReadsFromAnyMessage.unsafeMutableAddressor()
{
  return sub_1A8855058(&qword_1E974CF10, type metadata accessor for PipeliningRequirement, (uint64_t)static PipeliningRequirement.noFlagReadsFromAnyMessage);
}

uint64_t sub_1A8855058(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);
  return __swift_project_value_buffer_0(v5, a3);
}

uint64_t static PipeliningRequirement.noFlagReadsFromAnyMessage.getter()
{
  return sub_1A88550D8();
}

uint64_t sub_1A88550D8()
{
  OUTLINED_FUNCTION_54_7();
  if (!v2) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v4 = __swift_project_value_buffer_0(v3, v1);
  return sub_1A88552C8(v4, v0, (void (*)(void))type metadata accessor for PipeliningRequirement);
}

uint64_t PipeliningBehavior.hash(into:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  uint64_t v4 = OUTLINED_FUNCTION_32(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_30_13();
  type metadata accessor for PipeliningBehavior(v5);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_25_3();
  sub_1A88552C8(v1, v2, (void (*)(void))type metadata accessor for PipeliningBehavior);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t result = sub_1A8A78768();
      break;
    default:
      OUTLINED_FUNCTION_52_8();
      sub_1A8A78768();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      sub_1A8734E44();
      OUTLINED_FUNCTION_51_9();
      uint64_t result = sub_1A86FDAC4(v0, &qword_1E9746200);
      break;
  }
  return result;
}

uint64_t type metadata accessor for PipeliningBehavior(uint64_t a1)
{
  return sub_1A87A9CB4(a1, (uint64_t *)&unk_1E974DDF0);
}

uint64_t sub_1A88552C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void static PipeliningBehavior.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_14();
  a19 = v25;
  a20 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  uint64_t v32 = OUTLINED_FUNCTION_32(v31);
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_9_41();
  MEMORY[0x1F4188790](v33);
  uint64_t v34 = OUTLINED_FUNCTION_48_9();
  type metadata accessor for PipeliningBehavior(v34);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_42_3();
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&a9 - v37;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC0);
  uint64_t v40 = OUTLINED_FUNCTION_32(v39);
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_24_21();
  sub_1A88552C8(v30, v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
  sub_1A88552C8(v28, v24, (void (*)(void))type metadata accessor for PipeliningBehavior);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A88552C8(v20, v23, (void (*)(void))type metadata accessor for PipeliningBehavior);
      if (OUTLINED_FUNCTION_7_48() != 1) {
        goto LABEL_6;
      }
      sub_1A87AEA48(v24, v21);
      sub_1A872DF54();
      sub_1A8A78928();
      sub_1A86FDAC4(v21, &qword_1E9746200);
      uint64_t v41 = OUTLINED_FUNCTION_191();
      goto LABEL_19;
    case 2u:
      if (OUTLINED_FUNCTION_7_48() == 2) {
        goto LABEL_8;
      }
      goto LABEL_16;
    case 3u:
      if (OUTLINED_FUNCTION_7_48() != 3) {
        goto LABEL_16;
      }
      goto LABEL_8;
    case 4u:
      if (OUTLINED_FUNCTION_7_48() != 4) {
        goto LABEL_16;
      }
      goto LABEL_8;
    case 5u:
      if (OUTLINED_FUNCTION_7_48() != 5) {
        goto LABEL_16;
      }
      goto LABEL_8;
    case 6u:
      if (OUTLINED_FUNCTION_7_48() != 6) {
        goto LABEL_16;
      }
LABEL_8:
      sub_1A8855650(v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
      break;
    default:
      sub_1A88552C8(v20, (uint64_t)v38, (void (*)(void))type metadata accessor for PipeliningBehavior);
      if (OUTLINED_FUNCTION_7_48())
      {
        uint64_t v23 = (uint64_t)v38;
LABEL_6:
        sub_1A86FDAC4(v23, &qword_1E9746200);
LABEL_16:
        sub_1A86FDAC4(v20, &qword_1E974DDC0);
      }
      else
      {
        sub_1A87AEA48(v24, v22);
        sub_1A872DF54();
        sub_1A8A78928();
        sub_1A86FDAC4(v22, &qword_1E9746200);
        uint64_t v41 = (uint64_t)v38;
        uint64_t v42 = &qword_1E9746200;
LABEL_19:
        sub_1A86FDAC4(v41, v42);
        sub_1A8855650(v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
      }
      break;
  }
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1A8855650(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t PipeliningBehavior.hashValue.getter()
{
  return sub_1A88556C0((void (*)(unsigned char *))PipeliningBehavior.hash(into:));
}

uint64_t sub_1A88556C0(void (*a1)(unsigned char *))
{
  sub_1A8A78738();
  a1(v3);
  return sub_1A8A787C8();
}

uint64_t sub_1A8855710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A8855728(a1, a2, a3, (void (*)(unsigned char *))PipeliningBehavior.hash(into:));
}

uint64_t sub_1A8855728(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1A8A78738();
  a4(v6);
  return sub_1A8A787C8();
}

uint64_t sub_1A8855770(uint64_t a1)
{
  return sub_1A8854FA8(a1, type metadata accessor for PipeliningBehavior, static PipeliningBehavior.changesFlagsOnAnyMessage);
}

uint64_t PipeliningBehavior.changesFlagsOnAnyMessage.unsafeMutableAddressor()
{
  return sub_1A8855058(&qword_1E974CF18, type metadata accessor for PipeliningBehavior, (uint64_t)static PipeliningBehavior.changesFlagsOnAnyMessage);
}

uint64_t static PipeliningBehavior.changesFlagsOnAnyMessage.getter()
{
  return sub_1A88557F0();
}

uint64_t sub_1A88557F0()
{
  OUTLINED_FUNCTION_54_7();
  if (!v2) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v4 = __swift_project_value_buffer_0(v3, v1);
  return sub_1A88552C8(v4, v0, (void (*)(void))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_1A885584C(uint64_t a1)
{
  return sub_1A8854FA8(a1, type metadata accessor for PipeliningBehavior, static PipeliningBehavior.readsFlagsFromAnyMessage);
}

uint64_t PipeliningBehavior.readsFlagsFromAnyMessage.unsafeMutableAddressor()
{
  return sub_1A8855058(&qword_1E974CF20, type metadata accessor for PipeliningBehavior, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
}

uint64_t static PipeliningBehavior.readsFlagsFromAnyMessage.getter()
{
  return sub_1A88557F0();
}

uint64_t CommandStreamPart.pipeliningRequirements.getter()
{
  uint64_t v2 = v0;
  type metadata accessor for TaggedCommand();
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88552C8(v2, (uint64_t)v6, (void (*)(void))type metadata accessor for CommandStreamPart);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = MEMORY[0x1E4FBC870];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1A8760C34(*(void *)v6, *((void *)v6 + 1), *((void *)v6 + 2), *((void *)v6 + 3), *((void *)v6 + 4), *((void *)v6 + 5), *((void *)v6 + 6), v6[56]);
      break;
    case 2:
      swift_release();
      break;
    case 3:
      return v8;
    default:
      sub_1A885C668((uint64_t)v6, v1, (void (*)(void))type metadata accessor for TaggedCommand);
      uint64_t v8 = sub_1A8855A50();
      sub_1A8855650(v1, (void (*)(void))type metadata accessor for TaggedCommand);
      break;
  }
  return v8;
}

uint64_t sub_1A8855A50()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v77[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_49_11();
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_3_2();
  sub_1A88552C8(v1, (uint64_t)v0, (void (*)(void))type metadata accessor for Command);
  OUTLINED_FUNCTION_39_11();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v18 = MEMORY[0x1E4FBC870];
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
    case 9:
    case 10:
    case 13:
    case 27:
    case 33:
    case 34:
    case 35:
      goto LABEL_2;
    case 2:
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 3:
      OUTLINED_FUNCTION_4_59(EnumCaseMultiPayload, v11, v12, v13, v14, v15, v16, v17, v76);
      goto LABEL_12;
    case 4:
      OUTLINED_FUNCTION_19_25();
LABEL_12:
      swift_bridgeObjectRelease();
      sub_1A86FD454(v2, v8, (uint64_t)v6, v3);
      goto LABEL_45;
    case 5:
      swift_release();
      goto LABEL_45;
    case 6:
      OUTLINED_FUNCTION_47_12();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 11:
      swift_bridgeObjectRelease();
      goto LABEL_40;
    case 14:
    case 18:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974D580);
      OUTLINED_FUNCTION_20_22();
      sub_1A86FDAC4((uint64_t)v0, &qword_1E97477D0);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
      type metadata accessor for PipeliningRequirement(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v19 = OUTLINED_FUNCTION_2_72();
      *(_OWORD *)(v19 + 16) = xmmword_1A8AD8F20;
      OUTLINED_FUNCTION_11_37();
      goto LABEL_6;
    case 15:
      uint64_t v23 = *(unint64_t *)((char *)v0
                                + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974D590) + 48));
      swift_bridgeObjectRelease();
      uint64_t v76 = v18;
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        uint64_t v25 = v23 + 32;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        do
        {
          sub_1A86FD7DC(v25, (uint64_t)v77);
          sub_1A86FD8B0((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
          uint64_t v26 = sub_1A885867C();
          sub_1A885840C(v26);
          sub_1A86FD8B0((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
          v25 += 40;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
      type metadata accessor for PipeliningRequirement(0);
      OUTLINED_FUNCTION_0_98();
      OUTLINED_FUNCTION_21_20();
      char v71 = (__n128 *)OUTLINED_FUNCTION_44_8();
      OUTLINED_FUNCTION_36_14(v71, (__n128)xmmword_1A8AD8F20);
      swift_storeEnumTagMultiPayload();
      sub_1A885694C();
      uint64_t v18 = v72;
      goto LABEL_66;
    case 16:
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974D588);
      OUTLINED_FUNCTION_20_22();
      uint64_t v28 = *(unint64_t *)((char *)v0 + *(int *)(v27 + 64));
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
      uint64_t v29 = type metadata accessor for PipeliningRequirement(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v31 = *(void *)(v30 + 72);
      OUTLINED_FUNCTION_10_41();
      uint64_t v32 = 2 * v31;
      if ((v28 & 0x100) != 0)
      {
        uint64_t v33 = (__n128 *)swift_allocObject();
        OUTLINED_FUNCTION_6_49(v33, (__n128)xmmword_1A8AD8F80);
        OUTLINED_FUNCTION_37_13();
        uint64_t v36 = v3 + v32;
        if (qword_1E974CF10 != -1) {
          swift_once();
        }
        uint64_t v37 = static PipeliningRequirement.noFlagReadsFromAnyMessage;
      }
      else
      {
        uint64_t v33 = (__n128 *)swift_allocObject();
        OUTLINED_FUNCTION_6_49(v33, (__n128)xmmword_1A8AD8F10);
        OUTLINED_FUNCTION_37_13();
        uint64_t v34 = v3 + v32;
        if (qword_1E974CF10 != -1) {
          swift_once();
        }
        uint64_t v35 = __swift_project_value_buffer_0(v29, (uint64_t)static PipeliningRequirement.noFlagReadsFromAnyMessage);
        sub_1A88552C8(v35, v34, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v36 = v3 + 3 * v31;
        if (qword_1E974CF08 != -1) {
          swift_once();
        }
        uint64_t v37 = static PipeliningRequirement.noFlagChangesToAnyMessage;
      }
      uint64_t v62 = __swift_project_value_buffer_0(v29, (uint64_t)v37);
      sub_1A88552C8(v62, v36, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (v33[1].n128_u64[0])
      {
        uint64_t v18 = sub_1A8858E90((uint64_t)v33);
      }
      else
      {
        swift_setDeallocating();
        sub_1A8858E0C((void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v18 = MEMORY[0x1E4FBC870];
      }
      sub_1A8759C20();
LABEL_66:
      uint64_t v21 = &qword_1E97477D0;
      goto LABEL_67;
    case 17:
    case 23:
      unint64_t v22 = *v0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1A88567B4(v22);
      sub_1A872DDF0(v22);
      return v18;
    case 19:
      swift_release();
      swift_release();
      goto LABEL_47;
    case 20:
    case 21:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747800);
      OUTLINED_FUNCTION_20_22();
      uint64_t v21 = &qword_1E97477F0;
LABEL_67:
      uint64_t v73 = (uint64_t)v0;
      goto LABEL_68;
    case 22:
      uint64_t v38 = *(unint64_t *)((char *)v0
                                + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747810) + 48));
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v0, 1, v3) != 1)
      {
        sub_1A87AEA48((uint64_t)v0, v2);
        uint64_t v76 = v18;
        uint64_t v63 = *(void *)(v38 + 16);
        if (v63)
        {
          uint64_t v64 = v38 + 32;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          do
          {
            sub_1A86FD7DC(v64, (uint64_t)v77);
            sub_1A86FD8B0((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
            uint64_t v65 = sub_1A8858328();
            sub_1A885840C(v65);
            sub_1A86FD8B0((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
            v64 += 40;
            --v63;
          }
          while (v63);
          swift_bridgeObjectRelease_n();
          uint64_t v18 = v76;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v21 = &qword_1E9746200;
        uint64_t v73 = v2;
        goto LABEL_68;
      }
      uint64_t v76 = v18;
      uint64_t v39 = *(void *)(v38 + 16);
      if (v39)
      {
        uint64_t v40 = v38 + 32;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        do
        {
          sub_1A86FD7DC(v40, (uint64_t)v77);
          sub_1A86FD8B0((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
          uint64_t v41 = sub_1A885867C();
          sub_1A885840C(v41);
          sub_1A86FD8B0((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
          v40 += 40;
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease_n();
        uint64_t v18 = v76;
      }
      else
      {
LABEL_2:
        swift_bridgeObjectRelease();
      }
      break;
    case 24:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747808);
      OUTLINED_FUNCTION_20_22();
      uint64_t v42 = OUTLINED_FUNCTION_50_10();
      if (__swift_getEnumTagSinglePayload(v42, v43, v3) == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
        uint64_t v44 = type metadata accessor for PipeliningRequirement(0);
        OUTLINED_FUNCTION_0_98();
        uint64_t v46 = *(void *)(v45 + 72);
        OUTLINED_FUNCTION_21_20();
        if ((v8 & 0x100) != 0)
        {
          uint64_t v47 = OUTLINED_FUNCTION_25_17();
          *(_OWORD *)(v47 + 16) = xmmword_1A8AD8F00;
          uint64_t v50 = (uint64_t)&v6[v47];
          if (qword_1E974CF10 != -1) {
            swift_once();
          }
          uint64_t v51 = static PipeliningRequirement.noFlagReadsFromAnyMessage;
        }
        else
        {
          uint64_t v47 = OUTLINED_FUNCTION_25_17();
          *(_OWORD *)(v47 + 16) = xmmword_1A8AD8F20;
          uint64_t v48 = (uint64_t)&v6[v47];
          if (qword_1E974CF10 != -1) {
            swift_once();
          }
          uint64_t v49 = __swift_project_value_buffer_0(v44, (uint64_t)static PipeliningRequirement.noFlagReadsFromAnyMessage);
          sub_1A88552C8(v49, v48, (void (*)(void))type metadata accessor for PipeliningRequirement);
          uint64_t v50 = v48 + v46;
          if (qword_1E974CF08 != -1) {
            swift_once();
          }
          uint64_t v51 = static PipeliningRequirement.noFlagChangesToAnyMessage;
        }
        uint64_t v75 = __swift_project_value_buffer_0(v44, (uint64_t)v51);
        sub_1A88552C8(v75, v50, (void (*)(void))type metadata accessor for PipeliningRequirement);
        if (*(void *)(v47 + 16))
        {
          uint64_t v18 = sub_1A8858E90(v47);
          OUTLINED_FUNCTION_29_15();
        }
        else
        {
          swift_setDeallocating();
          sub_1A8858E0C((void (*)(void))type metadata accessor for PipeliningRequirement);
          OUTLINED_FUNCTION_29_15();
LABEL_48:
          uint64_t v18 = MEMORY[0x1E4FBC870];
        }
      }
      else
      {
        sub_1A87AEA48((uint64_t)v0, (uint64_t)v6);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
        type metadata accessor for PipeliningRequirement(0);
        OUTLINED_FUNCTION_0_98();
        uint64_t v67 = *(void *)(v66 + 72);
        unint64_t v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
        int v70 = (__n128 *)OUTLINED_FUNCTION_25_17();
        if ((v8 & 0x100) != 0)
        {
          OUTLINED_FUNCTION_46_12(v70, (__n128)xmmword_1A8AD8F00);
          OUTLINED_FUNCTION_35_12();
        }
        else
        {
          OUTLINED_FUNCTION_46_12(v70, (__n128)xmmword_1A8AD8F20);
          OUTLINED_FUNCTION_35_12();
          swift_storeEnumTagMultiPayload();
          sub_1A87AE8A0((uint64_t)v6, v69 + v67);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = sub_1A8858E90((uint64_t)v70);
        OUTLINED_FUNCTION_29_15();
        uint64_t v21 = &qword_1E9746200;
        uint64_t v73 = (uint64_t)v6;
LABEL_68:
        sub_1A86FDAC4(v73, v21);
      }
      break;
    case 25:
      sub_1A8855650((uint64_t)v0, (void (*)(void))type metadata accessor for Command);
      return v18;
    case 26:
LABEL_40:
      swift_release();
      return v18;
    case 28:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 29:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 30:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_47:
      swift_release();
      goto LABEL_48;
    case 31:
      unint64_t v52 = *v0;
      uint64_t v53 = v0[4];
      uint64_t v54 = v0[5];
      uint64_t v55 = v0[6];
      uint64_t v18 = sub_1A88567B4(*v0);
      sub_1A872DDF0(v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A8759BC8(v53, v54, v55);
      return v18;
    case 36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
      type metadata accessor for PipeliningRequirement(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v57 = *(void *)(v56 + 72);
      unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      uint64_t v60 = OUTLINED_FUNCTION_25_17();
      *(_OWORD *)(v60 + 16) = xmmword_1A8AD8F30;
      unint64_t v61 = v60 + v59;
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_17_31();
      OUTLINED_FUNCTION_18_25();
      sub_1A8854928(v61 + 3 * v57);
      swift_storeEnumTagMultiPayload();
      sub_1A8854928(v61 + 4 * v57);
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = v60;
      return sub_1A8858E90(v20);
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 43:
    case 45:
    case 46:
      return v18;
    case 42:
    case 44:
LABEL_4:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
      type metadata accessor for PipeliningRequirement(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v19 = OUTLINED_FUNCTION_8_46();
      *(_OWORD *)(v19 + 16) = xmmword_1A8AD8F00;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = v19;
      return sub_1A8858E90(v20);
    default:
LABEL_44:
      swift_bridgeObjectRelease();
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_48;
  }
  return v18;
}

uint64_t sub_1A88567B4(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for PipeliningRequirement(0);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_33_12();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v11 = MEMORY[0x1E4FBC870];
  if (sub_1A88587CC(a1))
  {
    OUTLINED_FUNCTION_39_11();
    swift_storeEnumTagMultiPayload();
    sub_1A885A430((uint64_t)v7, v1);
    sub_1A8855650((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningRequirement);
    OUTLINED_FUNCTION_39_11();
    swift_storeEnumTagMultiPayload();
    sub_1A885A430((uint64_t)v7, v1);
    sub_1A8855650((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningRequirement);
  }
  if (sub_1A88589A8(a1))
  {
    if (qword_1E974CF08 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer_0(v3, (uint64_t)static PipeliningRequirement.noFlagChangesToAnyMessage);
    sub_1A88552C8(v8, v1, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1A885A430((uint64_t)v7, v1);
    sub_1A8855650((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningRequirement);
  }
  return v11;
}

void sub_1A885694C()
{
  OUTLINED_FUNCTION_14();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10(0) - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v21 - v16;
  v21[1] = v7;
  uint64_t v18 = *(void *)(v9 + 16);
  if (v18)
  {
    uint64_t v19 = v9 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v20 = *(void *)(v15 + 72);
    do
    {
      sub_1A88552C8(v19, (uint64_t)v13, v5);
      v3(v17, v13);
      sub_1A8855650((uint64_t)v17, v1);
      v19 += v20;
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11();
}

void CommandStreamPart.pipeliningBehavior.getter()
{
  OUTLINED_FUNCTION_14();
  type metadata accessor for TaggedCommand();
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88552C8(v0, (uint64_t)v5, (void (*)(void))type metadata accessor for CommandStreamPart);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unsigned int v6 = v5[56];
      if (v6 >> 5 != 4 && v6 >> 5)
      {
        uint64_t v15 = OUTLINED_FUNCTION_28_15();
        sub_1A8760C34(v15, v16, v17, v18, v19, v20, v21, v6);
      }
      else
      {
        uint64_t v23 = *((void *)v5 + 6);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
        type metadata accessor for PipeliningBehavior(0);
        OUTLINED_FUNCTION_0_98();
        uint64_t v8 = OUTLINED_FUNCTION_26_15();
        *(_OWORD *)(v8 + 16) = xmmword_1A8AD8F00;
        swift_storeEnumTagMultiPayload();
        sub_1A88595F8(v8);
        uint64_t v9 = OUTLINED_FUNCTION_28_15();
        sub_1A8760C34(v9, v10, v11, v12, v13, v14, v23, v6);
      }
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v7 = OUTLINED_FUNCTION_5_49();
      *(_OWORD *)(v7 + 16) = xmmword_1A8AD8F80;
      OUTLINED_FUNCTION_11_37();
      OUTLINED_FUNCTION_37_13();
      swift_storeEnumTagMultiPayload();
      sub_1A88595F8(v7);
      break;
    default:
      sub_1A885C668((uint64_t)v5, v1, (void (*)(void))type metadata accessor for TaggedCommand);
      sub_1A8856D9C();
      sub_1A8855650(v1, (void (*)(void))type metadata accessor for TaggedCommand);
      break;
  }
  OUTLINED_FUNCTION_11();
}

void sub_1A8856D9C()
{
  OUTLINED_FUNCTION_14();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_9_41();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_49_11();
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_3_2();
  sub_1A88552C8(v1, (uint64_t)v0, (void (*)(void))type metadata accessor for Command);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
    case 9:
    case 10:
    case 13:
    case 27:
      goto LABEL_50;
    case 2:
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 3:
      OUTLINED_FUNCTION_4_59(EnumCaseMultiPayload, v9, v10, v11, v12, v13, v14, v15, v74);
      goto LABEL_12;
    case 4:
      OUTLINED_FUNCTION_19_25();
LABEL_12:
      swift_bridgeObjectRelease();
      sub_1A86FD454(v2, v1, v3, v6);
      goto LABEL_50;
    case 5:
      swift_release();
      goto LABEL_50;
    case 6:
      OUTLINED_FUNCTION_47_12();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_52;
    case 11:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_53;
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 14:
    case 18:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974D580);
      OUTLINED_FUNCTION_20_22();
      sub_1A86FDAC4((uint64_t)v0, &qword_1E97477D0);
      goto LABEL_5;
    case 15:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974D590);
      OUTLINED_FUNCTION_45_10();
      char v17 = sub_1A88580C8(v1);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      uint64_t v18 = type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v20 = *(void *)(v19 + 72);
      unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      if (v17)
      {
        uint64_t v23 = OUTLINED_FUNCTION_44_8();
        *(_OWORD *)(v23 + 16) = xmmword_1A8AD8F20;
        OUTLINED_FUNCTION_11_37();
        if (qword_1E974CF20 != -1) {
          swift_once();
        }
        uint64_t v24 = __swift_project_value_buffer_0(v18, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
        sub_1A88552C8(v24, v23 + v22 + v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
        if (!*(void *)(v23 + 16))
        {
          swift_setDeallocating();
          sub_1A8858E0C((void (*)(void))type metadata accessor for PipeliningBehavior);
          goto LABEL_75;
        }
      }
      else
      {
        uint64_t v23 = OUTLINED_FUNCTION_44_8();
        *(_OWORD *)(v23 + 16) = xmmword_1A8AD8F00;
        OUTLINED_FUNCTION_11_37();
      }
      sub_1A88595F8(v23);
LABEL_75:
      char v71 = &qword_1E97477D0;
      uint64_t v72 = (uint64_t)v0;
      goto LABEL_76;
    case 16:
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974D588);
      OUTLINED_FUNCTION_20_22();
      uint64_t v26 = *(unint64_t *)((char *)v0 + *(int *)(v25 + 64));
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      uint64_t v27 = type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v29 = *(void *)(v28 + 72);
      OUTLINED_FUNCTION_10_41();
      if ((v26 & 0x100) != 0)
      {
        uint64_t v30 = (__n128 *)swift_allocObject();
        OUTLINED_FUNCTION_6_49(v30, (__n128)xmmword_1A8AD8F20);
        uint64_t v32 = v6 + v29;
        if (qword_1E974CF18 != -1) {
          swift_once();
        }
        uint64_t v33 = static PipeliningBehavior.changesFlagsOnAnyMessage;
      }
      else
      {
        uint64_t v30 = (__n128 *)swift_allocObject();
        OUTLINED_FUNCTION_6_49(v30, (__n128)xmmword_1A8AD8F80);
        if (qword_1E974CF18 != -1) {
          swift_once();
        }
        uint64_t v31 = __swift_project_value_buffer_0(v27, (uint64_t)static PipeliningBehavior.changesFlagsOnAnyMessage);
        sub_1A88552C8(v31, v6 + v29, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v32 = v6 + 2 * v29;
        if (qword_1E974CF20 != -1) {
          swift_once();
        }
        uint64_t v33 = static PipeliningBehavior.readsFlagsFromAnyMessage;
      }
      uint64_t v59 = __swift_project_value_buffer_0(v27, (uint64_t)v33);
      sub_1A88552C8(v59, v32, (void (*)(void))type metadata accessor for PipeliningBehavior);
      if (v30[1].n128_u64[0])
      {
        sub_1A88595F8((uint64_t)v30);
      }
      else
      {
        swift_setDeallocating();
        sub_1A8858E0C((void (*)(void))type metadata accessor for PipeliningBehavior);
      }
      sub_1A8759C20();
      goto LABEL_75;
    case 17:
      unint64_t v34 = *v0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A88581B8(v34);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1A8AD8F00;
      goto LABEL_37;
    case 19:
      swift_release();
      swift_release();
      goto LABEL_52;
    case 20:
    case 21:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747800);
      OUTLINED_FUNCTION_20_22();
      sub_1A86FDAC4((uint64_t)v0, &qword_1E97477F0);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v16 = OUTLINED_FUNCTION_5_49();
      *(_OWORD *)(v16 + 16) = xmmword_1A8AD8F80;
      OUTLINED_FUNCTION_11_37();
      OUTLINED_FUNCTION_37_13();
      goto LABEL_54;
    case 22:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747810);
      OUTLINED_FUNCTION_45_10();
      if (__swift_getEnumTagSinglePayload((uint64_t)v0, 1, v3) != 1)
      {
        sub_1A87AEA48((uint64_t)v0, v2);
        char v60 = sub_1A88580C8(v1);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
        type metadata accessor for PipeliningBehavior(0);
        OUTLINED_FUNCTION_0_98();
        uint64_t v62 = *(void *)(v61 + 72);
        unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        uint64_t v65 = swift_allocObject();
        if (v60)
        {
          *(_OWORD *)(v65 + 16) = xmmword_1A8AD8F10;
          OUTLINED_FUNCTION_17_31();
          OUTLINED_FUNCTION_18_25();
          OUTLINED_FUNCTION_23_17();
          sub_1A87AE8A0(v2, v65 + v64 + 3 * v62);
        }
        else
        {
          *(_OWORD *)(v65 + 16) = xmmword_1A8AD8F80;
          OUTLINED_FUNCTION_17_31();
          OUTLINED_FUNCTION_18_25();
        }
        swift_storeEnumTagMultiPayload();
        sub_1A88595F8(v65);
        char v71 = &qword_1E9746200;
        uint64_t v72 = v2;
        goto LABEL_76;
      }
      char v35 = sub_1A88580C8(v1);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      uint64_t v36 = type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v38 = *(void *)(v37 + 72);
      OUTLINED_FUNCTION_10_41();
      if (v35)
      {
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1A8AD8F10;
        OUTLINED_FUNCTION_17_31();
        OUTLINED_FUNCTION_18_25();
        OUTLINED_FUNCTION_23_17();
        if (qword_1E974CF20 != -1) {
          swift_once();
        }
        uint64_t v40 = __swift_project_value_buffer_0(v36, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
        sub_1A88552C8(v40, v39 + v6 + 3 * v38, (void (*)(void))type metadata accessor for PipeliningBehavior);
        if (!*(void *)(v39 + 16))
        {
          swift_setDeallocating();
          sub_1A8858E0C((void (*)(void))type metadata accessor for PipeliningBehavior);
          break;
        }
      }
      else
      {
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1A8AD8F80;
        OUTLINED_FUNCTION_17_31();
        OUTLINED_FUNCTION_18_25();
        OUTLINED_FUNCTION_23_17();
      }
      uint64_t v55 = v39;
LABEL_55:
      sub_1A88595F8(v55);
      break;
    case 23:
      unint64_t v34 = *v0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A88581B8(v34);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      OUTLINED_FUNCTION_21_20();
      uint64_t v41 = (__n128 *)OUTLINED_FUNCTION_44_8();
      OUTLINED_FUNCTION_36_14(v41, (__n128)xmmword_1A8AD8F80);
      swift_storeEnumTagMultiPayload();
LABEL_37:
      swift_storeEnumTagMultiPayload();
      sub_1A885694C();
      sub_1A872DDF0(v34);
      break;
    case 24:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747808);
      OUTLINED_FUNCTION_20_22();
      uint64_t v42 = OUTLINED_FUNCTION_50_10();
      if (__swift_getEnumTagSinglePayload(v42, v43, v3) == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
        uint64_t v44 = type metadata accessor for PipeliningBehavior(0);
        OUTLINED_FUNCTION_0_98();
        uint64_t v46 = *(void *)(v45 + 72);
        OUTLINED_FUNCTION_21_20();
        uint64_t v47 = 3 * v46;
        if ((v1 & 0x100) != 0)
        {
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_1A8AD8F10;
          OUTLINED_FUNCTION_17_31();
          OUTLINED_FUNCTION_18_25();
          OUTLINED_FUNCTION_23_17();
          uint64_t v52 = v48 + v3 + v47;
          if (qword_1E974CF18 != -1) {
            swift_once();
          }
          uint64_t v53 = static PipeliningBehavior.changesFlagsOnAnyMessage;
        }
        else
        {
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_1A8AD8F30;
          uint64_t v49 = v48 + v3;
          OUTLINED_FUNCTION_17_31();
          OUTLINED_FUNCTION_18_25();
          OUTLINED_FUNCTION_23_17();
          uint64_t v50 = v49 + v47;
          if (qword_1E974CF18 != -1) {
            swift_once();
          }
          uint64_t v51 = __swift_project_value_buffer_0(v44, (uint64_t)static PipeliningBehavior.changesFlagsOnAnyMessage);
          sub_1A88552C8(v51, v50, (void (*)(void))type metadata accessor for PipeliningBehavior);
          uint64_t v52 = v49 + 4 * v46;
          if (qword_1E974CF20 != -1) {
            swift_once();
          }
          uint64_t v53 = static PipeliningBehavior.readsFlagsFromAnyMessage;
        }
        uint64_t v73 = __swift_project_value_buffer_0(v44, (uint64_t)v53);
        sub_1A88552C8(v73, v52, (void (*)(void))type metadata accessor for PipeliningBehavior);
        if (*(void *)(v48 + 16))
        {
          sub_1A88595F8(v48);
        }
        else
        {
          swift_setDeallocating();
          sub_1A8858E0C((void (*)(void))type metadata accessor for PipeliningBehavior);
        }
        OUTLINED_FUNCTION_29_15();
      }
      else
      {
        sub_1A87AEA48((uint64_t)v0, v1);
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
        type metadata accessor for PipeliningBehavior(0);
        OUTLINED_FUNCTION_0_98();
        uint64_t v67 = *(void *)(v66 + 72);
        OUTLINED_FUNCTION_10_41();
        uint64_t v68 = 3 * v67;
        uint64_t v69 = swift_allocObject();
        if ((v1 & 0x100) != 0)
        {
          *(_OWORD *)(v69 + 16) = xmmword_1A8AD8F10;
          OUTLINED_FUNCTION_17_31();
          OUTLINED_FUNCTION_18_25();
          OUTLINED_FUNCTION_23_17();
          sub_1A87AE8A0(v1, v69 + v6 + v68);
        }
        else
        {
          *(_OWORD *)(v69 + 16) = xmmword_1A8AD8F30;
          uint64_t v70 = v69 + v6;
          OUTLINED_FUNCTION_17_31();
          OUTLINED_FUNCTION_18_25();
          OUTLINED_FUNCTION_23_17();
          sub_1A87AE8A0(v1, v70 + v68);
          swift_storeEnumTagMultiPayload();
          sub_1A87AE8A0(v1, v70 + 4 * v67);
          OUTLINED_FUNCTION_35_12();
        }
        swift_storeEnumTagMultiPayload();
        sub_1A88595F8(v69);
        OUTLINED_FUNCTION_29_15();
        char v71 = &qword_1E9746200;
        uint64_t v72 = v1;
LABEL_76:
        sub_1A86FDAC4(v72, v71);
      }
      break;
    case 25:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v54 = OUTLINED_FUNCTION_25_17();
      *(_OWORD *)(v54 + 16) = xmmword_1A8AD8F80;
      OUTLINED_FUNCTION_191();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1A88595F8(v54);
      sub_1A8855650((uint64_t)v0, (void (*)(void))type metadata accessor for Command);
      break;
    case 26:
      goto LABEL_52;
    case 28:
      swift_bridgeObjectRelease();
      goto LABEL_52;
    case 29:
      swift_bridgeObjectRelease();
      goto LABEL_49;
    case 30:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_52:
      swift_release();
      goto LABEL_53;
    case 31:
      unint64_t v56 = *v0;
      uint64_t v57 = v0[5];
      uint64_t v58 = v0[6];
      uint64_t v75 = v0[4];
      sub_1A88581B8(*v0);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1A8AD8F80;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1A885694C();
      sub_1A872DDF0(v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A8759BC8(v75, v57, v58);
      break;
    case 33:
    case 34:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v16 = OUTLINED_FUNCTION_2_72();
      OUTLINED_FUNCTION_22_21((__n128 *)v16, (__n128)xmmword_1A8AD8F20);
      swift_storeEnumTagMultiPayload();
      goto LABEL_54;
    case 35:
      goto LABEL_59;
    case 36:
      swift_bridgeObjectRelease();
LABEL_59:
      swift_bridgeObjectRelease();
      goto LABEL_53;
    case 37:
    case 38:
    case 40:
    case 46:
      goto LABEL_53;
    case 39:
    case 41:
    case 43:
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v16 = OUTLINED_FUNCTION_2_72();
      *(_OWORD *)(v16 + 16) = xmmword_1A8AD8F20;
      goto LABEL_6;
    case 42:
    case 44:
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v16 = OUTLINED_FUNCTION_2_72();
      OUTLINED_FUNCTION_22_21((__n128 *)v16, (__n128)xmmword_1A8AD8F20);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      goto LABEL_54;
    case 45:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v16 = OUTLINED_FUNCTION_5_49();
      OUTLINED_FUNCTION_22_21((__n128 *)v16, (__n128)xmmword_1A8AD8F80);
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_11_37();
      goto LABEL_54;
    default:
LABEL_49:
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
LABEL_53:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC8);
      type metadata accessor for PipeliningBehavior(0);
      OUTLINED_FUNCTION_0_98();
      uint64_t v16 = OUTLINED_FUNCTION_8_46();
      *(_OWORD *)(v16 + 16) = xmmword_1A8AD8F00;
LABEL_54:
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = v16;
      goto LABEL_55;
  }
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1A88580C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  for (i = (unsigned int *)(a1 + 64); ; i += 10)
  {
    if (*((unsigned __int8 *)i + 4) >> 5 >= 6u)
    {
      unint64_t v3 = *i | ((unint64_t)*((unsigned __int8 *)i + 4) << 32);
      uint64_t v4 = *((void *)i - 1);
      uint64_t v5 = *((void *)i - 4);
      uint64_t v6 = *((void *)i - 2) | *((void *)i - 3);
      if (v6 | v5 | v4 || v3 != 0xC000000000)
      {
        uint64_t v8 = v6 | v4;
        BOOL v9 = v3 == 0xC000000000 && v5 == 1;
        if (v9 && v8 == 0) {
          break;
        }
      }
    }
    if (!--v1) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1A88581B8(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for PipeliningBehavior(0);
  OUTLINED_FUNCTION_6();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_33_12();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v11 = MEMORY[0x1E4FBC870];
  if (sub_1A8858BBC(a1))
  {
    OUTLINED_FUNCTION_39_11();
    swift_storeEnumTagMultiPayload();
    sub_1A885AA08((uint64_t)v7, v1);
    sub_1A8855650((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningBehavior);
  }
  if (sub_1A88589A8(a1))
  {
    if (qword_1E974CF20 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer_0(v3, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
    sub_1A88552C8(v8, v1, (void (*)(void))type metadata accessor for PipeliningBehavior);
    sub_1A885AA08((uint64_t)v7, v1);
    sub_1A8855650((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningBehavior);
  }
  return v11;
}

uint64_t sub_1A8858328()
{
  sub_1A86FD7DC(v0, (uint64_t)v9);
  OUTLINED_FUNCTION_27_15();
  if (!v3) {
    return MEMORY[0x1E4FBC870];
  }
  OUTLINED_FUNCTION_38_10();
  BOOL v3 = v3 && v2 == 1;
  if (!v3 || v1 != 0) {
    return MEMORY[0x1E4FBC870];
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
  type metadata accessor for PipeliningRequirement(0);
  OUTLINED_FUNCTION_0_98();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A8AD8F00;
  uint64_t v7 = OUTLINED_FUNCTION_39_11();
  sub_1A87AE8A0(v7, v8);
  OUTLINED_FUNCTION_191();
  swift_storeEnumTagMultiPayload();
  return sub_1A8858E90(v6);
}

void sub_1A885840C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - v10;
  int64_t v12 = 0;
  uint64_t v13 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a1 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v12 << 6))
  {
    sub_1A88552C8(*(void *)(a1 + 48) + *(void *)(v3 + 72) * i, (uint64_t)v11, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1A885C668((uint64_t)v11, (uint64_t)v5, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1A885A430((uint64_t)v8, (uint64_t)v5);
    sub_1A8855650((uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningRequirement);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v17) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v13 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v17) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v13 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v17) {
          goto LABEL_23;
        }
        unint64_t v21 = *(void *)(v13 + 8 * v12);
        if (!v21)
        {
          int64_t v12 = v20 + 3;
          if (v20 + 3 >= v17) {
            goto LABEL_23;
          }
          unint64_t v21 = *(void *)(v13 + 8 * v12);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v17)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v21 = *(void *)(v13 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v17) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v13 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1A885867C()
{
  sub_1A86FD7DC(v0, (uint64_t)v12);
  OUTLINED_FUNCTION_27_15();
  if (v3)
  {
    OUTLINED_FUNCTION_38_10();
    BOOL v3 = v3 && v2 == 1;
    if (v3 && v1 == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE08);
      uint64_t v5 = type metadata accessor for PipeliningRequirement(0);
      OUTLINED_FUNCTION_0_98();
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1A8AD8F00;
      uint64_t v9 = v8 + v7;
      if (qword_1E974CF08 != -1) {
        swift_once();
      }
      uint64_t v10 = __swift_project_value_buffer_0(v5, (uint64_t)static PipeliningRequirement.noFlagChangesToAnyMessage);
      sub_1A88552C8(v10, v9, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (*(void *)(v8 + 16)) {
        return sub_1A8858E90(v8);
      }
      swift_setDeallocating();
      sub_1A8858E0C((void (*)(void))type metadata accessor for PipeliningRequirement);
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1A88587CC(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  uint64_t result = 0;
  switch(v2)
  {
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1A872DD38(v4);
      char v5 = sub_1A88587CC(v4);
      sub_1A872DDF0(v4);
      return v5 & 1;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_1A872DD38(v8);
      sub_1A872DD38(v7);
      if (sub_1A88587CC(v8))
      {
        sub_1A872DDF0(v8);
        sub_1A872DDF0(v7);
        return 1;
      }
      char v14 = sub_1A88587CC(v7);
      sub_1A872DDF0(v8);
      sub_1A872DDF0(v7);
      return v14 & 1;
    case 0x17uLL:
    case 0x1BuLL:
      return 1;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        return 0;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v11 = 0;
      break;
    default:
      return result;
  }
  do
  {
    unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
    sub_1A872DD38(v12);
    char v13 = sub_1A88587CC(v12);
    sub_1A872DDF0(v12);
    if (v13)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    ++v11;
  }
  while (v10 != v11);
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_1A88589A8(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  BOOL result = 0;
  switch(v2)
  {
    case 5uLL:
    case 0xBuLL:
    case 0x1BuLL:
      return 1;
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1A872DD38(v4);
      char v5 = sub_1A88589A8(v4);
      sub_1A872DDF0(v4);
      return v5 & 1;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_1A872DD38(v8);
      sub_1A872DD38(v7);
      if (sub_1A88589A8(v8))
      {
        sub_1A872DDF0(v8);
        sub_1A872DDF0(v7);
        return 1;
      }
      char v14 = sub_1A88589A8(v7);
      sub_1A872DDF0(v8);
      sub_1A872DDF0(v7);
      return v14 & 1;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        return 0;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v11 = 0;
      break;
    case 0x1CuLL:
      return *(void *)(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20) + 16) != 0;
    case 0x1DuLL:
      return (0x3F8Eu >> ((a1 + 131068) >> 3)) & 1;
    default:
      return result;
  }
  while (1)
  {
    unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
    sub_1A872DD38(v12);
    char v13 = sub_1A88589A8(v12);
    sub_1A872DDF0(v12);
    if (v13) {
      break;
    }
    if (v10 == ++v11)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1A8858BBC(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  uint64_t result = 0;
  switch(v2)
  {
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1A872DD38(v4);
      char v5 = sub_1A8858BBC(v4);
      sub_1A872DDF0(v4);
      return v5 & 1;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_1A872DD38(v8);
      sub_1A872DD38(v7);
      if (sub_1A8858BBC(v8))
      {
        sub_1A872DDF0(v8);
        sub_1A872DDF0(v7);
        return 1;
      }
      char v14 = sub_1A8858BBC(v7);
      sub_1A872DDF0(v8);
      sub_1A872DDF0(v7);
      return v14 & 1;
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x1BuLL:
      return 1;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        return 0;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v11 = 0;
      break;
    default:
      return result;
  }
  do
  {
    unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
    sub_1A872DD38(v12);
    char v13 = sub_1A8858BBC(v12);
    sub_1A872DDF0(v12);
    if (v13)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    ++v11;
  }
  while (v10 != v11);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A8858D98()
{
  return sub_1A8858DB0(&qword_1E97460A8);
}

uint64_t sub_1A8858DA4()
{
  return sub_1A8858DB0(&qword_1E974DE18);
}

uint64_t sub_1A8858DB0(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName_0(a1);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1A8858E0C(void (*a1)(void))
{
  a1(0);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1A8858E90(uint64_t a1)
{
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDB8);
  MEMORY[0x1F4188790](v64);
  BOOL v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v60 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v54 = (uint64_t)&v53 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v53 = (uint64_t)&v53 - v9;
  uint64_t v10 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v58 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v63 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v53 - v13;
  MEMORY[0x1F4188790](v15);
  int64_t v17 = (char *)&v53 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v61 = (uint64_t)&v53 - v19;
  MEMORY[0x1F4188790](v20);
  int64_t v22 = (char *)&v53 - v21;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v24 = MEMORY[0x1E4FBC870];
    goto LABEL_30;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE10);
  uint64_t v23 = sub_1A8A77D78();
  uint64_t v24 = v23;
  uint64_t v57 = *(void *)(a1 + 16);
  if (v57)
  {
    unint64_t v25 = 0;
    uint64_t v26 = v23 + 56;
    uint64_t v27 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v55 = a1;
    uint64_t v56 = a1 + ((v27 + 32) & ~v27);
    uint64_t v59 = v23 + 56;
    while (1)
    {
      if (v25 >= *(void *)(a1 + 16))
      {
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v28 = *(void *)(v58 + 72);
      unint64_t v62 = v25 + 1;
      uint64_t v66 = v28;
      sub_1A88552C8(v56 + v28 * v25, (uint64_t)v22, (void (*)(void))type metadata accessor for PipeliningRequirement);
      sub_1A8A78738();
      sub_1A88552C8((uint64_t)v22, v61, (void (*)(void))type metadata accessor for PipeliningRequirement);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
          sub_1A8A78768();
          break;
        default:
          uint64_t v29 = v53;
          sub_1A87AEA48(v61, v53);
          sub_1A8A78768();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          sub_1A8734E44();
          sub_1A8A76228();
          sub_1A86FDAC4(v29, &qword_1E9746200);
          break;
      }
      uint64_t v30 = sub_1A8A787C8();
      uint64_t v65 = ~(-1 << *(unsigned char *)(v24 + 32));
      unint64_t v31 = v30 & v65;
      unint64_t v32 = (v30 & (unint64_t)v65) >> 6;
      uint64_t v33 = *(void *)(v26 + 8 * v32);
      uint64_t v34 = 1 << (v30 & v65);
      if ((v34 & v33) == 0)
      {
LABEL_24:
        *(void *)(v26 + 8 * v32) = v34 | v33;
        sub_1A885C668((uint64_t)v22, *(void *)(v24 + 48) + v31 * v66, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v49 = *(void *)(v24 + 16);
        BOOL v50 = __OFADD__(v49, 1);
        uint64_t v51 = v49 + 1;
        if (!v50)
        {
          *(void *)(v24 + 16) = v51;
          goto LABEL_27;
        }
LABEL_32:
        __break(1u);
        JUMPOUT(0x1A88595D0);
      }
      while (2)
      {
        sub_1A88552C8(*(void *)(v24 + 48) + v31 * v66, (uint64_t)v17, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v35 = (uint64_t)&v3[*(int *)(v64 + 48)];
        sub_1A88552C8((uint64_t)v17, (uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_1A88552C8((uint64_t)v22, v35, (void (*)(void))type metadata accessor for PipeliningRequirement);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v41 = v63;
            sub_1A88552C8((uint64_t)v3, v63, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v37 = v41;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_16;
            }
            uint64_t v43 = v60;
            sub_1A87AEA48(v35, v60);
            sub_1A872DF54();
            uint64_t v44 = v10;
            uint64_t v45 = v22;
            uint64_t v46 = v24;
            uint64_t v47 = v14;
            uint64_t v48 = v63;
            char v39 = sub_1A8A78928();
            sub_1A86FDAC4(v43, &qword_1E9746200);
            uint64_t v40 = v48;
            char v14 = v47;
            uint64_t v24 = v46;
            int64_t v22 = v45;
            uint64_t v10 = v44;
            uint64_t v26 = v59;
            goto LABEL_14;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_26;
            }
            goto LABEL_22;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_26;
            }
            goto LABEL_22;
          case 4u:
            if (swift_getEnumCaseMultiPayload() != 4) {
              goto LABEL_22;
            }
            goto LABEL_26;
          default:
            sub_1A88552C8((uint64_t)v3, (uint64_t)v14, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int v36 = swift_getEnumCaseMultiPayload();
            uint64_t v37 = (uint64_t)v14;
            if (v36)
            {
LABEL_16:
              sub_1A86FDAC4(v37, &qword_1E9746200);
LABEL_22:
              sub_1A86FDAC4((uint64_t)v3, &qword_1E974DDB8);
              goto LABEL_23;
            }
            uint64_t v38 = v54;
            sub_1A87AEA48(v35, v54);
            sub_1A872DF54();
            char v39 = sub_1A8A78928();
            sub_1A86FDAC4(v38, &qword_1E9746200);
            uint64_t v40 = (uint64_t)v14;
LABEL_14:
            sub_1A86FDAC4(v40, &qword_1E9746200);
            if ((v39 & 1) == 0)
            {
              sub_1A8855650((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningRequirement);
LABEL_23:
              sub_1A8855650((uint64_t)v17, (void (*)(void))type metadata accessor for PipeliningRequirement);
              unint64_t v31 = (v31 + 1) & v65;
              unint64_t v32 = v31 >> 6;
              uint64_t v33 = *(void *)(v26 + 8 * (v31 >> 6));
              uint64_t v34 = 1 << v31;
              if ((v33 & (1 << v31)) == 0) {
                goto LABEL_24;
              }
              continue;
            }
LABEL_26:
            sub_1A8855650((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningRequirement);
            sub_1A8855650((uint64_t)v17, (void (*)(void))type metadata accessor for PipeliningRequirement);
            sub_1A8855650((uint64_t)v22, (void (*)(void))type metadata accessor for PipeliningRequirement);
LABEL_27:
            unint64_t v25 = v62;
            a1 = v55;
            if (v62 == v57) {
              goto LABEL_30;
            }
            break;
        }
        break;
      }
    }
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1A88595F8(uint64_t a1)
{
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC0);
  MEMORY[0x1F4188790](v62);
  BOOL v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v53 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v52 = (uint64_t)&v51 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (uint64_t)&v51 - v9;
  uint64_t v10 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v58 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v61 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v51 - v13;
  MEMORY[0x1F4188790](v15);
  int64_t v17 = (char *)&v51 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v59 = (uint64_t)&v51 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v54 = (char *)&v51 - v21;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v23 = MEMORY[0x1E4FBC870];
    goto LABEL_34;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE00);
  uint64_t v22 = sub_1A8A77D78();
  uint64_t v23 = v22;
  uint64_t v57 = *(void *)(a1 + 16);
  if (v57)
  {
    unint64_t v24 = 0;
    uint64_t v63 = v22 + 56;
    uint64_t v25 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v55 = a1;
    uint64_t v56 = a1 + ((v25 + 32) & ~v25);
    uint64_t v26 = (uint64_t)v54;
    while (1)
    {
      if (v24 >= *(void *)(a1 + 16))
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v27 = *(void *)(v58 + 72);
      unint64_t v60 = v24 + 1;
      uint64_t v64 = v27;
      sub_1A88552C8(v56 + v27 * v24, v26, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_1A8A78738();
      sub_1A88552C8(v26, v59, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          sub_1A8A78768();
          break;
        default:
          uint64_t v28 = v51;
          sub_1A87AEA48(v59, v51);
          sub_1A8A78768();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          sub_1A8734E44();
          sub_1A8A76228();
          sub_1A86FDAC4(v28, &qword_1E9746200);
          break;
      }
      uint64_t v29 = sub_1A8A787C8();
      uint64_t v30 = ~(-1 << *(unsigned char *)(v23 + 32));
      unint64_t v31 = v29 & v30;
      unint64_t v32 = (v29 & (unint64_t)v30) >> 6;
      uint64_t v33 = *(void *)(v63 + 8 * v32);
      uint64_t v34 = 1 << (v29 & v30);
      if ((v34 & v33) == 0)
      {
LABEL_28:
        *(void *)(v63 + 8 * v32) = v34 | v33;
        sub_1A885C668(v26, *(void *)(v23 + 48) + v31 * v64, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v47 = *(void *)(v23 + 16);
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (!v48)
        {
          *(void *)(v23 + 16) = v49;
          goto LABEL_31;
        }
LABEL_36:
        __break(1u);
        JUMPOUT(0x1A8859D78);
      }
      while (2)
      {
        sub_1A88552C8(*(void *)(v23 + 48) + v31 * v64, (uint64_t)v17, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v35 = (uint64_t)&v3[*(int *)(v62 + 48)];
        sub_1A88552C8((uint64_t)v17, (uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningBehavior);
        sub_1A88552C8(v26, v35, (void (*)(void))type metadata accessor for PipeliningBehavior);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v41 = v61;
            sub_1A88552C8((uint64_t)v3, v61, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v37 = v41;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_16;
            }
            uint64_t v43 = v53;
            sub_1A87AEA48(v35, v53);
            sub_1A872DF54();
            uint64_t v44 = v23;
            uint64_t v45 = v14;
            uint64_t v46 = v61;
            char v39 = sub_1A8A78928();
            sub_1A86FDAC4(v43, &qword_1E9746200);
            uint64_t v40 = v46;
            char v14 = v45;
            uint64_t v23 = v44;
            uint64_t v26 = (uint64_t)v54;
            goto LABEL_14;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_30;
            }
            goto LABEL_26;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_30;
            }
            goto LABEL_26;
          case 4u:
            if (swift_getEnumCaseMultiPayload() == 4) {
              goto LABEL_30;
            }
            goto LABEL_26;
          case 5u:
            if (swift_getEnumCaseMultiPayload() == 5) {
              goto LABEL_30;
            }
            goto LABEL_26;
          case 6u:
            if (swift_getEnumCaseMultiPayload() != 6) {
              goto LABEL_26;
            }
            goto LABEL_30;
          default:
            sub_1A88552C8((uint64_t)v3, (uint64_t)v14, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int v36 = swift_getEnumCaseMultiPayload();
            uint64_t v37 = (uint64_t)v14;
            if (v36)
            {
LABEL_16:
              sub_1A86FDAC4(v37, &qword_1E9746200);
LABEL_26:
              sub_1A86FDAC4((uint64_t)v3, &qword_1E974DDC0);
              goto LABEL_27;
            }
            uint64_t v38 = v52;
            sub_1A87AEA48(v35, v52);
            sub_1A872DF54();
            char v39 = sub_1A8A78928();
            sub_1A86FDAC4(v38, &qword_1E9746200);
            uint64_t v40 = (uint64_t)v14;
LABEL_14:
            sub_1A86FDAC4(v40, &qword_1E9746200);
            if ((v39 & 1) == 0)
            {
              sub_1A8855650((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningBehavior);
LABEL_27:
              sub_1A8855650((uint64_t)v17, (void (*)(void))type metadata accessor for PipeliningBehavior);
              unint64_t v31 = (v31 + 1) & v30;
              unint64_t v32 = v31 >> 6;
              uint64_t v33 = *(void *)(v63 + 8 * (v31 >> 6));
              uint64_t v34 = 1 << v31;
              if ((v33 & (1 << v31)) == 0) {
                goto LABEL_28;
              }
              continue;
            }
LABEL_30:
            sub_1A8855650((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningBehavior);
            sub_1A8855650((uint64_t)v17, (void (*)(void))type metadata accessor for PipeliningBehavior);
            sub_1A8855650(v26, (void (*)(void))type metadata accessor for PipeliningBehavior);
LABEL_31:
            unint64_t v24 = v60;
            a1 = v55;
            if (v60 == v57) {
              goto LABEL_34;
            }
            break;
        }
        break;
      }
    }
  }
LABEL_34:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1A8859DB0()
{
  return sub_1A8859E40(&qword_1E974DDD0, (void (*)(uint64_t))type metadata accessor for PipeliningRequirement);
}

uint64_t sub_1A8859DF8()
{
  return sub_1A8859E40(&qword_1E974DDD8, (void (*)(uint64_t))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_1A8859E40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t assignWithCopy for PipeliningRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A885A12C(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningRequirement);
}

uint64_t assignWithTake for PipeliningRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A885A2D4(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningRequirement);
}

uint64_t *_s12NIOIMAPCore221PipeliningRequirementOwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = *(void *)(a3 - 8);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      OUTLINED_FUNCTION_6();
      uint64_t v11 = OUTLINED_FUNCTION_3_60();
      v12(v11);
      OUTLINED_FUNCTION_16_28();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        OUTLINED_FUNCTION_40_12(EnumCaseMultiPayload, v7, *(void *)(v5 + 64));
        return a1;
      }
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      OUTLINED_FUNCTION_6();
      uint64_t v8 = OUTLINED_FUNCTION_3_60();
      v9(v8);
      OUTLINED_FUNCTION_15_30();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwxx_0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
    OUTLINED_FUNCTION_6();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    return v5(a1, v3);
  }
  return result;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwcp_0()
{
  uint64_t v2 = OUTLINED_FUNCTION_43_9();
  if (v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
    OUTLINED_FUNCTION_6();
    uint64_t v6 = OUTLINED_FUNCTION_3_60();
    v7(v6);
    OUTLINED_FUNCTION_16_28();
  }
  else
  {
    if (v2)
    {
      OUTLINED_FUNCTION_40_12(v2, v3, *(void *)(*(void *)(v1 - 8) + 64));
      return v0;
    }
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
    OUTLINED_FUNCTION_6();
    uint64_t v4 = OUTLINED_FUNCTION_3_60();
    v5(v4);
    OUTLINED_FUNCTION_15_30();
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for PipeliningBehavior(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A885A12C(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_1A885A12C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1 != a2)
  {
    OUTLINED_FUNCTION_55_9(a1, a2, a3, a4);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      OUTLINED_FUNCTION_6();
      uint64_t v10 = OUTLINED_FUNCTION_3_60();
      v11(v10);
      OUTLINED_FUNCTION_16_28();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        OUTLINED_FUNCTION_40_12(EnumCaseMultiPayload, v7, *(void *)(*(void *)(v4 - 8) + 64));
        return a1;
      }
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      OUTLINED_FUNCTION_6();
      uint64_t v8 = OUTLINED_FUNCTION_3_60();
      v9(v8);
      OUTLINED_FUNCTION_15_30();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwtk_0()
{
  uint64_t v2 = OUTLINED_FUNCTION_43_9();
  if (v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
    OUTLINED_FUNCTION_6();
    uint64_t v6 = OUTLINED_FUNCTION_27_6();
    v7(v6);
    OUTLINED_FUNCTION_16_28();
  }
  else
  {
    if (v2)
    {
      OUTLINED_FUNCTION_40_12(v2, v3, *(void *)(*(void *)(v1 - 8) + 64));
      return v0;
    }
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
    OUTLINED_FUNCTION_6();
    uint64_t v4 = OUTLINED_FUNCTION_27_6();
    v5(v4);
    OUTLINED_FUNCTION_15_30();
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for PipeliningBehavior(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A885A2D4(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_1A885A2D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1 != a2)
  {
    OUTLINED_FUNCTION_55_9(a1, a2, a3, a4);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      OUTLINED_FUNCTION_6();
      uint64_t v10 = OUTLINED_FUNCTION_27_6();
      v11(v10);
      OUTLINED_FUNCTION_16_28();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        OUTLINED_FUNCTION_40_12(EnumCaseMultiPayload, v7, *(void *)(*(void *)(v4 - 8) + 64));
        return a1;
      }
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
      OUTLINED_FUNCTION_6();
      uint64_t v8 = OUTLINED_FUNCTION_27_6();
      v9(v8);
      OUTLINED_FUNCTION_15_30();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1A885A3A8()
{
  sub_1A87872AC();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1A885A430(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (uint64_t)&v40 - v9;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDB8);
  MEMORY[0x1F4188790](v50);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v44 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v47 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v49 = (uint64_t)&v40 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v40 - v20;
  uint64_t v22 = *v3;
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v51 = a2;
  PipeliningRequirement.hash(into:)();
  uint64_t v23 = sub_1A8A787C8();
  uint64_t v24 = -1 << *(unsigned char *)(v22 + 32);
  unint64_t v25 = v23 & ~v24;
  if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v41 = v21;
  uint64_t v42 = v3;
  uint64_t v43 = a1;
  uint64_t v48 = ~v24;
  uint64_t v26 = *(void *)(v44 + 72);
  while (2)
  {
    sub_1A88552C8(*(void *)(v22 + 48) + v26 * v25, (uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningRequirement);
    uint64_t v27 = (uint64_t)&v11[*(int *)(v50 + 48)];
    sub_1A88552C8((uint64_t)v18, (uint64_t)v11, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1A88552C8(v51, v27, (void (*)(void))type metadata accessor for PipeliningRequirement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v29 = v49;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v34 = v47;
        sub_1A88552C8((uint64_t)v11, v47, (void (*)(void))type metadata accessor for PipeliningRequirement);
        int v35 = swift_getEnumCaseMultiPayload();
        uint64_t v31 = v34;
        if (v35 != 1) {
          goto LABEL_10;
        }
        uint64_t v36 = v27;
        uint64_t v33 = v46;
        sub_1A87AEA48(v36, v46);
        sub_1A872DF54();
        uint64_t v29 = v47;
        goto LABEL_8;
      case 2:
        if (swift_getEnumCaseMultiPayload() == 2) {
          goto LABEL_22;
        }
        goto LABEL_16;
      case 3:
        if (swift_getEnumCaseMultiPayload() == 3) {
          goto LABEL_22;
        }
        goto LABEL_16;
      case 4:
        if (swift_getEnumCaseMultiPayload() != 4) {
          goto LABEL_16;
        }
        goto LABEL_22;
      default:
        sub_1A88552C8((uint64_t)v11, v49, (void (*)(void))type metadata accessor for PipeliningRequirement);
        int v30 = swift_getEnumCaseMultiPayload();
        uint64_t v31 = v29;
        if (v30)
        {
LABEL_10:
          sub_1A86FDAC4(v31, &qword_1E9746200);
LABEL_16:
          sub_1A86FDAC4((uint64_t)v11, &qword_1E974DDB8);
          goto LABEL_17;
        }
        uint64_t v32 = v27;
        uint64_t v33 = v45;
        sub_1A87AEA48(v32, v45);
        sub_1A872DF54();
LABEL_8:
        if ((sub_1A8A78928() & 1) == 0)
        {
          sub_1A86FDAC4(v33, &qword_1E9746200);
          sub_1A86FDAC4(v29, &qword_1E9746200);
          sub_1A8855650((uint64_t)v11, (void (*)(void))type metadata accessor for PipeliningRequirement);
LABEL_17:
          sub_1A8855650((uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningRequirement);
          unint64_t v25 = (v25 + 1) & v48;
          if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v42;
            a1 = v43;
            uint64_t v21 = v41;
LABEL_20:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v38 = v51;
            sub_1A88552C8(v51, (uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
            uint64_t v52 = *v3;
            void *v3 = 0x8000000000000000;
            sub_1A885BAA8((uint64_t)v21, v25, isUniquelyReferenced_nonNull_native);
            void *v3 = v52;
            swift_bridgeObjectRelease();
            sub_1A885C668(v38, a1, (void (*)(void))type metadata accessor for PipeliningRequirement);
            return 1;
          }
          continue;
        }
        sub_1A86FDAC4(v33, &qword_1E9746200);
        sub_1A86FDAC4(v29, &qword_1E9746200);
LABEL_22:
        sub_1A8855650((uint64_t)v11, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_1A8855650((uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningRequirement);
        swift_bridgeObjectRelease();
        sub_1A8855650(v51, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_1A88552C8(*(void *)(*v42 + 48) + v26 * v25, v43, (void (*)(void))type metadata accessor for PipeliningRequirement);
        return 0;
    }
  }
}

uint64_t sub_1A885AA08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC0);
  MEMORY[0x1F4188790](v46);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v43 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v42 = (uint64_t)&v38 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v38 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v40 = (uint64_t)&v38 - v22;
  uint64_t v23 = *v3;
  sub_1A8A78738();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v47 = a2;
  PipeliningBehavior.hash(into:)();
  uint64_t v24 = sub_1A8A787C8();
  uint64_t v25 = -1 << *(unsigned char *)(v23 + 32);
  unint64_t v26 = v24 & ~v25;
  if ((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
  {
    uint64_t v38 = v3;
    uint64_t v39 = a1;
    uint64_t v44 = ~v25;
    uint64_t v45 = *(void *)(v14 + 72);
    while (1)
    {
      uint64_t v27 = (uint64_t)v10;
      unint64_t v28 = v45 * v26;
      sub_1A88552C8(*(void *)(v23 + 48) + v45 * v26, (uint64_t)v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
      uint64_t v29 = (uint64_t)&v12[*(int *)(v46 + 48)];
      sub_1A88552C8((uint64_t)v20, (uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_1A88552C8(v47, v29, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v30 = v43;
          sub_1A88552C8((uint64_t)v12, v43, (void (*)(void))type metadata accessor for PipeliningBehavior);
          if (swift_getEnumCaseMultiPayload() != 1) {
            goto LABEL_10;
          }
          uint64_t v33 = v29;
          uint64_t v10 = v41;
          sub_1A87AEA48(v33, (uint64_t)v41);
          sub_1A872DF54();
          uint64_t v32 = v43;
          if (sub_1A8A78928()) {
            goto LABEL_26;
          }
          sub_1A86FDAC4((uint64_t)v10, &qword_1E9746200);
          sub_1A86FDAC4(v32, &qword_1E9746200);
          sub_1A8855650((uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
          goto LABEL_21;
        case 2u:
          if (swift_getEnumCaseMultiPayload() == 2) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 3u:
          if (swift_getEnumCaseMultiPayload() == 3) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 4u:
          if (swift_getEnumCaseMultiPayload() == 4) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 5u:
          if (swift_getEnumCaseMultiPayload() == 5) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 6u:
          if (swift_getEnumCaseMultiPayload() != 6) {
            goto LABEL_20;
          }
          goto LABEL_27;
        default:
          uint64_t v30 = v42;
          sub_1A88552C8((uint64_t)v12, v42, (void (*)(void))type metadata accessor for PipeliningBehavior);
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_10:
            sub_1A86FDAC4(v30, &qword_1E9746200);
LABEL_20:
            sub_1A86FDAC4((uint64_t)v12, &qword_1E974DDC0);
LABEL_21:
            uint64_t v10 = (char *)v27;
          }
          else
          {
            uint64_t v31 = v29;
            uint64_t v10 = (char *)v27;
            sub_1A87AEA48(v31, v27);
            sub_1A872DF54();
            uint64_t v32 = v42;
            if (sub_1A8A78928())
            {
LABEL_26:
              sub_1A86FDAC4((uint64_t)v10, &qword_1E9746200);
              sub_1A86FDAC4(v32, &qword_1E9746200);
LABEL_27:
              sub_1A8855650((uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
              sub_1A8855650((uint64_t)v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
              swift_bridgeObjectRelease();
              sub_1A8855650(v47, (void (*)(void))type metadata accessor for PipeliningBehavior);
              sub_1A88552C8(*(void *)(*v38 + 48) + v28, v39, (void (*)(void))type metadata accessor for PipeliningBehavior);
              return 0;
            }
            sub_1A86FDAC4(v27, &qword_1E9746200);
            sub_1A86FDAC4(v32, &qword_1E9746200);
            sub_1A8855650((uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
          }
          sub_1A8855650((uint64_t)v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
          unint64_t v26 = (v26 + 1) & v44;
          if (((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v38;
            a1 = v39;
            goto LABEL_25;
          }
          break;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v35 = v47;
  uint64_t v36 = v40;
  sub_1A88552C8(v47, v40, (void (*)(void))type metadata accessor for PipeliningBehavior);
  uint64_t v48 = *v3;
  void *v3 = 0x8000000000000000;
  sub_1A885C06C(v36, v26, isUniquelyReferenced_nonNull_native);
  void *v3 = v48;
  swift_bridgeObjectRelease();
  sub_1A885C668(v35, a1, (void (*)(void))type metadata accessor for PipeliningBehavior);
  return 1;
}

uint64_t sub_1A885B074()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE10);
  uint64_t v12 = v11;
  uint64_t v13 = sub_1A8A77D58();
  uint64_t v14 = v13;
  if (*(void *)(v12 + 16))
  {
    uint64_t v39 = v0;
    uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
    uint64_t v16 = *(void *)(v12 + 56);
    uint64_t v42 = (void *)(v12 + 56);
    if (v15 < 64) {
      uint64_t v17 = ~(-1 << v15);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v16;
    int64_t v41 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v19 = v13 + 56;
    swift_retain();
    int64_t v20 = 0;
    uint64_t v40 = v12;
    if (!v18) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v20 << 6);
LABEL_21:
      uint64_t v26 = *(void *)(v43 + 72);
      sub_1A885C668(*(void *)(v12 + 48) + v26 * v22, (uint64_t)v10, (void (*)(void))type metadata accessor for PipeliningRequirement);
      sub_1A8A78738();
      sub_1A88552C8((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningRequirement);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
          sub_1A8A78768();
          break;
        default:
          sub_1A87AEA48((uint64_t)v7, (uint64_t)v4);
          sub_1A8A78768();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          sub_1A8734E44();
          uint64_t v12 = v40;
          sub_1A8A76228();
          sub_1A86FDAC4((uint64_t)v4, &qword_1E9746200);
          break;
      }
      uint64_t v27 = sub_1A8A787C8();
      uint64_t v28 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v29 = v27 & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v19 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v19 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_33;
      }
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v19 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
LABEL_33:
      *(void *)(v19 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      sub_1A885C668((uint64_t)v10, *(void *)(v14 + 48) + v31 * v26, (void (*)(void))type metadata accessor for PipeliningRequirement);
      ++*(void *)(v14 + 16);
      if (v18) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      goto LABEL_41;
    }
    if (v23 < v41)
    {
      unint64_t v24 = v42[v23];
      ++v20;
      if (v24) {
        goto LABEL_20;
      }
      int64_t v20 = v23 + 1;
      if (v23 + 1 < v41)
      {
        unint64_t v24 = v42[v20];
        if (v24) {
          goto LABEL_20;
        }
        int64_t v20 = v23 + 2;
        if (v23 + 2 < v41)
        {
          unint64_t v24 = v42[v20];
          if (v24) {
            goto LABEL_20;
          }
          int64_t v25 = v23 + 3;
          if (v25 < v41)
          {
            unint64_t v24 = v42[v25];
            if (v24)
            {
              int64_t v20 = v25;
LABEL_20:
              unint64_t v18 = (v24 - 1) & v24;
              unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v20 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                break;
              }
              if (v20 >= v41) {
                goto LABEL_35;
              }
              unint64_t v24 = v42[v20];
              ++v25;
              if (v24) {
                goto LABEL_20;
              }
            }
LABEL_42:
            __break(1u);
            JUMPOUT(0x1A885B560);
          }
        }
      }
    }
LABEL_35:
    swift_release();
    uint64_t v1 = v39;
    uint64_t v36 = 1 << *(unsigned char *)(v12 + 32);
    if (v36 > 63) {
      sub_1A885C6C8(0, (unint64_t)(v36 + 63) >> 6, v42);
    }
    else {
      *uint64_t v42 = -1 << v36;
    }
    *(void *)(v12 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v14;
  return result;
}

uint64_t sub_1A885B574()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v43 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE00);
  uint64_t v10 = sub_1A8A77D58();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v0;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v42 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v41 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 56;
    swift_retain();
    int64_t v17 = 0;
    uint64_t v38 = v9;
    if (!v15) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
LABEL_21:
      uint64_t v23 = *(void *)(v43 + 72);
      sub_1A885C668(*(void *)(v9 + 48) + v23 * v19, (uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_1A8A78738();
      sub_1A88552C8((uint64_t)v8, (uint64_t)v5, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          sub_1A8A78768();
          break;
        default:
          uint64_t v24 = v39;
          sub_1A87AEA48((uint64_t)v5, v39);
          sub_1A8A78768();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          sub_1A8734E44();
          sub_1A8A76228();
          uint64_t v25 = v24;
          uint64_t v9 = v38;
          sub_1A86FDAC4(v25, &qword_1E9746200);
          break;
      }
      uint64_t v26 = sub_1A8A787C8();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = v26 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v16 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v16 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_33;
      }
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v16 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
LABEL_33:
      *(void *)(v16 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      sub_1A885C668((uint64_t)v8, *(void *)(v11 + 48) + v30 * v23, (void (*)(void))type metadata accessor for PipeliningBehavior);
      ++*(void *)(v11 + 16);
      if (v15) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_41;
    }
    if (v20 < v41)
    {
      unint64_t v21 = v42[v20];
      ++v17;
      if (v21) {
        goto LABEL_20;
      }
      int64_t v17 = v20 + 1;
      if (v20 + 1 < v41)
      {
        unint64_t v21 = v42[v17];
        if (v21) {
          goto LABEL_20;
        }
        int64_t v17 = v20 + 2;
        if (v20 + 2 < v41)
        {
          unint64_t v21 = v42[v17];
          if (v21) {
            goto LABEL_20;
          }
          int64_t v22 = v20 + 3;
          if (v22 < v41)
          {
            unint64_t v21 = v42[v22];
            if (v21)
            {
              int64_t v17 = v22;
LABEL_20:
              unint64_t v15 = (v21 - 1) & v21;
              unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v17 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                break;
              }
              if (v17 >= v41) {
                goto LABEL_35;
              }
              unint64_t v21 = v42[v17];
              ++v22;
              if (v21) {
                goto LABEL_20;
              }
            }
LABEL_42:
            __break(1u);
            JUMPOUT(0x1A885BA8CLL);
          }
        }
      }
    }
LABEL_35:
    swift_release();
    uint64_t v1 = v37;
    uint64_t v35 = 1 << *(unsigned char *)(v9 + 32);
    if (v35 > 63) {
      sub_1A885C6C8(0, (unint64_t)(v35 + 63) >> 6, v42);
    }
    else {
      *uint64_t v42 = -1 << v35;
    }
    *(void *)(v9 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_1A885BAA8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v55 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDB8);
  MEMORY[0x1F4188790](v54);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v52 = (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v51 = (char *)&v47 - v18;
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v47 - v20;
  unint64_t v22 = *(void *)(*v3 + 16);
  unint64_t v23 = *(void *)(*v3 + 24);
  uint64_t v49 = v15;
  uint64_t v50 = v3;
  if (v23 <= v22 || (a3 & 1) == 0)
  {
    if (a3)
    {
      uint64_t v47 = v11;
      sub_1A885B074();
    }
    else
    {
      if (v23 > v22)
      {
        sub_1A885C6E4();
        goto LABEL_26;
      }
      uint64_t v47 = v11;
      sub_1A885C950();
    }
    uint64_t v24 = *v3;
    sub_1A8A78738();
    PipeliningRequirement.hash(into:)();
    uint64_t v25 = sub_1A8A787C8();
    uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
    a2 = v25 & ~v26;
    uint64_t v53 = v24 + 56;
    uint64_t v27 = (uint64_t)v51;
    if ((*(void *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v48 = v8;
      uint64_t v28 = ~v26;
      uint64_t v29 = *(void *)(v15 + 72);
      while (1)
      {
        sub_1A88552C8(*(void *)(v24 + 48) + v29 * a2, (uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v30 = (uint64_t)&v13[*(int *)(v54 + 48)];
        sub_1A88552C8((uint64_t)v21, (uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_1A88552C8(v55, v30, (void (*)(void))type metadata accessor for PipeliningRequirement);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v37 = v52;
            sub_1A88552C8((uint64_t)v13, v52, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v32 = v37;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_23;
            }
            uint64_t v39 = v30;
            uint64_t v40 = (uint64_t)v48;
            sub_1A87AEA48(v39, (uint64_t)v48);
            sub_1A872DF54();
            uint64_t v41 = v52;
            char v35 = sub_1A8A78928();
            sub_1A86FDAC4(v40, &qword_1E9746200);
            uint64_t v36 = v41;
            uint64_t v27 = (uint64_t)v51;
            goto LABEL_21;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_29;
            }
            goto LABEL_24;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_29;
            }
            goto LABEL_24;
          case 4u:
            if (swift_getEnumCaseMultiPayload() == 4) {
              goto LABEL_29;
            }
            goto LABEL_24;
          default:
            sub_1A88552C8((uint64_t)v13, v27, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int v31 = swift_getEnumCaseMultiPayload();
            uint64_t v32 = v27;
            if (v31)
            {
LABEL_23:
              sub_1A86FDAC4(v32, &qword_1E9746200);
LABEL_24:
              sub_1A86FDAC4((uint64_t)v13, &qword_1E974DDB8);
            }
            else
            {
              uint64_t v33 = v30;
              uint64_t v34 = (uint64_t)v47;
              sub_1A87AEA48(v33, (uint64_t)v47);
              sub_1A872DF54();
              char v35 = sub_1A8A78928();
              sub_1A86FDAC4(v34, &qword_1E9746200);
              uint64_t v36 = v27;
LABEL_21:
              sub_1A86FDAC4(v36, &qword_1E9746200);
              if (v35) {
                goto LABEL_29;
              }
              sub_1A8855650((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningRequirement);
            }
            sub_1A8855650((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
            a2 = (a2 + 1) & v28;
            if (((*(void *)(v53 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_26;
            }
            break;
        }
      }
    }
  }
LABEL_26:
  uint64_t v42 = *v50;
  *(void *)(*v50 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1A885C668(v55, *(void *)(v42 + 48) + *(void *)(v49 + 72) * a2, (void (*)(void))type metadata accessor for PipeliningRequirement);
  uint64_t v44 = *(void *)(v42 + 16);
  BOOL v45 = __OFADD__(v44, 1);
  uint64_t v46 = v44 + 1;
  if (v45)
  {
    __break(1u);
LABEL_29:
    sub_1A8855650((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1A8855650((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1A8A78698();
    __break(1u);
    JUMPOUT(0x1A885C058);
  }
  *(void *)(v42 + 16) = v46;
  return result;
}

uint64_t sub_1A885C06C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v54 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DDC0);
  MEMORY[0x1F4188790](v53);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v51 = (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v48 = (char *)&v46 - v18;
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v46 - v20;
  unint64_t v22 = *(void *)(*v3 + 16);
  unint64_t v23 = *(void *)(*v3 + 24);
  uint64_t v49 = v15;
  uint64_t v50 = v3;
  if (v23 <= v22 || (a3 & 1) == 0)
  {
    if (a3)
    {
      uint64_t v47 = v11;
      sub_1A885B574();
    }
    else
    {
      if (v23 > v22)
      {
        sub_1A885C6E4();
        goto LABEL_29;
      }
      uint64_t v47 = v11;
      sub_1A885CE30();
    }
    uint64_t v24 = *v3;
    sub_1A8A78738();
    PipeliningBehavior.hash(into:)();
    uint64_t v25 = sub_1A8A787C8();
    uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
    a2 = v25 & ~v26;
    uint64_t v27 = (uint64_t)v48;
    if ((*(void *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v46 = v8;
      uint64_t v52 = ~v26;
      uint64_t v28 = *(void *)(v15 + 72);
      while (1)
      {
        sub_1A88552C8(*(void *)(v24 + 48) + v28 * a2, (uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v29 = (uint64_t)&v13[*(int *)(v53 + 48)];
        sub_1A88552C8((uint64_t)v21, (uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningBehavior);
        sub_1A88552C8(v54, v29, (void (*)(void))type metadata accessor for PipeliningBehavior);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v36 = v51;
            sub_1A88552C8((uint64_t)v13, v51, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v31 = v36;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_21;
            }
            uint64_t v38 = v29;
            uint64_t v39 = (uint64_t)v46;
            sub_1A87AEA48(v38, (uint64_t)v46);
            sub_1A872DF54();
            uint64_t v40 = v51;
            char v34 = sub_1A8A78928();
            sub_1A86FDAC4(v39, &qword_1E9746200);
            uint64_t v35 = v40;
            uint64_t v27 = (uint64_t)v48;
            goto LABEL_19;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 4u:
            if (swift_getEnumCaseMultiPayload() == 4) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 5u:
            if (swift_getEnumCaseMultiPayload() == 5) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 6u:
            if (swift_getEnumCaseMultiPayload() != 6) {
              goto LABEL_27;
            }
            goto LABEL_32;
          default:
            sub_1A88552C8((uint64_t)v13, v27, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int v30 = swift_getEnumCaseMultiPayload();
            uint64_t v31 = v27;
            if (v30)
            {
LABEL_21:
              sub_1A86FDAC4(v31, &qword_1E9746200);
LABEL_27:
              sub_1A86FDAC4((uint64_t)v13, &qword_1E974DDC0);
            }
            else
            {
              uint64_t v32 = v29;
              uint64_t v33 = (uint64_t)v47;
              sub_1A87AEA48(v32, (uint64_t)v47);
              sub_1A872DF54();
              char v34 = sub_1A8A78928();
              sub_1A86FDAC4(v33, &qword_1E9746200);
              uint64_t v35 = v27;
LABEL_19:
              sub_1A86FDAC4(v35, &qword_1E9746200);
              if (v34) {
                goto LABEL_32;
              }
              sub_1A8855650((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningBehavior);
            }
            sub_1A8855650((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
            a2 = (a2 + 1) & v52;
            if (((*(void *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_29;
            }
            break;
        }
      }
    }
  }
LABEL_29:
  uint64_t v41 = *v50;
  *(void *)(*v50 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1A885C668(v54, *(void *)(v41 + 48) + *(void *)(v49 + 72) * a2, (void (*)(void))type metadata accessor for PipeliningBehavior);
  uint64_t v43 = *(void *)(v41 + 16);
  BOOL v44 = __OFADD__(v43, 1);
  uint64_t v45 = v43 + 1;
  if (v44)
  {
    __break(1u);
LABEL_32:
    sub_1A8855650((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningBehavior);
    sub_1A8855650((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
    sub_1A8A78698();
    __break(1u);
    JUMPOUT(0x1A885C64CLL);
  }
  *(void *)(v41 + 16) = v45;
  return result;
}

uint64_t sub_1A885C668(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1A885C6C8(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_1A885C6E4()
{
  OUTLINED_FUNCTION_14();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = v0;
  uint64_t v9 = v8(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v31 - v11;
  __swift_instantiateConcreteTypeFromMangledName_0(v6);
  uint64_t v13 = *v0;
  uint64_t v14 = sub_1A8A77D48();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    swift_release();
LABEL_30:
    uint64_t *v7 = v15;
    OUTLINED_FUNCTION_11();
    return;
  }
  uint64_t v16 = (void *)(v14 + 56);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  uint64_t v31 = v7;
  uint64_t v32 = (const void *)(v13 + 56);
  if (v15 != v13 || (unint64_t)v16 >= v13 + 56 + 8 * v17) {
    memmove(v16, v32, 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = *(void *)(v13 + 56);
  uint64_t v22 = -1;
  if (v20 < 64) {
    uint64_t v22 = ~(-1 << v20);
  }
  unint64_t v23 = v22 & v21;
  int64_t v24 = (unint64_t)(v20 + 63) >> 6;
  if ((v22 & v21) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v25 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  for (unint64_t i = v25 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v19 << 6))
  {
    unint64_t v30 = *(void *)(v10 + 72) * i;
    sub_1A88552C8(*(void *)(v13 + 48) + v30, (uint64_t)v12, v4);
    sub_1A885C668((uint64_t)v12, *(void *)(v15 + 48) + v30, v2);
    if (v23) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v24) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v32 + v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v24) {
        goto LABEL_28;
      }
      unint64_t v28 = *((void *)v32 + v19);
      if (!v28)
      {
        int64_t v19 = v27 + 2;
        if (v27 + 2 >= v24) {
          goto LABEL_28;
        }
        unint64_t v28 = *((void *)v32 + v19);
        if (!v28) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v23 = (v28 - 1) & v28;
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v24)
  {
LABEL_28:
    swift_release();
    uint64_t v7 = v31;
    goto LABEL_30;
  }
  unint64_t v28 = *((void *)v32 + v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v24) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v32 + v19);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1A885C950()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v37 = (uint64_t)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v41 = (uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v36 - v7;
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE10);
  uint64_t v10 = sub_1A8A77D58();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (*(void *)(v11 + 16))
  {
    v36[0] = v1;
    uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v38 = v11 + 56;
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v39 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = v10 + 56;
    swift_retain();
    int64_t v18 = 0;
    v36[1] = v4;
    if (!v16) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v18 << 6);
LABEL_21:
      uint64_t v24 = *(void *)(v40 + 72);
      sub_1A88552C8(*(void *)(v11 + 48) + v24 * v20, (uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningRequirement);
      sub_1A8A78738();
      sub_1A88552C8((uint64_t)v8, v41, (void (*)(void))type metadata accessor for PipeliningRequirement);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
          sub_1A8A78768();
          break;
        default:
          uint64_t v25 = v37;
          sub_1A87AEA48(v41, v37);
          sub_1A8A78768();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          sub_1A8734E44();
          sub_1A8A76228();
          sub_1A86FDAC4(v25, &qword_1E9746200);
          break;
      }
      uint64_t v26 = sub_1A8A787C8();
      uint64_t v27 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v28 = v26 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_33;
      }
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v17 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
LABEL_33:
      *(void *)(v17 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      sub_1A885C668((uint64_t)v8, *(void *)(v12 + 48) + v30 * v24, (void (*)(void))type metadata accessor for PipeliningRequirement);
      ++*(void *)(v12 + 16);
      if (v16) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_39;
    }
    if (v21 < v39)
    {
      unint64_t v22 = *(void *)(v38 + 8 * v21);
      ++v18;
      if (v22) {
        goto LABEL_20;
      }
      int64_t v18 = v21 + 1;
      if (v21 + 1 < v39)
      {
        unint64_t v22 = *(void *)(v38 + 8 * v18);
        if (v22) {
          goto LABEL_20;
        }
        int64_t v18 = v21 + 2;
        if (v21 + 2 < v39)
        {
          unint64_t v22 = *(void *)(v38 + 8 * v18);
          if (v22) {
            goto LABEL_20;
          }
          int64_t v23 = v21 + 3;
          if (v23 < v39)
          {
            unint64_t v22 = *(void *)(v38 + 8 * v23);
            if (v22)
            {
              int64_t v18 = v23;
LABEL_20:
              unint64_t v16 = (v22 - 1) & v22;
              unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v18 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v18 >= v39) {
                goto LABEL_35;
              }
              unint64_t v22 = *(void *)(v38 + 8 * v18);
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
LABEL_40:
            __break(1u);
            JUMPOUT(0x1A885CE1CLL);
          }
        }
      }
    }
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = (uint64_t *)v36[0];
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v12;
  return result;
}

uint64_t sub_1A885CE30()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9746200);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v42 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (uint64_t)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v38 - v7;
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974DE00);
  uint64_t v10 = v9;
  uint64_t v11 = sub_1A8A77D58();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    v38[0] = v0;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 56);
    uint64_t v40 = v10 + 56;
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v41 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = v11 + 56;
    swift_retain();
    int64_t v18 = 0;
    v38[1] = v4;
    if (!v16) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v18 << 6);
LABEL_21:
      uint64_t v24 = v10;
      uint64_t v25 = *(void *)(v10 + 48);
      uint64_t v26 = *(void *)(v42 + 72);
      sub_1A88552C8(v25 + v26 * v20, (uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_1A8A78738();
      sub_1A88552C8((uint64_t)v8, v43, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          sub_1A8A78768();
          break;
        default:
          uint64_t v27 = v39;
          sub_1A87AEA48(v43, v39);
          sub_1A8A78768();
          __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748510);
          sub_1A8734E44();
          sub_1A8A76228();
          sub_1A86FDAC4(v27, &qword_1E9746200);
          break;
      }
      uint64_t v28 = sub_1A8A787C8();
      uint64_t v29 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v30 = v28 & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v17 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v17 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_33;
      }
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        BOOL v35 = v31 == v34;
        if (v31 == v34) {
          unint64_t v31 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v17 + 8 * v31);
      }
      while (v36 == -1);
      unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
LABEL_33:
      *(void *)(v17 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      sub_1A885C668((uint64_t)v8, *(void *)(v12 + 48) + v32 * v26, (void (*)(void))type metadata accessor for PipeliningBehavior);
      ++*(void *)(v12 + 16);
      uint64_t v10 = v24;
      if (v16) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_39;
    }
    if (v21 < v41)
    {
      unint64_t v22 = *(void *)(v40 + 8 * v21);
      ++v18;
      if (v22) {
        goto LABEL_20;
      }
      int64_t v18 = v21 + 1;
      if (v21 + 1 < v41)
      {
        unint64_t v22 = *(void *)(v40 + 8 * v18);
        if (v22) {
          goto LABEL_20;
        }
        int64_t v18 = v21 + 2;
        if (v21 + 2 < v41)
        {
          unint64_t v22 = *(void *)(v40 + 8 * v18);
          if (v22) {
            goto LABEL_20;
          }
          int64_t v23 = v21 + 3;
          if (v23 < v41)
          {
            unint64_t v22 = *(void *)(v40 + 8 * v23);
            if (v22)
            {
              int64_t v18 = v23;
LABEL_20:
              unint64_t v16 = (v22 - 1) & v22;
              unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v18 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v18 >= v41) {
                goto LABEL_35;
              }
              unint64_t v22 = *(void *)(v40 + 8 * v18);
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
LABEL_40:
            __break(1u);
            JUMPOUT(0x1A885D310);
          }
        }
      }
    }
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = (uint64_t *)v38[0];
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v12;
  return result;
}

uint64_t *__swift_allocate_value_buffer_0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_72()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_60()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_59(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *v9;
  uint64_t v12 = v9[1];
  uint64_t v13 = v9[2];
  uint64_t v14 = v9[3];
  uint64_t v15 = v9[4];
  uint64_t v16 = v9[5];
  uint64_t v17 = v9[6];
  uint64_t v18 = v9[7];
  return sub_1A8759C28(v11, v12, v13, v14, v15, v16, v17, v18, a9);
}

uint64_t OUTLINED_FUNCTION_7_48()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_11_37()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_15_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_31()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_18_25()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_19_25()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_20_22()
{
  return swift_bridgeObjectRelease();
}

char *OUTLINED_FUNCTION_22_21(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return (char *)a1 + v2;
}

uint64_t OUTLINED_FUNCTION_23_17()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_25_17()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_26_15()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_28_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_15()
{
  return sub_1A8759C20();
}

uint64_t OUTLINED_FUNCTION_30_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_35_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_14(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_37_13()
{
  return swift_storeEnumTagMultiPayload();
}

void *OUTLINED_FUNCTION_40_12(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_43_9()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_45_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_46_12(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  uint64_t v5 = (uint64_t)a1 + v3;
  return sub_1A87AE8A0(v2, v5);
}

uint64_t OUTLINED_FUNCTION_47_12()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_48_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_49_11()
{
  return type metadata accessor for Command();
}

uint64_t OUTLINED_FUNCTION_50_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_9()
{
  return sub_1A8A76228();
}

uint64_t OUTLINED_FUNCTION_52_8()
{
  return sub_1A87AEA48(v1, v0);
}

uint64_t OUTLINED_FUNCTION_55_9(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return sub_1A8855650(v4, a4);
}

uint64_t PreviewText.hash(into:)()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t static PreviewText.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1A8A78588();
  }
}

uint64_t PreviewText.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A885D8C8()
{
  return PreviewText.hashValue.getter();
}

uint64_t sub_1A885D8D0()
{
  return PreviewText.hash(into:)();
}

unint64_t sub_1A885D8DC()
{
  unint64_t result = qword_1E974DE20;
  if (!qword_1E974DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DE20);
  }
  return result;
}

uint64_t sub_1A885D928(uint64_t *a1, uint64_t *a2)
{
  return static PreviewText.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for PreviewText()
{
  return &type metadata for PreviewText;
}

void sub_1A885D94C(uint64_t a1)
{
  uint64_t v4 = v1;
  sub_1A8795F20(a1, (uint64_t)&v48);
  int v5 = v52;
  int v6 = v52 >> 6;
  if (!v6)
  {
    v52 &= 0x3Fu;
    uint64_t v4 = v1 + 5;
    uint64_t v25 = OUTLINED_FUNCTION_34_5();
    OUTLINED_FUNCTION_1_3(v25, v26);
    if (v27)
    {
      uint64_t v28 = OUTLINED_FUNCTION_34_5();
      OUTLINED_FUNCTION_2_29(v28, v29);
    }
    OUTLINED_FUNCTION_10_22();
    if (!v13) {
      goto LABEL_45;
    }
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v2 = v48;
  if (v6 != 1)
  {
LABEL_17:
    if (v5 != 128 || (v50 | v51 | v2 | v49) != 0)
    {
      if (v5 == 128 && v2 == 1 && (v50 | v51 | v49) == 0) {
        goto LABEL_42;
      }
      uint64_t v34 = OUTLINED_FUNCTION_2_73();
      uint64_t v35 = OUTLINED_FUNCTION_22_0(v34);
      OUTLINED_FUNCTION_1_3(v35, v36);
      if (v37)
      {
        uint64_t v38 = OUTLINED_FUNCTION_22_0(0x323238434652);
        OUTLINED_FUNCTION_2_29(v38, v39);
      }
      OUTLINED_FUNCTION_10_22();
      if (!v13) {
        goto LABEL_45;
      }
      __break(1u);
    }
    uint64_t v40 = OUTLINED_FUNCTION_2_73();
    OUTLINED_FUNCTION_1_3(v40, 0xE600000000000000);
    if (v41) {
      OUTLINED_FUNCTION_2_29(0x323238434652, 0xE600000000000000);
    }
    OUTLINED_FUNCTION_10_22();
    if (!v13) {
      goto LABEL_45;
    }
    __break(1u);
    goto LABEL_38;
  }
  v52 &= 0x3Fu;
  uint64_t v7 = v49;
  uint64_t v8 = v50;
  OUTLINED_FUNCTION_1_3(1497648962, 0xE400000000000000);
  if (v10) {
    Swift::Int v9 = OUTLINED_FUNCTION_2_29(1497648962, 0xE400000000000000);
  }
  Swift::Int v11 = v9;
  int v12 = v1[5];
  BOOL v13 = __CFADD__(v12, v9);
  int v14 = v12 + v9;
  if (v13)
  {
    __break(1u);
    goto LABEL_48;
  }
  v1[5] = v14;
  sub_1A87C2280(v2, v7, v8);
  BOOL v16 = __OFADD__(v11, v15);
  Swift::Int v3 = v11 + v15;
  if (v16)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return;
  }
  if (v5)
  {
LABEL_38:
    Swift::Int v19 = 0;
    goto LABEL_39;
  }
  sub_1A8A784D8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  Swift::Int v17 = v1[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A871AEC8(60, 0xE100000000000000, (uint64_t)(v1 + 2), v17);
  Swift::Int v19 = v18;
  char v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    v22._countAndFlagsBits = 60;
    v22._object = (void *)0xE100000000000000;
    Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v17);
  }
  swift_bridgeObjectRelease();
  int v23 = v4[5];
  BOOL v13 = __CFADD__(v23, v19);
  int v24 = v23 + v19;
  if (v13) {
    goto LABEL_49;
  }
  v4[5] = v24;
LABEL_39:
  if (!__OFADD__(v3, v19)) {
    return;
  }
  __break(1u);
LABEL_42:
  uint64_t v42 = OUTLINED_FUNCTION_2_73();
  uint64_t v43 = OUTLINED_FUNCTION_30_5(v42);
  OUTLINED_FUNCTION_1_3(v43, v44);
  if (v45)
  {
    uint64_t v46 = OUTLINED_FUNCTION_30_5(0x323238434652);
    OUTLINED_FUNCTION_2_29(v46, v47);
  }
  OUTLINED_FUNCTION_10_22();
  if (v13) {
    goto LABEL_50;
  }
LABEL_45:
  *uint64_t v4 = v30;
}

uint64_t ResponseEncodeBuffer.writeResponse(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ResponsePayload();
  MEMORY[0x1F4188790](v4 - 8);
  int v6 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Response(0);
  MEMORY[0x1F4188790](v7);
  Swift::Int v9 = (long long *)&v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A87E124C(a1, (uint64_t)v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A8795F00(v9, &__dst);
      uint64_t v2 = sub_1A885E6CC(&__dst);
      sub_1A885ECAC((uint64_t)&__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A87A9DE8);
      return v2;
    case 2u:
      long long v11 = v9[1];
      long long __dst = *v9;
      v65[0] = v11;
      *(_OWORD *)((char *)v65 + 9) = *(long long *)((char *)v9 + 25);
      sub_1A87B6014((uint64_t)&__dst);
      uint64_t v2 = v12;
      long long v66 = __dst;
      sub_1A853489C((uint64_t)&v66);
      sub_1A885E63C((uint64_t)v65, (uint64_t)v67);
      sub_1A885E698((uint64_t)v67);
      return v2;
    case 3u:
      unint64_t v13 = *(void *)v9;
      sub_1A87AF9D0(*(void *)v9, *((void *)v9 + 1), *((void **)v9 + 2));
      uint64_t v2 = v14;
      sub_1A871D244(v13);
      swift_bridgeObjectRelease();
      return v2;
    case 4u:
      uint64_t v15 = *((unsigned int *)v9 + 2);
      uint64_t v16 = *((unsigned int *)v9 + 3);
      if (v16 < v15)
      {
        __break(1u);
        goto LABEL_37;
      }
      int v17 = *((_DWORD *)v9 + 4);
      int v18 = *((unsigned __int16 *)v9 + 10);
      int v19 = *((unsigned __int8 *)v9 + 22);
      if (v17 - (v19 | (v18 << 8)) < v16)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      *(void *)&long long __dst = *(void *)v9;
      *((void *)&__dst + 1) = __PAIR64__(v16, v15);
      LODWORD(v65[0]) = v17;
      WORD2(v65[0]) = v18;
      BYTE6(v65[0]) = v19;
      *((void *)&v65[0] + 1) = v15;
      *(void *)&v65[1] = v16;
      swift_retain();
      char v20 = sub_1A86F070C(&__dst);
      swift_release();
      Swift::Int v21 = *(unsigned int *)(v2 + 20);
      sub_1A871AEC8(8235, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v23)
      {
        v24._countAndFlagsBits = 8235;
        v24._object = (void *)0xE200000000000000;
        Swift::Int v22 = ByteBuffer._setStringSlowpath(_:at:)(v24, v21);
      }
      Swift::Int v25 = v22;
      int v26 = *(_DWORD *)(v2 + 20);
      BOOL v27 = __CFADD__(v26, v22);
      int v28 = v26 + v22;
      if (v27) {
        goto LABEL_38;
      }
      *(_DWORD *)(v2 + 20) = v28;
      sub_1A875FB7C((uint64_t)v20);
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      BOOL v31 = __OFADD__(v25, v30);
      Swift::Int v32 = v25 + v30;
      if (v31)
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      Swift::Int v33 = *(unsigned int *)(v2 + 20);
      sub_1A871AEC8(2573, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v35)
      {
        v36._countAndFlagsBits = 2573;
        v36._object = (void *)0xE200000000000000;
        Swift::Int v34 = ByteBuffer._setStringSlowpath(_:at:)(v36, v33);
      }
      Swift::Int v37 = v34;
      swift_release();
      int v38 = *(_DWORD *)(v2 + 20);
      BOOL v27 = __CFADD__(v38, v37);
      int v39 = v38 + v37;
      if (v27) {
        goto LABEL_40;
      }
      *(_DWORD *)(v2 + 20) = v39;
      uint64_t v2 = v32 + v37;
      if (!__OFADD__(v32, v37)) {
        return v2;
      }
      __break(1u);
LABEL_18:
      Swift::Int v40 = *(unsigned int *)(v2 + 20);
      sub_1A871AEC8(8235, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v42)
      {
        v43._countAndFlagsBits = 8235;
        v43._object = (void *)0xE200000000000000;
        Swift::Int v41 = ByteBuffer._setStringSlowpath(_:at:)(v43, v40);
      }
      Swift::Int v44 = v41;
      int v45 = *(_DWORD *)(v2 + 20);
      Swift::Int v46 = (v45 + v41);
      if (__CFADD__(v45, v41)) {
        goto LABEL_41;
      }
      *(_DWORD *)(v2 + 20) = v46;
      uint64_t v47 = sub_1A8A76778();
      if (v47 <= 0) {
        uint64_t v48 = 32;
      }
      else {
        uint64_t v48 = 0x676E696C6469;
      }
      if (v47 <= 0) {
        uint64_t v49 = (void *)0xE100000000000000;
      }
      else {
        uint64_t v49 = (void *)0xE600000000000000;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A871AEC8(v48, (unint64_t)v49, v2 + 8, v46);
      Swift::Int v51 = v50;
      char v53 = v52;
      swift_bridgeObjectRelease();
      if (v53)
      {
        v54._countAndFlagsBits = v48;
        v54._object = v49;
        Swift::Int v51 = ByteBuffer._setStringSlowpath(_:at:)(v54, v46);
      }
      swift_bridgeObjectRelease();
      int v55 = *(_DWORD *)(v2 + 20);
      Swift::Int v56 = (v55 + v51);
      if (__CFADD__(v55, v51)) {
        goto LABEL_42;
      }
      *(_DWORD *)(v2 + 20) = v56;
      BOOL v31 = __OFADD__(v44, v51);
      Swift::Int v57 = v44 + v51;
      if (v31)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      sub_1A871AEC8(2573, 0xE200000000000000, v2 + 8, v55 + v51);
      if (v58)
      {
        v59._countAndFlagsBits = 2573;
        v59._object = (void *)0xE200000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v59, v56);
      }
      OUTLINED_FUNCTION_144();
      if (v27) {
        goto LABEL_44;
      }
      *(_DWORD *)(v2 + 20) = v61;
      uint64_t v2 = v57 + v60;
      if (__OFADD__(v57, v60))
      {
LABEL_45:
        __break(1u);
        JUMPOUT(0x1A885E0A0);
      }
      return v2;
    case 5u:
      goto LABEL_18;
    default:
      sub_1A885EAE4((uint64_t)v9, (uint64_t)v6);
      sub_1A87AF8DC();
      uint64_t v2 = v10;
      sub_1A880F5FC((uint64_t)v6);
      return v2;
  }
}

uint64_t sub_1A885E0B8(char a1, uint64_t (*a2)(char *))
{
  if (qword_1E9741A38 != -1) {
    swift_once();
  }
  uint64_t v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  int v5 = dword_1E979D4E0;
  __int16 v6 = word_1E979D4E4;
  char v7 = byte_1E979D4E6;
  swift_retain();
  uint64_t v8 = qword_1E979D4D8;
  sub_1A8718960(MEMORY[0x1E4FBC860]);
  char v16 = a1 & 1;
  char v18 = 0x80;
  int v17 = 256;
  uint64_t v19 = v4;
  uint64_t v20 = v8;
  int v21 = v5;
  unsigned __int16 v22 = v6;
  unsigned __int8 v23 = v7;
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  uint64_t result = a2(&v16);
  if (HIDWORD(v20) < v20)
  {
    __break(1u);
  }
  else if (v21 - (v23 | (v22 << 8)) >= HIDWORD(v20))
  {
    v27[0] = v19;
    v27[1] = v20;
    int v28 = v21;
    unsigned __int16 v29 = v22;
    unsigned __int8 v30 = v23;
    uint64_t v31 = v20;
    uint64_t v32 = HIDWORD(v20);
    unint64_t v13 = HIDWORD(v20) - (unint64_t)v20;
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    swift_retain();
    MEMORY[0x1AD0DF770](v13);
    sub_1A87098A8((uint64_t)v27, v15);
    swift_release();
    uint64_t v14 = v15[0];
    swift_release();
    swift_release();
    return v14;
  }
  __break(1u);
  return result;
}

void ResponseEncodeBuffer.readBytes()()
{
  uint64_t v1 = v0;
  EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
  if (*(_DWORD *)(v0 + 20) == *(_DWORD *)(v0 + 16))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v2 = *(void *)(v0 + 8);
      swift_beginAccess();
      *(void *)(v1 + 8) = ByteBuffer._Storage.allocateStorage(capacity:)(*(_DWORD *)(v2 + 16));
      swift_release();
    }
    uint64_t v3 = *(void *)(v1 + 8);
    swift_beginAccess();
    *(_DWORD *)(v1 + 24) = *(_DWORD *)(v3 + 16);
    *(_WORD *)(v1 + 28) = 0;
    *(unsigned char *)(v1 + 30) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    __break(1u);
  }
}

void ResponseEncodeBuffer.init(buffer:options:loggingMode:)(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int v7 = a3;
  int v8 = a2;
  unint64_t v11 = HIDWORD(a2);
  unint64_t v12 = HIDWORD(a3);
  unint64_t v13 = HIWORD(a3);
  if (a4) {
    int v14 = 256;
  }
  else {
    int v14 = 0;
  }
  sub_1A8718960(MEMORY[0x1E4FBC860]);
  *(unsigned char *)a6 = a5;
  *(unsigned char *)(a6 + 5) = 0x80;
  *(_DWORD *)(a6 + 1) = v14;
  *(void *)(a6 + 8) = a1;
  *(_DWORD *)(a6 + 16) = v8;
  *(_DWORD *)(a6 + 20) = v11;
  *(_DWORD *)(a6 + 24) = v7;
  *(_WORD *)(a6 + 28) = v12;
  *(unsigned char *)(a6 + 30) = v13;
  *(void *)(a6 + 32) = v15;
  *(void *)(a6 + 40) = v16;
  *(void *)(a6 + 48) = v17;
}

uint64_t ResponseEncodeBuffer.init(buffer:capabilities:loggingMode:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W4>, uint64_t a5@<X8>)
{
  int v6 = a3;
  int v7 = a2;
  unint64_t v10 = HIDWORD(a2);
  unint64_t v18 = HIDWORD(a3);
  unint64_t v19 = HIWORD(a3);
  sub_1A8718960(MEMORY[0x1E4FBC860]);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a5 = a4;
  *(unsigned char *)(a5 + 5) = 0x80;
  *(_DWORD *)(a5 + 1) = 256;
  *(void *)(a5 + 8) = a1;
  *(_DWORD *)(a5 + 16) = v7;
  *(_DWORD *)(a5 + 20) = v10;
  *(_DWORD *)(a5 + 24) = v6;
  *(_WORD *)(a5 + 28) = v18;
  *(unsigned char *)(a5 + 30) = v19;
  *(void *)(a5 + 32) = v12;
  *(void *)(a5 + 40) = v14;
  *(void *)(a5 + 48) = v16;
  return result;
}

void ResponseEncodeBuffer.writeContinuationRequest(_:)(unint64_t a1, unint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = v4 + 8;
  OUTLINED_FUNCTION_1_3(8235, 0xE200000000000000);
  if (v12) {
    Swift::Int v11 = OUTLINED_FUNCTION_2_29(8235, 0xE200000000000000);
  }
  Swift::Int v13 = v11;
  int v14 = *(_DWORD *)(v4 + 20);
  BOOL v15 = __CFADD__(v14, v11);
  int v16 = v14 + v11;
  if (v15)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_DWORD *)(v4 + 20) = v16;
  if ((a4 & 1) == 0)
  {
    sub_1A87A43AC(a1);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v17 = sub_1A87B28D4(a1, a2, a3);
    sub_1A871D244(a1);
    swift_bridgeObjectRelease();
    a3 = (void *)(v13 + v17);
    if (!__OFADD__(v13, v17)) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (HIDWORD(a2) < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a3 - (BYTE6(a3) | (WORD2(a3) << 8)) < HIDWORD(a2))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v24[0] = a1;
  v24[1] = a2;
  int v25 = (int)a3;
  __int16 v26 = WORD2(a3);
  char v27 = BYTE6(a3);
  uint64_t v28 = a2;
  unint64_t v29 = HIDWORD(a2);
  swift_retain();
  unint64_t v18 = sub_1A86F070C(v24);
  sub_1A875FB7C((uint64_t)v18);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  sub_1A87A4490(a1, a2, (uint64_t)a3, 1);
  a3 = (void *)(v13 + v20);
  if (__OFADD__(v13, v20))
  {
LABEL_21:
    __break(1u);
    return;
  }
LABEL_11:
  sub_1A871AEC8(2573, 0xE200000000000000, v10, *(_DWORD *)(v5 + 20));
  if (v21) {
    OUTLINED_FUNCTION_2_29(2573, 0xE200000000000000);
  }
  OUTLINED_FUNCTION_144();
  if (v15) {
    goto LABEL_17;
  }
  *(_DWORD *)(v5 + 20) = v23;
  if (__OFADD__(a3, v22))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t sub_1A885E63C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A885E698(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A885E6CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = 0;
  sub_1A8795F00(a1, __dst);
  sub_1A8795F00(__dst, __src);
  sub_1A8795F00(a1, v62);
  switch(sub_1A87A9F60((uint64_t)v62))
  {
    case 1u:
      goto LABEL_12;
    case 2u:
      goto LABEL_22;
    case 3u:
      uint64_t v38 = sub_1A87AA04C((uint64_t)v62);
      char v39 = *(unsigned char *)(v38 + 32);
      long long v40 = *(_OWORD *)(v38 + 16);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v38;
      *(_OWORD *)&unsigned char v63[16] = v40;
      char v64 = v39;
      if (((*(unsigned int *)(v1 + 1) | ((unint64_t)*(unsigned __int8 *)(v1 + 5) << 32)) & 0x8000000000) == 0) {
        goto LABEL_57;
      }
      if (*(_DWORD *)(v1 + 1)) {
        goto LABEL_41;
      }
      OUTLINED_FUNCTION_7_49(*(_DWORD *)(v1 + 1));
      sub_1A885EB58((uint64_t)v63);
      return v41;
    case 4u:
      uint64_t v42 = sub_1A87AA04C((uint64_t)v62);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v42;
      *(void *)&v63[15] = *(void *)(v42 + 15);
      EncodeBuffer.writeBuffer(_:)();
      return v41;
    case 5u:
      return v5;
    case 6u:
      unint64_t v43 = *(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32);
      if ((v43 & 0x8000000000000000) == 0) {
        goto LABEL_58;
      }
      *(unsigned char *)(v1 + 5) = 0x80;
      *(_DWORD *)(v1 + 1) = v43 & 0x100;
      Swift::Int v44 = *(unsigned int *)(v1 + 20);
      sub_1A871AEC8(658729, 0xE300000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
      if (v45)
      {
        v46._countAndFlagsBits = 658729;
        v46._object = (void *)0xE300000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v46, v44);
      }
      OUTLINED_FUNCTION_15_0();
      if (v10) {
        goto LABEL_48;
      }
      *(_DWORD *)(v1 + 20) = v47;
      return v5;
    default:
      sub_1A87AA04C((uint64_t)v62);
      OUTLINED_FUNCTION_3_61();
      if (v7) {
        Swift::Int v6 = OUTLINED_FUNCTION_2_29(8234, 0xE200000000000000);
      }
      Swift::Int v8 = v6;
      int v9 = *(_DWORD *)(v1 + 20);
      BOOL v10 = __CFADD__(v9, v6);
      int v11 = v9 + v6;
      if (v10)
      {
        __break(1u);
        goto LABEL_47;
      }
      *(_DWORD *)(v1 + 20) = v11;
      uint64_t v12 = sub_1A87C8818();
      Swift::Int v2 = v8 + v12;
      if (__OFADD__(v8, v12))
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      Swift::UInt32 v13 = *(_DWORD *)(v1 + 20);
      uint64_t v14 = OUTLINED_FUNCTION_8_47();
      sub_1A871AEC8(v14, v15, (uint64_t)a1, v13);
      if (v16)
      {
        uint64_t v17 = OUTLINED_FUNCTION_8_47();
        OUTLINED_FUNCTION_2_29(v17, v18);
      }
      OUTLINED_FUNCTION_144();
      if (v10) {
        goto LABEL_51;
      }
      *(_DWORD *)(v3 + 20) = v20;
      uint64_t v5 = v2 + v19;
      if (!__OFADD__(v2, v19)) {
        return v5;
      }
      __break(1u);
LABEL_12:
      sub_1A87AA04C((uint64_t)v62);
      OUTLINED_FUNCTION_3_61();
      if (v22) {
        Swift::Int v21 = OUTLINED_FUNCTION_2_29(8234, 0xE200000000000000);
      }
      Swift::Int v23 = v21;
      int v24 = *(_DWORD *)(v3 + 20);
      BOOL v10 = __CFADD__(v24, v21);
      int v25 = v24 + v21;
      if (v10)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      *(_DWORD *)(v3 + 20) = v25;
      uint64_t v26 = sub_1A87D820C(v2);
      Swift::Int v27 = v23 + v26;
      if (__OFADD__(v23, v26))
      {
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      Swift::UInt32 v28 = *(_DWORD *)(v3 + 20);
      uint64_t v29 = OUTLINED_FUNCTION_4_60();
      sub_1A871AEC8(v29, v30, (uint64_t)a1, v28);
      if (v31)
      {
        uint64_t v32 = OUTLINED_FUNCTION_4_60();
        OUTLINED_FUNCTION_2_29(v32, v33);
      }
      OUTLINED_FUNCTION_144();
      if (v10) {
        goto LABEL_52;
      }
      *(_DWORD *)(v3 + 20) = v35;
      uint64_t v5 = v27 + v34;
      if (!__OFADD__(v27, v34)) {
        return v5;
      }
      __break(1u);
LABEL_22:
      Swift::String v36 = (void *)sub_1A87AA04C((uint64_t)v62);
      sub_1A8795F00(v36, v63);
      if (((*(unsigned int *)(v3 + 1) | ((unint64_t)*(unsigned __int8 *)(v3 + 5) << 32)) & 0x8000000000) == 0)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        JUMPOUT(0x1A885EAC8);
      }
      if (*(_DWORD *)(v3 + 1))
      {
        Swift::Int v48 = *(unsigned int *)(v3 + 20);
        sub_1A8795F00(__src, v60);
        uint64_t v49 = sub_1A87AA04C((uint64_t)v60);
        sub_1A885ECAC(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A8795FCC);
        OUTLINED_FUNCTION_9_42();
        if (v50)
        {
          v51._countAndFlagsBits = 32;
          v51._object = (void *)0xE100000000000000;
          ByteBuffer._setStringSlowpath(_:at:)(v51, v48);
        }
        OUTLINED_FUNCTION_15_0();
        if (!v10)
        {
          *(_DWORD *)(v3 + 20) = v52;
          uint64_t v3 = sub_1A8795030((__n128 *)v63);
          sub_1A885ECAC((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A87A9DE8);
          BOOL v53 = __OFADD__(v5, v3);
          v5 += v3;
          if (!v53) {
            return v5;
          }
          __break(1u);
LABEL_41:
          Swift::Int v54 = *(unsigned int *)(v3 + 20);
          OUTLINED_FUNCTION_9_42();
          if (v55)
          {
            v56._countAndFlagsBits = 32;
            v56._object = (void *)0xE100000000000000;
            ByteBuffer._setStringSlowpath(_:at:)(v56, v54);
          }
          OUTLINED_FUNCTION_15_0();
          if (!v10)
          {
            *(_DWORD *)(v3 + 20) = v57;
            sub_1A885EB58((uint64_t)v63);
            BOOL v53 = __OFADD__(v5, v58);
            v5 += v58;
            if (!v53) {
              return v5;
            }
            goto LABEL_55;
          }
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      OUTLINED_FUNCTION_7_49(*(_DWORD *)(v3 + 1));
      sub_1A8795F00(__src, v60);
      uint64_t v37 = sub_1A87AA04C((uint64_t)v60);
      sub_1A885ECAC(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A8795FCC);
      uint64_t v5 = sub_1A8795030((__n128 *)v63);
      sub_1A885ECAC((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A87A9DE8);
      return v5;
  }
}

uint64_t sub_1A885EAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponsePayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ResponseEncodeBuffer()
{
  return &type metadata for ResponseEncodeBuffer;
}

void sub_1A885EB58(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1A885D94C(a1);
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_1_3(32, 0xE100000000000000);
  if (v6) {
    Swift::Int v5 = OUTLINED_FUNCTION_2_29(32, 0xE100000000000000);
  }
  int v7 = *(_DWORD *)(v1 + 20);
  Swift::Int v8 = (v7 + v5);
  if (__CFADD__(v7, v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v8;
  Swift::Int v9 = v4 + v5;
  if (__OFADD__(v4, v5))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1A8A784D8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A871AEC8(123, 0xE100000000000000, v1 + 8, v8);
  Swift::Int v11 = v10;
  char v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14._countAndFlagsBits = 123;
    v14._object = (void *)0xE100000000000000;
    Swift::Int v11 = ByteBuffer._setStringSlowpath(_:at:)(v14, v8);
  }
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(v2 + 20);
  BOOL v16 = __CFADD__(v15, v11);
  int v17 = v15 + v11;
  if (v16) {
    goto LABEL_12;
  }
  *(_DWORD *)(v2 + 20) = v17;
  if (__OFADD__(v9, v11)) {
LABEL_13:
  }
    __break(1u);
}

uint64_t sub_1A885ECAC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v4 = *(_WORD *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_73()
{
  return 0x323238434652;
}

void OUTLINED_FUNCTION_3_61()
{
  Swift::UInt32 v2 = *(_DWORD *)(v0 + 20);
  sub_1A871AEC8(8234, 0xE200000000000000, v0 + 8, v2);
}

uint64_t OUTLINED_FUNCTION_4_60()
{
  return 0x4354454644495520;
}

void OUTLINED_FUNCTION_7_49(__int16 a1@<W8>)
{
  *(unsigned char *)(v1 + 5) = 0x80;
  *(_DWORD *)(v1 + 1) = a1 & 0x100 | 1;
}

void OUTLINED_FUNCTION_9_42()
{
  sub_1A871AEC8(32, 0xE100000000000000, v0, v1);
}

BOOL static ResponseEncodingOptions.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

NIOIMAPCore2::ResponseEncodingOptions __swiftcall ResponseEncodingOptions.init(capabilities:)(Swift::OpaquePointer capabilities)
{
  return (NIOIMAPCore2::ResponseEncodingOptions)1;
}

NIOIMAPCore2::ResponseEncodingOptions __swiftcall ResponseEncodingOptions.init()()
{
  return (NIOIMAPCore2::ResponseEncodingOptions)1;
}

uint64_t ResponseEncodingOptions.useQuotedString.getter(char a1)
{
  return a1 & 1;
}

uint64_t ResponseEncodingOptions.useQuotedString.setter(uint64_t result)
{
  *Swift::UInt32 v1 = result;
  return result;
}

double (*ResponseEncodingOptions.useQuotedString.modify())(void)
{
  return nullsub_1;
}

uint64_t ResponseEncodingOptions.hash(into:)()
{
  return sub_1A8A78778();
}

uint64_t ResponseEncodingOptions.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A885EE90()
{
  return ResponseEncodingOptions.hashValue.getter();
}

uint64_t sub_1A885EE98()
{
  return ResponseEncodingOptions.hash(into:)();
}

uint64_t sub_1A885EEA0()
{
  return sub_1A8A787C8();
}

unint64_t sub_1A885EEE8()
{
  unint64_t result = qword_1E974DE28;
  if (!qword_1E974DE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DE28);
  }
  return result;
}

BOOL sub_1A885EF34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ResponseEncodingOptions.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for ResponseEncodingOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResponseEncodingOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A885F0A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseEncodingOptions()
{
  return &type metadata for ResponseEncodingOptions;
}

uint64_t sub_1A885F0DC(uint64_t result, uint64_t a2, uint64_t *a3)
{
  unsigned int v4 = (char *)result;
  LODWORD(v5) = 0;
  int v6 = 0;
  if (result) {
    BOOL v7 = (unsigned __int8 *)(result + a2);
  }
  else {
    BOOL v7 = 0;
  }
  while (1)
  {
    int v21 = v5;
    unsigned __int8 v22 = v6;
    if (!(_BYTE)v6) {
      break;
    }
    if ((v5 & 0x80) == 0)
    {
      sub_1A871A678();
      char v13 = sub_1A87C8E94();
      sub_1A885F400(0);
      ((void (*)(uint64_t *, void))v13)(&v19, 0);
      goto LABEL_34;
    }
    if (!v4)
    {
LABEL_19:
      unsigned int v11 = v5;
      goto LABEL_20;
    }
    Swift::Int v9 = (unsigned __int8 *)v4;
LABEL_9:
    if (v9 == v7) {
      goto LABEL_19;
    }
    unsigned int v4 = (char *)(v9 + 1);
    unsigned int v11 = v5;
    while (1)
    {
      int v12 = *v9++;
      unsigned int v11 = ((-255 << v6) - 1) & v11 | (v12 << v6);
      v6 += 8;
      if (v6 >= 0x20u) {
        break;
      }
      ++v4;
      if (v9 == v7)
      {
        unsigned int v4 = (char *)v7;
        if ((_BYTE)v6) {
          break;
        }
        return result;
      }
    }
LABEL_20:
    if ((v11 & 0xC0E0) == 0x80C0)
    {
      if ((v11 & 0x1E) == 0) {
        goto LABEL_32;
      }
      int v14 = 16;
    }
    else if ((v11 & 0xC0C0F0) == 0x8080E0)
    {
      if ((v11 & 0x200F) == 0 || (v11 & 0x200F) == 0x200D) {
        goto LABEL_32;
      }
      int v14 = 24;
    }
    else
    {
      if ((v11 & 0xC0C0C0F8) != 0x808080F0 || (v11 & 0x3007) == 0 || __rev16(v11 & 0x3007) > 0x400)
      {
LABEL_32:
        unint64_t result = sub_1A8A78868();
        int v15 = 0;
        int v14 = 8 * result;
        goto LABEL_33;
      }
      int v14 = 32;
    }
    int v15 = 1;
LABEL_33:
    unint64_t v5 = (unint64_t)v11 >> (v14 & 0x38);
    int v21 = v5;
    v6 -= v14;
    unsigned __int8 v22 = v6;
    if (v15)
    {
LABEL_34:
      LODWORD(v5) = v21;
      int v6 = v22;
      uint64_t v16 = a3[1];
      uint64_t v19 = *a3;
      uint64_t v20 = v16;
      *a3 = 0;
      a3[1] = 0xE000000000000000;
      sub_1A8A766D8();
      uint64_t v18 = v19;
      uint64_t v17 = v20;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *a3 = v18;
      a3[1] = v17;
      unint64_t result = swift_bridgeObjectRelease();
    }
  }
  if (v4 && v4 != (char *)v7)
  {
    int v8 = *v4++;
    Swift::Int v9 = (unsigned __int8 *)v4;
    int v10 = v8;
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    LODWORD(v5) = v5 & 0xFFFFFF00 | v10;
    int v6 = 8;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A885F400(uint64_t result)
{
  char v2 = *(unsigned char *)(v1 + 4);
  if (v2)
  {
    if (result <= 0xF7u)
    {
      uint64_t v3 = (*(_DWORD *)v1 >> result);
      int v4 = ((result + 8) - result) / -8;
      *(_DWORD *)uint64_t v1 = (*(_DWORD *)v1 >> (((result + 8) >> 1) & 0x1C) >> (((result + 8) >> 1) & 0x1C) << ((result + 8 + 8 * v4) & 0x18)) | *(_DWORD *)v1 & ((1 << ((result >> 1) & 0x1C) << ((result >> 1) & 0x1C)) - 1);
      *(unsigned char *)(v1 + 4) = v2 + 8 * v4;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t AtomicFlag.Storage.deinit()
{
  return v0;
}

uint64_t AtomicFlag.Storage.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t AtomicFlag.storage.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

double (*AtomicFlag.storage.modify())(void)
{
  return nullsub_1;
}

uint64_t AtomicFlag.init()()
{
  type metadata accessor for AtomicFlag.Storage();
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t type metadata accessor for AtomicFlag.Storage()
{
  uint64_t result = qword_1E9740A88;
  if (!qword_1E9740A88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Bool __swiftcall AtomicFlag.testAndSet()()
{
  uint64_t v1 = v0;
  if (qword_1E9741600 != -1) {
    swift_once();
  }
  return atomicFlag_testAndSet(v1 + 16);
}

_UNKNOWN **atomicFlag_testAndSet.unsafeMutableAddressor()
{
  if (qword_1E9741600 != -1) {
    swift_once();
  }
  return &atomicFlag_testAndSet;
}

Swift::Void __swiftcall AtomicFlag.clear()()
{
  uint64_t v1 = v0;
  if (qword_1E974DE38 != -1) {
    swift_once();
  }
  char v2 = (void (*)(uint64_t))atomicFlag_clear;
  v2(v1 + 16);
}

_UNKNOWN **atomicFlag_clear.unsafeMutableAddressor()
{
  if (qword_1E974DE38 != -1) {
    swift_once();
  }
  return &atomicFlag_clear;
}

void *sub_1A885F6CC(uint64_t a1)
{
  return sub_1A885F6F4(a1, "atomic_flag_test_and_set", &atomicFlag_testAndSet);
}

void *sub_1A885F6E0(uint64_t a1)
{
  return sub_1A885F6F4(a1, "atomic_flag_clear", &atomicFlag_clear);
}

void *sub_1A885F6F4(uint64_t a1, const char *a2, void *a3)
{
  uint64_t result = dlsym((void *)0xFFFFFFFFFFFFFFFELL, a2);
  if (result) {
    *a3 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for AtomicFlag()
{
  return &type metadata for AtomicFlag;
}

uint64_t sub_1A885F738()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A885F778()
{
  return type metadata accessor for AtomicFlag.Storage();
}

void type metadata accessor for SecTrustResultType(uint64_t a1)
{
}

void type metadata accessor for SecTrust(uint64_t a1)
{
}

uint64_t RandomAccessCollection.binarySearch(for:using:)@<X0>(char *a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v46 = a6;
  uint64_t v50 = *(void *)(a5 + 8);
  uint64_t v10 = *(void *)(v50 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v64 = *(void (**)(void))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v60 = (char *)&v45 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v45 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v45 - v18;
  MEMORY[0x1F4188790](v20);
  unsigned __int8 v22 = (char *)&v45 - v21;
  if (sub_1A8A771D8())
  {
    Swift::Int v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    uint64_t v24 = v46;
    return v23(v24, 1, 1, v12);
  }
  else
  {
    sub_1A8A77198();
    sub_1A8A771E8();
    sub_1A8A762D8();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v47 + 8);
    Swift::String v59 = v16;
    uint64_t v68 = v26;
    uint64_t v69 = v47 + 8;
    v26(v16, v12);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    if (sub_1A8A76388())
    {
      char v55 = (void (**)(void))((char *)v64 + 16);
      Swift::Int v54 = (void (**)(char *, uint64_t))((char *)v64 + 8);
      Swift::Int v48 = (void (**)(char *, char *, uint64_t))(v47 + 16);
      Swift::String v56 = (void (**)(char *, char *, uint64_t))(v47 + 32);
      long long v66 = a1;
      uint64_t v52 = v10;
      uint64_t v71 = a4;
      uint64_t v53 = a5;
      uint64_t v67 = v12;
      uint64_t v49 = v22;
      int v57 = v19;
      uint64_t v65 = v6;
      do
      {
        sub_1A8A77128();
        sub_1A8A77118();
        uint64_t v32 = sub_1A8A77328();
        uint64_t v34 = v60;
        uint64_t v33 = AssociatedTypeWitness;
        char v64 = *v55;
        v64(v60);
        ((void (*)(unsigned char *, void))v32)(v72, 0);
        int v35 = a1;
        Swift::String v36 = v62;
        LOBYTE(v32) = v62((uint64_t)v34, v35);
        uint64_t v37 = *v54;
        (*v54)(v34, v33);
        if (v32)
        {
          Swift::Int v27 = v59;
          Swift::UInt32 v28 = v70;
          sub_1A8A771C8();
          uint64_t v29 = v22;
          uint64_t v19 = v57;
        }
        else
        {
          uint64_t v38 = *v48;
          Swift::String v51 = v37;
          Swift::Int v27 = v59;
          uint64_t v39 = v67;
          v38(v59, v70, v67);
          uint64_t v40 = sub_1A8A77328();
          v64(v34);
          ((void (*)(unsigned char *, void))v40)(v72, 0);
          v68(v27, v39);
          LOBYTE(v40) = v36((uint64_t)v66, v34);
          v51(v34, v33);
          if ((v40 & 1) == 0)
          {
            uint64_t v42 = v67;
            unint64_t v43 = v68;
            v68(v57, v67);
            v43(v49, v42);
            uint64_t v44 = v46;
            (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v46, v70, v42);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v42);
          }
          Swift::UInt32 v28 = v70;
          sub_1A8A762D8();
          uint64_t v19 = v57;
          uint64_t v29 = v57;
          unsigned __int8 v22 = v49;
        }
        uint64_t v12 = v67;
        unint64_t v30 = v68;
        v68(v28, v67);
        v30(v29, v12);
        (*v56)(v29, v27, v12);
        char v31 = sub_1A8A76388();
        a1 = v66;
      }
      while ((v31 & 1) != 0);
    }
    uint64_t v41 = v68;
    v68(v19, v12);
    v41(v22, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v46, 1, 1, v12);
  }
}

uint64_t RandomAccessCollection.binarySearch<A>(forKey:using:_:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  char v64 = a4;
  uint64_t v65 = a5;
  uint64_t v50 = a3;
  uint64_t v49 = a2;
  uint64_t v63 = a1;
  uint64_t v45 = a8;
  uint64_t v51 = *(void *)(a7 + 8);
  uint64_t v11 = *(void *)(v51 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v66 = *(char **)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v52 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v45 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v45 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v45 - v23;
  if (sub_1A8A771D8())
  {
    int v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
    uint64_t v26 = v45;
    return v25(v26, 1, 1, v14);
  }
  else
  {
    int v61 = v13;
    sub_1A8A77198();
    sub_1A8A771E8();
    sub_1A8A762D8();
    uint64_t v70 = *(void (**)(char *, uint64_t))(v46 + 8);
    uint64_t v71 = v46 + 8;
    v70(v18, v14);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v28 = sub_1A8A76388();
    uint64_t v29 = v52;
    if (v28)
    {
      char v55 = (char **)(v66 + 8);
      Swift::String v56 = (void (**)(char *))(v66 + 16);
      uint64_t v47 = (void (**)(char *, char *, uint64_t))(v46 + 16);
      int v57 = (void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v53 = v11;
      uint64_t v54 = a7;
      uint64_t v69 = v14;
      Swift::Int v48 = v24;
      uint64_t v58 = v21;
      Swift::String v59 = v18;
      uint64_t v67 = v8;
      uint64_t v68 = a6;
      do
      {
        sub_1A8A77128();
        sub_1A8A77118();
        uint64_t v33 = sub_1A8A77328();
        uint64_t v34 = *v56;
        int v35 = v61;
        uint64_t v36 = AssociatedTypeWitness;
        (*v56)(v61);
        ((void (*)(unsigned char *, void))v33)(v72, 0);
        uint64_t v37 = v63;
        LOBYTE(v33) = v64(v35, v63);
        long long v66 = *v55;
        ((void (*)(char *, uint64_t))v66)(v35, v36);
        if (v33)
        {
          unint64_t v30 = v59;
          sub_1A8A771C8();
          char v31 = v24;
          uint64_t v21 = v58;
        }
        else
        {
          uint64_t v38 = v59;
          uint64_t v39 = v69;
          (*v47)(v59, v29, v69);
          uint64_t v40 = sub_1A8A77328();
          v34(v35);
          ((void (*)(unsigned char *, void))v40)(v72, 0);
          v70(v38, v39);
          LOBYTE(v40) = v49(v37, v35);
          ((void (*)(char *, uint64_t))v66)(v35, v36);
          if ((v40 & 1) == 0)
          {
            uint64_t v42 = v69;
            unint64_t v43 = v70;
            v70(v58, v69);
            v43(v48, v42);
            uint64_t v44 = v45;
            (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v45, v52, v42);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v42);
          }
          uint64_t v29 = v52;
          sub_1A8A762D8();
          uint64_t v21 = v58;
          char v31 = v58;
          uint64_t v24 = v48;
          unint64_t v30 = v38;
        }
        uint64_t v14 = v69;
        uint64_t v32 = v70;
        v70(v29, v69);
        v32(v31, v14);
        (*v57)(v31, v30, v14);
      }
      while ((sub_1A8A76388() & 1) != 0);
    }
    uint64_t v41 = v70;
    v70(v21, v14);
    v41(v24, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v45, 1, 1, v14);
  }
}

uint64_t CertUITrustManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  CertUITrustManager.init()();
  return v0;
}

void CertUITrustManager.init()()
{
  uint64_t v1 = (NSString *)sub_1A8A76538();
  char v2 = NSClassFromString(v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = (const char *)sub_1A8A74EB8();
  ClassMethod = class_getClassMethod(v2, v3);
  if (!ClassMethod)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  IMP Implementation = method_getImplementation(ClassMethod);
  uint64_t v6 = sub_1A8A74EB8();
  id v7 = (id)((uint64_t (*)(objc_class *, uint64_t))Implementation)(v2, v6);
  uint64_t v8 = (const char *)sub_1A8A74EB8();
  InstanceMethod = class_getInstanceMethod(v2, v8);
  if (!InstanceMethod)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  IMP v10 = method_getImplementation(InstanceMethod);
  uint64_t v11 = sub_1A8A74EB8();
  v0[2] = (id)((uint64_t (*)(id, uint64_t))v10)(v7, v11);
  uint64_t v12 = class_getInstanceMethod(v2, sel_rawTrustResultForSSLTrust_hostname_service_);
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v0[3] = method_getImplementation(v12);
  uint64_t v13 = class_getInstanceMethod(v2, sel_allowTrust_forHost_service_);
  if (v13)
  {
    IMP v14 = method_getImplementation(v13);
    swift_unknownObjectRelease();
    v0[4] = v14;
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t CertUITrustManager.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t CertUITrustManager.__deallocating_deinit()
{
  return sub_1A8860DD8();
}

uint64_t CertUITrustManager.rawTrustResult(forSSLTrust:hostname:service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = a5;
  uint64_t v10 = v5 + 16;
  uint64_t v8 = *(void *)(v5 + 16);
  Swift::Int v9 = *(uint64_t (**)(uint64_t, char *, uint64_t, void *, void *))(v10 + 8);
  if (!a3)
  {
    uint64_t v11 = 0;
    if (!a5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v11 = (void *)sub_1A8A76538();
  if (v6) {
LABEL_3:
  }
    uint64_t v6 = (void *)sub_1A8A76538();
LABEL_4:
  uint64_t v12 = v9(v8, sel_rawTrustResultForSSLTrust_hostname_service_, a1, v11, v6);

  return v12;
}

Swift::Void __swiftcall CertUITrustManager.allow(_:forHost:service:)(SecTrustRef_optional _, Swift::String_optional forHost, Swift::String_optional service)
{
  object = service.value._object;
  uint64_t v6 = *(void (**)(uint64_t, char *, SecTrustRef, void *))(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 16);
  if (forHost.value._object)
  {
    uint64_t v8 = (void *)sub_1A8A76538();
    if (object)
    {
LABEL_3:
      uint64_t v9 = sub_1A8A76538();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (service.value._object) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
LABEL_6:
  id v10 = (id)v9;
  v6(v7, sel_allowTrust_forHost_service_, _.value, v8);
}

uint64_t CertUITrustManager.showPrompt(hostname:service:trust:options:_:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for CertUIPrompt();
  uint64_t inited = swift_initStackObject();
  sub_1A8860C10();
  IMP v14 = *(void (**)(uint64_t, char *, void *))(inited + 32);
  uint64_t v15 = *(void *)(inited + 16);
  if (a2) {
    a2 = (void *)sub_1A8A76538();
  }
  v14(v15, sel_setHost_, a2);

  uint64_t v16 = *(void (**)(uint64_t, char *, void *))(inited + 40);
  uint64_t v17 = *(void *)(inited + 16);
  if (a4) {
    a4 = (void *)sub_1A8A76538();
  }
  v16(v17, sel_setService_, a4);

  (*(void (**)(void, char *, uint64_t))(inited + 24))(*(void *)(inited + 16), sel_setTrust_, a5);
  sub_1A8860B04(a6, a7, a8);
  return swift_release();
}

uint64_t type metadata accessor for CertUIPrompt()
{
  return self;
}

void sub_1A8860B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void (**)(uint64_t, char *, void *, void *))(v3 + 48);
  uint64_t v7 = *(void *)(v3 + 16);
  if (a1) {
    uint64_t v8 = (void *)sub_1A8A76008();
  }
  else {
    uint64_t v8 = 0;
  }
  v10[4] = a2;
  v10[5] = a3;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1A8860FC4;
  v10[3] = &block_descriptor_24;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  v6(v7, sel_showPromptWithOptions_responseBlock_, v8, v9);
  _Block_release(v9);
}

void sub_1A8860C10()
{
  uint64_t v1 = (NSString *)sub_1A8A76538();
  char v2 = NSClassFromString(v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = (const char *)sub_1A8A74EB8();
  ClassMethod = class_getClassMethod(v2, v3);
  if (!ClassMethod)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  IMP Implementation = method_getImplementation(ClassMethod);
  uint64_t v6 = sub_1A8A74EB8();
  id v7 = (id)((uint64_t (*)(objc_class *, uint64_t))Implementation)(v2, v6);
  uint64_t v8 = (const char *)sub_1A8A74EB8();
  InstanceMethod = class_getInstanceMethod(v2, v8);
  if (!InstanceMethod)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  IMP v10 = method_getImplementation(InstanceMethod);
  uint64_t v11 = sub_1A8A74EB8();
  v0[2] = (id)((uint64_t (*)(id, uint64_t))v10)(v7, v11);
  uint64_t v12 = class_getInstanceMethod(v2, sel_setTrust_);
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v0[3] = method_getImplementation(v12);
  uint64_t v13 = class_getInstanceMethod(v2, sel_setHost_);
  if (!v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v0[4] = method_getImplementation(v13);
  IMP v14 = class_getInstanceMethod(v2, sel_setService_);
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v0[5] = method_getImplementation(v14);
  uint64_t v15 = class_getInstanceMethod(v2, sel_showPromptWithOptions_responseBlock_);
  if (v15)
  {
    IMP v16 = method_getImplementation(v15);
    swift_unknownObjectRelease();
    v0[6] = v16;
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for CertUITrustManager()
{
  return self;
}

uint64_t sub_1A8860DD0()
{
  return sub_1A8860DD8();
}

uint64_t sub_1A8860DD8()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A8860FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1A88610E4()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A886111C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(uint64_t a1, void *a2, void (**a3)(char *, void), void (**a4)(char *, void), void (*a5)(char *), void (**a6)(char *, void), void (*a7)(char *, char *), uint64_t a8, uint64_t a9, void (**a10)(char *, void))
{
  uint64_t v82 = a8;
  int v81 = (void (*)(char *, char *))a7;
  uint64_t v79 = a6;
  char v78 = (void (*)(char *))a5;
  uint64_t v77 = a4;
  uint64_t v76 = a3;
  uint64_t v11 = *a2;
  v90 = a2;
  uint64_t v12 = (void *)(v11 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v13 = (void (**)(char *, void))*v12;
  uint64_t v14 = *(void *)(*v12 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](a9);
  uint64_t v80 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v75 - v18;
  v92 = *(void (***)(void, void))(v20 + 8);
  uint64_t v21 = (uint64_t)*(v92 - 1);
  uint64_t v22 = MEMORY[0x1F4188790](v17);
  uint64_t v84 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v75 - v25;
  uint64_t v88 = v24;
  uint64_t v27 = MEMORY[0x1AD0DFF00](v24, v13);
  uint64_t v93 = a10;
  if (v27 < 1)
  {
    uint64_t v28 = 0;
    uint64_t v94 = 0;
    uint64_t v87 = 0;
    uint64_t v42 = a1;
  }
  else
  {
    uint64_t v91 = a1;
    if (MEMORY[0x1AD0DFF00](a1, v13) >= 1)
    {
      v86 = v19;
      uint64_t v87 = 0;
      uint64_t v28 = 0;
      uint64_t v94 = 0;
      uint64_t v29 = (void (**)(char *, void))(v14 + 8);
      uint64_t v30 = v88;
      v85 = v26;
      uint64_t v75 = v29;
      uint64_t v83 = (void (**)(char *, void))(v21 + 8);
      while (1)
      {
        char v31 = v86;
        sub_1A8A76EB8();
        swift_getAtKeyPath();
        uint64_t v32 = *v29;
        (*v29)(v31, v13);
        sub_1A8A76EB8();
        swift_getAtKeyPath();
        v32(v31, v13);
        uint64_t v33 = v92;
        if (sub_1A8A76498())
        {
          uint64_t v89 = v28;
          uint64_t v34 = v94;
          sub_1A8A76EB8();
          int v35 = v80;
          sub_1A8A76EB8();
          v81(v31, v35);
          uint64_t v36 = v35;
          uint64_t v37 = v84;
          v32(v36, v13);
          v32(v31, v13);
          uint64_t v38 = *v83;
          uint64_t result = ((uint64_t (*)(char *, void))*v83)(v37, v33);
          BOOL v40 = __OFADD__(v34, 1);
          uint64_t v41 = v34 + 1;
          if (v40)
          {
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
          uint64_t v28 = v89 + 1;
          v38(v85, v33);
          uint64_t v30 = v88;
          uint64_t v42 = v91;
          uint64_t v94 = v41;
        }
        else
        {
          unint64_t v43 = v32;
          uint64_t result = MEMORY[0x1AD0DFF00](v30, v13);
          if (result < v94) {
            goto LABEL_22;
          }
          uint64_t v101 = sub_1A8A76E98();
          uint64_t v102 = v44;
          uint64_t v103 = v45;
          uint64_t v104 = v46;
          MEMORY[0x1F4188790](v101);
          uint64_t v47 = v90;
          *(&v75 - 4) = v93;
          *(&v75 - 3) = (void (**)(char *, void))v47;
          Swift::Int v48 = v85;
          *(&v75 - 2) = (void (**)(char *, void))v85;
          sub_1A8A77B48();
          swift_getWitnessTable();
          uint64_t v49 = v87;
          sub_1A8A77218();
          uint64_t result = swift_unknownObjectRelease();
          if (v100)
          {
            uint64_t v87 = v49;
            uint64_t v50 = v86;
            uint64_t v51 = v91;
            sub_1A8A76EB8();
            v78(v50);
            uint64_t v29 = v75;
            v43(v50, v13);
            uint64_t v52 = *v83;
            uint64_t v53 = v92;
            (*v83)(v84, v92);
            ++v28;
            v52(v48, v53);
            uint64_t v42 = v51;
            uint64_t v30 = v88;
          }
          else
          {
            uint64_t v54 = v99;
            if (v99 < v94) {
              goto LABEL_23;
            }
            uint64_t v55 = v88;
            uint64_t v95 = sub_1A8A76E98();
            uint64_t v96 = v56;
            uint64_t v97 = v57;
            uint64_t v98 = v58;
            MEMORY[0x1F4188790](v95);
            uint64_t v89 = v28;
            uint64_t v60 = (void (**)(char *, void))v92;
            Swift::String v59 = v93;
            *(&v75 - 6) = v13;
            *(&v75 - 5) = v60;
            int v61 = v76;
            *(&v75 - 4) = v59;
            *(&v75 - 3) = v61;
            *(&v75 - 2) = v77;
            swift_getWitnessTable();
            sub_1A8A76A98();
            uint64_t v30 = v55;
            uint64_t v87 = v49;
            swift_unknownObjectRelease();
            uint64_t v62 = *v83;
            (*v83)(v84, v60);
            v62(v85, v60);
            uint64_t v28 = v89;
            uint64_t v94 = v54;
            uint64_t v42 = v91;
            uint64_t v29 = v75;
          }
        }
        uint64_t v63 = MEMORY[0x1AD0DFF00](v30, v13);
        if (v94 >= v63 || v28 >= MEMORY[0x1AD0DFF00](v42, v13)) {
          goto LABEL_18;
        }
      }
    }
    uint64_t v28 = 0;
    uint64_t v94 = 0;
    uint64_t v87 = 0;
    uint64_t v42 = v91;
  }
  uint64_t v30 = v88;
LABEL_18:
  uint64_t result = MEMORY[0x1AD0DFF00](v30, v13);
  if (result < v94) {
    goto LABEL_24;
  }
  uint64_t v101 = sub_1A8A76E98();
  uint64_t v102 = v64;
  uint64_t v103 = v65;
  uint64_t v104 = v66;
  MEMORY[0x1F4188790](v101);
  uint64_t v67 = (void (**)(char *, void))v92;
  uint64_t v68 = v93;
  *(&v75 - 6) = v13;
  *(&v75 - 5) = v67;
  uint64_t v69 = v76;
  *(&v75 - 4) = v68;
  *(&v75 - 3) = v69;
  *(&v75 - 2) = v77;
  sub_1A8A77B48();
  swift_getWitnessTable();
  sub_1A8A76A98();
  swift_unknownObjectRelease();
  uint64_t result = MEMORY[0x1AD0DFF00](v42, v13);
  if (result < v28)
  {
LABEL_25:
    __break(1u);
  }
  else
  {
    uint64_t v101 = sub_1A8A76E98();
    uint64_t v102 = v70;
    uint64_t v103 = v71;
    uint64_t v104 = v72;
    MEMORY[0x1F4188790](v101);
    uint64_t v73 = (void (**)(char *, void))v92;
    *(&v75 - 6) = v13;
    *(&v75 - 5) = v73;
    uint64_t v74 = (void (*)(void))v78;
    *(&v75 - 4) = v68;
    *(&v75 - 3) = (void (**)(char *, void))v74;
    *(&v75 - 2) = v79;
    sub_1A8A76A98();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A88619B0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a2 + 8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - v4;
  swift_getAtKeyPath();
  char v6 = sub_1A8A76498();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_1A8861AD0()
{
  return sub_1A8861B0C();
}

uint64_t sub_1A8861AE8(uint64_t a1)
{
  return sub_1A88619B0(a1, *(void **)(v1 + 24)) & 1;
}

uint64_t sub_1A8861B0C()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t static DispatchData.makeMappedRead(fileDescriptor:count:)(int a1, size_t a2)
{
  uint64_t v4 = sub_1A8A75D48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = mmap(0, a2, 1, 1, a1, 0);
  if (!v8 || (uint64_t v9 = v8, (v10 = sub_1A8A755D8()) != 0) && v9 == (void *)v10)
  {
    sub_1A8861C9C();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCB90], v4);
    return sub_1A8A75D58();
  }
}

unint64_t sub_1A8861C9C()
{
  unint64_t result = qword_1E974DF10;
  if (!qword_1E974DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DF10);
  }
  return result;
}

uint64_t static URL.makeTemporaryFile(baseDirectory:pathExtension:)(char *a1)
{
  uint64_t v3 = sub_1A8A74998();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8A748A8();
  sub_1A8A748B8();
  id v7 = *(void (**)(char *, uint64_t))(v4 + 8);
  v7(v6, v3);
  uint64_t v8 = sub_1A8861FC0((uint64_t)sub_1A8861E50, 0);
  if (v1) {
    v7(a1, v3);
  }
  return v8;
}

uint64_t sub_1A8861E50@<X0>(char *a1@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_1A8A74358();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = mkstemps(a1, a2);
  if ((int)result <= 0)
  {
    MEMORY[0x1AD0DE6F0]();
    uint64_t v11 = sub_1A8A755E8();
    if ((v11 & 0x100000000) != 0)
    {
      sub_1A886281C();
      swift_allocError();
    }
    else
    {
      int v13 = v11;
      sub_1A8862870(MEMORY[0x1E4FBC860]);
      sub_1A886299C();
      sub_1A8A747B8();
      sub_1A8A74348();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return swift_willThrow();
  }
  else
  {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1A8861FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v23 = a2;
  uint64_t v22 = a1;
  uint64_t v5 = sub_1A8A74998();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97475D8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8A74848();
  uint64_t v12 = sub_1A8A76778();
  uint64_t result = swift_bridgeObjectRelease();
  if (v12 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v12 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  BOOL v14 = __OFADD__(v12, 1);
  int v15 = v12 + 1;
  if (v14)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v4, v5);
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = v23;
  *(&v21 - 4) = v22;
  *(&v21 - 3) = v17;
  *((_DWORD *)&v21 - 4) = v15;
  MEMORY[0x1F4188790](v18);
  *(&v21 - 2) = (uint64_t)sub_1A886272C;
  *(&v21 - 1) = v19;
  sub_1A8A74908();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v20(v4, v5);
    v20((uint64_t)v8, v5);
    uint64_t v8 = (char *)*(unsigned int *)v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v4, &v11[*(int *)(v9 + 48)], v5);
  }
  return (uint64_t)v8;
}

ValueMetadata *_s19MemoryMappingFailedVMa()
{
  return &_s19MemoryMappingFailedVN;
}

uint64_t sub_1A8862270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(int *__return_ptr, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _DWORD *a6@<X8>)
{
  void (*v47)(int *__return_ptr, char *, uint64_t);
  char *v48;
  int v49;
  uint64_t v50;

  uint64_t v47 = a3;
  uint64_t v46 = a4;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97475D8);
  MEMORY[0x1F4188790](v10);
  unint64_t v43 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  BOOL v14 = (char *)&v41 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748668);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1A8A74998();
  uint64_t v45 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v44 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v41 = v18;
    uint64_t v42 = a6;
    uint64_t v21 = v10;
LABEL_7:
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v23 = (char *)&v41 - v22;
    sub_1A8A77958();
    uint64_t v24 = v48;
    v47(&v49, v23, a5);
    if (v24) {
      return swift_willThrow();
    }
    Swift::Int v48 = &v14[*(int *)(v21 + 48)];
    uint64_t v26 = v45;
    uint64_t v27 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v17, 1, 1, v41);
    uint64_t v28 = v44;
    sub_1A8A74918();
    sub_1A88627BC((uint64_t)v17);
    uint64_t v29 = &v43[*(int *)(v21 + 48)];
    int v30 = v49;
    char v31 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v31(v29, v28, v27);
    uint64_t v32 = v48;
    v31(v48, v29, v27);
    uint64_t v33 = (char *)v42 + *(int *)(v21 + 48);
    *uint64_t v42 = v30;
    return ((uint64_t (*)(char *, char *, uint64_t))v31)(v33, v32, v27);
  }
  if (a2 - a1 < 0) {
    __break(1u);
  }
  if (a2 - a1 < 1025
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v41 = v18;
    uint64_t v42 = a6;
    uint64_t v21 = v10;
    goto LABEL_7;
  }
  uint64_t v34 = swift_slowAlloc();
  sub_1A8A77958();
  int v35 = v48;
  v47(&v49, (char *)v34, a5);
  if (v35)
  {
    uint64_t v36 = v34;
  }
  else
  {
    uint64_t v37 = v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v17, 1, 1, v18);
    uint64_t v38 = v34;
    uint64_t v39 = v44;
    sub_1A8A74918();
    sub_1A88627BC((uint64_t)v17);
    BOOL v40 = (char *)a6 + *(int *)(v10 + 48);
    *a6 = v49;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v39, v18);
    uint64_t v36 = v38;
  }
  return MEMORY[0x1AD0E4D00](v36, -1, -1);
}

size_t sub_1A886268C(const char *a1, uint64_t (*a2)(const char *, const char *))
{
  if (a1)
  {
    size_t result = strlen(a1);
    if (__OFADD__(result, 1)) {
      __break(1u);
    }
    else {
      return a2(a1, &a1[result + 1]);
    }
  }
  else
  {
    sub_1A8862768();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A886272C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  return sub_1A8862270(a1, a2, *(void (**)(int *__return_ptr, char *, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(unsigned int *)(v3 + 32), a3);
}

size_t sub_1A886274C(const char *a1)
{
  return sub_1A886268C(a1, *(uint64_t (**)(const char *, const char *))(v1 + 16));
}

unint64_t sub_1A8862768()
{
  unint64_t result = qword_1E974DF20;
  if (!qword_1E974DF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DF20);
  }
  return result;
}

uint64_t sub_1A88627BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748668);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A886281C()
{
  unint64_t result = qword_1E974DF30;
  if (!qword_1E974DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DF30);
  }
  return result;
}

unint64_t sub_1A8862870(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(qword_1E974DF40);
  uint64_t v2 = sub_1A8A781E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A8862A6C(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A88629F4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1A8862AD4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A886299C()
{
  unint64_t result = qword_1E974DF38;
  if (!qword_1E974DF38)
  {
    sub_1A8A74358();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DF38);
  }
  return result;
}

unint64_t sub_1A88629F4(uint64_t a1, uint64_t a2)
{
  sub_1A8A78738();
  sub_1A8A762A8();
  uint64_t v4 = sub_1A8A787C8();
  return sub_1A8862AE4(a1, a2, v4);
}

uint64_t sub_1A8862A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1A8862AD4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1A8862AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1A8A78588() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1A8A78588() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1A8A78588()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

ValueMetadata *_s25UnableToMakeTemporaryFileVMa()
{
  return &_s25UnableToMakeTemporaryFileVN;
}

ValueMetadata *type metadata accessor for InvalidTemporaryFileTemplate()
{
  return &type metadata for InvalidTemporaryFileTemplate;
}

uint64_t KeyedSequence.readKey.getter(uint64_t a1)
{
  return a1;
}

uint64_t KeyedSequence.sorted.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t KeyedSequence.sorted.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

double (*KeyedSequence.sorted.modify())(void)
{
  return nullsub_1;
}

uint64_t KeyedSequence.unsorted.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t KeyedSequence.unsorted.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

double (*KeyedSequence.unsorted.modify())(void)
{
  return nullsub_1;
}

uint64_t KeyedSequence.init(element:key:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Array.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

Swift::Void __swiftcall KeyedSequence.consolidate()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v84 = *(void *)(v4 - 8);
  ((void (*)())MEMORY[0x1F4188790])();
  uint64_t v67 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v66 = (char *)&v58 - v7;
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v77 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v85 = (char *)&v58 - v13;
  uint64_t v14 = sub_1A8A77898();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v87 = (char *)&v58 - v15;
  uint64_t v83 = v14;
  uint64_t v59 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v16);
  int v61 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v60 = (char *)&v58 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v80 = (char *)&v58 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v79 = (char *)&v58 - v23;
  uint64_t v68 = v4;
  uint64_t v88 = v4;
  uint64_t v89 = v9;
  uint64_t v65 = *(void *)(v3 + 32);
  uint64_t v90 = v65;
  uint64_t v91 = v2;
  uint64_t v24 = sub_1A8A76E68();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1A8A76428();
  uint64_t v104 = sub_1A8A76D18();
  uint64_t v25 = *(void *)(v2 + 16);
  uint64_t v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v27 = MEMORY[0x1AD0DFE60](v26, v9);
  swift_bridgeObjectRelease();
  uint64_t v82 = (void (**)(void))v2;
  uint64_t v28 = *(void *)(v2 + 24);
  uint64_t v29 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v30 = MEMORY[0x1AD0DFE60](v29, v9);
  swift_bridgeObjectRelease();
  if (__OFADD__(v27, v30))
  {
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    uint64_t v64 = v11;
    uint64_t v58 = v2 + 24;
    sub_1A8A76CC8();
    uint64_t v96 = v25;
    sub_1A8A76408();
    uint64_t v92 = v28;
    uint64_t v76 = v24;
    sub_1A8A76408();
    uint64_t v31 = sub_1A8A77B48();
    uint64_t v78 = v59 + 32;
    v86 = (uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    uint64_t v63 = (void (**)(char *, char *, uint64_t))(v77 + 32);
    uint64_t v62 = (void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v73 = (void (**)(char *, uint64_t))(v77 + 8);
    uint64_t v77 = v9;
    uint64_t v75 = v31;
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v59 + 32);
    while (1)
    {
      uint64_t v72 = v100;
      uint64_t v92 = v100;
      uint64_t v93 = v101;
      uint64_t v71 = v101;
      uint64_t v70 = v102;
      uint64_t v94 = v102;
      uint64_t v95 = v103;
      uint64_t v69 = v103;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v36 = v79;
      sub_1A8A77288();
      uint64_t v37 = v97;
      uint64_t v38 = v98;
      uint64_t v39 = v99;
      uint64_t v74 = v96;
      uint64_t v92 = v96;
      uint64_t v93 = v97;
      uint64_t v94 = v98;
      uint64_t v95 = v99;
      BOOL v40 = v80;
      uint64_t v84 = WitnessTable;
      sub_1A8A77288();
      uint64_t v41 = v87;
      uint64_t v42 = &v87[*(int *)(TupleTypeMetadata2 + 48)];
      unint64_t v43 = *v32;
      uint64_t v44 = v83;
      (*v32)(v87, v36, v83);
      v43(v42, v40, v44);
      uint64_t v45 = *v86;
      uint64_t v46 = v77;
      LODWORD(v44) = (*v86)(v41, 1, v77);
      uint64_t v47 = v46;
      int v48 = v45(v42, 1, v46);
      if (v44 == 1) {
        break;
      }
      if (v48 == 1)
      {
        uint64_t v92 = v72;
        uint64_t v93 = v71;
        uint64_t v94 = v70;
        uint64_t v95 = v69;
        swift_unknownObjectRetain();
        swift_getWitnessTable();
        sub_1A8A76DC8();
        (*v73)(v87, v46);
        goto LABEL_13;
      }
      uint64_t v49 = *v63;
      uint64_t v50 = v85;
      (*v63)(v85, v87, v47);
      uint64_t v38 = v64;
      v49(v64, v42, v47);
      uint64_t v51 = (void (*)(char *))*v82;
      swift_retain();
      uint64_t v37 = v66;
      v51(v50);
      swift_release();
      swift_retain();
      uint64_t v52 = v67;
      v51(v38);
      swift_release();
      uint64_t v53 = v68;
      LOBYTE(v49) = sub_1A8A76368();
      uint64_t v39 = v62;
      uint64_t v54 = *v62;
      (*v62)(v52, v53);
      v54(v37, v53);
      if (v49)
      {
        uint64_t v33 = v60;
        sub_1A8A77208();
        if (v45(v33, 1, v47) == 1) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v55 = v61;
        uint64_t v42 = (char *)v75;
        sub_1A8A77208();
        int v48 = v45(v55, 1, v47);
        if (v48 == 1)
        {
          __break(1u);
          break;
        }
      }
      sub_1A8A76DD8();
      uint64_t v34 = *v73;
      (*v73)(v38, v47);
      v34(v85, v47);
    }
    if (v48 != 1)
    {
      uint64_t v92 = v74;
      uint64_t v93 = v37;
      uint64_t v94 = v38;
      uint64_t v95 = v39;
      swift_unknownObjectRetain();
      swift_getWitnessTable();
      sub_1A8A76DC8();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v83);
    }
LABEL_13:
    sub_1A8A76E48();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v56 = v104;
    uint64_t v57 = v82;
    swift_bridgeObjectRelease();
    v57[2] = (void (*)(void))v56;
  }
}

uint64_t KeyedSequence.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  KeyedSequence.index(for:)(a1, a2, a3, a4, a5, a6, a7, a8);
  if (v11 == -1)
  {
    uint64_t v12 = 1;
  }
  else
  {
    sub_1A8A76EB8();
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 56);
  return v13(a9, v12, 1, a7);
}

uint64_t KeyedSequence.index(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a4;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v16 = a6;
  uint64_t v17 = a7;
  uint64_t v18 = a8;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v10 = sub_1A8A76E68();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t WitnessTable = swift_getWitnessTable();
  RandomAccessCollection.binarySearch<A>(forKey:using:_:)(a1, (uint64_t (*)(uint64_t, char *))sub_1A8864E8C, (uint64_t)v23, (uint64_t (*)(char *, uint64_t))sub_1A8864EA4, (uint64_t)v15, v10, WitnessTable, (uint64_t)&v32);
  uint64_t v12 = swift_bridgeObjectRelease();
  if ((v33 & 1) == 0) {
    return v32;
  }
  v14[1] = v14;
  uint64_t v31 = a5;
  MEMORY[0x1F4188790](v12);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_getWitnessTable();
  sub_1A8A77218();
  swift_bridgeObjectRelease();
  if (v33) {
    return 0;
  }
  else {
    return v32;
  }
}

uint64_t KeyedSequence.subscript.getter()
{
  return sub_1A8A76EB8();
}

BOOL KeyedSequence.contains(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  KeyedSequence.index(for:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v8 != -1;
}

void KeyedSequence.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v38 = a1;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v32 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *(void *)(v7 + 16);
  uint64_t v8 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(uint64_t))v2;
  uint64_t v12 = *(void *)(v2 + 8);
  uint64_t v14 = *(void *)(v3 + 16);
  uint64_t v31 = (uint64_t *)(v3 + 16);
  uint64_t v15 = *(void *)(v3 + 24);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  v13(v38);
  uint64_t v33 = a2;
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = v37;
  uint64_t v36 = v5;
  unint64_t v34 = KeyedSequence.index(for:)((uint64_t)v11, (uint64_t)v13, v12, v14, v15, v37, v5, v16);
  char v19 = v18;
  LODWORD(v5) = ~v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v17);
  if (v5)
  {
    uint64_t v20 = v38;
    uint64_t v21 = v36;
    sub_1A8A76E68();
    uint64_t v22 = v35;
    if (v19)
    {
      sub_1A8A76D08();
      uint64_t v24 = *(void *)(v3 + 24);
    }
    else
    {
      uint64_t v23 = v31;
      sub_1A8A76D08();
      uint64_t v24 = *v23;
    }
    unint64_t v28 = v34;
    sub_1A8864F34(v34, v24);
    char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    uint64_t v30 = v24 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0) {
      uint64_t v30 = v24;
    }
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 24))(v30+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v28, v20, v21);
  }
  else
  {
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v32, v38, v36);
    sub_1A8A76E68();
    sub_1A8A76DD8();
    uint64_t v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v27 = MEMORY[0x1AD0DFE60](v26, v25);
    swift_bridgeObjectRelease();
    if (v27 >= 11) {
      KeyedSequence.consolidate()();
    }
  }
}

uint64_t KeyedSequence.insert<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v26 = a1;
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A8A77898();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  double v16 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v18 = (char *)&v22 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, v26, a3, v16);
  sub_1A8A76988();
  swift_getAssociatedConformanceWitness();
  uint64_t v25 = v18;
  uint64_t v26 = AssociatedTypeWitness;
  sub_1A8A77948();
  char v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v19(v10, 1, v4) != 1)
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    do
    {
      v20(v7, v10, v4);
      KeyedSequence.insert(_:)((uint64_t)v7, v24);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_1A8A77948();
    }
    while (v19(v10, 1, v4) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v26);
}

BOOL KeyedSequence.update(key:_:)(uint64_t a1, void (*a2)(unint64_t), uint64_t a3, void *a4)
{
  uint64_t v6 = v4 + 2;
  uint64_t v7 = v4[2];
  uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  uint64_t v11 = v4[3];
  uint64_t v10 = v4 + 3;
  uint64_t v13 = a4[2];
  uint64_t v12 = a4[3];
  uint64_t v14 = a4[4];
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v15 = KeyedSequence.index(for:)(a1, v8, v9, v7, v11, v13, v12, v14);
  char v17 = v16;
  LODWORD(v14) = ~v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v14)
  {
    sub_1A8A76E68();
    if ((v17 & 1) == 0) {
      uint64_t v10 = v6;
    }
    sub_1A8A76D08();
    uint64_t v18 = *v10;
    sub_1A8864F34(v15, *v10);
    if (_swift_isClassOrObjCExistentialType()) {
      uint64_t v19 = v18 & 0xFFFFFFFFFFFFFF8;
    }
    else {
      uint64_t v19 = v18;
    }
    a2(v19+ ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))+ *(void *)(*(void *)(v12 - 8) + 72) * v15);
  }
  return ~v17 != 0;
}

uint64_t KeyedSequence.removeElement(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a2[3];
  KeyedSequence.index(for:)(a1, *v3, v3[1], v3[2], v3[3], a2[2], v5, a2[4]);
  if (v6 == -1)
  {
    uint64_t v7 = 1;
  }
  else
  {
    sub_1A8A76E68();
    sub_1A8A76E08();
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v8(a3, v7, 1, v5);
}

uint64_t sub_1A88642B8(uint64_t a1, uint64_t a2, void (**a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v20 - v12;
  unint64_t v15 = *v14;
  swift_retain();
  v15(a1);
  swift_release();
  char v16 = *a3;
  swift_retain();
  v16(a2);
  swift_release();
  char v17 = sub_1A8A76368();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, a4);
  v18(v13, a4);
  return v17 & 1;
}

uint64_t KeyedSequence.isEmpty.getter()
{
  sub_1A8A76E68();
  swift_getWitnessTable();
  if (sub_1A8A772A8()) {
    char v0 = sub_1A8A772A8();
  }
  else {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t KeyedSequence.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = MEMORY[0x1AD0DFE60](a3, a6);
  uint64_t v9 = MEMORY[0x1AD0DFE60](a4, a6);
  BOOL v10 = __OFADD__(v8, v9);
  uint64_t result = v8 + v9;
  if (v10) {
    __break(1u);
  }
  return result;
}

uint64_t KeyedSequence.reduce<A>(into:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a4;
  uint64_t v25 = a5;
  uint64_t v9 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v24 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v22 - v12;
  double v15 = MEMORY[0x1F4188790](v14);
  char v17 = (char *)v22 - v16;
  uint64_t v31 = v18;
  uint64_t v28 = v9;
  uint64_t v23 = *(void (**)(char *, double))(v9 + 16);
  v23(v13, v15);
  sub_1A8A76E68();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  v22[1] = WitnessTable;
  uint64_t v20 = v30;
  sub_1A8A76A58();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v20)
  {
    uint64_t v31 = v29;
    ((void (*)(char *, char *, uint64_t))v23)(v24, v17, a7);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A76A58();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v17, a7);
  }
  return result;
}

uint64_t KeyedSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t KeyedSequence.Iterator.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = result;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  return result;
}

uint64_t KeyedSequence.underestimatedCount.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = MEMORY[0x1AD0DFE60](a3, a6);
  uint64_t v9 = MEMORY[0x1AD0DFE60](a4, a6);
  BOOL v10 = __OFADD__(v8, v9);
  uint64_t result = v8 + v9;
  if (v10) {
    __break(1u);
  }
  return result;
}

uint64_t KeyedSequence.Iterator.sortedIndex.getter()
{
  return *(void *)v0;
}

uint64_t KeyedSequence.Iterator.sortedIndex.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*KeyedSequence.Iterator.sortedIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t KeyedSequence.Iterator.unsortedIndex.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t KeyedSequence.Iterator.unsortedIndex.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*KeyedSequence.Iterator.unsortedIndex.modify())(void)
{
  return nullsub_1;
}

uint64_t KeyedSequence.Iterator.array.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t KeyedSequence.Iterator.array.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return result;
}

double (*KeyedSequence.Iterator.array.modify())(void)
{
  return nullsub_1;
}

uint64_t KeyedSequence.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(a1 + 24);
  if (v4 < MEMORY[0x1AD0DFF00](v2[4], v5))
  {
    sub_1A8A76EB8();
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
    if (!__OFADD__(*v2, 1))
    {
      ++*v2;
      return result;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v7 = v2[1];
  if (v7 < MEMORY[0x1AD0DFF00](v2[5], v5))
  {
    sub_1A8A76EB8();
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
    uint64_t v8 = v2[1];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (!v9)
    {
      v2[1] = v10;
      return result;
    }
    goto LABEL_11;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v11(a2, 1, 1, v5);
}

uint64_t sub_1A8864AB4@<X0>(void *a1@<X8>)
{
  KeyedSequence.makeIterator()(*v1, v1[1], v1[2], v1[3], a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1A8864B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedSequence.underestimatedCount.getter(a1, a2, *(void *)(v5 + 16), *(void *)(v5 + 24), a5, *(void *)(a1 + 24));
}

uint64_t sub_1A8864B20()
{
  uint64_t v0 = sub_1A886534C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A8864B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a7 - 8);
  double v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v12, v9);
  char v14 = sub_1A8A76368();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v14 & 1;
}

uint64_t sub_1A8864C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a7 - 8);
  double v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v9);
  char v13 = sub_1A8A76368();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v13 & 1;
}

uint64_t sub_1A8864D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a7 - 8);
  double v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v9);
  char v13 = sub_1A8A76498();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v13 & 1;
}

uint64_t type metadata accessor for KeyedSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A8864E68(uint64_t a1, uint64_t a2)
{
  return sub_1A88642B8(a1, a2, *(void (***)(uint64_t))(v2 + 40), *(void *)(v2 + 16)) & 1;
}

uint64_t sub_1A8864E8C(uint64_t a1, uint64_t a2)
{
  return sub_1A8864EBC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_1A8864B6C);
}

uint64_t sub_1A8864EA4(uint64_t a1, uint64_t a2)
{
  return sub_1A8864EBC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_1A8864C60);
}

uint64_t sub_1A8864EBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[5], v3[6], v3[7], v3[8], v3[2], v3[3], v3[4]) & 1;
}

uint64_t sub_1A8864EFC(uint64_t a1)
{
  return sub_1A8864D50(a1, v1[5], v1[6], v1[7], v1[8], v1[9], v1[2]) & 1;
}

uint64_t sub_1A8864F34(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1A8864F88()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A8864FA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1A8864FE8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *sub_1A8865038(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1A88650B0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A8865100()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8865144(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *sub_1A886519C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *sub_1A8865238(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A8865288(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A88652D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for KeyedSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for KeyedSequence.Index()
{
  return __swift_instantiateGenericMetadata();
}

void *MonotonicTime.bootTime.unsafeMutableAddressor()
{
  return &static MonotonicTime.bootTime;
}

uint64_t static MonotonicTime.bootTime.getter()
{
  return 0;
}

__uint64_t static MonotonicTime.now()()
{
  __uint64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if ((result & 0x8000000000000000) != 0) {
    __break(1u);
  }
  return result;
}

double static MonotonicTime.nanoSecondsPerSecond.getter()
{
  return 1000000000.0;
}

uint64_t MonotonicTime.init(nanoSeconds:since:)(uint64_t result, uint64_t a2)
{
  if (result >= 1)
  {
    BOOL v2 = __OFADD__(a2, result);
    result += a2;
    if (!v2) {
      return result;
    }
    __break(1u);
  }
  uint64_t v3 = -result;
  if (__OFSUB__(0, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  result += a2;
  if (__OFSUB__(a2, v3)) {
LABEL_9:
  }
    __break(1u);
  return result;
}

__uint64_t MonotonicTime.init(secondsSinceNow:)(double a1)
{
  __uint64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    return _s12IMAP2Helpers13MonotonicTimeV7seconds5sinceACSd_ACtcfC_0(result, a1);
  }
  return result;
}

uint64_t MonotonicTime.hash(into:)()
{
  return sub_1A8A787A8();
}

BOOL static MonotonicTime.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t MonotonicTime.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A886548C()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88654D4()
{
  return sub_1A8A787A8();
}

int64_t DispatchTime.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1A8A75C68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1A8A75E58();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if (result < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v11 = a1 - result;
  if (a1 >= result)
  {
LABEL_5:
    sub_1A8A75E38();
    *uint64_t v5 = v11;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCAA8], v2);
    sub_1A8A75E48();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (__OFSUB__(result, a1)) {
    goto LABEL_7;
  }
  uint64_t v11 = a1 - result;
  if (!__OFSUB__(0, result - a1)) {
    goto LABEL_5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t MonotonicTime.nanoSeconds(since:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (result < 0 != v3)
  {
    BOOL v3 = __OFSUB__(a1, a2);
    uint64_t v5 = a1 - a2;
    if (v3)
    {
      __break(1u);
      goto LABEL_10;
    }
    BOOL v3 = __OFSUB__(0, v5);
    uint64_t result = -v5;
    if (!__OFSUB__(0, v5)) {
      return result;
    }
    __break(1u);
  }
  if (v3) {
LABEL_10:
  }
    __break(1u);
  return result;
}

uint64_t Date.init(_:now:now:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFSUB__(result, a2);
  if (result < a2)
  {
    uint64_t v5 = a2 - result;
    if (__OFSUB__(a2, result))
    {
      __break(1u);
      goto LABEL_11;
    }
    BOOL v4 = __OFSUB__(0, v5);
    if (!__OFSUB__(0, v5)) {
      goto LABEL_7;
    }
    __break(1u);
  }
  if (v4)
  {
LABEL_11:
    __break(1u);
    return result;
  }
LABEL_7:
  sub_1A8A74B88();
  uint64_t v6 = sub_1A8A74C38();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(a3, v6);
}

uint64_t MonotonicTime.seconds(since:)(uint64_t result, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a2, result);
  if (a2 < result)
  {
    if (__OFSUB__(result, a2))
    {
      __break(1u);
      goto LABEL_9;
    }
    BOOL v2 = __OFSUB__(0, result - a2);
    if (!v2) {
      return result;
    }
    __break(1u);
  }
  if (v2) {
LABEL_9:
  }
    __break(1u);
  return result;
}

int64_t static MonotonicTime.secondsSince(_:)(int64_t a1)
{
  int64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if (result < 0)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  if (a1 <= result && __OFSUB__(result, a1)) {
    goto LABEL_6;
  }
  return result;
}

BOOL static MonotonicTime.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL static MonotonicTime.<= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

BOOL static MonotonicTime.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a2 < a1;
}

BOOL static MonotonicTime.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1A8865880(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A8865894(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A88658A8(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A88658BC(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t _s12IMAP2Helpers13MonotonicTimeV7seconds5sinceACSd_ACtcfC_0(uint64_t result, double a2)
{
  double v2 = round(a2 * 1000000000.0);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v3 = (uint64_t)v2;
  if ((uint64_t)v2 >= 1)
  {
    BOOL v4 = __OFADD__(result, v3);
    result += v3;
    if (!v4) {
      return result;
    }
    __break(1u);
  }
  BOOL v4 = __OFSUB__(0, v3);
  uint64_t v5 = -v3;
  if (v4) {
    goto LABEL_14;
  }
  BOOL v4 = __OFSUB__(result, v5);
  result -= v5;
  if (v4) {
LABEL_15:
  }
    __break(1u);
  return result;
}

unint64_t sub_1A886595C()
{
  unint64_t result = qword_1E974DFD0;
  if (!qword_1E974DFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974DFD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MonotonicTime()
{
  return &type metadata for MonotonicTime;
}

uint64_t MutableCollection.modifyEach(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int v48 = a1;
  uint64_t v49 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v9;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v47 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v52 = (char *)v46 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v51 = (char *)v46 - v16;
  double v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v46 - v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  uint64_t v59 = v4;
  v21(v8, v4, a3, v18);
  int v61 = v20;
  uint64_t v55 = v10;
  sub_1A8A77198();
  uint64_t v22 = (void (*)(char *, uint64_t, uint64_t))v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v57 = v8;
  uint64_t v58 = v6 + 8;
  uint64_t v60 = a3;
  uint64_t v54 = v23;
  v23(v8, a3);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v56 = v11 + 16;
  uint64_t v25 = (void (**)(char *, uint64_t))(v11 + 8);
  v46[0] = v22;
  v46[1] = v6 + 16;
  while (1)
  {
    uint64_t v26 = v51;
    uint64_t v27 = AssociatedTypeWitness;
    v24(v51, v61, AssociatedTypeWitness);
    uint64_t v28 = v57;
    uint64_t v29 = v60;
    v22(v57, v59, v60);
    uint64_t v30 = v52;
    sub_1A8A771E8();
    v54(v28, v29);
    swift_getAssociatedConformanceWitness();
    LOBYTE(v28) = sub_1A8A76498();
    uint64_t v31 = *v25;
    (*v25)(v30, v27);
    v31(v26, v27);
    if (v28) {
      return ((uint64_t (*)(char *, uint64_t))v31)(v61, AssociatedTypeWitness);
    }
    uint64_t v32 = v25;
    uint64_t v33 = v57;
    unint64_t v34 = v47;
    uint64_t v35 = v24;
    v24(v47, v61, AssociatedTypeWitness);
    uint64_t v36 = v59;
    uint64_t v37 = (void (*)(unsigned char *, uint64_t))sub_1A8A76438();
    uint64_t v38 = v53;
    v48(v39);
    if (v38) {
      break;
    }
    uint64_t v53 = 0;
    v37(v62, 0);
    BOOL v40 = v34;
    uint64_t v25 = v32;
    v31(v40, AssociatedTypeWitness);
    uint64_t v41 = v33;
    uint64_t v42 = v33;
    uint64_t v43 = v60;
    uint64_t v22 = (void (*)(char *, uint64_t, uint64_t))v46[0];
    ((void (*)(char *, uint64_t, uint64_t))v46[0])(v42, v36, v60);
    sub_1A8A771F8();
    v54(v41, v43);
    uint64_t v24 = v35;
  }
  v37(v62, 1);
  uint64_t v45 = AssociatedTypeWitness;
  v31(v34, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v31)(v61, v45);
}

uint64_t RestartableTimer.__allocating_init(queue:repeating:leeway:closure:)(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  swift_allocObject();
  uint64_t v8 = sub_1A8866324(a1, a2, a3, a4);
  _Block_release(a4);
  return v8;
}

uint64_t RestartableTimer.init(queue:repeating:leeway:closure:)(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v5 = sub_1A8866324(a1, a2, a3, a4);
  _Block_release(a4);
  return v5;
}

uint64_t RestartableTimer.deinit()
{
  swift_getObjectType();
  sub_1A8A77598();
  if (*(unsigned char *)(v0 + 24) == 1) {
    sub_1A8A775A8();
  }
  swift_unknownObjectRelease();

  return v0;
}

uint64_t RestartableTimer.__deallocating_deinit()
{
  swift_getObjectType();
  sub_1A8A77598();
  if (*(unsigned char *)(v0 + 24) == 1) {
    sub_1A8A775A8();
  }
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall RestartableTimer.start()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A8A75EC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 32);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (*(unsigned char *)(v1 + 24) == 1)
    {
      swift_getObjectType();
      sub_1A8A775A8();
      *(unsigned char *)(v1 + 24) = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall RestartableTimer.stop()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A8A75EC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 32);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if ((*(unsigned char *)(v1 + 24) & 1) == 0)
    {
      swift_getObjectType();
      sub_1A8A775B8();
      *(unsigned char *)(v1 + 24) = 1;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t RestartableTimer.isRunning.getter()
{
  uint64_t v1 = sub_1A8A75EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v0 + 32);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x1E4FBCBF0], v1, v3);
  id v7 = v6;
  LOBYTE(v6) = sub_1A8A75EE8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v5, v1);
  if (v6) {
    return (*(unsigned char *)(v0 + 24) & 1) == 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8866324(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v34 = a3;
  uint64_t v33 = a2;
  id v29 = a1;
  uint64_t v5 = sub_1A8A75E58();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v30 = (char *)&v27 - v9;
  uint64_t v10 = sub_1A8A77538();
  uint64_t v28 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A8A75C98();
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = sub_1A8A75CE8();
  MEMORY[0x1F4188790](v14 - 8);
  _Block_copy(a4);
  sub_1A8A75CD8();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1A8866984(&qword_1E97486A8, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97486E0);
  sub_1A8561EB8(&qword_1E97487D8, &qword_1E97486E0);
  sub_1A8A77BF8();
  sub_1A8A75EB8();
  swift_allocObject();
  sub_1A8A75E88();
  sub_1A8866944();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1A8866984(&qword_1E9744C48, MEMORY[0x1E4FBCC70]);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740E90);
  sub_1A8561EB8(&qword_1E97446D8, &qword_1E9740E90);
  sub_1A8A77BF8();
  id v15 = v29;
  id v27 = v15;
  uint64_t v16 = sub_1A8A77548();

  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  uint64_t ObjectType = swift_getObjectType();
  sub_1A8A77568();
  sub_1A8A75E38();
  double v18 = v30;
  uint64_t v19 = v33;
  sub_1A8A75E48();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v21 = v8;
  uint64_t v22 = v32;
  v20(v21, v32);
  uint64_t v23 = v34;
  MEMORY[0x1AD0E0870](v18, v19, v34, ObjectType);
  swift_release();
  uint64_t v24 = sub_1A8A75C68();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
  v25(v23, v24);
  v25(v19, v24);
  v20(v18, v22);
  uint64_t result = v35;
  *(void *)(v35 + 32) = v27;
  *(void *)(result + 16) = v16;
  *(unsigned char *)(result + 24) = 1;
  return result;
}

uint64_t type metadata accessor for RestartableTimer()
{
  return self;
}

unsigned char *__swift_memcpy1_1_2(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for RestartableTimer.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88668B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RestartableTimer.State()
{
  return &type metadata for RestartableTimer.State;
}

unint64_t sub_1A88668F0()
{
  unint64_t result = qword_1E974E040;
  if (!qword_1E974E040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E040);
  }
  return result;
}

unint64_t sub_1A8866944()
{
  unint64_t result = qword_1E9748850;
  if (!qword_1E9748850)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9748850);
  }
  return result;
}

uint64_t sub_1A8866984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static PCG32Random.random.getter()
{
  uint64_t v2 = 0;
  MEMORY[0x1AD0E4D20](&v2, 8);
  uint64_t v0 = v2;
  uint64_t v2 = 0;
  MEMORY[0x1AD0E4D20](&v2, 8);
  return v0;
}

Swift::Void __swiftcall PCG32Random.seed(state:sequence:)(Swift::UInt64 state, Swift::UInt64 sequence)
{
  Swift::UInt64 v3 = (2 * sequence) | 1;
  *uint64_t v2 = v3 + 0x5851F42D4C957F2DLL * (v3 + state);
  v2[1] = v3;
}

uint64_t sub_1A8866A48()
{
  unint64_t v1 = *v0;
  unint64_t *v0 = v0[1] + 0x5851F42D4C957F2DLL * *v0;
  return __ROR4__((v1 >> 45) ^ (v1 >> 27), v1 >> 59);
}

Swift::UInt64 __swiftcall PCG32Random.next()()
{
  uint64_t v1 = v0[1];
  unint64_t v2 = v1 + 0x5851F42D4C957F2DLL * *v0;
  unsigned int v3 = __ROR4__((*v0 >> 45) ^ (*v0 >> 27), *v0 >> 59);
  void *v0 = v1 + 0x5851F42D4C957F2DLL * v2;
  return __ROR4__((v2 >> 45) ^ (v2 >> 27), v2 >> 59) | ((unint64_t)v3 << 32);
}

BOOL static PCG32Random.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

unint64_t sub_1A8866ADC()
{
  uint64_t v0 = sub_1A8866A48();
  return sub_1A8866A48() | (unint64_t)(v0 << 32);
}

BOOL sub_1A8866B0C(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::UInt32 __swiftcall PCG32Random.next()()
{
  unint64_t v1 = *v0;
  unint64_t *v0 = v0[1] + 0x5851F42D4C957F2DLL * *v0;
  return __ROR4__((v1 >> 45) ^ (v1 >> 27), v1 >> 59);
}

__n128 __swift_memcpy16_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for PCG32Random()
{
  return &type metadata for PCG32Random;
}

BOOL static MailboxName.stableOrder(_:_:)(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8 = MailboxName.inbox.unsafeMutableAddressor();
  uint64_t v9 = *v8;
  unint64_t v10 = *((unsigned int *)v8 + 2) | ((unint64_t)*((unsigned int *)v8 + 2) << 32);
  unint64_t v11 = a2 | ((unint64_t)a2 << 32);
  if (v10 == v11 && sub_1A8866D34(*v8, a1) && v10 == (a4 | ((unint64_t)a4 << 32)) && sub_1A8866D34(v9, a3)
    || v10 == (a4 | ((unint64_t)a4 << 32)) && sub_1A8866D34(v9, a3))
  {
    return 0;
  }
  if (v10 == v11 && sub_1A8866D34(v9, a1)) {
    return 1;
  }
  sub_1A8866C88((void *)(a3 + 32), (void *)(a1 + 32), a3 + 32 + *(void *)(a3 + 16), a1 + 32 + *(void *)(a1 + 16), &v13);
  return v13 == -1;
}

uint64_t static MailboxName.stableOrderCompare(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A8866DB8(a1, a3);
}

uint64_t sub_1A8866C88@<X0>(void *__s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  if (__s1) {
    uint64_t v8 = a4 - (void)__s1;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = a3 - (void)__s2;
  if (a3 - (uint64_t)__s2 >= v8) {
    size_t v10 = v8;
  }
  else {
    size_t v10 = a3 - (void)__s2;
  }
  if (__s2) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v8 & (v8 >> 63);
  }
  uint64_t result = memcmp(__s1, __s2, v11);
  if ((result & 0x80000000) != 0) {
    goto LABEL_11;
  }
  if (result)
  {
LABEL_13:
    uint64_t v13 = 1;
    goto LABEL_14;
  }
  if (__s2)
  {
    if (v8 >= v9)
    {
      if (v8 != v9) {
        goto LABEL_13;
      }
LABEL_21:
      uint64_t v13 = 0;
      goto LABEL_14;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_11:
  uint64_t v13 = -1;
LABEL_14:
  *a5 = v13;
  return result;
}

BOOL sub_1A8866D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33)) {
    return 0;
  }
  unsigned int v4 = (unsigned __int8 *)(a1 + 34);
  uint64_t v5 = (unsigned __int8 *)(a2 + 34);
  uint64_t v6 = v2 - 2;
  do
  {
    BOOL result = v6 == 0;
    if (!v6) {
      break;
    }
    int v8 = *v4++;
    int v7 = v8;
    int v9 = *v5++;
    --v6;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1A8866DB8(uint64_t a1, uint64_t a2)
{
  sub_1A8866C88((void *)(a2 + 32), (void *)(a1 + 32), a2 + 32 + *(void *)(a2 + 16), a1 + 32 + *(void *)(a1 + 16), &v3);
  return v3;
}

uint64_t sub_1A8866E04()
{
  uint64_t v0 = sub_1A8A754D8();
  __swift_allocate_value_buffer_0(v0, qword_1E9741610);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1E9741610);
  return sub_1A8A754C8();
}

uint64_t sub_1A8866E8C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t sub_1A8866F38(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v19 = sub_1A8A774C8();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  int v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A8A77488();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1A8A75CE8();
  MEMORY[0x1F4188790](v9 - 8);
  *(void *)(v3 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName_0(qword_1E97414B8);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 0;
  uint64_t v23 = v3;
  *(void *)(v3 + 32) = v10;
  unint64_t v18 = sub_1A8867C64();
  id v20 = a1;
  swift_retain();
  sub_1A8A75CB8();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1A8867CA4();
  __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748920);
  sub_1A8867CFC();
  sub_1A8A77BF8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v19);
  size_t v11 = (void *)sub_1A8A77508();
  if (qword_1E9741428 != -1) {
    swift_once();
  }
  uint64_t v12 = (uint64_t (*)(void *, void *))off_1E9740A98;
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v21;
  v13[2] = v10;
  v13[3] = v14;
  v13[4] = v22;
  aBlock[4] = sub_1A8867D98;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8867740;
  aBlock[3] = &block_descriptor_25;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v16 = v12(v11, v15);

  swift_release();
  _Block_release(v15);
  swift_release();
  uint64_t result = v23;
  *(void *)(v23 + 16) = v16;
  return result;
}

uint64_t sub_1A8867288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(unsigned char *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a3();
  if (!v4) {
    return 0;
  }
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  unint64_t v10 = v6;
  uint64_t v11 = sub_1A8867304(v3, v4, v5, v6);
  sub_1A8867DA4(v7, v8, v9, v10);
  return v11;
}

uint64_t sub_1A8867304(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = a4 >> 62;
  unint64_t v5 = a4;
  uint64_t v9 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_45;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      uint64_t v13 = v9 + 200;
      if (__OFADD__(v9, 200))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_46;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v9 = BYTE6(a4);
      goto LABEL_6;
  }
  uint64_t v14 = swift_slowAlloc();
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_OWORD *)(v14 + 48) = 0u;
  *(_OWORD *)(v14 + 64) = 0u;
  *(_OWORD *)(v14 + 80) = 0u;
  *(_OWORD *)(v14 + 96) = 0u;
  *(_OWORD *)(v14 + 112) = 0u;
  *(_OWORD *)(v14 + 128) = 0u;
  *(_OWORD *)(v14 + 144) = 0u;
  *(_OWORD *)(v14 + 160) = 0u;
  *(_OWORD *)(v14 + 176) = 0u;
  *(void *)(v14 + 192) = 0;
  uint64_t v15 = v14;
  switch((int)v4)
  {
    case 1:
      uint64_t v17 = (a3 >> 32) - (int)a3;
      if (a3 >> 32 < (int)a3) {
        goto LABEL_48;
      }
      sub_1A8512DFC(a3, v5);
      uint64_t v18 = sub_1A8A74588();
      if (!v18) {
        goto LABEL_32;
      }
      uint64_t v19 = v18;
      uint64_t v20 = sub_1A8A745B8();
      if (__OFSUB__((int)a3, v20)) {
        goto LABEL_54;
      }
      uint64_t v21 = (void *)(v19 + (int)a3 - v20);
      goto LABEL_33;
    case 2:
      uint64_t v36 = a1;
      a1 = a2;
      v5 &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v17 = *(void *)(a3 + 16);
      a2 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      uint64_t v22 = sub_1A8A74588();
      if (!v22)
      {
        uint64_t v25 = 0;
        uint64_t v26 = a2 - v17;
        if (!__OFSUB__(a2, v17)) {
          goto LABEL_17;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        uint64_t v21 = 0;
LABEL_33:
        uint64_t v32 = sub_1A8A745A8();
        if (v13 < 200) {
          goto LABEL_51;
        }
        uint64_t v36 = a1;
        a1 = a2;
        if (v32 >= v17) {
          uint64_t v33 = v17;
        }
        else {
          uint64_t v33 = v32;
        }
        uint64_t v34 = (char *)v21 + v33;
        if (!v21) {
          uint64_t v34 = 0;
        }
        uint64_t v38 = v21;
        uint64_t v39 = v34;
        sub_1A8867DF0();
        sub_1A8A744B8();
        sub_1A85135AC(a3, v5);
        *(_DWORD *)uint64_t v15 = 1;
        if (__OFSUB__(HIDWORD(a3), a3)) {
          goto LABEL_52;
        }
        unint64_t v16 = HIDWORD(a3) - (int)a3;
LABEL_41:
        a2 = a1;
        a1 = v36;
        if (!HIDWORD(v16)) {
          goto LABEL_42;
        }
        goto LABEL_44;
      }
      uint64_t v23 = v22;
      uint64_t v24 = sub_1A8A745B8();
      if (__OFSUB__(v17, v24))
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
      }
      uint64_t v25 = (void *)(v23 + v17 - v24);
      uint64_t v26 = a2 - v17;
      if (__OFSUB__(a2, v17)) {
        goto LABEL_31;
      }
LABEL_17:
      uint64_t v27 = sub_1A8A745A8();
      if (v13 < 200)
      {
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      if (v27 >= v26) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = v27;
      }
      id v29 = (char *)v25 + v28;
      if (!v25) {
        id v29 = 0;
      }
      v13 += v15;
      uint64_t v38 = v25;
      uint64_t v39 = v29;
      sub_1A8867DF0();
      sub_1A8A744B8();
      swift_release();
      swift_release();
      *(_DWORD *)uint64_t v15 = 1;
      uint64_t v31 = *(void *)(a3 + 16);
      uint64_t v30 = *(void *)(a3 + 24);
      unint64_t v16 = v30 - v31;
      if (!__OFSUB__(v30, v31)) {
        goto LABEL_41;
      }
      __break(1u);
LABEL_26:
      memset(v37, 0, 14);
      if (v13 < 200)
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      uint64_t v38 = v37;
      uint64_t v39 = (char *)v37;
      sub_1A8867DF0();
      sub_1A8A744B8();
      LODWORD(v16) = 0;
LABEL_28:
      *(_DWORD *)uint64_t v15 = 1;
LABEL_42:
      *(_DWORD *)(v15 + 4) = v16;
      sub_1A8867AE0(a1, a2, (char *)(v15 + 136), 0x40uLL);
      return v15;
    case 3:
      goto LABEL_26;
    default:
      v37[0] = a3;
      LOWORD(v37[1]) = v5;
      BYTE2(v37[1]) = BYTE2(v5);
      BYTE3(v37[1]) = BYTE3(v5);
      BYTE4(v37[1]) = BYTE4(v5);
      BYTE5(v37[1]) = BYTE5(v5);
      if (v13 < 200) {
        goto LABEL_47;
      }
      unint64_t v16 = BYTE6(v5);
      uint64_t v38 = v37;
      uint64_t v39 = (char *)v37 + v16;
      sub_1A8867DF0();
      sub_1A8A744B8();
      goto LABEL_28;
  }
}

uint64_t sub_1A8867740(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v4 = v3(a2);
  swift_release();
  return v4;
}

Swift::Void __swiftcall StateCapture.tearDown()()
{
  uint64_t v1 = sub_1A8A75EC8();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x1F4188790](v1);
  unint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (void *)v0[3];
  *unint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x1E4FBCBF0], v1, v3);
  id v7 = v6;
  LOBYTE(v6) = sub_1A8A75EE8();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v8 = v0[4];
  if (*(unsigned char *)(v8 + 16)) {
    return;
  }
  *(unsigned char *)(v8 + 16) = 1;
  if (qword_1E97415F0 != -1) {
    goto LABEL_7;
  }
LABEL_4:
  off_1E9740AA0(v0[2]);
}

uint64_t StateCapture.deinit()
{
  uint64_t result = *(void *)(v0 + 32);
  if (*(unsigned char *)(result + 16) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 24);
    swift_release();

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateCapture.__deallocating_deinit()
{
  if (*(unsigned char *)(*(void *)(v0 + 32) + 16) == 1)
  {

    swift_release();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateCapture.__allocating_init(title:queue:capture:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  v10[3] = a5;
  v10[4] = a1;
  v10[5] = a2;
  uint64_t v11 = swift_allocObject();
  sub_1A8866F38(a3, (uint64_t)sub_1A8867C1C, (uint64_t)v10);
  return v11;
}

uint64_t sub_1A8867A20(void (*a1)(long long *__return_ptr), uint64_t a2, uint64_t a3, unint64_t a4)
{
  a1(&v8);
  if (v9)
  {
    sub_1A852BD48(&v8, (uint64_t)v10);
    sub_1A852BDA0((uint64_t)v10, (uint64_t)&v8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v6 = sub_1A886851C(a3, a4, &v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_1A88684BC((uint64_t)&v8);
    return 0;
  }
  return v6;
}

char *sub_1A8867AE0(uint64_t a1, uint64_t a2, char *__dst, size_t __n)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000)) {
    return (char *)sub_1A8A77D98();
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(void *)__src = a1;
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v6 = __src;
  }
  else if ((a1 & 0x1000000000000000) != 0)
  {
    uint64_t v6 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v6 = (const char *)sub_1A8A77E88();
  }
  return strncpy(__dst, v6, __n);
}

void *sub_1A8867BB4(uint64_t a1)
{
  return sub_1A885F6F4(a1, "os_state_add_handler", &off_1E9740A98);
}

void *sub_1A8867BC8(uint64_t a1)
{
  return sub_1A885F6F4(a1, "os_state_remove_handler", &off_1E9740AA0);
}

uint64_t sub_1A8867BDC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A8867C1C()
{
  return sub_1A8867A20(*(void (**)(long long *__return_ptr))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t type metadata accessor for StateCapture()
{
  return self;
}

uint64_t type metadata accessor for StateCapture.Reference()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1A8867C64()
{
  unint64_t result = qword_1E97488D0;
  if (!qword_1E97488D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E97488D0);
  }
  return result;
}

unint64_t sub_1A8867CA4()
{
  unint64_t result = qword_1E9748998;
  if (!qword_1E9748998)
  {
    sub_1A8A77488();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9748998);
  }
  return result;
}

unint64_t sub_1A8867CFC()
{
  unint64_t result = qword_1E9748968;
  if (!qword_1E9748968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1E9748920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9748968);
  }
  return result;
}

uint64_t sub_1A8867D58()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A8867D98(uint64_t a1)
{
  return sub_1A8867288(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

void sub_1A8867DA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1A85135AC(a3, a4);
  }
}

unint64_t sub_1A8867DF0()
{
  unint64_t result = qword_1E9743C30;
  if (!qword_1E9743C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743C30);
  }
  return result;
}

char *sub_1A8867E44(char *__src)
{
  return strncpy(*(char **)(v1 + 16), __src, *(void *)(v1 + 24));
}

uint64_t sub_1A8867E64(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1A8867F38(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1A85E05A0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1A85E05A0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A8867F38(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A8A779C8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1A88680F4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1A8A77E88();
  if (!v8)
  {
    sub_1A8A780E8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1A8A781F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1A88680F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1A886818C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A886836C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1A886836C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A886818C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1A8868304(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1A8A77DD8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1A8A780E8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1A8A76848();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1A8A781F8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1A8A780E8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1A8868304(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EB0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A886836C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A88684BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743E68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A886851C(uint64_t a1, unint64_t a2, void *a3)
{
  sub_1A8A74768();
  swift_allocObject();
  sub_1A8A74758();
  sub_1A8A74728();
  __swift_project_boxed_opaque_existential_1_0(a3, a3[3]);
  uint64_t v6 = sub_1A8A74738();
  unint64_t v8 = v7;
  unint64_t v9 = v7 >> 62;
  uint64_t v10 = v6;
  switch(v7 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(v6) - v6;
      if (!__OFSUB__(HIDWORD(v6), v6))
      {
        uint64_t v11 = (int)v11;
        goto LABEL_5;
      }
      __break(1u);
      goto LABEL_29;
    case 2uLL:
      uint64_t v13 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v6 + 24);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v11 = v12 - v13;
      if (v14)
      {
LABEL_29:
        __break(1u);
LABEL_30:
        swift_once();
        goto LABEL_7;
      }
LABEL_5:
      if (v11 <= 0x8000)
      {
LABEL_12:
        if (qword_1E9741630 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_1A8A754D8();
        __swift_project_value_buffer_0(v19, (uint64_t)qword_1E9741610);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8512DFC(v10, v8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8512DFC(v10, v8);
        unint64_t v16 = sub_1A8A754B8();
        os_log_type_t v20 = sub_1A8A77438();
        if (os_log_type_enabled(v16, v20))
        {
          os_log_type_t v28 = v20;
          log = v16;
          uint64_t v21 = swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          v31[0] = v26;
          *(_DWORD *)uint64_t v21 = 136446466;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8867E64(a1, a2, v31);
          sub_1A8A77958();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v21 + 12) = 2048;
          switch((int)v9)
          {
            case 1:
              sub_1A85135AC(v10, v8);
              if (!__OFSUB__(HIDWORD(v10), v10)) {
                goto LABEL_23;
              }
              __break(1u);
              goto LABEL_32;
            case 2:
              uint64_t v23 = *(void *)(v10 + 16);
              uint64_t v22 = *(void *)(v10 + 24);
              sub_1A85135AC(v10, v8);
              if (!__OFSUB__(v22, v23)) {
                goto LABEL_23;
              }
              __break(1u);
LABEL_22:
              sub_1A85135AC(v10, v8);
LABEL_23:
              sub_1A8A77958();
              sub_1A85135AC(v10, v8);
              unint64_t v16 = log;
              _os_log_impl(&dword_1A7EFF000, log, v28, "Encoded plist state capture data '%{public}s' is %{iec-bytes}ld", (uint8_t *)v21, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1AD0E4D00](v26, -1, -1);
              uint64_t v24 = v21;
              goto LABEL_26;
            default:
              goto LABEL_22;
          }
        }
        goto LABEL_16;
      }
      if (qword_1E9741630 != -1) {
        goto LABEL_30;
      }
LABEL_7:
      uint64_t v15 = sub_1A8A754D8();
      __swift_project_value_buffer_0(v15, (uint64_t)qword_1E9741610);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8512DFC(v10, v8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8512DFC(v10, v8);
      unint64_t v16 = sub_1A8A754B8();
      os_log_type_t v17 = sub_1A8A77448();
      if (!os_log_type_enabled(v16, v17))
      {
LABEL_16:
        sub_1A85135AC(v10, v8);
        swift_bridgeObjectRelease_n();
        sub_1A85135AC(v10, v8);
        goto LABEL_27;
      }
      uint64_t v18 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v31[0] = v27;
      *(_DWORD *)uint64_t v18 = 136446466;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8867E64(a1, a2, v31);
      sub_1A8A77958();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2048;
      if (v9 != 2)
      {
        sub_1A85135AC(v10, v8);
        if (__OFSUB__(HIDWORD(v10), v10))
        {
LABEL_32:
          __break(1u);
          JUMPOUT(0x1A8868C08);
        }
        goto LABEL_25;
      }
      unint64_t v9 = *(void *)(v10 + 16);
      os_log_t loga = *(os_log_t *)(v10 + 24);
      sub_1A85135AC(v10, v8);
      if (__OFSUB__(loga, v9))
      {
        __break(1u);
        goto LABEL_12;
      }
LABEL_25:
      sub_1A8A77958();
      sub_1A85135AC(v10, v8);
      _os_log_impl(&dword_1A7EFF000, v16, v17, "Encoded plist state capture data '%{public}s' is %{iec-bytes}ld > 32KiB", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E4D00](v27, -1, -1);
      uint64_t v24 = v18;
LABEL_26:
      MEMORY[0x1AD0E4D00](v24, -1, -1);
LABEL_27:

      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
      return a1;
    default:
      goto LABEL_12;
  }
}

void *EngineTracingID.invalid.unsafeMutableAddressor()
{
  return &static EngineTracingID.invalid;
}

uint64_t static EngineTracingID.invalid.getter()
{
  return 31;
}

void *EngineTracingID.test.unsafeMutableAddressor()
{
  return &static EngineTracingID.test;
}

uint64_t static EngineTracingID.test.getter()
{
  return 31;
}

uint64_t EngineTracingID.hash(into:)()
{
  return sub_1A8A78778();
}

BOOL static EngineTracingID.__derived_struct_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t EngineTracingID.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8868CD4()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8868D1C()
{
  return sub_1A8A78778();
}

uint64_t EngineTracingIDOwner.tracingID.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t EngineTracingIDOwner.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  if (qword_1E9741648 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1E9741640 + 16;
  uint64_t v2 = (os_unfair_lock_s *)(qword_1E9741640 + 28);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1A88691A0(v1, &v4);
  os_unfair_lock_unlock(v2);
  LOBYTE(v1) = v4;
  swift_release();
  *(unsigned char *)(v0 + 16) = v1;
  return v0;
}

uint64_t EngineTracingIDOwner.init()()
{
  if (qword_1E9741648 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1E9741640 + 16;
  uint64_t v2 = (os_unfair_lock_s *)(qword_1E9741640 + 28);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1A88691A0(v1, &v4);
  os_unfair_lock_unlock(v2);
  LOBYTE(v1) = v4;
  swift_release();
  *(unsigned char *)(v0 + 16) = v1;
  return v0;
}

uint64_t EngineTracingIDOwner.deinit()
{
  if (qword_1E9741648 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1E9741640;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 16);
  swift_retain();
  sub_1A8868F34(v2, v1);
  swift_release();
  return v0;
}

void sub_1A8868F34(unsigned __int8 a1, uint64_t a2)
{
  size_t v5 = (os_unfair_lock_s *)(a2 + 28);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 28));
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v6 = (char **)(a2 + 16);
  unint64_t v7 = (char *)v8;
  int64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    unint64_t v11 = 0;
    goto LABEL_22;
  }
  int v10 = a1;
  if (v7[32] == a1)
  {
    unint64_t v11 = 0;
  }
  else
  {
    if (v9 == 1)
    {
      unint64_t v11 = 1;
      goto LABEL_22;
    }
    uint64_t v20 = 33;
    while (1)
    {
      unint64_t v11 = v20 - 32;
      if (v7[v20] == v10) {
        break;
      }
      uint64_t v21 = v20 - 31;
      if (__OFADD__(v11, 1))
      {
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      ++v20;
      if (v21 == v9)
      {
        unint64_t v11 = v9;
        goto LABEL_22;
      }
    }
  }
  unint64_t v2 = v11 + 1;
  if (__OFADD__(v11, 1)) {
    goto LABEL_36;
  }
  if (v2 == v9) {
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_37;
  }
  while (1)
  {
    uint64_t v13 = v7 + 32;
    unint64_t v14 = v11 + 33;
    do
    {
      if ((v2 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      unint64_t v16 = *((void *)v7 + 2);
      if (v14 - 32 >= v16) {
        goto LABEL_31;
      }
      int v17 = v7[v14];
      if (v17 != v10)
      {
        if (v14 - 32 != v11)
        {
          if (v11 >= v16) {
            goto LABEL_34;
          }
          char v18 = v13[v11];
          v13[v11] = v17;
          v7[v14] = v18;
        }
        if (__OFADD__(v11++, 1)) {
          goto LABEL_32;
        }
        unint64_t v16 = *((void *)v7 + 2);
      }
      unint64_t v15 = v14 - 31;
      ++v14;
    }
    while (v15 != v16);
    *uint64_t v6 = v7;
    int64_t v9 = *((void *)v7 + 2);
LABEL_21:
    if (v9 >= (uint64_t)v11) {
      break;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    unint64_t v7 = sub_1A886945C((uint64_t)v7);
  }
LABEL_22:
  sub_1A8869470(v11, v9);
  os_unfair_lock_unlock(v5);
}

uint64_t EngineTracingIDOwner.__deallocating_deinit()
{
  if (qword_1E9741648 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1E9741640;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 16);
  swift_retain();
  sub_1A8868F34(v2, v1);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A8869154()
{
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97471F0);
  uint64_t result = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(result + 28) = 0;
  *(void *)(result + 16) = v1;
  *(unsigned char *)(result + 24) = 1;
  qword_1E9741640 = result;
  return result;
}

uint64_t sub_1A88691A0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unsigned __int8 v2 = (void *)result;
  unsigned int v4 = *(unsigned __int8 *)(result + 8);
  uint64_t v5 = *(void *)result;
  uint64_t v6 = *(void *)(*(void *)result + 16);
  unsigned int v7 = v4;
  while (1)
  {
    unsigned int v8 = v7;
    if (v7 < 0x1E) {
      ++v7;
    }
    else {
      unsigned int v7 = 1;
    }
    if (!v6) {
      break;
    }
    if (*(unsigned __int8 *)(v5 + 32) != v8)
    {
      if (v6 == 1) {
        goto LABEL_15;
      }
      if (*(unsigned __int8 *)(v5 + 33) != v8)
      {
        if (v6 != 2)
        {
          uint64_t v9 = 34;
          while (1)
          {
            uint64_t v10 = v9 - 31;
            if (__OFADD__(v9 - 32, 1)) {
              break;
            }
            if (*(unsigned __int8 *)(v5 + v9) == v8) {
              goto LABEL_2;
            }
            ++v9;
            if (v10 == v6) {
              goto LABEL_15;
            }
          }
          __break(1u);
          goto LABEL_23;
        }
LABEL_15:
        LOBYTE(v4) = v8;
        break;
      }
    }
LABEL_2:
    if (v7 == v4)
    {
      LOBYTE(v4) = 31;
      goto LABEL_20;
    }
  }
  *(unsigned char *)(result + 8) = v7;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result) {
    goto LABEL_17;
  }
LABEL_23:
  uint64_t result = (uint64_t)sub_1A8869370(0, v6 + 1, 1, (char *)v5);
  uint64_t v5 = result;
LABEL_17:
  unint64_t v12 = *(void *)(v5 + 16);
  unint64_t v11 = *(void *)(v5 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_1A8869370((char *)(v11 > 1), v12 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v12 + 1;
  *(unsigned char *)(v5 + v12 + 32) = v4;
  *unsigned __int8 v2 = v5;
LABEL_20:
  *a2 = v4;
  return result;
}

unint64_t sub_1A88692E8()
{
  unint64_t result = qword_1E974E048;
  if (!qword_1E974E048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E048);
  }
  return result;
}

ValueMetadata *type metadata accessor for EngineTracingID()
{
  return &type metadata for EngineTracingID;
}

uint64_t type metadata accessor for EngineTracingIDOwner()
{
  return self;
}

char *sub_1A8869370(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745918);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A886945C(uint64_t a1)
{
  return sub_1A8869370(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1A8869470(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t result = (unint64_t)sub_1A8869370((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  size_t v12 = v11 - a2;
  if (__OFSUB__(v11, a2)) {
    goto LABEL_26;
  }
  unint64_t result = v4 + 32 + v6;
  uint64_t v13 = (const void *)(v4 + 32 + a2);
  if (v6 != a2 || result >= (unint64_t)v13 + v12) {
    unint64_t result = (unint64_t)memmove((void *)result, v13, v12);
  }
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 + v8;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *unsigned __int8 v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

void _s3__C16os_unfair_lock_sVMa_0()
{
  if (!qword_1E9740F78)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1E9740F78);
    }
  }
}

ValueMetadata *type metadata accessor for ActiveIdentifiers()
{
  return &type metadata for ActiveIdentifiers;
}

uint64_t initializeBufferWithCopyOfBuffer for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActiveIdentifiers.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActiveIdentifiers.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActiveIdentifiers.State()
{
  return &type metadata for ActiveIdentifiers.State;
}

uint64_t sub_1A8869960()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A8869998()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A8869B24()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A8869F20()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 16))();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A8869F58()
{
  (*(void (**)(void))(v0 + 16))();
  return v1;
}

uint64_t sub_1A886A73C()
{
  (*(void (**)(void *__return_ptr))(v0 + 16))(v3);
  uint64_t v1 = v3[1];
  uint64_t v5 = v3[4];
  int v6 = v4;
  sub_1A85276F0((uint64_t)&v5);
  return v1;
}

uint64_t DefaultStringInterpolation.appendInterpolation(_:)()
{
  if (sub_1A8A76778() <= 1) {
    sub_1A8A767E8();
  }
  sub_1A8A767E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A886AAE0()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  uint64_t v1 = v5;
  long long v6 = v4;
  sub_1A853489C((uint64_t)&v6);
  return v1;
}

uint64_t sub_1A886AB34()
{
  (*(void (**)(void))(v0 + 16))();
  return sub_1A8A76628();
}

uint64_t sub_1A886AB7C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1A886ABA4()
{
  unint64_t result = qword_1E9745FB0;
  if (!qword_1E9745FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9745FB0);
  }
  return result;
}

uint64_t TaskName.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t TaskName.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*TaskName.rawValue.modify())(void)
{
  return nullsub_1;
}

void *sub_1A886ACCC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t TaskLoggerID.name.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MailboxTaskLoggerID.id.getter()
{
  return *v0;
}

uint64_t MailboxTaskLoggerID.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t MailboxTaskLoggerID.counter.getter()
{
  return *(unsigned __int16 *)(v0 + 24);
}

uint64_t MailboxTaskLoggerID.mailbox.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MailboxTaskLoggerID.init(id:name:counter:mailbox:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(_WORD *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(_DWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t EngineLoggerID.id.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*EngineLoggerID.id.modify())(void)
{
  return nullsub_1;
}

__n128 __swift_memcpy16_8_3(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TaskName(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for TaskName()
{
  return &type metadata for TaskName;
}

uint64_t sub_1A886AE30(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for TaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TaskLoggerID()
{
  return &type metadata for TaskLoggerID;
}

uint64_t destroy for MailboxTaskLoggerID()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy44_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxTaskLoggerID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 44)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxTaskLoggerID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 44) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxTaskLoggerID()
{
  return &type metadata for MailboxTaskLoggerID;
}

ValueMetadata *type metadata accessor for EngineLoggerID()
{
  return &type metadata for EngineLoggerID;
}

uint64_t sub_1A886B150()
{
  sub_1A886B5C8();
  uint64_t result = sub_1A8A77858();
  tracingLog = result;
  return result;
}

uint64_t *tracingLog.unsafeMutableAddressor()
{
  if (qword_1E9741638 != -1) {
    swift_once();
  }
  return &tracingLog;
}

uint64_t sub_1A886B1FC()
{
  uint64_t v0 = sub_1A8A75378();
  __swift_allocate_value_buffer_0(v0, tracingSignposter);
  __swift_project_value_buffer_0(v0, (uint64_t)tracingSignposter);
  if (qword_1E9741638 != -1) {
    swift_once();
  }
  id v1 = (id)tracingLog;
  return sub_1A8A75358();
}

uint64_t tracingSignposter.unsafeMutableAddressor()
{
  if (qword_1E9741650 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A8A75378();
  return __swift_project_value_buffer_0(v0, (uint64_t)tracingSignposter);
}

uint64_t OSSignpostID.init(engine:kind:idA:idB:)(uint64_t a1, char a2, int a3, int a4)
{
  return MEMORY[0x1F4188588]((a1 << 59) | ((unint64_t)(a3 & 0xFFFFFF) << 35) | ((unint64_t)(a4 & 0xFFFFFF) << 11) | ((unint64_t)((a2 + 1) & 0x1F) << 6));
}

uint64_t OSSignpostID.TraceKind.rawValue.getter(int a1)
{
  return (a1 + 1);
}

uint64_t OSSignpostID.init(engine:kind:connectionID:)(uint64_t a1, char a2, unsigned int a3)
{
  return MEMORY[0x1F4188588]((a1 << 59) | ((unint64_t)a3 << 27) | ((unint64_t)((a2 + 1) & 0x1F) << 22));
}

uint64_t sub_1A886B338()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A886B380()
{
  return sub_1A8A78778();
}

uint64_t sub_1A886B3B0()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A886B3F4@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s2os12OSSignpostIDV12IMAP2TracingE9TraceKindO8rawValueAFSgs5UInt8V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1A886B420(unsigned char *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t _s2os12OSSignpostIDV12IMAP2TracingE9TraceKindO8rawValueAFSgs5UInt8V_tcfC_0(unsigned __int8 a1)
{
  if (a1 <= 6u) {
    return (0x5040302010006uLL >> (8 * a1));
  }
  else {
    return 6;
  }
}

unint64_t sub_1A886B464()
{
  unint64_t result = qword_1E974E050;
  if (!qword_1E974E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E050);
  }
  return result;
}

unsigned char *__swift_memcpy1_1_3(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

unsigned char *_s9TraceKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A886B590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OSSignpostID.TraceKind()
{
  return &type metadata for OSSignpostID.TraceKind;
}

unint64_t sub_1A886B5C8()
{
  unint64_t result = qword_1E9745190;
  if (!qword_1E9745190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9745190);
  }
  return result;
}

unint64_t ClientCommand.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v81 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C28);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v80 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v78 - v6;
  uint64_t v8 = type metadata accessor for SearchReturnOption();
  unint64_t v79 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v78 - v12;
  uint64_t v14 = sub_1A8A74C38();
  uint64_t v78 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v78 - v21;
  uint64_t v23 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88701E4(v2, (uint64_t)v25, type metadata accessor for ClientCommand);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A8A78768();
      sub_1A8A762A8();
      swift_bridgeObjectRelease();
      sub_1A8A762A8();
      return swift_bridgeObjectRelease();
    case 2u:
      uint64_t v27 = *((void *)v25 + 2);
      uint64_t v28 = v81;
      sub_1A8A78768();
      sub_1A8A78768();
      swift_bridgeObjectRelease();
      sub_1A88703A4(v28, v27);
      return swift_bridgeObjectRelease();
    case 3u:
    case 4u:
    case 5u:
      sub_1A8A78768();
      sub_1A8A78768();
      return swift_bridgeObjectRelease();
    case 6u:
      sub_1A8A78768();
      sub_1A8A78768();
      swift_bridgeObjectRelease();
      sub_1A8A78768();
      return swift_bridgeObjectRelease();
    case 7u:
      uint64_t v29 = *(void *)v25;
      uint64_t v30 = *((void *)v25 + 2);
      uint64_t v31 = *((void *)v25 + 4);
      sub_1A8A78768();
      sub_1A8A78778();
      if (v29)
      {
        sub_1A8A78768();
        swift_bridgeObjectRelease();
      }
      sub_1A8A78778();
      if (v30)
      {
        sub_1A8A78768();
        swift_bridgeObjectRelease();
      }
      sub_1A8A78768();
      uint64_t v76 = *(void *)(v31 + 16);
      if (v76)
      {
        uint64_t v77 = v31 + 32;
        do
        {
          sub_1A8870304(v77, (uint64_t)v82);
          sub_1A8870360(v82, (void (*)(void, void, void, void, void, void, void, void))sub_1A86FD5FC);
          ReturnOption.hash(into:)();
          sub_1A8870360(v82, (void (*)(void, void, void, void, void, void, void, void))sub_1A86FD584);
          v77 += 64;
          --v76;
        }
        while (v76);
      }
      return swift_bridgeObjectRelease();
    case 8u:
      uint64_t v32 = *((void *)v25 + 2);
      uint64_t v33 = v81;
      sub_1A8A78768();
      sub_1A8A78768();
      swift_bridgeObjectRelease();
      sub_1A886FE50(v33, v32);
      return swift_bridgeObjectRelease();
    case 9u:
      uint64_t v34 = *((void *)v25 + 2);
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v36 = (uint64_t)&v25[*(int *)(v35 + 64)];
      uint64_t v37 = (uint64_t *)&v25[*(int *)(v35 + 80)];
      uint64_t v38 = *v37;
      unint64_t v79 = v37[1];
      uint64_t v80 = v38;
      sub_1A8529F8C(v36, (uint64_t)v22, &qword_1E9741350);
      uint64_t v39 = v81;
      sub_1A8A78768();
      sub_1A8A78768();
      swift_bridgeObjectRelease();
      sub_1A8525350(v39, v34);
      swift_bridgeObjectRelease();
      sub_1A8511A9C((uint64_t)v22, (uint64_t)v19, &qword_1E9741350);
      uint64_t v40 = v78;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v19, 1, v14) == 1)
      {
        sub_1A8A78778();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v16, v19, v14);
        sub_1A8A78778();
        sub_1A8872B74(&qword_1E974E068, MEMORY[0x1E4F27928]);
        sub_1A8A76228();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v14);
      }
      unint64_t v75 = v79;
      uint64_t v74 = v80;
      sub_1A8A74A78();
      sub_1A8511B00((uint64_t)v22, &qword_1E9741350);
      return sub_1A85135AC(v74, v75);
    case 0xAu:
      unint64_t v41 = *(void *)v25;
      goto LABEL_19;
    case 0xBu:
      unint64_t v43 = *(void *)v25;
      uint64_t v42 = *((void *)v25 + 1);
      uint64_t v44 = v81;
      sub_1A8A78768();
      SearchKey.hash(into:)(v44, v43);
      sub_1A8A78768();
      uint64_t v45 = *(void *)(v42 + 16);
      if (v45)
      {
        uint64_t v46 = v42 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
        uint64_t v47 = *(void *)(v79 + 72);
        do
        {
          sub_1A88701E4(v46, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          SearchReturnOption.hash(into:)();
          sub_1A887255C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          v46 += v47;
          --v45;
        }
        while (v45);
      }
      goto LABEL_23;
    case 0xCu:
      unint64_t v41 = *(void *)v25;
LABEL_19:
      uint64_t v48 = v81;
      sub_1A8A78768();
      SearchKey.hash(into:)(v48, v41);
      return sub_1A887024C(v41);
    case 0xDu:
      unint64_t v43 = *(void *)v25;
      uint64_t v50 = *((void *)v25 + 1);
      uint64_t v51 = v81;
      sub_1A8A78768();
      SearchKey.hash(into:)(v51, v43);
      sub_1A8A78768();
      uint64_t v52 = *(void *)(v50 + 16);
      if (v52)
      {
        uint64_t v53 = v50 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
        uint64_t v54 = *(void *)(v79 + 72);
        do
        {
          sub_1A88701E4(v53, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          SearchReturnOption.hash(into:)();
          sub_1A887255C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          v53 += v54;
          --v52;
        }
        while (v52);
      }
LABEL_23:
      sub_1A887024C(v43);
      return swift_bridgeObjectRelease();
    case 0xEu:
      uint64_t v55 = &v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48)];
      uint64_t v56 = *(void *)v55;
      int v57 = v55[16];
      sub_1A8529F8C((uint64_t)v25, (uint64_t)v7, &qword_1E9741C28);
      uint64_t v58 = v81;
      sub_1A8A78768();
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      sub_1A887011C();
      sub_1A8A76228();
      uint64_t v59 = *(void *)(v56 + 16);
      sub_1A8A78768();
      if (v59)
      {
        uint64_t v60 = v56 + 32;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        do
        {
          sub_1A86FD7DC(v60, (uint64_t)v82);
          sub_1A86FD8B0((uint64_t)v82, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
          FetchAttribute.hash(into:)(v58);
          sub_1A86FD8B0((uint64_t)v82, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
          v60 += 40;
          --v59;
        }
        while (v59);
        swift_bridgeObjectRelease();
      }
      sub_1A8A78778();
      if (!v57) {
        sub_1A8A787A8();
      }
      sub_1A8511B00((uint64_t)v7, &qword_1E9741C28);
      return swift_bridgeObjectRelease();
    case 0xFu:
      int v61 = &v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48)];
      char v62 = *v61;
      uint64_t v63 = *((void *)v61 + 1);
      uint64_t v64 = v80;
      sub_1A8529F8C((uint64_t)v25, v80, &qword_1E9741C28);
      uint64_t v65 = v81;
      sub_1A8A78768();
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      sub_1A887011C();
      sub_1A8A76228();
      StoreFlags.hash(into:)(v65, v62, v63);
      uint64_t v66 = v64;
      goto LABEL_32;
    case 0x10u:
    case 0x11u:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950);
      uint64_t v67 = v80;
      sub_1A8529F8C((uint64_t)v25, v80, &qword_1E9741C28);
      sub_1A8A78768();
      __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      sub_1A887011C();
      sub_1A8A76228();
      sub_1A8A78768();
      uint64_t v66 = v67;
LABEL_32:
      sub_1A8511B00(v66, &qword_1E9741C28);
      return swift_bridgeObjectRelease();
    case 0x12u:
      uint64_t v68 = *(void *)v25;
      uint64_t v69 = *((void *)v25 + 1);
      uint64_t v70 = *((void *)v25 + 2);
      uint64_t v71 = v81;
      sub_1A8A78768();
      sub_1A886FFB8(v71, v68, v69, v70);
      swift_release();
      swift_release();
      return swift_release();
    case 0x13u:
      long long v72 = *((_OWORD *)v25 + 1);
      v82[0] = *(_OWORD *)v25;
      v82[1] = v72;
      long long v73 = *((_OWORD *)v25 + 3);
      v82[2] = *((_OWORD *)v25 + 2);
      v82[3] = v73;
      sub_1A8A78768();
      PushRegistrationInfo.hash(into:)();
      return sub_1A886E9E4((uint64_t)v82);
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
      return sub_1A8A78768();
    default:
      uint64_t v26 = *((void *)v25 + 2);
      sub_1A8A78768();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A762A8();
      swift_bridgeObjectRelease_n();
      if (!v26) {
        return sub_1A8A78778();
      }
      sub_1A8A78778();
      InitialResponse.hash(into:)();
      return swift_release();
  }
}

uint64_t sub_1A886C240(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = a1 + 32 + 16 * v3;
      uint64_t v5 = a2 + 32 + 16 * v3;
      if ((*(unsigned int *)(v4 + 8) | ((unint64_t)*(unsigned int *)(v4 + 8) << 32)) != (*(unsigned int *)(v5 + 8) | ((unint64_t)*(unsigned int *)(v5 + 8) << 32))) {
        break;
      }
      uint64_t v6 = *(void *)v4;
      uint64_t v7 = *(void *)v5;
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8 != *(void *)(v7 + 16)) {
        break;
      }
      if (v8) {
        BOOL v9 = v6 == v7;
      }
      else {
        BOOL v9 = 1;
      }
      if (!v9)
      {
        if (*(unsigned __int8 *)(v6 + 32) != *(unsigned __int8 *)(v7 + 32)) {
          return 0;
        }
        if (v8 != 1)
        {
          if (*(unsigned __int8 *)(v6 + 33) != *(unsigned __int8 *)(v7 + 33)) {
            return 0;
          }
          if (v8 != 2)
          {
            if (*(unsigned __int8 *)(v6 + 34) != *(unsigned __int8 *)(v7 + 34)) {
              return 0;
            }
            int64_t v10 = (unsigned __int8 *)(v6 + 35);
            uint64_t v11 = (unsigned __int8 *)(v7 + 35);
            for (uint64_t i = v8 - 3; i; --i)
            {
              int v14 = *v10++;
              int v13 = v14;
              int v15 = *v11++;
              if (v13 != v15) {
                return 0;
              }
            }
          }
        }
      }
      if (++v3 == v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A886C334(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  BOOL v9 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (v9 || (char v10 = sub_1A8A78588(), result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = (unsigned char *)(a1 + 88);
    uint64_t v13 = v2 - 1;
    for (uint64_t i = (unsigned char *)(a2 + 88); ; i += 32)
    {
      if (v6)
      {
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      else if (v8 & 1 | (((v7 ^ v5) & 0xFFFFFFFFFFFFC000) != 0))
      {
        return 0;
      }
      if (!v13) {
        break;
      }
      uint64_t v5 = *((void *)v12 - 1);
      char v6 = *v12;
      uint64_t v7 = *((void *)i - 1);
      char v8 = *i;
      BOOL v15 = *((void *)v12 - 3) == *((void *)i - 3) && *((void *)v12 - 2) == *((void *)i - 2);
      if (!v15 && (sub_1A8A78588() & 1) == 0) {
        return 0;
      }
      v12 += 32;
      --v13;
    }
    return 1;
  }
  return result;
}

uint64_t sub_1A886C440(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  sub_1A86FD7DC(a1 + 32, (uint64_t)v14);
  sub_1A86FD7DC(a2 + 32, (uint64_t)v15);
  sub_1A86FD8B0((uint64_t)v14, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
  sub_1A86FD8B0((uint64_t)v15, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
  char v5 = static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v14, (uint64_t)v15);
  sub_1A86FD8B0((uint64_t)v15, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
  sub_1A86FD8B0((uint64_t)v14, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a2 + 72;
  uint64_t v7 = a1 + 72;
  do
  {
    BOOL v8 = --v2 == 0;
    if (!v2) {
      break;
    }
    uint64_t v9 = v7 + 40;
    sub_1A86FD7DC(v7, (uint64_t)v12);
    sub_1A86FD7DC(v6, (uint64_t)v13);
    sub_1A86FD8B0((uint64_t)v12, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
    sub_1A86FD8B0((uint64_t)v13, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
    char v10 = static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v12, (uint64_t)v13);
    sub_1A86FD8B0((uint64_t)v13, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
    sub_1A86FD8B0((uint64_t)v12, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
    uint64_t v7 = v9;
    v6 += 40;
  }
  while ((v10 & 1) != 0);
  return v8;
}

uint64_t sub_1A886C5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v42 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E098);
  MEMORY[0x1F4188790](v44);
  uint64_t v41 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for MessageData.BodySection();
  MEMORY[0x1F4188790](v43);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v17 && v45 != v46)
  {
    uint64_t v40 = v4;
    uint64_t v36 = 0;
    uint64_t v37 = v9;
    unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v38 = *(void *)(v14 + 72);
    uint64_t v39 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v19 = v41;
    while (1)
    {
      sub_1A88701E4(v45 + v18, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_1A88701E4(v46 + v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      if (!static SectionSpecifier.__derived_struct_equals(_:_:)(*(void **)v16, *((void *)v16 + 1), v16[16], *(void **)v12, *((void *)v12 + 1), v12[16]))
      {
LABEL_28:
        sub_1A887255C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        sub_1A887255C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        return 0;
      }
      char v20 = v12[24];
      if (v16[24])
      {
        if (!v12[24]) {
          goto LABEL_28;
        }
      }
      else
      {
        if (*((_DWORD *)v16 + 5) != *((_DWORD *)v12 + 5)) {
          char v20 = 1;
        }
        if (v20) {
          goto LABEL_28;
        }
      }
      uint64_t v21 = *(int *)(v43 + 24);
      uint64_t v22 = (uint64_t)&v12[v21];
      uint64_t v23 = v19 + *(int *)(v44 + 48);
      sub_1A8511A9C((uint64_t)&v16[v21], v19, &qword_1E9742930);
      sub_1A8511A9C(v22, v23, &qword_1E9742930);
      uint64_t v24 = v40;
      uint64_t v25 = *v39;
      if ((*v39)(v19, 1, v40) == 1) {
        break;
      }
      uint64_t v26 = v19;
      uint64_t v27 = (uint64_t)v37;
      sub_1A8511A9C(v26, (uint64_t)v37, &qword_1E9742930);
      if (v25(v23, 1, v24) == 1)
      {
        uint64_t v35 = &qword_1E974E098;
        goto LABEL_26;
      }
      sub_1A8877888(v23, v42, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      uint64_t v28 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      if (v28 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
      {
        sub_1A887255C(v42, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v35 = &qword_1E9742930;
LABEL_26:
        sub_1A887255C((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v19 = v41;
LABEL_27:
        sub_1A8511B00(v19, v35);
        goto LABEL_28;
      }
      sub_1A8A75E28();
      sub_1A8872B74((unint64_t *)&qword_1E9743A98, MEMORY[0x1E4FBCBA0]);
      sub_1A8A77198();
      uint64_t v29 = sub_1A8A771E8();
      uint64_t v30 = v27;
      if (v48 == v47)
      {
        sub_1A887255C(v42, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        sub_1A887255C(v27, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v19 = v41;
LABEL_6:
        sub_1A8511B00(v19, &qword_1E9742930);
        goto LABEL_7;
      }
      MEMORY[0x1F4188790](v29);
      uint64_t v31 = v42;
      *(&v36 - 2) = v42;
      *(&v36 - 1) = v30;
      uint64_t v32 = v36;
      sub_1A8A75D88();
      uint64_t v36 = v32;
      char v33 = v48;
      sub_1A887255C(v31, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      sub_1A887255C(v30, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      uint64_t v19 = v41;
      sub_1A8511B00(v41, &qword_1E9742930);
      if ((v33 & 1) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      sub_1A887255C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_1A887255C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      v18 += v38;
      if (!--v17) {
        return 1;
      }
    }
    if (v25(v23, 1, v24) != 1)
    {
      uint64_t v35 = &qword_1E974E098;
      goto LABEL_27;
    }
    goto LABEL_6;
  }
  return 1;
}

uint64_t sub_1A886CBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_1A8870304(v3, (uint64_t)v10);
        sub_1A8870304(v4, (uint64_t)v11);
        sub_1A8870360(v10, (void (*)(void, void, void, void, void, void, void, void))sub_1A86FD5FC);
        sub_1A8870360(v11, (void (*)(void, void, void, void, void, void, void, void))sub_1A86FD5FC);
        char v6 = static ReturnOption.__derived_enum_equals(_:_:)(v10, v11);
        sub_1A8870360(v11, (void (*)(void, void, void, void, void, void, void, void))sub_1A86FD584);
        sub_1A8870360(v10, (void (*)(void, void, void, void, void, void, void, void))sub_1A86FD584);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 64;
        v4 += 64;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1A886CCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xE800000000000000;
      uint64_t v11 = 0x534547415353454DLL;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x544E45434552;
          break;
        case 2:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x5458454E444955;
          break;
        case 3:
          uint64_t v11 = 0x44494C4156444955;
          uint64_t v12 = 5854281;
          goto LABEL_15;
        case 4:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x4E4545534E55;
          break;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1163544915;
          break;
        case 6:
          uint64_t v11 = 0x4D54534548474948;
          unint64_t v10 = 0xED0000514553444FLL;
          break;
        case 7:
          uint64_t v11 = 0x494C444E45505041;
          uint64_t v12 = 5523789;
LABEL_15:
          unint64_t v10 = v12 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        default:
          break;
      }
      unint64_t v13 = 0xE800000000000000;
      uint64_t v14 = 0x534547415353454DLL;
      switch(v8)
      {
        case 1:
          unint64_t v13 = 0xE600000000000000;
          if (v11 == 0x544E45434552) {
            goto LABEL_28;
          }
          goto LABEL_5;
        case 2:
          unint64_t v13 = 0xE700000000000000;
          if (v11 != 0x5458454E444955) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 3:
          uint64_t v15 = 0x44494C4156444955;
          uint64_t v16 = 5854281;
          goto LABEL_32;
        case 4:
          unint64_t v13 = 0xE600000000000000;
          if (v11 != 0x4E4545534E55) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 5:
          unint64_t v13 = 0xE400000000000000;
          if (v11 != 1163544915) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 6:
          uint64_t v14 = 0x4D54534548474948;
          unint64_t v13 = 0xED0000514553444FLL;
          goto LABEL_27;
        case 7:
          uint64_t v15 = 0x494C444E45505041;
          uint64_t v16 = 5523789;
LABEL_32:
          unint64_t v13 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          if (v11 != v15) {
            goto LABEL_5;
          }
          goto LABEL_28;
        default:
LABEL_27:
          if (v11 != v14) {
            goto LABEL_5;
          }
LABEL_28:
          if (v10 == v13)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_1A8A78588();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

BOOL sub_1A886CFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchReturnOption() - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      return 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1A88701E4(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        sub_1A88701E4(a2 + v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        BOOL v15 = static SearchReturnOption.__derived_enum_equals(_:_:)((uint64_t)v10, (uint64_t)v6);
        sub_1A887255C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        sub_1A887255C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        BOOL v17 = v14-- != 0;
        if (!v15) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    return 0;
  }
  return v15;
}

uint64_t static ClientCommand.FetchData.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = sub_1A886C440(a1, a4);
  if ((result & 1) == 0) {
    return 0;
  }
  if (a3) {
    return (a6 & 1) != 0;
  }
  if (a6) {
    return 0;
  }
  if (((a5 | a2) & 0x8000000000000000) == 0) {
    return a5 == a2;
  }
  __break(1u);
  return result;
}

uint64_t ClientCommand.hashValue.getter()
{
  sub_1A8A78738();
  ClientCommand.hash(into:)((uint64_t)v1);
  return sub_1A8A787C8();
}

uint64_t sub_1A886D22C()
{
  sub_1A8A78738();
  ClientCommand.hash(into:)((uint64_t)v1);
  return sub_1A8A787C8();
}

uint64_t sub_1A886D270()
{
  sub_1A8A78738();
  ClientCommand.hash(into:)((uint64_t)v1);
  return sub_1A8A787C8();
}

uint64_t ClientCommand.FetchData.items.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

double (*ClientCommand.FetchData.items.modify())(void)
{
  return nullsub_1;
}

uint64_t variable initialization expression of ClientCommand.FetchData.changedSince()
{
  return 0;
}

uint64_t ClientCommand.FetchData.changedSince.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ClientCommand.FetchData.changedSince.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

double (*ClientCommand.FetchData.changedSince.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientCommand.FetchData.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = *(void *)(a2 + 16);
  sub_1A8A78768();
  if (v7)
  {
    uint64_t v8 = a2 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      sub_1A86FD7DC(v8, (uint64_t)v10);
      sub_1A86FD8B0((uint64_t)v10, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
      FetchAttribute.hash(into:)(a1);
      sub_1A86FD8B0((uint64_t)v10, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
      v8 += 40;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  if (a4) {
    return sub_1A8A78778();
  }
  sub_1A8A78778();
  return sub_1A8A787A8();
}

uint64_t ClientCommand.FetchData.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1A8A78738();
  uint64_t v5 = *(void *)(a1 + 16);
  sub_1A8A78768();
  if (v5)
  {
    uint64_t v6 = a1 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      sub_1A86FD7DC(v6, (uint64_t)v9);
      sub_1A86FD8B0((uint64_t)v9, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
      FetchAttribute.hash(into:)((uint64_t)&v8);
      sub_1A86FD8B0((uint64_t)v9, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_1A8A78778();
  if ((a3 & 1) == 0) {
    sub_1A8A787A8();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A886D548()
{
  return ClientCommand.FetchData.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1A886D554(uint64_t a1)
{
  return ClientCommand.FetchData.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t type metadata accessor for ClientCommand(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9742998);
}

uint64_t sub_1A886D580()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 16);
  sub_1A8A78738();
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1A8A78768();
  if (v3)
  {
    uint64_t v4 = v1 + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    do
    {
      sub_1A86FD7DC(v4, (uint64_t)v7);
      sub_1A86FD8B0((uint64_t)v7, (void (*)(void, void, void, void, unint64_t))sub_1A86FD838);
      FetchAttribute.hash(into:)((uint64_t)&v6);
      sub_1A86FD8B0((uint64_t)v7, (void (*)(void, void, void, void, unint64_t))sub_1A86FD8F8);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1A8A78778();
  if (!v2) {
    sub_1A8A787A8();
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A886D678(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t result = sub_1A886C440(*(void *)a1, *(void *)a2);
  if ((result & 1) == 0) {
    return 0;
  }
  if (v3) {
    return (v5 & 1) != 0;
  }
  if (v5) {
    return 0;
  }
  if (((v4 | v2) & 0x8000000000000000) == 0) {
    return v4 == v2;
  }
  __break(1u);
  return result;
}

uint64_t static ClientCommand.uidFetch(messages:items:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
  sub_1A8511A9C(a1, a3, &qword_1E9741C28);
  *(void *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = 0;
  *(unsigned char *)(v6 + 16) = 1;
  type metadata accessor for ClientCommand(0);
  swift_storeEnumTagMultiPayload();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ClientCommand.SelectOption.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t static ClientCommand.SelectOption.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t ClientCommand.SelectOption.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t ClientCommand.kind.getter()
{
  uint64_t v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1F4188790](v1);
  char v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88701E4(v0, (uint64_t)v3, type metadata accessor for ClientCommand);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 4;
      break;
    case 2:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 5;
      break;
    case 3:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 6;
      break;
    case 4:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 7;
      break;
    case 5:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 8;
      break;
    case 6:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 9;
      break;
    case 7:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 10;
      break;
    case 8:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 11;
      break;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v7 = (uint64_t)&v3[*(int *)(v6 + 64)];
      sub_1A85135AC(*(void *)&v3[*(int *)(v6 + 80)], *(void *)&v3[*(int *)(v6 + 80) + 8]);
      sub_1A8511B00(v7, &qword_1E9741350);
      uint64_t result = 12;
      break;
    case 10:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 17;
      break;
    case 11:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 18;
      break;
    case 12:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 19;
      break;
    case 13:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 20;
      break;
    case 14:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      uint64_t result = 21;
      break;
    case 15:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      uint64_t result = 23;
      break;
    case 16:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      uint64_t result = 24;
      break;
    case 17:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      uint64_t result = 22;
      break;
    case 18:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 25;
      break;
    case 19:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 26;
      break;
    case 20:
      return result;
    case 21:
      uint64_t result = 1;
      break;
    case 22:
      uint64_t result = 2;
      break;
    case 23:
      uint64_t result = 13;
      break;
    case 24:
      uint64_t result = 14;
      break;
    case 25:
      uint64_t result = 15;
      break;
    case 26:
      uint64_t result = 16;
      break;
    case 27:
      uint64_t result = 27;
      break;
    default:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 3;
      break;
  }
  return result;
}

BOOL static ClientCommand.Kind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ClientCommand.Kind.hash(into:)()
{
  return sub_1A8A78768();
}

uint64_t ClientCommand.Kind.hashValue.getter()
{
  return sub_1A8A787C8();
}

unint64_t ClientCommand.logIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1F4188790](v1);
  char v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A88701E4(v0, (uint64_t)v3, type metadata accessor for ClientCommand);
  unint64_t v4 = 0x494C494241504143;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x4E49474F4CLL;
      break;
    case 2u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x5443454C4553;
      break;
    case 3u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x454E494D415845;
      break;
    case 4u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x455441455243;
      break;
    case 5u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x4554454C4544;
      break;
    case 6u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x454D414E4552;
      break;
    case 7u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 1414744396;
      break;
    case 8u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x535554415453;
      break;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v6 = (uint64_t)&v3[*(int *)(v5 + 64)];
      sub_1A85135AC(*(void *)&v3[*(int *)(v5 + 80)], *(void *)&v3[*(int *)(v5 + 80) + 8]);
      sub_1A8511B00(v6, &qword_1E9741350);
      unint64_t v4 = 0x444E45505041;
      break;
    case 0xAu:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x5241455320444955;
      break;
    case 0xBu:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0xD000000000000015;
      break;
    case 0xCu:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x484352414553;
      break;
    case 0xDu:
    case 0x13u:
      unint64_t v4 = 0xD000000000000011;
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      break;
    case 0xEu:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      unint64_t v4 = 0x4354454620444955;
      break;
    case 0xFu:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      unint64_t v4 = 0x524F545320444955;
      break;
    case 0x10u:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      unint64_t v4 = 0x59504F4320444955;
      break;
    case 0x11u:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950);
      swift_bridgeObjectRelease();
      sub_1A8511B00((uint64_t)v3, &qword_1E9741C28);
      unint64_t v4 = 0x45564F4D20444955;
      break;
    case 0x12u:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 17481;
      break;
    case 0x14u:
      return v4;
    case 0x15u:
      unint64_t v4 = 1347374926;
      break;
    case 0x16u:
      unint64_t v4 = 0x534C545452415453;
      break;
    case 0x17u:
      unint64_t v4 = 0x43415053454D414ELL;
      break;
    case 0x18u:
      unint64_t v4 = 0x4B43454843;
      break;
    case 0x19u:
      unint64_t v4 = 0x45534F4C43;
      break;
    case 0x1Au:
      unint64_t v4 = 0x45474E55505845;
      break;
    case 0x1Bu:
      unint64_t v4 = 0x53534552504D4F43;
      break;
    default:
      sub_1A887255C((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x49544E4548545541;
      break;
  }
  return v4;
}

unint64_t LoggableCommand.tag.getter()
{
  return *v0 | ((unint64_t)*((unsigned int *)v0 + 1) << 32);
}

uint64_t LoggableCommand.tag.setter(uint64_t result)
{
  *(unsigned char *)uint64_t v1 = result;
  *(_DWORD *)(v1 + 4) = HIDWORD(result);
  return result;
}

double (*LoggableCommand.tag.modify())(void)
{
  return nullsub_1;
}

uint64_t LoggableCommand.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LoggableCommand(0);
  return sub_1A88701E4(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ClientCommand);
}

uint64_t LoggableCommand.command.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoggableCommand(0) + 20);
  return sub_1A88725DC(a1, v3);
}

double (*LoggableCommand.command.modify())(void)
{
  return nullsub_1;
}

uint64_t LoggableCommand.init(tag:command:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = a1;
  *(_DWORD *)(a3 + 4) = HIDWORD(a1);
  uint64_t v5 = type metadata accessor for LoggableCommand(0);
  return sub_1A8877888(a2, a3 + *(int *)(v5 + 20), type metadata accessor for ClientCommand);
}

Swift::String __swiftcall LoggableCommand.makeDescriptionWithoutPII()()
{
  uint64_t v1 = sub_1A8A75E28();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v47 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v41 - v5;
  uint64_t v7 = type metadata accessor for ClientCommand.Encoded();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v0[*(int *)(type metadata accessor for LoggableCommand(0) + 20)];
  int v12 = *((_DWORD *)v0 + 1);
  char v48 = *v0;
  int v49 = v12;
  uint64_t v50 = v11;
  sub_1A8881848((void (*)(void))sub_1A8872640, 0x10000u, (void (*)(void))v10);
  if (*(void *)(*(void *)&v10[*(int *)(v8 + 28)] + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DA8);
    unint64_t v13 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v46 = *(void *)(v2 + 72);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1A8AD8F00;
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v15 = v2 + 16;
    uint64_t v43 = v1;
    uint64_t v45 = v16;
    v16((char *)(v14 + v13), v10, v1);
    uint64_t v51 = v14;
    uint64_t v17 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A886EFC4(v17, (uint64_t (*)(void))sub_1A8892F7C, MEMORY[0x1E4FBCBA0]);
    uint64_t v18 = v51;
    int64_t v19 = *(void *)(v51 + 16);
    if (v19)
    {
      uint64_t v44 = v6;
      uint64_t v42 = (void (*)(void))v10;
      uint64_t v51 = MEMORY[0x1E4FBC860];
      sub_1A886F2C8(0, v19, 0);
      v41[1] = v18;
      unint64_t v20 = v18 + v13;
      uint64_t v21 = (void (**)(char *, uint64_t))(v2 + 8);
      uint64_t v22 = v43;
      do
      {
        uint64_t v23 = v44;
        uint64_t v24 = v45;
        v45(v44, (char *)v20, v22);
        uint64_t v25 = (uint64_t)v47;
        uint64_t v26 = v15;
        v24(v47, v23, v22);
        uint64_t v27 = sub_1A8872654(v25);
        uint64_t v29 = v28;
        (*v21)(v23, v22);
        uint64_t v30 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A886F2C8(0, *(void *)(v30 + 16) + 1, 1);
          uint64_t v22 = v43;
          uint64_t v30 = v51;
        }
        unint64_t v32 = *(void *)(v30 + 16);
        unint64_t v31 = *(void *)(v30 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_1A886F2C8(v31 > 1, v32 + 1, 1);
          uint64_t v22 = v43;
          uint64_t v30 = v51;
        }
        *(void *)(v30 + 16) = v32 + 1;
        unint64_t v33 = v30 + 16 * v32;
        *(void *)(v33 + 32) = v27;
        *(void *)(v33 + 40) = v29;
        v20 += v46;
        --v19;
        uint64_t v15 = v26;
      }
      while (v19);
      swift_bridgeObjectRelease();
      unint64_t v10 = (char *)v42;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = MEMORY[0x1E4FBC860];
    }
    uint64_t v51 = v30;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744578);
    sub_1A8872AD0();
    uint64_t v34 = sub_1A8A76348();
    uint64_t v36 = v37;
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v10, v1);
    uint64_t v34 = sub_1A8872654((uint64_t)v6);
    uint64_t v36 = v35;
  }
  sub_1A887255C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ClientCommand.Encoded);
  uint64_t v38 = v34;
  uint64_t v39 = v36;
  result._object = v39;
  result._countAndFlagsBits = v38;
  return result;
}

uint64_t variable initialization expression of ClientCommand.EncodingOptions.literal()
{
  return 0;
}

uint64_t variable initialization expression of ClientCommand.EncodingOptions.messageBodyEncoding()
{
  return 0;
}

uint64_t variable initialization expression of ClientCommand.EncodingOptions.mode()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.bodyStructure@<X0>(uint64_t a1@<X8>)
{
  sub_1A86407D4((uint64_t)v3);
  return sub_1A8529F8C((uint64_t)v3, a1, &qword_1E97461D0);
}

double variable initialization expression of MessageData.envelope@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t variable initialization expression of MessageData.flags()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.gmailLabels()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.internalDate()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.modificationSequence()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.preview()
{
  return 0;
}

uint64_t variable initialization expression of MessageData.BodySection.origin()
{
  return 0x100000000;
}

uint64_t variable initialization expression of MessageData.BodySection.data@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MessageData.BodyData();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_1A886E9E4(uint64_t a1)
{
  return a1;
}

uint64_t variable initialization expression of ServerID.name()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.version()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.os()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.osVersion()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.vendor()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.supportURL()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.address()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.date()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.command()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.arguments()
{
  return 0;
}

uint64_t variable initialization expression of ServerID.environment()
{
  return 0;
}

uint64_t variable initialization expression of ServerResponseTranscoder.outputBuffer()
{
  sub_1A8A750C8();
  return swift_retain();
}

uint64_t variable initialization expression of ServerResponseFramingParser.byteCountNeededToCompleteFrame()
{
  return 0;
}

uint64_t sub_1A886EAF4@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1A8512DFC(a2, a3);
      unint64_t v10 = (char *)sub_1A8A74588();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1A8A745B8();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1A8A745A8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1A886ED58);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1A85135AC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1A8A74588();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1A8A745B8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1A8A745A8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1A886ED68(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_1A8512DFC(a1, a2);
      char v5 = sub_1A88705FC((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1A85135AC(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_1A88705FC(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1A85135AC(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_1A886EAF4((uint64_t)__s1, a3, a4, &v14);
      sub_1A85135AC(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_1A886EF98(uint64_t a1)
{
  return sub_1A886EFC4(a1, (uint64_t (*)(void))sub_1A88930AC, type metadata accessor for Response);
}

uint64_t sub_1A886EFC4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886F180(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1A8892FB0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886F2C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A886F3FC(a1, a2, a3, *v3);
  char *v3 = (char *)result;
  return result;
}

uint64_t sub_1A886F2E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A886F568(a1, a2, a3, *v3);
  char *v3 = (char *)result;
  return result;
}

uint64_t sub_1A886F308(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A886F6C8(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1A886F328(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A886F910(a1, a2, a3, (void *)*v3, &qword_1E97459F0, type metadata accessor for SelectParameter);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1A886F364(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A886F910(a1, a2, a3, (void *)*v3, &qword_1E9745A38, (uint64_t (*)(void))type metadata accessor for CommandStreamPart);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1A886F3A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A886F910(a1, a2, a3, (void *)*v3, &qword_1E974E088, (uint64_t (*)(void))type metadata accessor for ParameterValue);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1A886F3DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A886FCC4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1A886F3FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741180);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886F568(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886F6C8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E090);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747840) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747840) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  unint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886F910(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size_0(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886FB58(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745AB0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886FCC4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E97411B8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743F00);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A886FE50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1A8A78768();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      ++v5;
      sub_1A8A762A8();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1A886FFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t result = sub_1A8A78768();
  if (v6)
  {
    uint64_t v8 = *(void *)(a3 + 16);
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v9 = 0;
    do
    {
      if (!v8)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *(void *)(a4 + v9 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A762A8();
      sub_1A8A78778();
      if (v10)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A762A8();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      --v8;
      v9 += 16;
      --v6;
    }
    while (v6);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1A887011C()
{
  unint64_t result = qword_1E97484F8;
  if (!qword_1E97484F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0((uint64_t *)&unk_1E9748518);
    sub_1A8870190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97484F8);
  }
  return result;
}

unint64_t sub_1A8870190()
{
  unint64_t result = qword_1E9747A28;
  if (!qword_1E9747A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9747A28);
  }
  return result;
}

uint64_t sub_1A88701E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1A887024C(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8870304(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1A8870360(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1A88703A4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A8A787C8();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v7 = a2 + 56;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 24);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  uint64_t v11 = v10 & v6;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (!v11)
    {
      if (__OFADD__(v5++, 1)) {
        goto LABEL_18;
      }
      if (v5 >= v12) {
        return sub_1A8A78768();
      }
      uint64_t v11 = *(void *)(v7 + 8 * v5);
      if (!v11) {
        break;
      }
    }
LABEL_5:
    v11 &= v11 - 1;
    sub_1A8A78738();
    sub_1A8A78768();
    uint64_t result = sub_1A8A787C8();
    v4 ^= result;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v12) {
    return sub_1A8A78768();
  }
  uint64_t v11 = *(void *)(v7 + 8 * v14);
  if (v11)
  {
    ++v5;
    goto LABEL_5;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v12) {
      return sub_1A8A78768();
    }
    uint64_t v11 = *(void *)(v7 + 8 * v5);
    ++v14;
    if (v11) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

BOOL sub_1A88704D8(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unsigned int v6 = a5;
  unint64_t v7 = HIDWORD(a2);
  if (HIDWORD(a2) - a2 != HIDWORD(a5) - a5) {
    return 0;
  }
  unsigned __int8 v8 = BYTE6(a6);
  unsigned __int8 v10 = BYTE6(a3);
  unint64_t v12 = HIDWORD(a3);
  unint64_t v13 = HIDWORD(a6);
  if (a3 == a6 && WORD2(a3) == WORD2(a6) && BYTE6(a3) == BYTE6(a6) && a1 == a4) {
    return 1;
  }
  uint64_t v15 = a2;
  swift_beginAccess();
  uint64_t v16 = (const void *)(*(void *)(a1 + 24) + (v10 | ((unint64_t)(unsigned __int16)v12 << 8)) + v15);
  swift_beginAccess();
  return memcmp(v16, (const void *)(*(void *)(a4 + 24) + (v8 | ((unint64_t)(unsigned __int16)v13 << 8)) + v6), v7 - v15) == 0;
}

uint64_t sub_1A88705FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1A8A74588();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1A8A745B8();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A8A745A8();
  sub_1A886EAF4(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1A88706B4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1A88707F0);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_1A8512DFC(a3, a4);
              char v15 = sub_1A886ED68(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s13IMAP2Protocol13ClientCommandO21__derived_enum_equalsySbAC_ACtFZ_0(unint64_t a1, unint64_t a2)
{
  unint64_t v287 = a1;
  unint64_t v288 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C28);
  MEMORY[0x1F4188790](v2 - 8);
  v270 = (char *)&v260 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v269 = (char *)&v260 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v267 = (uint64_t)&v260 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v268 = (uint64_t)&v260 - v9;
  uint64_t v266 = sub_1A8A74C38();
  uint64_t v265 = *(void *)(v266 - 8);
  MEMORY[0x1F4188790](v266);
  v261 = (char *)&v260 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97413A8);
  MEMORY[0x1F4188790](v263);
  uint64_t v264 = (uint64_t)&v260 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v262 = (uint64_t)&v260 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v271 = (uint64_t)&v260 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v272 = (uint64_t)&v260 - v17;
  unint64_t v286 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1F4188790](v286);
  uint64_t v282 = (uint64_t)&v260 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v280 = (uint64_t *)((char *)&v260 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v285 = (uint64_t)&v260 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v284 = (uint64_t)&v260 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v283 = (uint64_t)&v260 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v281 = (uint64_t)&v260 - v28;
  MEMORY[0x1F4188790](v29);
  v279 = (unint64_t *)((char *)&v260 - v30);
  MEMORY[0x1F4188790](v31);
  v277 = (unint64_t *)((char *)&v260 - v32);
  MEMORY[0x1F4188790](v33);
  v276 = (unint64_t *)((char *)&v260 - v34);
  MEMORY[0x1F4188790](v35);
  v275 = (unint64_t *)((char *)&v260 - v36);
  MEMORY[0x1F4188790](v37);
  uint64_t v278 = (uint64_t)&v260 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v274 = (uint64_t)&v260 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)&v260 - v42;
  MEMORY[0x1F4188790](v44);
  uint64_t v273 = (uint64_t)&v260 - v45;
  MEMORY[0x1F4188790](v46);
  char v48 = (char *)&v260 - v47;
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v260 - v50;
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v260 - v53;
  MEMORY[0x1F4188790](v55);
  int v57 = (char *)&v260 - v56;
  MEMORY[0x1F4188790](v58);
  uint64_t v60 = (uint64_t *)((char *)&v260 - v59);
  MEMORY[0x1F4188790](v61);
  uint64_t v63 = (char *)&v260 - v62;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E0A0);
  MEMORY[0x1F4188790](v64 - 8);
  uint64_t v66 = (char *)&v260 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = (uint64_t)&v66[*(int *)(v67 + 56)];
  sub_1A88701E4(v287, (uint64_t)v66, type metadata accessor for ClientCommand);
  uint64_t v69 = v288;
  unint64_t v288 = v68;
  sub_1A88701E4(v69, v68, type metadata accessor for ClientCommand);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A88701E4((uint64_t)v66, (uint64_t)v60, type metadata accessor for ClientCommand);
      uint64_t v80 = *v60;
      uint64_t v79 = v60[1];
      uint64_t v82 = v60[2];
      uint64_t v81 = v60[3];
      uint64_t v83 = (uint64_t *)v288;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_125;
      }
      uint64_t v84 = *v83;
      uint64_t v85 = v83[1];
      uint64_t v87 = v83[2];
      uint64_t v86 = v83[3];
      if (v80 == v84 && v79 == v85)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v244 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v244 & 1) == 0) {
          goto LABEL_154;
        }
      }
      if (v82 == v87 && v81 == v86)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_183;
      }
      char v250 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v250) {
        goto LABEL_183;
      }
      goto LABEL_155;
    case 2u:
      sub_1A88701E4((uint64_t)v66, (uint64_t)v57, type metadata accessor for ClientCommand);
      uint64_t v88 = *(void *)v57;
      uint64_t v89 = *((void *)v57 + 2);
      unint64_t v90 = v288;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_125;
      }
      uint64_t v91 = *((unsigned int *)v57 + 2);
      uint64_t v92 = *(void *)(v90 + 16);
      if ((v91 | (v91 << 32)) != (*(unsigned int *)(v90 + 8) | ((unint64_t)*(unsigned int *)(v90 + 8) << 32))) {
        goto LABEL_137;
      }
      BOOL v93 = sub_1A8866D34(v88, *(void *)v90);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v93) {
        goto LABEL_154;
      }
      char v94 = sub_1A8888488(v89, v92);
      goto LABEL_49;
    case 3u:
      sub_1A88701E4((uint64_t)v66, (uint64_t)v54, type metadata accessor for ClientCommand);
      uint64_t v95 = *(void *)v54;
      unint64_t v96 = v288;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_126;
      }
      uint64_t v97 = *((unsigned int *)v54 + 2);
      goto LABEL_18;
    case 4u:
      sub_1A88701E4((uint64_t)v66, (uint64_t)v51, type metadata accessor for ClientCommand);
      uint64_t v95 = *(void *)v51;
      unint64_t v96 = v288;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_126;
      }
      uint64_t v97 = *((unsigned int *)v51 + 2);
      goto LABEL_18;
    case 5u:
      sub_1A88701E4((uint64_t)v66, (uint64_t)v48, type metadata accessor for ClientCommand);
      uint64_t v95 = *(void *)v48;
      unint64_t v96 = v288;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_126;
      }
      uint64_t v97 = *((unsigned int *)v48 + 2);
LABEL_18:
      if ((v97 | (v97 << 32)) != (*(unsigned int *)(v96 + 8) | ((unint64_t)*(unsigned int *)(v96 + 8) << 32))) {
        goto LABEL_154;
      }
      BOOL v98 = sub_1A8866D34(v95, *(void *)v96);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 6u:
      uint64_t v99 = v273;
      sub_1A88701E4((uint64_t)v66, v273, type metadata accessor for ClientCommand);
      uint64_t v100 = *(void *)v99;
      uint64_t v101 = *(void *)(v99 + 16);
      uint64_t v102 = *(unsigned int *)(v99 + 24);
      unint64_t v103 = v288;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_125;
      }
      uint64_t v104 = *(unsigned int *)(v99 + 8);
      uint64_t v105 = *(void *)(v103 + 16);
      if ((v104 | (v104 << 32)) != (*(unsigned int *)(v103 + 8) | ((unint64_t)*(unsigned int *)(v103 + 8) << 32))) {
        goto LABEL_137;
      }
      uint64_t v106 = *(unsigned int *)(v103 + 24);
      BOOL v107 = sub_1A8866D34(v100, *(void *)v103);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v107 || (v102 | (v102 << 32)) != (v106 | (v106 << 32))) {
        goto LABEL_154;
      }
      BOOL v98 = sub_1A8866D34(v101, v105);
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
      if (v98) {
        goto LABEL_183;
      }
      goto LABEL_155;
    case 7u:
      sub_1A88701E4((uint64_t)v66, (uint64_t)v43, type metadata accessor for ClientCommand);
      uint64_t v108 = *(void *)v43;
      uint64_t v109 = *((unsigned int *)v43 + 2);
      uint64_t v110 = *((void *)v43 + 2);
      uint64_t v111 = *((unsigned int *)v43 + 6);
      uint64_t v112 = *((void *)v43 + 4);
      __int16 v113 = (uint64_t *)v288;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_126;
      }
      char v114 = v113;
      uint64_t v115 = (uint64_t)v66;
      uint64_t v116 = *v113;
      uint64_t v117 = v113[2];
      uint64_t v118 = *((unsigned int *)v114 + 6);
      uint64_t v119 = v114[4];
      if (v108)
      {
        if (v116)
        {
          if ((v109 | (v109 << 32)) == (*(unsigned int *)(v288 + 8) | ((unint64_t)*(unsigned int *)(v288 + 8) << 32)))
          {
            BOOL v120 = sub_1A8866D34(v108, v116);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!v120) {
              goto LABEL_172;
            }
LABEL_162:
            if (v110)
            {
              if (v117)
              {
                if ((v111 | (v111 << 32)) != (v118 | (v118 << 32))) {
                  goto LABEL_172;
                }
                BOOL v254 = sub_1A8866D34(v110, v117);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (!v254) {
                  goto LABEL_173;
                }
                goto LABEL_192;
              }
            }
            else if (!v117)
            {
LABEL_192:
              char v94 = sub_1A886CBEC(v112, v119);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A887255C(v115, type metadata accessor for ClientCommand);
              return v94 & 1;
            }
            swift_bridgeObjectRelease();
            goto LABEL_173;
          }
          swift_bridgeObjectRelease();
        }
      }
      else if (!v116)
      {
        goto LABEL_162;
      }
      swift_bridgeObjectRelease();
LABEL_172:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_173:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v239 = v115;
      goto LABEL_156;
    case 8u:
      uint64_t v121 = v274;
      sub_1A88701E4((uint64_t)v66, v274, type metadata accessor for ClientCommand);
      uint64_t v122 = *(void *)v121;
      uint64_t v123 = *(void *)(v121 + 16);
      unint64_t v124 = v288;
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_125;
      }
      uint64_t v125 = *(unsigned int *)(v121 + 8);
      uint64_t v126 = *(void *)v124;
      uint64_t v127 = *(unsigned int *)(v124 + 8);
      uint64_t v128 = *(void *)(v124 + 16);
      if ((v125 | (v125 << 32)) != (v127 | (v127 << 32)))
      {
LABEL_137:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_154;
      }
      BOOL v129 = sub_1A8866D34(v122, v126);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v129) {
        goto LABEL_154;
      }
      char v94 = sub_1A886CCF4(v123, v128);
      swift_bridgeObjectRelease();
      goto LABEL_50;
    case 9u:
      unint64_t v287 = (unint64_t)v66;
      uint64_t v130 = v278;
      sub_1A88701E4((uint64_t)v66, v278, type metadata accessor for ClientCommand);
      uint64_t v131 = *(void *)v130;
      uint64_t v132 = *(void *)(v130 + 16);
      uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v134 = *(int *)(v133 + 64);
      uint64_t v135 = v130 + v134;
      uint64_t v136 = *(int *)(v133 + 80);
      uint64_t v138 = *(void *)(v130 + v136);
      unint64_t v137 = *(void *)(v130 + v136 + 8);
      unint64_t v139 = v288;
      if (swift_getEnumCaseMultiPayload() != 9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A85135AC(v138, v137);
        sub_1A8511B00(v130 + v134, &qword_1E9741350);
        uint64_t v66 = (char *)v287;
        goto LABEL_127;
      }
      uint64_t v285 = v138;
      unint64_t v286 = v137;
      uint64_t v140 = *(unsigned int *)(v130 + 8);
      uint64_t v141 = *(void *)v139;
      uint64_t v142 = *(unsigned int *)(v139 + 8);
      uint64_t v143 = *(void *)(v139 + 16);
      uint64_t v144 = v139 + v136;
      uint64_t v145 = *(void *)(v139 + v136);
      unint64_t v288 = *(void *)(v144 + 8);
      uint64_t v146 = v135;
      uint64_t v147 = v272;
      sub_1A8529F8C(v146, v272, &qword_1E9741350);
      uint64_t v148 = v139 + v134;
      uint64_t v149 = v271;
      sub_1A8529F8C(v148, v271, &qword_1E9741350);
      if ((v140 | (v140 << 32)) == (v142 | (v142 << 32)))
      {
        BOOL v150 = sub_1A8866D34(v131, v141);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v70 = v287;
        if (v150)
        {
          char v151 = sub_1A851DC54(v132, v143);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v151)
          {
            uint64_t v152 = v264;
            uint64_t v153 = v264 + *(int *)(v263 + 48);
            sub_1A8511A9C(v147, v264, &qword_1E9741350);
            sub_1A8511A9C(v149, v153, &qword_1E9741350);
            uint64_t v154 = v265;
            v155 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v265 + 48);
            uint64_t v156 = v266;
            if (v155(v152, 1, v266) == 1)
            {
              if (v155(v153, 1, v156) == 1)
              {
                sub_1A8511B00(v152, &qword_1E9741350);
                uint64_t v157 = v285;
LABEL_196:
                unint64_t v258 = v286;
                unint64_t v259 = v288;
                char v94 = sub_1A88706B4(v157, v286, v145, v288);
                sub_1A85135AC(v145, v259);
                sub_1A85135AC(v157, v258);
                sub_1A8511B00(v149, &qword_1E9741350);
                sub_1A8511B00(v147, &qword_1E9741350);
                sub_1A887255C(v70, type metadata accessor for ClientCommand);
                return v94 & 1;
              }
            }
            else
            {
              sub_1A8511A9C(v152, v262, &qword_1E9741350);
              if (v155(v153, 1, v156) != 1)
              {
                v255 = v261;
                (*(void (**)(char *, uint64_t, uint64_t))(v154 + 32))(v261, v153, v156);
                sub_1A8872B74(&qword_1E9741318, MEMORY[0x1E4F27928]);
                uint64_t v256 = v262;
                LODWORD(v284) = sub_1A8A76498();
                v257 = *(void (**)(char *, uint64_t))(v154 + 8);
                v257(v255, v156);
                v257((char *)v256, v156);
                sub_1A8511B00(v152, &qword_1E9741350);
                uint64_t v157 = v285;
                if (v284) {
                  goto LABEL_196;
                }
                goto LABEL_197;
              }
              (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v262, v156);
            }
            sub_1A8511B00(v152, &qword_1E97413A8);
            uint64_t v157 = v285;
LABEL_197:
            sub_1A85135AC(v145, v288);
            uint64_t v253 = v157;
            goto LABEL_160;
          }
          sub_1A85135AC(v145, v288);
          uint64_t v253 = v285;
LABEL_160:
          sub_1A85135AC(v253, v286);
          sub_1A8511B00(v149, &qword_1E9741350);
          sub_1A8511B00(v147, &qword_1E9741350);
          goto LABEL_176;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v70 = v287;
      }
      uint64_t v252 = v285;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A85135AC(v145, v288);
      uint64_t v253 = v252;
      goto LABEL_160;
    case 0xAu:
      v158 = v275;
      sub_1A88701E4((uint64_t)v66, (uint64_t)v275, type metadata accessor for ClientCommand);
      unint64_t v159 = *v158;
      v160 = (uint64_t *)v288;
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 0xBu:
      v161 = v276;
      sub_1A88701E4((uint64_t)v66, (uint64_t)v276, type metadata accessor for ClientCommand);
      unint64_t v159 = *v161;
      uint64_t v162 = v161[1];
      v163 = (uint64_t *)v288;
      if (swift_getEnumCaseMultiPayload() == 11) {
        goto LABEL_47;
      }
      goto LABEL_54;
    case 0xCu:
      v167 = v277;
      sub_1A88701E4((uint64_t)v66, (uint64_t)v277, type metadata accessor for ClientCommand);
      unint64_t v159 = *v167;
      v160 = (uint64_t *)v288;
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_55;
      }
LABEL_52:
      unint64_t v168 = *v160;
      static SearchKey.__derived_enum_equals(_:_:)(v159, *v160);
      char v94 = v169;
      sub_1A887024C(v168);
      sub_1A887024C(v159);
      goto LABEL_71;
    case 0xDu:
      v170 = v279;
      sub_1A88701E4((uint64_t)v66, (uint64_t)v279, type metadata accessor for ClientCommand);
      unint64_t v159 = *v170;
      uint64_t v162 = v170[1];
      v163 = (uint64_t *)v288;
      if (swift_getEnumCaseMultiPayload() != 13)
      {
LABEL_54:
        swift_bridgeObjectRelease();
LABEL_55:
        sub_1A887024C(v159);
        goto LABEL_127;
      }
LABEL_47:
      unint64_t v165 = *v163;
      uint64_t v164 = v163[1];
      static SearchKey.__derived_enum_equals(_:_:)(v159, *v163);
      if ((v166 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A887024C(v165);
        sub_1A887024C(v159);
        goto LABEL_155;
      }
      char v94 = sub_1A886CFE0(v162, v164);
      sub_1A887024C(v165);
      sub_1A887024C(v159);
LABEL_49:
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
      goto LABEL_71;
    case 0xEu:
      uint64_t v171 = v281;
      sub_1A88701E4((uint64_t)v66, v281, type metadata accessor for ClientCommand);
      uint64_t v172 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
      uint64_t v173 = *(void *)(v171 + v172);
      uint64_t v174 = *(void *)(v171 + v172 + 8);
      char v175 = *(unsigned char *)(v171 + v172 + 16);
      uint64_t v176 = v288;
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_121;
      }
      uint64_t v177 = v176 + v172;
      uint64_t v178 = *(void *)(v176 + v172);
      unint64_t v287 = *(void *)(v177 + 8);
      char v179 = *(unsigned char *)(v177 + 16);
      uint64_t v180 = v268;
      sub_1A8529F8C(v176, v268, &qword_1E9741C28);
      sub_1A8875108();
      char v181 = sub_1A8A78928();
      sub_1A8511B00(v171, &qword_1E9741C28);
      if ((v181 & 1) == 0)
      {
        uint64_t v238 = v180;
        goto LABEL_141;
      }
      char v182 = sub_1A886C440(v173, v178);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v182 & 1) == 0) {
        goto LABEL_185;
      }
      if (v175)
      {
        if ((v179 & 1) == 0) {
          goto LABEL_185;
        }
      }
      else
      {
        if (v179) {
          goto LABEL_185;
        }
        if (((v287 | v174) & 0x8000000000000000) != 0)
        {
          __break(1u);
          JUMPOUT(0x1A88724ECLL);
        }
        if (v287 != v174)
        {
LABEL_185:
          uint64_t v245 = v180;
LABEL_186:
          sub_1A8511B00(v245, &qword_1E9741C28);
LABEL_155:
          uint64_t v239 = (uint64_t)v66;
LABEL_156:
          sub_1A887255C(v239, type metadata accessor for ClientCommand);
          goto LABEL_157;
        }
      }
      sub_1A8511B00(v180, &qword_1E9741C28);
      goto LABEL_183;
    case 0xFu:
      uint64_t v171 = v283;
      sub_1A88701E4((uint64_t)v66, v283, type metadata accessor for ClientCommand);
      uint64_t v183 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48);
      unsigned int v184 = *(unsigned __int8 *)(v171 + v183);
      int v185 = *(unsigned __int8 *)(v171 + v183 + 1);
      uint64_t v186 = *(void *)(v171 + v183 + 8);
      uint64_t v187 = v288;
      if (swift_getEnumCaseMultiPayload() != 15)
      {
LABEL_121:
        swift_bridgeObjectRelease();
        sub_1A8511B00(v171, &qword_1E9741C28);
        goto LABEL_127;
      }
      LODWORD(v287) = *(unsigned __int8 *)(v187 + v183);
      int v188 = *(unsigned __int8 *)(v187 + v183 + 1);
      uint64_t v189 = *(void *)(v187 + v183 + 8);
      uint64_t v190 = v267;
      sub_1A8529F8C(v187, v267, &qword_1E9741C28);
      sub_1A8875108();
      char v191 = sub_1A8A78928();
      sub_1A8511B00(v171, &qword_1E9741C28);
      if ((v191 & 1) == 0)
      {
        sub_1A8511B00(v190, &qword_1E9741C28);
        goto LABEL_154;
      }
      if (v185) {
        int v192 = 256;
      }
      else {
        int v192 = 0;
      }
      if (v188) {
        __int16 v193 = 256;
      }
      else {
        __int16 v193 = 0;
      }
      char v94 = static StoreFlags.__derived_struct_equals(_:_:)(v192 | v184, v186, v193 | (unsigned __int16)v287, v189);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A8511B00(v190, &qword_1E9741C28);
LABEL_71:
      sub_1A887255C((uint64_t)v66, type metadata accessor for ClientCommand);
      return v94 & 1;
    case 0x10u:
      uint64_t v194 = v284;
      sub_1A88701E4((uint64_t)v66, v284, type metadata accessor for ClientCommand);
      uint64_t v195 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
      uint64_t v196 = *(void *)(v194 + v195);
      uint64_t v197 = *(unsigned int *)(v194 + v195 + 8);
      unint64_t v198 = v288;
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_113;
      }
      uint64_t v199 = v198 + v195;
      uint64_t v200 = *(void *)(v198 + v195);
      uint64_t v201 = *(unsigned int *)(v199 + 8);
      uint64_t v202 = v198;
      uint64_t v203 = (uint64_t)v269;
      goto LABEL_76;
    case 0x11u:
      uint64_t v194 = v285;
      sub_1A88701E4((uint64_t)v66, v285, type metadata accessor for ClientCommand);
      uint64_t v204 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
      uint64_t v196 = *(void *)(v194 + v204);
      uint64_t v197 = *(unsigned int *)(v194 + v204 + 8);
      unint64_t v205 = v288;
      if (swift_getEnumCaseMultiPayload() != 17)
      {
LABEL_113:
        swift_bridgeObjectRelease();
        sub_1A8511B00(v194, &qword_1E9741C28);
        goto LABEL_127;
      }
      uint64_t v206 = v205 + v204;
      uint64_t v200 = *(void *)(v205 + v204);
      uint64_t v201 = *(unsigned int *)(v206 + 8);
      uint64_t v202 = v205;
      uint64_t v203 = (uint64_t)v270;
LABEL_76:
      sub_1A8529F8C(v202, v203, &qword_1E9741C28);
      sub_1A8875108();
      char v207 = sub_1A8A78928();
      sub_1A8511B00(v194, &qword_1E9741C28);
      if ((v207 & 1) == 0)
      {
        uint64_t v238 = v203;
LABEL_141:
        sub_1A8511B00(v238, &qword_1E9741C28);
LABEL_154:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_155;
      }
      if ((v197 | (v197 << 32)) != (v201 | (v201 << 32)))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v245 = v203;
        goto LABEL_186;
      }
      BOOL v208 = sub_1A8866D34(v196, v200);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A8511B00(v203, &qword_1E9741C28);
      if (!v208) {
        goto LABEL_155;
      }
      goto LABEL_183;
    case 0x12u:
      v209 = v280;
      sub_1A88701E4((uint64_t)v66, (uint64_t)v280, type metadata accessor for ClientCommand);
      uint64_t v210 = *v209;
      uint64_t v211 = v209[1];
      uint64_t v212 = v209[2];
      v213 = (uint64_t *)v288;
      if (swift_getEnumCaseMultiPayload() != 18)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_127;
      }
      uint64_t v214 = *v213;
      uint64_t v215 = v213[1];
      uint64_t v216 = v213[2];
      if ((sub_1A888659C(v214, v215, v210, v211) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_155;
      }
      char v217 = sub_1A888B774(v212, v216);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v217 & 1) == 0) {
        goto LABEL_155;
      }
LABEL_183:
      uint64_t v237 = (uint64_t)v66;
      goto LABEL_184;
    case 0x13u:
      uint64_t v218 = v282;
      sub_1A88701E4((uint64_t)v66, v282, type metadata accessor for ClientCommand);
      uint64_t v220 = *(void *)(v218 + 8);
      uint64_t v219 = *(void *)(v218 + 16);
      uint64_t v222 = *(void *)(v218 + 24);
      uint64_t v221 = *(void *)(v218 + 32);
      uint64_t v224 = *(void *)(v218 + 40);
      uint64_t v223 = *(void *)(v218 + 48);
      uint64_t v225 = *(void *)(v218 + 56);
      unint64_t v226 = v288;
      if (swift_getEnumCaseMultiPayload() != 19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_125:
        swift_bridgeObjectRelease();
LABEL_126:
        swift_bridgeObjectRelease();
        goto LABEL_127;
      }
      int v227 = *(_DWORD *)v218;
      int v228 = *(_DWORD *)v226;
      unint64_t v286 = *(void *)(v226 + 16);
      unint64_t v287 = (unint64_t)v66;
      uint64_t v285 = *(void *)(v226 + 32);
      uint64_t v229 = *(void *)(v226 + 48);
      uint64_t v230 = *(void *)(v226 + 56);
      if (v227 == v228
        && ((uint64_t v231 = *(void *)(v226 + 8), v232 = *(void *)(v226 + 24), v233 = *(void *)(v226 + 40), v220 == v231)
         && v219 == v286
         || (v234 = v232, v235 = sub_1A8A78588(), uint64_t v232 = v234, (v235 & 1) != 0))
        && (v222 == v232 && v221 == v285 || (sub_1A8A78588() & 1) != 0)
        && (v224 == v233 && v223 == v229 || (sub_1A8A78588() & 1) != 0))
      {
        char v236 = sub_1A886C240(v225, v230);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v236)
        {
          uint64_t v237 = v287;
          goto LABEL_184;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v239 = v287;
      goto LABEL_156;
    case 0x14u:
      if (swift_getEnumCaseMultiPayload() == 20) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x15u:
      if (swift_getEnumCaseMultiPayload() == 21) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x16u:
      if (swift_getEnumCaseMultiPayload() == 22) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x17u:
      if (swift_getEnumCaseMultiPayload() == 23) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x18u:
      if (swift_getEnumCaseMultiPayload() == 24) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x19u:
      if (swift_getEnumCaseMultiPayload() == 25) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x1Au:
      if (swift_getEnumCaseMultiPayload() == 26) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x1Bu:
      if (swift_getEnumCaseMultiPayload() == 27) {
        goto LABEL_183;
      }
      goto LABEL_127;
    default:
      uint64_t v70 = (uint64_t)v66;
      sub_1A88701E4((uint64_t)v66, (uint64_t)v63, type metadata accessor for ClientCommand);
      uint64_t v72 = *(void *)v63;
      uint64_t v71 = *((void *)v63 + 1);
      uint64_t v73 = *((void *)v63 + 2);
      unint64_t v74 = *((void *)v63 + 3);
      int v75 = v63[38];
      int v76 = *((unsigned __int16 *)v63 + 18);
      uint64_t v77 = *((unsigned int *)v63 + 8);
      unint64_t v78 = v288;
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v66 = (char *)v70;
LABEL_127:
        sub_1A8511B00((uint64_t)v66, &qword_1E974E0A0);
LABEL_157:
        char v94 = 0;
        return v94 & 1;
      }
      unint64_t v287 = v74;
      uint64_t v240 = *(void *)v78;
      uint64_t v241 = *(void *)(v78 + 8);
      uint64_t v242 = *(void *)(v78 + 16);
      unint64_t v286 = *(void *)(v78 + 24);
      LODWORD(v285) = *(unsigned __int8 *)(v78 + 38);
      LODWORD(v284) = *(unsigned __int16 *)(v78 + 36);
      uint64_t v243 = *(unsigned int *)(v78 + 32);
      if (v72 == v240 && v71 == v241)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v246 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v246 & 1) == 0) {
          goto LABEL_175;
        }
      }
      if (!v73)
      {
        if (!v242) {
          goto LABEL_174;
        }
        goto LABEL_175;
      }
      if (!v242)
      {
LABEL_175:
        swift_release();
        swift_release();
        goto LABEL_176;
      }
      unint64_t v247 = (v243 | ((unint64_t)(v284 | (v285 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v248 = swift_retain();
      BOOL v249 = sub_1A88704D8(v248, v287, (v77 | ((unint64_t)(v76 | (v75 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL, v242, v286, v247);
      swift_release_n();
      swift_release_n();
      if (!v249)
      {
LABEL_176:
        uint64_t v239 = v70;
        goto LABEL_156;
      }
LABEL_174:
      uint64_t v237 = v70;
LABEL_184:
      sub_1A887255C(v237, type metadata accessor for ClientCommand);
      char v94 = 1;
      return v94 & 1;
  }
}

uint64_t sub_1A887255C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for LoggableCommand(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E97429D0);
}

uint64_t sub_1A88725DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8872640(uint64_t a1)
{
  return sub_1A8881778(a1, *(unsigned __int8 *)(v1 + 16) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32), *(void *)(v1 + 24));
}

uint64_t sub_1A8872654(uint64_t a1)
{
  uint64_t v2 = sub_1A8A75C58();
  uint64_t v20 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8A75D68();
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  uint64_t v21 = a1;
  uint64_t v5 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  MEMORY[0x1AD0DF770](v5);
  unsigned int v6 = 0;
  int v7 = 0;
  uint64_t v8 = v26;
  for (unint64_t i = v27; ; unint64_t i = v23)
  {
    unsigned int v24 = v6;
    unsigned __int8 v25 = v7;
    if (!v7) {
      break;
    }
    if ((v6 & 0x80) == 0)
    {
      sub_1A887790C();
      uint64_t v16 = sub_1A87C8E94();
      sub_1A8879710(0);
      ((void (*)(uint64_t *, void))v16)(&v22, 0);
      goto LABEL_16;
    }
LABEL_6:
    sub_1A8872B74((unint64_t *)&unk_1E9743A58, MEMORY[0x1E4FBCA90]);
    while (1)
    {
      sub_1A8A77948();
      if ((v22 & 0x100) != 0) {
        break;
      }
      unsigned int v10 = ((-255 << v25) - 1) & v24 | (v22 << v25);
      unsigned int v24 = v10;
      unsigned __int8 v11 = v25 + 8;
      v25 += 8;
      if (v25 >= 0x20u) {
        goto LABEL_12;
      }
    }
    unsigned __int8 v11 = v25;
    if (!v25) {
      goto LABEL_32;
    }
    unsigned int v10 = v24;
LABEL_12:
    if ((v10 & 0xC0E0) == 0x80C0)
    {
      if ((v10 & 0x1E) == 0) {
        goto LABEL_31;
      }
      char v12 = 16;
    }
    else if ((v10 & 0xC0C0F0) == 0x8080E0)
    {
      if ((v10 & 0x200F) == 0 || (v10 & 0x200F) == 8205) {
        goto LABEL_31;
      }
      char v12 = 24;
    }
    else
    {
      unsigned int v14 = v10 & 0x3007;
      BOOL v15 = (v10 & 0xC0C0C0F8) != 0x808080F0 || v14 == 0;
      if (v15 || __rev16(v14) > 0x400)
      {
LABEL_31:
        sub_1A8A78868();
        uint64_t v26 = v8;
        unint64_t v27 = i;
        sub_1A8A767E8();
        goto LABEL_33;
      }
      char v12 = 32;
    }
    unsigned int v24 = (unint64_t)v10 >> v12;
    unsigned __int8 v25 = v11 - v12;
LABEL_16:
    unsigned int v6 = v24;
    int v7 = v25;
    uint64_t v22 = v8;
    unint64_t v23 = i;
    sub_1A8A766D8();
    uint64_t v8 = v22;
  }
  sub_1A8872B74((unint64_t *)&unk_1E9743A58, MEMORY[0x1E4FBCA90]);
  sub_1A8A77948();
  if ((v22 & 0x100) == 0)
  {
    if ((v22 & 0x80) == 0) {
      goto LABEL_16;
    }
    unsigned int v24 = ((-255 << v25) - 1) & v24 | (v22 << v25);
    v25 += 8;
    goto LABEL_6;
  }
LABEL_32:
  uint64_t v26 = v8;
  unint64_t v27 = i;
LABEL_33:
  uint64_t v17 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v21, v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  return v26;
}

unint64_t sub_1A8872AD0()
{
  unint64_t result = qword_1E9740E38;
  if (!qword_1E9740E38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E9744578);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9740E38);
  }
  return result;
}

uint64_t sub_1A8872B2C()
{
  return sub_1A8872B74(&qword_1E974E070, (void (*)(uint64_t))type metadata accessor for ClientCommand);
}

uint64_t sub_1A8872B74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A8872BC0()
{
  unint64_t result = qword_1E974E078;
  if (!qword_1E974E078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E078);
  }
  return result;
}

unint64_t sub_1A8872C18()
{
  unint64_t result = qword_1E9742980;
  if (!qword_1E9742980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742980);
  }
  return result;
}

unint64_t sub_1A8872C70()
{
  unint64_t result = qword_1E974E080;
  if (!qword_1E974E080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E080);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v10;
        uint64_t v11 = *(void *)(a2 + 16);
        uint64_t v12 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = v11;
        *((void *)a1 + 3) = v12;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
        uint64_t v14 = *(int *)(v13 + 64);
        BOOL v15 = &a1[v14];
        uint64_t v16 = (const void *)(a2 + v14);
        uint64_t v17 = sub_1A8A74C38();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        uint64_t v41 = *(int *)(v13 + 80);
        uint64_t v42 = (uint64_t *)&a1[v41];
        uint64_t v43 = (uint64_t *)(a2 + v41);
        uint64_t v44 = *v43;
        unint64_t v45 = v43[1];
        sub_1A8512DFC(*v43, v45);
        *uint64_t v42 = v44;
        v42[1] = v45;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xCu:
        unint64_t v20 = *(void *)a2;
        sub_1A8873454(v20);
        *(void *)a1 = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
      case 0xDu:
        unint64_t v21 = *(void *)a2;
        sub_1A8873454(*(void *)a2);
        uint64_t v22 = *(void *)(a2 + 8);
        *(void *)a1 = v21;
        *((void *)a1 + 1) = v22;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
        unsigned __int8 v25 = &a1[v24];
        uint64_t v26 = (uint64_t *)(a2 + v24);
        v25[16] = *((unsigned char *)v26 + 16);
        uint64_t v27 = *v26;
        uint64_t v28 = v26[1];
        *(void *)unsigned __int8 v25 = v27;
        *((void *)v25 + 1) = v28;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48);
        uint64_t v31 = &a1[v30];
        uint64_t v32 = a2 + v30;
        *(_WORD *)uint64_t v31 = *(_WORD *)v32;
        *((void *)v31 + 1) = *(void *)(v32 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
        uint64_t v35 = &a1[v34];
        uint64_t v36 = a2 + v34;
        *(void *)uint64_t v35 = *(void *)v36;
        *((_DWORD *)v35 + 2) = *(_DWORD *)(v36 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        uint64_t v37 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v37;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v38 = *(void *)(a2 + 16);
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = v38;
        uint64_t v39 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v39;
        uint64_t v40 = *(void *)(a2 + 48);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = v40;
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

unint64_t sub_1A8873454(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for ClientCommand(unint64_t *a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 1:
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 3:
    case 4:
    case 5:
      goto LABEL_23;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v7 = (char *)a1 + *(int *)(v6 + 64);
      uint64_t v8 = sub_1A8A74C38();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
      }
      uint64_t v10 = (uint64_t *)((char *)a1 + *(int *)(v6 + 80));
      uint64_t v11 = *v10;
      unint64_t v12 = v10[1];
      return sub_1A85135AC(v11, v12);
    case 10:
    case 12:
      unint64_t v3 = *a1;
      return sub_1A887024C(v3);
    case 11:
    case 13:
      sub_1A887024C(*a1);
      goto LABEL_23;
    case 14:
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      int v5 = &qword_1E9747920;
      goto LABEL_16;
    case 15:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
      goto LABEL_23;
    case 16:
    case 17:
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      int v5 = &qword_1E9747950;
LABEL_16:
      __swift_instantiateConcreteTypeFromMangledName_0(v5);
      goto LABEL_23;
    case 18:
      swift_release();
      swift_release();
LABEL_19:
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((void *)a1 + 3) = *(void *)(a2 + 24);
      *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      goto LABEL_20;
    case 1u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v7;
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      *((void *)a1 + 2) = v8;
      *((void *)a1 + 3) = v9;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 2u:
    case 8u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 7u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
      *((void *)a1 + 4) = *(void *)(a2 + 32);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 9u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v11 = *(int *)(v10 + 64);
      unint64_t v12 = &a1[v11];
      uint64_t v13 = (const void *)(a2 + v11);
      uint64_t v14 = sub_1A8A74C38();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v38 = *(int *)(v10 + 80);
      uint64_t v39 = (uint64_t *)&a1[v38];
      uint64_t v40 = (uint64_t *)(a2 + v38);
      uint64_t v41 = *v40;
      unint64_t v42 = v40[1];
      sub_1A8512DFC(*v40, v42);
      uint64_t *v39 = v41;
      v39[1] = v42;
      goto LABEL_20;
    case 0xAu:
    case 0xCu:
      unint64_t v17 = *(void *)a2;
      sub_1A8873454(v17);
      *(void *)a1 = v17;
      goto LABEL_20;
    case 0xBu:
    case 0xDu:
      unint64_t v18 = *(void *)a2;
      sub_1A8873454(*(void *)a2);
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = v18;
      *((void *)a1 + 1) = v19;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xEu:
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
      uint64_t v22 = &a1[v21];
      uint64_t v23 = (uint64_t *)(a2 + v21);
      v22[16] = *((unsigned char *)v23 + 16);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xFu:
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48);
      uint64_t v28 = &a1[v27];
      uint64_t v29 = a2 + v27;
      *(_WORD *)uint64_t v28 = *(_WORD *)v29;
      *((void *)v28 + 1) = *(void *)(v29 + 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x10u:
    case 0x11u:
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
      uint64_t v32 = &a1[v31];
      uint64_t v33 = a2 + v31;
      *(void *)uint64_t v32 = *(void *)v33;
      *((_DWORD *)v32 + 2) = *(_DWORD *)(v33 + 8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x12u:
      uint64_t v34 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v34;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_20;
    case 0x13u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v35 = *(void *)(a2 + 16);
      *((void *)a1 + 1) = *(void *)(a2 + 8);
      *((void *)a1 + 2) = v35;
      uint64_t v36 = *(void *)(a2 + 32);
      *((void *)a1 + 3) = *(void *)(a2 + 24);
      *((void *)a1 + 4) = v36;
      uint64_t v37 = *(void *)(a2 + 48);
      *((void *)a1 + 5) = *(void *)(a2 + 40);
      *((void *)a1 + 6) = v37;
      *((void *)a1 + 7) = *(void *)(a2 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_1A887255C((uint64_t)a1, type metadata accessor for ClientCommand);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_DWORD *)a1 + 7) = *(_DWORD *)(a2 + 28);
        int v6 = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        *((_DWORD *)a1 + 8) = v6;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        goto LABEL_21;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 2u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = (const void *)(a2 + v8);
        uint64_t v11 = sub_1A8A74C38();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v29 = *(int *)(v7 + 80);
        uint64_t v30 = (uint64_t *)&a1[v29];
        uint64_t v31 = (uint64_t *)(a2 + v29);
        uint64_t v32 = *v31;
        unint64_t v33 = v31[1];
        sub_1A8512DFC(*v31, v33);
        *uint64_t v30 = v32;
        v30[1] = v33;
        goto LABEL_21;
      case 0xAu:
      case 0xCu:
        unint64_t v14 = *(void *)a2;
        sub_1A8873454(v14);
        *(void *)a1 = v14;
        goto LABEL_21;
      case 0xBu:
      case 0xDu:
        unint64_t v15 = *(void *)a2;
        sub_1A8873454(*(void *)a2);
        *(void *)a1 = v15;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xEu:
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
        unint64_t v18 = &a1[v17];
        uint64_t v19 = a2 + v17;
        *(void *)unint64_t v18 = *(void *)v19;
        uint64_t v20 = *(void *)(v19 + 8);
        v18[16] = *(unsigned char *)(v19 + 16);
        *((void *)v18 + 1) = v20;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xFu:
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48);
        uint64_t v23 = &a1[v22];
        uint64_t v24 = (char *)(a2 + v22);
        *uint64_t v23 = *v24;
        v23[1] = v24[1];
        *((void *)v23 + 1) = *((void *)v24 + 1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x10u:
      case 0x11u:
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = a2 + v26;
        *(void *)uint64_t v27 = *(void *)v28;
        *((_DWORD *)v27 + 2) = *(_DWORD *)(v28 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x12u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_21;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_DWORD *initializeWithTake for ClientCommand(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 9u:
      *(void *)a1 = *(void *)a2;
      a1[2] = a2[2];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v7 = *(int *)(v6 + 64);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1A8A74C38();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 80));
      goto LABEL_10;
    case 0xEu:
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
      unint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
      unsigned char v15[16] = v16[16];
      goto LABEL_10;
    case 0xFu:
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
      *(_OWORD *)((char *)a1 + *(int *)(v18 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v18 + 48));
      goto LABEL_10;
    case 0x10u:
    case 0x11u:
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *(void *)uint64_t v21 = *(void *)v22;
      *((_DWORD *)v21 + 2) = *((_DWORD *)v22 + 2);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_DWORD *assignWithTake for ClientCommand(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A887255C((uint64_t)a1, type metadata accessor for ClientCommand);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *(void *)a1 = *(void *)a2;
        a1[2] = a2[2];
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
        uint64_t v7 = *(int *)(v6 + 64);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1A8A74C38();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        *(_OWORD *)((char *)a1 + *(int *)(v6 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 80));
        goto LABEL_11;
      case 0xEu:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
        unint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
        unsigned char v15[16] = v16[16];
        goto LABEL_11;
      case 0xFu:
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
        *(_OWORD *)((char *)a1 + *(int *)(v18 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v18 + 48));
        goto LABEL_11;
      case 0x10u:
      case 0x11u:
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        *(void *)uint64_t v21 = *(void *)v22;
        *((_DWORD *)v21 + 2) = *((_DWORD *)v22 + 2);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1A8874E78()
{
  uint64_t v12 = "'";
  uint64_t v13 = &unk_1A8AE5178;
  uint64_t v14 = &unk_1A8AE5190;
  unint64_t v15 = &unk_1A8AE51A8;
  uint64_t v16 = &unk_1A8AE51A8;
  uint64_t v17 = &unk_1A8AE51A8;
  uint64_t v18 = &unk_1A8AE51C0;
  uint64_t v19 = &unk_1A8AE51D8;
  uint64_t v20 = &unk_1A8AE5190;
  uint64_t v7 = &unk_1A8AE51A8;
  uint64_t v8 = MEMORY[0x1E4FBAD80] + 64;
  sub_1A8875054();
  if (v1 <= 0x3F)
  {
    uint64_t v9 = *(void *)(v0 - 8) + 64;
    uint64_t v10 = &unk_1A8AE51F0;
    swift_getTupleTypeLayout();
    uint64_t v21 = &v11;
    uint64_t v22 = &unk_1A8AE5208;
    uint64_t v23 = &unk_1A8AE5220;
    uint64_t v24 = &unk_1A8AE5208;
    uint64_t v25 = &unk_1A8AE5220;
    sub_1A88750AC();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v26 = &v6;
      swift_getTupleTypeLayout2();
      uint64_t v27 = &v5;
      swift_getTupleTypeLayout2();
      uint64_t v28 = &v4;
      swift_getTupleTypeLayout2();
      uint64_t v29 = &v3;
      uint64_t v30 = &unk_1A8AE5190;
      uint64_t v31 = &unk_1A8AE5250;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_1A8875054()
{
  if (!qword_1E9741390)
  {
    sub_1A8A74C38();
    unint64_t v0 = sub_1A8A77898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9741390);
    }
  }
}

void sub_1A88750AC()
{
  if (!qword_1E9748548)
  {
    sub_1A8875108();
    unint64_t v0 = sub_1A8A78A18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9748548);
    }
  }
}

unint64_t sub_1A8875108()
{
  unint64_t result = qword_1E9747A50;
  if (!qword_1E9747A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9747A50);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SearchRequest.RangesToExclude(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for SearchRequest.RangesToExclude(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  return a1;
}

__n128 __swift_memcpy17_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchRequest.RangesToExclude(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest.RangesToExclude(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ClientCommand.FetchData()
{
  return &type metadata for ClientCommand.FetchData;
}

unsigned char *storeEnumTagSinglePayload for ClientCommand.SelectOption(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A8875340);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.SelectOption()
{
  return &type metadata for ClientCommand.SelectOption;
}

unsigned char *__swift_memcpy1_1_4(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClientCommand.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClientCommand.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *__n128 result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88754E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.Kind()
{
  return &type metadata for ClientCommand.Kind;
}

uint64_t *initializeBufferWithCopyOfBuffer for LoggableCommand(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    uint64_t *v3 = *a2;
    int v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    BOOL v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v9 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = *(void *)v7;
        *((void *)v6 + 1) = v9;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = *((void *)v7 + 3);
        *((_DWORD *)v6 + 8) = *((_DWORD *)v7 + 8);
        *(_DWORD *)(v6 + 35) = *(_DWORD *)(v7 + 35);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v12 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = *(void *)v7;
        *((void *)v6 + 1) = v12;
        uint64_t v13 = *((void *)v7 + 2);
        uint64_t v14 = *((void *)v7 + 3);
        *((void *)v6 + 2) = v13;
        *((void *)v6 + 3) = v14;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 8u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
        uint64_t v16 = *(int *)(v15 + 64);
        uint64_t v17 = &v6[v16];
        uint64_t v18 = &v7[v16];
        uint64_t v19 = sub_1A8A74C38();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v43 = *(int *)(v15 + 80);
        uint64_t v44 = (uint64_t *)&v6[v43];
        unint64_t v45 = (uint64_t *)&v7[v43];
        uint64_t v46 = *v45;
        unint64_t v47 = v45[1];
        sub_1A8512DFC(*v45, v47);
        *uint64_t v44 = v46;
        v44[1] = v47;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xCu:
        unint64_t v22 = *(void *)v7;
        sub_1A8873454(v22);
        *(void *)unsigned int v6 = v22;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
      case 0xDu:
        unint64_t v23 = *(void *)v7;
        sub_1A8873454(*(void *)v7);
        uint64_t v24 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = v23;
        *((void *)v6 + 1) = v24;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v6, v7, v25);
        uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
        uint64_t v27 = &v6[v26];
        uint64_t v28 = &v7[v26];
        v27[16] = v28[16];
        uint64_t v29 = *(void *)v28;
        uint64_t v30 = *((void *)v28 + 1);
        *(void *)uint64_t v27 = v29;
        *((void *)v27 + 1) = v30;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v6, v7, v31);
        uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48);
        unint64_t v33 = &v6[v32];
        uint64_t v34 = &v7[v32];
        *(_WORD *)unint64_t v33 = *(_WORD *)v34;
        *((void *)v33 + 1) = *((void *)v34 + 1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v6, v7, v35);
        uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
        uint64_t v37 = &v6[v36];
        uint64_t v38 = &v7[v36];
        *(void *)uint64_t v37 = *(void *)v38;
        *((_DWORD *)v37 + 2) = *((_DWORD *)v38 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        uint64_t v39 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = *(void *)v7;
        *((void *)v6 + 1) = v39;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)unsigned int v6 = *(_DWORD *)v7;
        uint64_t v40 = *((void *)v7 + 2);
        *((void *)v6 + 1) = *((void *)v7 + 1);
        *((void *)v6 + 2) = v40;
        uint64_t v41 = *((void *)v7 + 4);
        *((void *)v6 + 3) = *((void *)v7 + 3);
        *((void *)v6 + 4) = v41;
        uint64_t v42 = *((void *)v7 + 6);
        *((void *)v6 + 5) = *((void *)v7 + 5);
        *((void *)v6 + 6) = v42;
        *((void *)v6 + 7) = *((void *)v7 + 7);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  return v3;
}

unint64_t destroy for LoggableCommand(uint64_t a1, uint64_t a2)
{
  int v2 = (unint64_t *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for ClientCommand(0);
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 1:
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 3:
    case 4:
    case 5:
      goto LABEL_23;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v8 = (char *)v2 + *(int *)(v7 + 64);
      uint64_t v9 = sub_1A8A74C38();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      }
      char v11 = (uint64_t *)((char *)v2 + *(int *)(v7 + 80));
      uint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      return sub_1A85135AC(v12, v13);
    case 10:
    case 12:
      unint64_t v4 = *v2;
      return sub_1A887024C(v4);
    case 11:
    case 13:
      sub_1A887024C(*v2);
      goto LABEL_23;
    case 14:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(v2, v14);
      unsigned int v6 = &qword_1E9747920;
      goto LABEL_16;
    case 15:
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v15 - 8) + 8))(v2, v15);
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
      goto LABEL_23;
    case 16:
    case 17:
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
      unsigned int v6 = &qword_1E9747950;
LABEL_16:
      __swift_instantiateConcreteTypeFromMangledName_0(v6);
      goto LABEL_23;
    case 18:
      swift_release();
      swift_release();
LABEL_19:
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for LoggableCommand(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ClientCommand(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = *(void *)v6;
      *((void *)v5 + 1) = v8;
      *((void *)v5 + 2) = *((void *)v6 + 2);
      *((void *)v5 + 3) = *((void *)v6 + 3);
      *((_DWORD *)v5 + 8) = *((_DWORD *)v6 + 8);
      *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      goto LABEL_20;
    case 1u:
      uint64_t v9 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = *(void *)v6;
      *((void *)v5 + 1) = v9;
      uint64_t v10 = *((void *)v6 + 2);
      uint64_t v11 = *((void *)v6 + 3);
      *((void *)v5 + 2) = v10;
      *((void *)v5 + 3) = v11;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 2u:
    case 8u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 6u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 7u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
      *((void *)v5 + 4) = *((void *)v6 + 4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 9u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v13 = *(int *)(v12 + 64);
      uint64_t v14 = &v5[v13];
      uint64_t v15 = &v6[v13];
      uint64_t v16 = sub_1A8A74C38();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v40 = *(int *)(v12 + 80);
      uint64_t v41 = (uint64_t *)&v5[v40];
      uint64_t v42 = (uint64_t *)&v6[v40];
      uint64_t v43 = *v42;
      unint64_t v44 = v42[1];
      sub_1A8512DFC(*v42, v44);
      *uint64_t v41 = v43;
      v41[1] = v44;
      goto LABEL_20;
    case 0xAu:
    case 0xCu:
      unint64_t v19 = *(void *)v6;
      sub_1A8873454(v19);
      *(void *)uint64_t v5 = v19;
      goto LABEL_20;
    case 0xBu:
    case 0xDu:
      unint64_t v20 = *(void *)v6;
      sub_1A8873454(*(void *)v6);
      uint64_t v21 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = v20;
      *((void *)v5 + 1) = v21;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xEu:
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v5, v6, v22);
      uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
      uint64_t v24 = &v5[v23];
      uint64_t v25 = &v6[v23];
      v24[16] = v25[16];
      uint64_t v26 = *(void *)v25;
      uint64_t v27 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = v26;
      *((void *)v24 + 1) = v27;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0xFu:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v5, v6, v28);
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48);
      uint64_t v30 = &v5[v29];
      uint64_t v31 = &v6[v29];
      *(_WORD *)uint64_t v30 = *(_WORD *)v31;
      *((void *)v30 + 1) = *((void *)v31 + 1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x10u:
    case 0x11u:
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v5, v6, v32);
      uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
      uint64_t v34 = &v5[v33];
      uint64_t v35 = &v6[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      *((_DWORD *)v34 + 2) = *((_DWORD *)v35 + 2);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_20;
    case 0x12u:
      uint64_t v36 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = *(void *)v6;
      *((void *)v5 + 1) = v36;
      *((void *)v5 + 2) = *((void *)v6 + 2);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_20;
    case 0x13u:
      *(_DWORD *)uint64_t v5 = *(_DWORD *)v6;
      uint64_t v37 = *((void *)v6 + 2);
      *((void *)v5 + 1) = *((void *)v6 + 1);
      *((void *)v5 + 2) = v37;
      uint64_t v38 = *((void *)v6 + 4);
      *((void *)v5 + 3) = *((void *)v6 + 3);
      *((void *)v5 + 4) = v38;
      uint64_t v39 = *((void *)v6 + 6);
      *((void *)v5 + 5) = *((void *)v6 + 5);
      *((void *)v5 + 6) = v39;
      *((void *)v5 + 7) = *((void *)v6 + 7);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)(a1 + v4);
    uint64_t v6 = a2 + v4;
    sub_1A887255C(a1 + v4, type metadata accessor for ClientCommand);
    uint64_t v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        *((_DWORD *)v5 + 7) = *(_DWORD *)(v6 + 28);
        int v8 = *(_DWORD *)(v6 + 32);
        *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
        *((_DWORD *)v5 + 8) = v8;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        goto LABEL_21;
      case 1u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((void *)v5 + 3) = *(void *)(v6 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 2u:
      case 8u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 6u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 7u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        *((void *)v5 + 4) = *(void *)(v6 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 9u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
        uint64_t v10 = *(int *)(v9 + 64);
        uint64_t v11 = &v5[v10];
        uint64_t v12 = (const void *)(v6 + v10);
        uint64_t v13 = sub_1A8A74C38();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        uint64_t v31 = *(int *)(v9 + 80);
        uint64_t v32 = (uint64_t *)&v5[v31];
        uint64_t v33 = (uint64_t *)(v6 + v31);
        uint64_t v34 = *v33;
        unint64_t v35 = v33[1];
        sub_1A8512DFC(*v33, v35);
        *uint64_t v32 = v34;
        v32[1] = v35;
        goto LABEL_21;
      case 0xAu:
      case 0xCu:
        unint64_t v16 = *(void *)v6;
        sub_1A8873454(v16);
        *(void *)uint64_t v5 = v16;
        goto LABEL_21;
      case 0xBu:
      case 0xDu:
        unint64_t v17 = *(void *)v6;
        sub_1A8873454(*(void *)v6);
        *(void *)uint64_t v5 = v17;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xEu:
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v5, v6, v18);
        uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
        unint64_t v20 = &v5[v19];
        uint64_t v21 = v6 + v19;
        *(void *)unint64_t v20 = *(void *)v21;
        uint64_t v22 = *(void *)(v21 + 8);
        v20[16] = *(unsigned char *)(v21 + 16);
        *((void *)v20 + 1) = v22;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0xFu:
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v5, v6, v23);
        uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938) + 48);
        uint64_t v25 = &v5[v24];
        uint64_t v26 = (char *)(v6 + v24);
        char *v25 = *v26;
        v25[1] = v26[1];
        *((void *)v25 + 1) = *((void *)v26 + 1);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x10u:
      case 0x11u:
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v5, v6, v27);
        uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
        uint64_t v29 = &v5[v28];
        uint64_t v30 = v6 + v28;
        *(void *)uint64_t v29 = *(void *)v30;
        *((_DWORD *)v29 + 2) = *(_DWORD *)(v30 + 8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      case 0x12u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_21;
      case 0x13u:
        *(_DWORD *)uint64_t v5 = *(_DWORD *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((void *)v5 + 3) = *(void *)(v6 + 24);
        *((void *)v5 + 4) = *(void *)(v6 + 32);
        *((void *)v5 + 5) = *(void *)(v6 + 40);
        *((void *)v5 + 6) = *(void *)(v6 + 48);
        *((void *)v5 + 7) = *(void *)(v6 + 56);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, (const void *)v6, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for LoggableCommand(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ClientCommand(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 9u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v9 = *(int *)(v8 + 64);
      uint64_t v10 = &v5[v9];
      uint64_t v11 = &v6[v9];
      uint64_t v12 = sub_1A8A74C38();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)&v5[*(int *)(v8 + 80)] = *(_OWORD *)&v6[*(int *)(v8 + 80)];
      goto LABEL_10;
    case 0xEu:
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v5, v6, v15);
      uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
      unint64_t v17 = &v5[v16];
      uint64_t v18 = &v6[v16];
      *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
      v17[16] = v18[16];
      goto LABEL_10;
    case 0xFu:
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v5, v6, v19);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
      *(_OWORD *)&v5[*(int *)(v20 + 48)] = *(_OWORD *)&v6[*(int *)(v20 + 48)];
      goto LABEL_10;
    case 0x10u:
    case 0x11u:
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v5, v6, v21);
      uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
      uint64_t v23 = &v5[v22];
      uint64_t v24 = &v6[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      *((_DWORD *)v23 + 2) = *((_DWORD *)v24 + 2);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithTake for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (_DWORD *)(a1 + v4);
    uint64_t v6 = (_DWORD *)(a2 + v4);
    sub_1A887255C(a1 + v4, type metadata accessor for ClientCommand);
    uint64_t v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *(void *)uint64_t v5 = *(void *)v6;
        void v5[2] = v6[2];
        *((void *)v5 + 2) = *((void *)v6 + 2);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = (char *)v5 + v9;
        uint64_t v11 = (char *)v6 + v9;
        uint64_t v12 = sub_1A8A74C38();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        *(_OWORD *)((char *)v5 + *(int *)(v8 + 80)) = *(_OWORD *)((char *)v6 + *(int *)(v8 + 80));
        goto LABEL_11;
      case 0xEu:
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v15 - 8) + 32))(v5, v6, v15);
        uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48);
        unint64_t v17 = (char *)v5 + v16;
        uint64_t v18 = (char *)v6 + v16;
        *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
        v17[16] = v18[16];
        goto LABEL_11;
      case 0xFu:
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(v5, v6, v19);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
        *(_OWORD *)((char *)v5 + *(int *)(v20 + 48)) = *(_OWORD *)((char *)v6 + *(int *)(v20 + 48));
        goto LABEL_11;
      case 0x10u:
      case 0x11u:
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(v5, v6, v21);
        uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950) + 48);
        uint64_t v23 = (char *)v5 + v22;
        uint64_t v24 = (char *)v6 + v22;
        *(void *)uint64_t v23 = *(void *)v24;
        *((_DWORD *)v23 + 2) = *((_DWORD *)v24 + 2);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggableCommand()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88776F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for ClientCommand(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for LoggableCommand()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A887777C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for ClientCommand(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1A88777F0()
{
  uint64_t result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A8877888(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A88778F0()
{
  return sub_1A8880A60();
}

unint64_t sub_1A887790C()
{
  unint64_t result = qword_1E9741220;
  if (!qword_1E9741220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9741220);
  }
  return result;
}

void *ClientCommand.EncodingOptions.logging.unsafeMutableAddressor()
{
  return &static ClientCommand.EncodingOptions.logging;
}

uint64_t ClientCommand.encode(tag:options:)@<X0>(int a1@<W1>, void (*a2)(void)@<X8>)
{
  return sub_1A8881848((void (*)(void))sub_1A8872640, a1 & 0x101FF, a2);
}

uint64_t ClientCommand.Encoded.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ClientCommand.Encoded.command.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

double (*ClientCommand.Encoded.command.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientCommand.Encoded.continuations.getter()
{
  type metadata accessor for ClientCommand.Encoded();
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ClientCommand.Encoded.continuations.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ClientCommand.Encoded() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

double (*ClientCommand.Encoded.continuations.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientCommand.Encoded.init(command:continuations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ClientCommand.Encoded();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t static ClientCommand.Encoded.idle(tag:options:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X8>)
{
  return ClientCommandEncoder.idle(tag:)(a1 & 0xFFFFFFFF000000FFLL, a2 & 0x101FF, a3);
}

uint64_t ClientCommand.EncodingOptions.Literal.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static ClientCommand.EncodingOptions.Literal.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ClientCommand.EncodingOptions.Literal.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t ClientCommand.EncodingOptions.MessageBodyEncoding.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static ClientCommand.EncodingOptions.MessageBodyEncoding.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ClientCommand.EncodingOptions.literal.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*ClientCommand.EncodingOptions.literal.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientCommand.EncodingOptions.messageBodyEncoding.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ClientCommand.EncodingOptions.messageBodyEncoding.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result & 1;
  return result;
}

double (*ClientCommand.EncodingOptions.messageBodyEncoding.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientCommand.EncodingOptions.mode.getter(unsigned int a1)
{
  return HIWORD(a1) & 1;
}

uint64_t ClientCommand.EncodingOptions.mode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result & 1;
  return result;
}

double (*ClientCommand.EncodingOptions.mode.modify())(void)
{
  return nullsub_1;
}

void *ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor()
{
  return &static ClientCommand.EncodingOptions.rfc3501;
}

uint64_t static ClientCommand.EncodingOptions.rfc3501.getter()
{
  return 0;
}

uint64_t static ClientCommand.EncodingOptions.logging.getter()
{
  return 0x10000;
}

uint64_t static ClientCommand.EncodingOptions.__derived_struct_equals(_:_:)(unsigned int a1, int a2)
{
  unsigned int v2 = ((a2 ^ a1) >> 8) & 1;
  if (a2 != a1) {
    unsigned int v2 = 1;
  }
  return (v2 | (((a2 ^ a1) & 0x10000) >> 16)) ^ 1;
}

BOOL sub_1A8877D98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 != *a2) | ((a1[1] ^ a2[1]) | (a2[2] ^ a1[2])) & 1) == 0;
}

uint64_t ClientCommand.EncodingOptions.debugDescription.getter(__int16 a1)
{
  if ((_BYTE)a1)
  {
    unint64_t v1 = 0x2B6C61726574694CLL;
    if ((a1 & 0x100) != 0) {
      unint64_t v1 = 0xD000000000000010;
    }
    unint64_t v2 = 0x2D6C61726574694CLL;
    if ((a1 & 0x100) != 0) {
      unint64_t v2 = 0xD000000000000010;
    }
    if (a1 == 1) {
      return v1;
    }
    else {
      return v2;
    }
  }
  else
  {
    uint64_t v3 = 0x7972616E6942;
    if ((a1 & 0x100) == 0) {
      return 0x647261646E617453;
    }
  }
  return v3;
}

uint64_t sub_1A8877E80()
{
  if (v0[1]) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return ClientCommand.EncodingOptions.debugDescription.getter(v1 | *v0);
}

uint64_t CommandEncodingOptions.init(_:)(__int16 a1)
{
  uint64_t v1 = 8 * (char)a1;
  uint64_t v2 = *(void *)((char *)&unk_1A8AE5490 + v1);
  uint64_t v3 = *(void *)((char *)&unk_1A8AE54A8 + v1);
  uint64_t v4 = *(void *)((char *)&unk_1A8AE54C0 + v1);
  uint64_t v5 = 0x100000001;
  if ((a1 & 0x100) == 0) {
    uint64_t v5 = 1;
  }
  return v5 | v2 | v3 | v4;
}

uint64_t ClientCommand.EncodingOptions.init(_:)(uint64_t a1)
{
  uint64_t v2 = Capability.literalPlus.unsafeMutableAddressor();
  if (sub_1A8877FA4(*(void *)v2, *((void *)v2 + 1), *((void *)v2 + 2), *((unsigned char *)v2 + 24), a1))
  {
    int v3 = 1;
  }
  else
  {
    uint64_t v4 = Capability.literalMinus.unsafeMutableAddressor();
    if (sub_1A8877FA4(*(void *)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((unsigned char *)v4 + 24), a1)) {
      int v3 = 2;
    }
    else {
      int v3 = 0;
    }
  }
  uint64_t v5 = Capability.binary.unsafeMutableAddressor();
  char v6 = sub_1A8877FA4(*(void *)v5, *((void *)v5 + 1), *((void *)v5 + 2), *((unsigned char *)v5 + 24), a1);
  swift_bridgeObjectRelease();
  if (v6) {
    int v7 = 256;
  }
  else {
    int v7 = 0;
  }
  return v7 | v3;
}

uint64_t sub_1A8877FA4(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 16);
  if (v5)
  {
    uint64_t v10 = (unsigned char *)(a5 + 56);
    do
    {
      uint64_t v11 = *((void *)v10 - 1);
      char v12 = *v10;
      BOOL v13 = *((void *)v10 - 3) == a1 && *((void *)v10 - 2) == a2;
      if (v13 || (sub_1A8A78588() & 1) != 0)
      {
        if (v12)
        {
          if (a4) {
            return 1;
          }
        }
        else if ((a4 & 1) == 0 && (v11 ^ a3) < 0x4000)
        {
          return 1;
        }
      }
      v10 += 32;
      --v5;
    }
    while (v5);
  }
  return 0;
}

uint64_t type metadata accessor for ClientCommand.Encoded()
{
  uint64_t result = qword_1E9742988;
  if (!qword_1E9742988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1A88780A4()
{
  unint64_t result = qword_1E974E0A8;
  if (!qword_1E974E0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0A8);
  }
  return result;
}

unint64_t sub_1A88780FC()
{
  unint64_t result = qword_1E974E0B0;
  if (!qword_1E974E0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0B0);
  }
  return result;
}

unint64_t sub_1A8878154()
{
  unint64_t result = qword_1E974E0B8;
  if (!qword_1E974E0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0B8);
  }
  return result;
}

uint64_t *_s7EncodedVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A8A75E28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

uint64_t _s7EncodedVwxx(uint64_t a1)
{
  uint64_t v2 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s7EncodedVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t _s7EncodedVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7EncodedVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s7EncodedVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7EncodedVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A887850C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8A75E28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s7EncodedVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88785E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A8A75E28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A887869C()
{
  uint64_t result = sub_1A8A75E28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t _s15EncodingOptionsVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = a1[3];
      if (a1[3]) {
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3)) {
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = a1[1];
  BOOL v5 = v4 >= 2;
  int v6 = v4 - 2;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t _s15EncodingOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 1) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions()
{
  return &type metadata for ClientCommand.EncodingOptions;
}

unsigned char *_s15EncodingOptionsV7LiteralOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8878920);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.Literal()
{
  return &type metadata for ClientCommand.EncodingOptions.Literal;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.MessageBodyEncoding()
{
  return &type metadata for ClientCommand.EncodingOptions.MessageBodyEncoding;
}

unsigned char *_s15EncodingOptionsV19MessageBodyEncodingOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8878A38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.Mode()
{
  return &type metadata for ClientCommand.EncodingOptions.Mode;
}

uint64_t ConnectionID.rawValue.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

double (*ConnectionID.rawValue.modify())(void)
{
  return nullsub_1;
}

BOOL static ConnectionID.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return a1 < a2;
}

uint64_t ConnectionID.next.getter(int a1)
{
  return (a1 + 1);
}

void *ConnectionID.invalid.unsafeMutableAddressor()
{
  return &static ConnectionID.invalid;
}

uint64_t static ConnectionID.invalid.getter()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_1A8878AD8(unsigned __int8 a1)
{
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  MEMORY[0x1AD0DF770](10);
  __int16 v2 = a1 + 1;
  do
  {
    unsigned int v3 = (unsigned __int16)(v2 - 1);
    __int16 v2 = (unsigned __int16)(v2 - 1) / 0x1Au;
    uint64_t v5 = (unsigned __int16)((unsigned __int16)v3 % 0x1Au + 65);
    MEMORY[0x1AD0DF7E0](&v5, 1);
    sub_1A8A767F8();
    swift_bridgeObjectRelease();
  }
  while (v3 > 0x19);
  return v6;
}

unint64_t sub_1A8878B88()
{
  unint64_t result = qword_1E9742958;
  if (!qword_1E9742958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742958);
  }
  return result;
}

uint64_t sub_1A8878BDC()
{
  return sub_1A8878AD8(*v0);
}

ValueMetadata *type metadata accessor for ConnectionID()
{
  return &type metadata for ConnectionID;
}

uint64_t EncodedString.rawValue.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

double (*EncodedString.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t EncodedString.init()()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t EncodedString.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1A8A78768();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      ++v5;
      uint64_t result = sub_1A8A78778();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1A8878CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A8A78588();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A8878D3C()
{
  sub_1A8878F28();
  return sub_1A8A78A48();
}

uint64_t sub_1A8878D78()
{
  sub_1A8878F28();
  return sub_1A8A78A58();
}

uint64_t EncodedString.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E0C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A8878F28();
  sub_1A8A78858();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
  sub_1A8879C1C(&qword_1E9746F60);
  sub_1A8A78468();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A8878F28()
{
  unint64_t result = qword_1E974E0C8;
  if (!qword_1E974E0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0C8);
  }
  return result;
}

uint64_t EncodedString.hashValue.getter(uint64_t a1)
{
  sub_1A8A78738();
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A8A78768();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    do
    {
      ++v3;
      sub_1A8A78778();
      --v2;
    }
    while (v2);
  }
  return sub_1A8A787C8();
}

void *EncodedString.init(from:)(void *a1)
{
  return sub_1A887983C(a1);
}

uint64_t sub_1A8879004()
{
  return EncodedString.hashValue.getter(*v0);
}

uint64_t sub_1A887900C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t result = sub_1A8A78768();
  if (v2)
  {
    uint64_t v4 = v1 + 32;
    do
    {
      ++v4;
      uint64_t result = sub_1A8A78778();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1A8879060()
{
  uint64_t v1 = *v0;
  sub_1A8A78738();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1A8A78768();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_1A8A78778();
      --v2;
    }
    while (v2);
  }
  return sub_1A8A787C8();
}

void *sub_1A88790CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A887983C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A88790F8(void *a1)
{
  return EncodedString.encode(to:)(a1, *v1);
}

BOOL sub_1A8879114(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1A8879128(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1A8879134(uint64_t *a1, uint64_t *a2)
{
  return (_s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a2, *a1) & 1) == 0;
}

BOOL sub_1A8879160(uint64_t *a1, uint64_t *a2)
{
  return (_s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a1, *a2) & 1) == 0;
}

uint64_t sub_1A8879188(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a2, *a1);
}

void (*String.init(_:)(uint64_t a1))(uint64_t *, void)
{
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  uint64_t result = (void (*)(uint64_t *, void))MEMORY[0x1AD0DF770](*(void *)(a1 + 16));
  unsigned int v3 = 0;
  unsigned __int8 v4 = 0;
  unint64_t v5 = 0;
  uint64_t v7 = 0;
  unint64_t v6 = 0xE000000000000000;
  uint64_t v8 = a1 + 32;
  while (1)
  {
    unsigned int v21 = v3;
    unsigned __int8 v22 = v4;
    if (v4)
    {
      if ((v3 & 0x80) == 0)
      {
        sub_1A887790C();
        uint64_t result = (void (*)(uint64_t *, void))sub_1A87C8E94();
        char v16 = *(unsigned char *)(v15 + 4);
        if (!v16) {
          goto LABEL_46;
        }
        *(_DWORD *)v15 >>= 8;
        *(unsigned char *)(v15 + 4) = v16 - 8;
        result(&v19, 0);
        goto LABEL_10;
      }
      unint64_t v10 = *(void *)(a1 + 16);
      BOOL v13 = v5 >= v10;
      if (v5 == v10) {
        goto LABEL_12;
      }
      goto LABEL_17;
    }
    unint64_t v10 = *(void *)(a1 + 16);
    if (v5 == v10) {
      goto LABEL_42;
    }
    if (v5 >= v10) {
      break;
    }
    int v11 = *(char *)(v8 + v5);
    int v12 = *(unsigned __int8 *)(v8 + v5++);
    if (v11 < 0)
    {
      unsigned int v3 = v3 & 0xFFFFFF00 | v12;
      unsigned __int8 v4 = 8;
      BOOL v13 = v5 >= v10;
      if (v5 == v10)
      {
LABEL_12:
        unsigned __int8 v14 = v4;
        goto LABEL_31;
      }
LABEL_17:
      if (v13) {
        goto LABEL_45;
      }
      unint64_t v17 = v5 + 1;
      unsigned int v3 = (*(unsigned __int8 *)(v8 + v5) << v4) | ((-255 << v4) - 1) & v3;
      unsigned __int8 v14 = v4 + 8;
      if ((v4 + 8) <= 0x1Fu)
      {
        if (v17 == v10) {
          goto LABEL_27;
        }
        unint64_t v18 = v5 + 2;
        unsigned int v3 = (*(unsigned __int8 *)(v8 + v17) << v14) | ((-255 << v14) - 1) & v3;
        unsigned __int8 v14 = v4 + 16;
        if ((v4 + 16) > 0x1Fu) {
          goto LABEL_30;
        }
        if (v18 == v10)
        {
LABEL_27:
          if (!v14)
          {
LABEL_42:
            swift_bridgeObjectRelease();
            return (void (*)(uint64_t *, void))v7;
          }
LABEL_31:
          if ((v3 & 0xC0E0) == 0x80C0)
          {
            if ((v3 & 0x1E) == 0) {
              goto LABEL_41;
            }
            char v9 = 16;
            goto LABEL_4;
          }
          if ((v3 & 0xC0C0F0) == 0x8080E0)
          {
            if ((v3 & 0x200F) == 0 || (v3 & 0x200F) == 0x200D) {
              goto LABEL_41;
            }
            char v9 = 24;
            goto LABEL_4;
          }
          if ((v3 & 0xC0C0C0F8) == 0x808080F0 && (v3 & 0x3007) != 0 && __rev16(v3 & 0x3007) <= 0x400)
          {
            char v9 = 32;
LABEL_4:
            unsigned int v21 = (unint64_t)v3 >> v9;
            unsigned __int8 v22 = v14 - v9;
            goto LABEL_5;
          }
LABEL_41:
          sub_1A8A78868();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        unint64_t v17 = v5 + 3;
        unsigned int v3 = (*(unsigned __int8 *)(v8 + v18) << v14) | ((-255 << v14) - 1) & v3;
        unsigned __int8 v14 = v4 + 24;
        if ((v4 + 24) <= 0x1Fu)
        {
          if (v17 != v10)
          {
            unint64_t v18 = v5 + 4;
            unsigned int v3 = (*(unsigned __int8 *)(v8 + v17) << v14) | ((-255 << v14) - 1) & v3;
            unsigned __int8 v14 = v4 + 32;
            if (v4 >= 0xE0u)
            {
              if (v18 != v10)
              {
                unsigned int v3 = (*(unsigned __int8 *)(v8 + v18) << v4) | ((-255 << v4) - 1) & v3;
                unsigned __int8 v14 = v4 + 40;
                if ((v4 + 40) >= 0x20u)
                {
                  unint64_t v10 = v5 + 5;
                  goto LABEL_31;
                }
              }
              goto LABEL_27;
            }
LABEL_30:
            unint64_t v10 = v18;
            goto LABEL_31;
          }
          goto LABEL_27;
        }
      }
      unint64_t v10 = v17;
      goto LABEL_31;
    }
LABEL_10:
    unint64_t v10 = v5;
LABEL_5:
    unsigned int v3 = v21;
    unsigned __int8 v4 = v22;
    uint64_t v19 = v7;
    unint64_t v20 = v6;
    uint64_t result = (void (*)(uint64_t *, void))sub_1A8A766D8();
    uint64_t v7 = v19;
    unint64_t v6 = v20;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t EncodedString.init(_:)(uint64_t a1)
{
  size_t v2 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  uint64_t v3 = sub_1A8879654(0, v2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (uint64_t)sub_1A88797A0(v3);
  }
  sub_1A8A75E08();
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return v3;
}

uint64_t sub_1A8879654(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1A8A780E8();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v4 = sub_1A8A76D48();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_1A8879710(uint64_t result)
{
  char v2 = *(unsigned char *)(v1 + 4);
  if (v2)
  {
    if (result <= 0xF7u)
    {
      uint64_t v3 = (*(_DWORD *)v1 >> result);
      *(_DWORD *)uint64_t v1 = (*(_DWORD *)v1 >> (((result + 8) >> 1) & 0x1C) >> (((result + 8) >> 1) & 0x1C) << ((result + 8 - ((((((result + 8) - result) & 0xE000u) >> 13) + 8) & 0x18)) & 0x18)) | *(_DWORD *)v1 & ((1 << ((result >> 1) & 0x1C) << ((result >> 1) & 0x1C)) - 1);
      *(unsigned char *)(v1 + 4) = v2
                         - ((((((result + 8) - result) & 0xE000u) >> 13) + 8) & 0xF8);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1A88797A0(uint64_t a1)
{
  return sub_1A8892FB0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1A88797B4(void *a1)
{
  return sub_1A8893484(0, a1[2], 0, a1);
}

uint64_t _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0;
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = a1 + 32;
  unint64_t v6 = (unsigned __int8 *)(a2 + 32);
  uint64_t result = 1;
  while (v2 == v3)
  {
    unsigned int v8 = 0;
    unint64_t v9 = v3;
    if (!v4) {
      return 0;
    }
LABEL_7:
    if (v2 == v3) {
      return result;
    }
    unsigned int v10 = *v6;
    if (v8 < v10) {
      return result;
    }
    ++v6;
    --v4;
    unint64_t v2 = v9;
    if (v10 < v8) {
      return 0;
    }
  }
  if (v2 < v3)
  {
    unsigned int v8 = *(unsigned __int8 *)(v5 + v2);
    unint64_t v9 = v2 + 1;
    if (!v4) {
      return 0;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *sub_1A887983C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E0F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1_0(a1, a1[3]);
  sub_1A8878F28();
  sub_1A8A78828();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
    sub_1A8879C1C(&qword_1E974E0F8);
    sub_1A8A78378();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1A88799DC()
{
  unint64_t result = qword_1E974E0D0;
  if (!qword_1E974E0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedString()
{
  return &type metadata for EncodedString;
}

unsigned char *storeEnumTagSinglePayload for EncodedString.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A8879ADCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedString.CodingKeys()
{
  return &type metadata for EncodedString.CodingKeys;
}

unint64_t sub_1A8879B18()
{
  unint64_t result = qword_1E974E0D8;
  if (!qword_1E974E0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0D8);
  }
  return result;
}

unint64_t sub_1A8879B70()
{
  unint64_t result = qword_1E974E0E0;
  if (!qword_1E974E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0E0);
  }
  return result;
}

unint64_t sub_1A8879BC8()
{
  unint64_t result = qword_1E974E0E8;
  if (!qword_1E974E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E0E8);
  }
  return result;
}

uint64_t sub_1A8879C1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E9740EE0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8879CA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A8879CD8()
{
  (*(void (**)(void))(v0 + 16))();
  uint64_t countAndFlagsBits = ServerResponseTranscoder.makeParsingErrorDescription()()._countAndFlagsBits;
  swift_release();
  return countAndFlagsBits;
}

uint64_t sub_1A8879D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75438();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A75318();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1A8A752E8();
  sub_1A84AB488();
  sub_1A8A753A8();
  sub_1A887B70C((uint64_t)v6, MEMORY[0x1E4FBD348]);
  sub_1A887B70C((uint64_t)v9, MEMORY[0x1E4FBD310]);
  return swift_release();
}

uint64_t sub_1A8879EC4()
{
  __int16 v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if ((_BYTE)v1)
  {
    unint64_t v2 = 0x2B6C61726574694CLL;
    if ((v1 & 0x100) != 0) {
      unint64_t v2 = 0xD000000000000010;
    }
    unint64_t v3 = 0x2D6C61726574694CLL;
    if ((v1 & 0x100) != 0) {
      unint64_t v3 = 0xD000000000000010;
    }
    if (v1 == 1) {
      return v2;
    }
    else {
      return v3;
    }
  }
  else
  {
    uint64_t v4 = 0x7972616E6942;
    if ((v1 & 0x100) == 0) {
      return 0x647261646E617453;
    }
  }
  return v4;
}

uint64_t sub_1A887A368()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A887A5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75438();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A75318();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8A76728();
  sub_1A8A75408();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1A8A752E8();
  sub_1A84AB488();
  sub_1A8A753A8();
  sub_1A887B70C((uint64_t)v6, MEMORY[0x1E4FBD348]);
  sub_1A887B70C((uint64_t)v9, MEMORY[0x1E4FBD310]);
  return swift_release();
}

uint64_t sub_1A887A774(uint64_t (*a1)(double), uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t), uint64_t (*a5)(void))
{
  uint64_t v8 = a3(0);
  double v9 = MEMORY[0x1F4188790](v8 - 8);
  int v11 = (char *)&v15 - v10;
  uint64_t v12 = a1(v9);
  uint64_t v13 = a4(v12);
  sub_1A887B70C((uint64_t)v11, a5);
  return v13;
}

unint64_t sub_1A887AB90@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t *a5@<X8>)
{
  if (a4)
  {
    if (a4 == 1) {
      uint64_t v9 = 20302;
    }
    else {
      uint64_t v9 = 4473154;
    }
    if (a4 == 1) {
      unint64_t v10 = 0xE200000000000000;
    }
    else {
      unint64_t v10 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xE200000000000000;
    uint64_t v9 = 19279;
  }
  unint64_t result = sub_1A887B6C4(a1, a2, a3, a4);
  *a5 = v9;
  a5[1] = v10;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  return result;
}

uint64_t sub_1A887B040(uint64_t (*a1)(double))
{
  uint64_t v2 = sub_1A8A765E8();
  double v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = a1(v3);
  sub_1A88A2590(v4 & 0xFFFFFFFF000000FFLL);
  sub_1A8A765C8();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
  sub_1A887B668();
  uint64_t v5 = sub_1A8A76588();
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  if (v7) {
    return v5;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A887B120()
{
  return (unint64_t)(*(uint64_t (**)(void))(v0 + 16))() >> 32;
}

uint64_t sub_1A887B14C()
{
  unsigned __int8 v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return sub_1A8878AD8(v1);
}

uint64_t sub_1A887B184()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A887B1AC()
{
  return sub_1A887A774(*(uint64_t (**)(double))(v0 + 16), *(void *)(v0 + 24), type metadata accessor for LoggableCommand, (uint64_t (*)(uint64_t))LoggableCommand.makeDescriptionWithoutPII(), type metadata accessor for LoggableCommand);
}

uint64_t sub_1A887B204()
{
  return sub_1A887A774(*(uint64_t (**)(double))(v0 + 16), *(void *)(v0 + 24), type metadata accessor for UntaggedResponse, (uint64_t (*)(uint64_t))UntaggedResponse.makeDescriptionWithoutPII(), type metadata accessor for UntaggedResponse);
}

unint64_t sub_1A887B25C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A887B2A4(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A887B2A4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1A887B2B8(result);
  }
  return result;
}

unint64_t sub_1A887B2B8(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A887B33C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1A887B350(result);
  }
  return result;
}

unint64_t sub_1A887B350(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t objectdestroy_30Tm()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 32);
  if ((~v1 & 0xF000000000000007) != 0) {
    sub_1A887B2B8(v1);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A887B430()
{
  unint64_t v1 = *(void *)(v0 + 32);
  sub_1A887B33C(v1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t sub_1A887B478(uint64_t (*a1)(void))
{
  unint64_t v1 = a1();
  ResponseText.debugDescription.getter(v1);
  uint64_t v3 = v2;
  sub_1A887B2A4(v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A887B4D4()
{
  return sub_1A887B478(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A887B4E0()
{
  uint64_t v0 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return MailboxName.init(_:)(v0);
}

uint64_t sub_1A887B50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v5);
  uint64_t v9 = sub_1A8A784D8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v9;
}

uint64_t objectdestroy_39Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A887B63C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t sub_1A887B648()
{
  return sub_1A887B50C(*(void *)(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBAF58]);
}

uint64_t sub_1A887B660()
{
  return sub_1A887B040(*(uint64_t (**)(double))(v0 + 16));
}

unint64_t sub_1A887B668()
{
  unint64_t result = qword_1E9744920;
  if (!qword_1E9744920)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract_0(&qword_1E9740EE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9744920);
  }
  return result;
}

unint64_t sub_1A887B6C4(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1A887B33C(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A887B70C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ConnectionLoggerID.engine.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*ConnectionLoggerID.engine.modify())(void)
{
  return nullsub_1;
}

unint64_t ConnectionLoggerID.connection.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t ConnectionLoggerID.connection.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

double (*ConnectionLoggerID.connection.modify())(void)
{
  return nullsub_1;
}

unint64_t ConnectionLoggerID.init(engine:connection:)(unsigned __int8 a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

char *sub_1A887B808()
{
  unint64_t result = (char *)EngineTracingID.invalid.unsafeMutableAddressor();
  static ConnectionLoggerID.invalid = *result;
  dword_1E979E2E4 = -1;
  return result;
}

char *ConnectionLoggerID.invalid.unsafeMutableAddressor()
{
  if (qword_1E974E058 != -1) {
    swift_once();
  }
  return &static ConnectionLoggerID.invalid;
}

unint64_t static ConnectionLoggerID.invalid.getter()
{
  if (qword_1E974E058 != -1) {
    swift_once();
  }
  return static ConnectionLoggerID.invalid | ((unint64_t)dword_1E979E2E4 << 32);
}

uint64_t UnderlyingConnectionID.identifier.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*UnderlyingConnectionID.identifier.modify())(void)
{
  return nullsub_1;
}

void *__swift_memcpy8_4_2(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionLoggerID()
{
  return &type metadata for ConnectionLoggerID;
}

ValueMetadata *type metadata accessor for UnderlyingConnectionID()
{
  return &type metadata for UnderlyingConnectionID;
}

unint64_t MessageData.sequenceNumber.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t MessageData.sequenceNumber.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.sequenceNumber.modify())(void)
{
  return nullsub_1;
}

unint64_t MessageData.uid.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t MessageData.uid.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.uid.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.body.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8511A9C(v1 + 16, a1, &qword_1E97461D0);
}

uint64_t MessageData.body.setter(uint64_t a1)
{
  return sub_1A887BF50(a1, v1 + 16, &qword_1E97461D0);
}

double (*MessageData.body.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.bodySections.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageData.bodySections.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 200) = a1;
  return result;
}

double (*MessageData.bodySections.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.bodyStructure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8511A9C(v1 + 208, a1, &qword_1E97461D0);
}

uint64_t MessageData.bodyStructure.setter(uint64_t a1)
{
  return sub_1A887BF50(a1, v1 + 208, &qword_1E97461D0);
}

double (*MessageData.bodyStructure.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.envelope.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8511A9C(v1 + 392, a1, &qword_1E9741FF8);
}

uint64_t MessageData.envelope.setter(uint64_t a1)
{
  return sub_1A887BF50(a1, v1 + 392, &qword_1E9741FF8);
}

double (*MessageData.envelope.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.flags.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageData.flags.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 512) = a1;
  return result;
}

double (*MessageData.flags.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.gmailLabels.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t MessageData.gmailLabels.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 520) = a1;
  return result;
}

double (*MessageData.gmailLabels.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.internalDate.getter()
{
  return *(void *)(v0 + 528);
}

uint64_t MessageData.internalDate.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 528) = result;
  *(unsigned char *)(v2 + 536) = a2 & 1;
  return result;
}

double (*MessageData.internalDate.modify())(void)
{
  return nullsub_1;
}

unint64_t MessageData.messageSize.getter()
{
  return *(unsigned int *)(v0 + 540) | ((unint64_t)*(unsigned __int8 *)(v0 + 544) << 32);
}

uint64_t MessageData.messageSize.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 540) = result;
  *(unsigned char *)(v1 + 544) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.messageSize.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.modificationSequence.getter()
{
  return *(void *)(v0 + 552);
}

uint64_t MessageData.modificationSequence.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 552) = result;
  *(unsigned char *)(v2 + 560) = a2 & 1;
  return result;
}

double (*MessageData.modificationSequence.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.preview.getter()
{
  uint64_t v1 = *(void *)(v0 + 568);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t MessageData.preview.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 568) = a1;
  *(void *)(v2 + 576) = a2;
  return result;
}

double (*MessageData.preview.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.BodySection.section.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unsigned __int8 v3 = *((unsigned char *)v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8645714(v2, v3);
  return v1;
}

uint64_t MessageData.BodySection.section.setter(uint64_t a1, uint64_t a2, char a3)
{
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A8645728(*(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = a3;
  return result;
}

double (*MessageData.BodySection.section.modify())(void)
{
  return nullsub_1;
}

unint64_t MessageData.BodySection.origin.getter()
{
  return *(unsigned int *)(v0 + 20) | ((unint64_t)*(unsigned __int8 *)(v0 + 24) << 32);
}

uint64_t MessageData.BodySection.origin.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  *(unsigned char *)(v1 + 24) = BYTE4(result) & 1;
  return result;
}

double (*MessageData.BodySection.origin.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.BodySection.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MessageData.BodySection();
  return sub_1A8511A9C(v1 + *(int *)(v3 + 24), a1, &qword_1E9742930);
}

uint64_t type metadata accessor for MessageData.BodySection()
{
  uint64_t result = qword_1E9742940;
  if (!qword_1E9742940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MessageData.BodySection.data.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MessageData.BodySection();
  return sub_1A887BF50(a1, v1 + *(int *)(v3 + 24), &qword_1E9742930);
}

uint64_t sub_1A887BF50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

double (*MessageData.BodySection.data.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.BodySection.init(section:origin:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = a6 + *(int *)(type metadata accessor for MessageData.BodySection() + 24);
  uint64_t v13 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(_DWORD *)(a6 + 20) = a4;
  *(unsigned char *)(a6 + 24) = BYTE4(a4) & 1;
  return sub_1A887BF50(a5, v12, &qword_1E9742930);
}

void *MessageData.init(sequenceNumber:uid:body:bodySections:bodyStructure:envelope:flags:gmailLabels:internalDate:messageSize:modificationSequence:preview:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11, int a12, int a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18)
{
  sub_1A8529F8C(a6, (uint64_t)v37, &qword_1E9741FF8);
  long long v30 = v37[1];
  long long v31 = v37[0];
  long long v28 = v37[3];
  long long v29 = v37[2];
  long long v26 = v37[5];
  long long v27 = v37[4];
  long long v25 = v37[6];
  uint64_t v23 = v38;
  sub_1A8529F8C(a5, (uint64_t)v36, &qword_1E97461D0);
  sub_1A8529F8C((uint64_t)v36, (uint64_t)v39, &qword_1E97461D0);
  sub_1A8529F8C(a3, (uint64_t)v35, &qword_1E97461D0);
  sub_1A8529F8C((uint64_t)v35, (uint64_t)v40, &qword_1E97461D0);
  LODWORD(__src[0]) = a1;
  BYTE4(__src[0]) = BYTE4(a1) & 1;
  LODWORD(__src[1]) = a2;
  BYTE4(__src[1]) = BYTE4(a2) & 1;
  sub_1A8529F8C((uint64_t)v40, (uint64_t)&__src[2], &qword_1E97461D0);
  __src[25] = a4;
  sub_1A8529F8C((uint64_t)v39, (uint64_t)&__src[26], &qword_1E97461D0);
  *(_OWORD *)&__src[49] = v31;
  *(_OWORD *)&__src[51] = v30;
  *(_OWORD *)&__src[53] = v29;
  *(_OWORD *)&__src[55] = v28;
  *(_OWORD *)&__src[57] = v27;
  *(_OWORD *)&__src[59] = v26;
  *(_OWORD *)&__src[61] = v25;
  __src[63] = v23;
  __src[64] = a7;
  __src[65] = a8;
  __src[66] = a10;
  LOBYTE(__src[67]) = a11 & 1;
  HIDWORD(__src[67]) = a13;
  LOBYTE(__src[68]) = a14 & 1;
  __src[69] = a15;
  LOBYTE(__src[70]) = a16 & 1;
  __src[71] = a17;
  __src[72] = a18;
  return memcpy(a9, __src, 0x248uLL);
}

uint64_t sub_1A887C2D0(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_1A887C328()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741410);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A8A74CF8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A74D58();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer_0(v9, qword_1E9741A08);
  uint64_t v12 = __swift_project_value_buffer_0(v7, (uint64_t)qword_1E9741A08);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F27B20], v3);
  sub_1A8A74D08();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1A8A74E48();
  uint64_t v13 = sub_1A8A74E88();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v2, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1A8A74D38();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v11, v7);
  }
  return result;
}

uint64_t ServerMessageDate.date.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741410);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v31 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97413E8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A8A74668();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v37 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A8A74D58();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v36 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9741A20 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer_0(v15, (uint64_t)qword_1E9741A08);
  unsigned __int8 v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  unint64_t v35 = v18;
  v22(v18, v21, v15);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v11, 1, 1, v15);
  ServerMessageDate.components.getter(a1, (uint64_t)&v38);
  uint64_t result = 60 * v39;
  if ((unsigned __int128)(v39 * (__int128)60) >> 64 != (60 * v39) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  v31[0] = v15;
  v31[1] = v11;
  uint64_t v32 = v13;
  uint64_t v33 = v12;
  sub_1A8A74E68();
  uint64_t v24 = sub_1A8A74E88();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v5, 1, v24);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v8, v5, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v24);
  ServerMessageDate.components.getter(a1, (uint64_t)&v40);
  ServerMessageDate.components.getter(a1, (uint64_t)&v41);
  ServerMessageDate.components.getter(a1, (uint64_t)&v42);
  ServerMessageDate.components.getter(a1, (uint64_t)v43);
  ServerMessageDate.components.getter(a1, (uint64_t)v44);
  ServerMessageDate.components.getter(a1, (uint64_t)v45);
  long long v26 = v37;
  sub_1A8A74648();
  long long v27 = v35;
  long long v28 = v36;
  sub_1A8A74D28();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  (*(void (**)(char *, void))(v16 + 8))(v27, v31[0]);
  uint64_t v29 = sub_1A8A74C38();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v34, v28, v29);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t ServerMessageDate.init(_:)(char *a1)
{
  uint64_t v51 = a1;
  uint64_t v47 = sub_1A8A74C38();
  uint64_t v49 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741410);
  MEMORY[0x1F4188790](v2 - 8);
  char v48 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v4 = sub_1A8A74D58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1A8A74668();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9741A20 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer_0(v4, (uint64_t)qword_1E9741A08);
  (*(void (**)(char *, uint64_t, Swift::Int))(v5 + 16))(v7, v10, v4);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745908);
  Swift::Int v50 = v4;
  uint64_t v11 = sub_1A8A74D48();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A8AD8FA0;
  unint64_t v16 = v15 + v14;
  uint64_t v17 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
  v17(v16, *MEMORY[0x1E4F27C20], v11);
  v17(v16 + v13, *MEMORY[0x1E4F27C30], v11);
  v17(v16 + 2 * v13, *MEMORY[0x1E4F27BF0], v11);
  v17(v16 + 3 * v13, *MEMORY[0x1E4F27C10], v11);
  v17(v16 + 4 * v13, *MEMORY[0x1E4F27C48], v11);
  v17(v16 + 5 * v13, *MEMORY[0x1E4F27C50], v11);
  v17(v16 + 6 * v13, *MEMORY[0x1E4F27C80], v11);
  sub_1A887DF08(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1A8A74D18();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, Swift::Int))(v5 + 8))(v7, v50);
  uint64_t result = sub_1A8A745F8();
  if (v19)
  {
    __break(1u);
    goto LABEL_13;
  }
  Swift::Int v20 = result;
  uint64_t result = sub_1A8A74608();
  if (v21)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  Swift::Int v22 = result;
  uint64_t result = sub_1A8A745D8();
  uint64_t v23 = v49;
  uint64_t v24 = v48;
  if (v25)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::Int v26 = result;
  uint64_t result = sub_1A8A745E8();
  if (v27)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  Swift::Int v28 = result;
  uint64_t result = sub_1A8A74618();
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  Swift::Int v30 = result;
  uint64_t result = sub_1A8A74628();
  if (v31)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  Swift::Int v41 = result;
  Swift::Int v42 = v30;
  Swift::Int v43 = v28;
  Swift::Int v50 = v26;
  sub_1A8A74658();
  uint64_t v32 = sub_1A8A74E88();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v24, 1, v32);
  if (result == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v34 = v46;
  sub_1A8A74C28();
  uint64_t v35 = sub_1A8A74E58();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v37 = v34;
  uint64_t v38 = v47;
  v36(v37, v47);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v32);
  ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(&v52, v20, v22, v50, v43, v42, v41, v35 / 60);
  uint64_t result = sub_1A8529F8C((uint64_t)&v52, (uint64_t)v53, &qword_1E9741A00);
  if ((v55 & 1) == 0)
  {
    v56[0] = v53[0];
    v56[1] = v53[1];
    v56[2] = v53[2];
    uint64_t v57 = v54;
    unint64_t v39 = ServerMessageDate.init(_:)((unint64_t *)v56);
    v36(v51, v38);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
    return v39;
  }
LABEL_19:
  __break(1u);
  return result;
}

BOOL _s13IMAP2Protocol11MessageDataV11BodySectionV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E098);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)v31 - v15;
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)v31 - v18;
  if (!static SectionSpecifier.__derived_struct_equals(_:_:)(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void **)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)))return 0; {
  char v20 = *(unsigned char *)(a2 + 24);
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 20) != *(_DWORD *)(a2 + 20)) {
      char v20 = 1;
    }
    if (v20) {
      return 0;
    }
  }
  v31[0] = (uint64_t)v7;
  uint64_t v21 = type metadata accessor for MessageData.BodySection();
  sub_1A8511A9C(a1 + *(int *)(v21 + 24), (uint64_t)v19, &qword_1E9742930);
  sub_1A8511A9C(a2 + *(int *)(v21 + 24), (uint64_t)v16, &qword_1E9742930);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1A8511A9C((uint64_t)v19, (uint64_t)v10, &qword_1E9742930);
  sub_1A8511A9C((uint64_t)v16, v22, &qword_1E9742930);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_1A8511B00((uint64_t)v16, &qword_1E9742930);
    sub_1A8511B00((uint64_t)v19, &qword_1E9742930);
    if (v23(v22, 1, v4) == 1)
    {
      uint64_t v24 = (uint64_t)v10;
      goto LABEL_17;
    }
    char v25 = &qword_1E974E098;
  }
  else
  {
    sub_1A8511A9C((uint64_t)v10, (uint64_t)v13, &qword_1E9742930);
    if (v23(v22, 1, v4) == 1)
    {
      char v25 = &qword_1E974E098;
    }
    else
    {
      uint64_t v26 = v31[0];
      sub_1A88805DC(v22, v31[0]);
      uint64_t v27 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      if (v27 == _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
      {
        sub_1A8A75E28();
        sub_1A8880640((unint64_t *)&qword_1E9743A98, MEMORY[0x1E4FBCBA0]);
        sub_1A8A77198();
        uint64_t v28 = sub_1A8A771E8();
        if (v32 != v31[2])
        {
          MEMORY[0x1F4188790](v28);
          v31[-2] = v26;
          v31[-1] = (uint64_t)v13;
          sub_1A8A75D88();
          char v30 = v32;
          sub_1A887FD58(v26);
          sub_1A8511B00((uint64_t)v16, &qword_1E9742930);
          sub_1A8511B00((uint64_t)v19, &qword_1E9742930);
          sub_1A887FD58((uint64_t)v13);
          sub_1A8511B00((uint64_t)v10, &qword_1E9742930);
          return (v30 & 1) != 0;
        }
        sub_1A887FD58(v26);
        sub_1A8511B00((uint64_t)v16, &qword_1E9742930);
        sub_1A8511B00((uint64_t)v19, &qword_1E9742930);
        sub_1A887FD58((uint64_t)v13);
        uint64_t v24 = (uint64_t)v10;
LABEL_17:
        sub_1A8511B00(v24, &qword_1E9742930);
        return 1;
      }
      sub_1A887FD58(v26);
      char v25 = &qword_1E9742930;
    }
    sub_1A8511B00((uint64_t)v16, &qword_1E9742930);
    sub_1A8511B00((uint64_t)v19, &qword_1E9742930);
    sub_1A887FD58((uint64_t)v13);
  }
  sub_1A8511B00((uint64_t)v10, v25);
  return 0;
}

uint64_t _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a2 != *(_DWORD *)a1) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  char v5 = *(unsigned char *)(a2 + 12);
  if (*(unsigned char *)(a1 + 12))
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 8) != *(_DWORD *)(a1 + 8)) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  sub_1A8529F8C(a1 + 16, (uint64_t)v104, &qword_1E97461D0);
  sub_1A8529F8C(a2 + 16, (uint64_t)v105, &qword_1E97461D0);
  sub_1A8529F8C((uint64_t)v104, (uint64_t)v106, &qword_1E97461D0);
  if (sub_1A856B98C((uint64_t)v106) == 1)
  {
    sub_1A8529F8C((uint64_t)v105, (uint64_t)&v80, &qword_1E97461D0);
    if (sub_1A856B98C((uint64_t)&v80) == 1) {
      goto LABEL_20;
    }
LABEL_17:
    sub_1A8529F8C((uint64_t)v104, (uint64_t)&v80, &qword_1E97461D0);
    sub_1A8529F8C((uint64_t)v105, (uint64_t)v103, &qword_1E97461D0);
    sub_1A8880568((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
    uint64_t v6 = v105;
LABEL_18:
    sub_1A8880568((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
    sub_1A888035C((uint64_t)&v80);
    return 0;
  }
  sub_1A8529F8C((uint64_t)v105, (uint64_t)&v80, &qword_1E97461D0);
  if (sub_1A856B98C((uint64_t)&v80) == 1) {
    goto LABEL_17;
  }
  sub_1A8529F8C((uint64_t)v104, (uint64_t)v107, &qword_1E97461D0);
  sub_1A8644AD0((uint64_t)v107, (uint64_t)v109);
  sub_1A8529F8C((uint64_t)v105, (uint64_t)v108, &qword_1E97461D0);
  sub_1A8644AD0((uint64_t)v108, (uint64_t)v110);
  sub_1A8880568((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
  sub_1A8880568((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
  char v7 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v109, v110);
  sub_1A8880568((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
  sub_1A8880568((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
  if ((v7 & 1) == 0) {
    return 0;
  }
LABEL_20:
  if ((sub_1A886C5D8(*(void *)(a1 + 200), *(void *)(a2 + 200)) & 1) == 0) {
    return 0;
  }
  sub_1A8529F8C(a1 + 208, (uint64_t)v77, &qword_1E97461D0);
  sub_1A8529F8C(a2 + 208, (uint64_t)v78, &qword_1E97461D0);
  sub_1A8529F8C((uint64_t)v77, (uint64_t)v79, &qword_1E97461D0);
  if (sub_1A856B98C((uint64_t)v79) == 1)
  {
    sub_1A8529F8C((uint64_t)v78, (uint64_t)&v80, &qword_1E97461D0);
    if (sub_1A856B98C((uint64_t)&v80) == 1) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  sub_1A8529F8C((uint64_t)v78, (uint64_t)&v80, &qword_1E97461D0);
  if (sub_1A856B98C((uint64_t)&v80) == 1)
  {
LABEL_25:
    sub_1A8529F8C((uint64_t)v77, (uint64_t)&v80, &qword_1E97461D0);
    sub_1A8529F8C((uint64_t)v78, (uint64_t)v103, &qword_1E97461D0);
    sub_1A8880568((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
    uint64_t v6 = v78;
    goto LABEL_18;
  }
  sub_1A8529F8C((uint64_t)v77, (uint64_t)v62, &qword_1E97461D0);
  sub_1A8644AD0((uint64_t)v62, (uint64_t)v107);
  sub_1A8529F8C((uint64_t)v78, (uint64_t)v63, &qword_1E97461D0);
  sub_1A8644AD0((uint64_t)v63, (uint64_t)v108);
  sub_1A8880568((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
  sub_1A8880568((uint64_t)v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644C2C);
  char v8 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v107, v108);
  sub_1A8880568((uint64_t)v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
  sub_1A8880568((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
  if ((v8 & 1) == 0) {
    return 0;
  }
LABEL_27:
  uint64_t result = *(void *)(a1 + 392);
  uint64_t v10 = *(void *)(a1 + 400);
  uint64_t v11 = *(void *)(a1 + 408);
  uint64_t v12 = *(void *)(a1 + 416);
  uint64_t v13 = *(void *)(a1 + 424);
  uint64_t v14 = *(void *)(a1 + 432);
  uint64_t v15 = *(void *)(a1 + 440);
  uint64_t v16 = *(void *)(a1 + 448);
  uint64_t v17 = *(void *)(a1 + 456);
  uint64_t v18 = *(void *)(a1 + 464);
  uint64_t v19 = *(void *)(a1 + 472);
  uint64_t v20 = *(void *)(a1 + 480);
  uint64_t v22 = *(void *)(a1 + 488);
  uint64_t v21 = *(void *)(a1 + 496);
  uint64_t v23 = *(void *)(a1 + 504);
  uint64_t v24 = *(void *)(a2 + 392);
  uint64_t v25 = *(void *)(a2 + 400);
  uint64_t v26 = *(void *)(a2 + 408);
  uint64_t v27 = *(void *)(a2 + 416);
  uint64_t v29 = *(void *)(a2 + 424);
  uint64_t v28 = *(void *)(a2 + 432);
  uint64_t v30 = *(void *)(a2 + 440);
  uint64_t v31 = *(void *)(a2 + 448);
  uint64_t v32 = *(void *)(a2 + 456);
  uint64_t v57 = *(void *)(a2 + 464);
  uint64_t v58 = *(void *)(a2 + 472);
  uint64_t v33 = *(void *)(a2 + 480);
  uint64_t v60 = *(void *)(a2 + 496);
  uint64_t v61 = *(void *)(a2 + 488);
  uint64_t v59 = *(void *)(a2 + 504);
  if (!v14)
  {
    if (!v28) {
      goto LABEL_34;
    }
LABEL_32:
    uint64_t v80 = *(void *)(a1 + 392);
    uint64_t v81 = v10;
    uint64_t v82 = v11;
    uint64_t v83 = v12;
    uint64_t v84 = v13;
    uint64_t v85 = v14;
    uint64_t v86 = v15;
    uint64_t v87 = v16;
    uint64_t v88 = v17;
    uint64_t v89 = v18;
    uint64_t v90 = v19;
    uint64_t v91 = v20;
    uint64_t v92 = v22;
    uint64_t v93 = v21;
    uint64_t v94 = v23;
    uint64_t v95 = v24;
    uint64_t v96 = v25;
    uint64_t v97 = v26;
    uint64_t v98 = v27;
    uint64_t v99 = v29;
    uint64_t v100 = v28;
    uint64_t v101 = v30;
    uint64_t v102 = v31;
    v103[0] = v32;
    v103[1] = v57;
    v103[2] = v58;
    v103[3] = v33;
    v103[4] = v61;
    v103[5] = v60;
    v103[6] = v59;
    uint64_t v35 = v26;
    sub_1A86A8C90(result, v10, v11, v12, v13, v14);
    sub_1A86A8C90(v24, v25, v35, v27, v29, v28);
    sub_1A8880488(&v80);
    return 0;
  }
  if (!v28) {
    goto LABEL_32;
  }
  v63[0] = *(void *)(a1 + 392);
  v63[1] = v10;
  v63[2] = v11;
  v63[3] = v12;
  int v64 = v13;
  char v66 = BYTE6(v13);
  __int16 v65 = WORD2(v13);
  uint64_t v55 = v14;
  uint64_t v67 = v14;
  uint64_t v68 = v15;
  uint64_t v69 = v16;
  uint64_t v70 = v17;
  uint64_t v71 = v18;
  uint64_t v72 = v19;
  uint64_t v73 = v20;
  uint64_t v74 = v22;
  uint64_t v75 = v21;
  uint64_t v76 = v23;
  uint64_t v56 = v24;
  uint64_t v80 = v24;
  uint64_t v81 = v25;
  uint64_t v34 = v26;
  uint64_t v82 = v26;
  uint64_t v83 = v27;
  LODWORD(v84) = v29;
  BYTE6(v84) = BYTE6(v29);
  WORD2(v84) = WORD2(v29);
  uint64_t v85 = v28;
  uint64_t v86 = v30;
  uint64_t v87 = v31;
  uint64_t v88 = v32;
  uint64_t v89 = v57;
  uint64_t v90 = v58;
  uint64_t v91 = v33;
  uint64_t v92 = v61;
  uint64_t v93 = v60;
  uint64_t v94 = v59;
  uint64_t v51 = result;
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  uint64_t v54 = v12;
  uint64_t v50 = v13;
  uint64_t v48 = v26;
  sub_1A86A8C90(result, v10, v11, v12, v13, v14);
  sub_1A86A8C90(v56, v25, v34, v27, v29, v28);
  BOOL v49 = static Envelope.__derived_struct_equals(_:_:)(v63, (uint64_t)&v80);
  sub_1A856B8CC(v56, v25, v48, v27, v29, v28);
  uint64_t result = sub_1A856B8CC(v51, v52, v53, v54, v50, v55);
  if (!v49) {
    return 0;
  }
LABEL_34:
  uint64_t v36 = *(void *)(a2 + 512);
  if (*(void *)(a1 + 512))
  {
    if (!v36) {
      return 0;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v37 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v38 = sub_1A851DC54(v37, v36);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v38 & 1) == 0) {
      return 0;
    }
  }
  else if (v36)
  {
    return 0;
  }
  uint64_t v39 = *(void *)(a2 + 520);
  if (*(void *)(a1 + 520))
  {
    if (!v39) {
      return 0;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v40 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v41 = sub_1A851D8F4(v40, v39);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v41 & 1) == 0) {
      return 0;
    }
  }
  else if (v39)
  {
    return 0;
  }
  char v42 = *(unsigned char *)(a2 + 536);
  if (*(unsigned char *)(a1 + 536))
  {
    if (!*(unsigned char *)(a2 + 536)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 528) != *(void *)(a2 + 528)) {
      char v42 = 1;
    }
    if (v42) {
      return 0;
    }
  }
  char v43 = *(unsigned char *)(a2 + 544);
  if (*(unsigned char *)(a1 + 544))
  {
    if (!*(unsigned char *)(a2 + 544)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 540) != *(_DWORD *)(a2 + 540)) {
      char v43 = 1;
    }
    if (v43) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 560))
  {
    if ((*(unsigned char *)(a2 + 560) & 1) == 0) {
      return 0;
    }
    goto LABEL_62;
  }
  if (*(unsigned char *)(a2 + 560)) {
    return 0;
  }
  uint64_t v44 = *(void *)(a1 + 552);
  uint64_t v45 = *(void *)(a2 + 552);
  if (((v45 | v44) & 0x8000000000000000) == 0)
  {
    if (v45 != v44) {
      return 0;
    }
LABEL_62:
    uint64_t v46 = *(void *)(a1 + 576);
    uint64_t v47 = *(void *)(a2 + 576);
    if (v46) {
      return v47 && (*(void *)(a1 + 568) == *(void *)(a2 + 568) && v46 == v47 || (sub_1A8A78588() & 1) != 0);
    }
    return !v47;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A887DF08(uint64_t a1)
{
  uint64_t v2 = sub_1A8A74D48();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451C8);
    uint64_t v9 = sub_1A8A77D78();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1A8880640(&qword_1E97413C8, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1A8A76218();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1A8880640(&qword_1E97413D8, MEMORY[0x1E4F27C88]);
          char v23 = sub_1A8A76498();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t initializeWithCopy for MessageData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  int v4 = *(unsigned __int8 *)(a2 + 192);
  if (v4 == 254 || v4 == 255)
  {
    long long v5 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v5;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    long long v6 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v6;
    long long v7 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v7;
    long long v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    char v75 = v4 & 1;
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v47 = *(void *)(a2 + 80);
    uint64_t v49 = *(void *)(a2 + 88);
    uint64_t v51 = *(void *)(a2 + 96);
    uint64_t v53 = *(void *)(a2 + 104);
    uint64_t v55 = *(void *)(a2 + 112);
    uint64_t v57 = *(void *)(a2 + 120);
    uint64_t v59 = *(void *)(a2 + 128);
    uint64_t v61 = *(void *)(a2 + 136);
    uint64_t v63 = *(void *)(a2 + 144);
    uint64_t v65 = *(void *)(a2 + 152);
    uint64_t v67 = *(void *)(a2 + 160);
    uint64_t v69 = *(void *)(a2 + 168);
    uint64_t v71 = *(void *)(a2 + 176);
    uint64_t v73 = *(void *)(a2 + 184);
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(a2 + 24);
    uint64_t v15 = *(void *)(a2 + 32);
    uint64_t v16 = *(void *)(a2 + 40);
    uint64_t v17 = *(void *)(a2 + 72);
    sub_1A86409B8(v13, v14, v15, v16, v10, v11, v12, v17, v47, v49, v51, v53, v55, v57, v59, v61, v63, v65, v67,
      v69,
      v71,
      v73,
      v4 & 1);
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v16;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v47;
    *(void *)(a1 + 88) = v49;
    *(void *)(a1 + 96) = v51;
    *(void *)(a1 + 104) = v53;
    *(void *)(a1 + 112) = v55;
    *(void *)(a1 + 120) = v57;
    *(void *)(a1 + 128) = v59;
    *(void *)(a1 + 136) = v61;
    *(void *)(a1 + 144) = v63;
    *(void *)(a1 + 152) = v65;
    *(void *)(a1 + 160) = v67;
    *(void *)(a1 + 168) = v69;
    *(void *)(a1 + 176) = v71;
    *(void *)(a1 + 184) = v73;
    *(unsigned char *)(a1 + 192) = v75;
  }
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  int v18 = *(unsigned __int8 *)(a2 + 384);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v18 == 254 || v18 == 255)
  {
    long long v19 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v19;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    long long v20 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v20;
    long long v21 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v21;
    long long v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
    long long v23 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v23;
  }
  else
  {
    char v76 = v18 & 1;
    uint64_t v24 = *(void *)(a2 + 240);
    uint64_t v25 = *(void *)(a2 + 248);
    uint64_t v26 = *(void *)(a2 + 256);
    uint64_t v48 = *(void *)(a2 + 272);
    uint64_t v50 = *(void *)(a2 + 280);
    uint64_t v52 = *(void *)(a2 + 288);
    uint64_t v54 = *(void *)(a2 + 296);
    uint64_t v56 = *(void *)(a2 + 304);
    uint64_t v58 = *(void *)(a2 + 312);
    uint64_t v60 = *(void *)(a2 + 320);
    uint64_t v62 = *(void *)(a2 + 328);
    uint64_t v64 = *(void *)(a2 + 336);
    uint64_t v66 = *(void *)(a2 + 344);
    uint64_t v68 = *(void *)(a2 + 352);
    uint64_t v70 = *(void *)(a2 + 360);
    uint64_t v72 = *(void *)(a2 + 368);
    uint64_t v74 = *(void *)(a2 + 376);
    char v46 = v18 & 1;
    uint64_t v27 = *(void *)(a2 + 208);
    uint64_t v28 = *(void *)(a2 + 216);
    uint64_t v29 = *(void *)(a2 + 224);
    uint64_t v30 = *(void *)(a2 + 232);
    uint64_t v31 = *(void *)(a2 + 264);
    sub_1A86409B8(v27, v28, v29, v30, v24, v25, v26, v31, v48, v50, v52, v54, v56, v58, v60, v62, v64, v66, v68,
      v70,
      v72,
      v74,
      v46);
    *(void *)(a1 + 208) = v27;
    *(void *)(a1 + 216) = v28;
    *(void *)(a1 + 224) = v29;
    *(void *)(a1 + 232) = v30;
    *(void *)(a1 + 240) = v24;
    *(void *)(a1 + 248) = v25;
    *(void *)(a1 + 256) = v26;
    *(void *)(a1 + 264) = v31;
    *(void *)(a1 + 272) = v48;
    *(void *)(a1 + 280) = v50;
    *(void *)(a1 + 288) = v52;
    *(void *)(a1 + 296) = v54;
    *(void *)(a1 + 304) = v56;
    *(void *)(a1 + 312) = v58;
    *(void *)(a1 + 320) = v60;
    *(void *)(a1 + 328) = v62;
    *(void *)(a1 + 336) = v64;
    *(void *)(a1 + 344) = v66;
    *(void *)(a1 + 352) = v68;
    *(void *)(a1 + 360) = v70;
    *(void *)(a1 + 368) = v72;
    *(void *)(a1 + 376) = v74;
    *(unsigned char *)(a1 + 384) = v76;
  }
  uint64_t v32 = *(void *)(a2 + 432);
  if (v32)
  {
    uint64_t v33 = *(void *)(a2 + 400);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = v33;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
    *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
    uint64_t v34 = *(void *)(a2 + 440);
    uint64_t v35 = *(void *)(a2 + 448);
    *(void *)(a1 + 432) = v32;
    *(void *)(a1 + 440) = v34;
    uint64_t v36 = *(void *)(a2 + 456);
    uint64_t v37 = *(void *)(a2 + 464);
    *(void *)(a1 + 448) = v35;
    *(void *)(a1 + 456) = v36;
    uint64_t v39 = *(void *)(a2 + 472);
    uint64_t v38 = *(void *)(a2 + 480);
    *(void *)(a1 + 464) = v37;
    *(void *)(a1 + 472) = v39;
    uint64_t v41 = *(void *)(a2 + 488);
    uint64_t v40 = *(void *)(a2 + 496);
    *(void *)(a1 + 480) = v38;
    *(void *)(a1 + 488) = v41;
    uint64_t v77 = *(void *)(a2 + 504);
    *(void *)(a1 + 496) = v40;
    *(void *)(a1 + 504) = v77;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    long long v42 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v42;
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    long long v43 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v43;
    long long v44 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v44;
  }
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  *(_DWORD *)(a1 + 540) = *(_DWORD *)(a2 + 540);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for MessageData(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  LOBYTE(v4) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = a2[2];
  *(unsigned char *)(a1 + 12) = v4;
  uint64_t v5 = a1 + 16;
  long long v6 = (long long *)(a2 + 4);
  int v7 = *(unsigned __int8 *)(a1 + 192);
  int v8 = *((unsigned __int8 *)a2 + 192);
  if (v7 == 254)
  {
    if (v8 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v8 == 254)
  {
    sub_1A8641500(a1 + 16);
    goto LABEL_12;
  }
  if (v7 != 255)
  {
    if (v8 != 255)
    {
      char v192 = v8 & 1;
      uint64_t v84 = *((void *)a2 + 6);
      uint64_t v85 = *((void *)a2 + 7);
      uint64_t v86 = *((void *)a2 + 8);
      uint64_t v137 = *((void *)a2 + 10);
      uint64_t v141 = *((void *)a2 + 11);
      uint64_t v145 = *((void *)a2 + 12);
      uint64_t v149 = *((void *)a2 + 13);
      uint64_t v153 = *((void *)a2 + 14);
      uint64_t v157 = *((void *)a2 + 15);
      uint64_t v161 = *((void *)a2 + 16);
      uint64_t v165 = *((void *)a2 + 17);
      uint64_t v169 = *((void *)a2 + 18);
      uint64_t v173 = *((void *)a2 + 19);
      uint64_t v177 = *((void *)a2 + 20);
      uint64_t v181 = *((void *)a2 + 21);
      uint64_t v185 = *((void *)a2 + 22);
      uint64_t v189 = *((void *)a2 + 23);
      uint64_t v87 = *((void *)a2 + 2);
      uint64_t v88 = *((void *)a2 + 3);
      uint64_t v89 = *((void *)a2 + 4);
      uint64_t v90 = *((void *)a2 + 5);
      uint64_t v91 = *((void *)a2 + 9);
      sub_1A86409B8(v87, v88, v89, v90, v84, v85, v86, v91, v137, v141, v145, v149, v153, v157, v161, v165, v169, v173, v177,
        v181,
        v185,
        v189,
        v8 & 1);
      uint64_t v92 = *(void *)(a1 + 16);
      uint64_t v93 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v87;
      *(void *)(a1 + 24) = v88;
      uint64_t v94 = *(void *)(a1 + 32);
      uint64_t v95 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v89;
      *(void *)(a1 + 40) = v90;
      uint64_t v96 = *(void *)(a1 + 48);
      uint64_t v97 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v84;
      *(void *)(a1 + 56) = v85;
      uint64_t v98 = *(void *)(a1 + 64);
      uint64_t v99 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v86;
      *(void *)(a1 + 72) = v91;
      long long v100 = *(_OWORD *)(a1 + 80);
      long long v101 = *(_OWORD *)(a1 + 96);
      *(void *)(a1 + 80) = v137;
      *(void *)(a1 + 88) = v141;
      *(void *)(a1 + 96) = v145;
      *(void *)(a1 + 104) = v149;
      long long v102 = *(_OWORD *)(a1 + 112);
      long long v103 = *(_OWORD *)(a1 + 128);
      *(void *)(a1 + 112) = v153;
      *(void *)(a1 + 120) = v157;
      *(void *)(a1 + 128) = v161;
      *(void *)(a1 + 136) = v165;
      long long v104 = *(_OWORD *)(a1 + 144);
      long long v105 = *(_OWORD *)(a1 + 160);
      *(void *)(a1 + 144) = v169;
      *(void *)(a1 + 152) = v173;
      *(void *)(a1 + 160) = v177;
      *(void *)(a1 + 168) = v181;
      uint64_t v106 = *(void *)(a1 + 176);
      uint64_t v107 = *(void *)(a1 + 184);
      *(void *)(a1 + 176) = v185;
      *(void *)(a1 + 184) = v189;
      char v108 = *(unsigned char *)(a1 + 192);
      *(unsigned char *)(a1 + 192) = v192;
      sub_1A856B460(v92, v93, v94, v95, v96, v97, v98, v99, v100, *((uint64_t *)&v100 + 1), v101, *((uint64_t *)&v101 + 1), v102, *((uint64_t *)&v102 + 1), v103, *((uint64_t *)&v103 + 1), v104, *((uint64_t *)&v104 + 1), v105,
        *((uint64_t *)&v105 + 1),
        v106,
        v107,
        v108);
      goto LABEL_13;
    }
    sub_1A86414AC(a1 + 16);
LABEL_12:
    long long v26 = v6[3];
    long long v28 = *v6;
    long long v27 = v6[1];
    *(_OWORD *)(v5 + 32) = v6[2];
    *(_OWORD *)(v5 + 48) = v26;
    *(_OWORD *)uint64_t v5 = v28;
    *(_OWORD *)(v5 + 16) = v27;
    long long v29 = v6[7];
    long long v31 = v6[4];
    long long v30 = v6[5];
    *(_OWORD *)(v5 + 96) = v6[6];
    *(_OWORD *)(v5 + 112) = v29;
    *(_OWORD *)(v5 + 64) = v31;
    *(_OWORD *)(v5 + 80) = v30;
    long long v33 = v6[9];
    long long v32 = v6[10];
    long long v34 = v6[8];
    *(unsigned char *)(v5 + 176) = *((unsigned char *)v6 + 176);
    *(_OWORD *)(v5 + 144) = v33;
    *(_OWORD *)(v5 + 160) = v32;
    *(_OWORD *)(v5 + 128) = v34;
    goto LABEL_13;
  }
LABEL_7:
  if (v8 == 255)
  {
LABEL_8:
    long long v9 = *v6;
    long long v10 = *((_OWORD *)a2 + 2);
    long long v11 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)uint64_t v5 = v9;
    *(_OWORD *)(a1 + 32) = v10;
    long long v12 = *((_OWORD *)a2 + 5);
    long long v13 = *((_OWORD *)a2 + 6);
    long long v14 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v14;
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = v13;
    long long v15 = *((_OWORD *)a2 + 9);
    long long v16 = *((_OWORD *)a2 + 10);
    long long v17 = *((_OWORD *)a2 + 11);
    *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
    *(_OWORD *)(a1 + 160) = v16;
    *(_OWORD *)(a1 + 176) = v17;
    *(_OWORD *)(a1 + 144) = v15;
    goto LABEL_13;
  }
  char v191 = v8 & 1;
  uint64_t v18 = *((void *)a2 + 6);
  uint64_t v19 = *((void *)a2 + 7);
  uint64_t v20 = *((void *)a2 + 8);
  uint64_t v135 = *((void *)a2 + 10);
  uint64_t v139 = *((void *)a2 + 11);
  uint64_t v143 = *((void *)a2 + 12);
  uint64_t v147 = *((void *)a2 + 13);
  uint64_t v151 = *((void *)a2 + 14);
  uint64_t v155 = *((void *)a2 + 15);
  uint64_t v159 = *((void *)a2 + 16);
  uint64_t v163 = *((void *)a2 + 17);
  uint64_t v167 = *((void *)a2 + 18);
  uint64_t v171 = *((void *)a2 + 19);
  uint64_t v175 = *((void *)a2 + 20);
  uint64_t v179 = *((void *)a2 + 21);
  uint64_t v183 = *((void *)a2 + 22);
  uint64_t v187 = *((void *)a2 + 23);
  uint64_t v21 = *((void *)a2 + 2);
  uint64_t v22 = *((void *)a2 + 3);
  uint64_t v23 = *((void *)a2 + 4);
  uint64_t v24 = *((void *)a2 + 5);
  uint64_t v25 = *((void *)a2 + 9);
  sub_1A86409B8(v21, v22, v23, v24, v18, v19, v20, v25, v135, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175,
    v179,
    v183,
    v187,
    v8 & 1);
  *(void *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v24;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v135;
  *(void *)(a1 + 88) = v139;
  *(void *)(a1 + 96) = v143;
  *(void *)(a1 + 104) = v147;
  *(void *)(a1 + 112) = v151;
  *(void *)(a1 + 120) = v155;
  *(void *)(a1 + 128) = v159;
  *(void *)(a1 + 136) = v163;
  *(void *)(a1 + 144) = v167;
  *(void *)(a1 + 152) = v171;
  *(void *)(a1 + 160) = v175;
  *(void *)(a1 + 168) = v179;
  *(void *)(a1 + 176) = v183;
  *(void *)(a1 + 184) = v187;
  *(unsigned char *)(a1 + 192) = v191;
LABEL_13:
  *(void *)(a1 + 200) = *((void *)a2 + 25);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v35 = (_OWORD *)(a1 + 208);
  uint64_t v36 = (long long *)(a2 + 52);
  int v37 = *(unsigned __int8 *)(a1 + 384);
  int v38 = *((unsigned __int8 *)a2 + 384);
  if (v37 == 254)
  {
    if (v38 == 254) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v38 == 254)
  {
    sub_1A8641500(a1 + 208);
    goto LABEL_24;
  }
  if (v37 != 255)
  {
    if (v38 != 255)
    {
      char v190 = v38 & 1;
      uint64_t v109 = *((void *)a2 + 31);
      uint64_t v110 = *((void *)a2 + 32);
      uint64_t v134 = *((void *)a2 + 33);
      uint64_t v138 = *((void *)a2 + 34);
      uint64_t v142 = *((void *)a2 + 35);
      uint64_t v146 = *((void *)a2 + 36);
      uint64_t v150 = *((void *)a2 + 37);
      uint64_t v154 = *((void *)a2 + 38);
      uint64_t v158 = *((void *)a2 + 39);
      uint64_t v162 = *((void *)a2 + 40);
      uint64_t v166 = *((void *)a2 + 41);
      uint64_t v170 = *((void *)a2 + 42);
      uint64_t v174 = *((void *)a2 + 43);
      uint64_t v178 = *((void *)a2 + 44);
      uint64_t v182 = *((void *)a2 + 45);
      uint64_t v186 = *((void *)a2 + 46);
      uint64_t v193 = *((void *)a2 + 47);
      uint64_t v111 = *((void *)a2 + 26);
      uint64_t v112 = *((void *)a2 + 27);
      uint64_t v113 = *((void *)a2 + 28);
      uint64_t v114 = *((void *)a2 + 29);
      uint64_t v115 = *((void *)a2 + 30);
      sub_1A86409B8(v111, v112, v113, v114, v115, v109, v110, v134, v138, v142, v146, v150, v154, v158, v162, v166, v170, v174, v178,
        v182,
        v186,
        v193,
        v38 & 1);
      uint64_t v116 = *(void *)(a1 + 208);
      uint64_t v117 = *(void *)(a1 + 216);
      *(void *)(a1 + 208) = v111;
      *(void *)(a1 + 216) = v112;
      uint64_t v118 = *(void *)(a1 + 224);
      uint64_t v119 = *(void *)(a1 + 232);
      *(void *)(a1 + 224) = v113;
      *(void *)(a1 + 232) = v114;
      uint64_t v120 = *(void *)(a1 + 240);
      uint64_t v121 = *(void *)(a1 + 248);
      *(void *)(a1 + 240) = v115;
      *(void *)(a1 + 248) = v109;
      uint64_t v122 = *(void *)(a1 + 256);
      uint64_t v123 = *(void *)(a1 + 264);
      *(void *)(a1 + 256) = v110;
      *(void *)(a1 + 264) = v134;
      long long v124 = *(_OWORD *)(a1 + 272);
      long long v125 = *(_OWORD *)(a1 + 288);
      *(void *)(a1 + 272) = v138;
      *(void *)(a1 + 280) = v142;
      *(void *)(a1 + 288) = v146;
      *(void *)(a1 + 296) = v150;
      long long v126 = *(_OWORD *)(a1 + 304);
      long long v127 = *(_OWORD *)(a1 + 320);
      *(void *)(a1 + 304) = v154;
      *(void *)(a1 + 312) = v158;
      *(void *)(a1 + 320) = v162;
      *(void *)(a1 + 328) = v166;
      long long v128 = *(_OWORD *)(a1 + 336);
      long long v129 = *(_OWORD *)(a1 + 352);
      *(void *)(a1 + 336) = v170;
      *(void *)(a1 + 344) = v174;
      *(void *)(a1 + 352) = v178;
      *(void *)(a1 + 360) = v182;
      char v130 = *(unsigned char *)(a1 + 384);
      *(unsigned char *)(a1 + 384) = v190;
      uint64_t v131 = *(void *)(a1 + 368);
      uint64_t v132 = *(void *)(a1 + 376);
      *(void *)(a1 + 368) = v186;
      *(void *)(a1 + 376) = v193;
      sub_1A856B460(v116, v117, v118, v119, v120, v121, v122, v123, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, *((uint64_t *)&v126 + 1), v127, *((uint64_t *)&v127 + 1), v128, *((uint64_t *)&v128 + 1), v129,
        *((uint64_t *)&v129 + 1),
        v131,
        v132,
        v130);
      goto LABEL_25;
    }
    sub_1A86414AC(a1 + 208);
LABEL_24:
    long long v56 = *((_OWORD *)a2 + 16);
    long long v58 = *v36;
    long long v57 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v56;
    *uint64_t v35 = v58;
    *(_OWORD *)(a1 + 224) = v57;
    long long v59 = *((_OWORD *)a2 + 20);
    long long v61 = *((_OWORD *)a2 + 17);
    long long v60 = *((_OWORD *)a2 + 18);
    *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 320) = v59;
    *(_OWORD *)(a1 + 272) = v61;
    *(_OWORD *)(a1 + 288) = v60;
    long long v63 = *((_OWORD *)a2 + 22);
    long long v62 = *((_OWORD *)a2 + 23);
    long long v64 = *((_OWORD *)a2 + 21);
    *(unsigned char *)(a1 + 384) = *((unsigned char *)a2 + 384);
    *(_OWORD *)(a1 + 352) = v63;
    *(_OWORD *)(a1 + 368) = v62;
    *(_OWORD *)(a1 + 336) = v64;
    goto LABEL_25;
  }
LABEL_19:
  if (v38 == 255)
  {
LABEL_20:
    long long v39 = *v36;
    long long v40 = *((_OWORD *)a2 + 14);
    long long v41 = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v41;
    *uint64_t v35 = v39;
    *(_OWORD *)(a1 + 224) = v40;
    long long v42 = *((_OWORD *)a2 + 17);
    long long v43 = *((_OWORD *)a2 + 18);
    long long v44 = *((_OWORD *)a2 + 20);
    *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 320) = v44;
    *(_OWORD *)(a1 + 272) = v42;
    *(_OWORD *)(a1 + 288) = v43;
    long long v45 = *((_OWORD *)a2 + 21);
    long long v46 = *((_OWORD *)a2 + 22);
    long long v47 = *((_OWORD *)a2 + 23);
    *(unsigned char *)(a1 + 384) = *((unsigned char *)a2 + 384);
    *(_OWORD *)(a1 + 352) = v46;
    *(_OWORD *)(a1 + 368) = v47;
    *(_OWORD *)(a1 + 336) = v45;
    goto LABEL_25;
  }
  char v188 = v38 & 1;
  uint64_t v48 = *((void *)a2 + 31);
  uint64_t v49 = *((void *)a2 + 32);
  uint64_t v133 = *((void *)a2 + 34);
  uint64_t v136 = *((void *)a2 + 35);
  uint64_t v140 = *((void *)a2 + 36);
  uint64_t v144 = *((void *)a2 + 37);
  uint64_t v148 = *((void *)a2 + 38);
  uint64_t v152 = *((void *)a2 + 39);
  uint64_t v156 = *((void *)a2 + 40);
  uint64_t v160 = *((void *)a2 + 41);
  uint64_t v164 = *((void *)a2 + 42);
  uint64_t v168 = *((void *)a2 + 43);
  uint64_t v172 = *((void *)a2 + 44);
  uint64_t v176 = *((void *)a2 + 45);
  uint64_t v180 = *((void *)a2 + 46);
  uint64_t v184 = *((void *)a2 + 47);
  uint64_t v50 = *((void *)a2 + 26);
  uint64_t v51 = *((void *)a2 + 27);
  uint64_t v52 = *((void *)a2 + 28);
  uint64_t v53 = *((void *)a2 + 29);
  uint64_t v54 = *((void *)a2 + 30);
  uint64_t v55 = *((void *)a2 + 33);
  sub_1A86409B8(v50, v51, v52, v53, v54, v48, v49, v55, v133, v136, v140, v144, v148, v152, v156, v160, v164, v168, v172,
    v176,
    v180,
    v184,
    v38 & 1);
  *(void *)(a1 + 208) = v50;
  *(void *)(a1 + 216) = v51;
  *(void *)(a1 + 224) = v52;
  *(void *)(a1 + 232) = v53;
  *(void *)(a1 + 240) = v54;
  *(void *)(a1 + 248) = v48;
  *(void *)(a1 + 256) = v49;
  *(void *)(a1 + 264) = v55;
  *(void *)(a1 + 272) = v133;
  *(void *)(a1 + 280) = v136;
  *(void *)(a1 + 288) = v140;
  *(void *)(a1 + 296) = v144;
  *(void *)(a1 + 304) = v148;
  *(void *)(a1 + 312) = v152;
  *(void *)(a1 + 320) = v156;
  *(void *)(a1 + 328) = v160;
  *(void *)(a1 + 336) = v164;
  *(void *)(a1 + 344) = v168;
  *(void *)(a1 + 352) = v172;
  *(void *)(a1 + 360) = v176;
  *(void *)(a1 + 368) = v180;
  *(void *)(a1 + 376) = v184;
  *(unsigned char *)(a1 + 384) = v188;
LABEL_25:
  uint64_t v65 = (_OWORD *)(a1 + 392);
  uint64_t v66 = (long long *)(a2 + 98);
  uint64_t v67 = *((void *)a2 + 54);
  if (*(void *)(a1 + 432))
  {
    if (v67)
    {
      *(void *)(a1 + 392) = *((void *)a2 + 49);
      *(void *)(a1 + 400) = *((void *)a2 + 50);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = *((void *)a2 + 51);
      swift_retain();
      swift_release();
      *(_DWORD *)(a1 + 416) = a2[104];
      *(_DWORD *)(a1 + 420) = a2[105];
      *(_DWORD *)(a1 + 424) = a2[106];
      *(_WORD *)(a1 + 428) = *((_WORD *)a2 + 214);
      *(unsigned char *)(a1 + 430) = *((unsigned char *)a2 + 430);
      *(void *)(a1 + 432) = *((void *)a2 + 54);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 440) = *((void *)a2 + 55);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 448) = *((void *)a2 + 56);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 456) = *((void *)a2 + 57);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = *((void *)a2 + 58);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 472) = *((void *)a2 + 59);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 480) = *((void *)a2 + 60);
      *(void *)(a1 + 488) = *((void *)a2 + 61);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 496) = *((void *)a2 + 62);
      *(void *)(a1 + 504) = *((void *)a2 + 63);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A887F20C(a1 + 392);
      long long v69 = *(_OWORD *)(a2 + 110);
      long long v71 = *v66;
      long long v70 = *(_OWORD *)(a2 + 102);
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 106);
      *(_OWORD *)(a1 + 440) = v69;
      *uint64_t v65 = v71;
      *(_OWORD *)(a1 + 408) = v70;
      long long v73 = *(_OWORD *)(a2 + 118);
      long long v72 = *(_OWORD *)(a2 + 122);
      long long v74 = *(_OWORD *)(a2 + 114);
      *(void *)(a1 + 504) = *((void *)a2 + 63);
      *(_OWORD *)(a1 + 472) = v73;
      *(_OWORD *)(a1 + 488) = v72;
      *(_OWORD *)(a1 + 456) = v74;
    }
  }
  else if (v67)
  {
    *(void *)(a1 + 392) = *((void *)a2 + 49);
    *(void *)(a1 + 400) = *((void *)a2 + 50);
    *(void *)(a1 + 408) = *((void *)a2 + 51);
    *(_DWORD *)(a1 + 416) = a2[104];
    *(_DWORD *)(a1 + 420) = a2[105];
    int v68 = a2[106];
    *(_DWORD *)(a1 + 427) = *(int *)((char *)a2 + 427);
    *(_DWORD *)(a1 + 424) = v68;
    *(void *)(a1 + 432) = *((void *)a2 + 54);
    *(void *)(a1 + 440) = *((void *)a2 + 55);
    *(void *)(a1 + 448) = *((void *)a2 + 56);
    *(void *)(a1 + 456) = *((void *)a2 + 57);
    *(void *)(a1 + 464) = *((void *)a2 + 58);
    *(void *)(a1 + 472) = *((void *)a2 + 59);
    *(void *)(a1 + 480) = *((void *)a2 + 60);
    *(void *)(a1 + 488) = *((void *)a2 + 61);
    *(void *)(a1 + 496) = *((void *)a2 + 62);
    *(void *)(a1 + 504) = *((void *)a2 + 63);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    long long v75 = *v66;
    long long v76 = *(_OWORD *)(a2 + 102);
    long long v77 = *(_OWORD *)(a2 + 110);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 106);
    *(_OWORD *)(a1 + 440) = v77;
    *uint64_t v65 = v75;
    *(_OWORD *)(a1 + 408) = v76;
    long long v78 = *(_OWORD *)(a2 + 114);
    long long v79 = *(_OWORD *)(a2 + 118);
    long long v80 = *(_OWORD *)(a2 + 122);
    *(void *)(a1 + 504) = *((void *)a2 + 63);
    *(_OWORD *)(a1 + 472) = v79;
    *(_OWORD *)(a1 + 488) = v80;
    *(_OWORD *)(a1 + 456) = v78;
  }
  *(void *)(a1 + 512) = *((void *)a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *((void *)a2 + 65);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v81 = *((void *)a2 + 66);
  *(unsigned char *)(a1 + 536) = *((unsigned char *)a2 + 536);
  *(void *)(a1 + 528) = v81;
  LODWORD(v81) = a2[135];
  *(unsigned char *)(a1 + 544) = *((unsigned char *)a2 + 544);
  *(_DWORD *)(a1 + 540) = v81;
  uint64_t v82 = *((void *)a2 + 69);
  *(unsigned char *)(a1 + 560) = *((unsigned char *)a2 + 560);
  *(void *)(a1 + 552) = v82;
  *(void *)(a1 + 568) = *((void *)a2 + 71);
  *(void *)(a1 + 576) = *((void *)a2 + 72);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A887F20C(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy584_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x248uLL);
}

uint64_t assignWithTake for MessageData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  int v6 = *(unsigned __int8 *)(a1 + 192);
  int v7 = *(unsigned __int8 *)(a2 + 192);
  if (v6 == 254) {
    goto LABEL_7;
  }
  if (v7 == 254)
  {
    sub_1A8641500(a1 + 16);
LABEL_7:
    long long v8 = *(_OWORD *)(v5 + 144);
    *(_OWORD *)(v4 + 128) = *(_OWORD *)(v5 + 128);
    *(_OWORD *)(v4 + 144) = v8;
    *(_OWORD *)(v4 + 160) = *(_OWORD *)(v5 + 160);
    *(unsigned char *)(v4 + 176) = *(unsigned char *)(v5 + 176);
    long long v9 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v4 + 80) = v9;
    long long v10 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(v4 + 112) = v10;
    long long v11 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v11;
    long long v12 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v4 + 48) = v12;
    goto LABEL_8;
  }
  if (v6 == 255) {
    goto LABEL_7;
  }
  if (v7 == 255)
  {
    sub_1A86414AC(a1 + 16);
    goto LABEL_7;
  }
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = *(void *)(a1 + 24);
  uint64_t v29 = *(void *)(a1 + 32);
  uint64_t v30 = *(void *)(a1 + 40);
  uint64_t v31 = *(void *)(a1 + 48);
  uint64_t v32 = *(void *)(a1 + 56);
  uint64_t v33 = *(void *)(a1 + 64);
  uint64_t v34 = *(void *)(a1 + 72);
  long long v35 = *(_OWORD *)(a1 + 80);
  long long v36 = *(_OWORD *)(a1 + 96);
  long long v37 = *(_OWORD *)(a1 + 112);
  long long v38 = *(_OWORD *)(a1 + 128);
  long long v39 = *(_OWORD *)(a1 + 144);
  long long v40 = *(_OWORD *)(a1 + 160);
  uint64_t v41 = *(void *)(a1 + 176);
  uint64_t v42 = *(void *)(a1 + 184);
  long long v43 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v43;
  long long v44 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v44;
  long long v45 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v45;
  long long v46 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v46;
  long long v47 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v47;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = v7 & 1;
  sub_1A856B460(v27, v28, v29, v30, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40,
    *((uint64_t *)&v40 + 1),
    v41,
    v42,
    v6 & 1);
LABEL_8:
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(a1 + 384);
  int v14 = *(unsigned __int8 *)(a2 + 384);
  if (v13 == 254)
  {
LABEL_14:
    long long v15 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v15;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    long long v16 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v16;
    long long v17 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v17;
    long long v18 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v18;
    long long v19 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v19;
    goto LABEL_15;
  }
  if (v14 == 254)
  {
    sub_1A8641500(a1 + 208);
    goto LABEL_14;
  }
  if (v13 == 255) {
    goto LABEL_14;
  }
  if (v14 == 255)
  {
    sub_1A86414AC(a1 + 208);
    goto LABEL_14;
  }
  uint64_t v48 = *(void *)(a1 + 208);
  uint64_t v49 = *(void *)(a1 + 216);
  uint64_t v50 = *(void *)(a1 + 224);
  uint64_t v51 = *(void *)(a1 + 232);
  uint64_t v52 = *(void *)(a1 + 240);
  uint64_t v53 = *(void *)(a1 + 248);
  uint64_t v54 = *(void *)(a1 + 256);
  uint64_t v55 = *(void *)(a1 + 264);
  long long v56 = *(_OWORD *)(a1 + 272);
  long long v57 = *(_OWORD *)(a1 + 288);
  long long v58 = *(_OWORD *)(a1 + 304);
  long long v59 = *(_OWORD *)(a1 + 320);
  long long v60 = *(_OWORD *)(a1 + 336);
  long long v61 = *(_OWORD *)(a1 + 352);
  uint64_t v62 = *(void *)(a1 + 368);
  uint64_t v63 = *(void *)(a1 + 376);
  long long v64 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v64;
  long long v65 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v65;
  long long v66 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v66;
  long long v67 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v67;
  long long v68 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v68;
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(unsigned char *)(a1 + 384) = v14 & 1;
  sub_1A856B460(v48, v49, v50, v51, v52, v53, v54, v55, v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61,
    *((uint64_t *)&v61 + 1),
    v62,
    v63,
    v13 & 1);
LABEL_15:
  if (!*(void *)(a1 + 432))
  {
LABEL_19:
    long long v23 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v23;
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    long long v24 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v24;
    long long v25 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v25;
    goto LABEL_20;
  }
  if (!*(void *)(a2 + 432))
  {
    sub_1A887F20C(a1 + 392);
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_release();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_WORD *)(a1 + 428) = *(_WORD *)(a2 + 428);
  *(unsigned char *)(a1 + 430) = *(unsigned char *)(a2 + 430);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v22;
  swift_bridgeObjectRelease();
LABEL_20:
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  *(_DWORD *)(a1 + 540) = *(_DWORD *)(a2 + 540);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 584)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 200);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 584) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 200) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 584) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageData()
{
  return &type metadata for MessageData;
}

uint64_t initializeBufferWithCopyOfBuffer for MessageData.BodySection(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    unsigned __int8 v9 = *((unsigned char *)a2 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8645714(v8, v9);
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v10 = *(int *)(a3 + 24);
    long long v11 = (void *)(a1 + v10);
    long long v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for MessageData.BodyData();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1A8A75E28();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for MessageData.BodySection(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_1A8645728(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for MessageData.BodyData();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1A8A75E28();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v4, v7);
  }
  return result;
}

uint64_t initializeWithCopy for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8645714(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 24);
  unsigned __int8 v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for MessageData.BodyData();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1A8A75E28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 16);
  sub_1A8645714(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v7;
  sub_1A8645728(v8, v9);
  int v10 = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 20) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for MessageData.BodyData();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      uint64_t v22 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 24))(v12, v13, v22);
      return a1;
    }
    sub_1A887FD58((uint64_t)v12);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  uint64_t v19 = sub_1A8A75E28();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1A887FD58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for MessageData.BodyData();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1A8A75E28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1A8645728(v7, v8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for MessageData.BodyData();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v20 = sub_1A8A75E28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 40))(v10, v11, v20);
      return a1;
    }
    sub_1A887FD58((uint64_t)v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  uint64_t v17 = sub_1A8A75E28();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData.BodySection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88800F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MessageData.BodySection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void *sub_1A88801B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A8880264()
{
  sub_1A8880304();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A8880304()
{
  if (!qword_1E9742938)
  {
    type metadata accessor for MessageData.BodyData();
    unint64_t v0 = sub_1A8A77898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9742938);
    }
  }
}

uint64_t sub_1A888035C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 200);
  uint64_t v18 = *(void *)(a1 + 192);
  uint64_t v19 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 216);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 232);
  uint64_t v7 = *(void *)(a1 + 240);
  long long v16 = *(_OWORD *)(a1 + 264);
  long long v17 = *(_OWORD *)(a1 + 248);
  long long v15 = *(_OWORD *)(a1 + 280);
  long long v13 = *(_OWORD *)(a1 + 312);
  long long v14 = *(_OWORD *)(a1 + 296);
  long long v12 = *(_OWORD *)(a1 + 328);
  uint64_t v9 = *(void *)(a1 + 344);
  uint64_t v8 = *(void *)(a1 + 352);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 360);
  sub_1A856B35C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  sub_1A856B35C(v19, v18, v2, v3, v4, v5, v6, v7, v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t *sub_1A8880488(uint64_t *a1)
{
  uint64_t v2 = a1[15];
  uint64_t v3 = a1[16];
  uint64_t v4 = a1[17];
  uint64_t v5 = a1[18];
  uint64_t v6 = a1[19];
  uint64_t v7 = a1[20];
  sub_1A856B8CC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_1A856B8CC(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_1A8880568(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_1A88805DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8880640(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MessageData.BodyData.underlying.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MessageData.BodyData.underlying.setter(uint64_t a1)
{
  uint64_t v3 = sub_1A8A75E28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

double (*MessageData.BodyData.underlying.modify())(void)
{
  return nullsub_1;
}

uint64_t MessageData.BodyData.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A8A75E28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_1A88807EC()
{
  uint64_t v0 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v0 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0()) {
    return 0;
  }
  sub_1A8A75E28();
  sub_1A88810C8();
  sub_1A8A77198();
  uint64_t v1 = sub_1A8A771E8();
  if (v4 == v3) {
    return 1;
  }
  MEMORY[0x1F4188790](v1);
  sub_1A8A75D88();
  return v4;
}

uint64_t ByteBuffer.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1A8A75E28();
  double v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  sub_1A8880AB8((uint64_t)v5);
  uint64_t v8 = v7;
  sub_1A887FD58(a1);
  return v8;
}

uint64_t MessageData.BodyData.init(_:)()
{
  return swift_release();
}

uint64_t sub_1A8880A60()
{
  return sub_1A8A75D88();
}

void sub_1A8880AB8(uint64_t a1)
{
  uint64_t v2 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v2)
    {
      if (v2)
      {
        unsigned int v3 = (v2 - 1) | ((v2 - 1) >> 1) | (((v2 - 1) | ((v2 - 1) >> 1)) >> 2);
        unsigned int v4 = v3 | (v3 >> 4) | ((v3 | (v3 >> 4)) >> 8);
        int v5 = v4 | HIWORD(v4);
        BOOL v6 = __CFADD__(v5, 1);
        unsigned int v7 = v5 + 1;
        if (v6) {
          unsigned int v8 = -1;
        }
        else {
          unsigned int v8 = v7;
        }
      }
      else
      {
        unsigned int v8 = 0;
      }
      uint64_t v10 = malloc(v8);
      if (!v10) {
        goto LABEL_15;
      }
      uint64_t v11 = v10;
      type metadata accessor for ByteBuffer._Storage();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 24) = v11;
      *(_DWORD *)(v12 + 16) = v8;
      *(void *)(v12 + 32) = j__malloc_1;
      *(void *)(v12 + 40) = j__realloc_1;
      *(void *)(v12 + 48) = sub_1A88831B8;
      *(void *)(v12 + 56) = sub_1A88831C8;
      swift_beginAccess();
      int v9 = 0;
    }
    else
    {
      int v9 = *((_DWORD *)ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor() + 3);
      swift_retain();
    }
    ByteBuffer.setDispatchData(_:at:)();
    if (!__CFADD__(v9, v13))
    {
      uint64_t v14 = sub_1A8A75E28();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      return;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for MessageData.BodyData()
{
  uint64_t result = qword_1E9742918;
  if (!qword_1E9742918) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MessageHeader(uint64_t a1)
{
  uint64_t v2 = sub_1A8A75E28();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MessageHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s8BodyDataVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8880F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s8BodyDataVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A8880FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8A75E28();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1A888103C()
{
  uint64_t result = sub_1A8A75E28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1A88810C8()
{
  unint64_t result = qword_1E9743A98;
  if (!qword_1E9743A98)
  {
    sub_1A8A75E28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743A98);
  }
  return result;
}

uint64_t sub_1A8881120()
{
  return sub_1A8A75D88();
}

uint64_t sub_1A888117C@<X0>(const void *a1@<X0>, BOOL *a2@<X8>)
{
  int v5 = *(const void **)(v2 + 16);
  size_t v6 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  uint64_t result = memcmp(v5, a1, v6);
  *a2 = result == 0;
  return result;
}

uint64_t ClientCommandEncoder.encode(tag:command:)@<X0>(int a1@<W2>, void (*a2)(void)@<X8>)
{
  return sub_1A8881848((void (*)(void))sub_1A8872640, a1 & 0x101FF, a2);
}

uint64_t ClientCommandEncoder.idle(tag:)@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unint64_t a3@<X8>)
{
  char v3 = a2;
  unint64_t v50 = a3;
  uint64_t v51 = a1;
  unsigned int v4 = a2 & 0x100;
  int v5 = HIWORD(a2) & 1;
  uint64_t v45 = type metadata accessor for CommandStreamPart();
  MEMORY[0x1F4188790](v45);
  long long v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A8A765E8();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = type metadata accessor for TaggedCommand();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (Swift::String *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = sub_1A8A75E28();
  uint64_t v11 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v49 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v48 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v15);
  long long v47 = (char *)&v41 - v16;
  long long v17 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
  unint64_t v18 = v17[1];
  uint64_t v19 = qword_1A8AE5988[v3];
  unint64_t v20 = *((unsigned int *)v17 + 4) | ((unint64_t)*((unsigned __int16 *)v17 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v17 + 22) << 48);
  unint64_t v42 = (unint64_t)v4 << 24;
  uint64_t v21 = v42 | v19 | 1;
  uint64_t v22 = swift_retain();
  int v44 = v5;
  CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v22, v18, v20, v21, 0, v5, (uint64_t)v53);
  uint64_t v52 = sub_1A88A2590(v51 & 0xFFFFFFFF000000FFLL);
  sub_1A8A765C8();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
  sub_1A887B668();
  uint64_t v23 = sub_1A8A76588();
  long long v25 = v24;
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
    char v27 = v3;
    type metadata accessor for Command();
    swift_storeEnumTagMultiPayload();
    v10->_uint64_t countAndFlagsBits = v23;
    v10->_object = v25;
    CommandEncodeBuffer.writeCommand(_:)(v10);
    sub_1A88856B4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TaggedCommand);
    EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
    swift_beginAccess();
    uint64_t v28 = v47;
    sub_1A8A75DB8();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v29 = v17[1];
    unint64_t v30 = *((unsigned int *)v17 + 4) | ((unint64_t)*((unsigned __int16 *)v17 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v17 + 22) << 48);
    uint64_t v31 = v42 | qword_1A8AE5988[v27] | 1;
    uint64_t v32 = swift_retain();
    CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v32, v29, v30, v31, 0, v44, (uint64_t)v53);
    uint64_t v33 = (uint64_t)v46;
    swift_storeEnumTagMultiPayload();
    CommandEncodeBuffer.writeCommandStream(_:)(v33);
    sub_1A88856B4(v33, (uint64_t (*)(void))type metadata accessor for CommandStreamPart);
    EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
    swift_beginAccess();
    uint64_t v34 = v48;
    sub_1A8A75DB8();
    swift_release();
    swift_release();
    swift_release();
    long long v35 = v49;
    uint64_t v36 = v43;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v28, v43);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745DA8);
    unint64_t v37 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1A8AD8F00;
    long long v39 = *(void (**)(unint64_t, char *, uint64_t))(v11 + 32);
    v39(v38 + v37, v34, v36);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v28, v36);
    unint64_t v40 = v50;
    v39(v50, v35, v36);
    uint64_t result = type metadata accessor for ClientCommand.Encoded();
    *(void *)(v40 + *(int *)(result + 20)) = v38;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8881778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1A8884A58(a2 & 0xFFFFFFFF000000FFLL, a3);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(type metadata accessor for CommandStreamPart() - 8);
    uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    do
    {
      CommandEncodeBuffer.writeCommandStream(_:)(v6);
      v6 += v7;
      --v4;
    }
    while (v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t static Command.convert(tag:command:)(uint64_t a1, uint64_t a2)
{
  return sub_1A8884A58(a1 & 0xFFFFFFFF000000FFLL, a2);
}

uint64_t sub_1A8881848@<X0>(void (*a1)(void)@<X0>, unsigned int a2@<W2>, void (*a3)(void)@<X8>)
{
  __int16 v3 = a2;
  uint64_t v33 = a1;
  int v5 = HIWORD(a2) & 1;
  uint64_t v6 = sub_1A8A75E28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
  unint64_t v11 = v10[1];
  uint64_t v12 = 8 * (char)v3;
  uint64_t v13 = *(void *)((char *)&unk_1A8AE59A0 + v12);
  uint64_t v14 = *(void *)((char *)&unk_1A8AE59B8 + v12);
  uint64_t v15 = *(void *)((char *)&unk_1A8AE59D0 + v12);
  unint64_t v16 = *((unsigned int *)v10 + 4) | ((unint64_t)*((unsigned __int16 *)v10 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v10 + 22) << 48);
  uint64_t v17 = 0x100000001;
  if ((v3 & 0x100) == 0) {
    uint64_t v17 = 1;
  }
  uint64_t v18 = v17 | v13 | v14 | v15;
  uint64_t v19 = swift_retain();
  CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v19, v11, v16, v18, 0, v5, (uint64_t)v34);
  v33(v34);
  EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_beginAccess();
  sub_1A8A75DB8();
  uint64_t v24 = *(int *)(type metadata accessor for ClientCommand.Encoded() + 20);
  uint64_t v33 = a3;
  *(void *)((char *)a3 + v24) = MEMORY[0x1E4FBC860];
  if ((v23 & 0x100000000000000) != 0)
  {
    uint64_t v25 = v24;
    uint64_t v32 = v21;
    unint64_t v26 = MEMORY[0x1E4FBC860];
    do
    {
      EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
      uint64_t v28 = v27;
      swift_beginAccess();
      sub_1A8A75DB8();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_1A8892F7C(0, *(void *)(v26 + 16) + 1, 1, v26);
      }
      unint64_t v30 = *(void *)(v26 + 16);
      unint64_t v29 = *(void *)(v26 + 24);
      if (v30 >= v29 >> 1) {
        unint64_t v26 = sub_1A8892F7C(v29 > 1, v30 + 1, 1, v26);
      }
      *(void *)(v26 + 16) = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v26+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v30, v9, v6);
      swift_release();
    }
    while ((v28 & 0x100000000000000) != 0);
    *(void *)((char *)v33 + v25) = v26;
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A8881B50()
{
  uint64_t result = Capability.init(_:)(0xD000000000000011, 0x80000001A8B3AE80);
  static Capability.applePushService = result;
  *(void *)algn_1E979D468 = v1;
  qword_1E979D470 = v2;
  byte_1E979D478 = v3 & 1;
  return result;
}

uint64_t *Capability.applePushService.unsafeMutableAddressor()
{
  if (qword_1E9741678 != -1) {
    swift_once();
  }
  return &static Capability.applePushService;
}

uint64_t static Capability.applePushService.getter()
{
  if (qword_1E9741678 != -1) {
    swift_once();
  }
  uint64_t v0 = static Capability.applePushService;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v0;
}

uint64_t sub_1A8881C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C28);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v89 - v8;
  uint64_t v10 = type metadata accessor for SelectParameter(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A888564C(a1, (uint64_t)v16, type metadata accessor for ClientCommand);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = *((void *)v16 + 2);
      uint64_t v22 = *((void *)v16 + 3);
      *(_OWORD *)a2 = *(_OWORD *)v16;
      *(void *)(a2 + 16) = v21;
      *(void *)(a2 + 24) = v22;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 2u:
      uint64_t v23 = *(void *)v16;
      int v24 = *((_DWORD *)v16 + 2);
      uint64_t v25 = *((void *)v16 + 2);
      int64_t v26 = *(void *)(v25 + 16);
      if (v26)
      {
        HIDWORD(v90) = v24;
        uint64_t v91 = v23;
        uint64_t v92 = a2;
        uint64_t v93 = v11;
        *(void *)&long long v95 = MEMORY[0x1E4FBC860];
        sub_1A886F328(0, v26, 0);
        uint64_t v27 = v95;
        int64_t v28 = sub_1A85DD8C4(v25);
        int v30 = v29;
        char v32 = v31 & 1;
        uint64_t v94 = v25 + 56;
        do
        {
          if (v28 < 0 || v28 >= 1 << *(unsigned char *)(v25 + 32))
          {
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
            JUMPOUT(0x1A8882960);
          }
          if (((*(void *)(v94 + (((unint64_t)v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            goto LABEL_52;
          }
          if (*(_DWORD *)(v25 + 36) != v30) {
            goto LABEL_53;
          }
          swift_storeEnumTagMultiPayload();
          *(void *)&long long v95 = v27;
          unint64_t v34 = *(void *)(v27 + 16);
          unint64_t v33 = *(void *)(v27 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_1A886F328(v33 > 1, v34 + 1, 1);
            uint64_t v27 = v95;
          }
          *(void *)(v27 + 16) = v34 + 1;
          sub_1A888576C((uint64_t)v13, v27+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v34, type metadata accessor for SelectParameter);
          int64_t v35 = sub_1A85DD968(v28, v30, v32 & 1, v25);
          int64_t v28 = v35;
          int v30 = v36;
          char v32 = v37 & 1;
          --v26;
        }
        while (v26);
        sub_1A856B010(v35, v36, v37 & 1);
        swift_bridgeObjectRelease();
        uint64_t v23 = v91;
        a2 = v92;
        int v24 = HIDWORD(v90);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = MEMORY[0x1E4FBC860];
      }
      *(void *)a2 = v23;
      *(_DWORD *)(a2 + 8) = v24;
      *(void *)(a2 + 16) = v27;
      uint64_t v20 = type metadata accessor for Command();
LABEL_48:
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
    case 3u:
    case 4u:
      int v38 = *((_DWORD *)v16 + 2);
      *(void *)a2 = *(void *)v16;
      *(_DWORD *)(a2 + 8) = v38;
      *(void *)(a2 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 5u:
      int v39 = *((_DWORD *)v16 + 2);
      *(void *)a2 = *(void *)v16;
      *(_DWORD *)(a2 + 8) = v39;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 6u:
      uint64_t v40 = *(void *)v16;
      int v41 = *((_DWORD *)v16 + 2);
      uint64_t v42 = *((void *)v16 + 2);
      int v43 = *((_DWORD *)v16 + 6);
      uint64_t v44 = sub_1A8894368(MEMORY[0x1E4FBC860]);
      *(void *)a2 = v40;
      *(_DWORD *)(a2 + 8) = v41;
      *(void *)(a2 + 16) = v42;
      *(_DWORD *)(a2 + 24) = v43;
      *(void *)(a2 + 32) = v44;
      *(void *)(a2 + 40) = v45;
      *(void *)(a2 + 48) = v46;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 7u:
      uint64_t v47 = *(void *)v16;
      uint64_t v48 = *((void *)v16 + 2);
      uint64_t v49 = *((void *)v16 + 4);
      if (*(void *)v16)
      {
        int v50 = *((_DWORD *)v16 + 2);
      }
      else
      {
        uint64_t v79 = ByteBufferAllocator.buffer(string:)(0, 0xE000000000000000, (uint64_t)j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_1A88831B8);
        uint64_t v47 = MailboxName.init(_:)(v79, v81, v80 & 0xFFFFFFFFFFFFFFLL);
        int v50 = v82;
      }
      if (!v48) {
        uint64_t v48 = MEMORY[0x1E4FBC860];
      }
      sub_1A8883240(v48, (uint64_t (*)(void))j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_1A88831B8, (uint64_t)sub_1A88831C8);
      uint64_t v84 = v83;
      uint64_t v86 = v85;
      uint64_t v88 = v87;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(void *)(a2 + 64) = 0;
      *(void *)(a2 + 72) = v47;
      *(_DWORD *)(a2 + 80) = v50;
      *(void *)(a2 + 88) = v84;
      *(void *)(a2 + 96) = v86;
      *(unsigned char *)(a2 + 110) = BYTE6(v88);
      *(_WORD *)(a2 + 108) = WORD2(v88);
      *(_DWORD *)(a2 + 104) = v88;
      *(unsigned char *)(a2 + 111) = 0;
      *(void *)(a2 + 112) = v49;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 8u:
      int v51 = *((_DWORD *)v16 + 2);
      uint64_t v52 = *((void *)v16 + 2);
      *(void *)a2 = *(void *)v16;
      *(_DWORD *)(a2 + 8) = v51;
      *(void *)(a2 + 16) = v52;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
      uint64_t v54 = (uint64_t)&v16[*(int *)(v53 + 64)];
      sub_1A85135AC(*(void *)&v16[*(int *)(v53 + 80)], *(void *)&v16[*(int *)(v53 + 80) + 8]);
      uint64_t v55 = type metadata accessor for Command();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(a2, 1, 1, v55);
      return sub_1A8511B00(v54, &qword_1E9741350);
    case 0xAu:
      *(void *)a2 = *(void *)v16;
      *(_OWORD *)(a2 + 8) = xmmword_1A8AE4F60;
      *(void *)(a2 + 24) = MEMORY[0x1E4FBC860];
      goto LABEL_25;
    case 0xBu:
      uint64_t v58 = *(void *)v16;
      uint64_t v57 = *((void *)v16 + 1);
      if (!*(void *)(v57 + 16))
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A50);
        type metadata accessor for SearchReturnOption();
        uint64_t v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = xmmword_1A8AD8F00;
        swift_storeEnumTagMultiPayload();
      }
      *(void *)a2 = v58;
      *(_OWORD *)(a2 + 8) = xmmword_1A8AE4F60;
      *(void *)(a2 + 24) = v57;
      goto LABEL_25;
    case 0xCu:
      *(void *)a2 = *(void *)v16;
      *(_OWORD *)(a2 + 8) = xmmword_1A8AE4F60;
      *(void *)(a2 + 24) = MEMORY[0x1E4FBC860];
      goto LABEL_25;
    case 0xDu:
      uint64_t v60 = *(void *)v16;
      uint64_t v59 = *((void *)v16 + 1);
      if (!*(void *)(v59 + 16))
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A50);
        type metadata accessor for SearchReturnOption();
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_1A8AD8F00;
        swift_storeEnumTagMultiPayload();
      }
      *(void *)a2 = v60;
      *(_OWORD *)(a2 + 8) = xmmword_1A8AE4F60;
      *(void *)(a2 + 24) = v59;
      goto LABEL_25;
    case 0xEu:
      long long v61 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747920) + 48)];
      uint64_t v62 = *(void *)v61;
      uint64_t v63 = *((void *)v61 + 1);
      char v64 = v61[16];
      sub_1A8529F8C((uint64_t)v16, (uint64_t)v9, &qword_1E9741C28);
      if (v64)
      {
        uint64_t v70 = MEMORY[0x1E4FBC860];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97459A0);
        uint64_t v77 = *(void *)(type metadata accessor for FetchModifier() - 8);
        unint64_t v78 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
        uint64_t v70 = swift_allocObject();
        *(_OWORD *)(v70 + 16) = xmmword_1A8AD8F00;
        *(void *)(v70 + v78) = v63;
        swift_storeEnumTagMultiPayload();
      }
      static Command.uidFetch(messages:attributes:modifiers:)((uint64_t)v9, v62, v70, v65, v66, v67, v68, v69, v89, v90, v91, v92, v93, v94, v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v97,
        *((uint64_t *)&v97 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1A8511B00((uint64_t)v9, &qword_1E9741C28);
    case 0xFu:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747938);
      sub_1A8529F8C((uint64_t)v16, (uint64_t)v7, &qword_1E9741C28);
      static Command.uidStore(messages:modifiers:data:)();
      swift_bridgeObjectRelease();
      return sub_1A8511B00((uint64_t)v7, &qword_1E9741C28);
    case 0x10u:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950);
      sub_1A8529F8C((uint64_t)v16, (uint64_t)v7, &qword_1E9741C28);
      static Command.uidCopy(messages:mailbox:)();
      goto LABEL_36;
    case 0x11u:
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747950);
      sub_1A8529F8C((uint64_t)v16, (uint64_t)v7, &qword_1E9741C28);
      static Command.uidMove(messages:mailbox:)();
LABEL_36:
      swift_bridgeObjectRelease();
      return sub_1A8511B00((uint64_t)v7, &qword_1E9741C28);
    case 0x12u:
      *(void *)a2 = *(void *)v16;
      *(_OWORD *)(a2 + 8) = *(_OWORD *)(v16 + 8);
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 0x13u:
      long long v71 = *((_OWORD *)v16 + 1);
      long long v95 = *(_OWORD *)v16;
      long long v96 = v71;
      long long v72 = *((_OWORD *)v16 + 3);
      long long v97 = *((_OWORD *)v16 + 2);
      long long v98 = v72;
      long long v73 = sub_1A88829D0();
      *(void *)a2 = 0xD000000000000011;
      *(void *)(a2 + 8) = 0x80000001A8B3AE80;
      *(void *)(a2 + 16) = v73;
      uint64_t v20 = type metadata accessor for Command();
      swift_storeEnumTagMultiPayload();
      sub_1A886E9E4((uint64_t)&v95);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
LABEL_25:
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 0x1Bu:
      long long v74 = Capability.CompressionKind.deflate.unsafeMutableAddressor();
      uint64_t v75 = *((void *)v74 + 1);
      *(void *)a2 = *(void *)v74;
      *(void *)(a2 + 8) = v75;
      uint64_t v76 = type metadata accessor for Command();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(a2, 0, 1, v76);
      return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    default:
      uint64_t v17 = *((void *)v16 + 1);
      int v18 = *((_DWORD *)v16 + 8);
      __int16 v19 = *((_WORD *)v16 + 18);
      *(void *)a2 = *(void *)v16;
      *(void *)(a2 + 8) = v17;
      *(_OWORD *)(a2 + 16) = *((_OWORD *)v16 + 1);
      *(_DWORD *)(a2 + 32) = v18;
      *(_WORD *)(a2 + 36) = v19;
      *(unsigned char *)(a2 + 38) = v16[38];
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
  }
}

void *sub_1A88829D0()
{
  unint64_t v1 = (unint64_t)v0;
  sub_1A8A77DC8();
  sub_1A8A767E8();
  sub_1A8A784D8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8883050(v0[1]);
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8883050(v0[3]);
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8883050(v0[5]);
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  uint64_t v2 = ByteBufferAllocator.buffer(string:)(0, 0xE000000000000000, (uint64_t)j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_1A88831B8);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1A8893360(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  int64_t v10 = v9 + 1;
  if (v9 >= v8 >> 1) {
LABEL_29:
  }
    uint64_t v7 = sub_1A8893360((void *)(v8 > 1), v10, 1, v7);
  unint64_t v11 = v2 | 0x8000000000000000;
  v7[2] = v10;
  uint64_t v12 = v7;
  uint64_t v13 = &v7[3 * v9];
  v13[4] = v11;
  v13[5] = v4;
  *((unsigned char *)v13 + 54) = BYTE6(v6);
  *((_WORD *)v13 + 26) = WORD2(v6);
  *((_DWORD *)v13 + 12) = v6;
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v68 = v14;
  unint64_t v9 = *(void *)(v14 + 16);
  if (!v9)
  {
LABEL_24:
    uint64_t v51 = ByteBufferAllocator.buffer(string:)(41, 0xE100000000000000, (uint64_t)j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_1A88831B8);
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    long long v56 = v12;
    unint64_t v58 = v12[2];
    unint64_t v57 = v12[3];
    if (v58 >= v57 >> 1) {
      long long v56 = sub_1A8893360((void *)(v57 > 1), v58 + 1, 1, v12);
    }
    v56[2] = v58 + 1;
    uint64_t v59 = &v56[3 * v58];
    v59[4] = v51 | 0x8000000000000000;
    v59[5] = v53;
    *((_DWORD *)v59 + 12) = v55;
    *((unsigned char *)v59 + 54) = BYTE6(v55);
    *((_WORD *)v59 + 26) = WORD2(v55);
    return v56;
  }
  uint64_t v60 = v14 + 32;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v15 = 0;
  unint64_t v16 = v12;
  while (1)
  {
    unint64_t v61 = v9;
    uint64_t v62 = v16;
    uint64_t v4 = *(void *)(v60 + v15);
    if (!v15)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v30 = *(void *)(v4 + 16);
      if (!v30) {
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = malloc(1uLL);
    if (!result) {
      break;
    }
    int v18 = result;
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = v18;
    *(_DWORD *)(v2 + 16) = 1;
    *(void *)(v2 + 32) = j__malloc_1;
    *(void *)(v2 + 40) = j__realloc_1;
    *(void *)(v2 + 48) = sub_1A88831B8;
    *(void *)(v2 + 56) = sub_1A88831C8;
    swift_beginAccess();
    int v19 = *(_DWORD *)(v2 + 16);
    uint64_t v63 = v2;
    unint64_t v64 = 0;
    int v65 = v19;
    unsigned __int16 v66 = 0;
    char v67 = 0;
    long long v69 = xmmword_1A8AE4F70;
    uint64_t v6 = &v63;
    ByteBuffer._setBytes(_:at:)((uint64_t)&v69, (uint64_t)&v69 + 1, 0);
    unint64_t v8 = HIDWORD(v64);
    uint64_t v21 = (HIDWORD(v64) + v20);
    if (__CFADD__(HIDWORD(v64), v20)) {
      goto LABEL_28;
    }
    uint64_t v22 = v63;
    uint64_t v23 = v64;
    int v24 = v65;
    unsigned __int16 v25 = v66;
    char v26 = v67;
    uint64_t v27 = v62;
    unint64_t v9 = v62[2];
    unint64_t v28 = v62[3];
    if (v9 >= v28 >> 1) {
      uint64_t v27 = sub_1A8893360((void *)(v28 > 1), v9 + 1, 1, v62);
    }
    void v27[2] = v9 + 1;
    uint64_t v62 = v27;
    int v29 = &v27[3 * v9];
    v29[4] = v22 | 0x8000000000000000;
    v29[5] = v23 | (v21 << 32);
    *((unsigned char *)v29 + 54) = v26;
    *((_WORD *)v29 + 26) = v25;
    *((_DWORD *)v29 + 12) = v24;
    uint64_t v30 = *(void *)(v4 + 16);
    if (!v30)
    {
LABEL_15:
      char v37 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
      uint64_t v38 = *v37;
      unint64_t v1 = *((unsigned int *)v37 + 2);
      uint64_t v2 = *((unsigned int *)v37 + 3);
      int v39 = *((_DWORD *)v37 + 4);
      unsigned __int16 v40 = *((_WORD *)v37 + 10);
      char v41 = *((unsigned char *)v37 + 22);
      swift_retain();
      goto LABEL_19;
    }
LABEL_10:
    if (v30)
    {
      unsigned int v31 = (v30 - 1) | ((v30 - 1) >> 1) | (((v30 - 1) | ((v30 - 1) >> 1)) >> 2);
      unsigned int v32 = v31 | (v31 >> 4) | ((v31 | (v31 >> 4)) >> 8);
      int v33 = v32 | HIWORD(v32);
      BOOL v34 = __CFADD__(v33, 1);
      unsigned int v35 = v33 + 1;
      if (v34) {
        unsigned int v36 = -1;
      }
      else {
        unsigned int v36 = v35;
      }
    }
    else
    {
      unsigned int v36 = 0;
    }
    uint64_t result = malloc(v36);
    if (!result) {
      goto LABEL_31;
    }
    uint64_t v42 = result;
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v38 = swift_allocObject();
    *(_DWORD *)(v38 + 16) = v36;
    *(void *)(v38 + 24) = v42;
    *(void *)(v38 + 32) = j__malloc_1;
    *(void *)(v38 + 40) = j__realloc_1;
    *(void *)(v38 + 48) = sub_1A88831B8;
    *(void *)(v38 + 56) = sub_1A88831C8;
    swift_beginAccess();
    unint64_t v1 = 0;
    uint64_t v2 = 0;
    unsigned __int16 v40 = 0;
    char v41 = 0;
    int v39 = *(_DWORD *)(v38 + 16);
LABEL_19:
    uint64_t v63 = v38;
    unint64_t v64 = __PAIR64__(v2, v1);
    int v65 = v39;
    unsigned __int16 v66 = v40;
    char v67 = v41;
    ByteBuffer._setBytes(_:at:)(v4 + 32, v4 + 32 + *(void *)(v4 + 16), v2);
    uint64_t v6 = v43;
    swift_bridgeObjectRelease();
    unint64_t v8 = HIDWORD(v64);
    int64_t v10 = (HIDWORD(v64) + v6);
    if (__CFADD__(HIDWORD(v64), v6))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v44 = v63;
    uint64_t v45 = v64;
    int v46 = v65;
    unint64_t v1 = v66;
    char v47 = v67;
    unint64_t v16 = v62;
    unint64_t v49 = v62[2];
    unint64_t v48 = v62[3];
    if (v49 >= v48 >> 1) {
      unint64_t v16 = sub_1A8893360((void *)(v48 > 1), v49 + 1, 1, v62);
    }
    v16[2] = v49 + 1;
    int v50 = &v16[3 * v49];
    v50[4] = v44;
    v50[5] = v45 | (v10 << 32);
    *((unsigned char *)v50 + 54) = v47;
    *((_WORD *)v50 + 26) = v1;
    *((_DWORD *)v50 + 12) = v46;
    v15 += 16;
    unint64_t v9 = v61 - 1;
    if (v61 == 1)
    {
      uint64_t v12 = v16;
      sub_1A85276F0((uint64_t)&v68);
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A8883050(uint64_t a1)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    uint64_t v2 = sub_1A8A76838();
    if (!v3)
    {
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return a1;
    }
    unint64_t v4 = v2;
    unint64_t v5 = v3;
    if (v2 == 2573 && v3 == 0xE200000000000000 || (sub_1A8A78588() & 1) != 0 || (sub_1A8A76278() & 1) == 0) {
      goto LABEL_15;
    }
    uint64_t result = sub_1A8884574(v4, v5);
    if ((result & 0x100000000) != 0) {
      goto LABEL_20;
    }
    if ((result & 0xFFFFFF80) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      return 120;
    }
    uint64_t result = sub_1A8884574(v4, v5);
    if ((result & 0x100000000) != 0) {
      goto LABEL_21;
    }
    int v7 = result;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v7 & 0xFFFFFF00) != 0) {
      break;
    }
    if (v7 - 47 <= 0xFFFFFFFD
      && v7 - 58 <= 0xFFFFFFF5
      && (v7 & 0xDFu) - 91 < 0xFFFFFFE6)
    {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

void sub_1A88831B8(void *a1)
{
}

void *sub_1A88831C8(void *__dst, const void *__src, size_t __len)
{
  if ((__len & 0x8000000000000000) == 0) {
    return memmove(__dst, __src, __len);
  }
  __break(1u);
  return __dst;
}

uint64_t sub_1A88831D4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A88849A4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1A8883A0C(v5);
  *a1 = v2;
  return result;
}

void sub_1A8883240(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_1A88849B8(*(void *)(a1 + 16), a2, a3, a4, a5);
    swift_beginAccess();
    Swift::UInt32 v7 = 0;
  }
  else
  {
    Swift::UInt32 v7 = *((_DWORD *)ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor() + 3);
    swift_retain();
  }
  ByteBuffer._setBytes(_:at:)(a1 + 32, a1 + 32 + v6, v7);
  if (__CFADD__(v7, v8)) {
    __break(1u);
  }
}

uint64_t sub_1A8883338(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_23;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9 < 0)
      {
        __break(1u);
        goto LABEL_22;
      }
LABEL_7:
      if (v9)
      {
        uint64_t v12 = sub_1A88849B8(v9, a3, a4, a5, a6);
        uint64_t v13 = swift_beginAccess();
        int v14 = 0;
        Swift::UInt32 v15 = 0;
        __int16 v16 = 0;
        char v17 = 0;
        int v18 = *(_DWORD *)(v12 + 16);
      }
      else
      {
LABEL_9:
        int v19 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
        uint64_t v12 = *v19;
        int v14 = *((_DWORD *)v19 + 2);
        Swift::UInt32 v15 = *((_DWORD *)v19 + 3);
        int v18 = *((_DWORD *)v19 + 4);
        __int16 v16 = *((_WORD *)v19 + 10);
        char v17 = *((unsigned char *)v19 + 22);
        uint64_t v13 = swift_retain();
      }
      uint64_t v28 = v12;
      int v29 = v14;
      Swift::UInt32 v30 = v15;
      int v31 = v18;
      __int16 v32 = v16;
      char v33 = v17;
      MEMORY[0x1F4188790](v13);
      switch((int)v6)
      {
        case 0:
          v27[0] = a1;
          LOWORD(v27[1]) = a2;
          BYTE2(v27[1]) = BYTE2(a2);
          BYTE3(v27[1]) = BYTE3(a2);
          BYTE4(v27[1]) = BYTE4(a2);
          BYTE5(v27[1]) = BYTE5(a2);
          int v20 = (char *)v27 + BYTE6(a2);
          goto LABEL_15;
        case 1:
          if (a1 >> 32 < (int)a1) {
            goto LABEL_25;
          }
          sub_1A8512DFC(a1, a2);
          uint64_t v25 = sub_1A88848E8((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A870693C);
          sub_1A85135AC(a1, a2);
          LODWORD(v23) = v25;
          if ((v25 & 0x100000000) != 0) {
LABEL_18:
          }
            LODWORD(v23) = sub_1A88836D0(a1, a2, v15);
          break;
        case 2:
          uint64_t v21 = *(void *)(a1 + 16);
          uint64_t v22 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          uint64_t v23 = sub_1A88848E8(v21, v22, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A870693C);
          swift_release();
          swift_release();
          if ((v23 & 0x100000000) == 0) {
            break;
          }
          goto LABEL_18;
        case 3:
          memset(v27, 0, 14);
          int v20 = (char *)v27;
LABEL_15:
          ByteBuffer._setBytes(_:at:)((uint64_t)v27, (uint64_t)v20, v15);
          LODWORD(v23) = v24;
          break;
        default:
          JUMPOUT(0);
      }
      if (__CFADD__(v30, v23))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
      }
      return v28;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_24;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_7;
  }
}

unint64_t sub_1A88836D0(uint64_t a1, unint64_t a2, Swift::UInt32 a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = sub_1A8A74AF8();
  uint64_t v8 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  Swift::UInt32 v30 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E97418E8) == MEMORY[0x1E4F277C0]) {
    goto LABEL_27;
  }
  unint64_t v10 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_25;
      }
      unint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_7:
      unsigned int v13 = a3 + v10;
      if (__CFADD__(a3, v10)) {
        goto LABEL_24;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unsigned int v14 = *(_DWORD *)(v4 + 16);
        BOOL v15 = v13 >= v14;
        Swift::UInt32 v16 = v13 - v14;
        if (v15) {
          Swift::UInt32 v17 = v16;
        }
        else {
          Swift::UInt32 v17 = 0;
        }
        char v18 = OUTLINED_FUNCTION_68();
        ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v17, v18 & 1);
      }
      uint64_t v29 = v8;
      sub_1A888398C(v10, (uint64_t *)v4, a3);
      sub_1A8512DFC(a1, a2);
      uint64_t v19 = sub_1A8A749E8();
      sub_1A85135AC(a1, a2);
      sub_1A8885714();
      sub_1A8A77948();
      if (v33 != 1)
      {
        Swift::UInt32 v21 = a3;
        uint64_t v22 = a3;
        while (1)
        {
          unint64_t v20 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            break;
          }
          if ((v20 & 0x8000000000000000) != 0) {
            goto LABEL_22;
          }
          if (HIDWORD(v20)) {
            goto LABEL_23;
          }
          char v23 = v32;
          ByteBuffer._ensureAvailableCapacity(_:at:)(v19 + 1, v21);
          uint64_t v24 = *(void *)v4;
          uint64_t v25 = *(unsigned __int16 *)(v4 + 20);
          uint64_t v26 = *(unsigned __int8 *)(v4 + 22);
          swift_beginAccess();
          *(unsigned char *)(*(void *)(v24 + 24) + (v26 | (v25 << 8)) + v22 + v19) = v23;
          sub_1A8A77948();
          ++v19;
          if (v33 == 1) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x1A888397CLL);
      }
      unint64_t v20 = v19;
LABEL_20:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      return v20;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      unint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_7;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_7;
    default:
      unint64_t v10 = BYTE6(a2);
      goto LABEL_7;
  }
}

unint64_t sub_1A888398C(unint64_t result, uint64_t *a2, Swift::UInt32 at)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(result))
  {
    ByteBuffer._ensureAvailableCapacity(_:at:)(result, at);
    uint64_t v5 = *a2;
    uint64_t v6 = *((unsigned __int16 *)a2 + 10);
    uint64_t v7 = *((unsigned __int8 *)a2 + 22);
    swift_beginAccess();
    return *(void *)(v5 + 24) + (v7 | (v6 << 8)) + at;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8883A0C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1A8A784B8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1A88840F8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  long long v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    long long __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          long long v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1A88841C8((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v97 = sub_1A8884560((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          long long v100 = &v97[16 * v96 + 32];
          *(void *)long long v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1A8A76D48();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    long long __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unsigned int v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    Swift::UInt32 v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1A8A78588();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    Swift::UInt32 v21 = (void *)(v103 + 16 * v20);
    do
    {
      char v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1A8A78588()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1A8884464(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1A8884464((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    int v43 = &v11[16 * v41 + 32];
    *(void *)int v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          unint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1A88841C8((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      char v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1A8A78588() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1A8A780E8();
  __break(1u);
  return result;
}

uint64_t sub_1A88840F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1A8A78588(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A88841C8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      Swift::UInt32 v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        char v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1A8A78588() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)char v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)char v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unsigned int v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1A8A78588() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1A85B0ABC((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

char *sub_1A8884464(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E68);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unsigned int v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A8884560(uint64_t a1)
{
  return sub_1A8884464(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1A8884574(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1A8884654(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1A8A77DB8();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_1A8A77E88();
      }
      unsigned int v5 = sub_1A8A77E98();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1A8884654(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1A88846F4(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1A8884764(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1A88846F4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1A85D0E10(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1A8884764(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1A8A77E88();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

void *sub_1A8884888(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1)
  {
    uint64_t result = a3(&v5, a1, a2 - a1);
    if (!v3) {
      return (void *)v5;
    }
  }
  else
  {
    uint64_t result = a3((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3) {
      return (void *)HIDWORD(v5);
    }
  }
  return result;
}

uint64_t sub_1A88848E8(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_1A8A74588();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1A8A745B8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1A8A745A8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  unsigned int v16 = sub_1A8884888(v9, v15, a4);
  if (!v4) {
    return v16;
  }
  return v17;
}

uint64_t sub_1A88849A4(uint64_t a1)
{
  return sub_1A886FB58(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A88849B8(int a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    unsigned int v9 = (a1 - 1) | ((a1 - 1) >> 1) | (((a1 - 1) | ((a1 - 1) >> 1)) >> 2);
    unsigned int v10 = v9 | (v9 >> 4) | ((v9 | (v9 >> 4)) >> 8);
    int v11 = v10 | HIWORD(v10);
    BOOL v12 = __CFADD__(v11, 1);
    unsigned int v13 = v11 + 1;
    if (v12) {
      unsigned int v14 = -1;
    }
    else {
      unsigned int v14 = v13;
    }
  }
  else
  {
    unsigned int v14 = 0;
  }
  uint64_t result = a2(v14);
  if (result)
  {
    uint64_t v16 = result;
    type metadata accessor for ByteBuffer._Storage();
    uint64_t result = swift_allocObject();
    *(_DWORD *)(result + 16) = v14;
    *(void *)(result + 24) = v16;
    *(void *)(result + 32) = a2;
    *(void *)(result + 40) = a3;
    *(void *)(result + 48) = a4;
    *(void *)(result + 56) = a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8884A58(uint64_t a1, uint64_t a2)
{
  uint64_t v101 = a1;
  uint64_t v3 = type metadata accessor for CommandStreamPart();
  uint64_t v99 = *(void *)(v3 - 8);
  uint64_t v100 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v98 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A8A74C38();
  uint64_t v93 = *(void *)(v5 - 8);
  uint64_t v94 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v90 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v91 = (char *)&v87 - v8;
  uint64_t v9 = type metadata accessor for ClientCommand(0);
  MEMORY[0x1F4188790](v9);
  int v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v92 = (uint64_t *)((char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v96 = (uint64_t)&v87 - v15;
  uint64_t v16 = sub_1A8A765E8();
  MEMORY[0x1F4188790](v16 - 8);
  char v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741FE8);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Command();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8881C64(a2, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
  {
    sub_1A888576C((uint64_t)v21, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Command);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745A38);
    unint64_t v42 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1A8AD8F00;
    v136[0] = sub_1A88A2590(v101 & 0xFFFFFFFF000000FFLL);
    sub_1A8A765C8();
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
    sub_1A887B668();
    uint64_t v44 = sub_1A8A76588();
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    if (v46)
    {
      uint64_t v47 = (uint64_t *)(v43 + v42);
      uint64_t v48 = type metadata accessor for TaggedCommand();
      sub_1A888564C((uint64_t)v25, v43 + v42 + *(int *)(v48 + 20), (uint64_t (*)(void))type metadata accessor for Command);
      *uint64_t v47 = v44;
      v47[1] = v46;
      swift_storeEnumTagMultiPayload();
      sub_1A88856B4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Command);
      return v43;
    }
    goto LABEL_22;
  }
  unint64_t v89 = v18;
  sub_1A8511B00((uint64_t)v21, &qword_1E9741FE8);
  sub_1A888564C(a2, (uint64_t)v11, type metadata accessor for ClientCommand);
  if (swift_getEnumCaseMultiPayload() != 9)
  {
LABEL_24:
    sub_1A88856B4((uint64_t)v11, type metadata accessor for ClientCommand);
    sub_1A8A780F8();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1A88854B0);
  }
  uint64_t v26 = *(void *)v11;
  uint64_t v27 = *((unsigned int *)v11 + 2);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741700);
  uint64_t v29 = (uint64_t)&v11[*(int *)(v28 + 64)];
  uint64_t v30 = (uint64_t *)&v11[*(int *)(v28 + 80)];
  uint64_t v32 = *v30;
  unint64_t v31 = v30[1];
  uint64_t v95 = v32;
  unint64_t v97 = v31;
  uint64_t v33 = v96;
  sub_1A8529F8C(v29, v96, &qword_1E9741350);
  uint64_t v34 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v35 = sub_1A8886AE4(v34);
  swift_bridgeObjectRelease();
  v136[0] = (uint64_t)v35;
  sub_1A88831D4(v136);
  uint64_t v87 = v26;
  uint64_t v88 = v27;
  swift_bridgeObjectRelease();
  uint64_t v36 = v136[0];
  uint64_t v37 = (uint64_t)v92;
  sub_1A88854D0(v33, (uint64_t)v92);
  uint64_t v39 = v93;
  uint64_t v38 = v94;
  int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v37, 1, v94);
  if (v40 == 1)
  {
    uint64_t v41 = 0;
  }
  else
  {
    unint64_t v49 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v91, v37, v38);
    uint64_t v50 = v90;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v90, v49, v38);
    uint64_t v41 = ServerMessageDate.init(_:)(v50);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v49, v38);
  }
  uint64_t v51 = sub_1A8894734(MEMORY[0x1E4FBC860]);
  AppendOptions.init(flagList:internalDate:extensions:)(v36, v41, v40 == 1, v51, v52, v53, (uint64_t)v136);
  int v11 = (char *)v136[0];
  uint64_t v54 = v136[1];
  uint64_t v55 = v137;
  uint64_t v56 = v138;
  uint64_t v57 = v139;
  uint64_t v58 = 0;
  switch(v97 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v95), v95))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v58 = HIDWORD(v95) - (int)v95;
LABEL_13:
      uint64_t v93 = v58;
      uint64_t v94 = *((void *)&v138 + 1);
      long long v103 = xmmword_1A8AD8F30;
      *(void *)&long long v141 = sub_1A88A2590(v101 & 0xFFFFFFFF000000FFLL);
      sub_1A8A765C8();
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
      sub_1A887B668();
      uint64_t v62 = sub_1A8A76588();
      uint64_t v64 = v63;
      swift_bridgeObjectRelease();
      if (!v64) {
        goto LABEL_23;
      }
      uint64_t v92 = &v104;
      uint64_t v104 = v62;
      uint64_t v105 = v64;
      uint64_t v106 = v87;
      uint64_t v107 = v88;
      uint64_t v109 = 0;
      uint64_t v110 = 0;
      uint64_t v108 = 0;
      v111[0] = 0;
      v144[0] = v11;
      long long v141 = v138;
      sub_1A8529F8C((uint64_t)&v141, (uint64_t)v143, &qword_1E9743280);
      uint64_t v142 = *((void *)&v141 + 1);
      uint64_t v140 = v57;
      uint64_t v112 = v11;
      uint64_t v113 = v54;
      uint64_t v114 = v55;
      uint64_t v115 = v56;
      uint64_t v116 = v94;
      uint64_t v117 = v57;
      uint64_t v118 = v93;
      char v119 = 32;
      sub_1A852CA8C((uint64_t)v144);
      sub_1A858B1E0((uint64_t)v143);
      sub_1A858B1E0((uint64_t)&v142);
      sub_1A858B1E0((uint64_t)&v140);
      uint64_t v65 = v95;
      unint64_t v66 = v97;
      sub_1A8512DFC(v95, v97);
      uint64_t v67 = sub_1A8883338(v65, v66, (uint64_t (*)(void))j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_1A88831B8, (uint64_t)sub_1A88831C8);
      uint64_t v69 = v68;
      uint64_t v71 = v70;
      sub_1A85135AC(v65, v66);
      uint64_t v120 = v67;
      uint64_t v121 = v69;
      uint64_t v122 = v71 & 0xFFFFFFFFFFFFFFLL;
      long long v123 = 0u;
      long long v124 = 0u;
      char v125 = 64;
      long long v126 = 0u;
      long long v127 = 0u;
      long long v128 = 0u;
      uint64_t v129 = 0;
      char v130 = -64;
      uint64_t v131 = 2;
      long long v132 = 0u;
      long long v133 = 0u;
      long long v134 = 0u;
      char v135 = -64;
      uint64_t v102 = MEMORY[0x1E4FBC860];
      sub_1A886F364(0, 5, 0);
      uint64_t v72 = 0;
      uint64_t v43 = v102;
      uint64_t v73 = v98;
      do
      {
        uint64_t v101 = v43;
        uint64_t v74 = *(uint64_t *)((char *)&v104 + v72);
        uint64_t v75 = *(uint64_t *)((char *)&v105 + v72);
        uint64_t v76 = *(uint64_t *)((char *)&v106 + v72);
        uint64_t v77 = *(uint64_t *)((char *)&v107 + v72);
        uint64_t v78 = *(uint64_t *)((char *)&v108 + v72);
        uint64_t v79 = *(uint64_t *)((char *)&v109 + v72);
        uint64_t v80 = *(void *)&v111[v72 - 8];
        *(void *)uint64_t v73 = v74;
        *(void *)(v73 + 8) = v75;
        *(void *)(v73 + 16) = v76;
        *(void *)(v73 + 24) = v77;
        *(void *)(v73 + 32) = v78;
        *(void *)(v73 + 40) = v79;
        *(void *)(v73 + 48) = v80;
        unsigned __int8 v81 = v111[v72];
        *(unsigned char *)(v73 + 56) = v81;
        swift_storeEnumTagMultiPayload();
        uint64_t v82 = v75;
        uint64_t v43 = v101;
        sub_1A8885538(v74, v82, v76, v77, v78, v79, v80, v81);
        uint64_t v102 = v43;
        unint64_t v84 = *(void *)(v43 + 16);
        unint64_t v83 = *(void *)(v43 + 24);
        if (v84 >= v83 >> 1)
        {
          sub_1A886F364(v83 > 1, v84 + 1, 1);
          uint64_t v43 = v102;
        }
        *(void *)(v43 + 16) = v84 + 1;
        uint64_t v85 = v98;
        sub_1A888576C(v98, v43+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(void *)(v99 + 72) * v84, (uint64_t (*)(void))type metadata accessor for CommandStreamPart);
        v72 += 64;
        uint64_t v73 = v85;
      }
      while (v72 != 320);
      sub_1A85135AC(v95, v97);
      sub_1A85276F0((uint64_t)v144);
      sub_1A858B20C((uint64_t)v143);
      sub_1A858B20C((uint64_t)&v142);
      sub_1A858B20C((uint64_t)&v140);
      sub_1A8511B00(v96, &qword_1E9741350);
      swift_arrayDestroy();
      return v43;
    case 2uLL:
      uint64_t v60 = *(void *)(v95 + 16);
      uint64_t v59 = *(void *)(v95 + 24);
      BOOL v61 = __OFSUB__(v59, v60);
      uint64_t v58 = v59 - v60;
      if (!v61) {
        goto LABEL_13;
      }
      goto LABEL_21;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v58 = BYTE6(v97);
      goto LABEL_13;
  }
}

ValueMetadata *type metadata accessor for ClientCommandEncoder()
{
  return &type metadata for ClientCommandEncoder;
}

uint64_t sub_1A88854D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8885538(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_7;
    case 1:
    case 3:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_7:
      uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 2:
    case 4:
      uint64_t result = swift_retain();
      break;
    case 5:
      uint64_t result = sub_1A8762D48(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A888564C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A88856B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A8885714()
{
  unint64_t result = qword_1E97412D0;
  if (!qword_1E97412D0)
  {
    sub_1A8A74AF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97412D0);
  }
  return result;
}

uint64_t sub_1A888576C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t Namespace.prefix.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

double (*Namespace.prefix.modify())(void)
{
  return nullsub_1;
}

uint64_t Namespace.separator.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Namespace.separator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

double (*Namespace.separator.modify())(void)
{
  return nullsub_1;
}

uint64_t Namespace.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  sub_1A8A78768();
  if (v3)
  {
    uint64_t v4 = a2 + 32;
    do
    {
      ++v4;
      sub_1A8A78778();
      --v3;
    }
    while (v3);
  }
  return sub_1A8A762A8();
}

uint64_t static Namespace.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1, a4)) {
    return 0;
  }
  if (a2 == a5 && a3 == a6) {
    return 1;
  }
  return sub_1A8A78588();
}

uint64_t Namespace.hashValue.getter(uint64_t a1)
{
  sub_1A8A78738();
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A8A78768();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    do
    {
      ++v3;
      sub_1A8A78778();
      --v2;
    }
    while (v2);
  }
  sub_1A8A762A8();
  return sub_1A8A787C8();
}

uint64_t sub_1A8885A50()
{
  return Namespace.hashValue.getter(*v0);
}

uint64_t sub_1A8885A5C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  sub_1A8A78768();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_1A8A78778();
      --v2;
    }
    while (v2);
  }
  return sub_1A8A762A8();
}

uint64_t sub_1A8885AD8()
{
  uint64_t v1 = *v0;
  sub_1A8A78738();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1A8A78768();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_1A8A78778();
      --v2;
    }
    while (v2);
  }
  sub_1A8A762A8();
  return sub_1A8A787C8();
}

uint64_t sub_1A8885B60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*a1, *a2)) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_1A8A78588();
}

char *Namespace.init(_:)(uint64_t a1)
{
  sub_1A8887078(a1 + 24, (uint64_t)v10);
  sub_1A8887078((uint64_t)v10, (uint64_t)&v11);
  uint64_t v2 = v12;
  if (v12)
  {
    unint64_t v3 = *(void *)(a1 + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 16);
    uint64_t v5 = *(unsigned __int16 *)(a1 + 20);
    uint64_t v6 = *(unsigned __int8 *)(a1 + 22);
    sub_1A8561B38((uint64_t)v10);
    uint64_t v7 = swift_retain();
    uint64_t v8 = MailboxName.init(_:)(v7, v3, v4 | (v5 << 32) | (v6 << 48));
    uint64_t v2 = _s13IMAP2Protocol9NamespaceV6prefix9separatorACSays5UInt8VG_SJtcfC_0(v8);
  }
  sub_1A86FD29C(a1);
  return v2;
}

BOOL Namespace.hasPrefix.getter(uint64_t a1)
{
  return *(void *)(a1 + 16) != 0;
}

BOOL Namespace.contains(_:)(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (sub_1A8885D58(a3, a1)) {
    return 1;
  }
  uint64_t v6 = MailboxName.inbox.unsafeMutableAddressor();
  if ((a2 | ((unint64_t)a2 << 32)) != (*((unsigned int *)v6 + 2) | ((unint64_t)*((unsigned int *)v6 + 2) << 32))) {
    return 0;
  }
  uint64_t v7 = *v6;
  return sub_1A8866D34(a1, v7);
}

uint64_t sub_1A8885D58(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 16);
    if (!v3) {
      return 1;
    }
    if (*(unsigned __int8 *)(a2 + 32) != *(unsigned __int8 *)(result + 32)) {
      return 0;
    }
    uint64_t v4 = 0;
    uint64_t v5 = result + 33;
    unint64_t v6 = v3 - 1;
    while (v2 - 1 != v4)
    {
      uint64_t result = v6 == v4;
      if (v6 != v4)
      {
        int v7 = *(unsigned __int8 *)(a2 + 33 + v4);
        int v8 = *(unsigned __int8 *)(v5 + v4++);
        if (v7 == v8) {
          continue;
        }
      }
      return result;
    }
  }
  else
  {
    unint64_t v3 = *(void *)(result + 16);
  }
  if (v2 == v3) {
    return 1;
  }
  if (v2 < v3) {
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t Namespace.addPrefix(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v3 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A886F180(v3);
  return MailboxName.init(_:)(a3);
}

uint64_t Namespace.addPrefix(to:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v9 = HIDWORD(a2);
  uint64_t v10 = sub_1A85BC130(BYTE4(a2));
  if (!v11) {
    goto LABEL_9;
  }
  if (v10 == a4 && v11 == a5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v12 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_9:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
LABEL_6:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v13 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A886F180(v13);
  a1 = MailboxName.init(_:)(a3);
  sub_1A85BC130(v9);
  if (!v14) {
    return a1;
  }
  if ((sub_1A8A76258() & 0x100) == 0)
  {
    sub_1A8A76258();
    swift_bridgeObjectRelease();
    return a1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A88870E0();
  swift_allocError();
  *uint64_t v16 = 0xD000000000000029;
  v16[1] = 0x80000001A8B3ADC0;
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t Namespace.removePrefix(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (sub_1A8885D58(a3, a1))
  {
    uint64_t v5 = sub_1A8581A3C(*(void *)(a3 + 16), v4);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    unint64_t v11 = v10;
    if (v10)
    {
      sub_1A8A785E8();
      swift_unknownObjectRetain_n();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        uint64_t v13 = MEMORY[0x1E4FBC860];
      }
      uint64_t v14 = *(void *)(v13 + 16);
      swift_release();
      if (__OFSUB__(v11 >> 1, v9))
      {
        __break(1u);
      }
      else if (v14 == (v11 >> 1) - v9)
      {
        uint64_t v12 = swift_dynamicCastClass();
        if (!v12)
        {
          swift_unknownObjectRelease();
          uint64_t v12 = MEMORY[0x1E4FBC860];
        }
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    }
    uint64_t v12 = sub_1A8886BCC(v5, v7, v9, v11);
LABEL_12:
    swift_unknownObjectRelease();
    return MailboxName.init(_:)(v12);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v4;
}

uint64_t Namespace.removePrefix(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v9 = HIDWORD(a2);
  uint64_t v10 = sub_1A85BC130(BYTE4(a2));
  if (!v11) {
    goto LABEL_10;
  }
  if (v10 == a4 && v11 == a5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v12 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_10:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    return a1;
  }
LABEL_6:
  if ((sub_1A8885D58(a3, a1) & 1) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_19;
  }
  uint64_t v13 = sub_1A8581A3C(*(void *)(a3 + 16), a1);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  if (v18)
  {
    sub_1A8A785E8();
    swift_unknownObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v21 = swift_dynamicCastClass();
    if (!v21)
    {
      swift_unknownObjectRelease();
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    uint64_t v22 = *(void *)(v21 + 16);
    swift_release();
    if (__OFSUB__(v19 >> 1, v17))
    {
      __break(1u);
    }
    else if (v22 == (v19 >> 1) - v17)
    {
      uint64_t v20 = swift_dynamicCastClass();
      if (!v20)
      {
        swift_unknownObjectRelease();
        uint64_t v20 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_18;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  uint64_t v20 = sub_1A8886BCC(v13, v15, v17, v19);
LABEL_18:
  swift_unknownObjectRelease();
  a1 = MailboxName.init(_:)(v20);
LABEL_19:
  sub_1A85BC130(v9);
  if (!v23) {
    return a1;
  }
  if ((sub_1A8A76258() & 0x100) == 0)
  {
    sub_1A8A76258();
    swift_bridgeObjectRelease();
    return a1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A88870E0();
  swift_allocError();
  void *v25 = 0xD000000000000029;
  v25[1] = 0x80000001A8B3ADC0;
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t Namespace.isNotes(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if ((sub_1A8885D58(a3, a1) & 1) == 0)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    goto LABEL_13;
  }
  uint64_t v5 = sub_1A8581A3C(*(void *)(a3 + 16), v4);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v11 = v10;
  if (v10)
  {
    sub_1A8A785E8();
    swift_unknownObjectRetain_n();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_unknownObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v14 = *(void *)(v13 + 16);
    swift_release();
    if (__OFSUB__(v11 >> 1, v9))
    {
      __break(1u);
    }
    else if (v14 == (v11 >> 1) - v9)
    {
      uint64_t v12 = swift_dynamicCastClass();
      if (!v12)
      {
        swift_unknownObjectRelease();
        uint64_t v12 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_12;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  uint64_t v12 = sub_1A8886BCC(v5, v7, v9, v11);
LABEL_12:
  swift_unknownObjectRelease();
  uint64_t v4 = MailboxName.init(_:)(v12);
LABEL_13:
  if (sub_1A8886774(0x7365746F4EuLL, 0xE500000000000000, v4))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_1A8A767E8();
    sub_1A88869A8(5, v4);
    char v19 = sub_1A8887134(0x7365746F4EuLL, 0xE500000000000000, v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v19 & 1;
  }
}

uint64_t sub_1A888659C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = a4 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  unint64_t v9 = 0;
  unint64_t v10 = (uint64_t *)(a2 + 40);
  while (v9 == v5)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    unint64_t v9 = v5;
    if (!v6) {
      goto LABEL_19;
    }
LABEL_10:
    uint64_t v16 = *(v10 - 1);
    uint64_t v14 = *v10;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if (!v12) {
      goto LABEL_19;
    }
    if (!v14) {
      goto LABEL_16;
    }
    if (v13 == v16 && v12 == v14)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return 0;
      }
    }
    --v6;
    v10 += 2;
  }
  if (v9 >= v5)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = (uint64_t *)(v7 + 16 * v9);
  uint64_t v13 = *v15;
  uint64_t v12 = v15[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v6)
  {
    ++v9;
    goto LABEL_10;
  }
  if (v12)
  {
LABEL_16:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_20;
  }
  uint64_t v14 = 0;
LABEL_19:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v14)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

unint64_t sub_1A8886774(unint64_t result, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = result;
  unint64_t v5 = 0;
  unint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v23 = a3 + 32;
  uint64_t v24 = result;
  unint64_t v25 = v7;
  uint64_t v8 = 4 * v7;
  uint64_t v9 = (result >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = 4 << v9;
  uint64_t v19 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v20 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v11 = 15;
  uint64_t v21 = 4 << v9;
  uint64_t v22 = v8;
  while (1)
  {
    if (v5 == v6)
    {
      int v12 = 0;
      unint64_t v13 = v6;
      goto LABEL_10;
    }
    if (v5 >= v6) {
      break;
    }
    int v12 = *(unsigned __int8 *)(v23 + v5);
    unint64_t v13 = v5 + 1;
LABEL_10:
    unint64_t v14 = v11 >> 14;
    BOOL v15 = v11 >> 14 == v8;
    if (v11 >> 14 == v8)
    {
      unsigned __int8 v16 = 0;
      if (v5 == v6) {
        return v15;
      }
      goto LABEL_30;
    }
    unint64_t v17 = v11 & 0xC;
    uint64_t result = v11;
    if (v17 == v10)
    {
      uint64_t result = sub_1A85D0E10(v11, v24, a2);
      uint64_t v10 = v21;
      unint64_t v4 = v24;
    }
    unint64_t v18 = result >> 16;
    if (result >> 16 >= v25) {
      goto LABEL_34;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1A8A76888();
      uint64_t v10 = v21;
      unint64_t v4 = v24;
      unsigned __int8 v16 = result;
      if (v17 == v21) {
        goto LABEL_27;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v26[0] = v4;
      v26[1] = v20;
      unsigned __int8 v16 = *((unsigned char *)v26 + v18);
      if (v17 == v10) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t result = v19;
      if ((v4 & 0x1000000000000000) == 0)
      {
        uint64_t result = sub_1A8A77E88();
        uint64_t v10 = v21;
        unint64_t v4 = v24;
      }
      unsigned __int8 v16 = *(unsigned char *)(result + v18);
      if (v17 == v10)
      {
LABEL_27:
        uint64_t result = sub_1A85D0E10(v11, v24, a2);
        uint64_t v10 = v21;
        unint64_t v4 = v24;
        unint64_t v11 = result;
        uint64_t v8 = v22;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_24:
          unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v5 == v6) {
            return v15;
          }
          goto LABEL_30;
        }
        goto LABEL_28;
      }
    }
    uint64_t v8 = v22;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_24;
    }
LABEL_28:
    if (v25 <= v11 >> 16) {
      goto LABEL_35;
    }
    uint64_t result = sub_1A8A76858();
    uint64_t v10 = v21;
    unint64_t v4 = v24;
    unint64_t v11 = result;
    if (v5 == v6) {
      return v15;
    }
LABEL_30:
    BOOL v15 = 0;
    if (v14 != v8)
    {
      unint64_t v5 = v13;
      if (v12 == v16) {
        continue;
      }
    }
    return v15;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

int64_t sub_1A88869A8(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

void *sub_1A88869EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E110);
  unint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size_0(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_1A8886D28((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8545D30();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1A8886AE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745AB0);
  unint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size_0(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A8543C58((uint64_t)&v8, v3 + 4, v1, a1);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8545D30();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1A8886BCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5) {
          goto LABEL_17;
        }
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EB8);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size_0(v8);
      void v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A8886D28(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *int64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 24 * v16;
    int v21 = *(_DWORD *)(v20 + 16);
    __int16 v22 = *(_WORD *)(v20 + 20);
    char v23 = *(unsigned char *)(v20 + 22);
    uint64_t v24 = *(void *)(v20 + 8);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v24;
    *(_DWORD *)(v11 + 16) = v21;
    *(_WORD *)(v11 + 20) = v22;
    *(unsigned char *)(v11 + 22) = v23;
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v25;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

char *_s13IMAP2Protocol9NamespaceV6prefix9separatorACSays5UInt8VG_SJtcfC_0(uint64_t a1)
{
  uint64_t v1 = (char *)a1;
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1, MEMORY[0x1E4FBC860]))
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    __int16 v2 = sub_1A8A76258();
    if ((v2 & 0x100) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned __int8 v3 = v2;
      uint64_t v4 = *((void *)v1 + 2);
      if (v4)
      {
        int v5 = v1[v4 + 31];
        swift_bridgeObjectRelease();
        if (v5 == v3) {
          return v1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v1 = sub_1A8892FB0(0, *((void *)v1 + 2) + 1, 1, v1);
      }
      unint64_t v6 = *((void *)v1 + 2);
      unint64_t v7 = *((void *)v1 + 3);
      unint64_t v8 = v6 + 1;
      if (v6 >= v7 >> 1)
      {
        unint64_t v13 = v6 + 1;
        uint64_t v10 = v1;
        unint64_t v11 = *((void *)v1 + 2);
        int64_t v12 = sub_1A8892FB0((char *)(v7 > 1), v6 + 1, 1, v10);
        unint64_t v6 = v11;
        unint64_t v8 = v13;
        uint64_t v1 = v12;
      }
      *((void *)v1 + 2) = v8;
      v1[v6 + 32] = v3;
    }
  }
  return v1;
}

uint64_t sub_1A8887078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A88870E0()
{
  unint64_t result = qword_1E974E100;
  if (!qword_1E974E100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E100);
  }
  return result;
}

unint64_t sub_1A8887134(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = a4;
  unint64_t v7 = result;
  int64_t v8 = a5 >> 1;
  uint64_t v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v9 = result & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v27 = result;
  unint64_t v28 = v9;
  uint64_t v10 = 4 * v9;
  uint64_t v11 = (result >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v11) = 1;
  }
  uint64_t v12 = 4 << v11;
  uint64_t v21 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v13 = 15;
  uint64_t v23 = 4 << v11;
  uint64_t v24 = v10;
  while (1)
  {
    if (v5 == v8)
    {
      int v14 = 0;
      uint64_t v15 = v8;
      goto LABEL_11;
    }
    if (v5 < a4 || v5 >= v8) {
      break;
    }
    int v14 = *(unsigned __int8 *)(a3 + v5);
    uint64_t v15 = v5 + 1;
LABEL_11:
    unint64_t v16 = v13 >> 14;
    BOOL v17 = v13 >> 14 == v10;
    if (v13 >> 14 == v10)
    {
      unsigned __int8 v18 = 0;
      if (v5 == v8) {
        return v17;
      }
      goto LABEL_31;
    }
    unint64_t v19 = v13 & 0xC;
    unint64_t result = v13;
    if (v19 == v12)
    {
      unint64_t result = sub_1A85D0E10(v13, v27, a2);
      uint64_t v12 = v23;
      unint64_t v7 = v27;
    }
    unint64_t v20 = result >> 16;
    if (result >> 16 >= v28) {
      goto LABEL_35;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1A8A76888();
      uint64_t v12 = v23;
      unint64_t v7 = v27;
      unsigned __int8 v18 = result;
      if (v19 == v23) {
        goto LABEL_28;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v29[0] = v7;
      v29[1] = v22;
      unsigned __int8 v18 = *((unsigned char *)v29 + v20);
      if (v19 == v12) {
        goto LABEL_28;
      }
    }
    else
    {
      unint64_t result = v21;
      if ((v7 & 0x1000000000000000) == 0)
      {
        unint64_t result = sub_1A8A77E88();
        uint64_t v12 = v23;
        unint64_t v7 = v27;
      }
      unsigned __int8 v18 = *(unsigned char *)(result + v20);
      if (v19 == v12)
      {
LABEL_28:
        unint64_t result = sub_1A85D0E10(v13, v27, a2);
        uint64_t v12 = v23;
        unint64_t v7 = v27;
        unint64_t v13 = result;
        uint64_t v10 = v24;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_25:
          unint64_t v13 = (v13 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v5 == v8) {
            return v17;
          }
          goto LABEL_31;
        }
        goto LABEL_29;
      }
    }
    uint64_t v10 = v24;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_25;
    }
LABEL_29:
    if (v28 <= v13 >> 16) {
      goto LABEL_36;
    }
    unint64_t result = sub_1A8A76858();
    uint64_t v12 = v23;
    unint64_t v7 = v27;
    unint64_t v13 = result;
    if (v5 == v8) {
      return v17;
    }
LABEL_31:
    BOOL v17 = 0;
    if (v16 != v10)
    {
      uint64_t v5 = v15;
      if (v14 == v18) {
        continue;
      }
    }
    return v17;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1A888737C()
{
  unint64_t result = qword_1E974E108;
  if (!qword_1E974E108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E108);
  }
  return result;
}

void *sub_1A88873D4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *assignWithCopy for Namespace(void *a1, void *a2)
{
  *a1 = *a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8_3(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for Namespace(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Namespace()
{
  return &type metadata for Namespace;
}

uint64_t sub_1A88874E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (unint64_t i = (void *)(v7 + 48); ; i += 3)
  {
    if (*i && *(i - 2) == a1)
    {
      BOOL v10 = *(i - 1) == a2 && *i == a3;
      if (v10 || (sub_1A8A78588() & 1) != 0) {
        break;
      }
    }
    if (!--v8) {
      return 0;
    }
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t sub_1A88875D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(v3 + 32);
  swift_beginAccess();
  Swift::UInt64 v8 = *(void *)(*(void *)(v3 + 32) + 16);
  uint64_t v9 = (void *)(v3 + 16);
  swift_beginAccess();
  if (v8)
  {
    Swift::UInt64 v3 = sub_1A8887864(v8);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v9 = (void *)*v7;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v7 = (uint64_t)v9;
    if (result)
    {
      if ((v3 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = (uint64_t)sub_1A88797B4(v9);
  uint64_t v9 = (void *)result;
  uint64_t *v7 = result;
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v3 < v9[2])
  {
    uint64_t v11 = &v9[3 * v3];
    long long v11[4] = a1;
    v11[5] = a2;
    v11[6] = a3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1A88876F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParsedStringCache()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for ParsedStringCache.Element(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *assignWithCopy for ParsedStringCache.Element(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ParsedStringCache.Element(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ParsedStringCache.Element()
{
  return &type metadata for ParsedStringCache.Element;
}

uint64_t sub_1A888781C(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_1A8A78588();
  }
}

Swift::UInt64 sub_1A8887864(Swift::UInt64 result)
{
  if (result)
  {
    Swift::UInt64 v1 = result;
    Swift::UInt64 v2 = PCG32Random.next()();
    Swift::UInt64 v3 = v2 * v1;
    uint64_t result = (v2 * (unsigned __int128)v1) >> 64;
    if (v3 < v1)
    {
      Swift::UInt64 v4 = -(uint64_t)v1 % v1;
      if (v4 > v3)
      {
        do
          Swift::UInt64 v5 = PCG32Random.next()();
        while (v4 > v5 * v1);
        return (v5 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PushRegistrationInfo.init(apsVersion:accountID:deviceToken:subtopic:mailboxes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_DWORD *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  return result;
}

uint64_t PushRegistrationInfo.apsVersion.getter()
{
  return *v0;
}

uint64_t PushRegistrationInfo.apsVersion.setter(uint64_t result)
{
  *Swift::UInt64 v1 = result;
  return result;
}

double (*PushRegistrationInfo.apsVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.accountID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t PushRegistrationInfo.accountID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

double (*PushRegistrationInfo.accountID.modify())(void)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.deviceToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t PushRegistrationInfo.deviceToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

double (*PushRegistrationInfo.deviceToken.modify())(void)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.subtopic.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t PushRegistrationInfo.subtopic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

double (*PushRegistrationInfo.subtopic.modify())(void)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.mailboxes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t PushRegistrationInfo.mailboxes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

double (*PushRegistrationInfo.mailboxes.modify())(void)
{
  return nullsub_1;
}

uint64_t PushRegistrationInfo.hash(into:)()
{
  sub_1A8A78798();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t result = sub_1A8A78768();
  if (v2)
  {
    uint64_t v4 = v1 + 40;
    do
    {
      v4 += 16;
      uint64_t result = sub_1A8A78768();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t PushRegistrationInfo.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8887C18()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8887C5C()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A8887C98(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v5;
  return _s13IMAP2Protocol20PushRegistrationInfoV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t PushRegistrationResponse.apsVersion.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*PushRegistrationResponse.apsVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t PushRegistrationResponse.topic.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PushRegistrationResponse.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

double (*PushRegistrationResponse.topic.modify())(void)
{
  return nullsub_1;
}

uint64_t PushRegistrationResponse.mailboxes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t PushRegistrationResponse.mailboxes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

double (*PushRegistrationResponse.mailboxes.modify())(void)
{
  return nullsub_1;
}

uint64_t static PushRegistrationResponse.__derived_struct_equals(_:_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 != a5 || (a2 != a6 || a3 != a7) && (sub_1A8A78588() & 1) == 0) {
    return 0;
  }
  return sub_1A886C240(a4, a8);
}

uint64_t sub_1A8887E74(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a2 + 24);
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (!v4 && (sub_1A8A78588() & 1) == 0) {
    return 0;
  }
  return sub_1A886C240(v2, v3);
}

uint64_t _s13IMAP2Protocol20PushRegistrationInfoV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (!v4 && (sub_1A8A78588() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (!v5 && (sub_1A8A78588() & 1) == 0
    || (*(void *)(a1 + 40) != *(void *)(a2 + 40) || *(void *)(a1 + 48) != *(void *)(a2 + 48))
    && (sub_1A8A78588() & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a2 + 56);
  return sub_1A886C240(v6, v7);
}

unint64_t sub_1A8887FC0()
{
  unint64_t result = qword_1E974E118;
  if (!qword_1E974E118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E118);
  }
  return result;
}

uint64_t destroy for PushRegistrationInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushRegistrationInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushRegistrationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushRegistrationInfo()
{
  return &type metadata for PushRegistrationInfo;
}

uint64_t destroy for PushRegistrationResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushRegistrationResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushRegistrationResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushRegistrationResponse()
{
  return &type metadata for PushRegistrationResponse;
}

uint64_t sub_1A8888488(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      int64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v10 >= v8) {
        return 1;
      }
      uint64_t v7 = *(void *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v8) {
          return 1;
        }
        uint64_t v7 = *(void *)(v4 + 8 * v3);
        if (!v7)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v8) {
            return 1;
          }
          uint64_t v7 = *(void *)(v4 + 8 * v3);
          if (!v7)
          {
            int64_t v3 = v10 + 3;
            if (v10 + 3 >= v8) {
              return 1;
            }
            uint64_t v7 = *(void *)(v4 + 8 * v3);
            if (!v7) {
              break;
            }
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_1A8A78738();
    sub_1A8A78768();
    __n128 result = sub_1A8A787C8();
    unint64_t v9 = result & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v10 + 4;
  if (v11 >= v8) {
    return 1;
  }
  uint64_t v7 = *(void *)(v4 + 8 * v11);
  if (v7)
  {
    int64_t v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v7) {
      goto LABEL_8;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1A888860C(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  int64_t v4 = sub_1A888B810(a1, a2);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  int64_t v6 = v4;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1A886F2E8(0, v4 & ~(v4 >> 63), 0);
  if (v6 < 0) {
    goto LABEL_61;
  }
  uint64_t v8 = (v3 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v10 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v10 = v3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v11 = 15;
  uint64_t v25 = 4 << v8;
  uint64_t v26 = v3;
  unint64_t v24 = v10;
  while (1)
  {
    unint64_t v12 = v11 & 0xC;
    BOOL v13 = (v11 & 1) == 0 || v12 == v9;
    BOOL v14 = v13;
    if (v13) {
      break;
    }
    unint64_t result = v11;
    if (v11 >> 16 >= v10) {
      goto LABEL_58;
    }
LABEL_24:
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v15 = sub_1A8A77DB8();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        unint64_t v27 = v3;
        uint64_t v28 = a2 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v3 & 0x1000000000000000) == 0)
      {
        sub_1A8A77E88();
      }
      unsigned int v15 = sub_1A8A77E98();
    }
    if (v15 >= 0x20) {
      unsigned int v16 = v15;
    }
    else {
      unsigned int v16 = v15 + 9216;
    }
    uint64_t v5 = v29;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1A886F2E8(0, *(void *)(v5 + 16) + 1, 1);
      uint64_t v5 = v29;
    }
    unint64_t v18 = *(void *)(v5 + 16);
    unint64_t v17 = *(void *)(v5 + 24);
    if (v18 >= v17 >> 1)
    {
      unint64_t result = sub_1A886F2E8(v17 > 1, v18 + 1, 1);
      uint64_t v5 = v29;
    }
    *(void *)(v5 + 16) = v18 + 1;
    *(_DWORD *)(v5 + 4 * v18 + 32) = v16;
    if (v14)
    {
      uint64_t v9 = v25;
      unint64_t v3 = v26;
      unint64_t v10 = v24;
      if (v12 == v25)
      {
        unint64_t result = sub_1A85D0E10(v11, v26, a2);
        unint64_t v11 = result;
        if (v24 <= result >> 16) {
          goto LABEL_60;
        }
      }
      else if (v24 <= v11 >> 16)
      {
        goto LABEL_60;
      }
      if ((v11 & 1) == 0) {
        unint64_t v11 = v11 & 0xC | sub_1A8884764(v11, v26, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
      }
    }
    else
    {
      unint64_t v10 = v24;
      uint64_t v9 = v25;
      unint64_t v3 = v26;
      if (v24 <= v11 >> 16) {
        goto LABEL_59;
      }
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t v11 = sub_1A8A76698();
      if (!--v6) {
        return v5;
      }
    }
    else
    {
      unint64_t v19 = v11 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        unint64_t v27 = v3;
        uint64_t v28 = a2 & 0xFFFFFFFFFFFFFFLL;
        int v21 = *((unsigned __int8 *)&v27 + v19);
      }
      else
      {
        uint64_t v20 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v3 & 0x1000000000000000) == 0) {
          uint64_t v20 = sub_1A8A77E88();
        }
        int v21 = *(unsigned __int8 *)(v20 + v19);
      }
      int v22 = (char)v21;
      unsigned int v23 = __clz(v21 ^ 0xFF) - 24;
      if (v22 >= 0) {
        LOBYTE(v23) = 1;
      }
      unint64_t v11 = ((v19 + v23) << 16) | 5;
      if (!--v6) {
        return v5;
      }
    }
  }
  unint64_t result = v11;
  if (v12 == v9) {
    unint64_t result = sub_1A85D0E10(v11, v3, a2);
  }
  if (result >> 16 < v10)
  {
    if ((result & 1) == 0) {
      sub_1A8884764(result, v3, a2);
    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

Swift::String __swiftcall UntaggedResponse.makeDescriptionWithoutPII()()
{
  sub_1A8888A48(&v9);
  __swift_project_boxed_opaque_existential_1_0(&v9, v11);
  unint64_t v0 = static Response.descriptionWithoutPII<A>(_:)();
  unint64_t v2 = v1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  uint64_t v3 = sub_1A8A76778();
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  MEMORY[0x1AD0DF7A0](v3);
  uint64_t v4 = v9;
  unint64_t v5 = v10;
  sub_1A888860C(v0, v2);
  swift_bridgeObjectRelease();
  uint64_t v9 = v4;
  unint64_t v10 = v5;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744948);
  sub_1A851154C(&qword_1E9744958, &qword_1E9744948);
  sub_1A8A766C8();
  swift_bridgeObjectRelease();
  uint64_t v6 = v9;
  uint64_t v7 = (void *)v10;
  result._object = v7;
  result._uint64_t countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1A8888A48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C28);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for UntaggedResponse(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (unsigned int *)&v67[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A889209C(v2, (uint64_t)v9, type metadata accessor for UntaggedResponse);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v12 = *((void *)v9 + 2);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)boxed_opaque_existential_1 = v78;
      boxed_opaque_existential_1[2] = v12;
      char v14 = 1;
      goto LABEL_7;
    case 2u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v15 = *((void *)v9 + 2);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)boxed_opaque_existential_1 = v78;
      boxed_opaque_existential_1[2] = v15;
      char v14 = 2;
      goto LABEL_7;
    case 3u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v16 = *((void *)v9 + 2);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)boxed_opaque_existential_1 = v78;
      boxed_opaque_existential_1[2] = v16;
      char v14 = 3;
      goto LABEL_7;
    case 4u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v17 = *((void *)v9 + 2);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)boxed_opaque_existential_1 = v78;
      boxed_opaque_existential_1[2] = v17;
      char v14 = 4;
LABEL_7:
      *((unsigned char *)boxed_opaque_existential_1 + 24) = v14;
      goto LABEL_8;
    case 5u:
    case 6u:
      uint64_t v18 = *(void *)v9;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      *__swift_allocate_boxed_opaque_existential_1(a1) = v18;
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 7u:
      unsigned int v19 = v9[4];
      char v20 = *((unsigned char *)v9 + 20);
      uint64_t v21 = *((void *)v9 + 3);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      long long v22 = *((_OWORD *)v9 + 2);
      long long v77 = *(_OWORD *)v9;
      long long v78 = v22;
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)unint64_t v83 = v77;
      *(_DWORD *)&v83[16] = v19;
      v83[20] = v20;
      *(void *)&v83[24] = v21;
      *(_OWORD *)&v83[32] = v78;
      sub_1A8805B94((int8x16_t *)v83);
      goto LABEL_19;
    case 8u:
      unsigned int v24 = v9[4];
      char v25 = *((unsigned char *)v9 + 20);
      uint64_t v26 = *((void *)v9 + 3);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      long long v27 = *((_OWORD *)v9 + 2);
      long long v77 = *(_OWORD *)v9;
      long long v78 = v27;
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)unint64_t v83 = v77;
      *(_DWORD *)&v83[16] = v24;
      v83[20] = v25;
      *(void *)&v83[24] = v26;
      *(_OWORD *)&v83[32] = v78;
      sub_1A8805A78((int8x16_t *)v83);
      goto LABEL_19;
    case 9u:
      uint64_t v76 = *(void *)v9;
      unsigned int v75 = v9[2];
      uint64_t v28 = *((void *)v9 + 2);
      char v29 = *((unsigned char *)v9 + 24);
      uint64_t v73 = *((void *)v9 + 4);
      uint64_t v74 = v28;
      char v30 = *((unsigned char *)v9 + 40);
      LODWORD(v28) = v9[11];
      char v31 = *((unsigned char *)v9 + 48);
      unsigned int v71 = v9[13];
      int v72 = v28;
      char v32 = *((unsigned char *)v9 + 56);
      uint64_t v33 = *((void *)v9 + 8);
      char v34 = *((unsigned char *)v9 + 72);
      uint64_t v69 = *((void *)v9 + 10);
      uint64_t v70 = v33;
      int v68 = *((unsigned __int8 *)v9 + 88);
      *(void *)&long long v77 = *((void *)v9 + 12);
      char v35 = *((unsigned char *)v9 + 104);
      *(void *)&long long v78 = *((void *)v9 + 14);
      char v36 = *((unsigned char *)v9 + 120);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      LOBYTE(v82[0]) = v29;
      LOBYTE(v81) = v30;
      LOBYTE(v88) = v31;
      LOBYTE(v86) = v32;
      v85[0] = v34;
      v84[0] = v68;
      char v80 = v35;
      char v79 = v36;
      *(void *)unint64_t v83 = v76;
      *(_DWORD *)&v83[8] = v75;
      *(void *)&v83[16] = v74;
      v83[24] = v29;
      *(void *)&v83[32] = v73;
      v83[40] = v30;
      *(_DWORD *)&v83[44] = v72;
      v83[48] = v31;
      *(_DWORD *)&v83[52] = v71;
      v83[56] = v32;
      *(void *)&v83[64] = v70;
      v83[72] = v34;
      *(void *)&v83[80] = v69;
      v83[88] = v68;
      *(void *)&v83[96] = v77;
      v83[104] = v35;
      *(void *)&v83[112] = v78;
      v83[120] = v36;
      sub_1A8805854((int8x16_t *)v83);
      goto LABEL_19;
    case 0xAu:
      uint64_t v37 = *((void *)v9 + 2);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      long long v78 = *(_OWORD *)v9;
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)unint64_t v83 = v78;
      *(void *)&v83[16] = v37;
      sub_1A88056BC((int8x16_t *)v83);
      goto LABEL_19;
    case 0xBu:
      uint64_t v38 = *(void *)v9;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(void *)unint64_t v83 = v38;
      *(void *)&v83[8] = 0;
      v83[16] = 1;
      sub_1A8805708((int8x16_t *)v83);
      goto LABEL_19;
    case 0xCu:
      long long v78 = *(_OWORD *)v9;
      uint64_t v39 = *((void *)v9 + 2);
      uint64_t v40 = *((void *)v9 + 3);
      char v41 = *((unsigned char *)v9 + 32);
      char v42 = *((unsigned char *)v9 + 33);
      uint64_t v43 = *((void *)v9 + 5);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)unint64_t v83 = v78;
      *(void *)&v83[16] = v39;
      *(void *)&v83[24] = v40;
      v83[32] = v41;
      v83[33] = v42;
      *(void *)&v83[40] = v43;
      sub_1A8805A2C((int8x16_t *)v83);
      goto LABEL_19;
    case 0xDu:
      uint64_t v44 = *(void *)v9;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      uint64_t v45 = __swift_allocate_boxed_opaque_existential_1(a1);
      uint64_t v46 = sub_1A8886AE4(v44);
      swift_bridgeObjectRelease();
      *(void *)unint64_t v83 = v46;
      sub_1A8805BE0((int8x16_t *)v83);
      sub_1A8892160((uint64_t)v83, (uint64_t)v45);
      type metadata accessor for ResponsePayload();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for Response(0);
      return swift_storeEnumTagMultiPayload();
    case 0xEu:
      uint64_t v47 = *v9;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(void *)unint64_t v83 = v47;
      sub_1A8805808((int8x16_t *)v83);
      goto LABEL_19;
    case 0xFu:
      uint64_t v48 = *v9;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      unsigned int v23 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(void *)unint64_t v83 = v48;
      sub_1A88057BC((int8x16_t *)v83);
LABEL_19:
      sub_1A8892160((uint64_t)v83, (uint64_t)v23);
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 0x10u:
      int v50 = *v9;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      *(_DWORD *)__swift_allocate_boxed_opaque_existential_1(a1) = v50;
      type metadata accessor for MessageData();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 0x11u:
    case 0x12u:
      sub_1A8529F8C((uint64_t)v9, (uint64_t)v6, &qword_1E9741C28);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      uint64_t v51 = __swift_allocate_boxed_opaque_existential_1(a1);
      sub_1A8511A9C((uint64_t)v6, (uint64_t)v51, &qword_1E9741C28);
      type metadata accessor for MessageData();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for ResponsePayload();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for Response(0);
      swift_storeEnumTagMultiPayload();
      return sub_1A8511B00((uint64_t)v6, &qword_1E9741C28);
    case 0x13u:
      memcpy(v83, v9, sizeof(v83));
      sub_1A8529F8C((uint64_t)v83, (uint64_t)v84, &qword_1E974E130);
      sub_1A8529F8C((uint64_t)v84, (uint64_t)&v88, &qword_1E974E130);
      if (v89)
      {
        sub_1A8529F8C((uint64_t)&v83[8], (uint64_t)v85, &qword_1E9740AE0);
        sub_1A8529F8C((uint64_t)v85, (uint64_t)&v86, &qword_1E9740AE0);
        if (v87)
        {
          a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E138);
          a1[4] = sub_1A851154C(&qword_1E974E140, &qword_1E974E138);
          uint64_t result = sub_1A856B170((uint64_t)v83);
          *a1 = MEMORY[0x1E4FBC860];
          return result;
        }
        int v62 = v86;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745AD0);
        uint64_t v63 = *(void *)(type metadata accessor for Response(0) - 8);
        unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_1A8AD8F00;
        v82[0] = v62;
        sub_1A88005A8((uint64_t)v82);
        sub_1A8892104((uint64_t)v82, v60 + v64);
        swift_storeEnumTagMultiPayload();
        int v61 = 0;
      }
      else
      {
        int v57 = v88;
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745AD0);
        uint64_t v58 = *(void *)(type metadata accessor for Response(0) - 8);
        unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_1A8AD8F00;
        v82[0] = v57;
        sub_1A87AA04C((uint64_t)v82);
        sub_1A8892104((uint64_t)v82, v60 + v59);
        swift_storeEnumTagMultiPayload();
        int v61 = 1;
      }
      unint64_t v65 = sub_1A8889994(v61);
      uint64_t v81 = v60;
      sub_1A886EF98(v65);
      uint64_t v66 = v81;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E138);
      a1[4] = sub_1A851154C(&qword_1E974E140, &qword_1E974E138);
      uint64_t result = sub_1A856B170((uint64_t)v83);
      *a1 = v66;
      return result;
    case 0x14u:
      uint64_t v52 = *(void *)v9;
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      long long v78 = *(_OWORD *)(v9 + 2);
      uint64_t v53 = __swift_allocate_boxed_opaque_existential_1(a1);
      *uint64_t v53 = v52;
      *(_OWORD *)(v53 + 1) = v78;
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 0x15u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v54 = *((void *)v9 + 2);
      char v55 = *((unsigned char *)v9 + 24);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      uint64_t v56 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)uint64_t v56 = v78;
      v56[2] = v54;
      *((unsigned char *)v56 + 24) = v55;
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    default:
      long long v78 = *(_OWORD *)v9;
      uint64_t v10 = *((void *)v9 + 2);
      a1[3] = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E148);
      a1[4] = sub_1A851154C(&qword_1E974E150, &qword_1E974E148);
      uint64_t v11 = __swift_allocate_boxed_opaque_existential_1(a1);
      *(_OWORD *)uint64_t v11 = v78;
      v11[2] = v10;
      *((unsigned char *)v11 + 24) = 0;
LABEL_8:
      type metadata accessor for ResponsePayload();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      type metadata accessor for Response(0);
      return swift_storeEnumTagMultiPayload();
  }
}

unint64_t sub_1A8889994(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v174) = a1;
  uint64_t v158 = sub_1A8A75E28();
  uint64_t v171 = *(void *)(v158 - 8);
  MEMORY[0x1F4188790](v158);
  uint64_t v157 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for MessageData.BodyData();
  unint64_t v172 = *(void *)(v169 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v169);
  uint64_t v156 = (uint64_t)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v170 = (char *)&v133 - v9;
  uint64_t v168 = type metadata accessor for MessageData.BodySection();
  uint64_t v162 = *(void *)(v168 - 8);
  MEMORY[0x1F4188790](v168);
  uint64_t v160 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Response(0);
  uint64_t v173 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v153 = (uint64_t)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v150 = (uint64_t)&v133 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v152 = (uint64_t)&v133 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v151 = (uint64_t)&v133 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v167 = (uint64_t)&v133 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v166 = (uint64_t)&v133 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v165 = (uint64_t)&v133 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v164 = (uint64_t)&v133 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v149 = (uint64_t)&v133 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v148 = (uint64_t)&v133 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v147 = (uint64_t)&v133 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v146 = (uint64_t)&v133 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v161 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v133 - v37);
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v155 = (void (**)(char *, uint64_t, uint64_t))((char *)&v133 - v39);
  MEMORY[0x1F4188790](v38);
  char v41 = (char *)&v133 - v40;
  uint64_t v42 = v2[54];
  uint64_t v154 = v2;
  uint64_t v159 = v6;
  if (v42)
  {
    uint64_t v43 = v2[49];
    uint64_t v44 = v2[50];
    uint64_t v46 = v2[51];
    uint64_t v45 = v2[52];
    uint64_t v47 = v2[53];
    uint64_t v48 = v2[55];
    uint64_t v175 = v2[56];
    uint64_t v49 = v2[58];
    uint64_t v51 = v2[59];
    uint64_t v50 = v2[60];
    uint64_t v53 = v2[61];
    uint64_t v52 = v2[62];
    uint64_t v134 = v2[57];
    uint64_t v135 = v53;
    uint64_t v54 = v2[63];
    uint64_t v144 = v47;
    uint64_t v145 = v43;
    *(void *)&long long v194 = v43;
    *((void *)&v194 + 1) = v44;
    *(void *)&long long v195 = v46;
    uint64_t v142 = v45;
    *((void *)&v195 + 1) = v45;
    LODWORD(v196) = v47;
    BYTE6(v196) = BYTE6(v47);
    WORD2(v196) = WORD2(v47);
    *((void *)&v196 + 1) = v42;
    *(void *)&long long v197 = v48;
    *((void *)&v197 + 1) = v175;
    *(void *)&long long v198 = v134;
    *((void *)&v198 + 1) = v49;
    *(void *)&long long v199 = v51;
    uint64_t v136 = v52;
    uint64_t v137 = v50;
    *((void *)&v199 + 1) = v50;
    *(void *)&long long v200 = v53;
    *((void *)&v200 + 1) = v52;
    *(void *)&long long v201 = v54;
    sub_1A8808A60((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    sub_1A8892104((uint64_t)v206, (uint64_t)v41);
    swift_storeEnumTagMultiPayload();
    uint64_t v143 = v44;
    swift_bridgeObjectRetain_n();
    uint64_t v141 = v46;
    swift_retain_n();
    uint64_t v140 = v42;
    swift_bridgeObjectRetain_n();
    uint64_t v139 = v48;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v138 = v51;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v55 = sub_1A88930AC(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v57 = *(void *)(v55 + 16);
    unint64_t v56 = *(void *)(v55 + 24);
    if (v57 >= v56 >> 1) {
      unint64_t v55 = sub_1A88930AC(v56 > 1, v57 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v57 + 1;
    sub_1A8892218((uint64_t)v41, v55+ ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(void *)(v173 + 72) * v57, type metadata accessor for Response);
    sub_1A856B8CC(v145, v143, v141, v142, v144, v140);
    uint64_t v2 = v154;
    uint64_t v6 = v159;
  }
  else
  {
    unint64_t v55 = MEMORY[0x1E4FBC860];
  }
  uint64_t v58 = (uint64_t)v160;
  if (!v2[64])
  {
    uint64_t v63 = v173;
    if (!v2[65]) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  uint64_t v59 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v60 = sub_1A8886AE4(v59);
  swift_bridgeObjectRelease();
  *(void *)&long long v194 = v60;
  sub_1A8808A74((uint64_t)&v194);
  sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
  sub_1A8800640((uint64_t)v206);
  int v61 = v155;
  sub_1A8892104((uint64_t)v206, (uint64_t)v155);
  swift_storeEnumTagMultiPayload();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v63 = v173;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
  }
  unint64_t v65 = *(void *)(v55 + 16);
  unint64_t v64 = *(void *)(v55 + 24);
  if (v65 >= v64 >> 1) {
    unint64_t v55 = sub_1A88930AC(v64 > 1, v65 + 1, 1, v55);
  }
  *(void *)(v55 + 16) = v65 + 1;
  sub_1A8892218((uint64_t)v61, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v65, type metadata accessor for Response);
  uint64_t v2 = v154;
  if (v154[65])
  {
LABEL_14:
    uint64_t v66 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v67 = sub_1A88869EC(v66);
    swift_bridgeObjectRelease();
    *(void *)&long long v194 = v67;
    sub_1A8808968((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    int v68 = v161;
    sub_1A8892104((uint64_t)v206, (uint64_t)v161);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v70 = *(void *)(v55 + 16);
    unint64_t v69 = *(void *)(v55 + 24);
    if (v70 >= v69 >> 1) {
      unint64_t v55 = sub_1A88930AC(v69 > 1, v70 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v70 + 1;
    sub_1A8892218((uint64_t)v68, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v70, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
LABEL_19:
  sub_1A8529F8C((uint64_t)(v2 + 66), (uint64_t)v213, &qword_1E9741A30);
  sub_1A8529F8C((uint64_t)v213, (uint64_t)&v214, &qword_1E9741A30);
  if ((v215 & 1) == 0)
  {
    *(void *)&long long v194 = v214;
    sub_1A8808A4C((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    uint64_t v71 = v146;
    sub_1A8892104((uint64_t)v206, v146);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v73 = *(void *)(v55 + 16);
    unint64_t v72 = *(void *)(v55 + 24);
    if (v73 >= v72 >> 1) {
      unint64_t v55 = sub_1A88930AC(v72 > 1, v73 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v73 + 1;
    sub_1A8892218(v71, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v73, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  sub_1A8529F8C((uint64_t)v2 + 540, (uint64_t)v212, &qword_1E9741210);
  sub_1A8529F8C((uint64_t)v212, (uint64_t)&v216, &qword_1E9741210);
  if ((v217 & 1) == 0)
  {
    *(void *)&long long v194 = v216;
    sub_1A8808A38((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    uint64_t v74 = v147;
    sub_1A8892104((uint64_t)v206, v147);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v76 = *(void *)(v55 + 16);
    unint64_t v75 = *(void *)(v55 + 24);
    if (v76 >= v75 >> 1) {
      unint64_t v55 = sub_1A88930AC(v75 > 1, v76 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v76 + 1;
    sub_1A8892218(v74, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v76, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  sub_1A8529F8C((uint64_t)(v2 + 1), (uint64_t)v211, &qword_1E9740AE0);
  sub_1A8529F8C((uint64_t)v211, (uint64_t)&v218, &qword_1E9740AE0);
  if (v219 & 1) == 0 && (v174)
  {
    LODWORD(v194) = v218;
    sub_1A88089D4((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    uint64_t v77 = v148;
    sub_1A8892104((uint64_t)v206, v148);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v79 = *(void *)(v55 + 16);
    unint64_t v78 = *(void *)(v55 + 24);
    if (v79 >= v78 >> 1) {
      unint64_t v55 = sub_1A88930AC(v78 > 1, v79 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v79 + 1;
    sub_1A8892218(v77, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v79, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  sub_1A8529F8C((uint64_t)(v2 + 69), (uint64_t)v210, qword_1E9741D88);
  sub_1A8529F8C((uint64_t)v210, (uint64_t)&v220, qword_1E9741D88);
  if ((v221 & 1) == 0)
  {
    *(void *)&long long v194 = v220;
    sub_1A8808954((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    uint64_t v80 = v149;
    sub_1A8892104((uint64_t)v206, v149);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v82 = *(void *)(v55 + 16);
    unint64_t v81 = *(void *)(v55 + 24);
    if (v82 >= v81 >> 1) {
      unint64_t v55 = sub_1A88930AC(v81 > 1, v82 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v82 + 1;
    sub_1A8892218(v80, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v82, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  uint64_t v83 = v2[25];
  uint64_t v209 = v83;
  uint64_t v84 = *(void *)(v83 + 16);
  if (v84)
  {
    uint64_t v85 = v83 + ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80));
    uint64_t v86 = *(void *)(v162 + 72);
    uint64_t v161 = (unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48);
    uint64_t v162 = v86;
    uint64_t v155 = (void (**)(char *, uint64_t, uint64_t))(v171 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v87 = (uint64_t)v170;
    uint64_t v163 = v11;
    do
    {
      uint64_t v174 = v85;
      uint64_t v175 = v84;
      sub_1A889209C(v85, v58, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_1A8511A9C(v58 + *(int *)(v168 + 24), (uint64_t)v6, &qword_1E9742930);
      if ((*v161)(v6, 1, v169) == 1)
      {
        int v88 = v6;
        sub_1A8511B00((uint64_t)v6, &qword_1E9742930);
        uint64_t v89 = *(void *)(v58 + 8);
        uint64_t v90 = *(unsigned int *)(v58 + 20);
        char v91 = *(unsigned char *)(v58 + 24);
        if (v91) {
          uint64_t v90 = 0;
        }
        unsigned __int8 v92 = *(unsigned char *)(v58 + 16);
        *(void *)&long long v194 = *(void *)v58;
        *((void *)&v194 + 1) = v89;
        *(void *)&long long v195 = v92;
        *((void *)&v195 + 1) = v90;
        LOBYTE(v196) = v91 | 0x40;
        sub_1A8808940((uint64_t)&v194);
        sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
        sub_1A8800640((uint64_t)v206);
        sub_1A8892104((uint64_t)v206, v167);
        swift_storeEnumTagMultiPayload();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8645714(v89, v92);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
        }
        unint64_t v94 = *(void *)(v55 + 16);
        unint64_t v93 = *(void *)(v55 + 24);
        uint64_t v63 = v173;
        uint64_t v6 = v88;
        if (v94 >= v93 >> 1) {
          unint64_t v55 = sub_1A88930AC(v93 > 1, v94 + 1, 1, v55);
        }
        uint64_t v87 = (uint64_t)v170;
        *(void *)(v55 + 16) = v94 + 1;
        sub_1A8892218(v167, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v94, type metadata accessor for Response);
      }
      else
      {
        sub_1A8892218((uint64_t)v6, v87, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v95 = *(void *)v58;
        uint64_t v96 = *(void *)(v58 + 8);
        char v97 = *(unsigned char *)(v58 + 24);
        if (v97) {
          uint64_t v98 = 0;
        }
        else {
          uint64_t v98 = *(unsigned int *)(v58 + 20);
        }
        unsigned __int8 v99 = *(unsigned char *)(v58 + 16);
        unint64_t v100 = v55;
        char v101 = v97 | 0x40;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8645714(v96, v99);
        uint64_t v102 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        v206[0] = v95;
        v206[1] = v96;
        v206[2] = v99;
        v206[3] = v98;
        char v207 = v101;
        unint64_t v103 = v100;
        uint64_t v208 = v102;
        sub_1A88006CC((uint64_t)v206);
        sub_1A8892104((uint64_t)v206, v164);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v103 = sub_1A88930AC(0, *(void *)(v100 + 16) + 1, 1, v100);
        }
        uint64_t v104 = v173;
        unint64_t v106 = *(void *)(v103 + 16);
        unint64_t v105 = *(void *)(v103 + 24);
        if (v106 >= v105 >> 1) {
          unint64_t v103 = sub_1A88930AC(v105 > 1, v106 + 1, 1, v103);
        }
        *(void *)(v103 + 16) = v106 + 1;
        unint64_t v172 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
        uint64_t v171 = *(void *)(v104 + 72);
        sub_1A8892218(v164, v103 + v172 + v171 * v106, type metadata accessor for Response);
        uint64_t v107 = v87;
        uint64_t v108 = v156;
        sub_1A889209C(v107, v156, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v109 = (uint64_t)v157;
        (*v155)(v157, v108, v158);
        sub_1A8880AB8(v109);
        uint64_t v111 = v110;
        unsigned int v113 = v112;
        LODWORD(v109) = v114;
        unint64_t v115 = HIDWORD(v112);
        unint64_t v116 = HIDWORD(v114);
        unint64_t v117 = HIWORD(v114);
        sub_1A8891C98(v108, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        *(void *)&long long v194 = v111;
        *((void *)&v194 + 1) = __PAIR64__(v115, v113);
        unint64_t v55 = v103;
        LODWORD(v195) = v109;
        WORD2(v195) = v116;
        BYTE6(v195) = v117;
        sub_1A8800654((uint64_t)&v194);
        sub_1A8892104((uint64_t)&v194, v165);
        swift_storeEnumTagMultiPayload();
        unint64_t v119 = *(void *)(v103 + 16);
        unint64_t v118 = *(void *)(v103 + 24);
        if (v119 >= v118 >> 1) {
          unint64_t v55 = sub_1A88930AC(v118 > 1, v119 + 1, 1, v103);
        }
        uint64_t v6 = v159;
        uint64_t v58 = (uint64_t)v160;
        *(void *)(v55 + 16) = v119 + 1;
        sub_1A8892218(v165, v55 + v172 + v119 * v171, type metadata accessor for Response);
        sub_1A8892338((uint64_t)&v176);
        sub_1A8892104((uint64_t)&v176, v166);
        swift_storeEnumTagMultiPayload();
        unint64_t v121 = *(void *)(v55 + 16);
        unint64_t v120 = *(void *)(v55 + 24);
        uint64_t v63 = v173;
        uint64_t v87 = (uint64_t)v170;
        if (v121 >= v120 >> 1) {
          unint64_t v55 = sub_1A88930AC(v120 > 1, v121 + 1, 1, v55);
        }
        *(void *)(v55 + 16) = v121 + 1;
        sub_1A8892218(v166, v55 + v172 + v121 * v171, type metadata accessor for Response);
        sub_1A8891C98(v87, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      }
      sub_1A8891C98(v58, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      uint64_t v85 = v174 + v162;
      uint64_t v84 = v175 - 1;
    }
    while (v175 != 1);
    sub_1A85276F0((uint64_t)&v209);
    uint64_t v2 = v154;
  }
  sub_1A8529F8C((uint64_t)(v2 + 2), (uint64_t)v192, &qword_1E97461D0);
  sub_1A8529F8C((uint64_t)v192, (uint64_t)v193, &qword_1E97461D0);
  if (sub_1A856B98C((uint64_t)v193) != 1)
  {
    sub_1A8644AD0((uint64_t)v193, (uint64_t)&v176);
    HIBYTE(v187) = 0;
    long long v202 = v184;
    long long v203 = v185;
    long long v204 = v186;
    long long v198 = v180;
    long long v199 = v181;
    long long v200 = v182;
    long long v201 = v183;
    long long v194 = v176;
    long long v195 = v177;
    long long v196 = v178;
    long long v197 = v179;
    __int16 v205 = v187;
    sub_1A88089E8((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    sub_1A8892104((uint64_t)v206, v151);
    swift_storeEnumTagMultiPayload();
    sub_1A8529F8C((uint64_t)v192, (uint64_t)v190, &qword_1E97461D0);
    sub_1A8529F8C((uint64_t)v192, (uint64_t)v191, &qword_1E97461D0);
    sub_1A88922C4((uint64_t)v191, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    sub_1A88922C4((uint64_t)v190, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v123 = *(void *)(v55 + 16);
    unint64_t v122 = *(void *)(v55 + 24);
    if (v123 >= v122 >> 1) {
      unint64_t v55 = sub_1A88930AC(v122 > 1, v123 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v123 + 1;
    sub_1A8892218(v151, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v123, type metadata accessor for Response);
    sub_1A88922C4((uint64_t)v192, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
  }
  sub_1A8529F8C((uint64_t)(v2 + 26), (uint64_t)v190, &qword_1E97461D0);
  sub_1A8529F8C((uint64_t)v190, (uint64_t)v191, &qword_1E97461D0);
  if (sub_1A856B98C((uint64_t)v191) != 1)
  {
    sub_1A8644AD0((uint64_t)v191, (uint64_t)&v176);
    HIBYTE(v187) = 1;
    long long v202 = v184;
    long long v203 = v185;
    long long v204 = v186;
    long long v198 = v180;
    long long v199 = v181;
    long long v200 = v182;
    long long v201 = v183;
    long long v194 = v176;
    long long v195 = v177;
    long long v196 = v178;
    long long v197 = v179;
    __int16 v205 = v187;
    sub_1A88089E8((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    sub_1A8892104((uint64_t)v206, v152);
    swift_storeEnumTagMultiPayload();
    sub_1A8529F8C((uint64_t)v190, (uint64_t)v188, &qword_1E97461D0);
    sub_1A8529F8C((uint64_t)v190, (uint64_t)v189, &qword_1E97461D0);
    sub_1A88922C4((uint64_t)v189, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    sub_1A88922C4((uint64_t)v188, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A8644FFC);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v125 = *(void *)(v55 + 16);
    unint64_t v124 = *(void *)(v55 + 24);
    if (v125 >= v124 >> 1) {
      unint64_t v55 = sub_1A88930AC(v124 > 1, v125 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v125 + 1;
    sub_1A8892218(v152, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v125, type metadata accessor for Response);
    sub_1A88922C4((uint64_t)v190, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1A856B35C);
  }
  uint64_t v126 = v2[72];
  if (v126)
  {
    *(void *)&long long v194 = v2[71];
    *((void *)&v194 + 1) = v126;
    sub_1A880892C((uint64_t)&v194);
    sub_1A88921BC((uint64_t)&v194, (uint64_t)v206);
    sub_1A8800640((uint64_t)v206);
    uint64_t v127 = v150;
    sub_1A8892104((uint64_t)v206, v150);
    swift_storeEnumTagMultiPayload();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
    }
    unint64_t v129 = *(void *)(v55 + 16);
    unint64_t v128 = *(void *)(v55 + 24);
    if (v129 >= v128 >> 1) {
      unint64_t v55 = sub_1A88930AC(v128 > 1, v129 + 1, 1, v55);
    }
    *(void *)(v55 + 16) = v129 + 1;
    sub_1A8892218(v127, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v129, type metadata accessor for Response);
  }
  sub_1A8892280((uint64_t)v206);
  sub_1A8892104((uint64_t)v206, v153);
  swift_storeEnumTagMultiPayload();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v55 = sub_1A88930AC(0, *(void *)(v55 + 16) + 1, 1, v55);
  }
  unint64_t v131 = *(void *)(v55 + 16);
  unint64_t v130 = *(void *)(v55 + 24);
  if (v131 >= v130 >> 1) {
    unint64_t v55 = sub_1A88930AC(v130 > 1, v131 + 1, 1, v55);
  }
  *(void *)(v55 + 16) = v131 + 1;
  sub_1A8892218(v153, v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v131, type metadata accessor for Response);
  return v55;
}

uint64_t UntaggedResponse.logIdentifier.getter()
{
  return 0;
}

unint64_t UntaggedResponse.name.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UntaggedResponse(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A889209C(v1, (uint64_t)v4, type metadata accessor for UntaggedResponse);
  unint64_t v5 = 0x535453495845;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 20302;
      break;
    case 2u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 4473154;
      break;
    case 3u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x48545541455250;
      break;
    case 4u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 4544834;
      break;
    case 5u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x494C494241504143;
      break;
    case 6u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x44454C42414E45;
      break;
    case 7u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 1414744396;
      break;
    case 8u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 1112888140;
      break;
    case 9u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x535554415453;
      break;
    case 0xAu:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x43415053454D414ELL;
      break;
    case 0xBu:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x484352414553;
      break;
    case 0xCu:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x48435241455345;
      break;
    case 0xDu:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x5347414C46;
      break;
    case 0xEu:
      return v5;
    case 0xFu:
      unint64_t v5 = 0x544E45434552;
      break;
    case 0x10u:
      unint64_t v5 = 0x45474E55505845;
      break;
    case 0x11u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x44454853494E4156;
      break;
    case 0x12u:
    case 0x15u:
      unint64_t v5 = 0xD000000000000011;
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      break;
    case 0x13u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x4843544546;
      break;
    case 0x14u:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 17481;
      break;
    default:
      sub_1A8891C98((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 19279;
      break;
  }
  return v5;
}

BOOL sub_1A888B708(uint64_t a1, uint64_t a2)
{
  return _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

unint64_t CommandCompletionResponse.responseText.getter(unint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return a1;
}

uint64_t sub_1A888B774(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    uint64_t v4 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *v4;
      if (*v3)
      {
        if (!v5) {
          return 0;
        }
        BOOL v6 = *(v3 - 1) == *(v4 - 1) && *v3 == v5;
        if (!v6 && (sub_1A8A78588() & 1) == 0) {
          return 0;
        }
      }
      else if (v5)
      {
        return 0;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

unint64_t sub_1A888B810(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1;
  }
  uint64_t v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  unint64_t v6 = v5 | (v4 << 16);
  unint64_t v7 = sub_1A888BA50(0xFuLL, a1, a2);
  unint64_t result = sub_1A888BA50(v6, a1, a2);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1A8A76698();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1A8A77E88();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1A8A766A8();
        unint64_t v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1A8A77E88();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_40;
  }
  return 0;
}

unint64_t sub_1A888BA50(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_1A888BAF0(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1A8884764(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1A888BAF0(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_1A85D0E10(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t _s13IMAP2Protocol16UntaggedResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, unint64_t *a2)
{
  uint64_t v194 = a1;
  long long v195 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C28);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v176 = (uint64_t)&v175 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v175 = (uint64_t)&v175 - v5;
  uint64_t v193 = type metadata accessor for UntaggedResponse(0);
  MEMORY[0x1F4188790](v193);
  uint64_t v190 = (uint64_t)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v189 = (uint64_t *)((char *)&v175 - v8);
  MEMORY[0x1F4188790](v9);
  char v188 = (char *)&v175 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v192 = (uint64_t)&v175 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v191 = (uint64_t)&v175 - v14;
  MEMORY[0x1F4188790](v15);
  __int16 v187 = (int *)((char *)&v175 - v16);
  MEMORY[0x1F4188790](v17);
  long long v186 = (int *)((char *)&v175 - v18);
  MEMORY[0x1F4188790](v19);
  long long v185 = (int *)((char *)&v175 - v20);
  MEMORY[0x1F4188790](v21);
  long long v184 = (uint64_t *)((char *)&v175 - v22);
  MEMORY[0x1F4188790](v23);
  long long v183 = (_OWORD *)((char *)&v175 - v24);
  MEMORY[0x1F4188790](v25);
  long long v182 = (uint64_t *)((char *)&v175 - v26);
  MEMORY[0x1F4188790](v27);
  long long v180 = (uint64_t *)((char *)&v175 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v181 = (uint64_t)&v175 - v30;
  MEMORY[0x1F4188790](v31);
  long long v179 = (_OWORD *)((char *)&v175 - v32);
  MEMORY[0x1F4188790](v33);
  long long v178 = (_OWORD *)((char *)&v175 - v34);
  MEMORY[0x1F4188790](v35);
  long long v177 = (uint64_t *)((char *)&v175 - v36);
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (uint64_t *)((char *)&v175 - v38);
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (unint64_t *)((char *)&v175 - v41);
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (unint64_t *)((char *)&v175 - v44);
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (unint64_t *)((char *)&v175 - v47);
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (unint64_t *)((char *)&v175 - v50);
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (unint64_t *)((char *)&v175 - v53);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E128);
  MEMORY[0x1F4188790](v55 - 8);
  unint64_t v57 = (char *)&v175 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = (uint64_t)&v57[*(int *)(v58 + 56)];
  sub_1A889209C(v194, (uint64_t)v57, type metadata accessor for UntaggedResponse);
  uint64_t v60 = (uint64_t)v195;
  long long v195 = (unint64_t *)v59;
  sub_1A889209C(v60, v59, type metadata accessor for UntaggedResponse);
  long long v196 = v57;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v61 = (uint64_t)v196;
      sub_1A889209C((uint64_t)v196, (uint64_t)v51, type metadata accessor for UntaggedResponse);
      unint64_t v119 = *v51;
      unint64_t v120 = v51[1];
      unint64_t v121 = v51[2];
      unint64_t v122 = v195;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1A887B2A4(v119);
        goto LABEL_73;
      }
      unint64_t v123 = *v122;
      unint64_t v124 = v122[1];
      unint64_t v125 = v122[2];
      unint64_t v126 = v123 & 0xF000000000000007;
      if ((~v119 & 0xF000000000000007) == 0)
      {
        if (v126 != 0xF000000000000007)
        {
          unint64_t v70 = v123;
          goto LABEL_35;
        }
        goto LABEL_86;
      }
      if (v126 == 0xF000000000000007) {
        goto LABEL_104;
      }
      sub_1A887B33C(v123);
      sub_1A887B33C(v119);
      static ResponseTextCode.__derived_enum_equals(_:_:)();
      char v169 = v168;
      sub_1A887B2A4(v123);
      sub_1A887B2A4(v119);
      if ((v169 & 1) == 0)
      {
        sub_1A887B2A4(v123);
LABEL_104:
        swift_bridgeObjectRelease();
        unint64_t v170 = v119;
        goto LABEL_105;
      }
LABEL_86:
      if (v120 == v124 && v121 == v125)
      {
        sub_1A887B2A4(v123);
        swift_bridgeObjectRelease();
        unint64_t v164 = v119;
        goto LABEL_89;
      }
      char v166 = sub_1A8A78588();
      sub_1A887B2A4(v123);
      swift_bridgeObjectRelease();
      unint64_t v167 = v119;
LABEL_98:
      sub_1A887B2A4(v167);
      swift_bridgeObjectRelease();
      if ((v166 & 1) == 0)
      {
LABEL_107:
        sub_1A8891C98(v61, type metadata accessor for UntaggedResponse);
LABEL_75:
        char v84 = 0;
        return v84 & 1;
      }
LABEL_99:
      uint64_t v173 = v61;
LABEL_100:
      sub_1A8891C98(v173, type metadata accessor for UntaggedResponse);
      char v84 = 1;
      return v84 & 1;
    case 2u:
      uint64_t v61 = (uint64_t)v196;
      sub_1A889209C((uint64_t)v196, (uint64_t)v48, type metadata accessor for UntaggedResponse);
      unint64_t v62 = *v48;
      unint64_t v63 = v48[1];
      unint64_t v64 = v48[2];
      unint64_t v65 = v195;
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_5;
      }
      goto LABEL_3;
    case 3u:
      uint64_t v61 = (uint64_t)v196;
      sub_1A889209C((uint64_t)v196, (uint64_t)v45, type metadata accessor for UntaggedResponse);
      unint64_t v62 = *v45;
      unint64_t v63 = v45[1];
      unint64_t v64 = v45[2];
      unint64_t v65 = v195;
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_5;
      }
      goto LABEL_3;
    case 4u:
      sub_1A889209C((uint64_t)v196, (uint64_t)v42, type metadata accessor for UntaggedResponse);
      unint64_t v71 = *v42;
      unint64_t v72 = v42[1];
      unint64_t v73 = v42[2];
      uint64_t v74 = v195;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        sub_1A887B2A4(v71);
        swift_bridgeObjectRelease();
        uint64_t v61 = (uint64_t)v196;
        goto LABEL_74;
      }
      unint64_t v75 = *v74;
      unint64_t v76 = v74[1];
      unint64_t v77 = v74[2];
      unint64_t v78 = *v74 & 0xF000000000000007;
      if ((~v71 & 0xF000000000000007) != 0)
      {
        if (v78 == 0xF000000000000007)
        {
          swift_bridgeObjectRelease();
          sub_1A887B2A4(v71);
          uint64_t v79 = (uint64_t)v196;
          goto LABEL_109;
        }
        sub_1A887B33C(*v74);
        sub_1A887B33C(v71);
        static ResponseTextCode.__derived_enum_equals(_:_:)();
        char v172 = v171;
        sub_1A887B2A4(v75);
        sub_1A887B2A4(v71);
        uint64_t v79 = (uint64_t)v196;
        if ((v172 & 1) == 0)
        {
          sub_1A887B2A4(v75);
          swift_bridgeObjectRelease();
          sub_1A887B2A4(v71);
          goto LABEL_109;
        }
      }
      else
      {
        uint64_t v79 = (uint64_t)v196;
        if (v78 != 0xF000000000000007)
        {
          sub_1A887B2A4(v75);
          swift_bridgeObjectRelease();
LABEL_109:
          swift_bridgeObjectRelease();
          goto LABEL_110;
        }
      }
      if (v72 == v76 && v73 == v77)
      {
        sub_1A887B2A4(v75);
        swift_bridgeObjectRelease();
        sub_1A887B2A4(v71);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v174 = sub_1A8A78588();
        sub_1A887B2A4(v75);
        swift_bridgeObjectRelease();
        sub_1A887B2A4(v71);
        swift_bridgeObjectRelease();
        if ((v174 & 1) == 0)
        {
LABEL_110:
          sub_1A8891C98(v79, type metadata accessor for UntaggedResponse);
          goto LABEL_75;
        }
      }
      uint64_t v173 = v79;
      goto LABEL_100;
    case 5u:
      uint64_t v61 = (uint64_t)v196;
      sub_1A889209C((uint64_t)v196, (uint64_t)v39, type metadata accessor for UntaggedResponse);
      uint64_t v127 = *v39;
      unint64_t v128 = (uint64_t *)v195;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 6u:
      uint64_t v61 = (uint64_t)v196;
      unint64_t v129 = v177;
      sub_1A889209C((uint64_t)v196, (uint64_t)v177, type metadata accessor for UntaggedResponse);
      uint64_t v127 = *v129;
      unint64_t v128 = (uint64_t *)v195;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_73;
      }
LABEL_39:
      char v101 = sub_1A886C334(v127, *v128);
      goto LABEL_46;
    case 7u:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v80 = v178;
      sub_1A889209C((uint64_t)v196, (uint64_t)v178, type metadata accessor for UntaggedResponse);
      long long v81 = v80[1];
      v197[0] = *v80;
      v197[1] = v81;
      v197[2] = v80[2];
      unint64_t v82 = v195;
      if (swift_getEnumCaseMultiPayload() == 7) {
        goto LABEL_15;
      }
      goto LABEL_41;
    case 8u:
      uint64_t v61 = (uint64_t)v196;
      unint64_t v130 = v179;
      sub_1A889209C((uint64_t)v196, (uint64_t)v179, type metadata accessor for UntaggedResponse);
      long long v131 = v130[1];
      v197[0] = *v130;
      v197[1] = v131;
      v197[2] = v130[2];
      unint64_t v82 = v195;
      if (swift_getEnumCaseMultiPayload() == 8)
      {
LABEL_15:
        long long v83 = *((_OWORD *)v82 + 1);
        v198[0] = *(_OWORD *)v82;
        v198[1] = v83;
        v198[2] = *((_OWORD *)v82 + 2);
        char v84 = static MailboxInfo.__derived_struct_equals(_:_:)((uint64_t)v197, (uint64_t)v198);
        sub_1A860AC5C((uint64_t)v198);
        sub_1A860AC5C((uint64_t)v197);
        goto LABEL_55;
      }
LABEL_41:
      sub_1A860AC5C((uint64_t)v197);
      goto LABEL_74;
    case 9u:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v85 = v181;
      sub_1A889209C((uint64_t)v196, v181, type metadata accessor for UntaggedResponse);
      uint64_t v86 = *(void *)v85;
      uint64_t v87 = *(unsigned int *)(v85 + 8);
      long long v88 = *(_OWORD *)(v85 + 96);
      v197[4] = *(_OWORD *)(v85 + 80);
      v197[5] = v88;
      *(_OWORD *)((char *)&v197[5] + 9) = *(_OWORD *)(v85 + 105);
      long long v89 = *(_OWORD *)(v85 + 32);
      v197[0] = *(_OWORD *)(v85 + 16);
      v197[1] = v89;
      long long v90 = *(_OWORD *)(v85 + 64);
      v197[2] = *(_OWORD *)(v85 + 48);
      v197[3] = v90;
      char v91 = v195;
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_73;
      }
      uint64_t v92 = *v91;
      uint64_t v93 = *((unsigned int *)v91 + 2);
      long long v94 = *((_OWORD *)v91 + 6);
      v198[4] = *((_OWORD *)v91 + 5);
      v198[5] = v94;
      *(_OWORD *)((char *)&v198[5] + 9) = *(_OWORD *)((char *)v91 + 105);
      long long v95 = *((_OWORD *)v91 + 2);
      v198[0] = *((_OWORD *)v91 + 1);
      v198[1] = v95;
      long long v96 = *((_OWORD *)v91 + 4);
      v198[2] = *((_OWORD *)v91 + 3);
      v198[3] = v96;
      if ((v87 | (v87 << 32)) != (v93 | (v93 << 32)))
      {
        swift_bridgeObjectRelease();
        goto LABEL_106;
      }
      BOOL v97 = sub_1A8866D34(v86, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v97) {
        goto LABEL_107;
      }
      char v84 = static MailboxStatus.__derived_struct_equals(_:_:)((uint64_t)v197, (uint64_t)v198);
      goto LABEL_55;
    case 0xAu:
      uint64_t v61 = (uint64_t)v196;
      long long v132 = v180;
      sub_1A889209C((uint64_t)v196, (uint64_t)v180, type metadata accessor for UntaggedResponse);
      uint64_t v133 = *v132;
      uint64_t v134 = v132[1];
      uint64_t v135 = v132[2];
      uint64_t v136 = (uint64_t *)v195;
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      char v84 = static NamespaceResponse.__derived_struct_equals(_:_:)(v133, v134, v135, *v136, v136[1], v136[2]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_47:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_55;
    case 0xBu:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v98 = v182;
      sub_1A889209C((uint64_t)v196, (uint64_t)v182, type metadata accessor for UntaggedResponse);
      uint64_t v99 = *v98;
      unint64_t v100 = (uint64_t *)v195;
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_73;
      }
      char v101 = sub_1A85837D0(v99, *v100);
      goto LABEL_46;
    case 0xCu:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v102 = v183;
      sub_1A889209C((uint64_t)v196, (uint64_t)v183, type metadata accessor for UntaggedResponse);
      long long v103 = v102[1];
      v197[0] = *v102;
      v197[1] = v103;
      v197[2] = v102[2];
      uint64_t v104 = v195;
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        long long v111 = *((_OWORD *)v104 + 1);
        v198[0] = *(_OWORD *)v104;
        v198[1] = v111;
        v198[2] = *((_OWORD *)v104 + 2);
        static ExtendedSearchResponse.__derived_struct_equals(_:_:)((uint64_t)v197, (uint64_t)v198, v105, v106, v107, v108, v109, v110, v175, v176, (uint64_t)v177, (uint64_t)v178, (uint64_t)v179, (uint64_t)v180, v181, (uint64_t)v182, (uint64_t)v183, (uint64_t)v184, (uint64_t)v185,
          (uint64_t)v186);
        char v84 = v112;
        sub_1A8606EC4((uint64_t *)v197);
        sub_1A8606EC4((uint64_t *)v198);
        goto LABEL_55;
      }
      sub_1A8606EC4((uint64_t *)v197);
      goto LABEL_74;
    case 0xDu:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v137 = v184;
      sub_1A889209C((uint64_t)v196, (uint64_t)v184, type metadata accessor for UntaggedResponse);
      uint64_t v138 = *v137;
      uint64_t v139 = (uint64_t *)v195;
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_73;
      }
      char v101 = sub_1A851DC54(v138, *v139);
LABEL_46:
      char v84 = v101;
      goto LABEL_47;
    case 0xEu:
      uint64_t v61 = (uint64_t)v196;
      unsigned int v113 = v185;
      sub_1A889209C((uint64_t)v196, (uint64_t)v185, type metadata accessor for UntaggedResponse);
      unint64_t v114 = v195;
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_74;
      }
      goto LABEL_27;
    case 0xFu:
      uint64_t v61 = (uint64_t)v196;
      unsigned int v113 = v186;
      sub_1A889209C((uint64_t)v196, (uint64_t)v186, type metadata accessor for UntaggedResponse);
      unint64_t v114 = v195;
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_74;
      }
LABEL_27:
      int v115 = *v113;
      int v116 = *(_DWORD *)v114;
      goto LABEL_30;
    case 0x10u:
      uint64_t v61 = (uint64_t)v196;
      unint64_t v117 = v187;
      sub_1A889209C((uint64_t)v196, (uint64_t)v187, type metadata accessor for UntaggedResponse);
      unint64_t v118 = v195;
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_74;
      }
      int v115 = *(_DWORD *)v118;
      int v116 = *v117;
LABEL_30:
      char v84 = v115 == v116;
      goto LABEL_55;
    case 0x11u:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v140 = v191;
      sub_1A889209C((uint64_t)v196, v191, type metadata accessor for UntaggedResponse);
      uint64_t v141 = (uint64_t)v195;
      if (swift_getEnumCaseMultiPayload() != 17) {
        goto LABEL_62;
      }
      uint64_t v142 = v141;
      uint64_t v143 = v175;
      goto LABEL_52;
    case 0x12u:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v140 = v192;
      sub_1A889209C((uint64_t)v196, v192, type metadata accessor for UntaggedResponse);
      uint64_t v144 = (uint64_t)v195;
      if (swift_getEnumCaseMultiPayload() != 18)
      {
LABEL_62:
        sub_1A8511B00(v140, &qword_1E9741C28);
        goto LABEL_74;
      }
      uint64_t v142 = v144;
      uint64_t v143 = v176;
LABEL_52:
      sub_1A8529F8C(v142, v143, &qword_1E9741C28);
      sub_1A8875108();
      char v84 = sub_1A8A78928();
      sub_1A8511B00(v143, &qword_1E9741C28);
      sub_1A8511B00(v140, &qword_1E9741C28);
      goto LABEL_55;
    case 0x13u:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v145 = v188;
      sub_1A889209C((uint64_t)v196, (uint64_t)v188, type metadata accessor for UntaggedResponse);
      memcpy(v197, v145, 0x248uLL);
      uint64_t v146 = v195;
      if (swift_getEnumCaseMultiPayload() != 19)
      {
        sub_1A856B170((uint64_t)v197);
        goto LABEL_74;
      }
      memcpy(v198, v146, 0x248uLL);
      char v84 = _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v197, (uint64_t)v198);
      sub_1A856B170((uint64_t)v198);
      sub_1A856B170((uint64_t)v197);
LABEL_55:
      sub_1A8891C98(v61, type metadata accessor for UntaggedResponse);
      return v84 & 1;
    case 0x14u:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v147 = v189;
      sub_1A889209C((uint64_t)v196, (uint64_t)v189, type metadata accessor for UntaggedResponse);
      uint64_t v148 = *v147;
      uint64_t v149 = v147[1];
      uint64_t v150 = v147[2];
      uint64_t v151 = (uint64_t *)v195;
      if (swift_getEnumCaseMultiPayload() != 20)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_74;
      }
      uint64_t v152 = *v151;
      uint64_t v153 = v151[1];
      uint64_t v154 = v151[2];
      if (sub_1A888659C(v152, v153, v148, v149))
      {
        char v155 = sub_1A888B774(v150, v154);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (v155) {
          goto LABEL_99;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      goto LABEL_107;
    case 0x15u:
      uint64_t v61 = (uint64_t)v196;
      uint64_t v156 = v190;
      sub_1A889209C((uint64_t)v196, v190, type metadata accessor for UntaggedResponse);
      uint64_t v157 = *(void *)v156;
      uint64_t v158 = *(void *)(v156 + 8);
      uint64_t v159 = *(void *)(v156 + 16);
      char v160 = *(unsigned char *)(v156 + 24);
      uint64_t v161 = v195;
      if (swift_getEnumCaseMultiPayload() == 21)
      {
        char v84 = static ApplePushService.__derived_enum_equals(_:_:)(v157, v158, v159, v160, *v161, v161[1], v161[2], *((unsigned char *)v161 + 24));
        sub_1A87A3260();
        sub_1A87A3260();
        sub_1A8891C98((uint64_t)v196, type metadata accessor for UntaggedResponse);
        return v84 & 1;
      }
      sub_1A87A3260();
      goto LABEL_74;
    default:
      uint64_t v61 = (uint64_t)v196;
      sub_1A889209C((uint64_t)v196, (uint64_t)v54, type metadata accessor for UntaggedResponse);
      unint64_t v62 = *v54;
      unint64_t v63 = v54[1];
      unint64_t v64 = v54[2];
      unint64_t v65 = v195;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_3:
        sub_1A887B2A4(v62);
LABEL_73:
        swift_bridgeObjectRelease();
LABEL_74:
        sub_1A8511B00(v61, &qword_1E974E128);
        goto LABEL_75;
      }
LABEL_5:
      unint64_t v66 = *v65;
      unint64_t v67 = v65[1];
      unint64_t v68 = v65[2];
      unint64_t v69 = v66 & 0xF000000000000007;
      if ((~v62 & 0xF000000000000007) == 0)
      {
        if (v69 != 0xF000000000000007)
        {
          unint64_t v70 = v66;
LABEL_35:
          sub_1A887B2A4(v70);
          swift_bridgeObjectRelease();
LABEL_106:
          swift_bridgeObjectRelease();
          goto LABEL_107;
        }
LABEL_65:
        if (v63 != v67 || v64 != v68)
        {
          char v166 = sub_1A8A78588();
          sub_1A887B2A4(v66);
          swift_bridgeObjectRelease();
          unint64_t v167 = v62;
          goto LABEL_98;
        }
        sub_1A887B2A4(v66);
        swift_bridgeObjectRelease();
        unint64_t v164 = v62;
LABEL_89:
        sub_1A887B2A4(v164);
        swift_bridgeObjectRelease();
        goto LABEL_99;
      }
      if (v69 != 0xF000000000000007)
      {
        sub_1A887B33C(v66);
        sub_1A887B33C(v62);
        static ResponseTextCode.__derived_enum_equals(_:_:)();
        char v163 = v162;
        sub_1A887B2A4(v66);
        sub_1A887B2A4(v62);
        if (v163) {
          goto LABEL_65;
        }
        sub_1A887B2A4(v66);
      }
      swift_bridgeObjectRelease();
      unint64_t v170 = v62;
LABEL_105:
      sub_1A887B2A4(v170);
      goto LABEL_106;
  }
}

uint64_t type metadata accessor for UntaggedResponse(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9748178);
}

BOOL _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(unint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 != 1) {
        return 0;
      }
    }
    else if (a8 != 2)
    {
      return 0;
    }
  }
  else if (a8)
  {
    return 0;
  }
  unint64_t v14 = a5 & 0xF000000000000007;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    if (v14 == 0xF000000000000007) {
      return 0;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A887B33C(a5);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A887B33C(a1);
    static ResponseTextCode.__derived_enum_equals(_:_:)();
    if ((v15 & 1) == 0)
    {
      sub_1A887B2A4(a5);
      swift_bridgeObjectRelease();
      sub_1A887B2A4(a1);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    if (v14 != 0xF000000000000007) {
      return 0;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  if (a2 == a6 && a3 == a7)
  {
    sub_1A887B2A4(a5);
    swift_bridgeObjectRelease();
    sub_1A887B2A4(a1);
    swift_bridgeObjectRelease();
    return 1;
  }
  char v17 = sub_1A8A78588();
  sub_1A887B2A4(a5);
  swift_bridgeObjectRelease();
  sub_1A887B2A4(a1);
  swift_bridgeObjectRelease();
  return (v17 & 1) != 0;
}

uint64_t _s13IMAP2Protocol8ResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UntaggedResponse(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (unint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Response(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (unsigned __int8 *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E120);
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = &v15[*(int *)(v16 + 56)];
  sub_1A889209C(a1, (uint64_t)v15, type metadata accessor for Response);
  sub_1A889209C(a2, (uint64_t)v17, type metadata accessor for Response);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A889209C((uint64_t)v15, (uint64_t)v12, type metadata accessor for Response);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1A8892218((uint64_t)v17, (uint64_t)v6, type metadata accessor for UntaggedResponse);
      char v31 = _s13IMAP2Protocol16UntaggedResponseO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v12, v6);
      sub_1A8891C98((uint64_t)v6, type metadata accessor for UntaggedResponse);
      sub_1A8891C98((uint64_t)v12, type metadata accessor for UntaggedResponse);
      goto LABEL_11;
    }
    sub_1A8891C98((uint64_t)v12, type metadata accessor for UntaggedResponse);
    goto LABEL_9;
  }
  sub_1A889209C((uint64_t)v15, (uint64_t)v9, type metadata accessor for Response);
  int v18 = *((_DWORD *)v9 + 1);
  unint64_t v20 = *((void *)v9 + 1);
  uint64_t v19 = *((void *)v9 + 2);
  uint64_t v21 = *((void *)v9 + 3);
  unsigned __int8 v22 = v9[32];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A887B25C(v20, v19, v21, v22);
LABEL_9:
    sub_1A8511B00((uint64_t)v15, &qword_1E974E120);
LABEL_13:
    char v31 = 0;
    return v31 & 1;
  }
  int v23 = *v9;
  unint64_t v25 = *((void *)v17 + 1);
  uint64_t v24 = *((void *)v17 + 2);
  uint64_t v26 = *((void *)v17 + 3);
  char v27 = v17[32];
  if (v23 != *v17 || v18 != *((_DWORD *)v17 + 1))
  {
    sub_1A887B25C(*((void *)v17 + 1), *((void *)v17 + 2), *((void *)v17 + 3), v17[32]);
    sub_1A887B25C(v20, v19, v21, v22);
    sub_1A8891C98((uint64_t)v15, type metadata accessor for Response);
    goto LABEL_13;
  }
  unint64_t v28 = *((void *)v17 + 1);
  uint64_t v29 = *((void *)v17 + 2);
  unsigned __int8 v30 = v27;
  char v31 = _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(v20, v19, v21, v22, v28, v24, v26, v27);
  sub_1A887B25C(v25, v29, v26, v30);
  sub_1A887B25C(v20, v19, v21, v22);
LABEL_11:
  sub_1A8891C98((uint64_t)v15, type metadata accessor for Response);
  return v31 & 1;
}

char *initializeBufferWithCopyOfBuffer for UntaggedResponse(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_19;
      case 1u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_19;
      case 2u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_19;
      case 3u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_19;
      case 4u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
LABEL_19:
        uint64_t v11 = *(void *)(a2 + 8);
        uint64_t v10 = *(void *)(a2 + 16);
        *(void *)a1 = v7;
        *((void *)a1 + 1) = v11;
        *((void *)a1 + 2) = v10;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 6u:
      case 0xBu:
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
      case 8u:
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
        a1[20] = *(unsigned char *)(a2 + 20);
        uint64_t v13 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v13;
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        long long v14 = *(_OWORD *)(a2 + 96);
        *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
        *((_OWORD *)a1 + 6) = v14;
        *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
        long long v15 = *(_OWORD *)(a2 + 32);
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        *((_OWORD *)a1 + 2) = v15;
        long long v16 = *(_OWORD *)(a2 + 64);
        *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
        *((_OWORD *)a1 + 4) = v16;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v17 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v17;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v18 = *(void *)(a2 + 8);
        if (v18)
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v18;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          int v19 = *(_DWORD *)(a2 + 28);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_DWORD *)a1 + 7) = v19;
          a1[32] = *(unsigned char *)(a2 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          long long v32 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v32;
          a1[32] = *(unsigned char *)(a2 + 32);
        }
        a1[33] = *(unsigned char *)(a2 + 33);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
      case 0x12u:
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[4] = *(unsigned char *)(a2 + 4);
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        a1[12] = *(unsigned char *)(a2 + 12);
        int v21 = *(unsigned __int8 *)(a2 + 192);
        if (v21 == 254 || v21 == 255)
        {
          long long v22 = *(_OWORD *)(a2 + 160);
          *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
          *((_OWORD *)a1 + 10) = v22;
          *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
          a1[192] = *(unsigned char *)(a2 + 192);
          long long v23 = *(_OWORD *)(a2 + 96);
          *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
          *((_OWORD *)a1 + 6) = v23;
          long long v24 = *(_OWORD *)(a2 + 128);
          *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
          *((_OWORD *)a1 + 8) = v24;
          long long v25 = *(_OWORD *)(a2 + 32);
          *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
          *((_OWORD *)a1 + 2) = v25;
          long long v26 = *(_OWORD *)(a2 + 64);
          *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
          *((_OWORD *)a1 + 4) = v26;
        }
        else
        {
          char v97 = v21 & 1;
          uint64_t v33 = *(void *)(a2 + 48);
          uint64_t v34 = *(void *)(a2 + 56);
          uint64_t v67 = *(void *)(a2 + 64);
          uint64_t v69 = *(void *)(a2 + 80);
          uint64_t v71 = *(void *)(a2 + 88);
          uint64_t v73 = *(void *)(a2 + 96);
          uint64_t v75 = *(void *)(a2 + 104);
          uint64_t v77 = *(void *)(a2 + 112);
          uint64_t v79 = *(void *)(a2 + 120);
          uint64_t v81 = *(void *)(a2 + 128);
          uint64_t v83 = *(void *)(a2 + 136);
          uint64_t v85 = *(void *)(a2 + 144);
          uint64_t v87 = *(void *)(a2 + 152);
          uint64_t v89 = *(void *)(a2 + 160);
          uint64_t v91 = *(void *)(a2 + 168);
          uint64_t v93 = *(void *)(a2 + 176);
          uint64_t v95 = *(void *)(a2 + 184);
          uint64_t v35 = *(void *)(a2 + 16);
          uint64_t v36 = *(void *)(a2 + 24);
          uint64_t v37 = *(void *)(a2 + 32);
          uint64_t v38 = *(void *)(a2 + 40);
          uint64_t v39 = *(void *)(a2 + 72);
          sub_1A86409B8(v35, v36, v37, v38, v33, v34, v67, v39, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89,
            v91,
            v93,
            v95,
            v21 & 1);
          *((void *)a1 + 2) = v35;
          *((void *)a1 + 3) = v36;
          *((void *)a1 + 4) = v37;
          *((void *)a1 + 5) = v38;
          *((void *)a1 + 6) = v33;
          *((void *)a1 + 7) = v34;
          *((void *)a1 + 8) = v67;
          *((void *)a1 + 9) = v39;
          *((void *)a1 + 10) = v69;
          *((void *)a1 + 11) = v71;
          *((void *)a1 + 12) = v73;
          *((void *)a1 + 13) = v75;
          *((void *)a1 + 14) = v77;
          *((void *)a1 + 15) = v79;
          *((void *)a1 + 16) = v81;
          *((void *)a1 + 17) = v83;
          *((void *)a1 + 18) = v85;
          *((void *)a1 + 19) = v87;
          *((void *)a1 + 20) = v89;
          *((void *)a1 + 21) = v91;
          *((void *)a1 + 22) = v93;
          *((void *)a1 + 23) = v95;
          a1[192] = v97;
        }
        *((void *)a1 + 25) = *(void *)(a2 + 200);
        int v40 = *(unsigned __int8 *)(a2 + 384);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v40 == 254 || v40 == 255)
        {
          long long v41 = *(_OWORD *)(a2 + 352);
          *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
          *((_OWORD *)a1 + 22) = v41;
          *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
          a1[384] = *(unsigned char *)(a2 + 384);
          long long v42 = *(_OWORD *)(a2 + 288);
          *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
          *((_OWORD *)a1 + 18) = v42;
          long long v43 = *(_OWORD *)(a2 + 320);
          *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
          *((_OWORD *)a1 + 20) = v43;
          long long v44 = *(_OWORD *)(a2 + 224);
          *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
          *((_OWORD *)a1 + 14) = v44;
          long long v45 = *(_OWORD *)(a2 + 256);
          *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
          *((_OWORD *)a1 + 16) = v45;
        }
        else
        {
          char v98 = v40 & 1;
          uint64_t v46 = *(void *)(a2 + 240);
          uint64_t v47 = *(void *)(a2 + 248);
          uint64_t v68 = *(void *)(a2 + 256);
          uint64_t v70 = *(void *)(a2 + 272);
          uint64_t v72 = *(void *)(a2 + 280);
          uint64_t v74 = *(void *)(a2 + 288);
          uint64_t v76 = *(void *)(a2 + 296);
          uint64_t v78 = *(void *)(a2 + 304);
          uint64_t v80 = *(void *)(a2 + 312);
          uint64_t v82 = *(void *)(a2 + 320);
          uint64_t v84 = *(void *)(a2 + 328);
          uint64_t v86 = *(void *)(a2 + 336);
          uint64_t v88 = *(void *)(a2 + 344);
          uint64_t v90 = *(void *)(a2 + 352);
          uint64_t v92 = *(void *)(a2 + 360);
          uint64_t v94 = *(void *)(a2 + 368);
          uint64_t v96 = *(void *)(a2 + 376);
          char v66 = v40 & 1;
          uint64_t v48 = *(void *)(a2 + 208);
          uint64_t v49 = *(void *)(a2 + 216);
          uint64_t v50 = *(void *)(a2 + 224);
          uint64_t v51 = *(void *)(a2 + 232);
          uint64_t v52 = *(void *)(a2 + 264);
          sub_1A86409B8(v48, v49, v50, v51, v46, v47, v68, v52, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90,
            v92,
            v94,
            v96,
            v66);
          *((void *)a1 + 26) = v48;
          *((void *)a1 + 27) = v49;
          *((void *)a1 + 28) = v50;
          *((void *)a1 + 29) = v51;
          *((void *)a1 + 30) = v46;
          *((void *)a1 + 31) = v47;
          *((void *)a1 + 32) = v68;
          *((void *)a1 + 33) = v52;
          *((void *)a1 + 34) = v70;
          *((void *)a1 + 35) = v72;
          *((void *)a1 + 36) = v74;
          *((void *)a1 + 37) = v76;
          *((void *)a1 + 38) = v78;
          *((void *)a1 + 39) = v80;
          *((void *)a1 + 40) = v82;
          *((void *)a1 + 41) = v84;
          *((void *)a1 + 42) = v86;
          *((void *)a1 + 43) = v88;
          *((void *)a1 + 44) = v90;
          *((void *)a1 + 45) = v92;
          *((void *)a1 + 46) = v94;
          *((void *)a1 + 47) = v96;
          a1[384] = v98;
        }
        uint64_t v53 = *(void *)(a2 + 432);
        if (v53)
        {
          uint64_t v54 = *(void *)(a2 + 400);
          *((void *)a1 + 49) = *(void *)(a2 + 392);
          *((void *)a1 + 50) = v54;
          *((void *)a1 + 51) = *(void *)(a2 + 408);
          *((void *)a1 + 52) = *(void *)(a2 + 416);
          *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
          *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
          uint64_t v55 = *(void *)(a2 + 440);
          uint64_t v56 = *(void *)(a2 + 448);
          *((void *)a1 + 54) = v53;
          *((void *)a1 + 55) = v55;
          uint64_t v57 = *(void *)(a2 + 456);
          uint64_t v58 = *(void *)(a2 + 464);
          *((void *)a1 + 56) = v56;
          *((void *)a1 + 57) = v57;
          uint64_t v60 = *(void *)(a2 + 472);
          uint64_t v59 = *(void *)(a2 + 480);
          *((void *)a1 + 58) = v58;
          *((void *)a1 + 59) = v60;
          uint64_t v62 = *(void *)(a2 + 488);
          uint64_t v61 = *(void *)(a2 + 496);
          *((void *)a1 + 60) = v59;
          *((void *)a1 + 61) = v62;
          uint64_t v99 = *(void *)(a2 + 504);
          *((void *)a1 + 62) = v61;
          *((void *)a1 + 63) = v99;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          long long v63 = *(_OWORD *)(a2 + 472);
          *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
          *(_OWORD *)(a1 + 472) = v63;
          *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
          *((void *)a1 + 63) = *(void *)(a2 + 504);
          long long v64 = *(_OWORD *)(a2 + 408);
          *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
          *(_OWORD *)(a1 + 408) = v64;
          long long v65 = *(_OWORD *)(a2 + 440);
          *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
          *(_OWORD *)(a1 + 440) = v65;
        }
        *((void *)a1 + 64) = *(void *)(a2 + 512);
        *((void *)a1 + 65) = *(void *)(a2 + 520);
        *((void *)a1 + 66) = *(void *)(a2 + 528);
        a1[536] = *(unsigned char *)(a2 + 536);
        *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
        a1[544] = *(unsigned char *)(a2 + 544);
        *((void *)a1 + 69) = *(void *)(a2 + 552);
        a1[560] = *(unsigned char *)(a2 + 560);
        *((void *)a1 + 71) = *(void *)(a2 + 568);
        *((void *)a1 + 72) = *(void *)(a2 + 576);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x14u:
        uint64_t v27 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v27;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        unint64_t v28 = *(void *)a2;
        uint64_t v29 = *(void *)(a2 + 8);
        uint64_t v30 = *(void *)(a2 + 16);
        char v31 = *(unsigned char *)(a2 + 24);
        sub_1A87A3240();
        *(void *)a1 = v28;
        *((void *)a1 + 1) = v29;
        *((void *)a1 + 2) = v30;
        a1[24] = v31;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for UntaggedResponse(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      if ((~*(void *)a1 & 0xF000000000000007) != 0) {
        sub_1A887B2B8(*(void *)a1);
      }
      goto LABEL_9;
    case 5:
    case 6:
    case 9:
    case 11:
    case 13:
      goto LABEL_9;
    case 7:
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_16;
    case 10:
      goto LABEL_8;
    case 12:
      if (*(void *)(a1 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_9;
    case 17:
    case 18:
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 19:
      unsigned int v5 = *(unsigned __int8 *)(a1 + 192);
      if (v5 <= 0xFD) {
        sub_1A856B460(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
      }
          *(void *)(a1 + 168),
          *(void *)(a1 + 176),
          *(void *)(a1 + 184),
          v5 & 1);
      swift_bridgeObjectRelease();
      unsigned int v6 = *(unsigned __int8 *)(a1 + 384);
      if (v6 <= 0xFD) {
        sub_1A856B460(*(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(void *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280), *(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344), *(void *)(a1 + 352),
      }
          *(void *)(a1 + 360),
          *(void *)(a1 + 368),
          *(void *)(a1 + 376),
          v6 & 1);
      if (*(void *)(a1 + 432))
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 20:
      swift_release();
      swift_release();
LABEL_16:
      uint64_t result = swift_release();
      break;
    case 21:
      uint64_t result = sub_1A87A3260();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for UntaggedResponse(char *a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_1A887B350(*(void *)a2);
      }
      goto LABEL_16;
    case 1u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_1A887B350(*(void *)a2);
      }
      goto LABEL_16;
    case 2u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_1A887B350(*(void *)a2);
      }
      goto LABEL_16;
    case 3u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_1A887B350(*(void *)a2);
      }
      goto LABEL_16;
    case 4u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_1A887B350(*(void *)a2);
      }
LABEL_16:
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v8;
      *((void *)a1 + 2) = v7;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_41;
    case 5u:
    case 6u:
    case 0xBu:
    case 0xDu:
      *(void *)a1 = *(void *)a2;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_41;
    case 7u:
    case 8u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v9;
      *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
      a1[20] = *(unsigned char *)(a2 + 20);
      uint64_t v10 = *(void *)(a2 + 32);
      *((void *)a1 + 3) = *(void *)(a2 + 24);
      *((void *)a1 + 4) = v10;
      *((void *)a1 + 5) = *(void *)(a2 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_41;
    case 9u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      long long v11 = *(_OWORD *)(a2 + 96);
      *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
      *((_OWORD *)a1 + 6) = v11;
      *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
      long long v12 = *(_OWORD *)(a2 + 32);
      *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
      *((_OWORD *)a1 + 2) = v12;
      long long v13 = *(_OWORD *)(a2 + 64);
      *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
      *((_OWORD *)a1 + 4) = v13;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_41;
    case 0xAu:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v14;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_41;
    case 0xCu:
      uint64_t v15 = *(void *)(a2 + 8);
      if (v15)
      {
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v15;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        int v16 = *(_DWORD *)(a2 + 28);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_DWORD *)a1 + 7) = v16;
        a1[32] = *(unsigned char *)(a2 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      else
      {
        long long v29 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v29;
        a1[32] = *(unsigned char *)(a2 + 32);
      }
      a1[33] = *(unsigned char *)(a2 + 33);
      *((void *)a1 + 5) = *(void *)(a2 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_41;
    case 0x11u:
    case 0x12u:
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_41;
    case 0x13u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[4] = *(unsigned char *)(a2 + 4);
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      a1[12] = *(unsigned char *)(a2 + 12);
      int v18 = *(unsigned __int8 *)(a2 + 192);
      if (v18 == 254 || v18 == 255)
      {
        long long v19 = *(_OWORD *)(a2 + 160);
        *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
        *((_OWORD *)a1 + 10) = v19;
        *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
        a1[192] = *(unsigned char *)(a2 + 192);
        long long v20 = *(_OWORD *)(a2 + 96);
        *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
        *((_OWORD *)a1 + 6) = v20;
        long long v21 = *(_OWORD *)(a2 + 128);
        *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
        *((_OWORD *)a1 + 8) = v21;
        long long v22 = *(_OWORD *)(a2 + 32);
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        *((_OWORD *)a1 + 2) = v22;
        long long v23 = *(_OWORD *)(a2 + 64);
        *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
        *((_OWORD *)a1 + 4) = v23;
      }
      else
      {
        char v95 = v18 & 1;
        uint64_t v30 = *(void *)(a2 + 48);
        uint64_t v31 = *(void *)(a2 + 56);
        uint64_t v65 = *(void *)(a2 + 64);
        uint64_t v67 = *(void *)(a2 + 80);
        uint64_t v69 = *(void *)(a2 + 88);
        uint64_t v71 = *(void *)(a2 + 96);
        uint64_t v73 = *(void *)(a2 + 104);
        uint64_t v75 = *(void *)(a2 + 112);
        uint64_t v77 = *(void *)(a2 + 120);
        uint64_t v79 = *(void *)(a2 + 128);
        uint64_t v81 = *(void *)(a2 + 136);
        uint64_t v83 = *(void *)(a2 + 144);
        uint64_t v85 = *(void *)(a2 + 152);
        uint64_t v87 = *(void *)(a2 + 160);
        uint64_t v89 = *(void *)(a2 + 168);
        uint64_t v91 = *(void *)(a2 + 176);
        uint64_t v93 = *(void *)(a2 + 184);
        uint64_t v32 = *(void *)(a2 + 16);
        uint64_t v33 = *(void *)(a2 + 24);
        uint64_t v34 = *(void *)(a2 + 32);
        uint64_t v35 = *(void *)(a2 + 40);
        uint64_t v36 = *(void *)(a2 + 72);
        sub_1A86409B8(v32, v33, v34, v35, v30, v31, v65, v36, v67, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87,
          v89,
          v91,
          v93,
          v18 & 1);
        *((void *)a1 + 2) = v32;
        *((void *)a1 + 3) = v33;
        *((void *)a1 + 4) = v34;
        *((void *)a1 + 5) = v35;
        *((void *)a1 + 6) = v30;
        *((void *)a1 + 7) = v31;
        *((void *)a1 + 8) = v65;
        *((void *)a1 + 9) = v36;
        *((void *)a1 + 10) = v67;
        *((void *)a1 + 11) = v69;
        *((void *)a1 + 12) = v71;
        *((void *)a1 + 13) = v73;
        *((void *)a1 + 14) = v75;
        *((void *)a1 + 15) = v77;
        *((void *)a1 + 16) = v79;
        *((void *)a1 + 17) = v81;
        *((void *)a1 + 18) = v83;
        *((void *)a1 + 19) = v85;
        *((void *)a1 + 20) = v87;
        *((void *)a1 + 21) = v89;
        *((void *)a1 + 22) = v91;
        *((void *)a1 + 23) = v93;
        a1[192] = v95;
      }
      *((void *)a1 + 25) = *(void *)(a2 + 200);
      int v37 = *(unsigned __int8 *)(a2 + 384);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if (v37 == 254 || v37 == 255)
      {
        long long v38 = *(_OWORD *)(a2 + 352);
        *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
        *((_OWORD *)a1 + 22) = v38;
        *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
        a1[384] = *(unsigned char *)(a2 + 384);
        long long v39 = *(_OWORD *)(a2 + 288);
        *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
        *((_OWORD *)a1 + 18) = v39;
        long long v40 = *(_OWORD *)(a2 + 320);
        *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
        *((_OWORD *)a1 + 20) = v40;
        long long v41 = *(_OWORD *)(a2 + 224);
        *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
        *((_OWORD *)a1 + 14) = v41;
        long long v42 = *(_OWORD *)(a2 + 256);
        *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
        *((_OWORD *)a1 + 16) = v42;
      }
      else
      {
        char v96 = v37 & 1;
        uint64_t v43 = *(void *)(a2 + 240);
        uint64_t v44 = *(void *)(a2 + 248);
        uint64_t v66 = *(void *)(a2 + 256);
        uint64_t v68 = *(void *)(a2 + 272);
        uint64_t v70 = *(void *)(a2 + 280);
        uint64_t v72 = *(void *)(a2 + 288);
        uint64_t v74 = *(void *)(a2 + 296);
        uint64_t v76 = *(void *)(a2 + 304);
        uint64_t v78 = *(void *)(a2 + 312);
        uint64_t v80 = *(void *)(a2 + 320);
        uint64_t v82 = *(void *)(a2 + 328);
        uint64_t v84 = *(void *)(a2 + 336);
        uint64_t v86 = *(void *)(a2 + 344);
        uint64_t v88 = *(void *)(a2 + 352);
        uint64_t v90 = *(void *)(a2 + 360);
        uint64_t v92 = *(void *)(a2 + 368);
        uint64_t v94 = *(void *)(a2 + 376);
        char v64 = v37 & 1;
        uint64_t v45 = *(void *)(a2 + 208);
        uint64_t v46 = *(void *)(a2 + 216);
        uint64_t v47 = *(void *)(a2 + 224);
        uint64_t v48 = *(void *)(a2 + 232);
        uint64_t v49 = *(void *)(a2 + 264);
        sub_1A86409B8(v45, v46, v47, v48, v43, v44, v66, v49, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88,
          v90,
          v92,
          v94,
          v64);
        *((void *)a1 + 26) = v45;
        *((void *)a1 + 27) = v46;
        *((void *)a1 + 28) = v47;
        *((void *)a1 + 29) = v48;
        *((void *)a1 + 30) = v43;
        *((void *)a1 + 31) = v44;
        *((void *)a1 + 32) = v66;
        *((void *)a1 + 33) = v49;
        *((void *)a1 + 34) = v68;
        *((void *)a1 + 35) = v70;
        *((void *)a1 + 36) = v72;
        *((void *)a1 + 37) = v74;
        *((void *)a1 + 38) = v76;
        *((void *)a1 + 39) = v78;
        *((void *)a1 + 40) = v80;
        *((void *)a1 + 41) = v82;
        *((void *)a1 + 42) = v84;
        *((void *)a1 + 43) = v86;
        *((void *)a1 + 44) = v88;
        *((void *)a1 + 45) = v90;
        *((void *)a1 + 46) = v92;
        *((void *)a1 + 47) = v94;
        a1[384] = v96;
      }
      uint64_t v50 = *(void *)(a2 + 432);
      if (v50)
      {
        uint64_t v51 = *(void *)(a2 + 400);
        *((void *)a1 + 49) = *(void *)(a2 + 392);
        *((void *)a1 + 50) = v51;
        *((void *)a1 + 51) = *(void *)(a2 + 408);
        *((void *)a1 + 52) = *(void *)(a2 + 416);
        *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
        *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
        uint64_t v52 = *(void *)(a2 + 440);
        uint64_t v53 = *(void *)(a2 + 448);
        *((void *)a1 + 54) = v50;
        *((void *)a1 + 55) = v52;
        uint64_t v54 = *(void *)(a2 + 456);
        uint64_t v55 = *(void *)(a2 + 464);
        *((void *)a1 + 56) = v53;
        *((void *)a1 + 57) = v54;
        uint64_t v57 = *(void *)(a2 + 472);
        uint64_t v56 = *(void *)(a2 + 480);
        *((void *)a1 + 58) = v55;
        *((void *)a1 + 59) = v57;
        uint64_t v59 = *(void *)(a2 + 488);
        uint64_t v58 = *(void *)(a2 + 496);
        *((void *)a1 + 60) = v56;
        *((void *)a1 + 61) = v59;
        uint64_t v97 = *(void *)(a2 + 504);
        *((void *)a1 + 62) = v58;
        *((void *)a1 + 63) = v97;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      }
      else
      {
        long long v60 = *(_OWORD *)(a2 + 472);
        *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
        *(_OWORD *)(a1 + 472) = v60;
        *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
        *((void *)a1 + 63) = *(void *)(a2 + 504);
        long long v61 = *(_OWORD *)(a2 + 408);
        *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
        *(_OWORD *)(a1 + 408) = v61;
        long long v62 = *(_OWORD *)(a2 + 440);
        *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
        *(_OWORD *)(a1 + 440) = v62;
      }
      *((void *)a1 + 64) = *(void *)(a2 + 512);
      *((void *)a1 + 65) = *(void *)(a2 + 520);
      *((void *)a1 + 66) = *(void *)(a2 + 528);
      a1[536] = *(unsigned char *)(a2 + 536);
      *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
      a1[544] = *(unsigned char *)(a2 + 544);
      *((void *)a1 + 69) = *(void *)(a2 + 552);
      a1[560] = *(unsigned char *)(a2 + 560);
      *((void *)a1 + 71) = *(void *)(a2 + 568);
      *((void *)a1 + 72) = *(void *)(a2 + 576);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_41;
    case 0x14u:
      uint64_t v24 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v24;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_41;
    case 0x15u:
      unint64_t v25 = *(void *)a2;
      uint64_t v26 = *(void *)(a2 + 8);
      uint64_t v27 = *(void *)(a2 + 16);
      char v28 = *(unsigned char *)(a2 + 24);
      sub_1A87A3240();
      *(void *)a1 = v25;
      *((void *)a1 + 1) = v26;
      *((void *)a1 + 2) = v27;
      a1[24] = v28;
LABEL_41:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for UntaggedResponse(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8891C98((uint64_t)a1, type metadata accessor for UntaggedResponse);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_17;
      case 1u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_17;
      case 2u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_17;
      case 3u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_17;
      case 4u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
LABEL_17:
        *(void *)a1 = v6;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_42;
      case 5u:
      case 6u:
      case 0xBu:
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_42;
      case 7u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        a1[20] = a2[20];
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_42;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        long long v7 = *((_OWORD *)a2 + 1);
        long long v8 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v8;
        *((_OWORD *)a1 + 1) = v7;
        long long v9 = *((_OWORD *)a2 + 4);
        long long v10 = *((_OWORD *)a2 + 5);
        long long v11 = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
        *((_OWORD *)a1 + 5) = v10;
        *((_OWORD *)a1 + 6) = v11;
        *((_OWORD *)a1 + 4) = v9;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_42;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_42;
      case 0xCu:
        if (*((void *)a2 + 1))
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
          int v12 = *((_DWORD *)a2 + 7);
          a1[32] = a2[32];
          *((_DWORD *)a1 + 7) = v12;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          long long v29 = *(_OWORD *)a2;
          long long v30 = *((_OWORD *)a2 + 1);
          a1[32] = a2[32];
          *(_OWORD *)a1 = v29;
          *((_OWORD *)a1 + 1) = v30;
        }
        a1[33] = a2[33];
        *((void *)a1 + 5) = *((void *)a2 + 5);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_42;
      case 0x11u:
      case 0x12u:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_42;
      case 0x13u:
        int v14 = *(_DWORD *)a2;
        a1[4] = a2[4];
        *(_DWORD *)a1 = v14;
        LOBYTE(v14) = a2[12];
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[12] = v14;
        int v15 = a2[192];
        if (v15 == 254 || v15 == 255)
        {
          long long v16 = *((_OWORD *)a2 + 1);
          long long v17 = *((_OWORD *)a2 + 2);
          long long v18 = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 4) = v18;
          *((_OWORD *)a1 + 1) = v16;
          *((_OWORD *)a1 + 2) = v17;
          long long v19 = *((_OWORD *)a2 + 5);
          long long v20 = *((_OWORD *)a2 + 6);
          long long v21 = *((_OWORD *)a2 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 8) = v21;
          *((_OWORD *)a1 + 5) = v19;
          *((_OWORD *)a1 + 6) = v20;
          long long v22 = *((_OWORD *)a2 + 9);
          long long v23 = *((_OWORD *)a2 + 10);
          long long v24 = *((_OWORD *)a2 + 11);
          a1[192] = a2[192];
          *((_OWORD *)a1 + 10) = v23;
          *((_OWORD *)a1 + 11) = v24;
          *((_OWORD *)a1 + 9) = v22;
        }
        else
        {
          char v96 = v15 & 1;
          uint64_t v31 = *((void *)a2 + 6);
          uint64_t v32 = *((void *)a2 + 7);
          uint64_t v66 = *((void *)a2 + 8);
          uint64_t v68 = *((void *)a2 + 10);
          uint64_t v70 = *((void *)a2 + 11);
          uint64_t v72 = *((void *)a2 + 12);
          uint64_t v74 = *((void *)a2 + 13);
          uint64_t v76 = *((void *)a2 + 14);
          uint64_t v78 = *((void *)a2 + 15);
          uint64_t v80 = *((void *)a2 + 16);
          uint64_t v82 = *((void *)a2 + 17);
          uint64_t v84 = *((void *)a2 + 18);
          uint64_t v86 = *((void *)a2 + 19);
          uint64_t v88 = *((void *)a2 + 20);
          uint64_t v90 = *((void *)a2 + 21);
          uint64_t v92 = *((void *)a2 + 22);
          uint64_t v94 = *((void *)a2 + 23);
          uint64_t v33 = *((void *)a2 + 2);
          uint64_t v34 = *((void *)a2 + 3);
          uint64_t v35 = *((void *)a2 + 4);
          uint64_t v36 = *((void *)a2 + 5);
          uint64_t v37 = *((void *)a2 + 9);
          sub_1A86409B8(v33, v34, v35, v36, v31, v32, v66, v37, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88,
            v90,
            v92,
            v94,
            v15 & 1);
          *((void *)a1 + 2) = v33;
          *((void *)a1 + 3) = v34;
          *((void *)a1 + 4) = v35;
          *((void *)a1 + 5) = v36;
          *((void *)a1 + 6) = v31;
          *((void *)a1 + 7) = v32;
          *((void *)a1 + 8) = v66;
          *((void *)a1 + 9) = v37;
          *((void *)a1 + 10) = v68;
          *((void *)a1 + 11) = v70;
          *((void *)a1 + 12) = v72;
          *((void *)a1 + 13) = v74;
          *((void *)a1 + 14) = v76;
          *((void *)a1 + 15) = v78;
          *((void *)a1 + 16) = v80;
          *((void *)a1 + 17) = v82;
          *((void *)a1 + 18) = v84;
          *((void *)a1 + 19) = v86;
          *((void *)a1 + 20) = v88;
          *((void *)a1 + 21) = v90;
          *((void *)a1 + 22) = v92;
          *((void *)a1 + 23) = v94;
          a1[192] = v96;
        }
        *((void *)a1 + 25) = *((void *)a2 + 25);
        int v38 = a2[384];
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v38 == 254 || v38 == 255)
        {
          long long v39 = *((_OWORD *)a2 + 13);
          long long v40 = *((_OWORD *)a2 + 14);
          long long v41 = *((_OWORD *)a2 + 16);
          *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
          *((_OWORD *)a1 + 16) = v41;
          *((_OWORD *)a1 + 13) = v39;
          *((_OWORD *)a1 + 14) = v40;
          long long v42 = *((_OWORD *)a2 + 17);
          long long v43 = *((_OWORD *)a2 + 18);
          long long v44 = *((_OWORD *)a2 + 20);
          *((_OWORD *)a1 + 19) = *((_OWORD *)a2 + 19);
          *((_OWORD *)a1 + 20) = v44;
          *((_OWORD *)a1 + 17) = v42;
          *((_OWORD *)a1 + 18) = v43;
          long long v45 = *((_OWORD *)a2 + 21);
          long long v46 = *((_OWORD *)a2 + 22);
          long long v47 = *((_OWORD *)a2 + 23);
          a1[384] = a2[384];
          *((_OWORD *)a1 + 22) = v46;
          *((_OWORD *)a1 + 23) = v47;
          *((_OWORD *)a1 + 21) = v45;
        }
        else
        {
          char v97 = v38 & 1;
          uint64_t v48 = *((void *)a2 + 30);
          uint64_t v49 = *((void *)a2 + 31);
          uint64_t v67 = *((void *)a2 + 32);
          uint64_t v69 = *((void *)a2 + 34);
          uint64_t v71 = *((void *)a2 + 35);
          uint64_t v73 = *((void *)a2 + 36);
          uint64_t v75 = *((void *)a2 + 37);
          uint64_t v77 = *((void *)a2 + 38);
          uint64_t v79 = *((void *)a2 + 39);
          uint64_t v81 = *((void *)a2 + 40);
          uint64_t v83 = *((void *)a2 + 41);
          uint64_t v85 = *((void *)a2 + 42);
          uint64_t v87 = *((void *)a2 + 43);
          uint64_t v89 = *((void *)a2 + 44);
          uint64_t v91 = *((void *)a2 + 45);
          uint64_t v93 = *((void *)a2 + 46);
          uint64_t v95 = *((void *)a2 + 47);
          char v65 = v38 & 1;
          uint64_t v50 = *((void *)a2 + 26);
          uint64_t v51 = *((void *)a2 + 27);
          uint64_t v52 = *((void *)a2 + 28);
          uint64_t v53 = *((void *)a2 + 29);
          uint64_t v54 = *((void *)a2 + 33);
          sub_1A86409B8(v50, v51, v52, v53, v48, v49, v67, v54, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89,
            v91,
            v93,
            v95,
            v65);
          *((void *)a1 + 26) = v50;
          *((void *)a1 + 27) = v51;
          *((void *)a1 + 28) = v52;
          *((void *)a1 + 29) = v53;
          *((void *)a1 + 30) = v48;
          *((void *)a1 + 31) = v49;
          *((void *)a1 + 32) = v67;
          *((void *)a1 + 33) = v54;
          *((void *)a1 + 34) = v69;
          *((void *)a1 + 35) = v71;
          *((void *)a1 + 36) = v73;
          *((void *)a1 + 37) = v75;
          *((void *)a1 + 38) = v77;
          *((void *)a1 + 39) = v79;
          *((void *)a1 + 40) = v81;
          *((void *)a1 + 41) = v83;
          *((void *)a1 + 42) = v85;
          *((void *)a1 + 43) = v87;
          *((void *)a1 + 44) = v89;
          *((void *)a1 + 45) = v91;
          *((void *)a1 + 46) = v93;
          *((void *)a1 + 47) = v95;
          a1[384] = v97;
        }
        if (*((void *)a2 + 54))
        {
          *((void *)a1 + 49) = *((void *)a2 + 49);
          *((void *)a1 + 50) = *((void *)a2 + 50);
          *((void *)a1 + 51) = *((void *)a2 + 51);
          *((_DWORD *)a1 + 104) = *((_DWORD *)a2 + 104);
          *((_DWORD *)a1 + 105) = *((_DWORD *)a2 + 105);
          int v55 = *((_DWORD *)a2 + 106);
          *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
          *((_DWORD *)a1 + 106) = v55;
          *((void *)a1 + 54) = *((void *)a2 + 54);
          *((void *)a1 + 55) = *((void *)a2 + 55);
          *((void *)a1 + 56) = *((void *)a2 + 56);
          *((void *)a1 + 57) = *((void *)a2 + 57);
          *((void *)a1 + 58) = *((void *)a2 + 58);
          *((void *)a1 + 59) = *((void *)a2 + 59);
          *((void *)a1 + 60) = *((void *)a2 + 60);
          *((void *)a1 + 61) = *((void *)a2 + 61);
          *((void *)a1 + 62) = *((void *)a2 + 62);
          *((void *)a1 + 63) = *((void *)a2 + 63);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          long long v56 = *(_OWORD *)(a2 + 392);
          long long v57 = *(_OWORD *)(a2 + 408);
          long long v58 = *(_OWORD *)(a2 + 440);
          *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
          *(_OWORD *)(a1 + 440) = v58;
          *(_OWORD *)(a1 + 392) = v56;
          *(_OWORD *)(a1 + 408) = v57;
          long long v59 = *(_OWORD *)(a2 + 456);
          long long v60 = *(_OWORD *)(a2 + 472);
          long long v61 = *(_OWORD *)(a2 + 488);
          *((void *)a1 + 63) = *((void *)a2 + 63);
          *(_OWORD *)(a1 + 472) = v60;
          *(_OWORD *)(a1 + 488) = v61;
          *(_OWORD *)(a1 + 456) = v59;
        }
        *((void *)a1 + 64) = *((void *)a2 + 64);
        *((void *)a1 + 65) = *((void *)a2 + 65);
        uint64_t v62 = *((void *)a2 + 66);
        a1[536] = a2[536];
        *((void *)a1 + 66) = v62;
        LODWORD(v62) = *((_DWORD *)a2 + 135);
        a1[544] = a2[544];
        *((_DWORD *)a1 + 135) = v62;
        uint64_t v63 = *((void *)a2 + 69);
        a1[560] = a2[560];
        *((void *)a1 + 69) = v63;
        *((void *)a1 + 71) = *((void *)a2 + 71);
        *((void *)a1 + 72) = *((void *)a2 + 72);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_42;
      case 0x14u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_42;
      case 0x15u:
        unint64_t v25 = *(void *)a2;
        uint64_t v26 = *((void *)a2 + 1);
        uint64_t v27 = *((void *)a2 + 2);
        char v28 = a2[24];
        sub_1A87A3240();
        *(void *)a1 = v25;
        *((void *)a1 + 1) = v26;
        *((void *)a1 + 2) = v27;
        a1[24] = v28;
LABEL_42:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for UntaggedResponse(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 18 || EnumCaseMultiPayload == 17)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for UntaggedResponse(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8891C98((uint64_t)a1, type metadata accessor for UntaggedResponse);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 18 || EnumCaseMultiPayload == 17)
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1A888F760()
{
  sub_1A88750AC();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

unint64_t destroy for CommandCompletionResponse(uint64_t a1)
{
  return sub_1A887B25C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1A887B6C4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1A887B6C4(*(void *)a2, v4, v5, v6);
  unint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1A887B25C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  unint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1A887B25C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for CommandCompletionResponse()
{
  return &type metadata for CommandCompletionResponse;
}

char *initializeBufferWithCopyOfBuffer for Response(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      unsigned __int8 v9 = *(unsigned char *)(a2 + 32);
      sub_1A887B6C4(v6, v7, v8, v9);
      *((void *)a1 + 1) = v6;
      *((void *)a1 + 2) = v7;
      *((void *)a1 + 3) = v8;
      a1[32] = v9;
    }
    else
    {
      uint64_t v11 = type metadata accessor for UntaggedResponse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_20;
        case 1u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_20;
        case 2u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_20;
        case 3u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_20;
        case 4u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
LABEL_20:
          uint64_t v14 = *(void *)(a2 + 8);
          uint64_t v13 = *(void *)(a2 + 16);
          *(void *)a1 = v12;
          *((void *)a1 + 1) = v14;
          *((void *)a1 + 2) = v13;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_45;
        case 5u:
        case 6u:
        case 0xBu:
        case 0xDu:
          *(void *)a1 = *(void *)a2;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_45;
        case 7u:
        case 8u:
          uint64_t v15 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v15;
          *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
          a1[20] = *(unsigned char *)(a2 + 20);
          uint64_t v16 = *(void *)(a2 + 32);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          *((void *)a1 + 4) = v16;
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_45;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          long long v17 = *(_OWORD *)(a2 + 96);
          *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
          *((_OWORD *)a1 + 6) = v17;
          *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
          long long v18 = *(_OWORD *)(a2 + 32);
          *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
          *((_OWORD *)a1 + 2) = v18;
          long long v19 = *(_OWORD *)(a2 + 64);
          *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
          *((_OWORD *)a1 + 4) = v19;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_45;
        case 0xAu:
          uint64_t v20 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v20;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_45;
        case 0xCu:
          uint64_t v21 = *(void *)(a2 + 8);
          if (v21)
          {
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v21;
            *((void *)a1 + 2) = *(void *)(a2 + 16);
            int v22 = *(_DWORD *)(a2 + 28);
            *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
            *((_DWORD *)a1 + 7) = v22;
            a1[32] = *(unsigned char *)(a2 + 32);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          }
          else
          {
            long long v35 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v35;
            a1[32] = *(unsigned char *)(a2 + 32);
          }
          a1[33] = *(unsigned char *)(a2 + 33);
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_45;
        case 0x11u:
        case 0x12u:
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
          goto LABEL_45;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          a1[4] = *(unsigned char *)(a2 + 4);
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          a1[12] = *(unsigned char *)(a2 + 12);
          int v24 = *(unsigned __int8 *)(a2 + 192);
          if (v24 == 254 || v24 == 255)
          {
            long long v25 = *(_OWORD *)(a2 + 160);
            *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
            *((_OWORD *)a1 + 10) = v25;
            *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
            a1[192] = *(unsigned char *)(a2 + 192);
            long long v26 = *(_OWORD *)(a2 + 96);
            *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
            *((_OWORD *)a1 + 6) = v26;
            long long v27 = *(_OWORD *)(a2 + 128);
            *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
            *((_OWORD *)a1 + 8) = v27;
            long long v28 = *(_OWORD *)(a2 + 32);
            *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
            *((_OWORD *)a1 + 2) = v28;
            long long v29 = *(_OWORD *)(a2 + 64);
            *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
            *((_OWORD *)a1 + 4) = v29;
          }
          else
          {
            char v100 = v24 & 1;
            uint64_t v36 = *(void *)(a2 + 48);
            uint64_t v67 = *(void *)(a2 + 72);
            uint64_t v69 = *(void *)(a2 + 56);
            uint64_t v71 = *(void *)(a2 + 80);
            uint64_t v73 = *(void *)(a2 + 88);
            uint64_t v75 = *(void *)(a2 + 96);
            uint64_t v77 = *(void *)(a2 + 104);
            uint64_t v79 = *(void *)(a2 + 112);
            uint64_t v81 = *(void *)(a2 + 120);
            uint64_t v83 = *(void *)(a2 + 128);
            uint64_t v85 = *(void *)(a2 + 136);
            uint64_t v87 = *(void *)(a2 + 144);
            uint64_t v89 = *(void *)(a2 + 152);
            uint64_t v91 = *(void *)(a2 + 160);
            uint64_t v93 = *(void *)(a2 + 168);
            uint64_t v95 = *(void *)(a2 + 176);
            uint64_t v98 = *(void *)(a2 + 184);
            uint64_t v37 = *(void *)(a2 + 16);
            uint64_t v38 = *(void *)(a2 + 24);
            uint64_t v39 = *(void *)(a2 + 32);
            uint64_t v40 = *(void *)(a2 + 40);
            uint64_t v41 = *(void *)(a2 + 64);
            sub_1A86409B8(v37, v38, v39, v40, v36, v69, v41, v67, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91,
              v93,
              v95,
              v98,
              v24 & 1);
            *((void *)a1 + 2) = v37;
            *((void *)a1 + 3) = v38;
            *((void *)a1 + 4) = v39;
            *((void *)a1 + 5) = v40;
            *((void *)a1 + 6) = v36;
            *((void *)a1 + 7) = v69;
            *((void *)a1 + 8) = v41;
            *((void *)a1 + 9) = v67;
            *((void *)a1 + 10) = v71;
            *((void *)a1 + 11) = v73;
            *((void *)a1 + 12) = v75;
            *((void *)a1 + 13) = v77;
            *((void *)a1 + 14) = v79;
            *((void *)a1 + 15) = v81;
            *((void *)a1 + 16) = v83;
            *((void *)a1 + 17) = v85;
            *((void *)a1 + 18) = v87;
            *((void *)a1 + 19) = v89;
            *((void *)a1 + 20) = v91;
            *((void *)a1 + 21) = v93;
            *((void *)a1 + 22) = v95;
            *((void *)a1 + 23) = v98;
            a1[192] = v100;
          }
          *((void *)a1 + 25) = *(void *)(a2 + 200);
          int v42 = *(unsigned __int8 *)(a2 + 384);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if (v42 == 254 || v42 == 255)
          {
            long long v43 = *(_OWORD *)(a2 + 352);
            *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
            *((_OWORD *)a1 + 22) = v43;
            *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
            a1[384] = *(unsigned char *)(a2 + 384);
            long long v44 = *(_OWORD *)(a2 + 288);
            *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
            *((_OWORD *)a1 + 18) = v44;
            long long v45 = *(_OWORD *)(a2 + 320);
            *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
            *((_OWORD *)a1 + 20) = v45;
            long long v46 = *(_OWORD *)(a2 + 224);
            *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
            *((_OWORD *)a1 + 14) = v46;
            long long v47 = *(_OWORD *)(a2 + 256);
            *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
            *((_OWORD *)a1 + 16) = v47;
          }
          else
          {
            char v101 = v42 & 1;
            uint64_t v48 = *(void *)(a2 + 240);
            uint64_t v68 = *(void *)(a2 + 264);
            uint64_t v70 = *(void *)(a2 + 248);
            uint64_t v72 = *(void *)(a2 + 272);
            uint64_t v74 = *(void *)(a2 + 280);
            uint64_t v76 = *(void *)(a2 + 288);
            uint64_t v78 = *(void *)(a2 + 296);
            uint64_t v80 = *(void *)(a2 + 304);
            uint64_t v82 = *(void *)(a2 + 312);
            uint64_t v84 = *(void *)(a2 + 320);
            uint64_t v86 = *(void *)(a2 + 328);
            uint64_t v88 = *(void *)(a2 + 336);
            uint64_t v90 = *(void *)(a2 + 344);
            uint64_t v92 = *(void *)(a2 + 352);
            uint64_t v94 = *(void *)(a2 + 360);
            uint64_t v96 = *(void *)(a2 + 368);
            uint64_t v99 = *(void *)(a2 + 376);
            char v66 = v42 & 1;
            uint64_t v49 = *(void *)(a2 + 208);
            uint64_t v50 = *(void *)(a2 + 216);
            uint64_t v51 = *(void *)(a2 + 224);
            uint64_t v52 = *(void *)(a2 + 232);
            uint64_t v53 = *(void *)(a2 + 256);
            sub_1A86409B8(v49, v50, v51, v52, v48, v70, v53, v68, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
              v94,
              v96,
              v99,
              v66);
            *((void *)a1 + 26) = v49;
            *((void *)a1 + 27) = v50;
            *((void *)a1 + 28) = v51;
            *((void *)a1 + 29) = v52;
            *((void *)a1 + 30) = v48;
            *((void *)a1 + 31) = v70;
            *((void *)a1 + 32) = v53;
            *((void *)a1 + 33) = v68;
            *((void *)a1 + 34) = v72;
            *((void *)a1 + 35) = v74;
            *((void *)a1 + 36) = v76;
            *((void *)a1 + 37) = v78;
            *((void *)a1 + 38) = v80;
            *((void *)a1 + 39) = v82;
            *((void *)a1 + 40) = v84;
            *((void *)a1 + 41) = v86;
            *((void *)a1 + 42) = v88;
            *((void *)a1 + 43) = v90;
            *((void *)a1 + 44) = v92;
            *((void *)a1 + 45) = v94;
            *((void *)a1 + 46) = v96;
            *((void *)a1 + 47) = v99;
            a1[384] = v101;
          }
          uint64_t v54 = *(void *)(a2 + 432);
          if (v54)
          {
            uint64_t v55 = *(void *)(a2 + 400);
            *((void *)a1 + 49) = *(void *)(a2 + 392);
            *((void *)a1 + 50) = v55;
            *((void *)a1 + 51) = *(void *)(a2 + 408);
            *((void *)a1 + 52) = *(void *)(a2 + 416);
            *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
            *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
            uint64_t v56 = *(void *)(a2 + 440);
            uint64_t v57 = *(void *)(a2 + 448);
            *((void *)a1 + 54) = v54;
            *((void *)a1 + 55) = v56;
            uint64_t v58 = *(void *)(a2 + 456);
            uint64_t v59 = *(void *)(a2 + 464);
            *((void *)a1 + 56) = v57;
            *((void *)a1 + 57) = v58;
            uint64_t v61 = *(void *)(a2 + 472);
            uint64_t v60 = *(void *)(a2 + 480);
            *((void *)a1 + 58) = v59;
            *((void *)a1 + 59) = v61;
            uint64_t v97 = *(void *)(a2 + 488);
            *((void *)a1 + 60) = v60;
            *((void *)a1 + 61) = v97;
            uint64_t v102 = *(void *)(a2 + 504);
            *((void *)a1 + 62) = *(void *)(a2 + 496);
            *((void *)a1 + 63) = v102;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_retain();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          }
          else
          {
            long long v62 = *(_OWORD *)(a2 + 472);
            *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
            *(_OWORD *)(a1 + 472) = v62;
            *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
            *((void *)a1 + 63) = *(void *)(a2 + 504);
            long long v63 = *(_OWORD *)(a2 + 408);
            *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
            *(_OWORD *)(a1 + 408) = v63;
            long long v64 = *(_OWORD *)(a2 + 440);
            *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
            *(_OWORD *)(a1 + 440) = v64;
          }
          *((void *)a1 + 64) = *(void *)(a2 + 512);
          *((void *)a1 + 65) = *(void *)(a2 + 520);
          *((void *)a1 + 66) = *(void *)(a2 + 528);
          a1[536] = *(unsigned char *)(a2 + 536);
          *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
          a1[544] = *(unsigned char *)(a2 + 544);
          *((void *)a1 + 69) = *(void *)(a2 + 552);
          a1[560] = *(unsigned char *)(a2 + 560);
          *((void *)a1 + 71) = *(void *)(a2 + 568);
          *((void *)a1 + 72) = *(void *)(a2 + 576);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_45;
        case 0x14u:
          uint64_t v30 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v30;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_45;
        case 0x15u:
          unint64_t v31 = *(void *)a2;
          uint64_t v32 = *(void *)(a2 + 8);
          uint64_t v33 = *(void *)(a2 + 16);
          char v34 = *(unsigned char *)(a2 + 24);
          sub_1A87A3240();
          *(void *)a1 = v31;
          *((void *)a1 + 1) = v32;
          *((void *)a1 + 2) = v33;
          a1[24] = v34;
LABEL_45:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t destroy for Response(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v2 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = *(void *)(a1 + 24);
    unsigned __int8 v5 = *(unsigned char *)(a1 + 32);
    return sub_1A887B25C(v2, v3, v4, v5);
  }
  else
  {
    type metadata accessor for UntaggedResponse(0);
    unint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        if ((~*(void *)a1 & 0xF000000000000007) != 0) {
          sub_1A887B2B8(*(void *)a1);
        }
        goto LABEL_13;
      case 5:
      case 6:
      case 9:
      case 11:
      case 13:
        goto LABEL_13;
      case 7:
      case 8:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_20;
      case 10:
        goto LABEL_12;
      case 12:
        if (*(void *)(a1 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_13;
      case 17:
      case 18:
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        return v8(a1, v7);
      case 19:
        unsigned int v9 = *(unsigned __int8 *)(a1 + 192);
        if (v9 <= 0xFD) {
          sub_1A856B460(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
        }
            *(void *)(a1 + 168),
            *(void *)(a1 + 176),
            *(void *)(a1 + 184),
            v9 & 1);
        swift_bridgeObjectRelease();
        unsigned int v10 = *(unsigned __int8 *)(a1 + 384);
        if (v10 <= 0xFD) {
          sub_1A856B460(*(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(void *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280), *(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344), *(void *)(a1 + 352),
        }
            *(void *)(a1 + 360),
            *(void *)(a1 + 368),
            *(void *)(a1 + 376),
            v10 & 1);
        if (*(void *)(a1 + 432))
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_12:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        unint64_t result = swift_bridgeObjectRelease();
        break;
      case 20:
        swift_release();
        swift_release();
LABEL_20:
        unint64_t result = swift_release();
        break;
      case 21:
        unint64_t result = sub_1A87A3260();
        break;
      default:
        return result;
    }
  }
  return result;
}

char *initializeWithCopy for Response(char *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 24);
    unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
    sub_1A887B6C4(v4, v5, v6, v7);
    *((void *)a1 + 1) = v4;
    *((void *)a1 + 2) = v5;
    *((void *)a1 + 3) = v6;
    a1[32] = v7;
  }
  else
  {
    uint64_t v8 = type metadata accessor for UntaggedResponse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_18;
      case 1u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_18;
      case 2u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_18;
      case 3u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
        goto LABEL_18;
      case 4u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_1A887B350(*(void *)a2);
        }
LABEL_18:
        uint64_t v11 = *(void *)(a2 + 8);
        uint64_t v10 = *(void *)(a2 + 16);
        *(void *)a1 = v9;
        *((void *)a1 + 1) = v11;
        *((void *)a1 + 2) = v10;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_43;
      case 5u:
      case 6u:
      case 0xBu:
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_43;
      case 7u:
      case 8u:
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
        a1[20] = *(unsigned char *)(a2 + 20);
        uint64_t v13 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v13;
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_43;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        long long v14 = *(_OWORD *)(a2 + 96);
        *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
        *((_OWORD *)a1 + 6) = v14;
        *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
        long long v15 = *(_OWORD *)(a2 + 32);
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        *((_OWORD *)a1 + 2) = v15;
        long long v16 = *(_OWORD *)(a2 + 64);
        *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
        *((_OWORD *)a1 + 4) = v16;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_43;
      case 0xAu:
        uint64_t v17 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v17;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_43;
      case 0xCu:
        uint64_t v18 = *(void *)(a2 + 8);
        if (v18)
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v18;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          int v19 = *(_DWORD *)(a2 + 28);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_DWORD *)a1 + 7) = v19;
          a1[32] = *(unsigned char *)(a2 + 32);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          long long v32 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v32;
          a1[32] = *(unsigned char *)(a2 + 32);
        }
        a1[33] = *(unsigned char *)(a2 + 33);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_43;
      case 0x11u:
      case 0x12u:
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_43;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[4] = *(unsigned char *)(a2 + 4);
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        a1[12] = *(unsigned char *)(a2 + 12);
        int v21 = *(unsigned __int8 *)(a2 + 192);
        if (v21 == 254 || v21 == 255)
        {
          long long v22 = *(_OWORD *)(a2 + 160);
          *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
          *((_OWORD *)a1 + 10) = v22;
          *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
          a1[192] = *(unsigned char *)(a2 + 192);
          long long v23 = *(_OWORD *)(a2 + 96);
          *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
          *((_OWORD *)a1 + 6) = v23;
          long long v24 = *(_OWORD *)(a2 + 128);
          *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
          *((_OWORD *)a1 + 8) = v24;
          long long v25 = *(_OWORD *)(a2 + 32);
          *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
          *((_OWORD *)a1 + 2) = v25;
          long long v26 = *(_OWORD *)(a2 + 64);
          *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
          *((_OWORD *)a1 + 4) = v26;
        }
        else
        {
          char v97 = v21 & 1;
          uint64_t v33 = *(void *)(a2 + 48);
          uint64_t v64 = *(void *)(a2 + 72);
          uint64_t v66 = *(void *)(a2 + 56);
          uint64_t v68 = *(void *)(a2 + 80);
          uint64_t v70 = *(void *)(a2 + 88);
          uint64_t v72 = *(void *)(a2 + 96);
          uint64_t v74 = *(void *)(a2 + 104);
          uint64_t v76 = *(void *)(a2 + 112);
          uint64_t v78 = *(void *)(a2 + 120);
          uint64_t v80 = *(void *)(a2 + 128);
          uint64_t v82 = *(void *)(a2 + 136);
          uint64_t v84 = *(void *)(a2 + 144);
          uint64_t v86 = *(void *)(a2 + 152);
          uint64_t v88 = *(void *)(a2 + 160);
          uint64_t v90 = *(void *)(a2 + 168);
          uint64_t v92 = *(void *)(a2 + 176);
          uint64_t v95 = *(void *)(a2 + 184);
          uint64_t v34 = *(void *)(a2 + 16);
          uint64_t v35 = *(void *)(a2 + 24);
          uint64_t v36 = *(void *)(a2 + 32);
          uint64_t v37 = *(void *)(a2 + 40);
          uint64_t v38 = *(void *)(a2 + 64);
          sub_1A86409B8(v34, v35, v36, v37, v33, v66, v38, v64, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88,
            v90,
            v92,
            v95,
            v21 & 1);
          *((void *)a1 + 2) = v34;
          *((void *)a1 + 3) = v35;
          *((void *)a1 + 4) = v36;
          *((void *)a1 + 5) = v37;
          *((void *)a1 + 6) = v33;
          *((void *)a1 + 7) = v66;
          *((void *)a1 + 8) = v38;
          *((void *)a1 + 9) = v64;
          *((void *)a1 + 10) = v68;
          *((void *)a1 + 11) = v70;
          *((void *)a1 + 12) = v72;
          *((void *)a1 + 13) = v74;
          *((void *)a1 + 14) = v76;
          *((void *)a1 + 15) = v78;
          *((void *)a1 + 16) = v80;
          *((void *)a1 + 17) = v82;
          *((void *)a1 + 18) = v84;
          *((void *)a1 + 19) = v86;
          *((void *)a1 + 20) = v88;
          *((void *)a1 + 21) = v90;
          *((void *)a1 + 22) = v92;
          *((void *)a1 + 23) = v95;
          a1[192] = v97;
        }
        *((void *)a1 + 25) = *(void *)(a2 + 200);
        int v39 = *(unsigned __int8 *)(a2 + 384);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if (v39 == 254 || v39 == 255)
        {
          long long v40 = *(_OWORD *)(a2 + 352);
          *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
          *((_OWORD *)a1 + 22) = v40;
          *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
          a1[384] = *(unsigned char *)(a2 + 384);
          long long v41 = *(_OWORD *)(a2 + 288);
          *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
          *((_OWORD *)a1 + 18) = v41;
          long long v42 = *(_OWORD *)(a2 + 320);
          *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
          *((_OWORD *)a1 + 20) = v42;
          long long v43 = *(_OWORD *)(a2 + 224);
          *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
          *((_OWORD *)a1 + 14) = v43;
          long long v44 = *(_OWORD *)(a2 + 256);
          *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
          *((_OWORD *)a1 + 16) = v44;
        }
        else
        {
          char v98 = v39 & 1;
          uint64_t v45 = *(void *)(a2 + 240);
          uint64_t v65 = *(void *)(a2 + 264);
          uint64_t v67 = *(void *)(a2 + 248);
          uint64_t v69 = *(void *)(a2 + 272);
          uint64_t v71 = *(void *)(a2 + 280);
          uint64_t v73 = *(void *)(a2 + 288);
          uint64_t v75 = *(void *)(a2 + 296);
          uint64_t v77 = *(void *)(a2 + 304);
          uint64_t v79 = *(void *)(a2 + 312);
          uint64_t v81 = *(void *)(a2 + 320);
          uint64_t v83 = *(void *)(a2 + 328);
          uint64_t v85 = *(void *)(a2 + 336);
          uint64_t v87 = *(void *)(a2 + 344);
          uint64_t v89 = *(void *)(a2 + 352);
          uint64_t v91 = *(void *)(a2 + 360);
          uint64_t v93 = *(void *)(a2 + 368);
          uint64_t v96 = *(void *)(a2 + 376);
          char v63 = v39 & 1;
          uint64_t v46 = *(void *)(a2 + 208);
          uint64_t v47 = *(void *)(a2 + 216);
          uint64_t v48 = *(void *)(a2 + 224);
          uint64_t v49 = *(void *)(a2 + 232);
          uint64_t v50 = *(void *)(a2 + 256);
          sub_1A86409B8(v46, v47, v48, v49, v45, v67, v50, v65, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89,
            v91,
            v93,
            v96,
            v63);
          *((void *)a1 + 26) = v46;
          *((void *)a1 + 27) = v47;
          *((void *)a1 + 28) = v48;
          *((void *)a1 + 29) = v49;
          *((void *)a1 + 30) = v45;
          *((void *)a1 + 31) = v67;
          *((void *)a1 + 32) = v50;
          *((void *)a1 + 33) = v65;
          *((void *)a1 + 34) = v69;
          *((void *)a1 + 35) = v71;
          *((void *)a1 + 36) = v73;
          *((void *)a1 + 37) = v75;
          *((void *)a1 + 38) = v77;
          *((void *)a1 + 39) = v79;
          *((void *)a1 + 40) = v81;
          *((void *)a1 + 41) = v83;
          *((void *)a1 + 42) = v85;
          *((void *)a1 + 43) = v87;
          *((void *)a1 + 44) = v89;
          *((void *)a1 + 45) = v91;
          *((void *)a1 + 46) = v93;
          *((void *)a1 + 47) = v96;
          a1[384] = v98;
        }
        uint64_t v51 = *(void *)(a2 + 432);
        if (v51)
        {
          uint64_t v52 = *(void *)(a2 + 400);
          *((void *)a1 + 49) = *(void *)(a2 + 392);
          *((void *)a1 + 50) = v52;
          *((void *)a1 + 51) = *(void *)(a2 + 408);
          *((void *)a1 + 52) = *(void *)(a2 + 416);
          *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
          *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
          uint64_t v53 = *(void *)(a2 + 440);
          uint64_t v54 = *(void *)(a2 + 448);
          *((void *)a1 + 54) = v51;
          *((void *)a1 + 55) = v53;
          uint64_t v55 = *(void *)(a2 + 456);
          uint64_t v56 = *(void *)(a2 + 464);
          *((void *)a1 + 56) = v54;
          *((void *)a1 + 57) = v55;
          uint64_t v58 = *(void *)(a2 + 472);
          uint64_t v57 = *(void *)(a2 + 480);
          *((void *)a1 + 58) = v56;
          *((void *)a1 + 59) = v58;
          uint64_t v94 = *(void *)(a2 + 488);
          *((void *)a1 + 60) = v57;
          *((void *)a1 + 61) = v94;
          uint64_t v99 = *(void *)(a2 + 504);
          *((void *)a1 + 62) = *(void *)(a2 + 496);
          *((void *)a1 + 63) = v99;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        }
        else
        {
          long long v59 = *(_OWORD *)(a2 + 472);
          *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
          *(_OWORD *)(a1 + 472) = v59;
          *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
          *((void *)a1 + 63) = *(void *)(a2 + 504);
          long long v60 = *(_OWORD *)(a2 + 408);
          *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
          *(_OWORD *)(a1 + 408) = v60;
          long long v61 = *(_OWORD *)(a2 + 440);
          *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
          *(_OWORD *)(a1 + 440) = v61;
        }
        *((void *)a1 + 64) = *(void *)(a2 + 512);
        *((void *)a1 + 65) = *(void *)(a2 + 520);
        *((void *)a1 + 66) = *(void *)(a2 + 528);
        a1[536] = *(unsigned char *)(a2 + 536);
        *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
        a1[544] = *(unsigned char *)(a2 + 544);
        *((void *)a1 + 69) = *(void *)(a2 + 552);
        a1[560] = *(unsigned char *)(a2 + 560);
        *((void *)a1 + 71) = *(void *)(a2 + 568);
        *((void *)a1 + 72) = *(void *)(a2 + 576);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_43;
      case 0x14u:
        uint64_t v27 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v27;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_43;
      case 0x15u:
        unint64_t v28 = *(void *)a2;
        uint64_t v29 = *(void *)(a2 + 8);
        uint64_t v30 = *(void *)(a2 + 16);
        char v31 = *(unsigned char *)(a2 + 24);
        sub_1A87A3240();
        *(void *)a1 = v28;
        *((void *)a1 + 1) = v29;
        *((void *)a1 + 2) = v30;
        a1[24] = v31;
LABEL_43:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for Response(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1A8891C98((uint64_t)a1, type metadata accessor for Response);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      unint64_t v4 = *((void *)a2 + 1);
      uint64_t v5 = *((void *)a2 + 2);
      uint64_t v6 = *((void *)a2 + 3);
      unsigned __int8 v7 = a2[32];
      sub_1A887B6C4(v4, v5, v6, v7);
      *((void *)a1 + 1) = v4;
      *((void *)a1 + 2) = v5;
      *((void *)a1 + 3) = v6;
      a1[32] = v7;
    }
    else
    {
      uint64_t v8 = type metadata accessor for UntaggedResponse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_19;
        case 1u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_19;
        case 2u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_19;
        case 3u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          goto LABEL_19;
        case 4u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
LABEL_19:
          *(void *)a1 = v9;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_44;
        case 5u:
        case 6u:
        case 0xBu:
        case 0xDu:
          *(void *)a1 = *(void *)a2;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_44;
        case 7u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
          a1[20] = a2[20];
          *((void *)a1 + 3) = *((void *)a2 + 3);
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((void *)a1 + 5) = *((void *)a2 + 5);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_44;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          long long v10 = *((_OWORD *)a2 + 1);
          long long v11 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v11;
          *((_OWORD *)a1 + 1) = v10;
          long long v12 = *((_OWORD *)a2 + 4);
          long long v13 = *((_OWORD *)a2 + 5);
          long long v14 = *((_OWORD *)a2 + 6);
          *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
          *((_OWORD *)a1 + 5) = v13;
          *((_OWORD *)a1 + 6) = v14;
          *((_OWORD *)a1 + 4) = v12;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_44;
        case 0xAu:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_44;
        case 0xCu:
          if (*((void *)a2 + 1))
          {
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
            int v15 = *((_DWORD *)a2 + 7);
            a1[32] = a2[32];
            *((_DWORD *)a1 + 7) = v15;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          }
          else
          {
            long long v32 = *(_OWORD *)a2;
            long long v33 = *((_OWORD *)a2 + 1);
            a1[32] = a2[32];
            *(_OWORD *)a1 = v32;
            *((_OWORD *)a1 + 1) = v33;
          }
          a1[33] = a2[33];
          *((void *)a1 + 5) = *((void *)a2 + 5);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_44;
        case 0x11u:
        case 0x12u:
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          goto LABEL_44;
        case 0x13u:
          int v17 = *(_DWORD *)a2;
          a1[4] = a2[4];
          *(_DWORD *)a1 = v17;
          LOBYTE(v17) = a2[12];
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[12] = v17;
          int v18 = a2[192];
          if (v18 == 254 || v18 == 255)
          {
            long long v19 = *((_OWORD *)a2 + 1);
            long long v20 = *((_OWORD *)a2 + 2);
            long long v21 = *((_OWORD *)a2 + 4);
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 4) = v21;
            *((_OWORD *)a1 + 1) = v19;
            *((_OWORD *)a1 + 2) = v20;
            long long v22 = *((_OWORD *)a2 + 5);
            long long v23 = *((_OWORD *)a2 + 6);
            long long v24 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v24;
            *((_OWORD *)a1 + 5) = v22;
            *((_OWORD *)a1 + 6) = v23;
            long long v25 = *((_OWORD *)a2 + 9);
            long long v26 = *((_OWORD *)a2 + 10);
            long long v27 = *((_OWORD *)a2 + 11);
            a1[192] = a2[192];
            *((_OWORD *)a1 + 10) = v26;
            *((_OWORD *)a1 + 11) = v27;
            *((_OWORD *)a1 + 9) = v25;
          }
          else
          {
            char v99 = v18 & 1;
            uint64_t v34 = *((void *)a2 + 6);
            uint64_t v67 = *((void *)a2 + 9);
            uint64_t v69 = *((void *)a2 + 7);
            uint64_t v71 = *((void *)a2 + 10);
            uint64_t v73 = *((void *)a2 + 11);
            uint64_t v75 = *((void *)a2 + 12);
            uint64_t v77 = *((void *)a2 + 13);
            uint64_t v79 = *((void *)a2 + 14);
            uint64_t v81 = *((void *)a2 + 15);
            uint64_t v83 = *((void *)a2 + 16);
            uint64_t v85 = *((void *)a2 + 17);
            uint64_t v87 = *((void *)a2 + 18);
            uint64_t v89 = *((void *)a2 + 19);
            uint64_t v91 = *((void *)a2 + 20);
            uint64_t v93 = *((void *)a2 + 21);
            uint64_t v95 = *((void *)a2 + 22);
            uint64_t v97 = *((void *)a2 + 23);
            uint64_t v35 = *((void *)a2 + 2);
            uint64_t v36 = *((void *)a2 + 3);
            uint64_t v37 = *((void *)a2 + 4);
            uint64_t v38 = *((void *)a2 + 5);
            uint64_t v39 = *((void *)a2 + 8);
            sub_1A86409B8(v35, v36, v37, v38, v34, v69, v39, v67, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91,
              v93,
              v95,
              v97,
              v18 & 1);
            *((void *)a1 + 2) = v35;
            *((void *)a1 + 3) = v36;
            *((void *)a1 + 4) = v37;
            *((void *)a1 + 5) = v38;
            *((void *)a1 + 6) = v34;
            *((void *)a1 + 7) = v69;
            *((void *)a1 + 8) = v39;
            *((void *)a1 + 9) = v67;
            *((void *)a1 + 10) = v71;
            *((void *)a1 + 11) = v73;
            *((void *)a1 + 12) = v75;
            *((void *)a1 + 13) = v77;
            *((void *)a1 + 14) = v79;
            *((void *)a1 + 15) = v81;
            *((void *)a1 + 16) = v83;
            *((void *)a1 + 17) = v85;
            *((void *)a1 + 18) = v87;
            *((void *)a1 + 19) = v89;
            *((void *)a1 + 20) = v91;
            *((void *)a1 + 21) = v93;
            *((void *)a1 + 22) = v95;
            *((void *)a1 + 23) = v97;
            a1[192] = v99;
          }
          *((void *)a1 + 25) = *((void *)a2 + 25);
          int v40 = a2[384];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          if (v40 == 254 || v40 == 255)
          {
            long long v41 = *((_OWORD *)a2 + 13);
            long long v42 = *((_OWORD *)a2 + 14);
            long long v43 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v43;
            *((_OWORD *)a1 + 13) = v41;
            *((_OWORD *)a1 + 14) = v42;
            long long v44 = *((_OWORD *)a2 + 17);
            long long v45 = *((_OWORD *)a2 + 18);
            long long v46 = *((_OWORD *)a2 + 20);
            *((_OWORD *)a1 + 19) = *((_OWORD *)a2 + 19);
            *((_OWORD *)a1 + 20) = v46;
            *((_OWORD *)a1 + 17) = v44;
            *((_OWORD *)a1 + 18) = v45;
            long long v47 = *((_OWORD *)a2 + 21);
            long long v48 = *((_OWORD *)a2 + 22);
            long long v49 = *((_OWORD *)a2 + 23);
            a1[384] = a2[384];
            *((_OWORD *)a1 + 22) = v48;
            *((_OWORD *)a1 + 23) = v49;
            *((_OWORD *)a1 + 21) = v47;
          }
          else
          {
            char v100 = v40 & 1;
            uint64_t v50 = *((void *)a2 + 30);
            uint64_t v68 = *((void *)a2 + 33);
            uint64_t v70 = *((void *)a2 + 31);
            uint64_t v72 = *((void *)a2 + 34);
            uint64_t v74 = *((void *)a2 + 35);
            uint64_t v76 = *((void *)a2 + 36);
            uint64_t v78 = *((void *)a2 + 37);
            uint64_t v80 = *((void *)a2 + 38);
            uint64_t v82 = *((void *)a2 + 39);
            uint64_t v84 = *((void *)a2 + 40);
            uint64_t v86 = *((void *)a2 + 41);
            uint64_t v88 = *((void *)a2 + 42);
            uint64_t v90 = *((void *)a2 + 43);
            uint64_t v92 = *((void *)a2 + 44);
            uint64_t v94 = *((void *)a2 + 45);
            uint64_t v96 = *((void *)a2 + 46);
            uint64_t v98 = *((void *)a2 + 47);
            char v66 = v40 & 1;
            uint64_t v51 = *((void *)a2 + 26);
            uint64_t v52 = *((void *)a2 + 27);
            uint64_t v53 = *((void *)a2 + 28);
            uint64_t v54 = *((void *)a2 + 29);
            uint64_t v55 = *((void *)a2 + 32);
            sub_1A86409B8(v51, v52, v53, v54, v50, v70, v55, v68, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
              v94,
              v96,
              v98,
              v66);
            *((void *)a1 + 26) = v51;
            *((void *)a1 + 27) = v52;
            *((void *)a1 + 28) = v53;
            *((void *)a1 + 29) = v54;
            *((void *)a1 + 30) = v50;
            *((void *)a1 + 31) = v70;
            *((void *)a1 + 32) = v55;
            *((void *)a1 + 33) = v68;
            *((void *)a1 + 34) = v72;
            *((void *)a1 + 35) = v74;
            *((void *)a1 + 36) = v76;
            *((void *)a1 + 37) = v78;
            *((void *)a1 + 38) = v80;
            *((void *)a1 + 39) = v82;
            *((void *)a1 + 40) = v84;
            *((void *)a1 + 41) = v86;
            *((void *)a1 + 42) = v88;
            *((void *)a1 + 43) = v90;
            *((void *)a1 + 44) = v92;
            *((void *)a1 + 45) = v94;
            *((void *)a1 + 46) = v96;
            *((void *)a1 + 47) = v98;
            a1[384] = v100;
          }
          if (*((void *)a2 + 54))
          {
            *((void *)a1 + 49) = *((void *)a2 + 49);
            *((void *)a1 + 50) = *((void *)a2 + 50);
            *((void *)a1 + 51) = *((void *)a2 + 51);
            *((_DWORD *)a1 + 104) = *((_DWORD *)a2 + 104);
            *((_DWORD *)a1 + 105) = *((_DWORD *)a2 + 105);
            int v56 = *((_DWORD *)a2 + 106);
            *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
            *((_DWORD *)a1 + 106) = v56;
            *((void *)a1 + 54) = *((void *)a2 + 54);
            *((void *)a1 + 55) = *((void *)a2 + 55);
            *((void *)a1 + 56) = *((void *)a2 + 56);
            *((void *)a1 + 57) = *((void *)a2 + 57);
            *((void *)a1 + 58) = *((void *)a2 + 58);
            *((void *)a1 + 59) = *((void *)a2 + 59);
            *((void *)a1 + 60) = *((void *)a2 + 60);
            *((void *)a1 + 61) = *((void *)a2 + 61);
            *((void *)a1 + 62) = *((void *)a2 + 62);
            *((void *)a1 + 63) = *((void *)a2 + 63);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            swift_retain();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          }
          else
          {
            long long v57 = *(_OWORD *)(a2 + 392);
            long long v58 = *(_OWORD *)(a2 + 408);
            long long v59 = *(_OWORD *)(a2 + 440);
            *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
            *(_OWORD *)(a1 + 440) = v59;
            *(_OWORD *)(a1 + 392) = v57;
            *(_OWORD *)(a1 + 408) = v58;
            long long v60 = *(_OWORD *)(a2 + 456);
            long long v61 = *(_OWORD *)(a2 + 472);
            long long v62 = *(_OWORD *)(a2 + 488);
            *((void *)a1 + 63) = *((void *)a2 + 63);
            *(_OWORD *)(a1 + 472) = v61;
            *(_OWORD *)(a1 + 488) = v62;
            *(_OWORD *)(a1 + 456) = v60;
          }
          *((void *)a1 + 64) = *((void *)a2 + 64);
          *((void *)a1 + 65) = *((void *)a2 + 65);
          uint64_t v63 = *((void *)a2 + 66);
          a1[536] = a2[536];
          *((void *)a1 + 66) = v63;
          LODWORD(v63) = *((_DWORD *)a2 + 135);
          a1[544] = a2[544];
          *((_DWORD *)a1 + 135) = v63;
          uint64_t v64 = *((void *)a2 + 69);
          a1[560] = a2[560];
          *((void *)a1 + 69) = v64;
          *((void *)a1 + 71) = *((void *)a2 + 71);
          *((void *)a1 + 72) = *((void *)a2 + 72);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_44;
        case 0x14u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_44;
        case 0x15u:
          unint64_t v28 = *(void *)a2;
          uint64_t v29 = *((void *)a2 + 1);
          uint64_t v30 = *((void *)a2 + 2);
          char v31 = a2[24];
          sub_1A87A3240();
          *(void *)a1 = v28;
          *((void *)a1 + 1) = v29;
          *((void *)a1 + 2) = v30;
          a1[24] = v31;
LABEL_44:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A8891C98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A889200C()
{
  uint64_t result = type metadata accessor for UntaggedResponse(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A889209C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A8892104(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A8892160(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A88921BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A8892218(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1A8892280(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  *(_WORD *)(a1 + 176) = 2560;
  return result;
}

uint64_t sub_1A88922C4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

double sub_1A8892338(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 176) = 2560;
  return result;
}

double sub_1A8892360()
{
  uint64_t v0 = sub_1A8894B0C(MEMORY[0x1E4FBC860]);
  sub_1A8894C50(v0, v1, v2, v4);
  xmmword_1E979D5E8 = v10;
  unk_1E979D5F8 = v11;
  xmmword_1E979D608 = v12;
  xmmword_1E979D5A8 = v6;
  unk_1E979D5B8 = v7;
  xmmword_1E979D5C8 = v8;
  unk_1E979D5D8 = v9;
  static ServerID.empty = v4[0];
  unk_1E979D578 = v4[1];
  double result = *(double *)&v5;
  xmmword_1E979D588 = v4[2];
  unk_1E979D598 = v5;
  return result;
}

__n128 ServerID.init(_:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1A8894C50(a1, a2, a3, v10);
  long long v5 = v10[9];
  *(_OWORD *)(a4 + 128) = v10[8];
  *(_OWORD *)(a4 + 144) = v5;
  *(_OWORD *)(a4 + 160) = v10[10];
  long long v6 = v10[5];
  *(_OWORD *)(a4 + 64) = v10[4];
  *(_OWORD *)(a4 + 80) = v6;
  long long v7 = v10[7];
  *(_OWORD *)(a4 + 96) = v10[6];
  *(_OWORD *)(a4 + 112) = v7;
  long long v8 = v10[1];
  *(_OWORD *)a4 = v10[0];
  *(_OWORD *)(a4 + 16) = v8;
  __n128 result = (__n128)v10[3];
  *(_OWORD *)(a4 + 32) = v10[2];
  *(__n128 *)(a4 + 48) = result;
  return result;
}

long long *ServerID.empty.unsafeMutableAddressor()
{
  if (qword_1E9742A10 != -1) {
    swift_once();
  }
  return &static ServerID.empty;
}

void *static ServerID.empty.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E9742A10 != -1) {
    swift_once();
  }
  return sub_1A8895220(&static ServerID.empty, a1);
}

uint64_t ServerID.name.getter()
{
  uint64_t v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*ServerID.name.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

double (*ServerID.version.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.os.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.os.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

double (*ServerID.os.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.osVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

double (*ServerID.osVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.vendor.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.vendor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

double (*ServerID.vendor.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.supportURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.supportURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

double (*ServerID.supportURL.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.address.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.address.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return result;
}

double (*ServerID.address.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.date.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.date.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

double (*ServerID.date.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.command.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.command.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

double (*ServerID.command.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.arguments.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.arguments.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return result;
}

double (*ServerID.arguments.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerID.environment.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t ServerID.environment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return result;
}

double (*ServerID.environment.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A8892ABC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[9];
  v13[8] = a1[8];
  v13[9] = v2;
  v13[10] = a1[10];
  long long v3 = a1[5];
  void v13[4] = a1[4];
  v13[5] = v3;
  long long v4 = a1[7];
  v13[6] = a1[6];
  v13[7] = v4;
  long long v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  long long v6 = a1[3];
  v13[2] = a1[2];
  v13[3] = v6;
  long long v7 = a2[9];
  v14[8] = a2[8];
  v14[9] = v7;
  v14[10] = a2[10];
  long long v8 = a2[5];
  v14[4] = a2[4];
  v14[5] = v8;
  long long v9 = a2[7];
  v14[6] = a2[6];
  v14[7] = v9;
  long long v10 = a2[1];
  v14[0] = *a2;
  v14[1] = v10;
  long long v11 = a2[3];
  void v14[2] = a2[2];
  v14[3] = v11;
  return _s13IMAP2Protocol8ServerIDV23__derived_struct_equalsySbAC_ACtFZ_0(v13, v14) & 1;
}

uint64_t ServerID.logDescription.getter()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745E28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8AE4F80;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = swift_getKeyPath();
  *(void *)(inited + 56) = 0x6E6F6973726576;
  *(void *)(inited + 64) = 0xE700000000000000;
  *(void *)(inited + 72) = swift_getKeyPath();
  *(void *)(inited + 80) = 29551;
  *(void *)(inited + 88) = 0xE200000000000000;
  *(void *)(inited + 96) = swift_getKeyPath();
  *(void *)(inited + 104) = 0x6F6973726556736FLL;
  *(void *)(inited + 112) = 0xE90000000000006ELL;
  *(void *)(inited + 120) = swift_getKeyPath();
  *(void *)(inited + 128) = 0x726F646E6576;
  *(void *)(inited + 136) = 0xE600000000000000;
  *(void *)(inited + 144) = swift_getKeyPath();
  *(void *)(inited + 152) = 0x5574726F70707573;
  *(void *)(inited + 160) = 0xEA00000000004C52;
  *(void *)(inited + 168) = swift_getKeyPath();
  *(void *)(inited + 176) = 0x73736572646461;
  *(void *)(inited + 184) = 0xE700000000000000;
  *(void *)(inited + 192) = swift_getKeyPath();
  *(void *)(inited + 200) = 1702125924;
  *(void *)(inited + 208) = 0xE400000000000000;
  *(void *)(inited + 216) = swift_getKeyPath();
  *(void *)(inited + 224) = 0x646E616D6D6F63;
  *(void *)(inited + 232) = 0xE700000000000000;
  *(void *)(inited + 240) = swift_getKeyPath();
  *(void *)(inited + 248) = 0x746E656D75677261;
  *(void *)(inited + 256) = 0xE900000000000073;
  *(void *)(inited + 264) = swift_getKeyPath();
  *(void *)(inited + 272) = 0x6D6E6F7269766E65;
  *(void *)(inited + 280) = 0xEB00000000746E65;
  *(void *)(inited + 288) = swift_getKeyPath();
  uint64_t v3 = *(void *)(inited + 16);
  if (v3)
  {
    sub_1A8590B60(v0);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v4 = inited + 48;
    long long v5 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v6 = *(void *)(v4 - 16);
      uint64_t v7 = *(void *)(v4 - 8);
      sub_1A8590B60(v1);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      swift_getAtKeyPath();
      sub_1A8590C30(v1);
      if (v13)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A767E8();
        sub_1A8A767E8();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v5 = sub_1A88935AC(0, v5[2] + 1, 1, v5);
        }
        unint64_t v9 = v5[2];
        unint64_t v8 = v5[3];
        if (v9 >= v8 >> 1) {
          long long v5 = sub_1A88935AC((void *)(v8 > 1), v9 + 1, 1, v5);
        }
        uint64_t v5[2] = v9 + 1;
        long long v10 = &v5[2 * v9];
        long long v10[4] = v6;
        v10[5] = v7;
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    sub_1A8590C30(v1);
  }
  else
  {
    long long v5 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740DB0);
  swift_arrayDestroy();
  if (v5[2])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744578);
    sub_1A8872AD0();
    uint64_t v11 = sub_1A8A76348();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

uint64_t sub_1A8892F7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A88930E0(a1, a2, a3, a4, &qword_1E9745DA8, MEMORY[0x1E4FBCBA0], MEMORY[0x1E4FBCBA0]);
}

char *sub_1A8892FB0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EB8);
      long long v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size_0(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      long long v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (char *)MEMORY[0x1E4FBC860];
      long long v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A8529824(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88930AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A88930E0(a1, a2, a3, a4, &qword_1E9745AD0, type metadata accessor for Response, type metadata accessor for Response);
}

uint64_t sub_1A88930E0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    int v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  int v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size_0(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1A8A780E8();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A889572C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1A8893360(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745AC0);
      long long v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A889463C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A8893484(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E158);
      long long v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A88949FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A88935AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741180);
      long long v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A8526A38(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88936BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A88930E0(a1, a2, a3, a4, &qword_1E9745C80, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
}

uint64_t sub_1A88936F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A88930E0(a1, a2, a3, a4, &qword_1E9745CA8, type metadata accessor for ServerResponseFramingParser.Frame, type metadata accessor for ServerResponseFramingParser.Frame);
}

uint64_t sub_1A8893724(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a4[2];
  if (a3)
  {
    uint64_t v8 = (void *)(a3 + 16);
    swift_retain();
    uint64_t v9 = sub_1A8893D0C(a1, a2, (uint64_t)(a4 + 4), v7, v8);
    swift_release();
  }
  else
  {
    if (!v7) {
      return 0;
    }
    BOOL v10 = a4[4] == a1 && a4[5] == a2;
    if (v10 || (sub_1A8A78588() & 1) != 0) {
      return 0;
    }
    if (v7 == 1) {
      return 0;
    }
    if (a4[6] == a1 && a4[7] == a2 || (sub_1A8A78588() & 1) != 0) {
      return 1;
    }
    if (v7 == 2) {
      return 0;
    }
    if (a4[8] == a1 && a4[9] == a2 || (sub_1A8A78588() & 1) != 0) {
      return 2;
    }
    if (v7 == 3) {
      return 0;
    }
    if (a4[10] == a1 && a4[11] == a2 || (sub_1A8A78588() & 1) != 0)
    {
      return 3;
    }
    else
    {
      uint64_t v12 = a4 + 13;
      uint64_t v13 = 3;
      uint64_t v14 = 4;
      while (1)
      {
        if (v7 == v14) {
          return 0;
        }
        ++v13;
        if (*(v12 - 1) == a1 && *v12 == a2) {
          break;
        }
        uint64_t v9 = v14++;
        v12 += 2;
        if (sub_1A8A78588()) {
          return v9;
        }
      }
      return v13;
    }
  }
  return v9;
}

uint64_t sub_1A8893948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  unint64_t v6 = v2 + 1;
  uint64_t v7 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v6 = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1A886F2C8(0, *(void *)(v7 + 16) + 1, 1);
    uint64_t v7 = *v6;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  unint64_t v10 = *(void *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = sub_1A886F2C8(v10 > 1, v11 + 1, 1);
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v11 + 1;
  unint64_t v12 = v7 + 16 * v11;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  v3[1] = v7;
  uint64_t v13 = *(void *)(v7 + 16);
  uint64_t v14 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (MEMORY[0x1AD0DE160](*(void *)(v14 + 16) & 0x3FLL) >= v13)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v15 = *v3;
      if (!result)
      {
        if (!v15)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v15 = sub_1A8A75098();
        uint64_t result = swift_release();
        uint64_t *v3 = v15;
      }
      if (v15) {
        return sub_1A8A75038();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v13 < 0x10)
  {
    return result;
  }
  return sub_1A8893AC4();
}

uint64_t sub_1A8893AC4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = MEMORY[0x1AD0DE190](v4);
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_1A8893B68(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_1A8893B68(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1AD0DE190](*(void *)(a1 + 16));
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = MEMORY[0x1AD0DE1A0]();
    sub_1A8893BF0(a1, (void *)(v9 + 16));
  }
  return v9;
}

uint64_t sub_1A8893BF0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      sub_1A8A78738();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A762A8();
      uint64_t result = sub_1A8A787C8();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      uint64_t v5 = sub_1A8A75018();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_1A8A75068();
      }
      uint64_t result = sub_1A8A75058();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8893D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1A8A78738();
  sub_1A8A762A8();
  uint64_t result = sub_1A8A787C8();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A8A75018();
    uint64_t v10 = sub_1A8A75048();
    uint64_t v11 = v10;
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = (void *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if (sub_1A8A78588()) {
            break;
          }
          sub_1A8A75068();
          uint64_t v14 = sub_1A8A75048();
          uint64_t v11 = v14;
          if (v15) {
            break;
          }
          uint64_t v16 = (void *)(a3 + 16 * v14);
        }
        while (*v16 != a1 || v16[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

uint64_t sub_1A8893E78(uint64_t result, char a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = v2;
  int64_t v5 = result;
  uint64_t v8 = v2[1];
  uint64_t v6 = v2 + 1;
  uint64_t v7 = v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(void *)(v7 + 24) >> 1)
  {
    uint64_t v10 = *v3;
    if (*v3) {
      goto LABEL_5;
    }
  }
  else
  {
    if (*(void *)(v7 + 16) <= v5) {
      int64_t v15 = v5;
    }
    else {
      int64_t v15 = *(void *)(v7 + 16);
    }
    sub_1A886F2C8(isUniquelyReferenced_nonNull_native, v15, 0);
    uint64_t v7 = *v6;
    uint64_t v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16) & 0x3FLL;
      uint64_t v12 = MEMORY[0x1AD0DE190](v5);
      uint64_t v13 = v12;
      if (a2)
      {
        uint64_t v14 = v12;
        if (v11 >= v12) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v14 = *(void *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13) {
          goto LABEL_20;
        }
      }
LABEL_16:
      if (v14 <= v13) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = v14;
      }
      goto LABEL_30;
    }
  }
  uint64_t v16 = MEMORY[0x1AD0DE190](v5);
  uint64_t v13 = v16;
  uint64_t v11 = 0;
  if (a2) {
    uint64_t v14 = v16;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v16 > 0) {
    goto LABEL_16;
  }
LABEL_20:
  if (v14 <= v13) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v14;
  }
  uint64_t result = MEMORY[0x1AD0DE190](*(void *)(v7 + 16));
  if (result <= v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = result;
  }
  if (v19 < v11)
  {
    if (v14 <= v19) {
      uint64_t v17 = v19;
    }
    else {
      uint64_t v17 = v14;
    }
LABEL_30:
    uint64_t v20 = sub_1A8893B68(v7, v17, 0, v14);
    uint64_t result = swift_release();
    uint64_t *v3 = v20;
    return result;
  }
  if (!v10 || (uint64_t result = swift_isUniquelyReferenced_native(), result))
  {
    uint64_t v21 = *v3;
    if (*v3) {
      goto LABEL_35;
    }
LABEL_39:
    if (!v14) {
      return result;
    }
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  uint64_t v21 = sub_1A8A75098();
  uint64_t result = swift_release();
  uint64_t *v3 = v21;
  if (!v21) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t result = swift_beginAccess();
  if ((*(void *)(v21 + 24) & 0x3FLL) != v14) {
    *(void *)(v21 + 24) = *(void *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  }
  return result;
}

uint64_t _s13IMAP2Protocol8ServerIDV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (char v7 = sub_1A8A78588(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = a1[3];
    uint64_t v10 = a2[3];
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (a1[2] != a2[2] || v9 != v10)
      {
        char v11 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v12 = a1[5];
    uint64_t v13 = a2[5];
    if (v12)
    {
      if (!v13) {
        return 0;
      }
      if (a1[4] != a2[4] || v12 != v13)
      {
        char v14 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    uint64_t v15 = a1[7];
    uint64_t v16 = a2[7];
    if (v15)
    {
      if (!v16) {
        return 0;
      }
      if (a1[6] != a2[6] || v15 != v16)
      {
        char v17 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    uint64_t v18 = a1[9];
    uint64_t v19 = a2[9];
    if (v18)
    {
      if (!v19) {
        return 0;
      }
      if (a1[8] != a2[8] || v18 != v19)
      {
        char v20 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v20 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v19)
    {
      return 0;
    }
    uint64_t v21 = a1[11];
    uint64_t v22 = a2[11];
    if (v21)
    {
      if (!v22) {
        return 0;
      }
      if (a1[10] != a2[10] || v21 != v22)
      {
        char v23 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v23 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v22)
    {
      return 0;
    }
    uint64_t v24 = a1[13];
    uint64_t v25 = a2[13];
    if (v24)
    {
      if (!v25) {
        return 0;
      }
      if (a1[12] != a2[12] || v24 != v25)
      {
        char v26 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v25)
    {
      return 0;
    }
    uint64_t v27 = a1[15];
    uint64_t v28 = a2[15];
    if (v27)
    {
      if (!v28) {
        return 0;
      }
      if (a1[14] != a2[14] || v27 != v28)
      {
        char v29 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v29 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v28)
    {
      return 0;
    }
    uint64_t v30 = a1[17];
    uint64_t v31 = a2[17];
    if (v30)
    {
      if (!v31) {
        return 0;
      }
      if (a1[16] != a2[16] || v30 != v31)
      {
        char v32 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v32 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v31)
    {
      return 0;
    }
    uint64_t v33 = a1[19];
    uint64_t v34 = a2[19];
    if (v33)
    {
      if (!v34) {
        return 0;
      }
      if (a1[18] != a2[18] || v33 != v34)
      {
        char v35 = sub_1A8A78588();
        uint64_t result = 0;
        if ((v35 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v34)
    {
      return 0;
    }
    uint64_t v36 = a1[21];
    uint64_t v37 = a2[21];
    if (v36)
    {
      if (v37 && (a1[20] == a2[20] && v36 == v37 || (sub_1A8A78588() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v37)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A8894368(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747840);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2 - 8);
  BOOL v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E160);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v28 = 0;
  char v29 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a1 + 16);
  sub_1A8893E78(v14, 0);
  uint64_t v27 = v13;
  sub_1A886F308(0, v14, 0);
  if (!v14) {
    return v28;
  }
  uint64_t v26 = (uint64_t)v12 + *(int *)(v9 + 48);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v16 = *(void *)(v10 + 72);
  uint64_t v24 = a1;
  uint64_t v25 = v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    sub_1A8511A9C(v15, (uint64_t)v12, &qword_1E974E160);
    uint64_t v17 = *v12;
    uint64_t v18 = v12[1];
    sub_1A8895888(v26, (uint64_t)v8);
    uint64_t result = sub_1A8893724(v17, v18, v28, v29);
    if ((v20 & 1) == 0) {
      break;
    }
    sub_1A8893948(v17, v18);
    sub_1A8511A9C((uint64_t)v8, (uint64_t)v6, &qword_1E9747840);
    uint64_t v21 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A886F308(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v21 = v27;
    }
    unint64_t v23 = *(void *)(v21 + 16);
    unint64_t v22 = *(void *)(v21 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1A886F308(v22 > 1, v23 + 1, 1);
      uint64_t v21 = v27;
    }
    *(void *)(v21 + 16) = v23 + 1;
    sub_1A8895888((uint64_t)v6, v21+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v23);
    sub_1A88958F0((uint64_t)v8);
    swift_bridgeObjectRelease();
    v15 += v25;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      return v28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A889463C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A8894734(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ParameterValue();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2 - 8);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97483E0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v28 = 0;
  char v29 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a1 + 16);
  sub_1A8893E78(v14, 0);
  uint64_t v27 = v13;
  sub_1A886F3A0(0, v14, 0);
  if (!v14) {
    return v28;
  }
  uint64_t v26 = (uint64_t)v12 + *(int *)(v9 + 48);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v16 = *(void *)(v10 + 72);
  uint64_t v24 = a1;
  uint64_t v25 = v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    sub_1A8511A9C(v15, (uint64_t)v12, &qword_1E97483E0);
    uint64_t v18 = *v12;
    uint64_t v17 = v12[1];
    sub_1A87FB9E0(v26, (uint64_t)v8);
    uint64_t result = sub_1A8893724(v18, v17, v28, v29);
    if ((v20 & 1) == 0) {
      break;
    }
    sub_1A8893948(v18, v17);
    sub_1A86FDA10((uint64_t)v8, (uint64_t)v6);
    uint64_t v21 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A886F3A0(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v21 = v27;
    }
    unint64_t v23 = *(void *)(v21 + 16);
    unint64_t v22 = *(void *)(v21 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1A886F3A0(v22 > 1, v23 + 1, 1);
      uint64_t v21 = v27;
    }
    *(void *)(v21 + 16) = v23 + 1;
    sub_1A87FB9E0((uint64_t)v6, v21+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v23);
    sub_1A87CBE70((uint64_t)v8);
    swift_bridgeObjectRelease();
    v15 += v25;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      return v28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88949FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97429E0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A8894B0C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  sub_1A8893E78(v3, 0);
  sub_1A886F3DC(0, v3, 0);
  if (!v3) {
    return 0;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v6 = *(v4 - 3);
    uint64_t v5 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = sub_1A8893724(v6, v5, 0, v14);
    if ((v10 & 1) == 0) {
      break;
    }
    sub_1A8893948(v6, v5);
    unint64_t v12 = *(void *)(v2 + 16);
    unint64_t v11 = *(void *)(v2 + 24);
    if (v12 >= v11 >> 1) {
      sub_1A886F3DC(v11 > 1, v12 + 1, 1);
    }
    v4 += 4;
    *(void *)(v2 + 16) = v12 + 1;
    uint64_t v13 = v2 + 16 * v12;
    *(void *)(v13 + 32) = v8;
    *(void *)(v13 + 40) = v7;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1A8894C50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t result = sub_1A8893724(1701667182, 0xE400000000000000, a1, a2);
  if ((v9 & 1) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(a3 + 16))
    {
      uint64_t v10 = a3 + 16 * result;
      uint64_t v12 = *(void *)(v10 + 32);
      uint64_t v11 = *(void *)(v10 + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v12 = 0;
  uint64_t v11 = 0;
LABEL_6:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x6E6F6973726576, 0xE700000000000000, a1, a2);
  if ((v13 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        uint64_t v14 = a3 + 16 * result;
        uint64_t v16 = *(void *)(v14 + 32);
        uint64_t v15 = *(void *)(v14 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_11;
      }
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v16 = 0;
  uint64_t v15 = 0;
LABEL_11:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(29551, 0xE200000000000000, a1, a2);
  if ((v17 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        uint64_t v18 = a3 + 16 * result;
        uint64_t v19 = *(void *)(v18 + 32);
        uint64_t v20 = *(void *)(v18 + 40);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_16;
      }
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v19 = 0;
  uint64_t v20 = 0;
LABEL_16:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x69737265762D736FLL, 0xEA00000000006E6FLL, a1, a2);
  if ((v21 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        *(void *)&long long v61 = *(void *)(a3 + 16 * result + 32);
        uint64_t v22 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_21;
      }
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  *(void *)&long long v61 = 0;
  uint64_t v22 = 0;
LABEL_21:
  *((void *)&v61 + 1) = v22;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x726F646E6576, 0xE600000000000000, a1, a2);
  if ((v23 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        *(void *)&long long v60 = *(void *)(a3 + 16 * result + 32);
        uint64_t v24 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_26;
      }
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  *(void *)&long long v60 = 0;
  uint64_t v24 = 0;
LABEL_26:
  *((void *)&v60 + 1) = v24;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x2D74726F70707573, 0xEB000000006C7275, a1, a2);
  if ((v25 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        *(void *)&long long v59 = *(void *)(a3 + 16 * result + 32);
        uint64_t v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_31;
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  *(void *)&long long v59 = 0;
  uint64_t v26 = 0;
LABEL_31:
  *((void *)&v59 + 1) = v26;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x73736572646461, 0xE700000000000000, a1, a2);
  if ((v27 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        *(void *)&long long v58 = *(void *)(a3 + 16 * result + 32);
        uint64_t v28 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_36;
      }
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  *(void *)&long long v58 = 0;
  uint64_t v28 = 0;
LABEL_36:
  *((void *)&v58 + 1) = v28;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(1702125924, 0xE400000000000000, a1, a2);
  if ((v29 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        *(void *)&long long v57 = *(void *)(a3 + 16 * result + 32);
        uint64_t v30 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_41;
      }
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  *(void *)&long long v57 = 0;
  uint64_t v30 = 0;
LABEL_41:
  *((void *)&v57 + 1) = v30;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x646E616D6D6F63, 0xE700000000000000, a1, a2);
  if ((v31 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        *(void *)&long long v55 = *(void *)(a3 + 16 * result + 32);
        uint64_t v32 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_46;
      }
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  *(void *)&long long v55 = 0;
  uint64_t v32 = 0;
LABEL_46:
  *((void *)&v55 + 1) = v32;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x746E656D75677261, 0xE900000000000073, a1, a2);
  uint64_t v56 = v19;
  if ((v33 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(void *)(a3 + 16))
      {
        uint64_t v34 = a3 + 16 * result;
        uint64_t v35 = *(void *)(v34 + 40);
        uint64_t v54 = *(void *)(v34 + 32);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        goto LABEL_51;
      }
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v54 = 0;
  uint64_t v35 = 0;
LABEL_51:
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t result = sub_1A8893724(0x6D6E6F7269766E65, 0xEB00000000746E65, a1, a2);
  if (v36)
  {
    uint64_t v45 = v16;
    uint64_t v38 = v35;
    uint64_t v46 = v12;
    uint64_t v40 = v20;
    uint64_t v41 = v45;
    uint64_t v42 = v15;
    uint64_t v43 = v46;
    swift_release();
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    goto LABEL_56;
  }
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_77;
  }
  if (result < *(void *)(a3 + 16))
  {
    uint64_t v37 = v16;
    uint64_t v38 = v35;
    uint64_t v39 = v12;
    uint64_t v40 = v20;
    uint64_t v41 = v37;
    uint64_t v42 = v15;
    uint64_t v43 = v39;
    uint64_t v44 = a3 + 16 * result;
    uint64_t v52 = *(void *)(v44 + 40);
    uint64_t v53 = *(void *)(v44 + 32);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_release();
LABEL_56:
    swift_release();
    swift_release();
    *(void *)&long long v62 = v43;
    *((void *)&v62 + 1) = v11;
    *(void *)&long long v63 = v41;
    *((void *)&v63 + 1) = v42;
    *(void *)&long long v64 = v56;
    *((void *)&v64 + 1) = v40;
    long long v65 = v61;
    long long v66 = v60;
    long long v67 = v59;
    long long v68 = v58;
    long long v69 = v57;
    long long v70 = v55;
    *(void *)&long long v71 = v54;
    *((void *)&v71 + 1) = v38;
    *(void *)&long long v72 = v53;
    *((void *)&v72 + 1) = v52;
    sub_1A8590B60((uint64_t)&v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1A8590C30((uint64_t)&v62);
    long long v47 = v71;
    a4[8] = v70;
    a4[9] = v47;
    a4[10] = v72;
    long long v48 = v67;
    a4[4] = v66;
    a4[5] = v48;
    long long v49 = v69;
    a4[6] = v68;
    a4[7] = v49;
    long long v50 = v63;
    *a4 = v62;
    a4[1] = v50;
    long long v51 = v65;
    a4[2] = v64;
    a4[3] = v51;
    return result;
  }
LABEL_78:
  __break(1u);
  return result;
}

void *sub_1A8895220(void *a1, void *a2)
{
  return a2;
}

uint64_t destroy for ServerID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ServerID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *assignWithCopy for ServerID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ServerID(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 176)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 176) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerID()
{
  return &type metadata for ServerID;
}

uint64_t sub_1A889572C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A8895888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88958F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9747840);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::String __swiftcall ServerResponseTranscoder.makeParsingErrorDescription()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Response(0);
  uint64_t v27 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v26 = (uint64_t)&v24 - v6;
  uint64_t v7 = v1[3];
  unint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    unint64_t v29 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1A886F2C8(0, v7 & ~(v7 >> 63), 0);
    if ((v7 & 0x8000000000000000) == 0)
    {
      uint64_t v9 = 0;
      uint64_t v24 = (char *)v1 + ((*(unsigned __int8 *)(v27 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
      uint64_t v25 = v7;
      while (v7 != v9)
      {
        if (v9 >= v1[3]) {
          goto LABEL_17;
        }
        uint64_t v10 = v1[4];
        if (v9 + v10 >= v1[2]) {
          uint64_t v11 = v1[2];
        }
        else {
          uint64_t v11 = 0;
        }
        uint64_t v12 = v26;
        sub_1A88A0CE4((uint64_t)&v24[(v9 + v10 - v11) * *(void *)(v27 + 72)], v26, type metadata accessor for Response);
        sub_1A889B634(v12, (uint64_t)v4, type metadata accessor for Response);
        sub_1A889ACAC((uint64_t)v4, v28);
        sub_1A88A01C8((uint64_t)v4, type metadata accessor for Response);
        unint64_t v13 = v28[0];
        unint64_t v14 = v28[1];
        unint64_t v8 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A886F2C8(0, *(void *)(v8 + 16) + 1, 1);
          unint64_t v8 = v29;
        }
        unint64_t v16 = *(void *)(v8 + 16);
        unint64_t v15 = *(void *)(v8 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1A886F2C8(v15 > 1, v16 + 1, 1);
          unint64_t v8 = v29;
        }
        ++v9;
        *(void *)(v8 + 16) = v16 + 1;
        unint64_t v17 = v8 + 16 * v16;
        *(void *)(v17 + 32) = v13;
        *(void *)(v17 + 40) = v14;
        uint64_t v7 = v25;
        if (v25 == v9)
        {
          swift_release();
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
    }
    __break(1u);
    uint64_t v21 = swift_release();
    __break(1u);
  }
  else
  {
LABEL_15:
    v28[0] = v8;
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9744578);
    sub_1A8872AD0();
    uint64_t v18 = sub_1A8A76348();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v21 = v18;
    uint64_t v22 = v20;
  }
  result._object = v22;
  result._uint64_t countAndFlagsBits = v21;
  return result;
}

uint64_t sub_1A8895C08()
{
  uint64_t v0 = sub_1A8A754D8();
  __swift_allocate_value_buffer_0(v0, qword_1E979E2E8);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1E979E2E8);
  return sub_1A8A754C8();
}

uint64_t ServerResponseTranscoder.init()()
{
  sub_1A8A750C8();
  return swift_retain();
}

void *ServerResponseTranscoder.append(_:)(uint64_t a1)
{
  Swift::String result = (void *)*v1;
  uint64_t v4 = *(void *)(*v1 + 24);
  uint64_t v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v1;
    if (*(void *)(*v1 + 16) < v5 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A889B28C(v5);
      uint64_t v7 = *v1;
    }
    uint64_t v8 = *(void *)(type metadata accessor for Response(0) - 8);
    return sub_1A889B564((void *)(v7 + 16), v7 + ((*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a1);
  }
  return result;
}

void ServerResponseTranscoder.parseNext()(void *a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742008);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Response(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Response(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v43 - v15;
  double v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v43 - v20;
  long long v48 = v3;
  uint64_t v22 = *v3;
  uint64_t v23 = *(void *)(*v3 + 24);
  if (!v23)
  {
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t, double))(v8 + 56))(a1, 1, 1, v7, v19);
    return;
  }
  if (v23 < 1)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v43 = v18;
  uint64_t v44 = v8;
  uint64_t v45 = v7;
  long long v47 = a1;
  uint64_t v24 = *(void *)(v22 + 32);
  uint64_t v25 = *(void *)(v22 + 16);
  if (v24 < v25) {
    uint64_t v25 = 0;
  }
  unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = *(void *)(v11 + 72);
  sub_1A88A0CE4(v22 + v26 + (v24 - v25) * v27, (uint64_t)v13, type metadata accessor for Response);
  sub_1A889B634((uint64_t)v13, (uint64_t)v16, type metadata accessor for Response);
  sub_1A889B634((uint64_t)v16, (uint64_t)v21, type metadata accessor for Response);
  sub_1A8896208(v49);
  if (!v2)
  {
    char v31 = v48;
    if (*(uint64_t *)(*v48 + 24) < 1)
    {
      uint64_t v42 = 1;
      uint64_t v33 = (uint64_t)v46;
      uint64_t v39 = (uint64_t)v47;
      uint64_t v41 = v44;
      uint64_t v40 = v45;
      goto LABEL_20;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = (uint64_t)v46;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1A889BB70();
      char v31 = v48;
    }
    uint64_t v34 = (void *)*v31;
    sub_1A889B634((uint64_t)v34 + v26 + v34[4] * v27, v33, type metadata accessor for Response);
    uint64_t v35 = v34[4];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (!v36)
    {
      uint64_t v38 = v34[3];
      if (v37 >= v34[2]) {
        uint64_t v37 = 0;
      }
      v34[4] = v37;
      uint64_t v39 = (uint64_t)v47;
      uint64_t v41 = v44;
      uint64_t v40 = v45;
      if (!__OFSUB__(v38, 1))
      {
        uint64_t v42 = 0;
        v34[3] = v38 - 1;
LABEL_20:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v33, v42, 1, v43);
        sub_1A8511B00(v33, &qword_1E9742008);
        sub_1A88A01C8((uint64_t)v21, type metadata accessor for Response);
        sub_1A889B634(v49, v39, type metadata accessor for Response);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v39, 0, 1, v40);
        return;
      }
LABEL_23:
      __break(1u);
      return;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v51 = v2;
  id v28 = v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F40);
  int v29 = swift_dynamicCast();
  uint64_t v30 = v47;
  if (v29 && v50 == 1)
  {

    sub_1A889657C(v30);
    sub_1A88A01C8((uint64_t)v21, type metadata accessor for Response);
  }
  else
  {

    swift_willThrow();
    sub_1A88A01C8((uint64_t)v21, type metadata accessor for Response);
  }
}

uint64_t sub_1A8896208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for ResponsePayload();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Response(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A88A0CE4(v3, (uint64_t)v10, type metadata accessor for Response);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A8892104((uint64_t)v10, (uint64_t)v18);
      sub_1A8892104((uint64_t)v18, (uint64_t)v19);
      if (!sub_1A87A9F60((uint64_t)v19))
      {
        sub_1A87AA04C((uint64_t)v19);
        sub_1A88A0D74();
        swift_allocError();
        char v17 = 1;
        goto LABEL_13;
      }
      sub_1A88A0D74();
      swift_allocError();
      *uint64_t v12 = 2;
      swift_willThrow();
      return sub_1A88A0F30((uint64_t)v18, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
    case 2u:
      long long v13 = v10[1];
      long long v20 = *v10;
      *(_OWORD *)uint64_t v21 = v13;
      *(_OWORD *)&v21[9] = *(_OWORD *)((char *)v10 + 25);
      sub_1A889AB78(a1);
      if (v2)
      {
        long long v24 = v20;
        sub_1A853489C((uint64_t)&v24);
        sub_1A885E63C((uint64_t)v21, (uint64_t)v25);
        uint64_t v14 = v25;
      }
      else
      {
        long long v22 = v20;
        sub_1A853489C((uint64_t)&v22);
        sub_1A885E63C((uint64_t)v21, (uint64_t)v23);
        uint64_t v14 = v23;
      }
      return sub_1A88A0FA4((uint64_t)v14);
    case 3u:
      uint64_t v15 = *((void *)v10 + 2);
      *(_OWORD *)a1 = *v10;
      *(void *)(a1 + 16) = v15;
      type metadata accessor for UntaggedResponse(0);
      swift_storeEnumTagMultiPayload();
      goto LABEL_9;
    case 4u:
      sub_1A88A01C8((uint64_t)v10, type metadata accessor for Response);
      sub_1A88A0D74();
      swift_allocError();
      char v17 = 10;
      goto LABEL_13;
    case 5u:
      sub_1A88A0D74();
      swift_allocError();
      char v17 = 11;
LABEL_13:
      *unint64_t v16 = v17;
      uint64_t result = swift_willThrow();
      break;
    default:
      sub_1A889B634((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      sub_1A889A4D4(a1);
      uint64_t result = sub_1A88A01C8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      if (!v2)
      {
LABEL_9:
        type metadata accessor for Response(0);
        uint64_t result = swift_storeEnumTagMultiPayload();
      }
      break;
  }
  return result;
}

uint64_t sub_1A889657C@<X0>(void *a1@<X8>)
{
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  sub_1A8896A14(v1, &v10, a1);
  if (!v2)
  {
    uint64_t v5 = type metadata accessor for Response(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 0, 1, v5);
    return swift_bridgeObjectRelease();
  }
  id v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745F40);
  if (!swift_dynamicCast() || v9)
  {

    return swift_bridgeObjectRelease();
  }

  swift_beginAccess();
  uint64_t v7 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88990F8(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for Response(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88966EC@<X0>(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Response(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742008);
  double v11 = MEMORY[0x1F4188790](v10 - 8);
  long long v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)(*(void *)a1 + 24) < 1)
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56);
    v25(v13, 1, 1, v6, v11);
    sub_1A8511B00((uint64_t)v13, &qword_1E9742008);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25)(a3, 1, 1, v6);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1A889BB70();
  }
  uint64_t v14 = *(void **)a1;
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(void *)(v7 + 72);
  sub_1A889B634((uint64_t)v14 + ((v15 + 40) & ~v15) + v16 * v14[4], (uint64_t)v13, type metadata accessor for Response);
  uint64_t v17 = v14[4];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v20 = v14[3];
  if (v19 >= v14[2]) {
    uint64_t v19 = 0;
  }
  v14[4] = v19;
  if (__OFSUB__(v20, 1)) {
    goto LABEL_14;
  }
  v14[3] = v20 - 1;
  uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  v27(v13, 0, 1, v6);
  sub_1A889B634((uint64_t)v13, a3, type metadata accessor for Response);
  sub_1A88A0CE4(a3, (uint64_t)v9, type metadata accessor for Response);
  swift_beginAccess();
  uint64_t v14 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v14;
  uint64_t v28 = a3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_15:
    uint64_t v14 = (void *)sub_1A88930AC(0, v14[2] + 1, 1, (unint64_t)v14);
    *a2 = v14;
  }
  unint64_t v23 = v14[2];
  unint64_t v22 = v14[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t v14 = (void *)sub_1A88930AC(v22 > 1, v23 + 1, 1, (unint64_t)v14);
    *a2 = v14;
  }
  void v14[2] = v23 + 1;
  sub_1A889B634((uint64_t)v9, (uint64_t)v14 + ((v15 + 32) & ~v15) + v23 * v16, type metadata accessor for Response);
  swift_endAccess();
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v27)(v28, 0, 1, v6);
}

uint64_t sub_1A8896A14@<X0>(uint64_t a1@<X0>, void **a2@<X1>, void *a3@<X8>)
{
  v330 = a2;
  v294 = a3;
  uint64_t v315 = sub_1A8A75E28();
  *(void *)&long long v335 = *(void *)(v315 - 8);
  MEMORY[0x1F4188790](v315);
  v298 = (char *)&v273 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v303 = (char *)&v273 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
  MEMORY[0x1F4188790](v7 - 8);
  v317 = (char *)&v273 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v301 = (uint64_t)&v273 - v10;
  MEMORY[0x1F4188790](v11);
  v297 = (char *)&v273 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v302 = (uint64_t)&v273 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742930);
  MEMORY[0x1F4188790](v15 - 8);
  v300 = (char *)&v273 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v295 = (char *)&v273 - v18;
  uint64_t v19 = type metadata accessor for MessageData.BodySection();
  uint64_t v308 = *(void *)(v19 - 8);
  uint64_t v309 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v313 = (uint64_t)&v273 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  v307 = (char *)&v273 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v296 = (uint64_t)&v273 - v24;
  uint64_t v322 = type metadata accessor for StreamedBodySection(0);
  *(void *)&long long v336 = *(void *)(v322 - 8);
  MEMORY[0x1F4188790](v322);
  uint64_t v312 = (uint64_t)&v273 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v311 = (uint64_t)&v273 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v310 = (uint64_t)&v273 - v29;
  uint64_t v30 = type metadata accessor for Response(0);
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v318 = (uint64_t)&v273 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v324 = (uint64_t)&v273 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v323 = (uint64_t)&v273 - v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97429F8);
  MEMORY[0x1F4188790](v37 - 8);
  v299 = (char *)&v273 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v305 = (uint64_t)&v273 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v306 = (uint64_t)&v273 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v304 = (uint64_t)&v273 - v44;
  MEMORY[0x1F4188790](v45);
  v319 = (char *)&v273 - v46;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9742008);
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v326 = (uint64_t)&v273 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v49);
  uint64_t v325 = (uint64_t)&v273 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v273 - v52;
  MEMORY[0x1F4188790](v54);
  uint64_t v56 = (char *)&v273 - v55;
  sub_1A86407D4((uint64_t)v357);
  LODWORD(v358[0]) = 0;
  BYTE4(v358[0]) = 1;
  LODWORD(v358[1]) = 0;
  BYTE4(v358[1]) = 1;
  sub_1A8529F8C((uint64_t)v357, (uint64_t)&v358[2], &qword_1E97461D0);
  v358[25] = MEMORY[0x1E4FBC860];
  sub_1A8529F8C((uint64_t)v357, (uint64_t)&v358[26], &qword_1E97461D0);
  memset(&v358[49], 0, 144);
  LOBYTE(v358[67]) = 1;
  HIDWORD(v358[67]) = 0;
  LOBYTE(v358[68]) = 1;
  v358[69] = 0;
  LOBYTE(v358[70]) = 1;
  uint64_t v57 = v30;
  *(_OWORD *)&v358[71] = 0u;
  memcpy(v346, v358, sizeof(v346));
  uint64_t v359 = a1;
  sub_1A88966EC(a1, v330, (uint64_t)v56);
  uint64_t v320 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v56, 1, v30) == 1)
  {
LABEL_11:
    sub_1A88A0D74();
    swift_allocError();
    *long long v63 = 2;
    swift_willThrow();
    long long v64 = &qword_1E9742008;
LABEL_12:
    uint64_t v65 = (uint64_t)v56;
    goto LABEL_13;
  }
  sub_1A8511A9C((uint64_t)v56, (uint64_t)v53, &qword_1E9742008);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A88A01C8((uint64_t)v53, type metadata accessor for Response);
    goto LABEL_11;
  }
  sub_1A8892104((uint64_t)v53, (uint64_t)v343);
  sub_1A8892104((uint64_t)v343, (uint64_t)v344);
  int v58 = sub_1A87A9F60((uint64_t)v344);
  if (!v58)
  {
    *(_DWORD *)v346 = *(_DWORD *)sub_1A87AA04C((uint64_t)v344);
    long long v59 = &v346[4];
    goto LABEL_8;
  }
  if (v58 != 1)
  {
    sub_1A88A0F30((uint64_t)v343, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
    goto LABEL_11;
  }
  *(_DWORD *)&v346[8] = *(_DWORD *)sub_1A87AA04C((uint64_t)v344);
  long long v59 = &v346[12];
LABEL_8:
  *long long v59 = 0;
  sub_1A8511B00((uint64_t)v56, &qword_1E9742008);
  uint64_t v60 = v336;
  uint64_t v61 = (uint64_t)v319;
  v290 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v336 + 56);
  uint64_t v291 = v336 + 56;
  v290(v319, 1, 1, v322);
  if (*(uint64_t *)(*(void *)v359 + 24) <= 0)
  {
    long long v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v320 + 56);
    unint64_t v292 = (v320 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
LABEL_17:
    uint64_t v68 = v326;
    v67(v326, 1, 1, v57);
    sub_1A8511B00(v68, &qword_1E9742008);
    uint64_t v69 = v325;
    v67(v325, 1, 1, v57);
    sub_1A8511B00(v69, &qword_1E9742008);
    sub_1A88A0D74();
    swift_allocError();
    *long long v70 = 0;
    swift_willThrow();
    goto LABEL_180;
  }
  uint64_t v314 = 0;
  uint64_t v284 = 0;
  unint64_t v321 = v320 + 56;
  unint64_t v286 = (void *)(v335 + 48);
  unint64_t v287 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
  v277 = (void (**)(char *, char *, uint64_t))(v335 + 16);
  uint64_t v278 = (void (**)(char *, uint64_t, uint64_t))(v335 + 32);
  uint64_t v281 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v335 + 56);
  uint64_t v282 = (void (**)(char *, uint64_t))(v335 + 8);
  uint64_t v274 = &v346[16];
  v275 = &v346[536];
  uint64_t v273 = &v346[208];
  uint64_t v62 = v322;
  uint64_t v316 = v57;
LABEL_23:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1A889BB70();
  }
  uint64_t v80 = *(void **)v359;
  uint64_t v81 = *(unsigned __int8 *)(v320 + 80);
  uint64_t v82 = *(void *)(v320 + 72);
  sub_1A889B634(*(void *)v359 + ((v81 + 40) & ~v81) + v82 * *(void *)(*(void *)v359 + 32), v326, type metadata accessor for Response);
  uint64_t v83 = v80[4];
  BOOL v84 = __OFADD__(v83, 1);
  uint64_t v85 = v83 + 1;
  if (v84)
  {
    __break(1u);
LABEL_187:
    __break(1u);
LABEL_188:
    __break(1u);
    goto LABEL_189;
  }
  uint64_t v86 = v80[3];
  if (v85 >= v80[2]) {
    uint64_t v85 = 0;
  }
  v80[4] = v85;
  if (__OFSUB__(v86, 1)) {
    goto LABEL_187;
  }
  v80[3] = v86 - 1;
  long long v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v321;
  uint64_t v87 = v326;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))v321)(v326, 0, 1, v57);
  uint64_t v88 = v87;
  uint64_t v89 = v325;
  sub_1A889B634(v88, v325, type metadata accessor for Response);
  sub_1A88A0CE4(v89, v324, type metadata accessor for Response);
  uint64_t v90 = v330;
  swift_beginAccess();
  uint64_t v91 = *v90;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  char *v90 = v91;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v91 = (void *)sub_1A88930AC(0, v91[2] + 1, 1, (unint64_t)v91);
    *v330 = v91;
  }
  unint64_t v94 = v91[2];
  unint64_t v93 = v91[3];
  if (v94 >= v93 >> 1)
  {
    uint64_t v91 = (void *)sub_1A88930AC(v93 > 1, v94 + 1, 1, (unint64_t)v91);
    *v330 = v91;
  }
  v91[2] = v94 + 1;
  sub_1A889B634(v324, (uint64_t)v91 + ((v81 + 32) & ~v81) + v94 * v82, type metadata accessor for Response);
  swift_endAccess();
  uint64_t v95 = v325;
  uint64_t v57 = v316;
  v67(v325, 0, 1, v316);
  uint64_t v96 = v95;
  uint64_t v97 = v323;
  sub_1A889B634(v96, v323, type metadata accessor for Response);
  uint64_t v98 = v97;
  uint64_t v99 = v318;
  sub_1A88A0CE4(v98, v318, type metadata accessor for Response);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1A88A01C8(v99, type metadata accessor for Response);
    sub_1A88A0D74();
    swift_allocError();
    *uint64_t v253 = 2;
    swift_willThrow();
    uint64_t v254 = v323;
    goto LABEL_179;
  }
  sub_1A8892104(v99, (uint64_t)v342);
  if (v314 == 99999)
  {
    sub_1A88A0D74();
    swift_allocError();
    char v256 = 3;
    goto LABEL_177;
  }
  unint64_t v100 = v321 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  ++v314;
  sub_1A8892104((uint64_t)v342, (uint64_t)v341);
  int v101 = sub_1A87A9F60((uint64_t)v341);
  uint64_t v102 = (uint64_t)v317;
  unint64_t v292 = v100;
  switch(v101)
  {
    case 2:
      uint64_t v103 = sub_1A87AA04C((uint64_t)v341);
      uint64_t v104 = v284 + 1;
      if (__OFADD__(v284, 1)) {
        goto LABEL_188;
      }
      if (v104 < 50)
      {
        sub_1A88921BC(v103, (uint64_t)v340);
        int v105 = sub_1A8795F14((uint64_t)v340);
        uint64_t v284 = v104;
        switch(v105)
        {
          case 1:
            uint64_t v161 = sub_1A8795F7C((uint64_t)v340);
            long long v162 = *(_OWORD *)v161;
            uint64_t v163 = *(void *)(v161 + 16);
            uint64_t v164 = *(void *)(v161 + 24);
            unint64_t v165 = *(unsigned int *)(v161 + 32) | ((unint64_t)(*(unsigned __int16 *)(v161 + 36) | (*(unsigned __int8 *)(v161 + 38) << 16)) << 32);
            long long v335 = *(_OWORD *)(v161 + 40);
            long long v336 = v162;
            long long v166 = *(_OWORD *)(v161 + 56);
            long long v333 = *(_OWORD *)(v161 + 72);
            long long v334 = v166;
            long long v332 = *(_OWORD *)(v161 + 88);
            uint64_t v167 = *(void *)(v161 + 104);
            uint64_t v168 = *(void *)(v161 + 112);
            sub_1A88A01C8(v323, type metadata accessor for Response);
            sub_1A856B8CC(*(uint64_t *)&v346[392], *(uint64_t *)&v346[400], *(uint64_t *)&v346[408], *(uint64_t *)&v346[416], *(uint64_t *)&v346[424], *(uint64_t *)&v346[432]);
            *(_OWORD *)&v346[392] = v336;
            uint64_t v62 = v322;
            *(void *)&v346[408] = v163;
            *(void *)&v346[416] = v164;
            *(_OWORD *)&v346[432] = v335;
            *(_OWORD *)&v346[448] = v334;
            *(_OWORD *)&v346[464] = v333;
            *(_OWORD *)&v346[480] = v332;
            *(void *)&v346[424] = v165;
            *(void *)&v346[496] = v167;
            *(void *)&v346[504] = v168;
            uint64_t v57 = v316;
            goto LABEL_22;
          case 2:
            uint64_t v169 = *(void *)sub_1A8795F7C((uint64_t)v340);
            sub_1A88A01C8(v323, type metadata accessor for Response);
            *(void *)&v346[528] = v169;
            unsigned char *v275 = 0;
            goto LABEL_22;
          case 3:
            int v170 = *(_DWORD *)sub_1A8795F7C((uint64_t)v340);
            sub_1A88A01C8(v323, type metadata accessor for Response);
            *(_DWORD *)&v346[8] = v170;
            v346[12] = 0;
            goto LABEL_22;
          case 4:
            unint64_t v171 = *(void *)sub_1A8795F7C((uint64_t)v340);
            if (!HIDWORD(v171))
            {
              sub_1A88A01C8(v323, type metadata accessor for Response);
              *(_DWORD *)&v346[540] = v171;
              v275[8] = 0;
              goto LABEL_22;
            }
            sub_1A88A0C90();
            swift_allocError();
            *(void *)uint64_t v272 = v171;
            *(void *)(v272 + 8) = 0;
            *(unsigned char *)(v272 + 16) = 2;
LABEL_185:
            swift_willThrow();
            goto LABEL_178;
          case 5:
            uint64_t v172 = sub_1A8795F7C((uint64_t)v340);
            sub_1A88A01C8(v323, type metadata accessor for Response);
            if (*(unsigned char *)(v172 + 177))
            {
              sub_1A8644AD0(v172, (uint64_t)v338);
              nullsub_1(v338);
              uint64_t v173 = (uint64_t)v273;
            }
            else
            {
              sub_1A8644AD0(v172, (uint64_t)v338);
              nullsub_1(v338);
              uint64_t v173 = (uint64_t)v274;
            }
            sub_1A8529F8C(v173, (uint64_t)v345, &qword_1E97461D0);
            sub_1A88A0E70((uint64_t)v345);
            sub_1A8529F8C((uint64_t)v338, v173, &qword_1E97461D0);
            goto LABEL_22;
          case 6:
          case 9:
          case 10:
            sub_1A8795F7C((uint64_t)v340);
            sub_1A8892104((uint64_t)v342, (uint64_t)v338);
            sub_1A88A0DC8();
            swift_allocError();
            long long v262 = v338[3];
            long long v264 = v338[0];
            long long v263 = v338[1];
            *(_OWORD *)(v265 + 32) = v338[2];
            *(_OWORD *)(v265 + 48) = v262;
            *(_OWORD *)uint64_t v265 = v264;
            *(_OWORD *)(v265 + 16) = v263;
            long long v266 = v338[7];
            long long v268 = v338[4];
            long long v267 = v338[5];
            *(_OWORD *)(v265 + 96) = v338[6];
            *(_OWORD *)(v265 + 112) = v266;
            *(_OWORD *)(v265 + 64) = v268;
            *(_OWORD *)(v265 + 80) = v267;
            long long v270 = v338[9];
            long long v269 = v338[10];
            long long v271 = v338[8];
            *(_WORD *)(v265 + 176) = v339;
            *(_OWORD *)(v265 + 144) = v270;
            *(_OWORD *)(v265 + 160) = v269;
            *(_OWORD *)(v265 + 128) = v271;
            goto LABEL_185;
          case 7:
            v293 = v67;
            uint64_t v174 = sub_1A8795F7C((uint64_t)v340);
            uint64_t v175 = *(void *)(v174 + 8);
            uint64_t v176 = *(void *)(v174 + 16);
            uint64_t v177 = *(void *)(v174 + 24);
            unsigned int v178 = *(unsigned __int8 *)(v174 + 32);
            uint64_t v347 = *(void *)v174;
            uint64_t v348 = v175;
            uint64_t v349 = v176;
            uint64_t v350 = v177;
            char v351 = v178;
            sub_1A8892104((uint64_t)v342, (uint64_t)v345);
            uint64_t v179 = sub_1A87AA04C((uint64_t)v345);
            sub_1A88A0F30(v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889E75C);
            *(void *)&long long v336 = StreamingKind.sectionSpecifier.getter();
            *(void *)&long long v335 = v180;
            LODWORD(v334) = v181;
            if (v178 >> 6)
            {
              if (v178 >> 6 != 1)
              {
                LODWORD(v175) = 0;
                LOBYTE(v243) = 1;
                goto LABEL_163;
              }
              int v182 = v178 & 1;
              uint64_t v175 = v177;
            }
            else
            {
              int v182 = v176 & 1;
            }
            if (v175 < 0) {
              int v182 = 1;
            }
            if (v175 > 0xFFFFFFFFLL) {
              int v243 = 1;
            }
            else {
              int v243 = v182;
            }
            if (v243) {
              LODWORD(v175) = 0;
            }
LABEL_163:
            uint64_t v244 = type metadata accessor for MessageData.BodyData();
            uint64_t v245 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v244 - 8) + 56);
            uint64_t v246 = (uint64_t)v295;
            v245(v295, 1, 1, v244);
            uint64_t v247 = (uint64_t)v307;
            uint64_t v248 = (uint64_t)&v307[*(int *)(v309 + 24)];
            v245((char *)v248, 1, 1, v244);
            uint64_t v249 = v335;
            *(void *)uint64_t v247 = v336;
            *(void *)(v247 + 8) = v249;
            *(unsigned char *)(v247 + 16) = v334;
            *(_DWORD *)(v247 + 20) = v175;
            *(unsigned char *)(v247 + 24) = v243;
            sub_1A887BF50(v246, v248, &qword_1E9742930);
            sub_1A889B634(v247, v296, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
            unint64_t v250 = *(void *)&v346[200];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v250 = sub_1A88936BC(0, *(void *)(v250 + 16) + 1, 1, v250);
            }
            uint64_t v61 = (uint64_t)v319;
            uint64_t v62 = v322;
            uint64_t v57 = v316;
            long long v67 = v293;
            unint64_t v252 = *(void *)(v250 + 16);
            unint64_t v251 = *(void *)(v250 + 24);
            if (v252 >= v251 >> 1) {
              unint64_t v250 = sub_1A88936BC(v251 > 1, v252 + 1, 1, v250);
            }
            *(void *)(v250 + 16) = v252 + 1;
            sub_1A889B634(v296, v250+ ((*(unsigned __int8 *)(v308 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v308 + 80))+ *(void *)(v308 + 72) * v252, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
            sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
            sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
            *(void *)&v346[200] = v250;
            goto LABEL_66;
          case 8:
            uint64_t v183 = *(void *)sub_1A8795F7C((uint64_t)v340);
            sub_1A88A01C8(v323, type metadata accessor for Response);
            *(void *)&v346[552] = v183;
            v275[24] = 0;
            goto LABEL_22;
          case 11:
            v293 = v67;
            uint64_t v184 = *(void *)sub_1A8795F7C((uint64_t)v340);
            sub_1A8892104((uint64_t)v342, (uint64_t)v345);
            uint64_t v185 = sub_1A87AA04C((uint64_t)v345);
            sub_1A88A0F30(v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889E75C);
            sub_1A88A0F30(v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889E75C);
            sub_1A88A0E1C();
            uint64_t v186 = sub_1A8A76F88();
            uint64_t v280 = *(void *)(v184 + 16);
            if (!v280)
            {
              uint64_t v62 = v322;
              goto LABEL_152;
            }
            uint64_t v187 = 0;
            uint64_t v279 = v184 + 32;
LABEL_97:
            uint64_t v331 = v186 + 56;
            v327 = (void *)v186;
            break;
          case 12:
            uint64_t v239 = (uint64_t *)sub_1A8795F7C((uint64_t)v340);
            uint64_t v240 = *v239;
            uint64_t v241 = v239[1];
            sub_1A88A01C8(v323, type metadata accessor for Response);
            swift_bridgeObjectRelease();
            *(void *)&v346[568] = v240;
            *(void *)&v346[576] = v241;
            goto LABEL_22;
          default:
            uint64_t v106 = *(void *)sub_1A8795F7C((uint64_t)v340);
            sub_1A8892104((uint64_t)v342, (uint64_t)v345);
            uint64_t v107 = sub_1A87AA04C((uint64_t)v345);
            sub_1A88A0F30(v107, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889E75C);
            sub_1A88A0F30(v107, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889E75C);
            sub_1A88A0EDC();
            uint64_t v108 = sub_1A8A76F88();
            uint64_t v337 = v108;
            uint64_t v109 = *(void *)(v106 + 16);
            if (v109)
            {
              uint64_t v110 = (uint64_t *)(v106 + 40);
              do
              {
                uint64_t v111 = *(v110 - 1);
                uint64_t v112 = *v110;
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A889C190((uint64_t *)v338, v111, v112);
                swift_bridgeObjectRelease();
                v110 += 2;
                --v109;
              }
              while (v109);
              sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
              sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
              sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
              uint64_t v113 = v337;
            }
            else
            {
              uint64_t v113 = v108;
              sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
              sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
              sub_1A8892104((uint64_t)v342, (uint64_t)v338);
              uint64_t v242 = sub_1A87AA04C((uint64_t)v338);
              sub_1A88A0F30(v242, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EF9C);
            }
            uint64_t v62 = v322;
            sub_1A88A01C8(v323, type metadata accessor for Response);
            swift_bridgeObjectRelease();
            *(void *)&v346[512] = v113;
            goto LABEL_22;
        }
        while (1)
        {
          char v188 = (uint64_t *)(v279 + 24 * v187);
          uint64_t v189 = *v188;
          unint64_t v191 = *((unsigned int *)v188 + 2);
          uint64_t v190 = *((unsigned int *)v188 + 3);
          uint64_t v192 = *((unsigned int *)v188 + 4);
          uint64_t v193 = *((unsigned __int16 *)v188 + 10);
          uint64_t v194 = *((unsigned __int8 *)v188 + 22);
          uint64_t v288 = v187 + 1;
          sub_1A8A78738();
          *(void *)&long long v335 = v192;
          unint64_t v283 = v191 | (v190 << 32);
          unint64_t v289 = v289 & 0xFF00000000000000 | v192 & 0xFF000000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v193 << 32) & 0xFF00FFFFFFFFFFFFLL | ((unint64_t)v194 << 48);
          GmailLabel.hash(into:)();
          uint64_t v195 = sub_1A8A787C8();
          uint64_t v196 = v331;
          uint64_t v197 = -1 << *(unsigned char *)(v186 + 32);
          unint64_t v198 = v195 & ~v197;
          uint64_t v199 = *(void *)(v331 + ((v198 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v198;
          *(void *)&long long v334 = v193;
          *(void *)&long long v333 = v194;
          *(void *)&long long v332 = v194 | (v193 << 8);
          *(void *)&long long v336 = v189;
          uint64_t v285 = v190;
          if ((v199 & 1) == 0)
          {
            swift_retain();
            uint64_t v62 = v322;
            goto LABEL_118;
          }
          uint64_t v200 = ~v197;
          int v201 = v190 - v191;
          swift_retain();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          v328 = (void *)(v189 + 24);
          swift_beginAccess();
          LODWORD(v329) = v201;
          while (1)
          {
            uint64_t v202 = *(void *)(v186 + 48) + 24 * v198;
            uint64_t v203 = *(unsigned int *)(v202 + 8);
            uint64_t v204 = *(unsigned int *)(v202 + 12);
            if (v204 - v203 == v201) {
              break;
            }
LABEL_100:
            unint64_t v198 = (v198 + 1) & v200;
            if (((*(void *)(v196 + ((v198 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v198) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              uint64_t v62 = v322;
LABEL_118:
              char v214 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v337 = v186;
              unint64_t v215 = *(void *)(v186 + 16);
              unint64_t v216 = *(void *)(v186 + 24);
              swift_retain();
              if (v216 <= v215)
              {
                v328 = (void *)v191;
                if (v214) {
                  sub_1A889C6E0();
                }
                else {
                  sub_1A889D2CC();
                }
                uint64_t v57 = v316;
                unint64_t v217 = v276;
                uint64_t v218 = (void)v334 << 32;
                uint64_t v219 = (void)v333 << 48;
                uint64_t v186 = v337;
                sub_1A8A78738();
                unint64_t v220 = v217 & 0xFF00000000000000 | v335 | v218 | v219;
                uint64_t v221 = v336;
                unint64_t v276 = v220;
                GmailLabel.hash(into:)();
                uint64_t v222 = sub_1A8A787C8();
                uint64_t v223 = -1 << *(unsigned char *)(v186 + 32);
                unint64_t v198 = v222 & ~v223;
                uint64_t v331 = v186 + 56;
                if ((*(void *)(v186 + 56 + ((v198 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v198))
                {
                  uint64_t v329 = ~v223;
                  int v224 = v285 - v328;
                  v327 = (void *)(v221 + 24);
                  swift_beginAccess();
                  do
                  {
                    uint64_t v225 = v186;
                    uint64_t v226 = *(void *)(v186 + 48) + 24 * v198;
                    uint64_t v227 = *(unsigned int *)(v226 + 8);
                    uint64_t v228 = *(unsigned int *)(v226 + 12);
                    if (v228 - v227 == v224)
                    {
                      uint64_t v229 = *(void *)v226;
                      uint64_t v230 = *(unsigned __int16 *)(v226 + 20);
                      uint64_t v231 = *(unsigned __int8 *)(v226 + 22);
                      BOOL v232 = *(_DWORD *)(v226 + 16) == v335 && v230 == v334;
                      BOOL v233 = v232 && v231 == v333;
                      if (v233 && v229 == (void)v336) {
                        goto LABEL_192;
                      }
                      swift_beginAccess();
                      if (!memcmp((const void *)(*(void *)(v229 + 24) + (v231 | (v230 << 8)) + v227), (char *)v328 + v332 + *v327, v228 - v227))goto LABEL_192; {
                    }
                      }
                    unint64_t v198 = (v198 + 1) & v329;
                    uint64_t v186 = v225;
                  }
                  while (((*(void *)(v331 + ((v198 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v198) & 1) != 0);
                  uint64_t v62 = v322;
                  uint64_t v57 = v316;
                }
                LODWORD(v191) = v328;
              }
              else
              {
                uint64_t v57 = v316;
                if ((v214 & 1) == 0)
                {
                  sub_1A889CE10();
                  uint64_t v186 = v337;
                }
              }
              int v235 = v285;
              *(void *)(v186 + ((v198 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v198;
              uint64_t v236 = *(void *)(v186 + 48) + 24 * v198;
              *(void *)uint64_t v236 = v336;
              *(_DWORD *)(v236 + 8) = v191;
              *(_DWORD *)(v236 + 12) = v235;
              *(_DWORD *)(v236 + 16) = v335;
              *(_WORD *)(v236 + 20) = v334;
              *(unsigned char *)(v236 + 22) = v333;
              uint64_t v237 = *(void *)(v186 + 16);
              BOOL v84 = __OFADD__(v237, 1);
              uint64_t v238 = v237 + 1;
              if (!v84)
              {
                *(void *)(v186 + 16) = v238;
                swift_release();
                swift_bridgeObjectRelease();
                uint64_t v187 = v288;
                if (v288 == v280) {
                  goto LABEL_152;
                }
                goto LABEL_97;
              }
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
              goto LABEL_191;
            }
          }
          __int16 v205 = (void *)v191;
          uint64_t v206 = *(void *)v202;
          uint64_t v207 = *(unsigned __int16 *)(v202 + 20);
          uint64_t v208 = *(unsigned __int8 *)(v202 + 22);
          BOOL v209 = *(_DWORD *)(v202 + 16) == v335 && v207 == v334;
          BOOL v210 = v209 && v208 == v333;
          if (!v210 || v206 != (void)v336) {
            break;
          }
          swift_release();
          uint64_t v186 = (uint64_t)v327;
LABEL_115:
          swift_bridgeObjectRelease();
          uint64_t v187 = v288;
          uint64_t v62 = v322;
          uint64_t v57 = v316;
          if (v288 == v280)
          {
LABEL_152:
            sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
            sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
            sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
            sub_1A88A01C8(v323, type metadata accessor for Response);
            swift_bridgeObjectRelease();
            *(void *)&v346[520] = v186;
            uint64_t v61 = (uint64_t)v319;
LABEL_21:
            long long v67 = v293;
LABEL_22:
            if (*(uint64_t *)(*(void *)v359 + 24) <= 0) {
              goto LABEL_17;
            }
            goto LABEL_23;
          }
        }
        swift_beginAccess();
        uint64_t v212 = (const void *)(*(void *)(v206 + 24) + (v208 | (v207 << 8)) + v203);
        unint64_t v191 = (unint64_t)v205;
        int v213 = memcmp(v212, (char *)v205 + v332 + *v328, v204 - v203);
        uint64_t v186 = (uint64_t)v327;
        uint64_t v196 = v331;
        int v201 = v329;
        if (!v213)
        {
          swift_release();
          goto LABEL_115;
        }
        goto LABEL_100;
      }
      sub_1A88A0D74();
      swift_allocError();
      char v256 = 4;
LABEL_177:
      char *v255 = v256;
      swift_willThrow();
      sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
LABEL_178:
      uint64_t v254 = v323;
LABEL_179:
      sub_1A88A01C8(v254, type metadata accessor for Response);
LABEL_180:
      long long v64 = &qword_1E97429F8;
      uint64_t v65 = v61;
      break;
    case 3:
      v293 = v67;
      uint64_t v128 = sub_1A87AA04C((uint64_t)v341);
      uint64_t v129 = *(void *)(v128 + 8);
      uint64_t v131 = *(void *)(v128 + 16);
      uint64_t v130 = *(void *)(v128 + 24);
      unsigned int v132 = *(unsigned __int8 *)(v128 + 32);
      uint64_t v352 = *(void *)v128;
      uint64_t v353 = v129;
      uint64_t v354 = v131;
      uint64_t v355 = v130;
      char v356 = v132;
      uint64_t v133 = v61;
      uint64_t v134 = v304;
      sub_1A8511A9C(v133, v304, &qword_1E97429F8);
      if ((*v287)(v134, 1, v62) == 1)
      {
        sub_1A8511B00(v134, &qword_1E97429F8);
        if (v132 >> 6)
        {
          uint64_t v56 = v319;
          if (v132 >> 6 != 1)
          {
            LODWORD(v136) = 0;
            goto LABEL_19;
          }
          char v135 = v132 | (v130 < 0) | (v130 > 0xFFFFFFFFLL);
          if (v132 & 1 | (v130 < 0) | (v130 > 0xFFFFFFFFLL)) {
            uint64_t v136 = 0;
          }
          else {
            uint64_t v136 = v130;
          }
          if (v132 & 1 | (v130 < 0) | (v130 > 0xFFFFFFFFLL)) {
            uint64_t v137 = 0;
          }
          else {
            uint64_t v137 = v136;
          }
          if (v132) {
            goto LABEL_18;
          }
        }
        else
        {
          char v135 = v131 | (v129 < 0) | (v129 > 0xFFFFFFFFLL);
          if (v131 & 1 | (v129 < 0) | (v129 > 0xFFFFFFFFLL)) {
            uint64_t v136 = 0;
          }
          else {
            uint64_t v136 = v129;
          }
          if (v131 & 1 | (v129 < 0) | (v129 > 0xFFFFFFFFLL)) {
            uint64_t v137 = 0;
          }
          else {
            uint64_t v137 = v136;
          }
          uint64_t v56 = v319;
          if (v131)
          {
LABEL_18:
            if (v135)
            {
LABEL_19:
              char v71 = 1;
LABEL_20:
              uint64_t v72 = StreamingKind.sectionSpecifier.getter();
              uint64_t v74 = v73;
              char v76 = v75;
              sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
              sub_1A88A01C8(v323, type metadata accessor for Response);
              sub_1A8511B00((uint64_t)v56, &qword_1E97429F8);
              uint64_t v77 = v322;
              uint64_t v78 = v299;
              (*v281)(&v299[*(int *)(v322 + 24)], 1, 1, v315);
              *(void *)uint64_t v78 = v72;
              *((void *)v78 + 1) = v74;
              v78[16] = v76;
              uint64_t v62 = v77;
              *((_DWORD *)v78 + 5) = v136;
              v78[24] = v71;
              v290(v78, 0, 1, v77);
              uint64_t v79 = (uint64_t)v78;
              uint64_t v61 = (uint64_t)v319;
              sub_1A8529F8C(v79, (uint64_t)v319, &qword_1E97429F8);
              uint64_t v57 = v316;
              goto LABEL_21;
            }
            goto LABEL_182;
          }
          uint64_t v130 = v129;
        }
        if ((v135 & 1) == 0 && v130 == v137)
        {
          char v71 = 0;
          goto LABEL_20;
        }
LABEL_182:
        sub_1A88A0D74();
        swift_allocError();
        unsigned char *v261 = 9;
        swift_willThrow();
        sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
        sub_1A88A01C8(v323, type metadata accessor for Response);
        long long v64 = &qword_1E97429F8;
        goto LABEL_12;
      }
      sub_1A8511B00(v134, &qword_1E97429F8);
      sub_1A88A0D74();
      swift_allocError();
      *unint64_t v258 = 6;
      swift_willThrow();
      sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
      sub_1A88A01C8(v323, type metadata accessor for Response);
      uint64_t v65 = (uint64_t)v319;
LABEL_174:
      long long v64 = &qword_1E97429F8;
      break;
    case 4:
      v293 = v67;
      sub_1A87AA04C((uint64_t)v341);
      uint64_t v138 = v306;
      sub_1A8511A9C(v61, v306, &qword_1E97429F8);
      if ((*v287)(v138, 1, v62) == 1)
      {
        sub_1A8892104((uint64_t)v342, (uint64_t)v340);
        sub_1A87AA04C((uint64_t)v340);
        swift_retain();
        sub_1A8511B00(v138, &qword_1E97429F8);
        sub_1A88A0D74();
        swift_allocError();
        *unint64_t v259 = 7;
        swift_willThrow();
        sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
        sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
        sub_1A88A01C8(v323, type metadata accessor for Response);
        uint64_t v65 = (uint64_t)v319;
        long long v64 = &qword_1E97429F8;
        break;
      }
      uint64_t v139 = v138;
      uint64_t v140 = v310;
      sub_1A889B634(v139, v310, type metadata accessor for StreamedBodySection);
      uint64_t v141 = v140 + *(int *)(v62 + 24);
      uint64_t v142 = v302;
      sub_1A8511A9C(v141, v302, (uint64_t *)&unk_1E9743AC8);
      uint64_t v143 = v315;
      *(void *)&long long v336 = *v286;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v336)(v142, 1, v315) == 1)
      {
        sub_1A8892104((uint64_t)v342, (uint64_t)v345);
        sub_1A87AA04C((uint64_t)v345);
        swift_retain();
        sub_1A8511B00(v142, (uint64_t *)&unk_1E9743AC8);
        uint64_t v144 = (uint64_t)v297;
        sub_1A8A75DD8();
        (*v281)((char *)v144, 0, 1, v143);
        sub_1A887BF50(v144, v141, (uint64_t *)&unk_1E9743AC8);
      }
      else
      {
        sub_1A8892104((uint64_t)v342, (uint64_t)v345);
        sub_1A87AA04C((uint64_t)v345);
        swift_retain();
        sub_1A8511B00(v142, (uint64_t *)&unk_1E9743AC8);
      }
      swift_beginAccess();
      uint64_t v151 = v303;
      sub_1A8A75DB8();
      uint64_t v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v336;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v336)(v141, 1, v143) == 1) {
        goto LABEL_190;
      }
      sub_1A8A75DE8();
      uint64_t v153 = *v282;
      (*v282)(v151, v143);
      uint64_t v154 = v141;
      uint64_t v155 = v301;
      sub_1A8511A9C(v154, v301, (uint64_t *)&unk_1E9743AC8);
      int v156 = v152(v155, 1, v143);
      uint64_t v157 = (uint64_t)v319;
      uint64_t v62 = v322;
      uint64_t v57 = v316;
      if (v156 == 1)
      {
LABEL_191:
        __break(1u);
LABEL_192:
        sub_1A8A78698();
        __break(1u);
        JUMPOUT(0x1A88990A8);
      }
      uint64_t v158 = v155;
      uint64_t v159 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      v153((char *)v158, v143);
      if (v159 <= 999999)
      {
        sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
        sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
        sub_1A88A01C8(v323, type metadata accessor for Response);
        uint64_t v61 = v157;
        sub_1A8511B00(v157, &qword_1E97429F8);
        uint64_t v160 = v310;
        sub_1A88A0CE4(v310, v157, type metadata accessor for StreamedBodySection);
        v290((char *)v157, 0, 1, v62);
        sub_1A88A01C8(v160, type metadata accessor for StreamedBodySection);
        goto LABEL_21;
      }
      sub_1A88A0D74();
      swift_allocError();
      *uint64_t v260 = 5;
      swift_willThrow();
      sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
      sub_1A88A0F30((uint64_t)v342, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
      sub_1A88A01C8(v323, type metadata accessor for Response);
      sub_1A8511B00(v157, &qword_1E97429F8);
      sub_1A88A01C8(v310, type metadata accessor for StreamedBodySection);
      goto LABEL_14;
    case 5:
      uint64_t v114 = v305;
      sub_1A8511A9C(v61, v305, &qword_1E97429F8);
      if ((*v287)(v114, 1, v62) != 1)
      {
        v293 = v67;
        sub_1A8511B00(v61, &qword_1E97429F8);
        uint64_t v115 = v311;
        sub_1A889B634(v114, v311, type metadata accessor for StreamedBodySection);
        v290((char *)v61, 1, 1, v62);
        uint64_t v116 = v312;
        sub_1A88A0CE4(v115, v312, type metadata accessor for StreamedBodySection);
        uint64_t v117 = *(void *)v116;
        uint64_t v118 = *(void *)(v116 + 8);
        uint64_t v119 = v62;
        unsigned __int8 v120 = *(unsigned char *)(v116 + 16);
        int v121 = *(_DWORD *)(v116 + 20);
        LODWORD(v335) = *(unsigned __int8 *)(v116 + 24);
        sub_1A8511A9C(v116 + *(int *)(v119 + 24), v102, (uint64_t *)&unk_1E9743AC8);
        uint64_t v122 = v102;
        uint64_t v123 = v102;
        uint64_t v124 = v315;
        int v125 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*v286)(v122, 1, v315);
        LODWORD(v336) = v121;
        if (v125 == 1)
        {
          uint64_t v126 = type metadata accessor for MessageData.BodyData();
          uint64_t v127 = (uint64_t)v300;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v300, 1, 1, v126);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8645714(v118, v120);
        }
        else
        {
          uint64_t v145 = v298;
          (*v278)(v298, v123, v124);
          uint64_t v127 = (uint64_t)v300;
          (*v277)(v300, v145, v124);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8645714(v118, v120);
          (*v282)(v145, v124);
          uint64_t v126 = type metadata accessor for MessageData.BodyData();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v127, 0, 1, v126);
        }
        uint64_t v146 = (uint64_t)v307;
        uint64_t v147 = (uint64_t)&v307[*(int *)(v309 + 24)];
        type metadata accessor for MessageData.BodyData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v147, 1, 1, v126);
        *(void *)uint64_t v146 = v117;
        *(void *)(v146 + 8) = v118;
        *(unsigned char *)(v146 + 16) = v120;
        *(_DWORD *)(v146 + 20) = v336;
        *(unsigned char *)(v146 + 24) = v335;
        sub_1A887BF50(v127, v147, &qword_1E9742930);
        sub_1A889B634(v146, v313, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        sub_1A88A01C8(v312, type metadata accessor for StreamedBodySection);
        unint64_t v148 = *(void *)&v346[200];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v148 = sub_1A88936BC(0, *(void *)(v148 + 16) + 1, 1, v148);
        }
        uint64_t v61 = (uint64_t)v319;
        uint64_t v62 = v322;
        uint64_t v57 = v316;
        long long v67 = v293;
        unint64_t v150 = *(void *)(v148 + 16);
        unint64_t v149 = *(void *)(v148 + 24);
        if (v150 >= v149 >> 1) {
          unint64_t v148 = sub_1A88936BC(v149 > 1, v150 + 1, 1, v148);
        }
        *(void *)(v148 + 16) = v150 + 1;
        sub_1A889B634(v313, v148+ ((*(unsigned __int8 *)(v308 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v308 + 80))+ *(void *)(v308 + 72) * v150, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        *(void *)&v346[200] = v148;
        sub_1A88A01C8(v311, type metadata accessor for StreamedBodySection);
LABEL_66:
        sub_1A88A01C8(v323, type metadata accessor for Response);
        goto LABEL_22;
      }
      sub_1A8511B00(v114, &qword_1E97429F8);
      sub_1A88A0D74();
      swift_allocError();
      unsigned char *v257 = 8;
      swift_willThrow();
      sub_1A88A01C8(v323, type metadata accessor for Response);
      uint64_t v65 = v61;
      goto LABEL_174;
    case 6:
      sub_1A88A01C8(v323, type metadata accessor for Response);
      sub_1A8511B00(v61, &qword_1E97429F8);
      memcpy(v294, v346, 0x248uLL);
      type metadata accessor for UntaggedResponse(0);
      swift_storeEnumTagMultiPayload();
      type metadata accessor for Response(0);
      return swift_storeEnumTagMultiPayload();
    default:
      sub_1A87AA04C((uint64_t)v341);
      sub_1A88A0D74();
      swift_allocError();
      char v256 = 2;
      goto LABEL_177;
  }
LABEL_13:
  sub_1A8511B00(v65, v64);
LABEL_14:
  memcpy(v345, v346, sizeof(v345));
  return sub_1A856B170((uint64_t)v345);
}

uint64_t sub_1A88990F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = *v1;
  uint64_t v5 = *(void *)(*v1 + 24);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (*(void *)(*v1 + 16) < v6 || (isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1A889B28C(v6);
    }
    uint64_t v8 = *(void *)(type metadata accessor for Response(0) - 8);
    return sub_1A889BD18(*v1 + 16, *v1 + ((*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v3);
  }
  return result;
}

BOOL ServerResponseTranscoder.isEmpty.getter(uint64_t a1)
{
  return *(void *)(a1 + 24) == 0;
}

uint64_t ServerResponseFramingParser.framingParser.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A889BC60(v1, a1);
}

uint64_t ServerResponseFramingParser.framingParser.setter(uint64_t a1)
{
  return sub_1A889BCBC(a1, v1);
}

double (*ServerResponseFramingParser.framingParser.modify())(void)
{
  return nullsub_1;
}

uint64_t ServerResponseFramingParser.byteCountNeededToCompleteFrame.getter()
{
  return *(void *)(v0 + 168);
}

double ServerResponseFramingParser.init()@<D0>(uint64_t a1@<X8>)
{
  FramingParser.init(bufferSizeLimit:)(6000000, (uint64_t)v20);
  long long v18 = v20[1];
  long long v19 = v20[0];
  uint64_t v2 = v21;
  int v3 = v23;
  __int16 v4 = v24;
  char v5 = v25;
  uint64_t v6 = v26;
  sub_1A889D670((uint64_t)v27);
  uint64_t v7 = v28;
  char v8 = v29;
  __int16 v9 = v32;
  int v10 = v31;
  char v34 = 1;
  double result = v22;
  char v12 = v33;
  long long v13 = v27[0];
  long long v14 = v27[1];
  long long v15 = v27[2];
  long long v16 = v27[3];
  long long v17 = v30;
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v18;
  *(void *)(a1 + 32) = v2;
  *(double *)(a1 + 40) = result;
  *(_DWORD *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 52) = v4;
  *(unsigned char *)(a1 + 54) = v5;
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = v13;
  *(_OWORD *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 96) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v7;
  *(unsigned char *)(a1 + 136) = v8;
  *(_OWORD *)(a1 + 144) = v17;
  *(unsigned char *)(a1 + 166) = v12;
  *(_WORD *)(a1 + 164) = v9;
  *(_DWORD *)(a1 + 160) = v10;
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = v34;
  *(void *)(a1 + 184) = MEMORY[0x1E4FBC860];
  return result;
}

BOOL ServerResponseFramingParser.isEmpty.getter()
{
  return *(_DWORD *)(v0 + 44) == *(_DWORD *)(v0 + 40) && *(void *)(*(void *)(v0 + 184) + 16) == 0;
}

uint64_t ServerResponseFramingParser.count.getter()
{
  return (*(_DWORD *)(v0 + 44) - *(_DWORD *)(v0 + 40));
}

uint64_t sub_1A889934C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v6 = sub_1A8A768F8();
  uint64_t result = sub_1A88874E8(v6, a1, a2);
  if (v9)
  {
    uint64_t v10 = v8;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(a3 + 40);
    BOOL v12 = __CFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (!v12)
    {
      *(void *)(a3 + 40) = v13;
      return v10;
    }
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(a3 + 48);
    BOOL v12 = __CFADD__(v14, 1);
    uint64_t v15 = v14 + 1;
    if (!v12)
    {
      *(void *)(a3 + 48) = v15;
      sub_1A88875D0(v6, a1, a2);
      return a1;
    }
  }
  __break(1u);
  return result;
}

uint64_t ServerResponseFramingParser.append(_:)()
{
  return sub_1A8A75D78();
}

uint64_t sub_1A8899454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServerResponseFramingParser.Frame(0);
  MEMORY[0x1F4188790](v4);
  if (a1) {
    uint64_t v5 = a1 + a2;
  }
  else {
    uint64_t v5 = 0;
  }
  FramingParser.appendAndFrameBytes(_:)(a1, v5);
  sub_1A8899638(v6);
  return swift_bridgeObjectRelease();
}

void sub_1A8899638(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ServerResponseFramingParser.Frame(0);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  MEMORY[0x1F4188790](v3);
  char v29 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v6 = 0;
    v23[1] = a1;
    uint64_t v7 = (uint64_t *)(a1 + 56);
    long long v24 = xmmword_1A8AD91C0;
    do
    {
      uint64_t v9 = *(v7 - 3);
      unint64_t v10 = *(v7 - 2);
      unint64_t v12 = *(v7 - 1);
      uint64_t v11 = *v7;
      v7 += 4;
      switch(v12 >> 62)
      {
        case 1uLL:
          *(void *)(v1 + 168) = v9;
          *(unsigned char *)(v1 + 176) = 0;
          break;
        case 2uLL:
          uint64_t v30 = v9;
          unint64_t v31 = v10;
          int v32 = v12;
          __int16 v33 = WORD2(v12);
          char v34 = BYTE6(v12);
          sub_1A8899B54(&v30);
          BOOL v8 = v11 < 0;
          *(void *)(v1 + 168) = v11 & ~(v11 >> 63);
          goto LABEL_4;
        case 3uLL:
          unint64_t v27 = HIWORD(v12);
          swift_beginAccess();
          uint64_t v13 = *(void *)(v9 + 24) + ((v12 >> 24) & 0xFFFF00 | BYTE6(v12));
          uint64_t v14 = v13 + v10;
          uint64_t v15 = v13 + HIDWORD(v10);
          sub_1A871DC20(v9, v10, v12);
          swift_retain();
          sub_1A889A220(v14, v15);
          sub_1A88A0C90();
          uint64_t v16 = swift_allocError();
          *(_OWORD *)uint64_t v17 = v24;
          *(unsigned char *)(v17 + 16) = 3;
          long long v18 = v29;
          *char v29 = v16;
          v18[1] = v9;
          v18[2] = v10;
          *((unsigned char *)v18 + 30) = v27;
          *((_WORD *)v18 + 14) = WORD2(v12);
          *((_DWORD *)v18 + 6) = v12;
          swift_storeEnumTagMultiPayload();
          unint64_t v19 = *(void *)(v1 + 184);
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v28 = v6;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v19 = sub_1A88936F0(0, *(void *)(v19 + 16) + 1, 1, v19);
          }
          unint64_t v22 = *(void *)(v19 + 16);
          unint64_t v21 = *(void *)(v19 + 24);
          if (v22 >= v21 >> 1) {
            unint64_t v19 = sub_1A88936F0(v21 > 1, v22 + 1, 1, v19);
          }
          *(void *)(v19 + 16) = v22 + 1;
          sub_1A889B634((uint64_t)v29, v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, type metadata accessor for ServerResponseFramingParser.Frame);
          sub_1A871DC38(v9, v10, v12);
          sub_1A871DC38(v9, v10, v12);
          *(void *)(v1 + 184) = v19;
          uint64_t v6 = v28;
          break;
        default:
          uint64_t v30 = v9;
          unint64_t v31 = v10;
          int v32 = v12;
          __int16 v33 = WORD2(v12);
          char v34 = BYTE6(v12);
          sub_1A8899B54(&v30);
          *(void *)(v1 + 168) = 0;
          BOOL v8 = 1;
LABEL_4:
          *(unsigned char *)(v1 + 176) = v8;
          break;
      }
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t ServerResponseFramingParser.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServerResponseFramingParser.Frame(0);
  MEMORY[0x1F4188790](v4);
  FramingParser.appendAndFrameBytes(_:)(a1, a2);
  sub_1A8899638(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8899B54(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9741E28);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v65 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for ResponseOrContinuationRequest(0);
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v54 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9748198);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ServerResponseFramingParser.Frame(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v53 - v16;
  uint64_t v18 = *a1;
  uint64_t v19 = *((unsigned int *)a1 + 2);
  uint64_t v20 = *((unsigned int *)a1 + 3);
  uint64_t v21 = *((unsigned int *)a1 + 4);
  uint64_t v22 = *((unsigned __int16 *)a1 + 10);
  uint64_t v23 = *((unsigned __int8 *)a1 + 22);
  uint64_t v24 = *(void *)(v2 + 144);
  uint64_t v57 = v2 + 144;
  if (v24)
  {
    unsigned __int8 v25 = *(unsigned char *)(v2 + 166);
    unsigned __int16 v26 = *(_WORD *)(v2 + 164);
    unsigned int v27 = *(_DWORD *)(v2 + 160);
    uint64_t v28 = *(void *)(v2 + 152);
    uint64_t v73 = v24;
    uint64_t v74 = v28;
    unsigned int v75 = v27;
    unsigned __int16 v76 = v26;
    unsigned __int8 v77 = v25;
    uint64_t v67 = v18;
    int v68 = v19;
    int v69 = v20;
    int v70 = v21;
    __int16 v71 = v22;
    char v72 = v23;
    ByteBuffer.writeBuffer(_:)();
    uint64_t v18 = v73;
    uint64_t v29 = v74;
    unint64_t v30 = v75 | ((unint64_t)v76 << 32) | ((unint64_t)v77 << 48);
  }
  else
  {
    uint64_t v29 = v19 | (v20 << 32);
    unint64_t v30 = v21 | (v22 << 32) | (v23 << 48);
    swift_retain();
  }
  *(void *)(v2 + 144) = v18;
  *(void *)(v2 + 152) = v29;
  *(_DWORD *)(v2 + 160) = v30;
  *(unsigned char *)(v2 + 166) = BYTE6(v30);
  *(_WORD *)(v2 + 164) = WORD2(v30);
  if (v18)
  {
    uint64_t v63 = v57 - 80;
    long long v64 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v55 = (unsigned int (**)(void *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v61 = v2;
    uint64_t v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v66 = v11;
    uint64_t v58 = v12;
    long long v59 = v17;
    uint64_t v60 = v14;
    while (1)
    {
      uint64_t v31 = (uint64_t)v10;
      int v32 = *(unsigned __int16 *)(v2 + 164);
      int v33 = v32 | (*(unsigned __int8 *)(v2 + 166) << 16);
      uint64_t v34 = *(unsigned int *)(v2 + 160);
      uint64_t v35 = *(void *)(v2 + 152);
      uint64_t v73 = v18;
      uint64_t v74 = v35;
      unsigned int v75 = v34;
      unsigned __int16 v76 = v32;
      unsigned __int8 v77 = BYTE2(v33);
      swift_retain_n();
      uint64_t v36 = (uint64_t)v65;
      ResponseParser.parseResponseStream(buffer:)((uint64_t)&v73, v65);
      if ((*v55)((void *)v36, 1, v56) == 1)
      {
        sub_1A8511B00(v36, (uint64_t *)&unk_1E9741E28);
        uint64_t v37 = *v64;
        unint64_t v10 = (char *)v31;
        (*v64)(v31, 1, 1, v66);
        uint64_t v38 = v73;
        if (HIDWORD(v74) == v74)
        {
          uint64_t v39 = 0;
          unint64_t v40 = 0;
          unint64_t v41 = 0;
        }
        else
        {
          unint64_t v40 = v74 | ((unint64_t)HIDWORD(v74) << 32);
          unint64_t v41 = v75 | ((unint64_t)v76 << 32) | ((unint64_t)v77 << 48);
          swift_retain();
          uint64_t v39 = v38;
        }
        uint64_t v46 = v61;
        swift_release();
        swift_release();
        *(void *)(v46 + 144) = v39;
        *(void *)(v46 + 152) = v40;
        uint64_t v2 = v46;
        *(unsigned char *)(v46 + 166) = BYTE6(v41);
        *(_WORD *)(v46 + 164) = WORD2(v41);
        *(_DWORD *)(v46 + 160) = v41;
        swift_release();
        uint64_t v43 = v66;
        uint64_t v48 = (uint64_t)v59;
        uint64_t v47 = (uint64_t)v60;
      }
      else
      {
        uint64_t v42 = v54;
        sub_1A889B634(v36, v54, type metadata accessor for ResponseOrContinuationRequest);
        unint64_t v10 = (char *)v31;
        sub_1A889B634(v42, v31, type metadata accessor for ResponseOrContinuationRequest);
        uint64_t v43 = v66;
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = *v64;
        (*v64)((uint64_t)v10, 0, 1, v43);
        swift_release_n();
        if (v74 == HIDWORD(v35))
        {
          swift_release();
          uint64_t v18 = 0;
          unint64_t v44 = 0;
          unint64_t v45 = 0;
        }
        else
        {
          unint64_t v45 = v34 & 0xFF000000FFFFFFFFLL | ((*(void *)&v33 & 0xFFFFFFLL) << 32);
          unint64_t v44 = v35 & 0xFFFFFFFF00000000 | v74;
        }
        uint64_t v47 = (uint64_t)v60;
        uint64_t v2 = v61;
        uint64_t v48 = (uint64_t)v59;
        *(void *)(v61 + 144) = v18;
        *(void *)(v2 + 152) = v44;
        *(_DWORD *)(v2 + 160) = v45;
        *(unsigned char *)(v2 + 166) = BYTE6(v45);
        *(_WORD *)(v2 + 164) = WORD2(v45);
      }
      if ((*v62)(v10, 1, v43) == 1) {
        break;
      }
      sub_1A889B634((uint64_t)v10, v48, type metadata accessor for ServerResponseFramingParser.Frame);
      sub_1A88A0CE4(v48, v47, type metadata accessor for ServerResponseFramingParser.Frame);
      unint64_t v49 = *(void *)(v2 + 184);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v49 = sub_1A88936F0(0, *(void *)(v49 + 16) + 1, 1, v49);
      }
      unint64_t v51 = *(void *)(v49 + 16);
      unint64_t v50 = *(void *)(v49 + 24);
      if (v51 >= v50 >> 1) {
        unint64_t v49 = sub_1A88936F0(v50 > 1, v51 + 1, 1, v49);
      }
      *(void *)(v49 + 16) = v51 + 1;
      sub_1A889B634(v47, v49+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v51, type metadata accessor for ServerResponseFramingParser.Frame);
      *(void *)(v2 + 184) = v49;
      sub_1A88A01C8(v48, type metadata accessor for ServerResponseFramingParser.Frame);
      uint64_t v18 = *(void *)(v2 + 144);
      if (!v18)
      {
        v37((uint64_t)v10, 1, 1, v43);
        return sub_1A8511B00((uint64_t)v10, &qword_1E9748198);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  return sub_1A8511B00((uint64_t)v10, &qword_1E9748198);
}

uint64_t sub_1A889A220(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A8A754D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E974E060 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer_0(v4, (uint64_t)qword_1E979E2E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = sub_1A8A754B8();
  os_log_type_t v10 = sub_1A8A77458();
  if (!os_log_type_enabled(v9, v10)) {
    goto LABEL_10;
  }
  uint64_t v11 = (_DWORD *)swift_slowAlloc();
  *uint64_t v11 = 68157955;
  uint64_t v12 = a2 - a1;
  if (!a1) {
    uint64_t v12 = 0;
  }
  if (v12 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (v12 > 0x7FFFFFFF) {
    goto LABEL_12;
  }
  uint64_t v13 = v11;
  LODWORD(v15[0]) = v12;
  sub_1A8A77958();
  *((_WORD *)v13 + 4) = 2101;
  if (a1)
  {
    v15[0] = a1;
    sub_1A8A77958();
    _os_log_impl(&dword_1A7EFF000, v9, v10, "Received invalid data frame from server: %{sensitive}.*P", (uint8_t *)v13, 0x12u);
    MEMORY[0x1AD0E4D00](v13, -1, -1);
LABEL_10:

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t result = sub_1A8A780E8();
  __break(1u);
  return result;
}

uint64_t ServerResponseFramingParser.popAllFrames()()
{
  uint64_t result = *(void *)(v0 + 184);
  *(void *)(v0 + 184) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1A889A4D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ResponsePayload();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A88A0CE4(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A8892160((uint64_t)v6, (uint64_t)v35);
      sub_1A8892160((uint64_t)v35, (uint64_t)v36);
      switch(sub_1A878BC38((uint64_t)v36))
      {
        case 1u:
        case 2u:
          uint64_t v18 = sub_1A878D2C8((uint64_t)v36);
          int v19 = *(_DWORD *)(v18 + 16);
          char v20 = *(unsigned char *)(v18 + 20);
          uint64_t v21 = *(void *)(v18 + 24);
          long long v22 = *(_OWORD *)(v18 + 32);
          *(_OWORD *)a1 = *(_OWORD *)v18;
          *(_DWORD *)(a1 + 16) = v19;
          *(unsigned char *)(a1 + 20) = v20;
          *(void *)(a1 + 24) = v21;
          *(_OWORD *)(a1 + 32) = v22;
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
        case 3u:
          *(void *)a1 = *(void *)sub_1A878D2C8((uint64_t)v36);
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
        case 4u:
          uint64_t v13 = sub_1A878D2C8((uint64_t)v36);
          char v14 = *(unsigned char *)(v13 + 32);
          char v15 = *(unsigned char *)(v13 + 33);
          uint64_t v16 = *(void *)(v13 + 40);
          long long v17 = *(_OWORD *)(v13 + 16);
          *(_OWORD *)a1 = *(_OWORD *)v13;
          *(_OWORD *)(a1 + 16) = v17;
          *(unsigned char *)(a1 + 32) = v14;
          *(unsigned char *)(a1 + 33) = v15;
          *(void *)(a1 + 40) = v16;
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
        case 5u:
          uint64_t v24 = (long long *)sub_1A878D2C8((uint64_t)v36);
          long long v25 = v24[3];
          long long v27 = *v24;
          long long v26 = v24[1];
          *(_OWORD *)(a1 + 32) = v24[2];
          *(_OWORD *)(a1 + 48) = v25;
          *(_OWORD *)a1 = v27;
          *(_OWORD *)(a1 + 16) = v26;
          long long v29 = v24[5];
          long long v28 = v24[6];
          long long v30 = v24[4];
          *(_OWORD *)(a1 + 105) = *(long long *)((char *)v24 + 105);
          *(_OWORD *)(a1 + 80) = v29;
          *(_OWORD *)(a1 + 96) = v28;
          *(_OWORD *)(a1 + 64) = v30;
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
        case 6u:
          unint64_t v23 = *(void *)sub_1A878D2C8((uint64_t)v36);
          if (HIDWORD(v23)) {
            goto LABEL_18;
          }
          goto LABEL_20;
        case 7u:
          unint64_t v23 = *(void *)sub_1A878D2C8((uint64_t)v36);
          if (HIDWORD(v23))
          {
LABEL_18:
            sub_1A88A0C90();
            swift_allocError();
            *(void *)uint64_t v31 = v23;
            *(void *)(v31 + 8) = 0;
            *(unsigned char *)(v31 + 16) = 2;
            return swift_willThrow();
          }
LABEL_20:
          *(_DWORD *)a1 = v23;
          type metadata accessor for UntaggedResponse(0);
          break;
        case 8u:
          uint64_t v33 = sub_1A878D2C8((uint64_t)v36);
          uint64_t v34 = *(void *)(v33 + 16);
          *(_OWORD *)a1 = *(_OWORD *)v33;
          *(void *)(a1 + 16) = v34;
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
        case 9u:
          sub_1A878D2C8((uint64_t)v36);
          sub_1A88A0FD8((uint64_t)v35);
          goto LABEL_25;
        default:
          uint64_t v11 = (uint64_t *)sub_1A878D2C8((uint64_t)v36);
          uint64_t v12 = sub_1A889D5D8(*v11);
          sub_1A88A0FD8((uint64_t)v35);
          *(void *)a1 = v12;
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
      }
      return swift_storeEnumTagMultiPayload();
    case 2u:
      type metadata accessor for MessageData();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 2u:
          sub_1A8529F8C((uint64_t)v6, a1, &qword_1E9741C28);
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
        case 3u:
        case 4u:
          goto LABEL_26;
        default:
          *(_DWORD *)a1 = *(_DWORD *)v6;
          type metadata accessor for UntaggedResponse(0);
          return swift_storeEnumTagMultiPayload();
      }
    case 3u:
    case 4u:
      *(void *)a1 = *(void *)v6;
      type metadata accessor for UntaggedResponse(0);
      return swift_storeEnumTagMultiPayload();
    case 5u:
      *(void *)a1 = *(void *)v6;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(v6 + 8);
      type metadata accessor for UntaggedResponse(0);
      return swift_storeEnumTagMultiPayload();
    case 6u:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_25;
    case 8u:
      sub_1A879A770(*(void *)v6, *((void *)v6 + 1), *((void *)v6 + 2));
      while (1)
      {
LABEL_25:
        sub_1A8A780F8();
        __break(1u);
LABEL_26:
        swift_bridgeObjectRelease();
      }
    case 9u:
      uint64_t v9 = *((void *)v6 + 2);
      char v10 = v6[24];
      *(_OWORD *)a1 = *(_OWORD *)v6;
      *(void *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 24) = v10;
      type metadata accessor for UntaggedResponse(0);
      break;
    default:
      uint64_t v7 = *((void *)v6 + 1);
      uint64_t v8 = *((void *)v6 + 2);
      *(void *)a1 = *(void *)v6;
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v8;
      type metadata accessor for UntaggedResponse(0);
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A889AB78@<X0>(uint64_t a1@<X8>)
{
  sub_1A885E63C((uint64_t)(v1 + 2), (uint64_t)v13);
  sub_1A885E63C((uint64_t)v13, (uint64_t)v14);
  char v3 = v15;
  unint64_t v4 = v14[0];
  uint64_t v5 = v14[1];
  uint64_t v6 = v14[2];
  uint64_t v8 = *v1;
  unint64_t v7 = v1[1];
  if (v15)
  {
    sub_1A88A103C((uint64_t)v13);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88A103C((uint64_t)v13);
  }
  uint64_t v9 = sub_1A88A2F2C(v8, v7);
  if (v10)
  {
    sub_1A88A0C90();
    swift_allocError();
    *(void *)uint64_t v12 = v8;
    *(void *)(v12 + 8) = v7;
    *(unsigned char *)(v12 + 16) = 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_willThrow();
    sub_1A887B2A4(v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(unsigned char *)a1 = (_BYTE)v9;
    *(_DWORD *)(a1 + 4) = HIDWORD(v9);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = v3;
    type metadata accessor for Response(0);
    return swift_storeEnumTagMultiPayload();
  }
}

unint64_t sub_1A889ACAC@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Response(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A88A0CE4(a1, (uint64_t)v6, type metadata accessor for Response);
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      sub_1A8892104((uint64_t)v6, (uint64_t)v20);
      sub_1A8892104((uint64_t)v20, (uint64_t)&v21);
      unint64_t result = sub_1A87A9F60((uint64_t)&v21);
      switch((int)result)
      {
        case 2:
          sub_1A87AA04C((uint64_t)&v21);
          unint64_t result = sub_1A88A0F30((uint64_t)v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
          unint64_t v8 = 0xD000000000000016;
          uint64_t v9 = "fetch(simpleAttribute)";
          goto LABEL_11;
        case 3:
          sub_1A87AA04C((uint64_t)&v21);
          unint64_t result = sub_1A88A0F30((uint64_t)v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
          unint64_t v8 = 0xD000000000000015;
          uint64_t v9 = "fetch(streamingBegin)";
          goto LABEL_11;
        case 4:
          sub_1A87AA04C((uint64_t)&v21);
          unint64_t result = sub_1A88A0F30((uint64_t)v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1A889EECC);
          unint64_t v8 = 0xD000000000000015;
          uint64_t v9 = "fetch(streamingBytes)";
          goto LABEL_11;
        case 5:
          unint64_t v8 = 0xD000000000000013;
          uint64_t v9 = "fetch(streamingEnd)";
          goto LABEL_11;
        case 6:
          unint64_t v8 = 0x6966286863746566;
          unint64_t v10 = 0xED0000296873696ELL;
          break;
        default:
          unint64_t result = sub_1A87AA04C((uint64_t)&v21);
          unint64_t v8 = 0x7473286863746566;
          unint64_t v10 = 0xEC00000029747261;
          break;
      }
      goto LABEL_16;
    case 2:
      unint64_t v11 = *((void *)v6 + 1);
      unint64_t v13 = *((void *)v6 + 2);
      uint64_t v12 = *((void *)v6 + 3);
      uint64_t v14 = *((void *)v6 + 4);
      int v15 = v6[40];
      if (v6[40])
      {
        unint64_t v21 = *(void *)v6;
        unint64_t v22 = v11;
        if (v15 == 1)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8A767E8();
          swift_bridgeObjectRelease();
          unint64_t v16 = v13;
          uint64_t v17 = v12;
          uint64_t v18 = v14;
          unsigned __int8 v19 = 1;
        }
        else
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8A767E8();
          swift_bridgeObjectRelease();
          unint64_t v16 = v13;
          uint64_t v17 = v12;
          uint64_t v18 = v14;
          unsigned __int8 v19 = 2;
        }
      }
      else
      {
        unint64_t v21 = *(void *)v6;
        unint64_t v22 = v11;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A767E8();
        swift_bridgeObjectRelease();
        unint64_t v16 = v13;
        uint64_t v17 = v12;
        uint64_t v18 = v14;
        unsigned __int8 v19 = 0;
      }
      unint64_t result = sub_1A887B25C(v16, v17, v18, v19);
      unint64_t v8 = v21;
      unint64_t v10 = v22;
      goto LABEL_16;
    case 3:
      sub_1A887B2A4(*(void *)v6);
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v8 = 0x6C61746166;
      unint64_t v10 = 0xE500000000000000;
      goto LABEL_16;
    case 4:
      unint64_t result = swift_release();
      unint64_t v8 = 0xD000000000000017;
      uint64_t v9 = "authenticationChallenge";
LABEL_11:
      unint64_t v10 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      goto LABEL_16;
    case 5:
      unint64_t v8 = 0x72617453656C6469;
      unint64_t v10 = 0xEB00000000646574;
LABEL_16:
      *a2 = v8;
      a2[1] = v10;
      break;
    default:
      type metadata accessor for ResponsePayload();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1A8892160((uint64_t)v6, (uint64_t)&v21);
          unint64_t result = sub_1A88A0FD8((uint64_t)&v21);
          unint64_t v8 = 0xD000000000000015;
          uint64_t v9 = "untagged(mailboxData)";
          goto LABEL_11;
        case 2u:
          *a2 = 0xD000000000000015;
          a2[1] = 0x80000001A8B3BF30;
          unint64_t result = sub_1A88A01C8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
          break;
        case 3u:
          unint64_t result = swift_bridgeObjectRelease();
          unint64_t v8 = 0xD000000000000018;
          uint64_t v9 = "untagged(capabilityData)";
          goto LABEL_11;
        case 4u:
          unint64_t result = swift_bridgeObjectRelease();
          unint64_t v8 = 0xD000000000000014;
          uint64_t v9 = "untagged(enableData)";
          goto LABEL_11;
        case 5u:
          swift_release();
          swift_release();
          unint64_t result = swift_release();
          unint64_t v8 = 0x6465676761746E75;
          unint64_t v10 = 0xEC00000029646928;
          goto LABEL_16;
        case 6u:
          swift_release();
          unint64_t result = swift_bridgeObjectRelease();
          unint64_t v8 = 0xD000000000000013;
          uint64_t v9 = "untagged(quotaRoot)";
          goto LABEL_11;
        case 7u:
          swift_bridgeObjectRelease();
          unint64_t result = swift_release();
          unint64_t v8 = 0x6465676761746E75;
          unint64_t v10 = 0xEF2961746F757128;
          goto LABEL_16;
        case 8u:
          unint64_t result = sub_1A879A770(*(void *)v6, *((void *)v6 + 1), *((void *)v6 + 2));
          unint64_t v8 = 0xD000000000000012;
          uint64_t v9 = "untagged(metadata)";
          goto LABEL_11;
        case 9u:
          unint64_t result = sub_1A87A3260();
          unint64_t v8 = 0xD00000000000001ALL;
          uint64_t v9 = "untagged(applePushService)";
          goto LABEL_11;
        default:
          unint64_t result = sub_1A889ED58(*(void *)v6, *((void *)v6 + 1), *((void *)v6 + 2), v6[24]);
          unint64_t v8 = 0xD00000000000001ALL;
          uint64_t v9 = "untagged(conditionalState)";
          goto LABEL_11;
      }
      break;
  }
  return result;
}

size_t sub_1A889B28C(uint64_t a1)
{
  uint64_t v2 = *v1;
  char v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    uint64_t v16 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Response(0) - 8) + 80);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743290);
    uint64_t v13 = swift_allocObject();
    long long v17 = *(_OWORD *)(v2 + 24);
    *(void *)(v13 + 16) = v4;
    *(_OWORD *)(v13 + 24) = v17;
    if ((uint64_t)v17 >= 1) {
      sub_1A889B9DC(v13 + 16, v13 + ((v16 + 40) & ~v16), v3, v2 + ((v16 + 40) & ~v16));
    }
    goto LABEL_19;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v1;
  uint64_t v7 = type metadata accessor for Response(0);
  sub_1A8A750D8();
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = *(void *)(v6 + 24);
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743290);
    uint64_t v11 = *(void *)(v8 + 72);
    uint64_t v12 = (v9 + 40) & ~v9;
    uint64_t v13 = swift_allocObject();
    size_t result = _swift_stdlib_malloc_size_0((const void *)v13);
    if (v11)
    {
      if (result - v12 != 0x8000000000000000 || v11 != -1)
      {
        *(void *)(v13 + 16) = (uint64_t)(result - v12) / v11;
        *(void *)(v13 + 24) = v10;
        *(void *)(v13 + 32) = 0;
        if (v10 >= 1)
        {
          swift_retain();
          sub_1A889B69C(v13 + 16, v13 + v12, (void *)(v6 + 16), v6 + v12);
          *(void *)(v6 + 24) = 0;
          swift_release();
        }
LABEL_19:
        size_t result = swift_release();
        *uint64_t v1 = v13;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743290);
  uint64_t v20 = *(void *)(v18 + 72);
  uint64_t v21 = (v19 + 40) & ~v19;
  uint64_t v13 = swift_allocObject();
  size_t result = _swift_stdlib_malloc_size_0((const void *)v13);
  if (!v20) {
    goto LABEL_21;
  }
  if (result - v21 != 0x8000000000000000 || v20 != -1)
  {
    uint64_t v23 = *(void *)(v6 + 24);
    *(void *)(v13 + 16) = (uint64_t)(result - v21) / v20;
    *(void *)(v13 + 24) = v23;
    *(void *)(v13 + 32) = 0;
    if (v23 >= 1) {
      sub_1A889B838(v13 + 16, v13 + v21, (void *)(v6 + 16), v6 + v21);
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *sub_1A889B564(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result[1];
  uint64_t v4 = result[2];
  uint64_t v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    uint64_t v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      BOOL v9 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v9))
      {
LABEL_9:
        uint64_t v10 = type metadata accessor for Response(0);
        size_t result = (void *)sub_1A88A0CE4(a3, a2 + *(void *)(*(void *)(v10 - 8) + 72) * v5, type metadata accessor for Response);
        uint64_t v11 = v8[1];
        BOOL v9 = __OFADD__(v11, 1);
        uint64_t v12 = v11 + 1;
        if (!v9)
        {
          v8[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v9 = __OFADD__(v5, *result);
      v5 += *result;
      if (v9) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1A889B634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1A889B69C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = *(void *)(type metadata accessor for Response(0) - 8);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  BOOL v13 = v5 < v8;
  uint64_t v14 = *(void *)(v9 + 72);
  BOOL v15 = v10 != 0;
  BOOL v16 = v13 && v15;
  if (v13 && v15) {
    unint64_t v17 = v12;
  }
  else {
    unint64_t v17 = 0;
  }
  if (v13 && v15) {
    uint64_t v18 = v10;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v11 < 1)
  {
    uint64_t v11 = 0;
    goto LABEL_22;
  }
  if (!a4)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v19 = a4 + v14 * v4;
  if (v19 <= a2 && v19 + v14 * v11 > a2)
  {
    if (v19 != a2) {
      swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    swift_arrayInitWithTakeFrontToBack();
  }
LABEL_22:
  if (!v16 || v18 <= 0) {
    return;
  }
  if (!v17)
  {
LABEL_36:
    __break(1u);
    return;
  }
  unint64_t v21 = a2 + v14 * v11;
  if (v21 < v17 || v21 >= v17 + v14 * v18)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v17)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_1A889B838(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = a3[1];
  uint64_t result = type metadata accessor for Response(0);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  uint64_t v13 = *(void *)(*(void *)(result - 8) + 72);
  if (v11 < 1)
  {
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v14 = a4 + v13 * v4;
  if (v14 < a2 + v13 * v11 && v14 + v13 * v11 > a2) {
    goto LABEL_30;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 >= v8 || v10 < 1) {
    return result;
  }
  if (!v12)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = sub_1A8A781F8();
    __break(1u);
    return result;
  }
  unint64_t v17 = a2 + v13 * v11;
  if (v17 + v13 * v10 > v12 && v17 < v12 + v13 * v10) {
    goto LABEL_30;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1A889B9DC(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t result = type metadata accessor for Response(0);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  uint64_t v13 = *(void *)(*(void *)(result - 8) + 72);
  if (v11 < 1) {
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v14 = a4 + v13 * v4;
  unint64_t v15 = a2 + v13 * v4;
  if (v14 < v15 + v13 * v11 && v15 < v14 + v13 * v11) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v10 >= 1)
  {
    if (v12)
    {
      if (a2 + v13 * v10 <= v12 || v12 + v13 * v10 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_1A8A781F8();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_1A889BB70()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for Response(0);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743290);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1) {
    sub_1A889B9DC(v5 + 16, v5 + ((v4 + 40) & ~v4), (void *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_1A889BC60(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A889BCBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A889BD18(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a4 >= 1)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = *(void *)(result + 16);
    uint64_t result = v8 - a4;
    if (__OFADD__(v8, -a4))
    {
      __break(1u);
    }
    else
    {
      if (result < 0)
      {
        BOOL v9 = __OFADD__(result, *v7);
        result += *v7;
        if (v9) {
          goto LABEL_10;
        }
      }
      v7[2] = result;
      uint64_t v10 = v7[1];
      BOOL v9 = __OFADD__(v10, a4);
      uint64_t v11 = v10 + a4;
      if (!v9)
      {
        v7[1] = v11;
        sub_1A889C0A0(result, v8, v7, a2, (uint64_t)v12);
        return sub_1A889BDBC(a3, a4);
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_1A889BDBC(unint64_t a1, uint64_t a2)
{
  sub_1A8529F8C((uint64_t)(v2 + 1), (uint64_t)v27, &qword_1E9745198);
  uint64_t result = sub_1A8529F8C((uint64_t)v27, (uint64_t)&v28, &qword_1E9745198);
  if ((v29 & 1) == 0)
  {
    long long v30 = v28;
    long long v25 = *v2;
    uint64_t v11 = *((void *)&v25 + 1);
    if ((*((void *)&v25 + 1) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (a1)
      {
        if (*((void *)&v25 + 1))
        {
          sub_1A8529F8C((uint64_t)&v25, (uint64_t)v26, &qword_1E9740FE8);
          uint64_t result = sub_1A8529F8C((uint64_t)v26, (uint64_t)&v31, &qword_1E9740FE8);
          unint64_t v12 = v31;
          if (v31)
          {
            uint64_t v13 = *(void *)(*(void *)(type metadata accessor for Response(0) - 8) + 72) * v11;
            unint64_t v14 = v12 + v13;
            unint64_t v15 = a1 + v13;
            if (v14 > a1 && v15 > v12) {
              goto LABEL_38;
            }
            uint64_t result = swift_arrayInitWithCopy();
          }
        }
      }
      if (!__OFADD__(v11, a2 - v11))
      {
        if (a2 >= v11)
        {
          if (a1)
          {
            uint64_t v17 = a2 - v11;
            if (a2 != v11)
            {
              if (*((uint64_t *)&v30 + 1) >= v17)
              {
                sub_1A8529F8C((uint64_t)&v30, (uint64_t)v32, &qword_1E9740FE8);
                uint64_t result = sub_1A8529F8C((uint64_t)v32, (uint64_t)&v33, &qword_1E9740FE8);
                unint64_t v18 = v33;
                if (!v33) {
                  return result;
                }
                uint64_t v19 = *(void *)(*(void *)(type metadata accessor for Response(0) - 8) + 72);
                unint64_t v20 = a1 + v19 * v11;
                uint64_t v21 = v19 * v17;
                unint64_t v22 = v18 + v21;
                unint64_t v23 = v20 + v21;
                if (v20 >= v22 || v23 <= v18) {
                  return swift_arrayInitWithCopy();
                }
                goto LABEL_38;
              }
LABEL_37:
              __break(1u);
              goto LABEL_38;
            }
          }
          return result;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    __break(1u);
    goto LABEL_35;
  }
  if (a1 && a2)
  {
    long long v30 = *v2;
    if (*((uint64_t *)&v30 + 1) >= a2)
    {
      sub_1A8529F8C((uint64_t)&v30, (uint64_t)&v33, &qword_1E9740FE8);
      uint64_t result = sub_1A8529F8C((uint64_t)&v33, (uint64_t)&v25, &qword_1E9740FE8);
      unint64_t v6 = v25;
      if (!(void)v25) {
        return result;
      }
      if ((a2 & 0x8000000000000000) == 0)
      {
        uint64_t v7 = *(void *)(*(void *)(type metadata accessor for Response(0) - 8) + 72) * a2;
        unint64_t v8 = v6 + v7;
        unint64_t v9 = a1 + v7;
        if (v8 <= a1 || v9 <= v6) {
          return swift_arrayInitWithCopy();
        }
      }
LABEL_38:
      uint64_t result = sub_1A8A781F8();
      __break(1u);
      return result;
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_1A889C0A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if (result >= a2)
  {
    uint64_t v12 = *a3 - result;
    if (!__OFSUB__(*a3, result))
    {
      BOOL v14 = a2 == 0;
      if (a2) {
        uint64_t v13 = a4;
      }
      else {
        uint64_t v13 = 0;
      }
      uint64_t v15 = type metadata accessor for Response(0);
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t result = v15 - 8;
      uint64_t v10 = v16;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v9 = type metadata accessor for Response(0);
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t result = v9 - 8;
    uint64_t v10 = v11;
    uint64_t v12 = v6 - v7;
    if (!__OFSUB__(v6, v7))
    {
      uint64_t v13 = 0;
      uint64_t v6 = 0;
      BOOL v14 = 1;
LABEL_9:
      *(void *)a5 = a4 + *(void *)(v10 + 72) * v7;
      *(void *)(a5 + 8) = v12;
      *(void *)(a5 + 16) = v13;
      *(void *)(a5 + 24) = v6;
      *(unsigned char *)(a5 + 32) = v14;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A889C190(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  sub_1A8A78738();
  sub_1A8A76638();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1A8A787C8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A889CA18(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v29;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = sub_1A8A76638();
  uint64_t v13 = v12;
  if (v11 == sub_1A8A76638() && v13 == v14)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_1A8A78588();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = ~v9;
      do
      {
        unint64_t v10 = (v10 + 1) & v17;
        if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v18 = sub_1A8A76638();
        uint64_t v20 = v19;
        if (v18 == sub_1A8A76638() && v20 == v21) {
          goto LABEL_16;
        }
        char v23 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v23 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v26 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v10);
  uint64_t v27 = v26[1];
  *a1 = *v26;
  a1[1] = v27;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return 0;
}

uint64_t sub_1A889C3E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451E8);
  uint64_t v3 = sub_1A8A77D58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1A8A78738();
      sub_1A8A76638();
      sub_1A8A762A8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1A8A787C8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A889C6E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E188);
  uint64_t result = sub_1A8A77D58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v34 = (void *)(v2 + 56);
    uint64_t v35 = v2;
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v33 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v36 = v5;
        unint64_t v13 = v12 | (v5 << 6);
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v33) {
          goto LABEL_33;
        }
        unint64_t v15 = v34[v14];
        int64_t v16 = v5 + 1;
        if (!v15)
        {
          int64_t v16 = v14 + 1;
          if (v14 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v15 = v34[v16];
          if (!v15)
          {
            int64_t v16 = v14 + 2;
            if (v14 + 2 >= v33) {
              goto LABEL_33;
            }
            unint64_t v15 = v34[v16];
            if (!v15)
            {
              int64_t v17 = v14 + 3;
              if (v17 >= v33)
              {
LABEL_33:
                uint64_t v32 = 1 << *(unsigned char *)(v2 + 32);
                if (v32 > 63) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v34[v17];
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v16 >= v33) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v34[v16];
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v15 - 1) & v15;
        int64_t v36 = v16;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 24 * v13;
      uint64_t v19 = *(void *)v18;
      int v21 = *(_DWORD *)(v18 + 8);
      int v20 = *(_DWORD *)(v18 + 12);
      uint64_t v22 = *(unsigned int *)(v18 + 16);
      uint64_t v23 = *(unsigned __int16 *)(v18 + 20);
      uint64_t v24 = *(unsigned __int8 *)(v18 + 22);
      sub_1A8A78738();
      unint64_t v37 = v37 & 0xFF00000000000000 | v22 | (v23 << 32) | (v24 << 48);
      GmailLabel.hash(into:)();
      uint64_t result = sub_1A8A787C8();
      uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v9 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v10 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t v11 = *(void *)(v4 + 48) + 24 * v10;
      *(void *)uint64_t v11 = v19;
      *(_DWORD *)(v11 + 8) = v21;
      *(_DWORD *)(v11 + 12) = v20;
      *(_DWORD *)(v11 + 16) = v22;
      *(_WORD *)(v11 + 20) = v23;
      *(unsigned char *)(v11 + 22) = v24;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v35;
      int64_t v5 = v36;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A889CA18(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1A889C3E4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1A889CC5C();
LABEL_22:
      uint64_t v26 = *v5;
      *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
      unint64_t v27 = (uint64_t *)(*(void *)(v26 + 48) + 16 * a3);
      *unint64_t v27 = v8;
      v27[1] = a2;
      uint64_t v28 = *(void *)(v26 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (!v29)
      {
        *(void *)(v26 + 16) = v30;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1A889CFE8();
  }
  uint64_t v11 = *v4;
  sub_1A8A78738();
  sub_1A8A76638();
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A8A787C8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v13 = sub_1A8A76638();
  uint64_t v15 = v14;
  if (v13 == sub_1A8A76638() && v15 == v16)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v18 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    uint64_t v19 = ~v12;
    do
    {
      a3 = (a3 + 1) & v19;
      if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v20 = sub_1A8A76638();
      uint64_t v22 = v21;
      if (v20 == sub_1A8A76638() && v22 == v23) {
        goto LABEL_25;
      }
      char v25 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v25 & 1) == 0);
  }
LABEL_26:
  uint64_t result = sub_1A8A78698();
  __break(1u);
  return result;
}

void *sub_1A889CC5C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A77D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A889CE10()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E188);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8A77D48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24)
      {
        int64_t v9 = v23 + 2;
        if (v23 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v9);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    int v18 = *(_DWORD *)(v17 + 16);
    __int16 v19 = *(_WORD *)(v17 + 20);
    char v20 = *(unsigned char *)(v17 + 22);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    uint64_t v22 = *(void *)(v17 + 8);
    *(void *)uint64_t v21 = *(void *)v17;
    *(void *)(v21 + 8) = v22;
    *(_DWORD *)(v21 + 16) = v18;
    *(_WORD *)(v21 + 20) = v19;
    *(unsigned char *)(v21 + 22) = v20;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v13) {
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A889CFE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97451E8);
  uint64_t v3 = sub_1A8A77D58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v28 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v28 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    int v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    sub_1A8A78738();
    sub_1A8A76638();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A762A8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A8A787C8();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v28 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A889D2CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E974E188);
  uint64_t result = sub_1A8A77D58();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v32 = v2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v33 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v34 = v2;
  uint64_t v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v35 = v5;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v14 >= v33) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v14);
    int64_t v16 = v5 + 1;
    if (!v15)
    {
      int64_t v16 = v5 + 2;
      if (v5 + 2 >= v33) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v32 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v5 + 3;
        if (v5 + 3 >= v33) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v32 + 8 * v16);
        if (!v15)
        {
          uint64_t v17 = v5 + 4;
          if (v5 + 4 >= v33)
          {
LABEL_32:
            uint64_t result = swift_release();
            uint64_t v1 = v0;
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v32 + 8 * v17);
          int64_t v16 = v5 + 4;
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v15 - 1) & v15;
    int64_t v35 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v2 + 48) + 24 * v13;
    uint64_t v19 = *(void *)v18;
    int v21 = *(_DWORD *)(v18 + 8);
    int v20 = *(_DWORD *)(v18 + 12);
    uint64_t v22 = *(unsigned int *)(v18 + 16);
    uint64_t v23 = *(unsigned __int16 *)(v18 + 20);
    uint64_t v24 = *(unsigned __int8 *)(v18 + 22);
    sub_1A8A78738();
    unint64_t v36 = v36 & 0xFF00000000000000 | v22 | (v23 << 32) | (v24 << 48);
    GmailLabel.hash(into:)();
    uint64_t result = sub_1A8A787C8();
    uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v9 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v10 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v19;
    *(_DWORD *)(v11 + 8) = v21;
    *(_DWORD *)(v11 + 12) = v20;
    *(_DWORD *)(v11 + 16) = v22;
    *(_WORD *)(v11 + 20) = v23;
    *(unsigned char *)(v11 + 22) = v24;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
    uint64_t v2 = v34;
    int64_t v5 = v35;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v33) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A889D5D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A88A0EDC();
  uint64_t result = sub_1A8A76F88();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A889C190(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

__n128 sub_1A889D670@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for ParsedStringCache();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A8AE4F90;
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97429E0);
  uint64_t v3 = sub_1A8A76D48();
  *(void *)(v3 + 16) = 32;
  bzero((void *)(v3 + 32), 0x300uLL);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 32) = v3;
  ResponseParser.init(bufferLimit:messageAttributeLimit:bodySizeLimit:literalSizeLimit:parsedStringCache:)(0x2000, 100, 1966080, 4096, (uint64_t)sub_1A88A0D4C, v2, (uint64_t)v9);
  uint64_t v4 = v10;
  char v5 = v11;
  __n128 result = (__n128)v9[2];
  long long v7 = v9[3];
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 95) = 0;
  return result;
}

uint64_t sub_1A889D754(uint64_t a1, uint64_t a2)
{
  return sub_1A8899454(a1, a2);
}

uint64_t type metadata accessor for ServerResponseFramingParser.Frame(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E9748188);
}

ValueMetadata *type metadata accessor for ServerResponseTranscoder()
{
  return &type metadata for ServerResponseTranscoder;
}

uint64_t destroy for ServerResponseFramingParser(uint64_t a1)
{
  sub_1A871FCF0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServerResponseFramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  sub_1A871FC88(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 51) = *(_DWORD *)(a2 + 51);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 163) = *(_DWORD *)(a2 + 163);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  uint64_t v12 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v12;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ServerResponseFramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  sub_1A871FC88(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  sub_1A871FCF0(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  long long v11 = *(_OWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v11;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_WORD *)(a1 + 164) = *(_WORD *)(a2 + 164);
  *(unsigned char *)(a1 + 166) = *(unsigned char *)(a2 + 166);
  uint64_t v12 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v12;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8_1(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for ServerResponseFramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1A871FCF0(v4, v5, v6);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_WORD *)(a1 + 164) = *(_WORD *)(a2 + 164);
  *(unsigned char *)(a1 + 166) = *(unsigned char *)(a2 + 166);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerResponseFramingParser(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerResponseFramingParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerResponseFramingParser()
{
  return &type metadata for ServerResponseFramingParser;
}

char *initializeBufferWithCopyOfBuffer for ServerResponseFramingParser.Frame(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    long long v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      long long v7 = *a2;
      uint64_t v8 = *a2;
      long long v9 = a2[1];
      *(void *)a1 = v7;
      *((void *)a1 + 1) = v9;
      *((void *)a1 + 2) = a2[2];
      *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
      *(_DWORD *)(a1 + 27) = *(_DWORD *)((char *)a2 + 27);
      swift_retain();
    }
    else
    {
      type metadata accessor for ResponseOrContinuationRequest(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = type metadata accessor for Response(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            type metadata accessor for ResponsePayload();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                id v37 = *a2;
                uint64_t v38 = (uint64_t)a2[1];
                uint64_t v67 = (uint64_t)a2[3];
                uint64_t v39 = (uint64_t)a2[4];
                uint64_t v41 = (uint64_t)a2[6];
                uint64_t v40 = (uint64_t)a2[7];
                uint64_t v65 = v40;
                uint64_t v69 = (uint64_t)a2[8];
                uint64_t v71 = (uint64_t)a2[9];
                uint64_t v73 = (uint64_t)a2[10];
                uint64_t v75 = (uint64_t)a2[11];
                uint64_t v77 = (uint64_t)a2[12];
                uint64_t v79 = (uint64_t)a2[13];
                uint64_t v81 = (uint64_t)a2[14];
                unsigned __int8 v82 = *((unsigned char *)a2 + 120);
                id v42 = *a2;
                uint64_t v43 = (uint64_t)a2[2];
                uint64_t v44 = (uint64_t)a2[5];
                sub_1A889E574((uint64_t)v42, v38, v43, v67, v39, v44, v41, v40, v69, v71, v73, v75, v77, v79, v81, v82);
                *(void *)a1 = v37;
                *((void *)a1 + 1) = v38;
                *((void *)a1 + 2) = v43;
                *((void *)a1 + 3) = v67;
                *((void *)a1 + 4) = v39;
                *((void *)a1 + 5) = v44;
                *((void *)a1 + 6) = v41;
                *((void *)a1 + 7) = v65;
                *((void *)a1 + 8) = v69;
                *((void *)a1 + 9) = v71;
                *((void *)a1 + 10) = v73;
                *((void *)a1 + 11) = v75;
                *((void *)a1 + 12) = v77;
                *((void *)a1 + 13) = v79;
                *((void *)a1 + 14) = v81;
                a1[120] = v82;
                break;
              case 2u:
                uint64_t v45 = type metadata accessor for MessageData();
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                  case 2u:
                    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
                    (*(void (**)(char *, char **, uint64_t))(*(void *)(v46 - 8) + 16))(a1, a2, v46);
                    goto LABEL_30;
                  case 3u:
                  case 4u:
                    *(void *)a1 = *a2;
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_30:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
                    break;
                }
                break;
              case 3u:
              case 4u:
                *(void *)a1 = *a2;
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                break;
              case 5u:
                uint64_t v47 = a2[1];
                *(void *)a1 = *a2;
                *((void *)a1 + 1) = v47;
                *((void *)a1 + 2) = a2[2];
                swift_retain();
                swift_retain();
                swift_retain();
                break;
              case 6u:
                *(void *)a1 = *a2;
                *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
                *((void *)a1 + 2) = a2[2];
                *((void *)a1 + 3) = a2[3];
                *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
                *(_DWORD *)(a1 + 35) = *(_DWORD *)((char *)a2 + 35);
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                swift_retain();
                break;
              case 7u:
                *(void *)a1 = *a2;
                *((void *)a1 + 1) = a2[1];
                *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
                *(_DWORD *)(a1 + 19) = *(_DWORD *)((char *)a2 + 19);
                *((void *)a1 + 3) = a2[3];
                swift_retain();
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                break;
              case 8u:
                id v48 = *a2;
                uint64_t v49 = (uint64_t)a2[1];
                uint64_t v50 = (uint64_t)a2[2];
                unint64_t v51 = a2[3];
                int v52 = *((_DWORD *)a2 + 8);
                sub_1A879A6F4((uint64_t)v48, v49, v50);
                *(void *)a1 = v48;
                *((void *)a1 + 1) = v49;
                *((void *)a1 + 2) = v50;
                *((void *)a1 + 3) = v51;
                *((_DWORD *)a1 + 8) = v52;
                break;
              case 9u:
                id v53 = *a2;
                uint64_t v54 = a2[1];
                uint64_t v55 = a2[2];
                char v56 = *((unsigned char *)a2 + 24);
                sub_1A87A3240();
                *(void *)a1 = v53;
                *((void *)a1 + 1) = v54;
                *((void *)a1 + 2) = v55;
                a1[24] = v56;
                break;
              default:
                id v12 = *a2;
                uint64_t v13 = (uint64_t)a2[1];
                uint64_t v14 = (uint64_t)a2[2];
                unsigned __int8 v15 = *((unsigned char *)a2 + 24);
                sub_1A889E52C((unint64_t)v12, v13, v14, v15);
                *(void *)a1 = v12;
                *((void *)a1 + 1) = v13;
                *((void *)a1 + 2) = v14;
                a1[24] = v15;
                break;
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_32;
          case 1u:
            uint64_t v20 = (uint64_t)a2[2];
            uint64_t v21 = (uint64_t)a2[7];
            uint64_t v58 = (uint64_t)a2[8];
            uint64_t v59 = (uint64_t)a2[9];
            uint64_t v60 = (uint64_t)a2[10];
            uint64_t v61 = (uint64_t)a2[11];
            uint64_t v62 = (uint64_t)a2[12];
            uint64_t v63 = (uint64_t)a2[13];
            uint64_t v64 = (uint64_t)a2[14];
            uint64_t v66 = (uint64_t)a2[15];
            uint64_t v68 = (uint64_t)a2[16];
            uint64_t v70 = (uint64_t)a2[17];
            uint64_t v72 = (uint64_t)a2[18];
            uint64_t v74 = (uint64_t)a2[19];
            uint64_t v76 = (uint64_t)a2[20];
            uint64_t v78 = (uint64_t)a2[21];
            unsigned __int16 v80 = *((_WORD *)a2 + 88);
            id v22 = *a2;
            uint64_t v23 = (uint64_t)a2[1];
            uint64_t v24 = (uint64_t)a2[3];
            uint64_t v25 = (uint64_t)a2[4];
            uint64_t v26 = (uint64_t)a2[5];
            uint64_t v27 = (uint64_t)a2[6];
            uint64_t v28 = v21;
            sub_1A889E68C((uint64_t)v22, v23, v20, v24, v25, v26, v27, v21, v58, v59, v60, v61, v62, v63, v64, v66, v68, v70, v72,
              v74,
              v76,
              v78,
              v80);
            *(void *)a1 = v22;
            *((void *)a1 + 1) = v23;
            *((void *)a1 + 2) = v20;
            *((void *)a1 + 3) = v24;
            *((void *)a1 + 4) = v25;
            *((void *)a1 + 5) = v26;
            *((void *)a1 + 6) = v27;
            *((void *)a1 + 7) = v28;
            *((void *)a1 + 8) = v58;
            *((void *)a1 + 9) = v59;
            *((void *)a1 + 10) = v60;
            *((void *)a1 + 11) = v61;
            *((void *)a1 + 12) = v62;
            *((void *)a1 + 13) = v63;
            *((void *)a1 + 14) = v64;
            *((void *)a1 + 15) = v66;
            *((void *)a1 + 16) = v68;
            *((void *)a1 + 17) = v70;
            *((void *)a1 + 18) = v72;
            *((void *)a1 + 19) = v74;
            *((void *)a1 + 20) = v76;
            *((void *)a1 + 21) = v78;
            *((_WORD *)a1 + 88) = v80;
            swift_storeEnumTagMultiPayload();
            break;
          case 2u:
            unint64_t v29 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v29;
            unint64_t v30 = (unint64_t)a2[2];
            uint64_t v31 = (uint64_t)a2[3];
            uint64_t v32 = (uint64_t)a2[4];
            unsigned __int8 v33 = *((unsigned char *)a2 + 40);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A887B6C4(v30, v31, v32, v33);
            *((void *)a1 + 2) = v30;
            *((void *)a1 + 3) = v31;
            *((void *)a1 + 4) = v32;
            a1[40] = v33;
            goto LABEL_32;
          case 3u:
            id v34 = *a2;
            if ((~(unint64_t)*a2 & 0xF000000000000007) != 0) {
              sub_1A887B350((unint64_t)*a2);
            }
            unint64_t v36 = a2[1];
            int64_t v35 = a2[2];
            *(void *)a1 = v34;
            *((void *)a1 + 1) = v36;
            *((void *)a1 + 2) = v35;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_32;
          case 4u:
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = a2[1];
            *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
            *(_DWORD *)(a1 + 19) = *(_DWORD *)((char *)a2 + 19);
            swift_retain();
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            break;
        }
      }
      else
      {
        id v16 = *a2;
        uint64_t v17 = (uint64_t)a2[1];
        uint64_t v18 = (uint64_t)a2[2];
        char v19 = *((unsigned char *)a2 + 24);
        sub_1A889E4E0((unint64_t)v16, v17, v18, v19);
        *(void *)a1 = v16;
        *((void *)a1 + 1) = v17;
        *((void *)a1 + 2) = v18;
        a1[24] = v19;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A889E4E0(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return swift_retain();
  }
  else
  {
    sub_1A887B33C(a1);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
}

unint64_t sub_1A889E52C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A887B33C(result);
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A889E574(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  switch(a16 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_5;
    case 1:
    case 2:
      swift_retain();
      swift_retain();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      goto LABEL_5;
    case 4:
      sub_1A85F272C(result, a2);
      goto LABEL_5;
    case 8:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_5:
      __n128 result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A889E68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v24 = (a23 >> 9) & 7;
  switch(v24)
  {
    case 4:
      swift_retain();
      break;
    case 3:
      sub_1A87961BC(a1, a2, a3, a4, a5);
      break;
    case 2:
      unsigned __int16 v25 = a23 & 0xF1FF;
      sub_1A889E75C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        v25);
      break;
  }
}

void sub_1A889E75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_6;
    case 1:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_retain();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_6:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    case 5:
      sub_1A8644FFC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A87961BC(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

void destroy for ServerResponseFramingParser.Frame(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {

LABEL_8:
    swift_release();
  }
  else if (!EnumCaseMultiPayload)
  {
    type metadata accessor for ResponseOrContinuationRequest(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for Response(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for ResponsePayload();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              id v11 = *(id *)a1;
              uint64_t v12 = *(void *)(a1 + 8);
              uint64_t v13 = *(void *)(a1 + 16);
              unsigned __int8 v14 = *(unsigned char *)(a1 + 24);
              sub_1A889ED58((unint64_t)v11, v12, v13, v14);
              break;
            case 1u:
              sub_1A889EDA0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
              break;
            case 2u:
              type metadata accessor for MessageData();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                case 2u:
                  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
                  id v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
                  v16(a1, v15);
                  break;
                case 3u:
                case 4u:
                  goto LABEL_21;
                default:
                  return;
              }
              break;
            case 3u:
            case 4u:
              goto LABEL_21;
            case 5u:
              swift_release();
              swift_release();
              goto LABEL_8;
            case 6u:
              swift_bridgeObjectRelease();
              goto LABEL_8;
            case 7u:
              swift_release();
              goto LABEL_21;
            case 8u:
              id v17 = *(id *)a1;
              uint64_t v18 = *(void *)(a1 + 8);
              uint64_t v19 = *(void *)(a1 + 16);
              sub_1A879A770((uint64_t)v17, v18, v19);
              break;
            case 9u:
              sub_1A87A3260();
              break;
            default:
              return;
          }
          break;
        case 1u:
          sub_1A889EECC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
            *(void *)(a1 + 152),
            *(void *)(a1 + 160),
            *(void *)(a1 + 168),
            *(_WORD *)(a1 + 176));
          break;
        case 2u:
          swift_bridgeObjectRelease();
          unint64_t v7 = *(void *)(a1 + 16);
          uint64_t v8 = *(void *)(a1 + 24);
          uint64_t v9 = *(void *)(a1 + 32);
          unsigned __int8 v10 = *(unsigned char *)(a1 + 40);
          sub_1A887B25C(v7, v8, v9, v10);
          break;
        case 3u:
          if ((~*(void *)a1 & 0xF000000000000007) != 0) {
            sub_1A887B2B8(*(void *)a1);
          }
LABEL_21:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          goto LABEL_8;
        default:
          return;
      }
    }
    else
    {
      id v3 = *(id *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      char v6 = *(unsigned char *)(a1 + 24);
      sub_1A889ED0C((unint64_t)v3, v4, v5, v6);
    }
  }
}

uint64_t sub_1A889ED0C(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return swift_release();
  }
  else
  {
    sub_1A887B2A4(a1);
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A889ED58(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 4u)
  {
    sub_1A887B2A4(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A889EDA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  switch(a16 >> 4)
  {
    case 0:
    case 3:
    case 5:
    case 9:
      goto LABEL_7;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return swift_release();
    case 4:
      sub_1A85F2770(result, a2);
      goto LABEL_7;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      __n128 result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A889EECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  int v24 = (a23 >> 9) & 7;
  switch(v24)
  {
    case 4:
      swift_release();
      break;
    case 3:
      sub_1A871D290(a1, a2, a3, a4, a5);
      break;
    case 2:
      unsigned __int16 v25 = a23 & 0xF1FF;
      sub_1A889EF9C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        v25);
      break;
  }
}

void sub_1A889EF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 5:
      sub_1A856B3DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_1A871D290(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for ServerResponseFramingParser.Frame(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    id v5 = *(id *)a2;
    id v6 = *(id *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 27) = *(_DWORD *)(a2 + 27);
    swift_retain();
  }
  else
  {
    type metadata accessor for ResponseOrContinuationRequest(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for Response(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for ResponsePayload();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              id v34 = *(id *)a2;
              uint64_t v35 = *(void *)(a2 + 8);
              uint64_t v64 = *(void *)(a2 + 24);
              uint64_t v36 = *(void *)(a2 + 32);
              uint64_t v38 = *(void *)(a2 + 48);
              uint64_t v37 = *(void *)(a2 + 56);
              uint64_t v62 = v37;
              uint64_t v66 = *(void *)(a2 + 64);
              uint64_t v68 = *(void *)(a2 + 72);
              uint64_t v70 = *(void *)(a2 + 80);
              uint64_t v72 = *(void *)(a2 + 88);
              uint64_t v74 = *(void *)(a2 + 96);
              uint64_t v76 = *(void *)(a2 + 104);
              uint64_t v78 = *(void *)(a2 + 112);
              unsigned __int8 v79 = *(unsigned char *)(a2 + 120);
              id v39 = *(id *)a2;
              uint64_t v40 = *(void *)(a2 + 16);
              uint64_t v41 = *(void *)(a2 + 40);
              sub_1A889E574((uint64_t)v39, v35, v40, v64, v36, v41, v38, v37, v66, v68, v70, v72, v74, v76, v78, v79);
              *(void *)a1 = v34;
              *(void *)(a1 + 8) = v35;
              *(void *)(a1 + 16) = v40;
              *(void *)(a1 + 24) = v64;
              *(void *)(a1 + 32) = v36;
              *(void *)(a1 + 40) = v41;
              *(void *)(a1 + 48) = v38;
              *(void *)(a1 + 56) = v62;
              *(void *)(a1 + 64) = v66;
              *(void *)(a1 + 72) = v68;
              *(void *)(a1 + 80) = v70;
              *(void *)(a1 + 88) = v72;
              *(void *)(a1 + 96) = v74;
              *(void *)(a1 + 104) = v76;
              *(void *)(a1 + 112) = v78;
              *(unsigned char *)(a1 + 120) = v79;
              break;
            case 2u:
              uint64_t v42 = type metadata accessor for MessageData();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                case 2u:
                  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
                  goto LABEL_28;
                case 3u:
                case 4u:
                  *(void *)a1 = *(void *)a2;
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_28:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v42 - 8) + 64));
                  break;
              }
              break;
            case 3u:
            case 4u:
              *(void *)a1 = *(void *)a2;
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              break;
            case 5u:
              uint64_t v44 = *(void *)(a2 + 8);
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = v44;
              *(void *)(a1 + 16) = *(void *)(a2 + 16);
              swift_retain();
              swift_retain();
              swift_retain();
              break;
            case 6u:
              *(void *)a1 = *(void *)a2;
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
              *(void *)(a1 + 16) = *(void *)(a2 + 16);
              *(void *)(a1 + 24) = *(void *)(a2 + 24);
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
              *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              swift_retain();
              break;
            case 7u:
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = *(void *)(a2 + 8);
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
              *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
              *(void *)(a1 + 24) = *(void *)(a2 + 24);
              swift_retain();
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              break;
            case 8u:
              id v45 = *(id *)a2;
              uint64_t v46 = *(void *)(a2 + 8);
              uint64_t v47 = *(void *)(a2 + 16);
              uint64_t v48 = *(void *)(a2 + 24);
              int v49 = *(_DWORD *)(a2 + 32);
              sub_1A879A6F4((uint64_t)v45, v46, v47);
              *(void *)a1 = v45;
              *(void *)(a1 + 8) = v46;
              *(void *)(a1 + 16) = v47;
              *(void *)(a1 + 24) = v48;
              *(_DWORD *)(a1 + 32) = v49;
              break;
            case 9u:
              id v50 = *(id *)a2;
              uint64_t v51 = *(void *)(a2 + 8);
              uint64_t v52 = *(void *)(a2 + 16);
              char v53 = *(unsigned char *)(a2 + 24);
              sub_1A87A3240();
              *(void *)a1 = v50;
              *(void *)(a1 + 8) = v51;
              *(void *)(a1 + 16) = v52;
              *(unsigned char *)(a1 + 24) = v53;
              break;
            default:
              id v9 = *(id *)a2;
              uint64_t v10 = *(void *)(a2 + 8);
              uint64_t v11 = *(void *)(a2 + 16);
              unsigned __int8 v12 = *(unsigned char *)(a2 + 24);
              sub_1A889E52C((unint64_t)v9, v10, v11, v12);
              *(void *)a1 = v9;
              *(void *)(a1 + 8) = v10;
              *(void *)(a1 + 16) = v11;
              *(unsigned char *)(a1 + 24) = v12;
              break;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_30;
        case 1u:
          uint64_t v17 = *(void *)(a2 + 16);
          uint64_t v18 = *(void *)(a2 + 56);
          uint64_t v55 = *(void *)(a2 + 64);
          uint64_t v56 = *(void *)(a2 + 72);
          uint64_t v57 = *(void *)(a2 + 80);
          uint64_t v58 = *(void *)(a2 + 88);
          uint64_t v59 = *(void *)(a2 + 96);
          uint64_t v60 = *(void *)(a2 + 104);
          uint64_t v61 = *(void *)(a2 + 112);
          uint64_t v63 = *(void *)(a2 + 120);
          uint64_t v65 = *(void *)(a2 + 128);
          uint64_t v67 = *(void *)(a2 + 136);
          uint64_t v69 = *(void *)(a2 + 144);
          uint64_t v71 = *(void *)(a2 + 152);
          uint64_t v73 = *(void *)(a2 + 160);
          uint64_t v75 = *(void *)(a2 + 168);
          unsigned __int16 v77 = *(_WORD *)(a2 + 176);
          id v19 = *(id *)a2;
          uint64_t v20 = *(void *)(a2 + 8);
          uint64_t v21 = *(void *)(a2 + 24);
          uint64_t v22 = *(void *)(a2 + 32);
          uint64_t v23 = *(void *)(a2 + 40);
          uint64_t v24 = *(void *)(a2 + 48);
          uint64_t v25 = v18;
          sub_1A889E68C((uint64_t)v19, v20, v17, v21, v22, v23, v24, v18, v55, v56, v57, v58, v59, v60, v61, v63, v65, v67, v69,
            v71,
            v73,
            v75,
            v77);
          *(void *)a1 = v19;
          *(void *)(a1 + 8) = v20;
          *(void *)(a1 + 16) = v17;
          *(void *)(a1 + 24) = v21;
          *(void *)(a1 + 32) = v22;
          *(void *)(a1 + 40) = v23;
          *(void *)(a1 + 48) = v24;
          *(void *)(a1 + 56) = v25;
          *(void *)(a1 + 64) = v55;
          *(void *)(a1 + 72) = v56;
          *(void *)(a1 + 80) = v57;
          *(void *)(a1 + 88) = v58;
          *(void *)(a1 + 96) = v59;
          *(void *)(a1 + 104) = v60;
          *(void *)(a1 + 112) = v61;
          *(void *)(a1 + 120) = v63;
          *(void *)(a1 + 128) = v65;
          *(void *)(a1 + 136) = v67;
          *(void *)(a1 + 144) = v69;
          *(void *)(a1 + 152) = v71;
          *(void *)(a1 + 160) = v73;
          *(void *)(a1 + 168) = v75;
          *(_WORD *)(a1 + 176) = v77;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          uint64_t v26 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v26;
          unint64_t v27 = *(void *)(a2 + 16);
          uint64_t v28 = *(void *)(a2 + 24);
          uint64_t v29 = *(void *)(a2 + 32);
          unsigned __int8 v30 = *(unsigned char *)(a2 + 40);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A887B6C4(v27, v28, v29, v30);
          *(void *)(a1 + 16) = v27;
          *(void *)(a1 + 24) = v28;
          *(void *)(a1 + 32) = v29;
          *(unsigned char *)(a1 + 40) = v30;
          goto LABEL_30;
        case 3u:
          id v31 = *(id *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_1A887B350(*(void *)a2);
          }
          uint64_t v33 = *(void *)(a2 + 8);
          uint64_t v32 = *(void *)(a2 + 16);
          *(void *)a1 = v31;
          *(void *)(a1 + 8) = v33;
          *(void *)(a1 + 16) = v32;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          goto LABEL_30;
        case 4u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
          *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
          swift_retain();
LABEL_30:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    else
    {
      id v13 = *(id *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 16);
      char v16 = *(unsigned char *)(a2 + 24);
      sub_1A889E4E0((unint64_t)v13, v14, v15, v16);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v15;
      *(unsigned char *)(a1 + 24) = v16;
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ServerResponseFramingParser.Frame(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1A88A01C8(a1, type metadata accessor for ServerResponseFramingParser.Frame);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      id v5 = *(id *)a2;
      id v6 = *(id *)a2;
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
      int v7 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 27) = *(_DWORD *)(a2 + 27);
      *(_DWORD *)(a1 + 24) = v7;
      swift_retain();
    }
    else
    {
      type metadata accessor for ResponseOrContinuationRequest(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = type metadata accessor for Response(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            type metadata accessor for ResponsePayload();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v57 = *(void *)(a2 + 8);
                uint64_t v32 = *(void *)(a2 + 16);
                uint64_t v33 = *(void *)(a2 + 32);
                uint64_t v34 = *(void *)(a2 + 48);
                uint64_t v53 = v34;
                uint64_t v55 = *(void *)(a2 + 40);
                uint64_t v51 = *(void *)(a2 + 56);
                uint64_t v59 = *(void *)(a2 + 64);
                uint64_t v61 = *(void *)(a2 + 72);
                uint64_t v63 = *(void *)(a2 + 80);
                uint64_t v65 = *(void *)(a2 + 88);
                uint64_t v67 = *(void *)(a2 + 96);
                uint64_t v69 = *(void *)(a2 + 104);
                uint64_t v71 = *(void *)(a2 + 112);
                unsigned __int8 v73 = *(unsigned char *)(a2 + 120);
                id v35 = *(id *)a2;
                uint64_t v36 = *(void *)(a2 + 24);
                sub_1A889E574((uint64_t)v35, v57, v32, v36, v33, v55, v34, v51, v59, v61, v63, v65, v67, v69, v71, v73);
                *(void *)a1 = v35;
                *(void *)(a1 + 8) = v57;
                *(void *)(a1 + 16) = v32;
                *(void *)(a1 + 24) = v36;
                *(void *)(a1 + 32) = v33;
                *(void *)(a1 + 40) = v55;
                *(void *)(a1 + 48) = v53;
                *(void *)(a1 + 56) = v51;
                *(void *)(a1 + 64) = v59;
                *(void *)(a1 + 72) = v61;
                *(void *)(a1 + 80) = v63;
                *(void *)(a1 + 88) = v65;
                *(void *)(a1 + 96) = v67;
                *(void *)(a1 + 104) = v69;
                *(void *)(a1 + 112) = v71;
                *(unsigned char *)(a1 + 120) = v73;
                break;
              case 2u:
                uint64_t v37 = type metadata accessor for MessageData();
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                  case 2u:
                    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 3u:
                  case 4u:
                    *(void *)a1 = *(void *)a2;
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v37 - 8) + 64));
                    break;
                }
                break;
              case 3u:
              case 4u:
                *(void *)a1 = *(void *)a2;
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                break;
              case 5u:
                *(void *)a1 = *(void *)a2;
                *(void *)(a1 + 8) = *(void *)(a2 + 8);
                *(void *)(a1 + 16) = *(void *)(a2 + 16);
                swift_retain();
                swift_retain();
                swift_retain();
                break;
              case 6u:
                *(void *)a1 = *(void *)a2;
                *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
                *(void *)(a1 + 16) = *(void *)(a2 + 16);
                *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
                *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
                int v39 = *(_DWORD *)(a2 + 32);
                *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
                *(_DWORD *)(a1 + 32) = v39;
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                swift_retain();
                break;
              case 7u:
                *(void *)a1 = *(void *)a2;
                *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
                int v40 = *(_DWORD *)(a2 + 16);
                *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
                *(_DWORD *)(a1 + 16) = v40;
                *(void *)(a1 + 24) = *(void *)(a2 + 24);
                swift_retain();
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                break;
              case 8u:
                id v41 = *(id *)a2;
                uint64_t v42 = *(void *)(a2 + 8);
                uint64_t v43 = *(void *)(a2 + 16);
                uint64_t v74 = *(void *)(a2 + 24);
                int v44 = *(_DWORD *)(a2 + 32);
                sub_1A879A6F4((uint64_t)v41, v42, v43);
                *(void *)a1 = v41;
                *(void *)(a1 + 8) = v42;
                *(void *)(a1 + 16) = v43;
                *(void *)(a1 + 24) = v74;
                *(_DWORD *)(a1 + 32) = v44;
                break;
              case 9u:
                id v28 = *(id *)a2;
                uint64_t v29 = *(void *)(a2 + 8);
                uint64_t v30 = *(void *)(a2 + 16);
                unsigned __int8 v31 = *(unsigned char *)(a2 + 24);
                sub_1A87A3240();
                goto LABEL_28;
              default:
                id v28 = *(id *)a2;
                uint64_t v29 = *(void *)(a2 + 8);
                uint64_t v30 = *(void *)(a2 + 16);
                unsigned __int8 v31 = *(unsigned char *)(a2 + 24);
                sub_1A889E52C((unint64_t)v28, v29, v30, v31);
LABEL_28:
                *(void *)a1 = v28;
                *(void *)(a1 + 8) = v29;
                *(void *)(a1 + 16) = v30;
                *(unsigned char *)(a1 + 24) = v31;
                break;
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_30;
          case 1u:
            uint64_t v14 = *(void *)(a2 + 48);
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v45 = v15;
            uint64_t v46 = *(void *)(a2 + 24);
            uint64_t v47 = *(void *)(a2 + 64);
            uint64_t v48 = *(void *)(a2 + 72);
            uint64_t v49 = *(void *)(a2 + 80);
            uint64_t v50 = *(void *)(a2 + 88);
            uint64_t v52 = *(void *)(a2 + 96);
            uint64_t v54 = *(void *)(a2 + 104);
            uint64_t v56 = *(void *)(a2 + 112);
            uint64_t v58 = *(void *)(a2 + 120);
            uint64_t v60 = *(void *)(a2 + 128);
            uint64_t v62 = *(void *)(a2 + 136);
            uint64_t v64 = *(void *)(a2 + 144);
            uint64_t v66 = *(void *)(a2 + 152);
            uint64_t v68 = *(void *)(a2 + 160);
            uint64_t v70 = *(void *)(a2 + 168);
            unsigned __int16 v72 = *(_WORD *)(a2 + 176);
            id v16 = *(id *)a2;
            uint64_t v17 = *(void *)(a2 + 8);
            uint64_t v18 = *(void *)(a2 + 16);
            uint64_t v19 = *(void *)(a2 + 32);
            uint64_t v20 = *(void *)(a2 + 40);
            uint64_t v21 = v14;
            sub_1A889E68C((uint64_t)v16, v17, v18, v46, v19, v20, v14, v15, v47, v48, v49, v50, v52, v54, v56, v58, v60, v62, v64,
              v66,
              v68,
              v70,
              v72);
            *(void *)a1 = v16;
            *(void *)(a1 + 8) = v17;
            *(void *)(a1 + 16) = v18;
            *(void *)(a1 + 24) = v46;
            *(void *)(a1 + 32) = v19;
            *(void *)(a1 + 40) = v20;
            *(void *)(a1 + 48) = v21;
            *(void *)(a1 + 56) = v45;
            *(void *)(a1 + 64) = v47;
            *(void *)(a1 + 72) = v48;
            *(void *)(a1 + 80) = v49;
            *(void *)(a1 + 88) = v50;
            *(void *)(a1 + 96) = v52;
            *(void *)(a1 + 104) = v54;
            *(void *)(a1 + 112) = v56;
            *(void *)(a1 + 120) = v58;
            *(void *)(a1 + 128) = v60;
            *(void *)(a1 + 136) = v62;
            *(void *)(a1 + 144) = v64;
            *(void *)(a1 + 152) = v66;
            *(void *)(a1 + 160) = v68;
            *(void *)(a1 + 168) = v70;
            *(_WORD *)(a1 + 176) = v72;
            goto LABEL_30;
          case 2u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            unint64_t v22 = *(void *)(a2 + 16);
            uint64_t v23 = *(void *)(a2 + 24);
            uint64_t v24 = *(void *)(a2 + 32);
            unsigned __int8 v25 = *(unsigned char *)(a2 + 40);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A887B6C4(v22, v23, v24, v25);
            *(void *)(a1 + 16) = v22;
            *(void *)(a1 + 24) = v23;
            *(void *)(a1 + 32) = v24;
            *(unsigned char *)(a1 + 40) = v25;
            goto LABEL_30;
          case 3u:
            id v26 = *(id *)a2;
            if ((~*(void *)a2 & 0xF000000000000007) != 0) {
              sub_1A887B350(*(void *)a2);
            }
            *(void *)a1 = v26;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            goto LABEL_30;
          case 4u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
            int v27 = *(_DWORD *)(a2 + 16);
            *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
            *(_DWORD *)(a1 + 16) = v27;
            swift_retain();
LABEL_30:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v9 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        id v10 = *(id *)a2;
        uint64_t v11 = *(void *)(a2 + 8);
        uint64_t v12 = *(void *)(a2 + 16);
        char v13 = *(unsigned char *)(a2 + 24);
        sub_1A889E4E0((unint64_t)v10, v11, v12, v13);
        *(void *)a1 = v10;
        *(void *)(a1 + 8) = v11;
        *(void *)(a1 + 16) = v12;
        *(unsigned char *)(a1 + 24) = v13;
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A88A01C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for ServerResponseFramingParser.Frame(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for ResponseOrContinuationRequest(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Response(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v8 = type metadata accessor for ResponsePayload();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v9 = type metadata accessor for MessageData();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ServerResponseFramingParser.Frame(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A88A01C8((uint64_t)a1, type metadata accessor for ServerResponseFramingParser.Frame);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for ResponseOrContinuationRequest(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v7 = type metadata accessor for Response(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          uint64_t v8 = type metadata accessor for ResponsePayload();
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            uint64_t v9 = type metadata accessor for MessageData();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
            {
              uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9748518);
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            }
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          }
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A88A072C()
{
  uint64_t result = type metadata accessor for ResponseOrContinuationRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for ServerResponseFramingParser.ResponseParser()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ServerResponseFramingParser.ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 99) = *(_DWORD *)(a2 + 99);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ServerResponseFramingParser.ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 100) = *(_WORD *)(a2 + 100);
  *(unsigned char *)(a1 + 102) = *(unsigned char *)(a2 + 102);
  return a1;
}

__n128 __swift_memcpy103_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 95) = *(void *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ServerResponseFramingParser.ResponseParser(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 100) = *(_WORD *)(a2 + 100);
  *(unsigned char *)(a1 + 102) = *(unsigned char *)(a2 + 102);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerResponseFramingParser.ResponseParser(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 103)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerResponseFramingParser.ResponseParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 102) = 0;
    *(_WORD *)(result + 100) = 0;
    *(_DWORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 103) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 103) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerResponseFramingParser.ResponseParser()
{
  return &type metadata for ServerResponseFramingParser.ResponseParser;
}

uint64_t getEnumTagSinglePayload for ServerResponseTranscoder.Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ServerResponseTranscoder.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88A0C00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerResponseTranscoder.Error()
{
  return &type metadata for ServerResponseTranscoder.Error;
}

unint64_t sub_1A88A0C3C()
{
  unint64_t result = qword_1E974E168;
  if (!qword_1E974E168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E168);
  }
  return result;
}

unint64_t sub_1A88A0C90()
{
  unint64_t result = qword_1E974E170;
  if (!qword_1E974E170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E170);
  }
  return result;
}

uint64_t sub_1A88A0CE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A88A0D4C(uint64_t a1, uint64_t a2)
{
  return sub_1A889934C(a1, a2, v2);
}

uint64_t type metadata accessor for StreamedBodySection(uint64_t a1)
{
  return sub_1A85453C4(a1, (uint64_t *)&unk_1E97429E8);
}

unint64_t sub_1A88A0D74()
{
  unint64_t result = qword_1E9742A00;
  if (!qword_1E9742A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9742A00);
  }
  return result;
}

unint64_t sub_1A88A0DC8()
{
  unint64_t result = qword_1E974E178;
  if (!qword_1E974E178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E178);
  }
  return result;
}

unint64_t sub_1A88A0E1C()
{
  unint64_t result = qword_1E974E180;
  if (!qword_1E974E180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E180);
  }
  return result;
}

uint64_t sub_1A88A0E70(uint64_t a1)
{
  sub_1A856B35C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  return a1;
}

unint64_t sub_1A88A0EDC()
{
  unint64_t result = qword_1E9741F70;
  if (!qword_1E9741F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9741F70);
  }
  return result;
}

uint64_t sub_1A88A0F30(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v4 = *(_WORD *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_1A88A0FA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88A0FD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88A103C(uint64_t a1)
{
  return a1;
}

void destroy for ServerResponseTranscoder.UnknownServerResponse(uint64_t a1)
{
  sub_1A889EECC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(_WORD *)(a1 + 176));
}

uint64_t initializeWithCopy for ServerResponseTranscoder.UnknownServerResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  unsigned __int16 v26 = *(_WORD *)(a2 + 176);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  sub_1A889E68C(*(void *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  *(_WORD *)(a1 + 176) = v26;
  return a1;
}

uint64_t assignWithCopy for ServerResponseTranscoder.UnknownServerResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v30 = *(void *)(a2 + 72);
  uint64_t v31 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v35 = *(void *)(a2 + 112);
  uint64_t v36 = *(void *)(a2 + 120);
  uint64_t v37 = *(void *)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  uint64_t v39 = *(void *)(a2 + 144);
  uint64_t v40 = *(void *)(a2 + 152);
  uint64_t v41 = *(void *)(a2 + 160);
  uint64_t v42 = *(void *)(a2 + 168);
  unsigned __int16 v43 = *(_WORD *)(a2 + 176);
  sub_1A889E68C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 80) = v31;
  *(void *)(a1 + 88) = v32;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v33;
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v35;
  *(void *)(a1 + 120) = v36;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v37;
  *(void *)(a1 + 136) = v38;
  *(void *)(a1 + 144) = v39;
  *(void *)(a1 + 152) = v40;
  uint64_t v26 = *(void *)(a1 + 160);
  uint64_t v27 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = v41;
  *(void *)(a1 + 168) = v42;
  unsigned __int16 v28 = *(_WORD *)(a1 + 176);
  *(_WORD *)(a1 + 176) = v43;
  sub_1A889EECC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

__n128 __swift_memcpy178_8_0(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(_WORD *)(a1 + 176) = *((_WORD *)a2 + 88);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for ServerResponseTranscoder.UnknownServerResponse(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 176);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(a1 + 168);
  unsigned __int16 v20 = *(_WORD *)(a1 + 176);
  long long v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  long long v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  long long v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  long long v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_WORD *)(a1 + 176) = v3;
  sub_1A889EECC(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerResponseTranscoder.UnknownServerResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 3 && *(unsigned char *)(a1 + 178)) {
    return (*(_DWORD *)a1 + 3);
  }
  unsigned int v3 = *(unsigned __int16 *)(a1 + 176);
  if ((~(v3 >> 9) & 6) != 0) {
    int v4 = -1;
  }
  else {
    int v4 = ~(v3 >> 9) & 7;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerResponseTranscoder.UnknownServerResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 2)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 176) = 0;
    *(void *)__n128 result = a2 - 3;
    if (a3 >= 3) {
      *(unsigned char *)(result + 178) = 1;
    }
  }
  else
  {
    if (a3 >= 3) {
      *(unsigned char *)(result + 178) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 144) = 0u;
      *(_OWORD *)(result + 160) = 0u;
      *(_OWORD *)(result + 112) = 0u;
      *(_OWORD *)(result + 128) = 0u;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(_WORD *)(result + 176) = (-512 * a2) & 0xE00;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerResponseTranscoder.UnknownServerResponse()
{
  return &type metadata for ServerResponseTranscoder.UnknownServerResponse;
}

uint64_t sub_1A88A158C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    unsigned __int8 v9 = *((unsigned char *)a2 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8645714(v8, v9);
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (void *)(a1 + v10);
    long long v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1A8A75E28();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t sub_1A88A1720(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_1A8645728(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1A8A75E28();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1A88A17FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a2 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8645714(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 24);
  unsigned __int8 v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1A8A75E28();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_1A88A1944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 16);
  sub_1A8645714(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v7;
  sub_1A8645728(v8, v9);
  int v10 = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 20) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1A8A75E28();
  uint64_t v15 = *(void *)(v14 - 8);
  long long v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1A88A1B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1A8A75E28();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1A88A1C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1A8645728(v7, v8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v9 = *(int *)(a3 + 24);
  int v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1A8A75E28();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1A88A1DEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A88A1E00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A88A1EB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void *sub_1A88A1EC8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName_0((uint64_t *)&unk_1E9743AC8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A88A1F74()
{
  sub_1A88A2014();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A88A2014()
{
  if (!qword_1E9743AE8)
  {
    sub_1A8A75E28();
    unint64_t v0 = sub_1A8A77898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9743AE8);
    }
  }
}

uint64_t sub_1A88A2070(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t destroy for ParseError(uint64_t a1)
{
  return sub_1A88A2094(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1A88A2094(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13IMAP2Protocol10ParseErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A88A2070(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1A88A2070(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A88A2094(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ParseError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A88A2094(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParseError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A88A2220(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1A88A2238(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParseError()
{
  return &type metadata for ParseError;
}

uint64_t Tag.debugDescription.getter(uint64_t a1)
{
  uint64_t v2 = sub_1A8A765E8();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1A88A2590(a1 & 0xFFFFFFFF000000FFLL);
  sub_1A8A765C8();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
  sub_1A887B668();
  uint64_t v3 = sub_1A8A76588();
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5) {
    return v3;
  }
  __break(1u);
  return result;
}

BOOL static Tag.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2 && HIDWORD(a1) == HIDWORD(a2);
}

char *Tag.init(_:)(uint64_t a1, unint64_t a2)
{
  return sub_1A88A2F2C(a1, a2);
}

uint64_t Tag.connectionIdentifier.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*Tag.connectionIdentifier.modify())(void)
{
  return nullsub_1;
}

unint64_t Tag.commandCounter.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t Tag.commandCounter.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

double (*Tag.commandCounter.modify())(void)
{
  return nullsub_1;
}

unint64_t Tag.init(connectionIdentifier:commandCounter:)(unsigned __int8 a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t Tag.hash(into:)()
{
  return sub_1A8A78798();
}

uint64_t Tag.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88A2468()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88A24C8()
{
  return sub_1A8A78798();
}

uint64_t sub_1A88A2508()
{
  return sub_1A8A787C8();
}

BOOL sub_1A88A2564(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_DWORD *)a1 + 1) == *((_DWORD *)a2 + 1);
}

uint64_t sub_1A88A2590(unint64_t a1)
{
  unsigned __int8 v1 = a1;
  unint64_t v2 = HIDWORD(a1);
  int v15 = sub_1A8892FB0(0, 10, 0, MEMORY[0x1E4FBC860]);
  __int16 v3 = v1 / 0x1Au;
  sub_1A88A2ADC(0, 0, v1 % 0x1Au + 65);
  uint64_t v4 = v15;
  if ((v1 & 0xFEu) > 0x19uLL)
  {
    unint64_t v6 = *((void *)v15 + 2);
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v6 >= *((void *)v15 + 3) >> 1) {
      uint64_t v4 = sub_1A8892FB0(isUniquelyReferenced_nonNull_native, v6 + 1, 1, v15);
    }
    size_t v8 = *((void *)v4 + 2);
    memmove(v4 + 33, v4 + 32, v8);
    unint64_t v5 = v8 + 1;
    *((void *)v4 + 2) = v5;
    v4[32] = (unsigned __int16)(v3 - 1) % 0x1Au + 65;
    int v15 = v4;
  }
  else
  {
    unint64_t v5 = *((void *)v15 + 2);
  }
  sub_1A88A2ADC(v5, v5, (v2 % 0xA) | 0x30);
  uint64_t v9 = v15;
  if (v2 < 0xA) {
    return (uint64_t)v9;
  }
  while (1)
  {
    unint64_t v10 = *((void *)v9 + 2);
    if (v10 < v5) {
      break;
    }
    uint64_t v11 = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (!v11 || v10 >= *((void *)v9 + 3) >> 1) {
      uint64_t v9 = sub_1A8892FB0(v11, v10 + 1, 1, v9);
    }
    int64_t v12 = *((void *)v9 + 2) - v5;
    if (v12 < 0) {
      goto LABEL_16;
    }
    memmove(&v9[v5 + 33], &v9[v5 + 32], v12);
    ++*((void *)v9 + 2);
    v9[v5 + 32] = (v2 / 0xA - 10 * ((429496730 * (unint64_t)(v2 / 0xA)) >> 32)) | 0x30;
    BOOL v13 = v2 > 0x63;
    LODWORD(v2) = v2 / 0xA;
    if (!v13) {
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_16:
  uint64_t result = sub_1A8A781F8();
  __break(1u);
  return result;
}

uint64_t sub_1A88A27C4()
{
  uint64_t v1 = sub_1A8A765E8();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1A88A2590(*v0 | ((unint64_t)*((unsigned int *)v0 + 1) << 32));
  sub_1A8A765C8();
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9740EE0);
  sub_1A887B668();
  uint64_t v2 = sub_1A8A76588();
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88A289C()
{
  unint64_t v0 = sub_1A8A76968();
  uint64_t v4 = sub_1A88A291C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A88A291C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1A858E388(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1A88A2A74(v9, 0);
      unint64_t v12 = sub_1A858E488((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1A8A77E88();
LABEL_4:
        JUMPOUT(0x1AD0DF7E0);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1AD0DF7E0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1AD0DF7E0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void *sub_1A88A2A74(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EB8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  _OWORD v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_1A88A2ADC(uint64_t a1, int64_t a2, char a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  size_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > *((void *)v5 + 3) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t result = sub_1A8892FB0(result, v13, 1, v5);
    size_t v5 = result;
  }
  uint64_t v14 = v5 + 32;
  int v15 = &v5[a1 + 32];
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = *((void *)v5 + 2);
  size_t v17 = v16 - a2;
  if (__OFSUB__(v16, a2)) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t result = v15 + 1;
    int v18 = &v14[a2];
    if (v15 + 1 != &v14[a2] || result >= &v18[v17]) {
      uint64_t result = (char *)memmove(result, v18, v17);
    }
    uint64_t v19 = *((void *)v5 + 2);
    BOOL v20 = __OFADD__(v19, v9);
    uint64_t v21 = v19 + v9;
    if (!v20)
    {
      *((void *)v5 + 2) = v21;
LABEL_20:
      *int v15 = a3;
      void *v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1A8A781F8();
  __break(1u);
  return result;
}

char *sub_1A88A2C3C(char *result, uint64_t a2)
{
  if (a2 < 0) {
    goto LABEL_55;
  }
  unint64_t v3 = (char *)MEMORY[0x1E4FBC860];
  if (!a2)
  {
    uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
    if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      goto LABEL_29;
    }
    goto LABEL_19;
  }
  uint64_t v4 = result;
  char v5 = *result;
  if ((*result - 91) >= 0xE6u)
  {
    uint64_t v8 = 1;
    uint64_t result = sub_1A8892FB0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v3 = result;
    do
    {
      if (v8 - 1 >= a2)
      {
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      unint64_t v10 = *((void *)v3 + 2);
      unint64_t v9 = *((void *)v3 + 3);
      if (v10 >= v9 >> 1)
      {
        uint64_t result = sub_1A8892FB0((char *)(v9 > 1), v10 + 1, 1, v3);
        unint64_t v3 = result;
      }
      *((void *)v3 + 2) = v10 + 1;
      v3[v10 + 32] = v5 - 65;
      if (a2 == v8) {
        goto LABEL_18;
      }
      char v5 = v4[v8++];
    }
    while ((v5 - 91) >= 0xE6u);
    uint64_t v6 = v8 - 1;
    if (v6 == a2) {
      goto LABEL_18;
    }
  }
  else
  {
    if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      goto LABEL_29;
    }
    uint64_t v6 = 0;
  }
  char v11 = v4[v6];
  if ((v11 - 58) < 0xF6u)
  {
LABEL_18:
    uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
LABEL_19:
    uint64_t v12 = *((void *)v7 + 2);
    if (v12)
    {
      uint64_t v13 = *((void *)v3 + 2);
      if (v13)
      {
        uint64_t v14 = 0;
        int v15 = (unsigned __int8 *)(v3 + 32);
        do
        {
          uint64_t v16 = 26 * v14;
          if ((unsigned __int128)(v14 * (__int128)26) >> 64 != (26 * v14) >> 63)
          {
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          uint64_t v17 = *v15 + 1;
          BOOL v18 = __OFADD__(v16, v17);
          uint64_t v14 = v16 + v17;
          if (v18) {
            goto LABEL_50;
          }
          ++v15;
          --v13;
        }
        while (v13);
        unint64_t v19 = v14 - 1;
        if (!__OFSUB__(v14, 1)) {
          goto LABEL_26;
        }
        __break(1u);
LABEL_32:
        uint64_t v20 = 0;
        unint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = 10 * v21;
          if ((unsigned __int128)((uint64_t)v21 * (__int128)10) >> 64 != (uint64_t)(10 * v21) >> 63) {
            break;
          }
          uint64_t v23 = v7[v20 + 32];
          unint64_t v21 = v22 + v23;
          if (__OFADD__(v22, v23)) {
            goto LABEL_53;
          }
          if (v12 == ++v20)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (HIDWORD(v21)) {
              return 0;
            }
            else {
              return (char *)(v19 | (v21 << 32));
            }
          }
        }
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      unint64_t v19 = -1;
LABEL_26:
      if ((v19 & 0x8000000000000000) == 0 && v19 <= 0xFF) {
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
LABEL_29:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t result = sub_1A8892FB0(0, 1, 1, MEMORY[0x1E4FBC860]);
  uint64_t v7 = result;
  while (1)
  {
    if (v6 == a2) {
      uint64_t v6 = a2;
    }
    else {
      ++v6;
    }
    if (v6 > a2) {
      break;
    }
    unint64_t v25 = *((void *)v7 + 2);
    unint64_t v24 = *((void *)v7 + 3);
    if (v25 >= v24 >> 1)
    {
      uint64_t result = sub_1A8892FB0((char *)(v24 > 1), v25 + 1, 1, v7);
      uint64_t v7 = result;
    }
    *((void *)v7 + 2) = v25 + 1;
    v7[v25 + 32] = v11 - 48;
    if (v6 != a2)
    {
      char v11 = v4[v6];
      if ((v11 - 58) > 0xF5u) {
        continue;
      }
    }
    goto LABEL_19;
  }
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

char *sub_1A88A2F2C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v5 = HIBYTE(v2) & 0xF;
    v10[0] = a1;
    v10[1] = v2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v4 = (char *)v10;
    goto LABEL_7;
  }
  a1 = sub_1A88A289C();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v2 = v7;
  if ((v7 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((a1 & 0x1000000000000000) != 0)
  {
    uint64_t v4 = (char *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v4 = (char *)sub_1A8A77E88();
  }
LABEL_7:
  uint64_t v8 = sub_1A88A2C3C(v4, v5);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1A88A2FE0()
{
  unint64_t result = qword_1E974E190;
  if (!qword_1E974E190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E190);
  }
  return result;
}

ValueMetadata *type metadata accessor for Tag()
{
  return &type metadata for Tag;
}

id MessageIdentifierSet<>.makeNSArrayOfNSNumber()()
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97454D8);
  MEMORY[0x1F4188790](v18);
  unint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C28);
  MessageIdentifierSet.count.getter();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA48]), sel_initWithCapacity_, v4);
  sub_1A88A31EC(v0, (uint64_t)v2);
  uint64_t v6 = MessageIdentifierSet.startIndex.getter(v3);
  uint64_t v8 = v7;
  if (v6 != MessageIdentifierSet.endIndex.getter(v3) || v8 != v9)
  {
    do
    {
      do
      {
        MessageIdentifierSet.subscript.getter();
        uint64_t v11 = v19;
        MessageIdentifierSet.index(_:offsetBy:)();
        uint64_t v6 = v12;
        uint64_t v8 = v13;
        id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedInt_, v11);
        objc_msgSend(v5, sel_addObject_, v14);
      }
      while (v6 != MessageIdentifierSet.endIndex.getter(v3));
    }
    while (v8 != v15);
  }
  uint64_t v16 = (uint64_t *)&v2[*(int *)(v18 + 36)];
  *uint64_t v16 = v6;
  v16[1] = v8;
  sub_1A88A3254((uint64_t)v2);
  return v5;
}

uint64_t sub_1A88A31EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9741C28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88A3254(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97454D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CompactEncDet_detectEncoding(int8x8_t *a1, int a2, char *a3, int a4, unsigned int a5, unsigned int a6, unsigned __int8 *a7)
{
  if (a4) {
    unsigned int v7 = 0;
  }
  else {
    unsigned int v7 = 2;
  }
  int v9 = 0;
  return CompactEncDet::DetectEncoding(a1, a2, 0, a3, 0, a5, a6, v7, 0, &v9, a7);
}

BOOL CompactEncDet_EncodingFromName(BOOL a1, unsigned char *a2)
{
  int v4 = 0;
  BOOL result = EncodingFromName(a1, &v4);
  *a2 = v4;
  return result;
}

uint64_t CompactEncDet_EncodingNameAliasToEncoding(char *a1)
{
  return EncodingNameAliasToEncoding(a1);
}

uint64_t CompactEncDet_LanguageFromCode(uint64_t a1, unsigned char *a2)
{
  int v4 = 0;
  uint64_t result = LanguageFromCode(a1, &v4);
  *a2 = v4;
  return result;
}

BOOL CompactEncDet_IS_LANGUAGE_UNKNOWN(int a1)
{
  return (a1 - 25) < 2;
}

uint64_t CompactEncDet_TopEncodingOfLangHint(CompactEncDet *a1, const char *a2)
{
  return CompactEncDet::TopEncodingOfLangHint(a1, a2);
}

uint64_t CompactEncDet_TopEncodingOfCharsetHint(CompactEncDet *a1, const char *a2)
{
  return CompactEncDet::TopEncodingOfCharsetHint(a1, a2);
}

void *SetDetailsEncProb(uint64_t a1, int a2, int a3, uint64_t a4)
{
  int v5 = *(_DWORD *)(a1 + 40);
  uint64_t v6 = (_DWORD *)(*(void *)(a1 + 32) + 304 * v5);
  *uint64_t v6 = a2;
  v6[1] = a3;
  MEMORY[0x1AD0E3190](v6 + 2, a4);
  uint64_t result = memcpy((void *)(*(void *)(a1 + 32) + 304 * v5 + 32), (const void *)(a1 + 532), 0x10CuLL);
  ++*(_DWORD *)(a1 + 40);
  return result;
}

void *SetDetailsEncProbCopyOffset(uint64_t a1, int a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(a1 + 40);
  int v5 = (_DWORD *)(*(void *)(a1 + 32) + 304 * v4);
  *int v5 = *(v5 - 76);
  v5[1] = a2;
  MEMORY[0x1AD0E3190](v5 + 2, a3);
  uint64_t result = memcpy((void *)(*(void *)(a1 + 32) + 304 * v4 + 32), (const void *)(a1 + 532), 0x10CuLL);
  ++*(_DWORD *)(a1 + 40);
  return result;
}

void *SetDetailsEncLabel(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 40);
  uint64_t v3 = (_DWORD *)(*(void *)(a1 + 32) + 304 * v2);
  _DWORD *v3 = *(v3 - 76);
  v3[1] = -1;
  MEMORY[0x1AD0E3190](v3 + 2);
  uint64_t result = memcpy((void *)(*(void *)(a1 + 32) + 304 * v2 + 32), (const void *)(a1 + 532), 0x10CuLL);
  ++*(_DWORD *)(a1 + 40);
  return result;
}

void *SetDetailsLabel(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = 304 * v2 - 304;
  int v5 = *(_DWORD *)(v3 + v4);
  uint64_t v6 = (_DWORD *)(v3 + 304 * v2);
  *uint64_t v6 = v5;
  v6[1] = -1;
  MEMORY[0x1AD0E3190](v6 + 2);
  uint64_t result = memcpy((void *)(*(void *)(a1 + 32) + 304 * v2 + 32), (const void *)(*(void *)(a1 + 32) + v4 + 32), 0x10CuLL);
  ++*(_DWORD *)(a1 + 40);
  return result;
}

uint64_t UTF88Sub(int a1, unsigned int a2)
{
  int v2 = (a2 >> 4) & 3;
  int v3 = v2 | 4;
  if (a1 != 226) {
    int v3 = (a2 >> 4) & 3;
  }
  int v4 = v2 | 8;
  if (((1 << (a1 + 62)) & 0x219) == 0) {
    int v4 = (a2 >> 4) & 3;
  }
  if (a1 - 194 <= 9) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = (a2 >> 4) & 3;
  }
  if ((a1 & 0xF0) != 0xC0) {
    unsigned int v5 = v3;
  }
  unsigned int v6 = v2 | 0xC;
  if (a1 == -61) {
    return v6;
  }
  else {
    return v5;
  }
}

uint64_t CompactEncDet::BackmapEncodingToRankedEncoding(int a1)
{
  uint64_t result = 0;
  while (kMapToEncoding[result] != a1)
  {
    if (++result == 67) {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

std::string *DecodeActive@<X0>(__int16 a1@<W0>, std::string *a2@<X8>)
{
  uint64_t result = (std::string *)std::string::basic_string[abi:ne180100]<0>(a2, "");
  if ((a1 & 0x80) != 0) {
    uint64_t result = std::string::append(a2, "Binary ");
  }
  if ((a1 & 0x40) != 0) {
    uint64_t result = std::string::append(a2, "UTF1632 ");
  }
  if ((a1 & 0x20) != 0) {
    uint64_t result = std::string::append(a2, "UTF8UTF8 ");
  }
  if ((a1 & 0x10) != 0) {
    uint64_t result = std::string::append(a2, "UTF8 ");
  }
  if ((a1 & 8) != 0) {
    uint64_t result = std::string::append(a2, "Iso2022 ");
  }
  if ((a1 & 4) != 0) {
    uint64_t result = std::string::append(a2, "Hz ");
  }
  if ((a1 & 2) != 0) {
    uint64_t result = std::string::append(a2, "UTF7A ");
  }
  if (a1) {
    uint64_t result = std::string::append(a2, "SevenBit ");
  }
  if ((a1 & 0x200) != 0) {
    uint64_t result = std::string::append(a2, "Indic ");
  }
  if ((a1 & 0x400) != 0) {
    uint64_t result = std::string::append(a2, "HighAlpha ");
  }
  if ((a1 & 0x800) != 0) {
    uint64_t result = std::string::append(a2, "HighAccent ");
  }
  if ((a1 & 0x1000) != 0) {
    return std::string::append(a2, "EUCJP ");
  }
  return result;
}

void sub_1A88A377C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void PsSourceInit(int a1)
{
  pssourcenext = 0;
  pssourcewidth = a1;
  if (pssource_mark_buffer) {
    MEMORY[0x1AD0E31B0](pssource_mark_buffer, 0x1000C8077774924);
  }
  operator new[]();
}

uint64_t PsSourceFinish(void)
{
  uint64_t v0 = (2 * pssourcewidth);
  uint64_t v1 = (const char *)pssource_mark_buffer;
  int v2 = v0 & ((int)v0 >> 31);
  uint64_t v3 = v0 - 1;
  while (1)
  {
    BOOL v4 = __OFSUB__(v0, 1);
    LODWORD(v0) = v0 - 1;
    if ((int)v0 < 0 != v4) {
      break;
    }
    int v5 = *(unsigned __int8 *)(pssource_mark_buffer + v3--);
    if (v5 != 32)
    {
      int v2 = v0 + 1;
      break;
    }
  }
  *(unsigned char *)(pssource_mark_buffer + v2) = 0;
  fprintf((FILE *)*MEMORY[0x1E4F143C8], "(      %s) do-src\n", v1);
  uint64_t v6 = pssource_mark_buffer;
  size_t v7 = 2 * pssourcewidth;
  memset((void *)pssource_mark_buffer, 32, v7);
  *(void *)(v6 + v7) = 0;
  uint64_t result = MEMORY[0x1AD0E31B0](v6, 0x1000C8077774924);
  pssource_mark_buffer = 0;
  return result;
}

size_t PsSource(size_t result, const unsigned __int8 *a2, const unsigned __int8 *a3)
{
  int v4 = ((int)result - (int)a2) / pssourcewidth * pssourcewidth;
  if (v4 >= pssourcenext)
  {
    int v5 = (int)a3;
    pssourcenext = v4 + pssourcewidth;
    uint64_t v6 = (2 * pssourcewidth);
    size_t v7 = (const char *)pssource_mark_buffer;
    int v8 = v6 & ((int)v6 >> 31);
    uint64_t v9 = v6 - 1;
    while (1)
    {
      BOOL v10 = __OFSUB__(v6, 1);
      LODWORD(v6) = v6 - 1;
      if ((int)v6 < 0 != v10) {
        break;
      }
      int v11 = *(unsigned __int8 *)(pssource_mark_buffer + v9--);
      if (v11 != 32)
      {
        int v8 = v6 + 1;
        break;
      }
    }
    *(unsigned char *)(pssource_mark_buffer + v8) = 0;
    uint64_t v12 = (FILE **)MEMORY[0x1E4F143C8];
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "(      %s) do-src\n", v7);
    uint64_t v13 = pssource_mark_buffer;
    uint64_t v14 = pssourcewidth;
    memset((void *)pssource_mark_buffer, 32, 2 * pssourcewidth);
    *(void *)(v13 + 2 * v14) = 0;
    uint64_t v15 = &a2[v4];
    if ((int)v14 >= v5 - (int)v15) {
      uint64_t v16 = (v5 - v15);
    }
    else {
      uint64_t v16 = v14;
    }
    fprintf(*v12, "(%05x ", v4);
    if ((int)v16 >= 1)
    {
      do
      {
        int v18 = *v15++;
        int v17 = v18;
        if (v18 == 10) {
          int v17 = 32;
        }
        if (v17 == 13) {
          int v17 = 32;
        }
        if (v17 == 9) {
          int v17 = 32;
        }
        switch(v17)
        {
          case '\\':
            unsigned int v19 = *v12;
            uint64_t v20 = "\\\\ ";
            break;
          case ')':
            unsigned int v19 = *v12;
            uint64_t v20 = "\\) ";
            break;
          case '(':
            unsigned int v19 = *v12;
            uint64_t v20 = "\\( ";
            break;
          default:
            unint64_t v21 = *v12;
            if (((char)v17 - 32) > 0x5E) {
              fprintf(v21, "%02x");
            }
            else {
              fprintf(v21, "%c ");
            }
            goto LABEL_26;
        }
        fputs(v20, v19);
LABEL_26:
        --v16;
      }
      while (v16);
    }
    uint64_t result = fwrite(") do-src\n", 9uLL, 1uLL, *v12);
    int v22 = next_do_src_line;
    *((_DWORD *)&do_src_offset + (next_do_src_line & 0xF)) = v4;
    next_do_src_line = v22 + 1;
  }
  return result;
}

void *PsMark(void *result, int a2, const unsigned __int8 *a3, int a4)
{
  uint64_t v4 = pssource_mark_buffer;
  int v5 = 2 * (((int)result - (int)a3) % pssourcewidth);
  *(_WORD *)(pssource_mark_buffer + v5) = 15677;
  if (a2 >= 2)
  {
    size_t v6 = 2 * (a2 - 1);
    if (a4) {
      int v7 = 120;
    }
    else {
      int v7 = 45;
    }
    return memset((void *)(v4 + v5 + 2), v7, v6);
  }
  return result;
}

uint64_t PsHighlight(uint64_t result, const unsigned __int8 *a2, int a3, int a4)
{
  int v4 = result - a2 + 1;
  int v5 = v4 / pssourcewidth * pssourcewidth;
  int v6 = v4 % pssourcewidth;
  int v7 = -1;
  while (*((_DWORD *)&do_src_offset + (((_BYTE)next_do_src_line + (_BYTE)v7) & 0xF)) != v5)
  {
    if (--v7 == -17) {
      return result;
    }
  }
  return fprintf((FILE *)*MEMORY[0x1E4F143C8], "%d %d %d do-highlight%d\n", -v7, v6 - 1, a3, a4);
}

void InitDetectEncodingState(uint64_t a1)
{
  uint64_t v1 = 0;
  int v2 = 0;
  *(_OWORD *)(a1 + 180) = 0u;
  *(_OWORD *)(a1 + 164) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 31) = 0u;
  *(void *)(a1 + 56) = 0;
  *(_WORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  *(_OWORD *)(a1 + 100) = 0u;
  *(_OWORD *)(a1 + 116) = 0u;
  *(_OWORD *)(a1 + 132) = 0u;
  *(_OWORD *)(a1 + 145) = 0u;
  *(_OWORD *)(a1 + 196) = xmmword_1A8AE61A0;
  *(_OWORD *)(a1 + 240) = xmmword_1A8AE61B0;
  *(_DWORD *)(a1 + 256) = 1200;
  *(_DWORD *)(a1 + 236) = -1;
  *(void *)(a1 + 228) = -1;
  *(void *)(a1 + 220) = -1;
  *(void *)(a1 + 212) = 23;
  do
  {
    if ((kSpecialMask[kMapToEncoding[v1]] & 0x200) == 0)
    {
      uint64_t v3 = a1 + 4 * v2++;
      *(_DWORD *)(v3 + 264) = v1;
    }
    ++v1;
  }
  while (v1 != 67);
  *(_DWORD *)(a1 + 260) = v2;
  bzero((void *)(a1 + 532), 0x334uLL);
}

uint64_t ApplyCompressedProb(unsigned __int8 *a1, int a2, int a3, uint64_t a4)
{
  if (a2 < 1) {
    return 0;
  }
  uint64_t result = 0;
  int v6 = (_DWORD *)(a4 + 1068);
  uint64_t v7 = a4 + 532;
  int v8 = -1;
  uint64_t v9 = (int *)(a4 + 532);
  BOOL v10 = &a1[a2];
  do
  {
    unsigned int v12 = *a1++;
    unint64_t v11 = v12;
    if (!v12) {
      break;
    }
    uint64_t v13 = v11 & 0xF;
    if ((v11 & 0xF) != 0)
    {
      unint64_t v14 = v11 >> 4;
      v9 += v14;
      v6 += v14;
      unint64_t v15 = ((unint64_t)v9 - v7) >> 2;
      uint64_t v16 = v13;
      int v17 = a1;
      int v18 = v9;
      unsigned int v19 = v6;
      do
      {
        int v21 = *v17++;
        int v20 = v21;
        BOOL v22 = v8 < v21;
        if (v8 <= v21) {
          int v8 = v20;
        }
        if (v22) {
          uint64_t result = v15;
        }
        else {
          uint64_t result = result;
        }
        if (a3 >= 1)
        {
          int v23 = 3 * a3 * v20 / 100;
          if (*v18 > v23) {
            int v23 = *v18;
          }
          *int v18 = v23;
          *unsigned int v19 = 1;
        }
        LODWORD(v15) = v15 + 1;
        ++v19;
        ++v18;
        --v16;
      }
      while (v16);
      a1 += v13;
    }
    else
    {
      uint64_t v13 = v11 & 0xF0;
    }
    v9 += v13;
    v6 += v13;
  }
  while (a1 < v10);
  return result;
}

uint64_t TopCompressedProb(const char *a1, int a2)
{
  if (a2 < 1) {
    return 0;
  }
  uint64_t result = 0;
  int v4 = 0;
  int v5 = 0;
  int v6 = &a1[a2];
  do
  {
    unsigned int v8 = *(unsigned __int8 *)a1++;
    unsigned int v7 = v8;
    if (!v8) {
      break;
    }
    uint64_t v9 = v7 & 0xF;
    if ((v7 & 0xF) != 0)
    {
      unsigned int v10 = (v7 >> 4) + v5;
      uint64_t v11 = v7 & 0xF;
      unsigned int v12 = a1;
      unsigned int v13 = v10;
      do
      {
        int v15 = *(unsigned __int8 *)v12++;
        int v14 = v15;
        BOOL v16 = v4 < v15;
        if (v4 <= v15) {
          int v4 = v14;
        }
        if (v16) {
          uint64_t result = v13;
        }
        else {
          uint64_t result = result;
        }
        ++v13;
        --v11;
      }
      while (v11);
      a1 += v9;
      int v5 = v10 + v9;
    }
    else
    {
      v5 += v7 & 0xF0;
    }
  }
  while (a1 < v6);
  return result;
}

uint64_t HintBinaryLookup8(uint64_t a1, int a2, unint64_t *a3)
{
  if (a2 >= 1)
  {
    int v3 = 0;
    do
    {
      uint64_t v4 = ((a2 + v3) >> 1);
      unint64_t v5 = bswap64(*(void *)(a1 + 20 * (int)v4));
      unint64_t v6 = bswap64(*a3);
      BOOL v7 = v5 >= v6;
      BOOL v8 = v5 > v6;
      int v9 = !v7;
      int v10 = v8 - v9;
      if (v10 < 0)
      {
        int v3 = v4 + 1;
      }
      else
      {
        a2 = (a2 + v3) >> 1;
        if (!v10) {
          return v4;
        }
      }
    }
    while (v3 < a2);
  }
  return 0xFFFFFFFFLL;
}

uint64_t HintBinaryLookup4(uint64_t a1, int a2, unsigned int *a3)
{
  if (a2 >= 1)
  {
    int v3 = 0;
    do
    {
      uint64_t v4 = ((a2 + v3) >> 1);
      unsigned int v5 = bswap32(*(_DWORD *)(a1 + 20 * (int)v4));
      unsigned int v6 = bswap32(*a3);
      BOOL v7 = v5 >= v6;
      BOOL v8 = v5 > v6;
      int v9 = !v7;
      int v10 = v8 - v9;
      if (v10 < 0)
      {
        int v3 = v4 + 1;
      }
      else
      {
        a2 = (a2 + v3) >> 1;
        if (!v10) {
          return v4;
        }
      }
    }
    while (v3 < a2);
  }
  return 0xFFFFFFFFLL;
}

uint64_t ApplyTldHint(char *__s, int a2, uint64_t a3)
{
  if (*__s == 126) {
    return 0;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  MakeChar4((uint64_t *)__p, v17);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  if (v18 >= 0) {
    BOOL v7 = (unsigned int *)v17;
  }
  else {
    BOOL v7 = (unsigned int *)v17[0];
  }
  int v8 = HintBinaryLookup4((uint64_t)kTLDHintProbs, 247, v7);
  if (v8 < 0)
  {
    uint64_t v3 = 0;
  }
  else
  {
    int v9 = ApplyCompressedProb(&kTLDHintProbs[20 * v8 + 4], 16, a2, a3);
    if (v9) {
      int v10 = v9;
    }
    else {
      int v10 = 4;
    }
    *(_DWORD *)(a3 + 48) = v10;
    uint64_t v11 = *(void *)(a3 + 32);
    if (v11)
    {
      int v12 = *(_DWORD *)(a3 + 40);
      unsigned int v13 = (_DWORD *)(v11 + 304 * v12);
      *unsigned int v13 = 0;
      v13[1] = v10;
      MEMORY[0x1AD0E3190](v13 + 2, __s);
      memcpy((void *)(*(void *)(a3 + 32) + 304 * v12 + 32), (const void *)(a3 + 532), 0x10CuLL);
      ++*(_DWORD *)(a3 + 40);
    }
    uint64_t v3 = 1;
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  return v3;
}

void sub_1A88A403C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ApplyCharsetHint(char *__s, int a2, uint64_t a3)
{
  if (*__s == 126) {
    return 0;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, __s);
  MakeChar44((uint64_t *)&__p, &__str);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_str = &__str;
  }
  else {
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  int v8 = HintBinaryLookup8((uint64_t)kCharsetHintProbs, 438, (unint64_t *)p_str);
  if (v8 < 0)
  {
    uint64_t v3 = 0;
    goto LABEL_62;
  }
  unsigned int v9 = ApplyCompressedProb(&kCharsetHintProbs[20 * v8 + 8], 12, a2, a3);
  if (v9) {
    unsigned int v10 = v9;
  }
  else {
    unsigned int v10 = 4;
  }
  *(_DWORD *)(a3 + 48) = v10;
  if (*(_DWORD *)(a3 + 204) == 23 && *(_DWORD *)(a3 + 208) == 23)
  {
    switch(v10)
    {
      case 9u:
        int v11 = 12;
        goto LABEL_20;
      case 0xAu:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 572);
        goto LABEL_44;
      case 0xBu:
        int v13 = 34;
        goto LABEL_41;
      case 0xCu:
        int v11 = 9;
LABEL_20:
        *(_DWORD *)(a3 + 52) = v11;
        *(_DWORD *)(a3 + 568) += 120;
        int v12 = (_DWORD *)(a3 + 580);
        goto LABEL_44;
      case 0xDu:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 584);
        goto LABEL_44;
      case 0xEu:
        int v14 = 28;
        goto LABEL_36;
      case 0xFu:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 592);
        goto LABEL_44;
      case 0x10u:
        int v15 = 29;
        goto LABEL_38;
      case 0x11u:
        int v16 = 25;
        goto LABEL_32;
      case 0x12u:
        int v12 = (_DWORD *)(a3 + 604);
        goto LABEL_44;
      case 0x14u:
        int v17 = 23;
        goto LABEL_30;
      case 0x16u:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 620);
        goto LABEL_44;
      case 0x17u:
        int v17 = 20;
LABEL_30:
        *(_DWORD *)(a3 + 52) = v17;
        *(_DWORD *)(a3 + 612) += 120;
        int v12 = (_DWORD *)(a3 + 624);
        goto LABEL_44;
      case 0x19u:
        int v16 = 17;
LABEL_32:
        *(_DWORD *)(a3 + 52) = v16;
        *(_DWORD *)(a3 + 632) += 120;
        int v12 = (_DWORD *)(a3 + 600);
        goto LABEL_44;
      case 0x1Au:
        int v12 = (_DWORD *)(a3 + 636);
        goto LABEL_44;
      case 0x1Bu:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 640);
        goto LABEL_44;
      case 0x1Cu:
        int v14 = 14;
LABEL_36:
        *(_DWORD *)(a3 + 52) = v14;
        *(_DWORD *)(a3 + 588) += 120;
        int v12 = (_DWORD *)(a3 + 644);
        goto LABEL_44;
      case 0x1Du:
        int v15 = 16;
LABEL_38:
        *(_DWORD *)(a3 + 52) = v15;
        *(_DWORD *)(a3 + 648) += 120;
        int v12 = (_DWORD *)(a3 + 596);
        goto LABEL_44;
      case 0x1Eu:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 652);
        goto LABEL_44;
      case 0x22u:
        int v13 = 11;
LABEL_41:
        *(_DWORD *)(a3 + 52) = v13;
        *(_DWORD *)(a3 + 668) += 120;
        int v12 = (_DWORD *)(a3 + 576);
        goto LABEL_44;
      case 0x26u:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 684);
        goto LABEL_44;
      case 0x2Bu:
        *(_DWORD *)(a3 + 52) = 0;
        int v12 = (_DWORD *)(a3 + 704);
LABEL_44:
        *v12 += 120;
        break;
      default:
        break;
    }
  }
  uint64_t v18 = *(void *)(a3 + 32);
  if (v18)
  {
    int v19 = *(_DWORD *)(a3 + 40);
    int v20 = (_DWORD *)(v18 + 304 * v19);
    *int v20 = 0;
    v20[1] = v10;
    MEMORY[0x1AD0E3190](v20 + 2, __s);
    memcpy((void *)(*(void *)(a3 + 32) + 304 * v19 + 32), (const void *)(a3 + 532), 0x10CuLL);
    ++*(_DWORD *)(a3 + 40);
  }
  if (v10 > 4 || ((1 << v10) & 0x16) == 0) {
    *(_DWORD *)(a3 + 768) -= 2400;
  }
  std::string::basic_string(&__p, &__str, 0, 4uLL, (std::allocator<char> *)&v26);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) != 4 || LODWORD(__p.__r_.__value_.__l.__data_) != 1919251317) {
      goto LABEL_61;
    }
LABEL_59:
    *(_DWORD *)(a3 + 764) += 7200;
    goto LABEL_61;
  }
  if (__p.__r_.__value_.__l.__size_ != 4)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_61;
  }
  int v22 = *(_DWORD *)__p.__r_.__value_.__l.__data_;
  operator delete(__p.__r_.__value_.__l.__data_);
  if (v22 == 1919251317) {
    goto LABEL_59;
  }
LABEL_61:
  uint64_t v3 = 1;
LABEL_62:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_1A88A43DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ApplyEncodingHint(int a1, int a2, uint64_t a3)
{
  uint64_t v5 = 0;
  unsigned int v6 = a1 ^ (a1 >> 31);
  while (kMapToEncoding[v5] != v6)
  {
    if (++v5 == 67)
    {
      uint64_t v5 = -1;
      break;
    }
  }
  uint64_t v7 = a3 + 4 * v5;
  if (a1 >= 0) {
    int v8 = 6 * a2;
  }
  else {
    int v8 = -6 * a2;
  }
  *(_DWORD *)(v7 + 532) += v8;
  if (*(void *)(a3 + 32))
  {
    unsigned int v9 = MyEncodingName(v6);
    int v10 = *(_DWORD *)(a3 + 40);
    int v11 = (void *)(*(void *)(a3 + 32) + 304 * v10);
    *int v11 = 0xFFFFFFFF00000000;
    MEMORY[0x1AD0E3190](v11 + 1, v9);
    memcpy((void *)(*(void *)(a3 + 32) + 304 * v10 + 32), (const void *)(a3 + 532), 0x10CuLL);
    ++*(_DWORD *)(a3 + 40);
  }
  return 1;
}

uint64_t ApplyUILanguageHint(unsigned int a1, int a2, uint64_t a3)
{
  if (a1 == 26) {
    return 0;
  }
  unsigned int v6 = (char *)LanguageName(a1);
  std::string::basic_string[abi:ne180100]<0>(__p, v6);
  MakeChar8((uint64_t *)__p, v19);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  char v7 = v20;
  if (v20 >= 0) {
    int v8 = (unint64_t *)v19;
  }
  else {
    int v8 = (unint64_t *)v19[0];
  }
  int v9 = HintBinaryLookup8((uint64_t)kLangHintProbs, 151, v8);
  if (v9 < 0)
  {
    uint64_t v3 = 0;
    if ((v7 & 0x80) == 0) {
      return v3;
    }
    goto LABEL_19;
  }
  int v10 = ApplyCompressedProb(&kLangHintProbs[20 * v9 + 8], 12, a2, a3);
  if (v10) {
    int v11 = v10;
  }
  else {
    int v11 = 4;
  }
  *(_DWORD *)(a3 + 48) = v11;
  uint64_t v12 = *(void *)(a3 + 32);
  if (!v12)
  {
    uint64_t v3 = 1;
    if ((v20 & 0x80) == 0) {
      return v3;
    }
    goto LABEL_19;
  }
  if (v20 >= 0) {
    int v13 = v19;
  }
  else {
    int v13 = (void **)v19[0];
  }
  int v14 = *(_DWORD *)(a3 + 40);
  int v15 = (_DWORD *)(v12 + 304 * v14);
  *int v15 = 0;
  v15[1] = v11;
  MEMORY[0x1AD0E3190](v15 + 2, v13);
  memcpy((void *)(*(void *)(a3 + 32) + 304 * v14 + 32), (const void *)(a3 + 532), 0x10CuLL);
  ++*(_DWORD *)(a3 + 40);
  uint64_t v3 = 1;
  if (v20 < 0) {
LABEL_19:
  }
    operator delete(v19[0]);
  return v3;
}

void sub_1A88A46BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ApplyDefaultHint(unsigned int a1, uint64_t a2)
{
  for (uint64_t i = 0; i != 67; ++i)
  {
    int v4 = 3 * kDefaultProb[i];
    if (kSpecialMask[kMapToEncoding[i]]) {
      int v4 = 0;
    }
    *(_DWORD *)(a2 + 532 + 4 * i) = v4;
  }
  if (a1 < 2) {
    *(_DWORD *)(a2 + 768) = *(_DWORD *)(a2 + 540) - 60;
  }
  if (FLAGS_demo_nodefault)
  {
    *(_OWORD *)(a2 + 784) = 0u;
    *(_OWORD *)(a2 + 756) = 0u;
    *(_OWORD *)(a2 + 772) = 0u;
    *(_OWORD *)(a2 + 724) = 0u;
    *(_OWORD *)(a2 + 740) = 0u;
    *(_OWORD *)(a2 + 692) = 0u;
    *(_OWORD *)(a2 + 708) = 0u;
    *(_OWORD *)(a2 + 660) = 0u;
    *(_OWORD *)(a2 + 676) = 0u;
    *(_OWORD *)(a2 + 628) = 0u;
    *(_OWORD *)(a2 + 644) = 0u;
    *(_OWORD *)(a2 + 596) = 0u;
    *(_OWORD *)(a2 + 612) = 0u;
    *(_OWORD *)(a2 + 564) = 0u;
    *(_OWORD *)(a2 + 580) = 0u;
    *(_OWORD *)(a2 + 532) = 0u;
    *(_OWORD *)(a2 + 548) = 0u;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (v5)
  {
    int v6 = *(_DWORD *)(a2 + 40);
    char v7 = (void *)(v5 + 304 * v6);
    void *v7 = 0xFFFFFFFF00000000;
    MEMORY[0x1AD0E3190](v7 + 1, "Default");
    memcpy((void *)(*(void *)(a2 + 32) + 304 * v6 + 32), (const void *)(a2 + 532), 0x10CuLL);
    ++*(_DWORD *)(a2 + 40);
  }
  return 1;
}

const char *MyMemrchr(const char *a1, unsigned __int8 a2, uint64_t a3)
{
  uint64_t v3 = &a1[a3 - 1];
  while (v3 >= a1)
  {
    int v4 = *(unsigned __int8 *)v3--;
    if (v4 == a2) {
      return v3 + 1;
    }
  }
  return 0;
}

uint64_t ExtractTLD(char *a1, char *__dst, int a3, const char **a4, int *a5)
{
  size_t v10 = a3;
  uint64_t result = (uint64_t)strncpy(__dst, "~", a3);
  size_t v12 = v10 - 1;
  __dst[v10 - 1] = 0;
  *a4 = 0;
  *a5 = 0;
  if (a1)
  {
    uint64_t result = strlen(a1);
    int v13 = result;
    if (result)
    {
      if ((int)result < 11)
      {
        uint64_t result = (uint64_t)strncpy(__dst, a1, v10);
        __dst[v12] = 0;
      }
      else
      {
        uint64_t result = (uint64_t)strchr(a1, 47);
        if (result)
        {
          uint64_t v14 = result;
          if ((char *)result != a1 && *(unsigned char *)(result - 1) == 58 && *(unsigned char *)(result + 1) == 47)
          {
            uint64_t v15 = result - (void)a1;
            if ((char *)result == a1)
            {
LABEL_11:
              int v16 = (const char *)(result + 2);
              int v17 = strchr((char *)(result + 2), 47);
              char v18 = &a1[v13];
              if (v17) {
                char v18 = v17;
              }
              int64_t v19 = v18 - v16;
              uint64_t result = (uint64_t)memchr((void *)(v14 + 2), 58, v18 - v16);
              if (result) {
                int64_t v19 = result - (void)v16;
              }
              int v20 = -1;
              int64_t v21 = v19;
              while (v21 + 2 >= 3)
              {
                int v22 = *(unsigned __int8 *)(v14 + v21-- + 1);
                ++v20;
                if (v22 == 46)
                {
                  if (v20 >= a3) {
                    int v23 = v12;
                  }
                  else {
                    int v23 = v20;
                  }
                  uint64_t result = (uint64_t)memcpy(__dst, (const void *)(v14 + v21 + 3), v23);
                  __dst[v23] = 0;
                  break;
                }
              }
              *a4 = v16;
              *a5 = v19;
            }
            else
            {
              while (a1[v15 - 1] != 46)
              {
                if (!--v15) {
                  goto LABEL_11;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *ApplyHints(char *a1, char *a2, char *a3, int a4, unsigned int a5, unsigned int a6, uint64_t a7)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  ExtractTLD(a1, __dst, 16, (const char **)&v32, &v31);
  *(void *)(a7 + 48) = 4;
  if (a2)
  {
    LODWORD(v15) = 4;
    if (*a2 == 126)
    {
      LODWORD(a2) = 0;
    }
    else
    {
      *(_DWORD *)(a7 + 52) = 4;
      LODWORD(a2) = ApplyCharsetHint(a2, 100, a7);
      uint64_t v15 = *(int *)(a7 + 48);
      *(_DWORD *)(a7 + 204) = kMapToEncoding[v15];
      if (v15 == 4 || v15 == 1) {
        *(unsigned char *)(a7 + 64) = 1;
      }
    }
  }
  else
  {
    LODWORD(v15) = 4;
  }
  if (a3)
  {
    if (*a3 != 126)
    {
      *(_DWORD *)(a7 + 52) = v15;
      LODWORD(a2) = ApplyCharsetHint(a3, 100, a7) + a2;
      uint64_t v16 = *(int *)(a7 + 48);
      LODWORD(v15) = *(_DWORD *)(a7 + 48);
      *(_DWORD *)(a7 + 208) = kMapToEncoding[v16];
      if (v16 == 4 || v15 == 1) {
        *(unsigned char *)(a7 + 64) = 1;
      }
    }
  }
  if (a4 != 23)
  {
    *(_DWORD *)(a7 + 52) = v15;
    ApplyEncodingHint(a4, 50, a7);
    LODWORD(a2) = a2 + 1;
  }
  if (a5 != 26)
  {
    *(_DWORD *)(a7 + 52) = *(_DWORD *)(a7 + 48);
    LODWORD(a2) = ApplyUILanguageHint(a5, 50, a7) + a2;
  }
  if (a1)
  {
    *(_DWORD *)(a7 + 200) = CompactEncDet::TopEncodingOfTLDHint((CompactEncDet *)__dst, v14);
    if (a2 == 1)
    {
      if (*(_DWORD *)__dst != 7171939)
      {
        *(_DWORD *)(a7 + 52) = *(_DWORD *)(a7 + 48);
        ApplyTldHint(__dst, 50, a7);
        int v19 = *(_DWORD *)(a7 + 48);
        if (v19 == 4 || v19 == 1) {
          *(unsigned char *)(a7 + 64) = 1;
        }
      }
      goto LABEL_31;
    }
    if (a2) {
      goto LABEL_31;
    }
    *(_DWORD *)(a7 + 52) = *(_DWORD *)(a7 + 48);
    int v17 = ApplyTldHint(__dst, 100, a7);
    LODWORD(a2) = v17;
    int v18 = *(_DWORD *)(a7 + 48);
    if (v18 == 4 || v18 == 1) {
      *(unsigned char *)(a7 + 64) = 1;
    }
    if (!(*(unsigned __int16 *)__dst ^ 0x7568 | __dst[2]))
    {
      *(unsigned char *)(a7 + 64) = 1;
      if (v17) {
        goto LABEL_31;
      }
      goto LABEL_25;
    }
  }
  if (!a2)
  {
LABEL_25:
    *(unsigned char *)(a7 + 64) = 1;
    *(_DWORD *)(a7 + 52) = *(_DWORD *)(a7 + 48);
    ApplyDefaultHint(a6, a7);
  }
LABEL_31:
  *(_DWORD *)(a7 + 628) = *(_DWORD *)(a7 + 556) - 60;
  int v20 = *(_DWORD *)(a7 + 544) - 60;
  *(_DWORD *)(a7 + 608) = v20;
  *(_DWORD *)(a7 + 660) = v20;
  int v21 = *(_DWORD *)(a7 + 564);
  *(_DWORD *)(a7 + 564) = v21 - 60;
  *(_DWORD *)(a7 + 672) = v21 - 120;
  uint64_t v22 = *(void *)(a7 + 32);
  if (v22)
  {
    int v23 = *(_DWORD *)(a7 + 40);
    unint64_t v24 = (void *)(v22 + 304 * v23);
    *unint64_t v24 = 0xFFFFFFFF00000000;
    MEMORY[0x1AD0E3190](v24 + 1, "Endhints");
    memcpy((void *)(*(void *)(a7 + 32) + 304 * v23 + 32), (const void *)(a7 + 532), 0x10CuLL);
    uint64_t v25 = *(int *)(a7 + 40) + 1;
    *(_DWORD *)(a7 + 40) = v25;
    if (FLAGS_enc_detect_detail2)
    {
      int v26 = watch1_rankedenc;
      if ((watch1_rankedenc & 0x80000000) == 0)
      {
        v25 *= 304;
        uint64_t v27 = (_DWORD *)(*(void *)(a7 + 32) + v25);
        *uint64_t v27 = 0;
        v27[1] = v26;
        MEMORY[0x1AD0E3190](v27 + 2, "");
        memcpy((void *)(*(void *)(a7 + 32) + v25 + 32), (const void *)(a7 + 532), 0x10CuLL);
        LODWORD(v25) = *(_DWORD *)(a7 + 40) + 1;
        *(_DWORD *)(a7 + 40) = v25;
      }
      int v28 = watch2_rankedenc;
      if ((watch2_rankedenc & 0x80000000) == 0)
      {
        uint64_t v29 = (_DWORD *)(*(void *)(a7 + 32) + 304 * (int)v25);
        *uint64_t v29 = 0;
        v29[1] = v28;
        MEMORY[0x1AD0E3190](v29 + 2, "");
        memcpy((void *)(*(void *)(a7 + 32) + 304 * (int)v25 + 32), (const void *)(a7 + 532), 0x10CuLL);
        ++*(_DWORD *)(a7 + 40);
      }
    }
  }
  if (*(_DWORD *)(a7 + 48) == *(_DWORD *)(a7 + 52)) {
    *(_DWORD *)(a7 + 52) = 0;
  }
  if (FLAGS_force127)
  {
    *(unsigned char *)(a7 + 65) = 1;
    if (FLAGS_enc_detect_source) {
      PsHighlight(0, *(const unsigned __int8 **)a7, 0, 2);
    }
  }
  if (FLAGS_counts)
  {
    if (*(unsigned char *)(a7 + 64)) {
      ++looking_used;
    }
    if (*(unsigned char *)(a7 + 65)) {
      ++doing_used;
    }
  }
  return memcpy((void *)(a7 + 800), (const void *)(a7 + 532), 0x10CuLL);
}

uint64_t CompactEncDet::TopEncodingOfTLDHint(CompactEncDet *this, const char *a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, (char *)this);
  MakeChar4((uint64_t *)__p, v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  int v2 = v11;
  uint64_t v3 = (void *)v10[0];
  if (v11 >= 0) {
    int v4 = (unsigned int *)v10;
  }
  else {
    int v4 = (unsigned int *)v10[0];
  }
  int v5 = HintBinaryLookup4((uint64_t)kTLDHintProbs, 247, v4);
  if (v5 < 0)
  {
    uint64_t v6 = 23;
    if ((v2 & 0x80000000) == 0) {
      return v6;
    }
    goto LABEL_8;
  }
  uint64_t v6 = kMapToEncoding[(int)TopCompressedProb((const char *)&kTLDHintProbs[20 * v5 + 4], 16)];
  if (v2 < 0) {
LABEL_8:
  }
    operator delete(v3);
  return v6;
}

void sub_1A88A4EC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *InitialBytesBoost(unsigned __int8 *result, int a2, uint64_t a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  if (a2 < 4) {
    return result;
  }
  uint64_t v4 = *result;
  uint64_t v5 = result[1];
  int v6 = v5 | (v4 << 8);
  int v7 = result[3] | (result[2] << 8);
  int v8 = (result[2] << 8) | (v6 << 16);
  if (v8 != -272908544)
  {
    int v11 = _byteswap_ushort(*((_WORD *)result + 1)) | ((unsigned __int16)v6 << 16);
    if (v11 == -131072)
    {
      *(_DWORD *)(a3 + 212) = 60;
      char v9 = (_DWORD *)(a3 + 760);
      int v10 = 57;
      goto LABEL_8;
    }
    if (v11 == 65279)
    {
      *(_DWORD *)(a3 + 212) = 59;
      char v9 = (_DWORD *)(a3 + 756);
      int v10 = 56;
      goto LABEL_8;
    }
    if (v6 == 65534)
    {
      *(_DWORD *)(a3 + 212) = 58;
      char v9 = (_DWORD *)(a3 + 688);
      int v10 = 39;
      goto LABEL_31;
    }
    if (v6 == 65279)
    {
      *(_DWORD *)(a3 + 212) = 57;
      char v9 = (_DWORD *)(a3 + 680);
      int v10 = 37;
LABEL_31:
      int v12 = 1800;
      goto LABEL_9;
    }
    if (!v8 && kIsPrintableAscii[result[3]])
    {
      *(_DWORD *)(a3 + 756) += 600;
      char v9 = (_DWORD *)(a3 + 760);
      int v10 = 56;
LABEL_51:
      int v12 = -600;
      goto LABEL_9;
    }
    if ((v11 & 0xFFFFFF) == 0 && kIsPrintableAscii[v4])
    {
      *(_DWORD *)(a3 + 760) += 600;
      char v9 = (_DWORD *)(a3 + 756);
      int v10 = 57;
      goto LABEL_51;
    }
    if (!*result && kIsPrintableAscii[v5])
    {
      char v9 = (_DWORD *)(a3 + 680);
      int v10 = 37;
LABEL_47:
      int v12 = 600;
      goto LABEL_9;
    }
    if (!result[1] && kIsPrintableAscii[v4])
    {
      char v9 = (_DWORD *)(a3 + 688);
      int v10 = 39;
      goto LABEL_47;
    }
    if (v11 == -1 || !v11)
    {
      int v12 = -600;
      *(int32x2_t *)(a3 + 756) = vadd_s32(*(int32x2_t *)(a3 + 756), vdup_n_s32(0xFFFFFDA8));
      *(_DWORD *)(a3 + 680) -= 600;
      char v9 = (_DWORD *)(a3 + 688);
      int v10 = -1;
      goto LABEL_9;
    }
    if (v6 == 0xFFFF || !v6)
    {
      *(_DWORD *)(a3 + 680) -= 600;
      char v9 = (_DWORD *)(a3 + 688);
      int v10 = -1;
      goto LABEL_51;
    }
    if (v8 == -2556160
      || v11 == 1347093252
      || v11 == 1195984440
      || v11 == -1991225785
      || v8 == 529205248
      || v6 == 30938
      || v11 == 626017350
      || (_byteswap_ushort(*((_WORD *)result + 1)) & 0xFF1F | ((unsigned __int16)v6 << 16)) == 0x63535700
      || (_byteswap_ushort(*((_WORD *)result + 1)) & 0xFF1F | ((unsigned __int16)v6 << 16)) == 0x66535700)
    {
      char v9 = (_DWORD *)(a3 + 764);
      int v10 = -1;
LABEL_62:
      int v12 = 7200;
      goto LABEL_9;
    }
    int v10 = -1;
    if (v11 <= 1213681695)
    {
      if (v11 > 943870034)
      {
        if (v11 == 943870035) {
          goto LABEL_76;
        }
        int v19 = 1128485700;
      }
      else
      {
        if (v11 == 23487344) {
          goto LABEL_76;
        }
        int v19 = 704662861;
      }
    }
    else
    {
      if (v11 > 1346655070)
      {
        if (v11 != 1346655071)
        {
          if (v11 != 1397312848)
          {
            int v19 = 2135247942;
            goto LABEL_75;
          }
LABEL_76:
          char v9 = (_DWORD *)(a3 + 764);
          goto LABEL_62;
        }
        if (a2 >= 0xE
          && *(void *)result == 0x535245565F534450
          && *(void *)(result + 6) == 0x44495F4E4F495352)
        {
          goto LABEL_76;
        }
LABEL_99:
        char v9 = (_DWORD *)(a3 + 764);
        int v12 = 2400;
        goto LABEL_9;
      }
      if (v11 == 1213681696)
      {
        if (a2 >= 0x13)
        {
          BOOL v21 = *(void *)result == 0x75636F442E505748 && *((void *)result + 1) == 0x6C69462E746E656DLL;
          if (v21 && *(void *)(result + 11) == 0x562E656C69462E74) {
            goto LABEL_76;
          }
          BOOL v23 = *(void *)result == 0x75636F4420505748 && *((void *)result + 1) == 0x6C694620746E656DLL;
          if (v23 && *(void *)(result + 11) == 0x5620656C69462074) {
            goto LABEL_76;
          }
        }
        goto LABEL_99;
      }
      int v19 = 1296891946;
    }
LABEL_75:
    if (v11 != v19) {
      goto LABEL_10;
    }
    goto LABEL_76;
  }
  *(_DWORD *)(a3 + 212) = 22;
  *(_DWORD *)(a3 + 540) += 1200;
  char v9 = (_DWORD *)(a3 + 768);
  int v10 = 2;
LABEL_8:
  int v12 = 1200;
LABEL_9:
  *v9 += v12;
LABEL_10:
  int v13 = *(_DWORD *)(a3 + 680);
  BOOL v14 = v13 > 0 || *(int *)(a3 + 688) >= 1;
  int v15 = *(_DWORD *)(a3 + 756);
  if (v15 <= 0 && *(int *)(a3 + 760) < 1)
  {
    char v16 = 0;
    if (v14) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  char v16 = 1;
  if (!v14)
  {
LABEL_16:
    *(_DWORD *)(a3 + 680) = v13 - 4800;
    *(_DWORD *)(a3 + 688) -= 9600;
  }
LABEL_17:
  if ((v16 & 1) == 0)
  {
    *(_DWORD *)(a3 + 756) = v15 - 4800;
    *(_DWORD *)(a3 + 760) -= 4800;
  }
  if (!FLAGS_ced_allow_utf8utf8) {
    *(_DWORD *)(a3 + 768) -= 4800;
  }
  *(_DWORD *)(a3 + 796) -= 4800;
  if (*(void *)(a3 + 32))
  {
    snprintf(__str, 0x10uLL, "%04x%04x", v6, v7);
    int v17 = *(_DWORD *)(a3 + 40);
    int v18 = (_DWORD *)(*(void *)(a3 + 32) + 304 * v17);
    *int v18 = 0;
    v18[1] = v10;
    MEMORY[0x1AD0E3190](v18 + 2, __str);
    uint64_t result = (unsigned __int8 *)memcpy((void *)(*(void *)(a3 + 32) + 304 * v17 + 32), (const void *)(a3 + 532), 0x10CuLL);
    ++*(_DWORD *)(a3 + 40);
  }
  return result;
}

uint64_t IntCompare(_DWORD *a1, _DWORD *a2)
{
  if (*a1 <= *a2) {
    unsigned int v2 = 0;
  }
  else {
    unsigned int v2 = -1;
  }
  if (*a1 < *a2) {
    return 1;
  }
  else {
    return v2;
  }
}

BOOL Base64Char(int a1)
{
  BOOL v1 = ((a1 & 0xDF) - 65) < 0x1Au || (((_BYTE)a1 - 43) & 0xFB) == 0;
  return (a1 - 48) < 0xA || v1;
}

uint64_t Base64ScanLen(const unsigned __int8 *a1, const unsigned __int8 *a2)
{
  if (a2 - a1 >= 4 && *a1 == 43 && a1[1] == 43 && a1[2] == 43) {
    return 81;
  }
  uint64_t v3 = a1;
  do
  {
    if (v3 >= a2) {
      break;
    }
    int v4 = *v3++;
  }
  while ((kBase64Value[v4] & 0x80000000) == 0);
  return (~a1 + v3);
}

BOOL GoodUnicodeFromBase64(const unsigned __int8 *a1, const unsigned __int8 *a2)
{
  int v2 = a2 - a1;
  if (a2 <= a1)
  {
    int v6 = 0;
    int v5 = 0;
    int v4 = 0;
    int v3 = 0;
  }
  else
  {
    int v3 = 0;
    int v4 = 0;
    int v5 = 0;
    int v6 = 0;
    uint64_t v7 = a2 - a1;
    int v8 = a1;
    do
    {
      int v10 = *v8++;
      int v9 = v10;
      unsigned int v11 = v10 - 97;
      unsigned int v12 = v10 - 65;
      if (v10 == 48) {
        int v13 = v3 + 1;
      }
      else {
        int v13 = v3;
      }
      BOOL v14 = v9 == 43;
      if (v9 == 43) {
        int v15 = v6 + 1;
      }
      else {
        int v15 = v6;
      }
      if (v14) {
        int v13 = v3;
      }
      BOOL v16 = v12 > 0x19;
      if (v12 > 0x19)
      {
        int v17 = v4;
      }
      else
      {
        int v15 = v6;
        int v17 = v4 + 1;
      }
      if (!v16) {
        int v13 = v3;
      }
      if (v11 <= 0x19) {
        ++v5;
      }
      else {
        int v6 = v15;
      }
      if (v11 > 0x19)
      {
        int v4 = v17;
        int v3 = v13;
      }
      --v7;
    }
    while (v7);
  }
  int v18 = v2 >> 4;
  if (v6 > (v2 >> 4) + 1 || v5 <= v18 || v4 <= v18 || v3 <= v2 >> 5) {
    return 0;
  }
  int v23 = v2 & 7;
  uint64_t v24 = a1[v2 - 1];
  if (v23 != 6) {
    return v23 != 3 || (kBase64Value[v24] & 3) == 0;
  }
  return (kBase64Value[v24] & 0xF) == 0;
}

uint64_t UTF7BoostWhack(uint64_t result, int a2, int a3)
{
  uint64_t v3 = *(int *)(result + 4 * a2 + 1544);
  if ((int)v3 >= *(_DWORD *)(result + 88))
  {
    uint64_t v4 = result;
    ++*(_DWORD *)(result + 84);
    if (a3 != 45)
    {
      if ((a3 - 48) >= 0xA
        && ((a3 & 0xDF) - 65) >= 0x1Au
        && (((_BYTE)a3 - 43) & 0xFB) != 0)
      {
        goto LABEL_6;
      }
      int v6 = (const unsigned __int8 *)(*(void *)result + v3 + 1);
      uint64_t result = Base64ScanLen(v6, *(const unsigned __int8 **)(result + 8));
      if (result != 3 && result != 6)
      {
        int v8 = result;
        if ((result & 7) != 7 && ((1 << (result & 7)) & 0x49) != 0)
        {
          uint64_t result = GoodUnicodeFromBase64(v6, &v6[(int)result]);
          int v5 = *(_DWORD *)(v4 + 708);
          if (result)
          {
            *(_DWORD *)(v4 + 708) = v5 + 600;
            *(_DWORD *)(v4 + 88) = v3 + v8 + 1;
            return result;
          }
          goto LABEL_17;
        }
LABEL_6:
        int v5 = *(_DWORD *)(v4 + 708);
LABEL_17:
        *(_DWORD *)(v4 + 708) = v5 - 600;
      }
    }
  }
  return result;
}

uint64_t HzBoostWhack(uint64_t result, int a2)
{
  int v2 = 600;
  if (a2 > 124)
  {
    if (a2 == 125) {
      goto LABEL_9;
    }
    if (a2 != 126)
    {
LABEL_8:
      int v2 = -600;
      goto LABEL_9;
    }
  }
  else if (a2 != 10)
  {
    if (a2 != 123) {
      goto LABEL_8;
    }
LABEL_9:
    *(_DWORD *)(result + 692) += v2;
  }
  return result;
}

_DWORD *BinaryBoostWhack(_DWORD *result, unsigned int a2, unsigned int a3)
{
  int v3 = 1 << ((a2 >> 6) & 2 | (a3 >> 7));
  int v4 = 1 << ((a2 >> 3) & 0x1C | (a3 >> 6));
  int v5 = result[19];
  if ((v5 & v3) == 0)
  {
    result[19] = v5 | v3;
    int v6 = result[17] + 1;
    result[17] = v6;
    if (v6 == 4) {
      result[191] += 1200;
    }
  }
  int v7 = result[20];
  if ((v7 & v4) == 0)
  {
    result[20] = v7 | v4;
    int v8 = result[18];
    result[18] = v8 + 1;
    if (v8 >= 10) {
      result[191] += 2400;
    }
  }
  return result;
}

uint64_t UTF1632BoostWhack(uint64_t result, char a2, int a3)
{
  if (a3)
  {
    int v3 = -600;
    *(int32x2_t *)(result + 756) = vadd_s32(*(int32x2_t *)(result + 756), vdup_n_s32(0xFFFFFDA8));
    *(_DWORD *)(result + 680) -= 600;
    int v4 = (_DWORD *)(result + 688);
  }
  else
  {
    *(_DWORD *)(result + 680) -= 600;
    *(_DWORD *)(result + 688) -= 600;
    if ((a2 & 3u) - 1 >= 2)
    {
      if ((a2 & 3) != 0) {
        return result;
      }
      *(_DWORD *)(result + 760) -= 600;
      int v4 = (_DWORD *)(result + 756);
    }
    else
    {
      *(_DWORD *)(result + 756) -= 600;
      int v4 = (_DWORD *)(result + 760);
    }
    int v3 = 60;
  }
  *v4 += v3;
  return result;
}

uint64_t UTF16MakeEven(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4 * a2 + 1736) &= ~1u;
  return result;
}

BOOL ConsecutivePair(uint64_t a1, int a2)
{
  return a2 >= 1
      && *(_DWORD *)(a1 + 1736 + 4 * a2) == *(_DWORD *)(a1 + 1736 + 4 * (a2 - 1)) + 2;
}

uint64_t CheckUTF8Seq(_DWORD *a1, char a2)
{
  uint64_t v2 = (int)a1[335];
  uint64_t v3 = (int)a1[337];
  if ((int)v2 >= (int)v3)
  {
    int v4 = 0;
    goto LABEL_12;
  }
  int v4 = 0;
  int v5 = 2 * v2;
  do
  {
    int v6 = (char *)a1 + v5;
    unint64_t v7 = v6[1448];
    unint64_t v8 = v6[1449];
    if (v2 <= 0)
    {
      int v9 = a1[23];
LABEL_7:
      int v10 = &kMiniUTF8Count[16 * v9];
      int v9 = 0;
      unsigned int v11 = &a1[v10[2]];
      ++v11[24];
      a1[23] = 0;
      goto LABEL_8;
    }
    int v9 = a1[23];
    if (a1[v2 + 434] != a1[(v2 - 1) + 434] + 2) {
      goto LABEL_7;
    }
LABEL_8:
    int16x4_t v12 = vuzp1_s16((int16x4_t)vceq_s32(vdup_n_s32(v7), (int32x2_t)0xDF000000C9), (int16x4_t)0xDF000000C9);
    int16x4_t v13 = (int16x4_t)vand_s8((int8x8_t)vzip1_s16(v12, vdup_lane_s16(v12, 1)), vand_s8((int8x8_t)vceq_s16(vdup_n_s16(v8), (int16x4_t)0xAB0093009200AELL), (int8x8_t)0x8000400020001));
    v13.i32[0] = vaddv_s16(v13) & 0xF;
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    unint64_t v15 = v7 >> 4;
    uint64_t v16 = kMiniUTF8Count[16 * v9 + v15];
    ++a1[v16 + 24];
    uint64_t v17 = kMiniUTF8State[16 * a1[23] + v15];
    a1[23] = v17;
    unint64_t v18 = v8 >> 4;
    uint64_t v19 = kMiniUTF8Count[16 * v17 + v18];
    v4 += v14.i32[0];
    ++a1[v19 + 24];
    a1[23] = kMiniUTF8State[16 * a1[23] + v18];
    ++v2;
    v5 += 2;
  }
  while (v3 != v2);
  if (v4 > 0)
  {
    a1[134] += 120 * v4;
    a1[137] += 120 * v4;
  }
LABEL_12:
  int v20 = a1[27];
  int v21 = a1[28];
  int v23 = a1[25];
  int v22 = a1[26];
  int v24 = (120 * (4 * v21 + 2 * v22 + 3 * (v20 - v4))) >> a2;
  int v25 = v24 + a1[135];
  int v26 = a1[192];
  int v27 = v20 + v22;
  int v28 = a1[29];
  a1[28] = 0;
  a1[29] = v27 + v21 + v28;
  int v29 = (120 * v23) >> a2;
  a1[135] = v25 - v29;
  a1[192] = v24 + v26 - v29;
  *((void *)a1 + 13) = 0;
  a1[25] = 0;
  return (v24 - v29);
}

uint64_t CheckUTF8UTF8Seq(uint64_t a1, char a2)
{
  uint64_t v2 = *(int *)(a1 + 1340);
  uint64_t v3 = *(int *)(a1 + 1348);
  if (2 * (int)v2 < 2 * (int)v3)
  {
    unint64_t v4 = a1 + 2 * v3 + 1448;
    unint64_t v5 = a1 + 2 * v2 + 1448;
    do
    {
      int v6 = *(_DWORD *)(a1 + 120);
      if ((int)v2 < 1
        || *(_DWORD *)(a1 + 1736 + 4 * v2) != *(_DWORD *)(a1 + 1736 + 4 * (v2 - 1)) + 2)
      {
        *(_DWORD *)(a1 + 124) = 0;
        uint64_t v7 = a1 + 4 * kMiniUTF8UTF8Count[16 * v6 + 2];
        ++*(_DWORD *)(v7 + 128);
        int v6 = kMiniUTF8UTF8State[16 * v6 + 2];
      }
      uint64_t v8 = *(int *)(a1 + 124);
      if (v5 + v8 + 1 < v4)
      {
        int v9 = *(unsigned __int8 *)(v5 + v8);
        int v10 = (*(unsigned __int8 *)(v8 + v5 + 1) >> 4) & 3;
        int v11 = v10 | 4;
        if (v9 != 226) {
          int v11 = (*(unsigned __int8 *)(v8 + v5 + 1) >> 4) & 3;
        }
        BOOL v12 = (v9 - 194) > 9 || ((1 << (v9 + 62)) & 0x219) == 0;
        int v13 = v10 | 8;
        if (v12) {
          int v13 = (*(unsigned __int8 *)(v8 + v5 + 1) >> 4) & 3;
        }
        if ((v9 & 0xF0) == 0xC0) {
          int v14 = v13;
        }
        else {
          int v14 = v11;
        }
        int v15 = v10 | 0xC;
        if (v9 == 195) {
          unsigned int v16 = v15;
        }
        else {
          unsigned int v16 = v14;
        }
        *(_DWORD *)(a1 + 124) = v8 ^ kMiniUTF8UTF8Odd[16 * v6 + v16];
        uint64_t v17 = a1 + 4 * kMiniUTF8UTF8Count[16 * v6 + v16];
        ++*(_DWORD *)(v17 + 128);
        *(_DWORD *)(a1 + 120) = kMiniUTF8UTF8State[16 * v6 + v16];
        LODWORD(v2) = v2 + 1;
      }
      v5 += 2;
    }
    while (v5 < v4);
  }
  int v18 = *(_DWORD *)(a1 + 148);
  int v19 = *(_DWORD *)(a1 + 140) + *(_DWORD *)(a1 + 136) + *(_DWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 768) += (240 * v19) >> a2;
  *(_DWORD *)(a1 + 148) = v19 + v18;
  *(void *)(a1 + 132) = 0;
  *(void *)(a1 + 140) = 0;
  return ((240 * v19) >> a2);
}

_DWORD *CheckIso2022ActiveSeq(_DWORD *result)
{
  uint64_t v1 = 2 * (int)result[335];
  uint64_t v2 = (int)result[337];
  if ((int)v1 < 2 * (int)v2)
  {
    unint64_t v3 = (unint64_t)result + 2 * v2 + 1448;
    for (uint64_t i = (unsigned __int8 *)result + v1 + 1448; (unint64_t)i < v3; i += 2)
    {
      unsigned int v5 = *i;
      switch(v5)
      {
        case 0xEu:
          result[154] -= 600;
          if (!result[38]) {
            goto LABEL_22;
          }
          break;
        case 0xFu:
          result[154] -= 600;
          int v8 = result[38];
          if (v8)
          {
            if (v8 == 3)
            {
              int v9 = 60;
            }
            else
            {
              if (v8 != 2) {
                goto LABEL_31;
              }
              int v9 = -60;
            }
            result[178] += v9;
            result[175] += v9;
            goto LABEL_31;
          }
LABEL_22:
          result[178] -= 2400;
          int v7 = result[175] - 2400;
LABEL_23:
          result[175] = v7;
          result[38] = 1;
          continue;
        case 0x1Bu:
          int v6 = i[1];
          if (v6 == 40)
          {
            int v13 = result[38];
            if (v13 == 3)
            {
              int v14 = 60;
LABEL_30:
              result[154] += v14;
            }
            else if (v13 == 2)
            {
              int v14 = -60;
              goto LABEL_30;
            }
LABEL_31:
            result[38] = 2;
            continue;
          }
          if (v6 != 36)
          {
            result[154] -= 600;
            result[178] -= 600;
            int v7 = result[175] - 600;
            goto LABEL_23;
          }
          break;
        default:
          if ((char)v5 <= 31)
          {
            BOOL v10 = v5 > 0xD;
            int v11 = (1 << v5) & 0x3600;
            if (v10 || v11 == 0)
            {
              result[154] -= 600;
              result[178] -= 600;
              result[175] -= 600;
            }
          }
          continue;
      }
      result[38] = 3;
    }
  }
  if (!result[38])
  {
    result[178] &= (int)result[178] >> 31;
    result[175] &= (int)result[175] >> 31;
    result[154] &= (int)result[154] >> 31;
  }
  return result;
}

_DWORD *CheckHzActiveSeq(_DWORD *result)
{
  uint64_t v1 = 2 * (int)result[334];
  uint64_t v2 = (int)result[336];
  if ((int)v1 < 2 * (int)v2)
  {
    unint64_t v3 = (unint64_t)result + 2 * v2 + 1352;
    for (uint64_t i = (char *)result + v1 + 1352; (unint64_t)i < v3; i += 2)
    {
      if (*i == 126)
      {
        int v5 = i[1];
        if (v5 == 123)
        {
          result[39] = 3;
          if (*i != 126) {
            continue;
          }
          int v5 = i[1];
        }
        if (v5 == 125)
        {
          int v6 = result[39];
          if (v6 == 3)
          {
            int v7 = 60;
LABEL_12:
            result[173] += v7;
          }
          else if (v6 == 2)
          {
            int v7 = -60;
            goto LABEL_12;
          }
          result[39] = 2;
        }
      }
    }
  }
  if (!result[39]) {
    result[173] &= (int)result[173] >> 31;
  }
  return result;
}

uint64_t CheckEucJpSeq(uint64_t result)
{
  uint64_t v1 = 2 * *(int *)(result + 1340);
  uint64_t v2 = *(int *)(result + 1348);
  if ((int)v1 < 2 * (int)v2)
  {
    unint64_t v3 = result + 2 * v2 + 1448;
    unint64_t v4 = (char *)(result + v1 + 1448);
    int v5 = *(unsigned __int8 *)(result + 160);
    do
    {
      if (v5) {
        *(_DWORD *)(result + 560) += 120;
      }
      int v6 = *v4;
      int v7 = v4[1];
      if (v6 < 0)
      {
        if (v6 != -113) {
          goto LABEL_10;
        }
        v5 ^= 1u;
      }
      else
      {
        int v5 = 0;
      }
      *(unsigned char *)(result + 160) = v5;
LABEL_10:
      if ((v7 & 0x80000000) == 0)
      {
        int v5 = 0;
LABEL_14:
        *(unsigned char *)(result + 160) = v5;
        goto LABEL_15;
      }
      if (v7 == -113)
      {
        v5 ^= 1u;
        goto LABEL_14;
      }
LABEL_15:
      v4 += 2;
    }
    while ((unint64_t)v4 < v3);
  }
  return result;
}

int32x2_t CheckBinaryDensity(int a1, uint64_t a2, int a3)
{
  if (a3)
  {
    int v3 = *(_DWORD *)(a2 + 1736);
    unsigned int v4 = -2400;
    if (v3 > 6143) {
      goto LABEL_10;
    }
    int v5 = a1 - *(_DWORD *)a2;
    if (v5 >= 0x2000) {
      goto LABEL_10;
    }
    int v6 = *(_DWORD *)(a2 + 1348);
    int v7 = v5 - v3;
    if (v7 > 32 * v6)
    {
      *(_DWORD *)(a2 + 764) -= 2400;
      int32x2_t result = vadd_s32(*(int32x2_t *)(a2 + 756), vdup_n_s32(0xFFFFF6A0));
      *(int32x2_t *)(a2 + 756) = result;
      *(_DWORD *)(a2 + 680) -= 2400;
      *(_DWORD *)(a2 + 688) -= 2400;
    }
    if (v6 >= 8 && 8 * v6 >= v7 && *(int *)(a2 + 68) >= 2)
    {
      unsigned int v4 = 60;
LABEL_10:
      *(_DWORD *)(a2 + 764) += v4;
      int32x2_t result = vadd_s32(*(int32x2_t *)(a2 + 756), vdup_n_s32(v4));
      *(int32x2_t *)(a2 + 756) = result;
      *(_DWORD *)(a2 + 680) += v4;
      *(_DWORD *)(a2 + 688) += v4;
    }
  }
  return result;
}

void ActiveSpecialBoostWhack(int a1, uint64_t a2)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  int v3 = *(_DWORD *)(a2 + 1344) - *(_DWORD *)(a2 + 1336);
  int v4 = *(_DWORD *)(a2 + 1348) - *(_DWORD *)(a2 + 1340);
  if ((*(unsigned char *)(a2 + 196) & 6) == 0 || v3 < 1) {
    goto LABEL_25;
  }
  uint64_t v6 = 0;
  uint64_t v7 = a2 + 1352;
  uint64_t v8 = a2 + 1544;
  do
  {
    int v9 = *(_DWORD *)(a2 + 1336);
    uint64_t v10 = v9;
    int v11 = v6 + v9;
    uint64_t v12 = 2 * ((int)v6 + v9);
    int v13 = *(unsigned __int8 *)(v7 + v12);
    uint64_t v14 = *(unsigned __int8 *)(v7 + (int)v12 + 1);
    if (v13 == 126)
    {
      int v18 = 600;
      if (*(unsigned __int8 *)(v7 + (int)v12 + 1) > 0x7Cu)
      {
        if (v14 == 125) {
          goto LABEL_17;
        }
        if (v14 != 126)
        {
LABEL_16:
          int v18 = -600;
          goto LABEL_17;
        }
      }
      else if (v14 != 10)
      {
        if (v14 != 123) {
          goto LABEL_16;
        }
LABEL_17:
        *(_DWORD *)(a2 + 692) += v18;
      }
      if (!*(void *)(a2 + 32)) {
        goto LABEL_21;
      }
      snprintf(__str, 0x10uLL, "%02x%02x~", 126, v14);
      int v15 = *(_DWORD *)(v8 + 4 * (v6 + v10));
      unsigned int v16 = &kMostLikelyEncoding[v14];
      uint64_t v17 = 32256;
      goto LABEL_20;
    }
    if (v13 == 43)
    {
      UTF7BoostWhack(a2, v11, *(unsigned __int8 *)(v7 + (int)v12 + 1));
      if (*(void *)(a2 + 32))
      {
        snprintf(__str, 0x10uLL, "%02x%02x+", 43, v14);
        int v15 = *(_DWORD *)(v8 + 4 * (v6 + v10));
        unsigned int v16 = &kMostLikelyEncoding[v14];
        uint64_t v17 = 11008;
LABEL_20:
        int v19 = v16[v17];
        int v20 = *(_DWORD *)(a2 + 40);
        int v21 = (_DWORD *)(*(void *)(a2 + 32) + 304 * v20);
        *int v21 = v15;
        v21[1] = v19;
        MEMORY[0x1AD0E3190](v21 + 2, __str);
        memcpy((void *)(*(void *)(a2 + 32) + 304 * v20 + 32), (const void *)(a2 + 532), 0x10CuLL);
        ++*(_DWORD *)(a2 + 40);
      }
    }
LABEL_21:
    ++v6;
  }
  while (v3 != v6);
  if (*(int *)(a2 + 84) > 7 && !*(_DWORD *)(a2 + 88)) {
    *(_DWORD *)(a2 + 708) -= 4800;
  }
LABEL_25:
  if ((*(_WORD *)(a2 + 196) & 0x10F8) == 0 || v4 < 1) {
    goto LABEL_59;
  }
  uint64_t v23 = 0;
  int v24 = 0;
  while (2)
  {
    uint64_t v25 = v23 + *(int *)(a2 + 1340);
    uint64_t v26 = 2 * (int)v25;
    unsigned int v27 = *(unsigned __int8 *)(a2 + 1448 + v26);
    uint64_t v28 = *(unsigned __int8 *)(a2 + 1448 + (int)v26 + 1);
    uint64_t v29 = a2 + 4 * v25;
    uint64_t v30 = (unsigned int *)(v29 + 1736);
    int v31 = *(_DWORD *)(v29 + 1736);
    int v32 = *(_DWORD *)(v29 + 2120);
    if (v24 <= v32) {
      int v24 = v32;
    }
    if (v27 == 255)
    {
      if (v28 == 255) {
        UTF1632BoostWhack(a2, v31, 255);
      }
      if (*(void *)(a2 + 32))
      {
        snprintf(__str, 0x10uLL, "%02x%02xF", 255, v28);
        unsigned int v34 = *v30;
        unsigned int v35 = kMostLikelyEncoding[v28 + 65280];
        goto LABEL_47;
      }
    }
    else if (!*(unsigned char *)(a2 + 1448 + v26))
    {
      if (*(unsigned char *)(a2 + 1448 + (int)v26 + 1))
      {
        if (kIsPrintableAscii[v28]) {
          BOOL v33 = (v31 & 1) == 0;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33) {
          *uint64_t v30 = v31 & 0xFFFFFFFE;
        }
      }
      else
      {
        UTF1632BoostWhack(a2, v31, 0);
      }
      if (*(void *)(a2 + 32))
      {
        snprintf(__str, 0x10uLL, "%02x%02xZ", 0, v28);
        unsigned int v34 = *v30;
        unsigned int v35 = kMostLikelyEncoding[v28];
LABEL_47:
        int v36 = *(_DWORD *)(a2 + 40);
        uint64_t v37 = (unsigned int *)(*(void *)(a2 + 32) + 304 * v36);
        *uint64_t v37 = v34;
        v37[1] = v35;
        MEMORY[0x1AD0E3190](v37 + 2, __str);
        memcpy((void *)(*(void *)(a2 + 32) + 304 * v36 + 32), (const void *)(a2 + 532), 0x10CuLL);
        ++*(_DWORD *)(a2 + 40);
      }
    }
    if ((*(unsigned char *)(a2 + 196) & 0x80) != 0) {
      BinaryBoostWhack((_DWORD *)a2, v27, v28);
    }
    if (v4 != ++v23) {
      continue;
    }
    break;
  }
  int v38 = *(_DWORD *)(a2 + 196);
  if ((v38 & 0x10) == 0)
  {
    if ((v38 & 0x20) == 0) {
      goto LABEL_53;
    }
LABEL_63:
    CheckUTF8UTF8Seq(a2, v24);
    int v38 = *(_DWORD *)(a2 + 196);
    if ((v38 & 8) != 0) {
      goto LABEL_64;
    }
LABEL_54:
    if ((v38 & 4) == 0) {
      goto LABEL_55;
    }
LABEL_65:
    CheckHzActiveSeq((_DWORD *)a2);
    int v38 = *(_DWORD *)(a2 + 196);
    if ((v38 & 0x1000) == 0) {
      goto LABEL_57;
    }
LABEL_56:
    CheckEucJpSeq(a2);
    int v38 = *(_DWORD *)(a2 + 196);
    goto LABEL_57;
  }
  CheckUTF8Seq((_DWORD *)a2, v24);
  int v38 = *(_DWORD *)(a2 + 196);
  if ((v38 & 0x20) != 0) {
    goto LABEL_63;
  }
LABEL_53:
  if ((v38 & 8) == 0) {
    goto LABEL_54;
  }
LABEL_64:
  CheckIso2022ActiveSeq((_DWORD *)a2);
  int v38 = *(_DWORD *)(a2 + 196);
  if ((v38 & 4) != 0) {
    goto LABEL_65;
  }
LABEL_55:
  if ((v38 & 0x1000) != 0) {
    goto LABEL_56;
  }
LABEL_57:
  if ((v38 & 0xC0) != 0) {
    CheckBinaryDensity(a1, a2, v4);
  }
LABEL_59:
  if (*(void *)(a2 + 32)) {
    SetDetailsEncLabel(a2);
  }
}

uint64_t PrintTopEnc(uint64_t a1, int a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  int v4 = *(_DWORD *)(a1 + 260);
  if (v4 >= 1)
  {
    int v5 = (int *)(a1 + 264);
    uint64_t v6 = __base;
    uint64_t v7 = *(unsigned int *)(a1 + 260);
    do
    {
      uint64_t v8 = *v5++;
      *v6++ = *(_DWORD *)(a1 + 4 * v8 + 532);
      --v7;
    }
    while (v7);
  }
  qsort(__base, v4, 4uLL, (int (__cdecl *)(const void *, const void *))IntCompare);
  int v9 = *(_DWORD *)(a1 + 260);
  if (a2 < v9) {
    int v9 = a2;
  }
  int v10 = __base[v9 - 1];
  printf("rankedencodingList top %d: ", v9);
  int v11 = *(_DWORD *)(a1 + 260);
  if (v11 >= 1)
  {
    for (uint64_t i = 0; i < v11; ++i)
    {
      uint64_t v13 = *(int *)(a1 + 264 + 4 * i);
      uint64_t v14 = a1 + 4 * v13;
      if (v10 <= *(_DWORD *)(v14 + 532))
      {
        int v15 = (_DWORD *)(v14 + 532);
        unsigned int v16 = MyEncodingName(kMapToEncoding[v13]);
        printf("%s=%d ", v16, *v15);
        int v11 = *(_DWORD *)(a1 + 260);
      }
    }
  }
  return puts("\n");
}

uint64_t RepeatedBigram(int *a1, unsigned int a2, int a3)
{
  int v3 = a3 | (a2 << 8);
  if (a2 < 0x20) {
    int v3 = a3 & 0xFFF0 | (unsigned __int16)((_WORD)a2 << 8);
  }
  if (v3 == a1[55] || v3 == a1[56] || v3 == a1[57] || v3 == a1[58]) {
    return 1;
  }
  uint64_t result = 0;
  a1[a1[54] + 55] = v3;
  a1[54] = (a1[54] + 1) & 3;
  return result;
}

BOOL RepeatedBinary(uint64_t a1, unsigned int a2, unsigned int a3)
{
  int v3 = 1 << ((a2 >> 3) & 0x1C | (a3 >> 6));
  int v4 = *(_DWORD *)(a1 + 80);
  if ((v4 & v3) == 0)
  {
    *(_DWORD *)(a1 + 80) = v4 | v3;
    ++*(_DWORD *)(a1 + 72);
  }
  return (v4 & v3) != 0;
}

uint64_t ReRank(uint64_t result)
{
  *(void *)(result + 248) = -1;
  uint64_t v1 = *(unsigned int *)(result + 260);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (int *)(result + 264);
    uint64_t v3 = 0xFFFFFFFFLL;
    uint64_t v4 = 0xFFFFFFFFLL;
    do
    {
      int v6 = *v2++;
      int v5 = v6;
      uint64_t v7 = v6;
      uint64_t v8 = result + 4 * v6;
      uint64_t v9 = *(unsigned int *)(v8 + 532);
      if ((int)v4 >= (int)v9)
      {
        if ((int)v3 < (int)v9
          && kMapEncToBaseEncoding[kMapToEncoding[*(int *)(result + 240)]] != kMapEncToBaseEncoding[kMapToEncoding[v7]])
        {
          *(_DWORD *)(result + 252) = v9;
          *(_DWORD *)(result + 244) = v5;
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v10 = *(int *)(result + 240);
        if (kMapEncToBaseEncoding[kMapToEncoding[v10]] != kMapEncToBaseEncoding[kMapToEncoding[v7]])
        {
          *(_DWORD *)(result + 252) = v4;
          *(_DWORD *)(result + 244) = v10;
          uint64_t v9 = *(unsigned int *)(v8 + 532);
          uint64_t v3 = v4;
        }
        uint64_t v4 = v9;
        *(_DWORD *)(result + 248) = v9;
        *(_DWORD *)(result + 240) = v5;
      }
      uint64_t v9 = v3;
LABEL_10:
      uint64_t v3 = v9;
      --v1;
    }
    while (v1);
  }
  return result;
}

_DWORD *SimplePrune(_DWORD *result, int a2)
{
  int v2 = result[62];
  result[49] = 0;
  int v3 = result[65];
  if (v3 < 1)
  {
    int v5 = 0;
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = 0;
    int v6 = v2 - a2;
    do
    {
      int v7 = result[v4 + 66];
      if (result[v7 + 133] >= v6)
      {
        result[49] |= kSpecialMask[kMapToEncoding[v7]];
        uint64_t v8 = &result[v5++];
        v8[66] = v7;
        int v3 = result[65];
      }
      ++v4;
    }
    while (v4 < v3);
  }
  result[65] = v5;
  return result;
}

uint64_t CalcReliable(uint64_t result)
{
  *(unsigned char *)(result + 45) = 0;
  int v1 = *(_DWORD *)(result + 1348);
  if (!v1
    || *(_DWORD *)(result + 248) - *(_DWORD *)(result + 252) >= FLAGS_ced_reliable_difference
    || v1 == 1 && *(_DWORD *)(result + 240) == kMostLikelyEncoding[__rev16(*(unsigned __int16 *)(result + 1448))])
  {
    *(unsigned char *)(result + 45) = 1;
    return result;
  }
  int v2 = *(_DWORD *)(result + 260);
  if (v2 == 3)
  {
    int v3 = kMapEncToBaseEncoding[kMapToEncoding[*(int *)(result + 264)]];
    if (v3 != kMapEncToBaseEncoding[kMapToEncoding[*(int *)(result + 268)]]
      || v3 != kMapEncToBaseEncoding[kMapToEncoding[*(int *)(result + 272)]])
    {
      return result;
    }
    goto LABEL_14;
  }
  if (v2 != 2)
  {
    if (v2 != 1) {
      return result;
    }
LABEL_15:
    *(_WORD *)(result + 44) = 257;
    return result;
  }
  if (kMapEncToBaseEncoding[kMapToEncoding[*(int *)(result + 264)]] == kMapEncToBaseEncoding[kMapToEncoding[*(int *)(result + 268)]])
  {
LABEL_14:
    if (*(int *)(result + 56) >= 3) {
      goto LABEL_15;
    }
  }
  return result;
}

uint64_t FindTop2(uint64_t result, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  *a4 = -1;
  *a5 = -1;
  *a2 = 0;
  *a3 = 0;
  if (*(int *)(result + 260) >= 1)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *(int *)(result + 264 + 4 * v5);
      uint64_t v7 = result + 4 * v6;
      int v8 = *(_DWORD *)(v7 + 532);
      if (*a4 < v8) {
        break;
      }
      if (*a5 < v8)
      {
        *a5 = v8;
        uint64_t v9 = a3;
        goto LABEL_7;
      }
LABEL_8:
      if (++v5 >= *(int *)(result + 260)) {
        return result;
      }
    }
    *a5 = *a4;
    *a3 = *a2;
    *a4 = *(_DWORD *)(v7 + 532);
    uint64_t v9 = a2;
LABEL_7:
    *uint64_t v9 = v6;
    goto LABEL_8;
  }
  return result;
}

uint64_t PrintRankedEncodingList(uint64_t a1, const char *a2)
{
  printf("Current ranked encoding list %s\n", a2);
  if (*(int *)(a1 + 260) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(unsigned int *)(a1 + 264 + 4 * v3);
      if (v4 < 0x44)
      {
        MyEncodingName(kMapToEncoding[v4]);
        printf(" [%d] rankedencoding = %d %-12.12s enc_prob = %d\n");
      }
      else
      {
        printf(" [%d] BOGUS rankedencoding = %d\n");
      }
      ++v3;
    }
    while (v3 < *(int *)(a1 + 260));
  }
  return puts("End current ranked encoding list\n");
}

char *Latin127Str(unint64_t a1)
{
  tri_string = aAbcdefghijklmn[(a1 >> 10) & 0x1F];
  byte_1E978A5B9 = aAbcdefghijklmn[(a1 >> 5) & 0x1F];
  byte_1E978A5BA = aAbcdefghijklmn[a1 & 0x1F];
  byte_1E978A5BB = 0;
  return &tri_string;
}

uint64_t TrigramValue(const unsigned __int8 *a1)
{
  return (kLatin127Trigrams[kMapToFiveBits[a1[1]] | (32 * kMapToFiveBits[*a1])] >> (2 * kMapToFiveBits[a1[2]])) & 3;
}

BOOL BoostLatin127Trigrams(int a1, uint64_t a2)
{
  int v2 = *(const unsigned __int8 **)a2;
  int v3 = *(_DWORD *)(a2 + 8) - *(void *)a2 - 2;
  if (a1 + 32 < v3) {
    int v3 = a1 + 32;
  }
  if (v3 > a1)
  {
    int v5 = 0;
    uint64_t v6 = &v2[v3];
    uint64_t v7 = &v2[a1];
    int v20 = (_DWORD *)(a2 + 652);
    int v21 = (_DWORD *)(a2 + 596);
    int v22 = (_DWORD *)(a2 + 580);
    uint64_t v23 = (_DWORD *)(a2 + 568);
    int v18 = (_DWORD *)(a2 + 536);
    uint64_t v19 = (_DWORD *)(a2 + 704);
    int v8 = (_DWORD *)(a2 + 548);
    uint64_t v9 = (_DWORD *)(a2 + 592);
    uint64_t v10 = v7;
    while (1)
    {
      int v11 = *++v10;
      uint64_t v12 = (kLatin127Trigrams[kMapToFiveBits[v11] | (32 * kMapToFiveBits[*v7])] >> (2 * kMapToFiveBits[v7[2]])) & 3;
      if (((kLatin127Trigrams[kMapToFiveBits[v11] | (32 * kMapToFiveBits[*v7])] >> (2 * kMapToFiveBits[v7[2]])) & 3) != 0)
      {
        if (FLAGS_enc_detect_source) {
          PsHighlight((uint64_t)v7, *(const unsigned __int8 **)a2, v12, 1);
        }
        switch(v12)
        {
          case 1:
            int v13 = -1;
            int v15 = v18;
            uint64_t v14 = v8;
            unsigned int v16 = v9;
LABEL_14:
            *v15 += 60;
LABEL_15:
            *v14 += 60;
            *v16 += 60;
            v5 += v13;
            break;
          case 2:
            int v13 = 1;
            unsigned int v16 = v22;
            uint64_t v14 = v23;
            goto LABEL_15;
          case 3:
            *(_DWORD *)(a2 + 648) += 60;
            int v13 = 1;
            uint64_t v14 = v20;
            int v15 = v21;
            unsigned int v16 = v19;
            goto LABEL_14;
        }
      }
      uint64_t v7 = v10;
      if (v10 >= v6) {
        return v5 > 0;
      }
    }
  }
  int v5 = 0;
  return v5 > 0;
}

uint64_t BoostPrune(uint64_t result, uint64_t a2, int a3)
{
  int v3 = a3;
  uint64_t v5 = result;
  uint64_t v117 = *MEMORY[0x1E4F143B8];
  int v6 = *(_DWORD *)(a2 + 1348);
  int v109 = v6 - *(_DWORD *)(a2 + 1340);
  if (a3 == 2)
  {
    if (*(unsigned char *)(a2 + 46)) {
      BOOL v7 = 0;
    }
    else {
      BOOL v7 = v6 <= 11;
    }
    if (v7)
    {
      uint64_t v8 = 0;
      if (v6 <= 2) {
        int v6 = 2;
      }
      int v9 = v6 + 1;
      do
      {
        *(_DWORD *)(a2 + v8 + 532) = *(_DWORD *)(a2 + v8 + 532)
                                   - *(_DWORD *)(a2 + v8 + 800)
                                   + *(_DWORD *)(a2 + v8 + 800) * v9 / 12;
        v8 += 4;
      }
      while (v8 != 268);
      *(unsigned char *)(a2 + 46) = 1;
      if (*(void *)(a2 + 32))
      {
        snprintf(__str, 0x20uLL, "Hints %d/%d", v9, 12);
        SetDetailsEncLabel(a2);
      }
    }
    uint64_t v10 = (int *)(a2 + 56);
    ++*(_DWORD *)(a2 + 56);
  }
  else
  {
    int v61 = *(_DWORD *)(a2 + 1344);
    int v62 = *(_DWORD *)(a2 + 1336);
    uint64_t v10 = (int *)(a2 + 56);
    int v63 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a2 + 56) = v63 + 1;
    if (*(int *)(a2 + 260) < 2) {
      goto LABEL_227;
    }
    if ((v63 & 0x80000000) == 0 && v61 - v62 == -v109) {
      return result;
    }
  }
  if (v109 < 1)
  {
    int v64 = 0;
    goto LABEL_116;
  }
  int v101 = v3;
  uint64_t v102 = v5;
  uint64_t v103 = v10;
  LOBYTE(v11) = 0;
  int v108 = 0;
  LODWORD(v10) = 0;
  int v12 = 0;
  int v105 = 32;
  int v106 = 32;
  do
  {
    int v113 = v12;
    char v114 = v11;
    int v13 = *(_DWORD *)(a2 + 1340) + v12;
    uint64_t v14 = 2 * v13;
    unsigned int v15 = *(unsigned __int8 *)(a2 + 1448 + v14);
    int v16 = (int)v10;
    unint64_t v17 = *(unsigned __int8 *)(a2 + 1448 + (int)v14 + 1);
    uint64_t v10 = (int *)(v15 & 0xF0 | (v17 >> 4));
    if (v13 >= 1
      && *(_DWORD *)(a2 + 1736 + 4 * v13) == *(_DWORD *)(a2 + 1736 + 4 * (v13 - 1)) + 2)
    {
      BOOL v18 = (~v10 & 0xCC) == 0 || (~v16 & 0xCC) == 0;
    }
    else
    {
      BOOL v18 = 0;
    }
    uint64_t v19 = a2 + 4 * v13;
    int v20 = *(_DWORD *)(v19 + 2120);
    uint64_t v112 = v19;
    uint64_t v110 = (unsigned __int8 *)*(int *)(v19 + 1736);
    unint64_t v115 = *(unsigned __int8 *)(a2 + 1448 + 2 * v13);
    int v21 = RepeatedBigram((int *)a2, v15, v17);
    if (v21)
    {
      int v22 = 0;
      int v23 = 0;
      int v24 = v113;
      unint64_t v25 = v115;
      goto LABEL_81;
    }
    unsigned int v26 = 0xFu >> v20;
    if (!FLAGS_demo_nodefault)
    {
      *(_DWORD *)(a2 + 532 + 4 * *(int *)(a2 + 48)) += v26;
      *(_DWORD *)(a2 + 532 + 4 * *(int *)(a2 + 52)) += v26;
    }
    unint64_t v25 = v115;
    int v107 = v21;
    if (*(int *)(a2 + 260) < 1)
    {
      int v22 = 0;
      int v23 = 0;
    }
    else
    {
      uint64_t v27 = 0;
      int v23 = 0;
      int v22 = 0;
      char v28 = 0;
      int v29 = 1 << ((v115 >> 3) & 0x1C | (v17 >> 6));
      int v30 = FLAGS_enc_detect_detail2;
      int v31 = watch1_rankedenc;
      int v32 = watch2_rankedenc;
      BOOL v34 = v115 == v106 && v17 == v105;
      do
      {
        uint64_t v35 = *(int *)(a2 + 264 + 4 * v27);
        uint64_t v36 = (int)kMapToEncoding[v35];
        if (v35 == 58)
        {
          int v37 = *(_DWORD *)(a2 + 80);
          if ((v37 & v29) != 0)
          {
            char v38 = 2;
          }
          else
          {
            char v38 = 0;
            *(_DWORD *)(a2 + 80) = v37 | v29;
            ++*(_DWORD *)(a2 + 72);
          }
        }
        else
        {
          char v38 = 0;
        }
        int v39 = *((unsigned __int8 *)v10 + (void)&unigram_table + 808 * (int)v35 + 552);
        if (*((unsigned char *)v10 + (void)&unigram_table + 808 * (int)v35 + 552))
        {
          if (v39) {
            int v40 = *(unsigned __int8 *)(*((void *)&unigram_table + 101 * (int)v35 + ((v17 >> 5) & 3))
          }
                                     + (v17 & 0x1F | (32 * (v115 & 0x1F))));
          else {
            int v40 = *((_DWORD *)&unigram_table + 202 * (int)v35 + 9);
          }
          int v41 = (*((unsigned __int8 *)&unigram_table + 808 * (int)v35 + (v17 & 0x80 ^ v115) + 40)
               + v39
               + *((unsigned __int8 *)&unigram_table + 808 * (int)v35 + v17 + 296)
               + v40) >> v38 >> v20;
          *(_DWORD *)(a2 + 4 * v35 + 532) += v41;
          if (v30)
          {
            if (v31 == v35) {
              int v23 = v41;
            }
            if (v32 == v35) {
              int v22 = v41;
            }
          }
        }
        else if (!v34)
        {
          *(_DWORD *)(a2 + 4 * v35 + 532) -= 0x258u >> v20;
          char v28 = 1;
        }
        if (v18 && (kSpecialMask[v36] & 0x400) != 0) {
          *(_DWORD *)(a2 + 4 * v35 + 532) += v26;
        }
        ++v27;
      }
      while (v27 < *(int *)(a2 + 260));
      BOOL v42 = (v28 & 1) == 0;
      if (v28) {
        int v43 = v17;
      }
      else {
        int v43 = v105;
      }
      int v44 = v106;
      unint64_t v25 = v115;
      if (!v42) {
        int v44 = v115;
      }
      int v105 = v43;
      int v106 = v44;
    }
    int v24 = v113;
    int v45 = (int)v110;
    if (v13 < 16)
    {
      uint64_t v46 = a2 + 4 * kMostLikelyEncoding[v17 | (v25 << 8)];
      *(_DWORD *)(v46 + 532) += v26;
    }
    ++v108;
    if (*(unsigned char *)(a2 + 65))
    {
      uint64_t v47 = &v110[*(void *)a2 - 1];
    }
    else
    {
      if (!*(unsigned char *)(a2 + 64)) {
        goto LABEL_81;
      }
      uint64_t v47 = (unsigned __int8 *)(*(void *)a2 + (int)v110 - 1);
      if ((v113 & 7) != 0
        && (unint64_t)(v47 + 3) <= *(void *)(a2 + 8)
        && ((kLatin127Trigrams[kMapToFiveBits[v47[1]] | (32 * kMapToFiveBits[*v47])] >> (2 * kMapToFiveBits[v47[2]])) & 2) == 0)
      {
        goto LABEL_81;
      }
    }
    unsigned int v48 = v110 & 0xFFFFFFE0;
    if (*(_DWORD *)(a2 + 60) <= (signed int)(v110 & 0xFFFFFFE0))
    {
      uint64_t v111 = v47;
      BOOL v49 = BoostLatin127Trigrams(v45 & 0xFFFFFFE0, a2);
      int v50 = *(unsigned __int8 *)(a2 + 65);
      if (FLAGS_counts && !*(unsigned char *)(a2 + 65) && v49) {
        ++doing_used;
      }
      if (FLAGS_enc_detect_source) {
        BOOL v51 = v50 == 0;
      }
      else {
        BOOL v51 = 0;
      }
      if (v51 && v49)
      {
        BOOL v104 = v49;
        PsHighlight((uint64_t)v111, *(const unsigned __int8 **)a2, 0, 2);
        LOBYTE(v49) = v104;
        LOBYTE(v50) = *(unsigned char *)(a2 + 65);
      }
      *(unsigned char *)(a2 + 65) = v50 | v49;
      *(_DWORD *)(a2 + 60) = v48 + 32;
      unint64_t v25 = v115;
      int v21 = v107;
    }
LABEL_81:
    ++*(_DWORD *)(a2 + ((v25 >> 3) & 0x1C) + 164);
    if (*(void *)(a2 + 32))
    {
      if (v20) {
        uint64_t v53 = 45;
      }
      else {
        uint64_t v53 = 32;
      }
      uint64_t v54 = 93;
      if (!v21) {
        uint64_t v54 = 32;
      }
      uint64_t v100 = v54;
      uint64_t v55 = 91;
      if (!v21) {
        uint64_t v55 = 32;
      }
      snprintf(__str, 0x10uLL, "%c%02x%02x%c%c", v55, v25, v17, v100, v53);
      int v56 = kMostLikelyEncoding[v17 | (v115 << 8)];
      int v57 = *(_DWORD *)(a2 + 40);
      uint64_t v58 = (_DWORD *)(*(void *)(a2 + 32) + 304 * v57);
      *uint64_t v58 = *(_DWORD *)(v112 + 1736);
      v58[1] = v56;
      MEMORY[0x1AD0E3190](v58 + 2, __str);
      memcpy((void *)(*(void *)(a2 + 32) + 304 * v57 + 32), (const void *)(a2 + 532), 0x10CuLL);
      LOBYTE(v25) = v115;
      ++*(_DWORD *)(a2 + 40);
    }
    if (FLAGS_enc_detect_detail2 && v23 | v22)
    {
      if (v22 >= 0) {
        uint64_t v59 = 43;
      }
      else {
        uint64_t v59 = 45;
      }
      uint64_t v99 = v59;
      if (v23 >= 0) {
        uint64_t v60 = 43;
      }
      else {
        uint64_t v60 = 45;
      }
      snprintf(__str, 0x20uLL, "%c%d %c%d", v60, v23, v99, v22);
      SetDetailsEncLabel(a2);
      LOBYTE(v25) = v115;
    }
    int v11 = (char)(v25 | v114);
    int v12 = v24 + 1;
  }
  while (v12 != v109);
  int v64 = v108;
  if (v108 < 1)
  {
    uint64_t v5 = v102;
    uint64_t v10 = v103;
    int v3 = v101;
  }
  else
  {
    uint64_t v5 = v102;
    uint64_t v10 = v103;
    int v3 = v101;
    if ((v11 & 0x80000000) == 0)
    {
      int v65 = *(_DWORD *)(a2 + 260);
      if (v65 >= 1)
      {
        for (uint64_t i = 0; i < v65; ++i)
        {
          uint64_t v67 = *(int *)(a2 + 264 + 4 * i);
          if ((kSpecialMask[kMapToEncoding[v67]] & 0x100) != 0)
          {
            *(_DWORD *)(a2 + 4 * v67 + 532) -= 60 * v108;
            int v65 = *(_DWORD *)(a2 + 260);
          }
        }
      }
      int v64 = 1;
    }
  }
LABEL_116:
  if (*(_DWORD *)(a2 + 196)) {
    ActiveSpecialBoostWhack(v5, a2);
  }
  *(void *)(a2 + 16) = v5;
  *(_DWORD *)(a2 + 1336) = *(_DWORD *)(a2 + 1344);
  int v68 = *(_DWORD *)(a2 + 1348);
  *(_DWORD *)(a2 + 1340) = v68;
  if (v3 == 2)
  {
    if (*(_DWORD *)(a2 + 92)) {
      *(_DWORD *)(a2 + 540) -= 120;
    }
    if (*(_DWORD *)(a2 + 120)) {
      *(_DWORD *)(a2 + 768) -= 120;
    }
    if (!*(_DWORD *)(a2 + 116))
    {
      *(_DWORD *)(a2 + 540) -= 4800;
      *(_DWORD *)(a2 + 768) -= 4800;
    }
    if (!*(_DWORD *)(a2 + 148)) {
      *(_DWORD *)(a2 + 768) -= 4800;
    }
    int v69 = *(_DWORD *)(a2 + 68);
    if (v69 <= 3)
    {
      if (v69 == 3) {
        int v70 = -1200;
      }
      else {
        int v70 = -2400;
      }
      *(_DWORD *)(a2 + 764) += v70;
    }
    if (v68 < 1 || (*(unsigned char *)(a2 + 196) & 8) == 0 || *(unsigned char *)(a2 + 1448) != 27 || *(unsigned char *)(a2 + 1449) != 36) {
      goto LABEL_152;
    }
    unint64_t v71 = *(void *)a2 + *(int *)(a2 + 1736);
    if (v71 >= *(void *)(a2 + 8) - 3)
    {
      int v75 = *(_DWORD *)(a2 + 616) - 600;
    }
    else
    {
      int v72 = *(unsigned __int8 *)(v71 + 2);
      if (v72 != 66 && v72 != 64)
      {
        if (v72 != 41) {
          goto LABEL_152;
        }
        int v73 = *(unsigned __int8 *)(v71 + 3);
        if (v73 != 65 && v73 != 71)
        {
          if (v73 == 67)
          {
            *(_DWORD *)(a2 + 700) += 600;
            *(_DWORD *)(a2 + 712) -= 600;
            goto LABEL_231;
          }
LABEL_152:
          if (*(void *)(a2 + 32)) {
            SetDetailsEncLabel(a2);
          }
          uint64_t result = ReRank(a2);
LABEL_155:
          int v74 = 0;
          goto LABEL_156;
        }
        *(_DWORD *)(a2 + 712) += 600;
        *(_DWORD *)(a2 + 700) -= 600;
LABEL_231:
        uint64_t v76 = (_DWORD *)(a2 + 616);
LABEL_151:
        *v76 -= 600;
        goto LABEL_152;
      }
      int v75 = *(_DWORD *)(a2 + 616) + 600;
    }
    *(_DWORD *)(a2 + 616) = v75;
    *(_DWORD *)(a2 + 712) -= 600;
    uint64_t v76 = (_DWORD *)(a2 + 700);
    goto LABEL_151;
  }
  uint64_t result = ReRank(a2);
  if (v3 != 1) {
    goto LABEL_155;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t result = (uint64_t)SetDetailsEncLabel(a2);
  }
  int v74 = 1;
LABEL_156:
  int v77 = *(_DWORD *)(a2 + 256);
  char v78 = *(_DWORD *)(a2 + 240) == 58;
  if (v77 >= 301)
  {
    if (v64) {
      int v79 = -300;
    }
    else {
      int v79 = -150;
    }
    *(_DWORD *)(a2 + 256) = v77 + v79;
  }
  int v80 = v77 << v78;
  int v81 = *(_DWORD *)(a2 + 248);
  *(_DWORD *)(a2 + 196) = 0;
  int v82 = *(_DWORD *)(a2 + 260);
  if (v82 >= 1)
  {
    uint64_t v83 = 0;
    int v84 = 0;
    int v85 = v81 - v80;
    while (1)
    {
      int v86 = *(_DWORD *)(a2 + 264 + 4 * v83);
      uint64_t result = *(unsigned int *)(a2 + 4 * v86 + 532);
      if (v74)
      {
        uint64_t v87 = (int)kMapToEncoding[v86];
        if ((kSpecialMask[v87] & 1) != 0 && (int)result <= 0) {
          break;
        }
      }
      if ((int)result >= v85)
      {
        LODWORD(v87) = kMapToEncoding[v86];
LABEL_174:
        *(_DWORD *)(a2 + 196) |= kSpecialMask[v87];
        uint64_t v89 = a2 + 4 * v84++;
        *(_DWORD *)(v89 + 264) = v86;
        int v82 = *(_DWORD *)(a2 + 260);
      }
LABEL_175:
      if (++v83 >= v82) {
        goto LABEL_178;
      }
    }
    if (v86 != *(_DWORD *)(a2 + 240) || (int)result < v85) {
      goto LABEL_175;
    }
    goto LABEL_174;
  }
  int v84 = 0;
LABEL_178:
  if (*(void *)(a2 + 32))
  {
    snprintf(__str, 0x20uLL, "%d prune", v80 / 30);
    uint64_t result = (uint64_t)SetDetailsEncLabel(a2);
  }
  *(_DWORD *)(a2 + 260) = v84;
  int v90 = *(_DWORD *)(a2 + 1348);
  if (v3 != 2) {
    goto LABEL_208;
  }
  if (!v90)
  {
    unsigned int v91 = *(_DWORD *)(a2 + 240);
    if (v91 > 0x3A || ((1 << v91) & 0x400350000200000) == 0)
    {
      *(_DWORD *)(a2 + 240) = 0;
      *(_DWORD *)(a2 + 532) += 1200;
    }
  }
  int v92 = *(_DWORD *)(a2 + 240);
  if (*(int *)(a2 + 180) < 1)
  {
    switch(v92)
    {
      case 28:
        *(_DWORD *)(a2 + 240) = 14;
        unint64_t v93 = (_DWORD *)(a2 + 588);
        break;
      case 22:
        *(_DWORD *)(a2 + 240) = 13;
        unint64_t v93 = (_DWORD *)(a2 + 584);
        break;
      case 4:
        *(_DWORD *)(a2 + 240) = 1;
        unint64_t v93 = (_DWORD *)(a2 + 536);
        break;
      default:
        goto LABEL_201;
    }
LABEL_200:
    *v93 += 1200;
    goto LABEL_201;
  }
  if (v92 > 13)
  {
    if (v92 == 14)
    {
      *(_DWORD *)(a2 + 240) = 28;
      unint64_t v93 = (_DWORD *)(a2 + 644);
    }
    else
    {
      if (v92 != 34) {
        goto LABEL_201;
      }
      *(_DWORD *)(a2 + 240) = 11;
      unint64_t v93 = (_DWORD *)(a2 + 576);
    }
    goto LABEL_200;
  }
  if (v92 == 1)
  {
    *(_DWORD *)(a2 + 240) = 4;
    unint64_t v93 = (_DWORD *)(a2 + 548);
    goto LABEL_200;
  }
  if (v92 == 13)
  {
    *(_DWORD *)(a2 + 240) = 22;
    unint64_t v93 = (_DWORD *)(a2 + 620);
    goto LABEL_200;
  }
LABEL_201:
  if (*(void *)(a2 + 32))
  {
    snprintf(__str, 0x20uLL, "final %d", v5 - *(_DWORD *)a2);
    SetDetailsEncLabel(a2);
    int v94 = *(_DWORD *)(a2 + 248) - *(_DWORD *)(a2 + 252);
    if (v94 > 59)
    {
      if (v94 > 0x5DB)
      {
        MyEncodingName(kMapToEncoding[*(int *)(a2 + 240)]);
        snprintf(__str, 0x20uLL, "%s");
      }
      else
      {
        MyEncodingName(kMapToEncoding[*(int *)(a2 + 240)]);
        snprintf(__str, 0x20uLL, "+%d %s");
      }
    }
    else
    {
      MyEncodingName(kMapToEncoding[*(int *)(a2 + 240)]);
      snprintf(__str, 0x20uLL, "+%d.%d %s ");
    }
    uint64_t result = (uint64_t)SetDetailsEncProbCopyOffset(a2, *(_DWORD *)(a2 + 240), (uint64_t)__str);
    int v90 = *(_DWORD *)(a2 + 1348);
  }
LABEL_208:
  BOOL v96 = *(_DWORD *)(a2 + 248) - *(_DWORD *)(a2 + 252) >= FLAGS_ced_reliable_difference || v90 == 0;
  *(unsigned char *)(a2 + 45) = v96;
  if (v90 == 1 && *(_DWORD *)(a2 + 240) == kMostLikelyEncoding[__rev16(*(unsigned __int16 *)(a2 + 1448))]) {
    *(unsigned char *)(a2 + 45) = 1;
  }
  int v97 = *(_DWORD *)(a2 + 260);
  if (v97 == 1) {
    goto LABEL_226;
  }
  if (v97 != 3)
  {
    if (v97 != 2
      || kMapEncToBaseEncoding[kMapToEncoding[*(int *)(a2 + 264)]] != kMapEncToBaseEncoding[kMapToEncoding[*(int *)(a2 + 268)]]
      || *v10 <= 2)
    {
      return result;
    }
LABEL_226:
    *(unsigned char *)(a2 + 45) = 1;
LABEL_227:
    *(unsigned char *)(a2 + 44) = 1;
    return result;
  }
  int v98 = kMapEncToBaseEncoding[kMapToEncoding[*(int *)(a2 + 264)]];
  if (v98 == kMapEncToBaseEncoding[kMapToEncoding[*(int *)(a2 + 268)]]
    && v98 == kMapEncToBaseEncoding[kMapToEncoding[*(int *)(a2 + 272)]]
    && *v10 >= 3)
  {
    goto LABEL_226;
  }
  return result;
}

uint64_t IncrementAndBoostPrune(unsigned __int8 *a1, int a2, uint64_t a3, int a4, int a5)
{
  *(void *)(a3 + 24) = a1;
  if (a2 < 2) {
    char v5 = 32;
  }
  else {
    char v5 = a1[1];
  }
  int v6 = *a1;
  uint64_t v7 = a5 - 1;
  uint64_t v8 = a3 + 4 * v7;
  int v9 = *(_DWORD *)(v8 + 1344);
  if (v9 < 17) {
    goto LABEL_11;
  }
  uint64_t v10 = 0;
  if (!*a1 || v6 == 43 || v6 == 126) {
    return v10;
  }
  if (v9 < 0x30)
  {
LABEL_11:
    int v11 = *(_DWORD *)a3;
    uint64_t v12 = 2 * v9;
    uint64_t v13 = a3 + 96 * v7 + 1352;
    *(unsigned char *)(v13 + v12) = v6;
    *(unsigned char *)(v13 + (int)v12 + 1) = v5;
    uint64_t v14 = a3 + 192 * v7 + 4 * v9;
    *(_DWORD *)(v14 + 1544) = a1 - v11;
    *(_DWORD *)(v14 + 1928) = a4;
    ++*(_DWORD *)(v8 + 1344);
    LOBYTE(v9) = v9 + 1;
  }
  else if (a5 == 2)
  {
    *(unsigned char *)(a3 + 44) = 1;
  }
  if (!*(unsigned char *)(a3 + 44) && (v9 & 7) != 0) {
    return 0;
  }
  BoostPrune((uint64_t)(a1 + 2), a3, 0);
  return 1;
}

uint64_t DumpSummary(uint64_t a1, int a2, int a3)
{
  LODWORD(v3) = a3;
  uint64_t v6 = a1 + 4 * a2;
  printf("  %sSummary[%2d]: ", kWhatSetName[a2], *(_DWORD *)(v6 + 1344));
  int v7 = *(_DWORD *)(v6 + 1344);
  if ((int)v3 >= v7) {
    uint64_t v3 = v7;
  }
  else {
    uint64_t v3 = v3;
  }
  if ((int)v3 >= 1)
  {
    uint64_t v8 = 0;
    int v9 = (char *)(a1 + 96 * a2 + 1353);
    do
    {
      printf("%02x%02x ", *(v9 - 1), *v9);
      if ((~v8 & 7) == 0) {
        printf("  ");
      }
      v9 += 2;
      ++v8;
    }
    while (v3 != v8);
  }
  return putchar(10);
}

size_t BeginDetail(uint64_t a1)
{
  int v2 = (FILE **)MEMORY[0x1E4F143C8];
  fprintf((FILE *)*MEMORY[0x1E4F143C8], "%d [", 67);
  for (uint64_t i = 0; i != 67; ++i)
  {
    uint64_t v4 = *v2;
    char v5 = MyEncodingName(kMapToEncoding[i]);
    fprintf(v4, "(%s)", v5);
    HIDWORD(v6) = -858993459 * (i - 9);
    LODWORD(v6) = HIDWORD(v6);
    if ((v6 >> 1) <= 0x19999998) {
      fwrite("\n    ", 5uLL, 1uLL, *v2);
    }
  }
  size_t result = fwrite("] size-detail\n", 0xEuLL, 1uLL, *v2);
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t DetailOffsetChar(int a1)
{
  if (a1 >= 0x20) {
    int v1 = 32;
  }
  else {
    int v1 = 43;
  }
  if (a1 >= 0x10) {
    int v2 = v1;
  }
  else {
    int v2 = 95;
  }
  if (a1 >= 3) {
    unsigned int v3 = v2;
  }
  else {
    unsigned int v3 = 61;
  }
  if (a1) {
    return v3;
  }
  else {
    return 32;
  }
}

size_t DumpDetail(uint64_t a1)
{
  int v2 = (FILE **)MEMORY[0x1E4F143C8];
  size_t result = fprintf((FILE *)*MEMORY[0x1E4F143C8], "%d count-detail\n", *(_DWORD *)(a1 + 40));
  uint64_t v4 = *(unsigned int *)(a1 + 40);
  unsigned int v5 = v4 - 1;
  if ((int)v4 > 1)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    unsigned int v7 = v4 - 2;
    do
    {
      uint64_t v8 = v4;
      uint64_t v9 = v6 + 304 * v5;
      *(_DWORD *)(v6 + 304 * --v4) -= *(_DWORD *)(v6 + 304 * (v8 - 2));
      for (uint64_t i = 32; i != 300; i += 4)
      {
        size_t result = *(unsigned int *)(v9 + i);
        *(_DWORD *)(v9 + i) = result - *(_DWORD *)(v6 + 304 * v7 + i);
      }
      --v7;
      --v5;
    }
    while (v8 > 2);
    LODWORD(v4) = *(_DWORD *)(a1 + 40);
  }
  if ((int)v4 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 32;
    while (1)
    {
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v15 = v13 + 304 * v11;
      uint64_t v14 = (void *)(v15 + 8);
      LODWORD(v15) = *(char *)(v15 + 31);
      char v16 = v15;
      if ((v15 & 0x80000000) != 0) {
        break;
      }
      LODWORD(v15) = v15;
      if ((v15 & 0x80) != 0) {
        goto LABEL_11;
      }
LABEL_12:
      if (*((unsigned char *)v14 + (int)v15 - 1) == 33)
      {
        fwrite("1 0.9 0.9 do-flag\n", 0x12uLL, 1uLL, *v2);
        uint64_t v13 = *(void *)(a1 + 32);
      }
      int v17 = *(_DWORD *)(v13 + 304 * v11);
      if (v17 >= 0x20) {
        unsigned int v18 = 32;
      }
      else {
        unsigned int v18 = 43;
      }
      if (v17 < 0x10) {
        unsigned int v18 = 95;
      }
      if (v17 < 3) {
        unsigned int v18 = 61;
      }
      if (v17) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 32;
      }
      uint64_t v20 = v13 + 304 * v11;
      int v21 = (const char *)(v20 + 8);
      if (*(char *)(v20 + 31) < 0) {
        int v21 = *(const char **)v21;
      }
      fprintf(*v2, "(%c%s) %d [", v19, v21, *(_DWORD *)(v13 + 304 * v11 + 4));
      for (uint64_t j = 0; j != 67; ++j)
      {
        fprintf(*v2, "%d ", *(_DWORD *)(*(void *)(a1 + 32) + v12 + 4 * j));
        HIDWORD(v23) = -858993459 * (j - 9);
        LODWORD(v23) = HIDWORD(v23);
        if ((v23 >> 1) <= 0x19999998) {
          fwrite("  ", 2uLL, 1uLL, *v2);
        }
      }
      size_t result = fwrite("] do-detail-e\n", 0xEuLL, 1uLL, *v2);
      ++v11;
      v12 += 304;
      if (v11 >= *(int *)(a1 + 40)) {
        goto LABEL_34;
      }
    }
    uint64_t v15 = v14[1];
    if ((v16 & 0x80) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v14 = (void *)*v14;
    goto LABEL_12;
  }
LABEL_34:
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t PsRecurse(const char *a1)
{
  return fprintf((FILE *)*MEMORY[0x1E4F143C8], "() end-detail (%s) start-detail\n\n", a1);
}

uint64_t DumpReliable(uint64_t a1)
{
  printf("Not reliable: ");
  int v2 = *(_DWORD *)(a1 + 1348);
  if (v2 < 1)
  {
    int v4 = 0;
    int v3 = 0;
  }
  else
  {
    int v3 = 0;
    int v4 = 0;
    unsigned int v5 = (unsigned __int8 *)(a1 + 1449);
    uint64_t v6 = *(unsigned int *)(a1 + 1348);
    do
    {
      int v7 = *(v5 - 1);
      int v8 = *v5;
      v5 += 2;
      v3 += v8;
      v4 += v7;
      --v6;
    }
    while (v6);
  }
  if (v2 <= 1) {
    int v2 = 1;
  }
  int v9 = v3 / v2;
  int v10 = v4 / v2;
  printf("center %02X,%02X\n", v3 / v2, v4 / v2);
  if (*(int *)(a1 + 260) < 1)
  {
    uint64_t v20 = 0;
    double v13 = 999.0;
  }
  else
  {
    uint64_t v11 = 0;
    int v12 = 0;
    double v13 = 999.0;
    do
    {
      uint64_t v14 = *(int *)(a1 + 264 + 4 * v11);
      uint64_t v15 = MyEncodingName(kMapToEncoding[v14]);
      char v16 = (unsigned __int8 *)&unigram_table + 808 * (int)v14;
      int v17 = v16[32];
      int v18 = v16[33];
      printf("  %8s = %4d at %02x,%02x +/- %02X,%02X ", v15, *(_DWORD *)(a1 + 4 * v14 + 532), v17, v18, v16[34], v16[35]);
      double v19 = sqrt((double)(v10 - v18) * (double)(v10 - v18) + (double)(v9 - v17) * (double)(v9 - v17));
      printf("(%3.1f)\n", v19);
      if (v13 > v19)
      {
        double v13 = v19;
        int v12 = v14;
      }
      ++v11;
    }
    while (v11 < *(int *)(a1 + 260));
    uint64_t v20 = v12;
  }
  int v21 = MyEncodingName(kMapToEncoding[v20]);
  return printf("Closest=%s (%3.1f)\n", v21, v13);
}

BOOL QuickPrintableAsciiScan(int8x8_t *a1, int a2)
{
  int v2 = (char *)a1 + a2;
  do
  {
    int v3 = a1;
    if (a1 >= (int8x8_t *)(v2 - 7)) {
      break;
    }
    ++a1;
    int8x8_t v4 = vorr_s8(vadd_s8(*v3, (int8x8_t)0x101010101010101), vadd_s8(*v3, (int8x8_t)0xE0E0E0E0E0E0E0E0));
  }
  while (((v4.i32[0] | v4.i32[1] | ((*(void *)&v4 | HIDWORD(*(void *)&v4)) >> 16) | ((v4.i32[0] | v4.i32[1] | ((*(void *)&v4 | HIDWORD(*(void *)&v4)) >> 16)) >> 8)) & 0x80) == 0);
  do
  {
    unsigned int v5 = v3;
    if (v3 >= (int8x8_t *)v2) {
      break;
    }
    int v3 = (int8x8_t *)((char *)v3 + 1);
  }
  while (kIsPrintableAscii[v5->u8[0]]);
  return v5 >= (int8x8_t *)v2;
}

BOOL TextInsideTag(const unsigned __int8 *a1, const unsigned __int8 *a2, const unsigned __int8 *a3)
{
  int v3 = a2 - 192;
  if (a2 - 192 < a1) {
    int v3 = a1;
  }
  int8x8_t v4 = a2 - 1;
  while (1)
  {
    if (v3 > v4) {
      return 0;
    }
    int v5 = *(a2 - 1);
    if ((v5 & 0xFFFFFFFD) == 0x3C) {
      break;
    }
    BOOL v6 = v5 != 47 || a2 >= a3;
    if (!v6 && *a2 == 42) {
      return 1;
    }
    int8x8_t v4 = a2 - 2;
    --a2;
  }
  if (v5 == 60) {
    return 1;
  }
  if (v5 != 62 || a2 - 7 < a1) {
    return 0;
  }
  int v7 = *(a2 - 7);
  if (v7 == 115) {
    return (*(a2 - 6) & 0xDF) == 0x43
  }
        && (*(a2 - 5) & 0xDF) == 0x52
        && (*(a2 - 4) & 0xDF) == 0x49
        && (*(a2 - 3) & 0xDF) == 0x50
        && (*(a2 - 2) & 0xDF) == 0x54;
  return v7 == 60
      && (*(a2 - 6) & 0xDF) == 0x54
      && (*(a2 - 5) & 0xDF) == 0x49
      && (*(a2 - 4) & 0xDF) == 0x54
      && (*(a2 - 3) & 0xDF) == 0x4C
      && (*(a2 - 2) & 0xDF) == 0x45;
}

const unsigned __int8 *SkipToTagEnd(const unsigned __int8 *a1, const unsigned __int8 *a2)
{
  size_t result = a1 + 1;
  while (result <= a2)
  {
    int v4 = *result++;
    if ((v4 & 0xFFFFFFFD) == 0x3C) {
      return result;
    }
  }
  return a1 + 2;
}

uint64_t LookupWatchEnc(uint64_t **a1)
{
  int v1 = *((char *)a1 + 23);
  if (v1 < 0)
  {
    if (a1[1] != (uint64_t *)8)
    {
      a1 = (uint64_t **)*a1;
      goto LABEL_9;
    }
    a1 = (uint64_t **)*a1;
  }
  else if (v1 != 8)
  {
    goto LABEL_9;
  }
  if (*a1 == (uint64_t *)0x3846545538465455) {
    return 59;
  }
LABEL_9:
  int v3 = 0;
  if (!EncodingFromName((BOOL)a1, &v3)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  while (kMapToEncoding[result] != v3)
  {
    if (++result == 67) {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t CompatibleEnc(unsigned int a1, unsigned int a2)
{
  uint64_t result = 0;
  if (a1 > 0x4A) {
    return result;
  }
  if (a2 > 0x4A) {
    return result;
  }
  uint64_t result = 1;
  if (a1 == a2) {
    return result;
  }
  if (a2 == 23) {
    return result;
  }
  if (a1 == 23) {
    return result;
  }
  if (a2 == 24) {
    return result;
  }
  if (a1 == 24) {
    return result;
  }
  int v4 = kMapEncToBaseEncoding[a1];
  int v5 = kMapEncToBaseEncoding[a2];
  if (v4 == v5) {
    return result;
  }
  if (a1 == 63)
  {
    if (a2 == 22 || !v5) {
      return result;
    }
    if (a2 != 63) {
      return 0;
    }
    goto LABEL_17;
  }
  if (a2 != 63) {
    return 0;
  }
  if (a1 != 22)
  {
LABEL_17:
    if (v4) {
      return 0;
    }
  }
  return result;
}

uint64_t SupersetEnc(uint64_t result, unsigned int a2)
{
  if (kMapEncToSuperLevel[result] >= kMapEncToSuperLevel[a2]) {
    return result;
  }
  else {
    return a2;
  }
}

uint64_t Rescore(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (FLAGS_counts) {
    ++rescore_used;
  }
  uint64_t v6 = *(unsigned int *)(a4 + 1348);
  if ((int)v6 < 1) {
    return a1;
  }
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = a3 - a2;
  uint64_t v10 = a4 + 264;
  do
  {
    uint64_t v11 = *(int *)(a4 + 4 * v7 + 1736);
    if ((int)v11 < 1) {
      char v12 = 32;
    }
    else {
      char v12 = *(unsigned char *)(a2 + (v11 - 1));
    }
    if ((int)v11 + 1 >= v9) {
      unsigned int v13 = 32;
    }
    else {
      unsigned int v13 = *(unsigned __int8 *)(a2 + v11 + 1);
    }
    if ((int)v11 + 2 >= v9) {
      unsigned int v14 = 32;
    }
    else {
      unsigned int v14 = *(unsigned __int8 *)(a2 + v11 + 2);
    }
    int v15 = (*(unsigned __int8 *)(a2 + v11) >> 1) & 0x20 | v12 & 0x80 | (v13 >> 4) & 8 | (v14 >> 6) & 2;
    if (v15 == 32)
    {
      int v16 = *(_DWORD *)(a4 + 260);
      if (v16 < 1) {
        goto LABEL_26;
      }
      for (uint64_t i = 0; i < v16; ++i)
      {
        uint64_t v18 = *(int *)(v10 + 4 * i);
        if ((kSpecialMask[kMapToEncoding[v18]] & 0x800) != 0)
        {
          *(_DWORD *)(a4 + 4 * v18 + 532) += 60;
          int v16 = *(_DWORD *)(a4 + 260);
          char v8 = 1;
        }
      }
    }
    if (v15 == 170)
    {
      int v19 = *(_DWORD *)(a4 + 260);
      if (v19 >= 1)
      {
        for (uint64_t j = 0; j < v19; ++j)
        {
          uint64_t v21 = *(int *)(v10 + 4 * j);
          if ((kSpecialMask[kMapToEncoding[v21]] & 0x800) != 0)
          {
            *(_DWORD *)(a4 + 4 * v21 + 532) -= 60;
            int v19 = *(_DWORD *)(a4 + 260);
            char v8 = 1;
          }
        }
      }
    }
LABEL_26:
    ++v7;
  }
  while (v7 != v6);
  if (v8)
  {
    ReRank(a4);
    a1 = kMapToEncoding[*(int *)(a4 + 240)];
    if (*(void *)(a4 + 32))
    {
      int v22 = MyEncodingName(kMapToEncoding[*(int *)(a4 + 240)]);
      snprintf(__str, 0x20uLL, "=Rescore %s", v22);
      uint64_t v23 = 0;
      while (kMapToEncoding[v23] != a1)
      {
        if (++v23 == 67)
        {
          LODWORD(v23) = -1;
          break;
        }
      }
      int v24 = *(_DWORD *)(a4 + 40);
      unint64_t v25 = (_DWORD *)(*(void *)(a4 + 32) + 304 * v24);
      _DWORD *v25 = 0;
      v25[1] = v23;
      MEMORY[0x1AD0E3190](v25 + 2, __str);
      memcpy((void *)(*(void *)(a4 + 32) + 304 * v24 + 32), (const void *)(a4 + 532), 0x10CuLL);
      ++*(_DWORD *)(a4 + 40);
    }
    SimplePrune((_DWORD *)a4, 300);
    CalcReliable(a4);
  }
  return a1;
}

uint64_t AddToSet(uint64_t result, int *a2, int *a3)
{
  uint64_t v3 = 0;
  while (kMapToEncoding[v3] != result)
  {
    if (++v3 == 67)
    {
      LODWORD(v3) = -1;
      break;
    }
  }
  int v4 = *a2;
  if (*a2 < 1)
  {
LABEL_9:
    *a2 = v4 + 1;
    a3[v4] = v3;
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a3;
    while (1)
    {
      int v7 = *v6++;
      if (v7 == v3) {
        break;
      }
      if (!--v5) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t RobustScan(const char *a1, int a2, int a3, int *a4, _DWORD *a5)
{
  uint64_t v5 = a5;
  if (FLAGS_counts) {
    ++robust_used;
  }
  if (a3 >= 1) {
    bzero(a5, 4 * a3);
  }
  if (a2 >= 0x40000) {
    int v10 = 0x40000;
  }
  else {
    int v10 = a2;
  }
  uint64_t v11 = &a1[v10];
  unint64_t v12 = (unint64_t)(v11 - 1);
  if (a2 >= 0x10000) {
    a2 = 0x10000;
  }
  unsigned int v13 = (FILE **)MEMORY[0x1E4F143C8];
  if (FLAGS_enc_detect_source) {
    PsSourceInit(32);
  }
  if (v12 > (unint64_t)a1)
  {
    uint64_t v14 = 0;
    int v15 = &a1[a2 - 1];
    int v16 = &a1[v10 - 1];
    while (1)
    {
      while (a1 < v11 - 3 && (((a1[1] | *a1) | (a1[2] | a1[3])) & 0x80) == 0)
        a1 += 4;
      if ((unint64_t)a1 >= v12)
      {
        uint64_t v19 = v14;
      }
      else
      {
        uint64_t v17 = v16 - a1;
        a1 += 2;
        while (1)
        {
          int v18 = *(a1 - 2);
          if (v18 < 0) {
            break;
          }
          ++a1;
          if (!--v17)
          {
            uint64_t v19 = v14;
            a1 = v16;
            goto LABEL_23;
          }
        }
        if (a3 >= 1)
        {
          unint64_t v20 = *((unsigned __int8 *)a1 - 1);
          uint64_t v21 = v18 & 0xF0 | (v20 >> 4);
          unint64_t v22 = v20 & 0x80 ^ v18;
          unint64_t v23 = (32 * (v18 & 0x1Fu)) & 0xFFFFFFFFFFFFFFE0 | v20 & 0x1F;
          uint64_t v24 = a3;
          unint64_t v25 = a4;
          unsigned int v26 = v5;
          do
          {
            int v28 = *v25++;
            int v27 = v28;
            int v29 = (char *)&unigram_table + 808 * v28;
            int v30 = v29[v21 + 552];
            if (v30) {
              int v31 = *(unsigned __int8 *)(*((void *)&unigram_table + 101 * v27 + ((v20 >> 5) & 3)) + v23);
            }
            else {
              int v31 = *((_DWORD *)&unigram_table + 202 * v27 + 9);
            }
            *v26++ += v29[v20 + 296] + v29[v22 + 40] + v30 + v31;
            --v24;
          }
          while (v24);
        }
        uint64_t v19 = (v14 + 1);
        if ((int)v14 >= 1000 && a1 > v15) {
          goto LABEL_35;
        }
      }
LABEL_23:
      uint64_t v14 = v19;
      if ((unint64_t)a1 >= v12) {
        goto LABEL_35;
      }
    }
  }
  uint64_t v19 = 0;
LABEL_35:
  if (FLAGS_enc_detect_source)
  {
    fprintf(*v13, "(  bigram_count = %d) do-src\n", v19);
    if (v19 <= 1) {
      uint64_t v19 = 1;
    }
    else {
      uint64_t v19 = v19;
    }
    if (a3 >= 1)
    {
      uint64_t v32 = a3;
      do
      {
        BOOL v33 = *v13;
        uint64_t v34 = *a4++;
        uint64_t v35 = MyEncodingName(kMapToEncoding[v34]);
        LODWORD(v34) = *v5++;
        fprintf(v33, "(  enc[%-12.12s] = %7d (avg %d)) do-src\n", v35, v34, (int)v34 / (int)v19);
        --v32;
      }
      while (v32);
    }
    PsSourceFinish();
  }
  return v19;
}

uint64_t Rescan(uint64_t a1, const char *a2, unint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, int a10, char a11, uint64_t a12)
{
  unint64_t v12 = a2;
  uint64_t v84 = *MEMORY[0x1E4F143B8];
  if (FLAGS_counts) {
    ++rescan_used;
  }
  if (a4 - (int)a3 >= 801)
  {
    int v14 = a4 - a2;
    unsigned int v15 = *(_DWORD *)(a12 + 204);
    if (v15 == 23)
    {
      unsigned int v15 = *(_DWORD *)(a12 + 208);
      if (v15 == 23) {
        unsigned int v15 = *(_DWORD *)(a12 + 212);
      }
    }
    int v16 = kMapToEncoding[*(int *)(a12 + 244)];
    signed int v17 = (a3 - a2 + ((a4 - a3) >> 1)) & 0xFFFFFFFE;
    int v18 = &a2[v17];
    if ((unint64_t)(v18 - 192) >= a3) {
      unint64_t v19 = (unint64_t)(v18 - 192);
    }
    else {
      unint64_t v19 = a3;
    }
    int v20 = v17 | 1;
    uint64_t v21 = v18 - 1;
    int v75 = *(unsigned __int8 *)(a12 + 45);
    while (v19 <= (unint64_t)v21)
    {
      int v22 = *v21--;
      --v20;
      if ((v22 & 0x80000000) == 0)
      {
        signed int v17 = v20 & 0xFFFFFFFE;
        break;
      }
    }
    if (*(void *)(a12 + 32))
    {
      unsigned int v74 = a8;
      uint64_t v72 = a6;
      uint64_t v73 = a7;
      uint64_t v71 = a5;
      SetDetailsEncLabel(a12);
      DumpDetail(a12);
      snprintf(__str, 0x20uLL, ">> Rescan[%d..%d]", v17, v14);
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "() end-detail (%s) start-detail\n\n", __str);
      a5 = v71;
      a6 = v72;
      a7 = v73;
      a8 = v74;
      unint64_t v12 = a2;
    }
    unsigned __int8 v78 = 0;
    int v77 = 0;
    BYTE4(v70) = a11;
    LODWORD(v70) = a10;
    unsigned int v23 = InternalDetectEncoding(5, &v12[v17], (v14 - v17), a5, a6, a7, a8, a9, v70, v79, &v78, &v77);
    int v24 = v78;
    *(unsigned char *)(a12 + 45) = v78;
    uint64_t v25 = a1;
    int v26 = v14;
    if (v23 == 24) {
      goto LABEL_29;
    }
    int v27 = CompatibleEnc(v15, v23);
    uint64_t v25 = a1;
    if (v27)
    {
      if (kMapEncToSuperLevel[v15] >= kMapEncToSuperLevel[v23]) {
        uint64_t v25 = v15;
      }
      else {
        uint64_t v25 = v23;
      }
    }
    if (v75 && v24)
    {
      if (CompatibleEnc(a1, v23))
      {
        if (kMapEncToSuperLevel[a1] >= kMapEncToSuperLevel[v23]) {
          return a1;
        }
        else {
          return v23;
        }
      }
    }
    else if (!v24)
    {
      goto LABEL_29;
    }
    if (CompatibleEnc(a1, v23) & v27) {
      return v25;
    }
LABEL_29:
    uint64_t v28 = 0;
    while (kMapToEncoding[v28] != a1)
    {
      if (++v28 == 67)
      {
        LODWORD(v28) = -1;
        break;
      }
    }
    uint64_t v29 = 0;
    *(_DWORD *)std::string __str = v28;
    while (kMapToEncoding[v29] != v16)
    {
      if (++v29 == 67)
      {
        LODWORD(v29) = -1;
        break;
      }
    }
    if (v28 == v29)
    {
      unsigned int v30 = 1;
    }
    else
    {
      int v83 = v29;
      unsigned int v30 = 2;
    }
    uint64_t v31 = 0;
    while (kMapToEncoding[v31] != v23)
    {
      if (++v31 == 67)
      {
        LODWORD(v31) = -1;
        break;
      }
    }
    uint64_t v32 = 0;
    uint64_t v33 = v30;
    uint64_t v34 = (FILE **)MEMORY[0x1E4F143C8];
    while (*(_DWORD *)&__str[v32] != v31)
    {
      v32 += 4;
      if (4 * v30 == v32)
      {
        ++v30;
        *(_DWORD *)&__str[4 * v33] = v31;
        break;
      }
    }
    uint64_t v35 = 0;
    while (kMapToEncoding[v35] != v77)
    {
      if (++v35 == 67)
      {
        LODWORD(v35) = -1;
        break;
      }
    }
    uint64_t v36 = 0;
    uint64_t v37 = v30;
    while (*(_DWORD *)&__str[v36] != v35)
    {
      v36 += 4;
      if (4 * v30 == v36)
      {
        ++v30;
        *(_DWORD *)&__str[4 * v37] = v35;
        break;
      }
    }
    int v38 = *(_DWORD *)(a12 + 204);
    if (v38 != 23)
    {
      uint64_t v39 = 0;
      while (kMapToEncoding[v39] != v38)
      {
        if (++v39 == 67)
        {
          LODWORD(v39) = -1;
          break;
        }
      }
      uint64_t v40 = v30;
      int v41 = __str;
      uint64_t v42 = v30;
      while (1)
      {
        int v43 = *(_DWORD *)v41;
        v41 += 4;
        if (v43 == v39) {
          break;
        }
        if (!--v42)
        {
          ++v30;
          *(_DWORD *)&__str[4 * v40] = v39;
          break;
        }
      }
    }
    int v44 = *(_DWORD *)(a12 + 208);
    if (v44 != 23)
    {
      uint64_t v45 = 0;
      while (kMapToEncoding[v45] != v44)
      {
        if (++v45 == 67)
        {
          LODWORD(v45) = -1;
          break;
        }
      }
      uint64_t v46 = v30;
      uint64_t v47 = __str;
      uint64_t v48 = v30;
      while (1)
      {
        int v49 = *(_DWORD *)v47;
        v47 += 4;
        if (v49 == v45) {
          break;
        }
        if (!--v48)
        {
          ++v30;
          *(_DWORD *)&__str[4 * v46] = v45;
          break;
        }
      }
    }
    int v50 = *(_DWORD *)(a12 + 212);
    if (v50 != 23)
    {
      uint64_t v51 = 0;
      while (kMapToEncoding[v51] != v50)
      {
        if (++v51 == 67)
        {
          LODWORD(v51) = -1;
          break;
        }
      }
      uint64_t v52 = v30;
      uint64_t v53 = __str;
      uint64_t v54 = v30;
      while (1)
      {
        int v55 = *(_DWORD *)v53;
        v53 += 4;
        if (v55 == v51) {
          break;
        }
        if (!--v54)
        {
          ++v30;
          *(_DWORD *)&__str[4 * v52] = v51;
          break;
        }
      }
    }
    int v56 = *(_DWORD *)(a12 + 200);
    if (v56 != 23)
    {
      uint64_t v57 = 0;
      while (kMapToEncoding[v57] != v56)
      {
        if (++v57 == 67)
        {
          LODWORD(v57) = -1;
          break;
        }
      }
      uint64_t v58 = v30;
      uint64_t v59 = __str;
      uint64_t v60 = v30;
      while (1)
      {
        int v61 = *(_DWORD *)v59;
        v59 += 4;
        if (v61 == v57) {
          break;
        }
        if (!--v60)
        {
          ++v30;
          *(_DWORD *)&__str[4 * v58] = v57;
          break;
        }
      }
    }
    if (*(void *)(a12 + 32))
    {
      SetDetailsEncLabel(a12);
      DumpDetail(a12);
      snprintf(v81, 0x20uLL, ">> RobustScan[0..%d]", v26);
      fprintf(*v34, "() end-detail (%s) start-detail\n\n", v81);
    }
    int v62 = RobustScan(a2, v26, v30, (int *)__str, v81);
    uint64_t v63 = 0;
    int v64 = -1;
    do
    {
      if (v64 < *(_DWORD *)&v81[v63])
      {
        uint64_t v25 = kMapToEncoding[*(int *)&__str[v63]];
        int v64 = *(_DWORD *)&v81[v63];
      }
      v63 += 4;
    }
    while (4 * v30 != v63);
    if (*(void *)(a12 + 32))
    {
      int v65 = MyEncodingName(v25);
      snprintf(v80, 0x20uLL, "=Robust[%d] %s", v62, v65);
      uint64_t v66 = 0;
      while (kMapToEncoding[v66] != v25)
      {
        if (++v66 == 67)
        {
          LODWORD(v66) = -1;
          break;
        }
      }
      int v67 = *(_DWORD *)(a12 + 40);
      int v68 = (_DWORD *)(*(void *)(a12 + 32) + 304 * v67);
      *int v68 = 0;
      v68[1] = v66;
      MEMORY[0x1AD0E3190](v68 + 2, v80);
      memcpy((void *)(*(void *)(a12 + 32) + 304 * v67 + 32), (const void *)(a12 + 532), 0x10CuLL);
      ++*(_DWORD *)(a12 + 40);
    }
    return v25;
  }
  return a1;
}

uint64_t InternalDetectEncoding(char a1, int8x8_t *a2, int a3, char *a4, char *a5, char *a6, unsigned int a7, unsigned int a8, unsigned int a9, char a10, _DWORD *a11, unsigned __int8 *a12, _DWORD *a13)
{
  uint64_t v123 = *MEMORY[0x1E4F143B8];
  *a11 = 0;
  *a12 = 0;
  *a13 = 24;
  if (!a3)
  {
    uint64_t v19 = 0;
    *a12 = 1;
    return v19;
  }
  if (a3 <= 500 && a10 && QuickPrintableAsciiScan(a2, a3))
  {
    *a12 = 1;
    return 24;
  }
  InitDetectEncodingState((uint64_t)v106);
  uint64_t v105 = 0;
  unsigned int v93 = a7;
  uint64_t v91 = (uint64_t)a5;
  int v92 = a6;
  unsigned int v90 = a8;
  uint64_t v89 = a4;
  if (FLAGS_enc_detect_detail) {
    operator new[]();
  }
  if (a3 >= FLAGS_enc_detect_slow_max_kb << 10) {
    int v20 = FLAGS_enc_detect_slow_max_kb << 10;
  }
  else {
    int v20 = a3;
  }
  if (a3 >= FLAGS_enc_detect_fast_max_kb << 10) {
    int v21 = FLAGS_enc_detect_fast_max_kb << 10;
  }
  else {
    int v21 = a3;
  }
  int v22 = (char *)a2 + v21;
  int v99 = v20;
  unint64_t v101 = (unint64_t)(v22 - 1);
  if (v20 <= v21) {
    unsigned int v23 = (const unsigned __int8 *)a2 + v20 - 1;
  }
  else {
    unsigned int v23 = (const unsigned __int8 *)(v22 - 1);
  }
  v106[0] = a2;
  v106[1] = (char *)a2 + v21;
  v106[2] = a2;
  v106[3] = (char *)a2 - 2;
  if (a10) {
    int v24 = &kTestPrintableAscii;
  }
  else {
    int v24 = &kTestPrintableAsciiTildePlus;
  }
  if (v107)
  {
    BeginDetail((uint64_t)v106);
    uint64_t v25 = (uint64_t **)std::string::basic_string[abi:ne180100]<0>(__str, "");
    int v26 = LookupWatchEnc(v25);
    watch1_rankedenc = v26;
    if (v122 < 0)
    {
      operator delete(*(void **)__str);
      int v26 = watch1_rankedenc;
    }
    int v27 = (FILE **)MEMORY[0x1E4F143C8];
    if ((v26 & 0x80000000) == 0) {
      fprintf((FILE *)*MEMORY[0x1E4F143C8], "/track-me %d def\n", v26);
    }
    uint64_t v28 = (uint64_t **)std::string::basic_string[abi:ne180100]<0>(__str, "");
    int v29 = LookupWatchEnc(v28);
    watch2_rankedenc = v29;
    if (v122 < 0)
    {
      operator delete(*(void **)__str);
      int v29 = watch2_rankedenc;
    }
    if ((v29 & 0x80000000) == 0) {
      fprintf(*v27, "/track-me2 %d def\n", v29);
    }
    fprintf(*v27, "%% kDerateHintsBelow = %d\n", 12);
  }
  unsigned int v30 = (const unsigned __int8 *)a2 + a3;
  if (FLAGS_enc_detect_source) {
    PsSourceInit(32);
  }
  ApplyHints(v89, a5, v92, v93, a8, a9, (uint64_t)v106);
  InitialBytesBoost((unsigned __int8 *)a2, a3, (uint64_t)v106);
  char v88 = 0;
  int v102 = 0;
  uint64_t v31 = v21;
  int v94 = v22 - 3;
  uint64_t v32 = a2;
  uint64_t v97 = v31;
  int v98 = (unsigned __int8 *)(v30 - 1);
  unsigned int v96 = a3;
  int v33 = a3 + a2 + 1;
  uint64_t v103 = (const unsigned __int8 *)a2 + a3;
  uint64_t v34 = (const unsigned __int8 *)v101;
  int v35 = v99;
  while (1)
  {
    if (v32 < (int8x8_t *)v23)
    {
      int v100 = v35;
      while (1)
      {
        uint64_t v36 = v32;
LABEL_37:
        uint64_t v37 = 0;
        int v38 = v36;
        do
        {
          uint64_t v39 = v38;
          uint64_t v40 = (const unsigned __int8 *)v36 + v37;
          if (&v36->i8[v37] >= (__int8 *)v23) {
            goto LABEL_52;
          }
          int v41 = (char)v24[*v40];
          int v38 = (int8x8_t *)((char *)v39 + 1);
          ++v37;
        }
        while (!v41);
        if (FLAGS_enc_detect_source) {
          PsSource((size_t)v36 + v37 - 1, (const unsigned __int8 *)a2, v103);
        }
        if (a1 & 4 | a9 || !TextInsideTag((const unsigned __int8 *)a2, (const unsigned __int8 *)v36 + v37 - 1, v23)) {
          break;
        }
        if (v102 < 12)
        {
          ++v102;
          int v42 = 4;
          __int16 v43 = 120;
          goto LABEL_47;
        }
        uint64_t v32 = (int8x8_t *)((char *)v36 + v37);
        while (v32 <= (int8x8_t *)v23)
        {
          int v47 = v32->u8[0];
          uint64_t v32 = (int8x8_t *)((char *)v32 + 1);
          if ((v47 & 0xFFFFFFFD) == 0x3C) {
            goto LABEL_59;
          }
        }
        uint64_t v32 = (int8x8_t *)((char *)v36 + v37 + 1);
LABEL_59:
        char v88 = 1;
        unsigned int v30 = v103;
        uint64_t v34 = (const unsigned __int8 *)v101;
        int v35 = v100;
        if (v32 >= (int8x8_t *)v23) {
          goto LABEL_62;
        }
      }
      int v42 = 0;
      __int16 v43 = 45;
LABEL_47:
      if (FLAGS_enc_detect_source)
      {
        uint64_t v44 = pssource_mark_buffer;
        int v45 = 2 * ((~a2 + (int)v36 + (int)v37) % pssourcewidth);
        *(_WORD *)(pssource_mark_buffer + v45) = 15677;
        *(_WORD *)(v44 + v45 + 2) = v43 | (v43 << 8);
      }
      int v46 = IncrementAndBoostPrune((unsigned __int8 *)v36 + v37 - 1, v33 - (int)v36 - (int)v37, (uint64_t)v106, v42, v41);
      uint64_t v40 = (const unsigned __int8 *)v36 + v41 + v37 - 1;
      if (!v46) {
        goto LABEL_52;
      }
      if (v109)
      {
        uint64_t v32 = (int8x8_t *)((char *)v39 + v41);
      }
      else
      {
        if (v112)
        {
LABEL_52:
          uint64_t v36 = (int8x8_t *)v40;
          if (v40 < v23) {
            goto LABEL_37;
          }
          uint64_t v32 = (int8x8_t *)v40;
          goto LABEL_61;
        }
        uint64_t v32 = (int8x8_t *)((char *)v36 + v41 + v37 - 1);
      }
LABEL_61:
      unsigned int v30 = v103;
      uint64_t v34 = (const unsigned __int8 *)v101;
      int v35 = v100;
    }
LABEL_62:
    if (v32 == (int8x8_t *)v98 && (uint64_t v49 = *v98, v24[v49]))
    {
      char v48 = 1;
      IncrementAndBoostPrune(v98, 1, (uint64_t)v106, 0, (char)v24[v49]);
    }
    else
    {
      char v48 = 0;
    }
    if (FLAGS_enc_detect_source)
    {
      PsSource((size_t)v32, (const unsigned __int8 *)a2, v30);
      uint64_t v50 = pssource_mark_buffer;
      int v51 = 2 * (((int)v32 - (int)a2) % pssourcewidth);
      *(_WORD *)(pssource_mark_buffer + v51) = 15677;
      *(_WORD *)(v50 + v51 + 2) = 11565;
    }
    BoostPrune((uint64_t)v32, (uint64_t)v106, 1);
    if (v109)
    {
      uint64_t v52 = v96;
      unsigned int v53 = a9;
      goto LABEL_107;
    }
    if ((v112 & 1) == 0 || v32 >= (int8x8_t *)v34) {
      break;
    }
    v35 += FLAGS_enc_detect_slow_max_kb << 10;
    if (v35 <= (int)v97) {
      unsigned int v23 = (const unsigned __int8 *)&a2[-1] + v35 + 7;
    }
    else {
      unsigned int v23 = v34;
    }
    if ((v112 & 6) == 0) {
      int v24 = &kTestPrintableAscii;
    }
  }
  if (v32 >= (int8x8_t *)v34)
  {
    uint64_t v52 = v96;
  }
  else
  {
    uint64_t v52 = v96;
    unint64_t v54 = (unint64_t)v94;
    do
    {
      while ((unint64_t)v32 < v54
           && (((v32->i8[1] | v32->i8[0]) | (v32->i8[2] | v32->i8[3])) & 0x80) == 0)
        uint64_t v32 = (int8x8_t *)((char *)v32 + 4);
      if ((unint64_t)v32 < v101)
      {
        uint64_t v55 = 0;
        while ((v32->i8[v55] & 0x80000000) == 0)
        {
          ++v55;
          if (!&v32->i8[1 - ((void)a2 + v97) + v55])
          {
            uint64_t v32 = (int8x8_t *)((char *)a2 + v97 - 1);
            uint64_t v52 = v96;
            goto LABEL_96;
          }
        }
        if (FLAGS_enc_detect_source)
        {
          PsSource((size_t)v32 + v55, (const unsigned __int8 *)a2, v103);
          uint64_t v56 = pssource_mark_buffer;
          int v57 = 2 * (((int)v32 - (int)a2 + (int)v55) % pssourcewidth);
          *(_WORD *)(pssource_mark_buffer + v57) = 15677;
          *(_WORD *)(v56 + v57 + 2) = 11565;
        }
        int v58 = IncrementAndBoostPrune((unsigned __int8 *)v32 + v55, (int)v103 - ((int)v32 + (int)v55), (uint64_t)v106, 0, 2);
        uint64_t v32 = (int8x8_t *)((char *)v32 + v55 + 2);
        int v59 = v109 ? v58 : 0;
        uint64_t v52 = v96;
        unint64_t v54 = (unint64_t)v94;
        if (v59 == 1) {
          break;
        }
      }
LABEL_96:
      ;
    }
    while ((unint64_t)v32 < v101);
  }
  if (v32 == (int8x8_t *)v98) {
    char v60 = v48;
  }
  else {
    char v60 = 1;
  }
  unsigned int v53 = a9;
  unsigned int v30 = v103;
  if ((v60 & 1) == 0)
  {
    uint64_t v61 = *v98;
    if (v24[v61]) {
      IncrementAndBoostPrune(v98, 1, (uint64_t)v106, 0, (char)v24[v61]);
    }
    uint64_t v32 = (int8x8_t *)v98;
  }
LABEL_107:
  if (FLAGS_enc_detect_source)
  {
    PsSource((size_t)v32, (const unsigned __int8 *)a2, v30);
    uint64_t v62 = pssource_mark_buffer;
    int v63 = 2 * (((int)v32 - (int)a2) % pssourcewidth);
    *(_WORD *)(pssource_mark_buffer + v63) = 15677;
    *(_WORD *)(v62 + v63 + 2) = 11565;
  }
  BoostPrune((uint64_t)v32, (uint64_t)v106, 2);
  if (FLAGS_enc_detect_summary)
  {
    DumpSummary((uint64_t)v106, 0, 32);
    DumpSummary((uint64_t)v106, 1, 32);
  }
  if (FLAGS_enc_detect_source) {
    PsSourceFinish();
  }
  unsigned int v64 = v117;
  if (v117 != 0 || (v88 & 1) == 0)
  {
    uint64_t v19 = kMapToEncoding[v117];
    unsigned int v72 = v115;
    if (v115 != 23 && v114 == 23) {
      unsigned int v74 = v115;
    }
    else {
      unsigned int v74 = v114;
    }
    unsigned int v75 = v116;
    if (v116 != 23 && v74 == 23) {
      unsigned int v77 = v116;
    }
    else {
      unsigned int v77 = v74;
    }
    if (v77 == 23)
    {
      if (v117 == 1)
      {
        if (!v111)
        {
          int v78 = v110;
          BOOL v79 = v110 == 0;
LABEL_156:
          int v80 = 1;
          goto LABEL_157;
        }
LABEL_155:
        BOOL v79 = 0;
        int v78 = 1;
        unsigned __int8 v110 = 1;
        goto LABEL_156;
      }
      if (!kMapEncToBaseEncoding[v19] || v19 <= 0x3F && ((1 << v19) & 0x8000000001800000) != 0)
      {
        int v80 = 1;
        goto LABEL_148;
      }
      unsigned int v77 = v113;
      if (v113 == 23)
      {
LABEL_147:
        int v80 = 0;
        goto LABEL_148;
      }
    }
    else if (!CompatibleEnc(v77, v114) {
           || !CompatibleEnc(v77, v72)
    }
           || !CompatibleEnc(v77, v75))
    {
      goto LABEL_147;
    }
    int v80 = CompatibleEnc(v77, v19);
LABEL_148:
    if (!v111
      || v64 != 1
      && kMapEncToBaseEncoding[v19]
      && (v19 > 0x3F || ((1 << v19) & 0x8000000001800000) == 0)
      && (v64 > 0x29 || ((1 << v64) & 0x20020011200) == 0))
    {
      int v78 = v110;
      BOOL v79 = v110 == 0;
      if (v110) {
        char v84 = v80;
      }
      else {
        char v84 = 1;
      }
      if ((v84 & 1) == 0)
      {
        BOOL v86 = (v19 - 10) < 0x36 && ((0x20000000007803uLL >> (v19 - 10)) & 1) != 0
           || v64 == 5
           || (kMapEncToBaseEncoding[v19] - 13) < 2;
        LOBYTE(v80) = 0;
        if (!v86 || v120 < 6) {
          goto LABEL_159;
        }
        BOOL v79 = 0;
        int v80 = a1 & 1;
        int v78 = 1;
      }
LABEL_157:
      if (!v79 && v80)
      {
LABEL_160:
        *a13 = kMapToEncoding[v118];
        if (v78) {
          char v81 = v80;
        }
        else {
          char v81 = 0;
        }
        if (a1 & 1) != 0 || (v81 & 1) != 0 || (kSpecialMask[(int)v19])
        {
          if ((v80 & 1) == 0) {
            unsigned __int8 v110 = 0;
          }
        }
        else
        {
          uint64_t v19 = Rescan(v19, (const char *)a2, (unint64_t)v32, (int)v30, (uint64_t)v89, v91, (uint64_t)v92, v93, v90, a9, a10, (uint64_t)v106);
        }
        if (v107) {
          DumpDetail((uint64_t)v106);
        }
        *a11 = v32 - a2 + 1;
        *a12 = v110;
        goto LABEL_172;
      }
LABEL_159:
      uint64_t v19 = Rescore(v19, (uint64_t)a2, (int)v30, (uint64_t)v106);
      int v78 = v110;
      goto LABEL_160;
    }
    goto LABEL_155;
  }
  if (v107)
  {
    int v65 = v108;
    uint64_t v66 = (_DWORD *)(v107 + 304 * v108);
    *uint64_t v66 = *(v66 - 76);
    v66[1] = -1;
    MEMORY[0x1AD0E3190](v66 + 2, ">> Recurse/tags");
    memcpy((void *)(v107 + 304 * v65 + 32), v119, 0x10CuLL);
    ++v108;
    DumpDetail((uint64_t)v106);
    strcpy(__str, ">> Recurse for tags");
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "() end-detail (%s) start-detail\n\n", __str);
  }
  BYTE4(v87) = a10;
  LODWORD(v87) = v53;
  uint64_t v67 = InternalDetectEncoding(4, a2, v52, v89, v91, v92, v93, v90, v87, a11, a12, a13);
  uint64_t v19 = v67;
  if (v107)
  {
    int v68 = MyEncodingName(v67);
    snprintf(__str, 0x20uLL, "=2 %s", v68);
    uint64_t v69 = 0;
    while (kMapToEncoding[v69] != v19)
    {
      if (++v69 == 67)
      {
        LODWORD(v69) = -1;
        break;
      }
    }
    int v70 = v108;
    uint64_t v71 = (_DWORD *)(v107 + 304 * v108);
    *uint64_t v71 = 0;
    v71[1] = v69;
    MEMORY[0x1AD0E3190](v71 + 2, __str);
    memcpy((void *)(v107 + 304 * v70 + 32), v119, 0x10CuLL);
    ++v108;
    DumpDetail((uint64_t)v106);
  }
LABEL_172:
  uint64_t v82 = v105;
  uint64_t v105 = 0;
  if (v82) {
    std::default_delete<DetailEntry []>::operator()[abi:ne180100]<DetailEntry>((uint64_t)&v105, v82);
  }
  return v19;
}

void sub_1A88A9DA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v34 = a33;
  a33 = 0;
  if (v34) {
    std::default_delete<DetailEntry []>::operator()[abi:ne180100]<DetailEntry>((uint64_t)&a33, v34);
  }
  _Unwind_Resume(exception_object);
}

BOOL NoHintsCloseEnoughCompatible(unsigned int a1)
{
  if (a1 <= 0x4A && a1 - 10 < 0x36 && ((0x20000000007803uLL >> (a1 - 10)) & 1) != 0) {
    return 1;
  }
  return a1 == 16 || (kMapEncToBaseEncoding[a1] - 13) < 2;
}

uint64_t CompactEncDet::DetectEncoding(int8x8_t *__src, int a2, char *a3, char *a4, char *a5, unsigned int a6, unsigned int a7, unsigned int a8, char a9, int *a10, unsigned __int8 *a11)
{
  unsigned int v15 = a3;
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  if (FLAGS_ced_echo_input)
  {
    unsigned int v18 = a8;
    int v20 = a4;
    int v21 = a5;
    std::string::basic_string[abi:ne180100](__dst, __src, a2);
    if (v55 >= 0) {
      int v22 = __dst;
    }
    else {
      int v22 = *(int **)__dst;
    }
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "CompactEncDet::DetectEncoding()\n%s\n\n", (const char *)v22);
    if (v55 < 0) {
      operator delete(*(void **)__dst);
    }
    a5 = v21;
    a4 = v20;
    unsigned int v15 = a3;
    a8 = v18;
  }
  if (FLAGS_counts)
  {
    rescore_used = 0;
    rescan_used = 0;
    robust_used = 0;
    looking_used = 0;
    doing_used = 0;
    encdet_used = 1;
  }
  if (FLAGS_dirtsimple)
  {
    for (uint64_t i = 0; i != 67; ++i)
      __dst[i] = i;
    RobustScan((const char *)__src, a2, 67, __dst, v53);
    uint64_t v24 = 0;
    int v25 = -1;
    uint64_t v26 = 23;
    do
    {
      if (v25 < v53[v24])
      {
        uint64_t v26 = kMapToEncoding[__dst[v24]];
        int v25 = v53[v24];
      }
      ++v24;
    }
    while (v24 != 67);
    if (a2 >= 0x40000) {
      int v27 = 0x40000;
    }
    else {
      int v27 = a2;
    }
    *a10 = v27;
    *a11 = 1;
    if (FLAGS_counts)
    {
      printf("CEDcounts ");
      while (encdet_used--)
        printf("encdet ");
      while (rescore_used--)
        printf("rescore ");
      while (rescan_used--)
        printf("rescan ");
      while (robust_used--)
        printf("robust ");
      while (looking_used--)
        printf("looking ");
      while (doing_used--)
        printf("doing ");
LABEL_47:
      putchar(10);
    }
  }
  else
  {
    uint64_t v26 = InternalDetectEncoding(0, __src, a2, v15, a4, a5, a6, a7, a8, a9, a10, a11, __dst);
    if (FLAGS_counts)
    {
      printf("CEDcounts ");
      while (encdet_used--)
        printf("encdet ");
      while (rescore_used--)
        printf("rescore ");
      while (rescan_used--)
        printf("rescan ");
      while (robust_used--)
        printf("robust ");
      while (looking_used--)
        printf("looking ");
      while (doing_used--)
        printf("doing ");
      goto LABEL_47;
    }
  }
  return v26;
}

uint64_t CompactEncDet::TopEncodingOfLangHint(CompactEncDet *this, const char *a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, (char *)this);
  MakeChar8((uint64_t *)__p, v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  int v2 = v11;
  uint64_t v3 = (void *)v10[0];
  if (v11 >= 0) {
    int v4 = v10;
  }
  else {
    int v4 = (unint64_t *)v10[0];
  }
  int v5 = HintBinaryLookup8((uint64_t)kLangHintProbs, 151, v4);
  if (v5 < 0)
  {
    uint64_t v6 = 23;
    if ((v2 & 0x80000000) == 0) {
      return v6;
    }
    goto LABEL_8;
  }
  uint64_t v6 = kMapToEncoding[(int)TopCompressedProb((const char *)&kLangHintProbs[20 * v5 + 8], 12)];
  if (v2 < 0) {
LABEL_8:
  }
    operator delete(v3);
  return v6;
}

void sub_1A88AA3C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CompactEncDet::TopEncodingOfCharsetHint(CompactEncDet *this, const char *a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, (char *)this);
  MakeChar44((uint64_t *)__p, v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  int v2 = v11;
  uint64_t v3 = (void *)v10[0];
  if (v11 >= 0) {
    int v4 = v10;
  }
  else {
    int v4 = (unint64_t *)v10[0];
  }
  int v5 = HintBinaryLookup8((uint64_t)kCharsetHintProbs, 438, v4);
  if (v5 < 0)
  {
    uint64_t v6 = 23;
    if ((v2 & 0x80000000) == 0) {
      return v6;
    }
    goto LABEL_8;
  }
  uint64_t v6 = kMapToEncoding[(int)TopCompressedProb((const char *)&kCharsetHintProbs[20 * v5 + 8], 12)];
  if (v2 < 0) {
LABEL_8:
  }
    operator delete(v3);
  return v6;
}

void sub_1A88AA4A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

const char *CompactEncDet::Version(CompactEncDet *this)
{
  return "2.2";
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E5D3ABC8, MEMORY[0x1E4FBA1C8]);
}

void sub_1A88AA5DC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void std::default_delete<DetailEntry []>::operator()[abi:ne180100]<DetailEntry>(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a2 - 8);
    if (v3)
    {
      uint64_t v4 = 304 * v3;
      do
      {
        if (*(char *)(a2 + v4 - 273) < 0) {
          operator delete(*(void **)(a2 + v4 - 296));
        }
        v4 -= 304;
      }
      while (v4);
    }
    JUMPOUT(0x1AD0E31B0);
  }
}

void *std::string::basic_string[abi:ne180100](void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *long long __dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    uint64_t v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

const char *MyEncodingName(unsigned int a1)
{
  if ((a1 & 0x80000000) == 0)
  {
    if (!a1) {
      return "Latin1";
    }
    if (a1 <= 0x4A) {
      return EncodingName(a1);
    }
    if (a1 <= 0x4E)
    {
      unsigned int v2 = a1 - 75;
      uint64_t v3 = kFakeEncodingName2;
      return v3[v2];
    }
    unsigned int v2 = a1 - 100;
    if (a1 - 100 <= 0x13)
    {
      uint64_t v3 = kFakeEncodingName;
      return v3[v2];
    }
  }
  return "~";
}

void *MakeChar44@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = std::string::basic_string[abi:ne180100]<0>(a2, "________");
  BOOL v4 = *((char *)a1 + 23) < 0;
  uint64_t v5 = *((unsigned __int8 *)a1 + 23);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = a1[1];
  }
  if (v5)
  {
    uint64_t v6 = 0;
    int v7 = 0;
    int v8 = 0;
    unsigned int v9 = 1;
    do
    {
      if (v4) {
        int v10 = (uint64_t *)*a1;
      }
      else {
        int v10 = a1;
      }
      uint64_t v11 = *((unsigned __int8 *)v10 + v6);
      if (kIsAlpha[v11])
      {
        if (v8 <= 3)
        {
          char v12 = kCharsetToLowerTbl[v11];
          if (*((char *)result + 23) >= 0) {
            unsigned int v13 = result;
          }
          else {
            unsigned int v13 = (void *)*result;
          }
          *((unsigned char *)v13 + v8++) = v12;
        }
      }
      else if (kIsDigit[v11])
      {
        if (v7 > 3)
        {
          if (*((char *)result + 23) >= 0) {
            unsigned int v15 = result;
          }
          else {
            unsigned int v15 = (void *)*result;
          }
          *((unsigned char *)v15 + 4) = *((unsigned char *)v15 + 5);
          if (*((char *)result + 23) >= 0) {
            int v16 = result;
          }
          else {
            int v16 = (void *)*result;
          }
          *((unsigned char *)v16 + 5) = *((unsigned char *)v16 + 6);
          if (*((char *)result + 23) >= 0) {
            signed int v17 = result;
          }
          else {
            signed int v17 = (void *)*result;
          }
          *((unsigned char *)v17 + 6) = *((unsigned char *)v17 + 7);
          uint64_t v14 = 7;
        }
        else
        {
          uint64_t v14 = v7 + 4;
        }
        char v18 = kCharsetToLowerTbl[v11];
        if (*((char *)result + 23) >= 0) {
          uint64_t v19 = result;
        }
        else {
          uint64_t v19 = (void *)*result;
        }
        *((unsigned char *)v19 + v14) = v18;
        ++v7;
      }
      uint64_t v6 = v9;
      BOOL v4 = *((char *)a1 + 23) < 0;
      unint64_t v20 = *((unsigned __int8 *)a1 + 23);
      if ((v20 & 0x80u) != 0) {
        unint64_t v20 = a1[1];
      }
    }
    while (v20 > v9++);
  }
  return result;
}

void *MakeChar4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = std::string::basic_string[abi:ne180100]<0>(a2, "____");
  int v4 = *((char *)a1 + 23);
  unint64_t v5 = *((unsigned __int8 *)a1 + 23);
  BOOL v6 = v4 < 0;
  unint64_t v7 = a1[1];
  if (v4 >= 0) {
    uint64_t v8 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    uint64_t v8 = a1[1];
  }
  if (v8)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    unsigned int v11 = 1;
    do
    {
      if (v6) {
        char v12 = (uint64_t *)*a1;
      }
      else {
        char v12 = a1;
      }
      uint64_t v13 = *((unsigned __int8 *)v12 + v9);
      if (kIsDigit[v13] | kIsAlpha[v13]) {
        BOOL v14 = v10 <= 3;
      }
      else {
        BOOL v14 = 0;
      }
      if (v14)
      {
        if (*((char *)result + 23) >= 0) {
          unsigned int v15 = result;
        }
        else {
          unsigned int v15 = (void *)*result;
        }
        *((unsigned char *)v15 + v10++) = kCharsetToLowerTbl[v13];
        unint64_t v5 = *((unsigned __int8 *)a1 + 23);
        unint64_t v7 = a1[1];
      }
      uint64_t v9 = v11;
      BOOL v6 = (v5 & 0x80u) != 0;
      if ((v5 & 0x80u) == 0) {
        unint64_t v16 = v5;
      }
      else {
        unint64_t v16 = v7;
      }
      BOOL v14 = v16 > v11++;
    }
    while (v14);
  }
  return result;
}

void *MakeChar8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = std::string::basic_string[abi:ne180100]<0>(a2, "________");
  int v4 = *((char *)a1 + 23);
  unint64_t v5 = *((unsigned __int8 *)a1 + 23);
  BOOL v6 = v4 < 0;
  unint64_t v7 = a1[1];
  if (v4 >= 0) {
    uint64_t v8 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    uint64_t v8 = a1[1];
  }
  if (v8)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    unsigned int v11 = 1;
    do
    {
      if (v6) {
        char v12 = (uint64_t *)*a1;
      }
      else {
        char v12 = a1;
      }
      uint64_t v13 = *((unsigned __int8 *)v12 + v9);
      if (kIsDigit[v13] | kIsAlpha[v13]) {
        BOOL v14 = v10 <= 7;
      }
      else {
        BOOL v14 = 0;
      }
      if (v14)
      {
        if (*((char *)result + 23) >= 0) {
          unsigned int v15 = result;
        }
        else {
          unsigned int v15 = (void *)*result;
        }
        *((unsigned char *)v15 + v10++) = kCharsetToLowerTbl[v13];
        unint64_t v5 = *((unsigned __int8 *)a1 + 23);
        unint64_t v7 = a1[1];
      }
      uint64_t v9 = v11;
      BOOL v6 = (v5 & 0x80u) != 0;
      if ((v5 & 0x80u) == 0) {
        unint64_t v16 = v5;
      }
      else {
        unint64_t v16 = v7;
      }
      BOOL v14 = v16 > v11++;
    }
    while (v14);
  }
  return result;
}

uint64_t default_encoding(void)
{
  return 0;
}

BOOL IsValidEncoding(unsigned int a1)
{
  return a1 < 0x4B;
}

unint64_t IsEncEncCompatible(unsigned int a1, unsigned int a2)
{
  uint64_t v2 = 0;
  if (a1 <= 0x4A && a2 <= 0x4A)
  {
    uint64_t v2 = 1;
    if (a2 != a1 && a2 != 23)
    {
      if (a1 == 23)
      {
        return 0;
      }
      else if (a1 == 24)
      {
        if (a2 >= 0x36) {
          return 0;
        }
        else {
          return (0x20EEFFFFFDEFFFuLL >> a2) & 1;
        }
      }
      else if ((a1 || a2 != 27) {
             && (a1 != 7 || a2 != 38)
      }
             && (a1 != 38 || a2 != 7)
             && (a1 != 8 || a2 != 31)
             && (a1 != 33 || a2 != 34)
             && (a1 != 11 || a2 != 21)
             && (a1 != 13 || a2 != 20))
      {
        if (a1 == 14 && a2 - 45 < 2) {
          return 1;
        }
        if (a1 == 15 && a2 == 18) {
          return 1;
        }
        if (a1 == 15 && a2 == 19) {
          return 1;
        }
        BOOL v3 = a2 == 15 || a2 == 19;
        BOOL v4 = v3;
        return a1 == 18 && v4 || (a2 == 15 || a2 == 18) && a1 == 19;
      }
    }
  }
  return v2;
}

uint64_t IsSupersetOfAscii7Bit(unsigned int a1)
{
  return (a1 < 0x36) & (0x20EEFFFFFDEFFFuLL >> a1);
}

uint64_t Is8BitEncoding(unsigned int a1)
{
  return (a1 < 0x2C) & (0xE3BDB0003FFuLL >> a1);
}

uint64_t IsCJKEncoding(unsigned int a1)
{
  return (a1 < 0x3F) & (0x4001F000003DFC00uLL >> a1);
}

uint64_t IsHebrewEncoding(unsigned int a1)
{
  return (a1 < 0x27) & (0x7000000080uLL >> a1);
}

uint64_t IsRightToLeftEncoding(unsigned int a1)
{
  return (a1 < 0x27) & (0x78000000A0uLL >> a1);
}

uint64_t IsLogicalRightToLeftEncoding(unsigned int a1)
{
  return (a1 < 0x27) & (0x3800000020uLL >> a1);
}

BOOL IsVisualRightToLeftEncoding(int a1)
{
  return a1 == 7 || a1 == 38;
}

uint64_t IsIso2022Encoding(int a1)
{
  unsigned int v1 = ((a1 - 12) < 0x3F) & (0x6000000000000001uLL >> (a1 - 12));
  if (a1 == 44) {
    unsigned int v1 = 1;
  }
  if (a1 == 48) {
    return 1;
  }
  else {
    return v1;
  }
}

uint64_t IsIso2022JpOrVariant(int a1)
{
  return ((a1 - 12) < 0x3F) & (0x6000000000000001uLL >> (a1 - 12));
}

uint64_t IsShiftJisOrVariant(int a1)
{
  return ((a1 - 11) < 0x3E) & (0x3800000000000401uLL >> (a1 - 11));
}

BOOL IsJapaneseCellPhoneCarrierSpecificEncoding(int a1)
{
  return (a1 - 70) < 5;
}

const char *EncodingName(unsigned int a1)
{
  if (a1 <= 0x4A) {
    return kEncodingInfoTable[3 * a1];
  }
  else {
    return "invalid_encoding";
  }
}

const char *invalid_encoding_name(void)
{
  return "invalid_encoding";
}

const char *MimeEncodingName(unsigned int a1)
{
  if (a1 <= 0x4A) {
    return kEncodingInfoTable[3 * a1 + 1];
  }
  else {
    return "";
  }
}

BOOL EncodingFromName(BOOL result, _DWORD *a2)
{
  *a2 = 23;
  if (result)
  {
    BOOL v3 = (const char *)result;
    if (!strcasecmp((const char *)result, "ASCII"))
    {
      int v7 = 0;
      uint64_t result = 1;
LABEL_8:
      *a2 = v7;
    }
    else
    {
      unint64_t v4 = -1;
      unint64_t v5 = (const char **)off_1E5D4E720;
      while (v4 != 73)
      {
        BOOL v6 = *v5;
        v5 += 3;
        ++v4;
        if (!strcasecmp(v3, v6))
        {
          uint64_t result = v4 < 0x4A;
          int v7 = v4 + 1;
          goto LABEL_8;
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t EncodingNameAliasToEncoding(char *a1)
{
  BOOL v3 = a1;
  if (!a1) {
    return 23;
  }
  {
    GetEncodingMap(void)::encoding_map = 0u;
    unk_1E975D998 = 0u;
    dword_1E975D9A8 = 1065353216;
    __cxa_atexit((void (*)(void *))std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::~unordered_map[abi:ne180100], &GetEncodingMap(void)::encoding_map, &dword_1A7EFF000);
  }
  if (GetEncodingMap(void)::onceToken != -1) {
    dispatch_once(&GetEncodingMap(void)::onceToken, &__block_literal_global_63);
  }
  unsigned int v1 = std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::find<char const*>(&GetEncodingMap(void)::encoding_map, &v3);
  if (v1) {
    return *((unsigned int *)v1 + 6);
  }
  else {
    return 23;
  }
}

const char *default_encoding_name(void)
{
  return "ASCII";
}

uint64_t PreferredWebOutputEncoding(unsigned int a1)
{
  if (a1 > 0x4A) {
    return 22;
  }
  else {
    return LODWORD(kEncodingInfoTable[3 * a1 + 2]);
  }
}

uint64_t *___ZL14GetEncodingMapv_block_invoke()
{
  uint64_t v0 = 0;
  unsigned int v1 = kEncodingInfoTable;
  do
  {
    uint64_t v2 = *v1;
    v1 += 3;
    BOOL v6 = v2;
    *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = v0++;
  }
  while (v0 != 75);
  uint64_t v3 = 0;
  unint64_t v4 = &off_1E5D4E710;
  do
  {
    BOOL v6 = *v4;
    if (!std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::find<char const*>(&GetEncodingMap(void)::encoding_map, &v6))*(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = v3; {
    ++v3;
    }
    v4 += 3;
  }
  while (v3 != 75);
  BOOL v6 = "5601";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "646";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 24;
  BOOL v6 = "852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  BOOL v6 = "866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  BOOL v6 = "8859-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "ansi-1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  BOOL v6 = "ansi_x3.4-1968";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 24;
  BOOL v6 = "arabic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "ascii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "ascii-7-bit";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 24;
  BOOL v6 = "asmo-708";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "bhaskar";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 55;
  BOOL v6 = "big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  BOOL v6 = "big5-cp950";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 20;
  BOOL v6 = "big5-hkscs";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 47;
  BOOL v6 = "chinese";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "cns";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  BOOL v6 = "cns11643";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  BOOL v6 = "cp1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  BOOL v6 = "cp1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  BOOL v6 = "cp1252";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 27;
  BOOL v6 = "cp1253";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 41;
  BOOL v6 = "cp1254";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 31;
  BOOL v6 = "cp1255";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 36;
  BOOL v6 = "cp1256";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 35;
  BOOL v6 = "cp1257";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 32;
  BOOL v6 = "cp819";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "cp852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  BOOL v6 = "cp866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  BOOL v6 = "cp-866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  BOOL v6 = "cp874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  BOOL v6 = "cp932";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  BOOL v6 = "cp950";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 20;
  BOOL v6 = "csbig5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  BOOL v6 = "cseucjpkdfmtjapanese";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 10;
  BOOL v6 = "cseuckr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "csgb2312";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "csibm852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  BOOL v6 = "csibm866";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 42;
  BOOL v6 = "csiso2022jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  BOOL v6 = "csiso2022kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 44;
  BOOL v6 = "csiso58gb231280";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "csiso88598i";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 37;
  BOOL v6 = "csisolatin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "csisolatin2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  BOOL v6 = "csisolatin3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  BOOL v6 = "csisolatin4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  BOOL v6 = "csisolatin5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  BOOL v6 = "csisolatin6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  BOOL v6 = "csisolatinarabic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "csisolatincyrillic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  BOOL v6 = "csisolatingreek";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "csisolatinhebrew";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  BOOL v6 = "csksc56011987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "csmacintosh";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  BOOL v6 = "csn-369103";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 40;
  BOOL v6 = "csshiftjis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  BOOL v6 = "csunicode";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "csunicode11";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "csunicode11utf7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  BOOL v6 = "csunicodeascii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "csunicodelatin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "cyrillic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  BOOL v6 = "ecma-114";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "ecma-118";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "elot_928";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "euc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 18;
  BOOL v6 = "euc-cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 15;
  BOOL v6 = "euc-dec";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 18;
  BOOL v6 = "euc-jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 10;
  BOOL v6 = "euc-kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "eucgb2312_cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "gb";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "gb18030";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 46;
  BOOL v6 = "gb2132";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "gb2312";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "gb_2312-80";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "gbk";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 45;
  BOOL v6 = "greek";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "greek8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "hebrew";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  BOOL v6 = "htchanakya";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 56;
  BOOL v6 = "hz-gb-2312";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 62;
  BOOL v6 = "ibm819";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "ibm852";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 39;
  BOOL v6 = "ibm874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  BOOL v6 = "iso-10646";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "iso-10646-j-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "iso-10646-ucs-2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 17;
  BOOL v6 = "iso-10646-ucs-4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 59;
  BOOL v6 = "iso-10646-ucs-basic";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "iso-10646-unicode-latin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "iso-2022-cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 48;
  BOOL v6 = "iso-2022-jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  BOOL v6 = "iso-2022-kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 44;
  BOOL v6 = "iso-8559-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso-874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  BOOL v6 = "iso-8858-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso-8859-0";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 30;
  BOOL v6 = "iso-8859-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso-8859-10";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  BOOL v6 = "iso-8859-11";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 33;
  BOOL v6 = "iso-8859-13";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 43;
  BOOL v6 = "iso-8859-15";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 30;
  BOOL v6 = "iso-8859-2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  BOOL v6 = "iso-8859-3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  BOOL v6 = "iso-8859-4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  BOOL v6 = "iso-8859-5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  BOOL v6 = "iso-8859-6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "iso-8859-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "iso-8859-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  BOOL v6 = "iso-8859-8-i";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 37;
  BOOL v6 = "iso-8859-9";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  BOOL v6 = "iso-9959-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso-ir-100";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso-ir-101";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  BOOL v6 = "iso-ir-109";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  BOOL v6 = "iso-ir-110";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  BOOL v6 = "iso-ir-126";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "iso-ir-127";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "iso-ir-138";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  BOOL v6 = "iso-ir-144";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  BOOL v6 = "iso-ir-148";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  BOOL v6 = "iso-ir-149";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "iso-ir-157";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  BOOL v6 = "iso-ir-58";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "iso-latin-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso_2022-cn";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 48;
  BOOL v6 = "iso_2022-kr";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 44;
  BOOL v6 = "iso_8859-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso_8859-10:1992";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  BOOL v6 = "iso_8859-11";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 33;
  BOOL v6 = "iso_8859-13";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 43;
  BOOL v6 = "iso_8859-15";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 30;
  BOOL v6 = "iso_8859-1:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "iso_8859-2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  BOOL v6 = "iso_8859-2:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  BOOL v6 = "iso_8859-3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  BOOL v6 = "iso_8859-3:1988";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  BOOL v6 = "iso_8859-4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  BOOL v6 = "iso_8859-4:1988";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  BOOL v6 = "iso_8859-5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  BOOL v6 = "iso_8859-5:1988";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 4;
  BOOL v6 = "iso_8859-6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "iso_8859-6:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 5;
  BOOL v6 = "iso_8859-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "iso_8859-7:1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "iso_8859-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  BOOL v6 = "iso_8859-8:1988:";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 7;
  BOOL v6 = "iso_8859-9";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  BOOL v6 = "iso_8859-9:1989";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  BOOL v6 = "jagran";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 52;
  BOOL v6 = "jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  BOOL v6 = "koi8-cs";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 40;
  BOOL v6 = "koi8-r";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 25;
  BOOL v6 = "koi8-ru";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 28;
  BOOL v6 = "koi8-u";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 28;
  BOOL v6 = "koi8r";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 25;
  BOOL v6 = "koi8u";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 28;
  BOOL v6 = "korean";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "ks-c-5601";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "ks-c-5601-1987";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "ks_c_5601-1989";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "ksc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 16;
  BOOL v6 = "l1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "l2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  BOOL v6 = "l3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  BOOL v6 = "l4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  BOOL v6 = "l5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  BOOL v6 = "l6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  BOOL v6 = "latin-1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "latin1";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "latin2";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 1;
  BOOL v6 = "latin3";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 2;
  BOOL v6 = "latin4";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 3;
  BOOL v6 = "latin5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 8;
  BOOL v6 = "latin6";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 9;
  BOOL v6 = "mac";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  BOOL v6 = "macintosh";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  BOOL v6 = "macintosh-roman";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  BOOL v6 = "ms932";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  BOOL v6 = "ms_kanji";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  BOOL v6 = "shift-jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  BOOL v6 = "shift_jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  BOOL v6 = "sjis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  BOOL v6 = "sjs";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  BOOL v6 = "sun_eu_greek";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 6;
  BOOL v6 = "tab";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 51;
  BOOL v6 = "tam";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 50;
  BOOL v6 = "tis-620";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 33;
  BOOL v6 = "tscii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 49;
  BOOL v6 = "un";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 23;
  BOOL v6 = "unicode";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 17;
  BOOL v6 = "unicode-1-1-utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  BOOL v6 = "unicode-1-1-utf-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 22;
  BOOL v6 = "unicode-2-0-utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  BOOL v6 = "unknown";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 23;
  BOOL v6 = "us";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "us-ascii";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 0;
  BOOL v6 = "utf-16be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "utf-16le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 58;
  BOOL v6 = "utf-32be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 59;
  BOOL v6 = "utf-32le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 60;
  BOOL v6 = "utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  BOOL v6 = "utf-8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 22;
  BOOL v6 = "utf7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  BOOL v6 = "utf8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 22;
  BOOL v6 = "visual";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 38;
  BOOL v6 = "win-1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  BOOL v6 = "win-1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  BOOL v6 = "window-874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  BOOL v6 = "windows-1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  BOOL v6 = "windows-1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  BOOL v6 = "windows-1252";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 27;
  BOOL v6 = "windows-1253";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 41;
  BOOL v6 = "windows-1254";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 31;
  BOOL v6 = "windows-1255";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 36;
  BOOL v6 = "windows-1256";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 35;
  BOOL v6 = "windows-1257";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 32;
  BOOL v6 = "windows-31j";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 21;
  BOOL v6 = "windows-874";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 34;
  BOOL v6 = "windows-936";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 45;
  BOOL v6 = "x-big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  BOOL v6 = "x-binaryenc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 61;
  BOOL v6 = "x-cp1250";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 29;
  BOOL v6 = "x-cp1251";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 26;
  BOOL v6 = "x-cp1252";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 27;
  BOOL v6 = "x-cp1253";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 41;
  BOOL v6 = "x-cp1254";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 31;
  BOOL v6 = "x-cp1255";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 36;
  BOOL v6 = "x-cp1256";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 35;
  BOOL v6 = "x-cp1257";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 32;
  BOOL v6 = "x-euc-jp";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 10;
  BOOL v6 = "x-euc-tw";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  BOOL v6 = "x-gbk";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 45;
  BOOL v6 = "x-iso-10646-ucs-2-be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 57;
  BOOL v6 = "x-iso-10646-ucs-2-le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 58;
  BOOL v6 = "x-iso-10646-ucs-4-be";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 59;
  BOOL v6 = "x-iso-10646-ucs-4-le";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 60;
  BOOL v6 = "x-jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 12;
  BOOL v6 = "x-mac-roman";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 53;
  BOOL v6 = "x-shift_jis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  BOOL v6 = "x-sjis";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 11;
  BOOL v6 = "x-unicode-2-0-utf-7";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 54;
  BOOL v6 = "x-utf8utf8";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 63;
  BOOL v6 = "x-x-big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  BOOL v6 = "zh_cn.euc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 14;
  BOOL v6 = "zh_tw-big5";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 13;
  BOOL v6 = "zh_tw-euc";
  *(_DWORD *)std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](&GetEncodingMap(void)::encoding_map, &v6) = 19;
  BOOL v6 = "";
  return std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__erase_unique<char const*>(&GetEncodingMap(void)::encoding_map, &v6);
}

uint64_t **std::unordered_map<char const*,Encoding,CStringAlnumCaseHash,CStringAlnumCaseEqual,std::allocator<std::pair<char const* const,Encoding>>>::operator[](void *a1, char **a2)
{
  inserted = std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::find<char const*>(a1, a2);
  if (!inserted)
  {
    unint64_t v5 = operator new(0x20uLL);
    uint64_t v5[2] = *a2;
    *((_DWORD *)v5 + 6) = 0;
    inserted = std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__node_insert_unique(a1, (uint64_t)v5);
  }
  return inserted + 3;
}

void sub_1A88ACE38(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__node_insert_unique(void *a1, uint64_t a2)
{
  uint64_t v2 = (void *)a2;
  unint64_t v4 = (char **)(a2 + 16);
  unint64_t v5 = CStringAlnumCaseHash::operator()((uint64_t)(a1 + 3), *(unsigned char **)(a2 + 16));
  *(v4 - 1) = (char *)v5;
  BOOL v6 = std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__node_insert_unique_prepare[abi:ne180100]((uint64_t)a1, v5, v4);
  if (v6) {
    return v6;
  }
  std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__node_insert_unique_perform[abi:ne180100](a1, v2);
  return (uint64_t **)v2;
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::find<char const*>(void *a1, char **a2)
{
  unint64_t v4 = CStringAlnumCaseHash::operator()((uint64_t)(a1 + 3), *a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  int v10 = *(uint64_t ****)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  unsigned int v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = (unint64_t)v11[1];
      if (v13 == v6)
      {
        if (CStringAlnumCaseEqual::operator()(v12, (char *)v11[2], *a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      unsigned int v11 = (uint64_t **)*v11;
    }
    while (v11);
  }
  return v11;
}

{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t ***v10;
  uint64_t **v11;
  uint64_t v12;
  unint64_t v13;

  unint64_t v4 = CStringAlnumCaseHash::operator()((uint64_t)(a1 + 3), *a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  int v10 = *(uint64_t ****)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  unsigned int v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = (unint64_t)v11[1];
      if (v6 == v13)
      {
        if (CStringAlnumCaseEqual::operator()(v12, (char *)v11[2], *a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      unsigned int v11 = (uint64_t **)*v11;
    }
    while (v11);
  }
  return v11;
}

uint64_t CStringAlnumCaseHash::operator()(uint64_t a1, unsigned char *a2)
{
  char v2 = *a2;
  if (*a2)
  {
    uint64_t v3 = 0;
    unint64_t v4 = a2 + 1;
    uint64_t v5 = MEMORY[0x1E4F14390];
    while ((v2 & 0x80) == 0)
    {
      if ((*(_DWORD *)(v5 + 4 * v2 + 60) & 0x500) != 0) {
        goto LABEL_5;
      }
LABEL_6:
      int v6 = *v4++;
      char v2 = v6;
      if (!v6) {
        return v3;
      }
    }
    if (!__maskrune(v2, 0x500uLL)) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v3 = 5 * v3 + __tolower((char)*(v4 - 1));
    goto LABEL_6;
  }
  return 0;
}

BOOL CStringAlnumCaseEqual::operator()(uint64_t a1, char *a2, char *a3)
{
  uint64_t v5 = MEMORY[0x1E4F14390];
  do
  {
    while (1)
    {
      unsigned int v6 = *a2++;
      if ((v6 & 0x80000000) != 0)
      {
        if (__maskrune(v6, 0x500uLL)) {
          goto LABEL_7;
        }
        goto LABEL_6;
      }
      if ((*(_DWORD *)(v5 + 4 * v6 + 60) & 0x500) != 0) {
        break;
      }
LABEL_6:
      if (!*(a2 - 1)) {
        goto LABEL_7;
      }
    }
    do
    {
LABEL_7:
      unsigned int v7 = *a3++;
      if ((v7 & 0x80000000) != 0)
      {
        if (__maskrune(v7, 0x500uLL)) {
          break;
        }
      }
      else if ((*(_DWORD *)(v5 + 4 * v7 + 60) & 0x500) != 0)
      {
        break;
      }
    }
    while (*(a3 - 1));
    __darwin_ct_rune_t v8 = __tolower(*(a2 - 1));
    __darwin_ct_rune_t v9 = __tolower(*(a3 - 1));
  }
  while (v8 == v9 && *(a2 - 1));
  return v8 == v9;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  unsigned int v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__node_insert_unique_prepare[abi:ne180100](uint64_t a1, unint64_t a2, char **a3)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint8x8_t v7 = (uint8x8_t)vcnt_s8((int8x8_t)v4);
    v7.i16[0] = vaddlv_u8(v7);
    unint64_t v8 = v7.u32[0];
    if (v7.u32[0] > 1uLL) {
      uint64_t v9 = v4 <= a2 ? a2 % v4 : a2;
    }
    else {
      uint64_t v9 = (v4 - 1) & a2;
    }
    int v10 = *(uint64_t ****)(*(void *)a1 + 8 * v9);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (uint64_t **)*i)
      {
        unint64_t v12 = (unint64_t)i[1];
        if (v12 == a2)
        {
          if (CStringAlnumCaseEqual::operator()(a1 + 32, (char *)i[2], *a3)) {
            return i;
          }
        }
        else
        {
          if (v8 > 1)
          {
            if (v12 >= v4) {
              v12 %= v4;
            }
          }
          else
          {
            v12 &= v4 - 1;
          }
          if (v12 != v9) {
            break;
          }
        }
      }
    }
  }
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v4 || (float)(v14 * (float)v4) < v13)
  {
    BOOL v15 = 1;
    if (v4 >= 3) {
      BOOL v15 = (v4 & (v4 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v4);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__rehash<true>(a1, v18);
  }
  return 0;
}

void *std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__node_insert_unique_perform[abi:ne180100](void *result, void *a2)
{
  int8x8_t v2 = (int8x8_t)result[1];
  unint64_t v3 = a2[1];
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    if (v3 >= *(void *)&v2) {
      v3 %= *(void *)&v2;
    }
  }
  else
  {
    v3 &= *(void *)&v2 - 1;
  }
  uint64_t v5 = *(void **)(*result + 8 * v3);
  if (v5)
  {
    *a2 = *v5;
LABEL_13:
    *uint64_t v5 = a2;
    goto LABEL_14;
  }
  *a2 = result[2];
  result[2] = a2;
  *(void *)(*result + 8 * v3) = result + 2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v4.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v2) {
        v6 %= *(void *)&v2;
      }
    }
    else
    {
      v6 &= *(void *)&v2 - 1;
    }
    uint64_t v5 = (void *)(*result + 8 * v6);
    goto LABEL_13;
  }
LABEL_14:
  ++result[3];
  return result;
}

void std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__do_rehash<true>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      unsigned int v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            void *v7 = *v11;
            *unsigned int v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            unsigned int v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          unsigned int v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    int v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t *std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::__erase_unique<char const*>(void *a1, char **a2)
{
  uint64_t result = (uint64_t *)std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::find<char const*>(a1, a2);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::erase(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::remove(a1, a2, (uint64_t)&__p);
  unint64_t v3 = __p;
  std::string __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<std::__hash_value_type<char const*,Encoding>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseHash,CStringAlnumCaseEqual,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,Encoding>,CStringAlnumCaseEqual,CStringAlnumCaseHash,true>,std::allocator<std::__hash_value_type<char const*,Encoding>>>::remove@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  uint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    uint64_t v7 = v6;
    uint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  void *v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t default_language(void)
{
  return 0;
}

const char *default_language_name(void)
{
  return "ENGLISH";
}

const char *invalid_language_name(void)
{
  return "invalid_language";
}

const char *LanguageName(unsigned int a1)
{
  if (a1 > 0xA0) {
    return "invalid_language";
  }
  else {
    return kLanguageInfoTable[4 * a1];
  }
}

const char *invalid_language_code(void)
{
  return " invalid_language_code";
}

const char *LanguageCode(unsigned int a1)
{
  uint64_t result = " invalid_language_code";
  if (a1 <= 0xA0)
  {
    int8x8_t v3 = &kLanguageInfoTable[4 * a1];
    uint64_t result = v3[1];
    if (!result)
    {
      uint64_t result = v3[2];
      if (!result)
      {
        unint64_t v4 = kLanguageInfoTable[4 * a1 + 3];
        if (v4) {
          return v4;
        }
        else {
          return " invalid_language_code";
        }
      }
    }
  }
  return result;
}

const char *default_language_code(void)
{
  return "en";
}

const char *LanguageCodeISO639_1(unsigned int a1)
{
  uint64_t result = " invalid_language_code";
  if (a1 <= 0xA0)
  {
    int8x8_t v3 = kLanguageInfoTable[4 * a1 + 1];
    if (v3) {
      return v3;
    }
  }
  return result;
}

const char *LanguageCodeISO639_2(unsigned int a1)
{
  uint64_t result = " invalid_language_code";
  if (a1 <= 0xA0)
  {
    int8x8_t v3 = kLanguageInfoTable[4 * a1 + 2];
    if (v3) {
      return v3;
    }
  }
  return result;
}

const char *LanguageCodeWithDialects(unsigned int a1)
{
  if (a1 == 16) {
    return "zh-CN";
  }
  uint64_t result = " invalid_language_code";
  if (a1 <= 0xA0)
  {
    int8x8_t v3 = &kLanguageInfoTable[4 * a1];
    uint64_t result = v3[1];
    if (!result)
    {
      uint64_t result = v3[2];
      if (!result)
      {
        unint64_t v4 = kLanguageInfoTable[4 * a1 + 3];
        if (v4) {
          return v4;
        }
        else {
          return " invalid_language_code";
        }
      }
    }
  }
  return result;
}

uint64_t LanguageFromCode(uint64_t result, _DWORD *a2)
{
  *a2 = 26;
  if (result)
  {
    int8x8_t v3 = (const char *)result;
    uint64_t v4 = 0;
    uint8x8_t v5 = (const char **)&qword_1E5D4EE48;
    while (1)
    {
      uint64_t v6 = *(v5 - 2);
      if (v6)
      {
        if (!strcasecmp(v3, v6)) {
          break;
        }
      }
      uint64_t v7 = *(v5 - 1);
      if (v7)
      {
        if (!strcasecmp(v3, v7)) {
          break;
        }
      }
      if (*v5 && !strcasecmp(v3, *v5)) {
        break;
      }
      ++v4;
      v5 += 4;
      if (v4 == 161)
      {
        if (!strcasecmp(v3, "zh-cn") || !strcasecmp(v3, "zh_cn"))
        {
          LODWORD(v4) = 16;
        }
        else if (!strcasecmp(v3, "zh-tw") || !strcasecmp(v3, "zh_tw"))
        {
          LODWORD(v4) = 69;
        }
        else if (!strcasecmp(v3, "sr-me") || !strcasecmp(v3, "sr_me"))
        {
          LODWORD(v4) = 160;
        }
        else if (!strcasecmp(v3, "he"))
        {
          LODWORD(v4) = 6;
        }
        else if (!strcasecmp(v3, "in"))
        {
          LODWORD(v4) = 38;
        }
        else if (!strcasecmp(v3, "ji"))
        {
          LODWORD(v4) = 91;
        }
        else
        {
          if (strcasecmp(v3, "fil")) {
            return 0;
          }
          LODWORD(v4) = 32;
        }
        break;
      }
    }
    *a2 = v4;
    return 1;
  }
  return result;
}

id IMAP2EmailCore_ECEmailAddressesFromHeader(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (listClass_onceToken[0] != -1) {
    dispatch_once(listClass_onceToken, &__block_literal_global_64);
  }
  if (!listClass_cls) {
    IMAP2EmailCore_ECEmailAddressesFromHeader_cold_1();
  }
  uint64_t v2 = [ (id) listClass_cls addressListFromHeaderValue:v1];
  int8x8_t v3 = v2;
  if (v2)
  {
    uint64_t v4 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v2, "count"));
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v13;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v13 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "emailAddressValue", (void)v12);
          if (v10) {
            [v4 addObject:v10];
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v7);
    }
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v4;
}

Class __listClass_block_invoke()
{
  Class result = NSClassFromString(&cfstr_Ecemailaddress.isa);
  listClass_cls = (uint64_t)result;
  return result;
}

void IMAP2EmailCore_ECEmailAddressesFromHeader_cold_1()
{
}

uint64_t BodyStructure.isAttachment.getter()
{
  sub_1A8644F84(v0, (uint64_t)v41);
  int v1 = sub_1A8644FF4((uint64_t)v41);
  nullsub_1(v41);
  if (v1 == 1)
  {
    long long v3 = *v2;
    long long v4 = v2[1];
    long long v5 = v2[3];
    long long v44 = v2[2];
    long long v45 = v5;
    long long v42 = v3;
    long long v43 = v4;
    long long v6 = v2[4];
    long long v7 = v2[5];
    long long v8 = v2[6];
    *(void *)&long long v49 = *((void *)v2 + 14);
    long long v47 = v7;
    long long v48 = v8;
    long long v46 = v6;
    sub_1A8529F8C((uint64_t)&v43 + 8, (uint64_t)v53, &qword_1E9741820);
    sub_1A8529F8C((uint64_t)v53, (uint64_t)&v54, &qword_1E9741820);
    if (*((void *)&v54 + 1))
    {
      long long v62 = v56;
      long long v63 = v57;
      long long v64 = v58;
      long long v65 = v59;
      long long v9 = v54;
      long long v10 = v55;
      unint64_t v11 = (char *)&v61 + 8;
      goto LABEL_6;
    }
LABEL_16:
    char v30 = 0;
    return v30 & 1;
  }
  long long v12 = *v2;
  long long v13 = v2[2];
  long long v43 = v2[1];
  long long v44 = v13;
  long long v42 = v12;
  long long v14 = v2[3];
  long long v15 = v2[4];
  long long v16 = v2[6];
  long long v47 = v2[5];
  long long v48 = v16;
  long long v45 = v14;
  long long v46 = v15;
  long long v17 = v2[7];
  long long v18 = v2[8];
  long long v19 = v2[10];
  long long v51 = v2[9];
  long long v52 = v19;
  long long v49 = v17;
  long long v50 = v18;
  sub_1A8529F8C((uint64_t)&v47 + 8, (uint64_t)v53, &qword_1E97417C8);
  sub_1A8529F8C((uint64_t)v53, (uint64_t)&v54, &qword_1E97417C8);
  if (*((void *)&v54 + 1) == 1) {
    goto LABEL_16;
  }
  long long v62 = v56;
  long long v63 = v57;
  long long v64 = v58;
  *(void *)&long long v65 = v59;
  long long v9 = v54;
  long long v10 = v55;
  unint64_t v11 = (char *)&v61;
LABEL_6:
  long long v60 = v9;
  long long v61 = v10;
  sub_1A8529F8C((uint64_t)v11, (uint64_t)v66, &qword_1E9741808);
  sub_1A8529F8C((uint64_t)v66, (uint64_t)&v67, &qword_1E9741808);
  unint64_t v20 = v68;
  if (v68 < 2) {
    goto LABEL_16;
  }
  uint64_t v21 = v67;
  swift_retain();
  swift_retain();
  swift_retain();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  int v22 = BodyStructure.DispositionKind.attachment.unsafeMutableAddressor();
  if ((*v22 != v21 || v20 != v22[1]) && (sub_1A8A78588() & 1) == 0)
  {
    uint64_t v32 = BodyStructure.DispositionKind.inline.unsafeMutableAddressor();
    if ((*v32 != v21 || v20 != v32[1]) && (sub_1A8A78588() & 1) == 0)
    {
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_36;
    }
    uint64_t v33 = BodyStructure.mediaType.getter();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v36 = Media.TopLevelType.text.unsafeMutableAddressor();
    if (*v36 == v33 && v36[1] == v35)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v39 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    char v30 = 0;
    return v30 & 1;
  }
LABEL_10:
  uint64_t v23 = BodyStructure.mediaType.getter();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = Media.TopLevelType.multipart.unsafeMutableAddressor();
  if ((*v26 != v23 || v26[1] != v25) && (sub_1A8A78588() & 1) == 0)
  {
    uint64_t v37 = Media.TopLevelType.application.unsafeMutableAddressor();
    if (*v37 == v23 && v37[1] == v25)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        char v30 = 1;
        return v30 & 1;
      }
    }
    BodyStructure.mediaType.getter();
    swift_bridgeObjectRelease();
    sub_1A8A76618();
    swift_bridgeObjectRelease();
    if ((sub_1A8A768D8() & 1) == 0)
    {
      char v40 = sub_1A8A768D8();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v30 = v40 ^ 1;
      return v30 & 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_36:
    swift_bridgeObjectRelease();
    char v30 = 0;
    return v30 & 1;
  }
  swift_bridgeObjectRelease();
  BodyStructure.mediaType.getter();
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1A8A76618();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (v27 == 0x756F64656C707061 && v29 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v30 = 1;
  }
  else
  {
    char v30 = sub_1A8A78588();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  return v30 & 1;
}

uint64_t sub_1A88AE354(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1A8529F8C(a5, (uint64_t)v19, &qword_1E9743B78);
  char v9 = 0;
  if (!a4 || (a3 & 1) != 0) {
    return v9 & 1;
  }
  if (!a1)
  {
    uint64_t v11 = v19[0];
    uint64_t v12 = v19[1];
    char v13 = v20;
    unsigned __int8 v16 = v21;
    sub_1A8529F8C(a5, (uint64_t)v22, &qword_1E9743B78);
    if (!*((void *)&v23 + 1)) {
      goto LABEL_16;
    }
    long long v24 = v22[0];
    long long v25 = v22[1];
    long long v26 = v23;
    sub_1A88AF2E4((uint64_t)&v24, (uint64_t)v27);
    uint64_t result = sub_1A88AF2E4((uint64_t)v27, (uint64_t)v28);
    if ((v29 & 0xF0) != 0x50)
    {
      unsigned __int8 v14 = v16;
      if (v16 <= 0xFu) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
    v29 &= 0xFu;
    sub_1A8529F8C((uint64_t)v28, (uint64_t)v30, (uint64_t *)&unk_1E9743F40);
LABEL_25:
    char v9 = 0;
    return v9 & 1;
  }
  if (a1 != 1) {
    goto LABEL_25;
  }
  uint64_t result = sub_1A8529F8C(a5, (uint64_t)&v24, &qword_1E9743B78);
  if (!*((void *)&v26 + 1))
  {
LABEL_16:
    char v9 = 1;
    return v9 & 1;
  }
  uint64_t v12 = *((void *)&v24 + 1);
  uint64_t v11 = v24;
  char v13 = v25;
  unsigned __int8 v14 = v26;
  if (v26 <= 0xFu)
  {
LABEL_7:
    char v9 = (v13 & 0x80) == 0 && v11 == 1;
    return v9 & 1;
  }
LABEL_18:
  int v17 = v14 & 0xF0;
  char v9 = 1;
  if (v17 != 16 || (v13 & 1) != 0) {
    return v9 & 1;
  }
  if (v11) {
    unint64_t v18 = v12 - v11;
  }
  else {
    unint64_t v18 = 0;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    if ((sub_1A88FA9F0((unint64_t)"pkcs7-", 6, 2, 0, v18, v11, v12) & 1) == 0)
    {
      char v9 = sub_1A88FA9F0((unint64_t)"x-pkcs7-", 8, 2, 0, v18, v11, v12) ^ 1;
      return v9 & 1;
    }
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

unint64_t BodyStructure.makeAttachmentFilenames(cache:)(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t v4 = sub_1A88AE57C(MEMORY[0x1E4FBC860]);
  sub_1A88AE7A0((int64_t *)&v4, v2, a1);
  return v4;
}

unint64_t sub_1A88AE57C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97456C0);
  uint64_t v2 = (void *)sub_1A8A781E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t result = sub_1A88F0E38(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    long long v10 = (void *)(v2[7] + 16 * result);
    *long long v10 = v6;
    v10[1] = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A88AE694(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97456B8);
  uint64_t v2 = (void *)sub_1A8A781E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    unint64_t v5 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A85170D0(v5);
    unint64_t result = sub_1A88F0E38(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A88AE7A0(int64_t *a1, uint64_t a2, uint64_t *a3)
{
  sub_1A8644F84(v3, (uint64_t)v43);
  sub_1A8644F84((uint64_t)v43, (uint64_t)v63);
  sub_1A8644F84(v3, (uint64_t)v44);
  if (sub_1A8644FF4((uint64_t)v44) == 1)
  {
    nullsub_1(v44);
    sub_1A8644F84((uint64_t)v63, (uint64_t)v41);
    nullsub_1(v41);
    uint64_t v8 = *(void *)(*(void *)v7 + 16);
    if (v8)
    {
      uint64_t v9 = *(void *)v7 + 32;
      sub_1A8645080(v3, sub_1A86409B8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      Swift::Int v10 = 0;
      do
      {
        sub_1A8644F84(v9, (uint64_t)&v46);
        ++v10;
        sub_1A8645080((uint64_t)&v46, sub_1A86409B8);
        v11.array._rawValue = SectionSpecifier.Part.appending(_:)(v10).array._rawValue;
        sub_1A88AE7A0(a1, v11.array._rawValue, a3);
        swift_bridgeObjectRelease();
        sub_1A8645080((uint64_t)&v46, sub_1A856B460);
        v9 += 184;
      }
      while (v8 != v10);
      swift_bridgeObjectRelease();
      sub_1A8645080(v3, sub_1A856B460);
    }
  }
  else
  {
    nullsub_1(v44);
    long long v14 = v12[1];
    long long v13 = v12[2];
    v41[0] = *v12;
    v41[1] = v14;
    void v41[2] = v13;
    long long v15 = v12[6];
    long long v17 = v12[3];
    long long v16 = v12[4];
    v42[0] = v12[5];
    v42[1] = v15;
    v41[3] = v17;
    v41[4] = v16;
    long long v18 = v12[10];
    long long v20 = v12[7];
    long long v19 = v12[8];
    v42[4] = v12[9];
    v42[5] = v18;
    v42[2] = v20;
    v42[3] = v19;
    sub_1A8529F8C((uint64_t)v42 + 8, (uint64_t)v45, &qword_1E97417C8);
    sub_1A8529F8C((uint64_t)v45, (uint64_t)v48, &qword_1E97417C8);
    if (*((void *)&v48[0] + 1) != 1)
    {
      v51[1] = v48[2];
      v51[2] = v48[3];
      v51[3] = v48[4];
      uint64_t v52 = v49;
      long long v50 = v48[0];
      v51[0] = v48[1];
      sub_1A8529F8C((uint64_t)v51, (uint64_t)v53, &qword_1E9741808);
      sub_1A8529F8C((uint64_t)v53, (uint64_t)v54, &qword_1E9741808);
      if (*((void *)&v54[0] + 1) != 1)
      {
        v56[1] = v54[1];
        v56[2] = v54[2];
        _OWORD v56[3] = v54[3];
        uint64_t v57 = v55;
        v56[0] = v54[0];
        sub_1A8529F8C((uint64_t)v56, (uint64_t)v58, &qword_1E97417D8);
        sub_1A8529F8C((uint64_t)v58, (uint64_t)v59, &qword_1E97417D8);
        if (v60)
        {
          uint64_t v21 = v61;
          uint64_t v22 = v62;
          uint64_t v47 = 0;
          int64_t v46 = 0;
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1A8645080(v3, sub_1A86409B8);
          uint64_t v23 = swift_retain();
          sub_1A88EC550(v23, v21, v22, &v46, a3, v24);
          swift_release();
          swift_release();
          swift_release();
          sub_1A8645080(v3, sub_1A856B460);
          uint64_t v25 = v47;
          if (v47)
          {
            uint64_t v26 = v46;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            int64_t v46 = *a1;
            *a1 = 0x8000000000000000;
            sub_1A88E8A38(v26, v25, a2, isUniquelyReferenced_nonNull_native);
            *a1 = v46;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
      }
    }
    sub_1A8644F84((uint64_t)v63, (uint64_t)&v46);
    nullsub_1(&v46);
    long long v29 = v28[6];
    long long v30 = v28[7];
    long long v31 = v28[8];
    long long v32 = v28[9];
    long long v33 = v28[10];
    long long v34 = v28[2];
    long long v35 = v28[3];
    long long v36 = v28[4];
    long long v37 = v28[5];
    long long v38 = v28[1];
    v40[0] = *v28;
    v40[1] = v38;
    v40[2] = v34;
    v40[3] = v35;
    v40[4] = v36;
    v40[5] = v37;
    v40[6] = v29;
    v40[7] = v30;
    v40[8] = v31;
    v40[9] = v32;
    v40[10] = v33;
    sub_1A8644F84((uint64_t)v63, (uint64_t)&v46);
    nullsub_1(&v46);
    sub_1A87364EC(v39);
    sub_1A87F0804((uint64_t)v40);
  }
}

uint64_t Message.makeAttachmentFilenames(cache:)(void *a1)
{
  uint64_t v2 = sub_1A88E3FE4(v1, (void *(*)(uint64_t *__return_ptr, void))sub_1A88AEEC4, a1);
  if (v2[2])
  {
    __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97456C0);
    uint64_t v3 = sub_1A8A781E8();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  uint64_t v5 = v3;
  sub_1A88AF048(v2, 1, &v5);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A88AEC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v39 = MEMORY[0x1E4FBC860];
  long long v33 = &v39;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  sub_1A88C5A44(3, 0, 0, (uint64_t (*)(_OWORD *))sub_1A88AF340, (uint64_t)v32, (uint64_t)nullsub_1, 0, a1, a2, a3, a4);
  uint64_t v8 = v39;
  uint64_t v9 = *(void *)(v39 + 16);
  if (v9)
  {
    long long v30 = a6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    Swift::Int v10 = (unsigned __int8 *)(v8 + 72);
    long long v31 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v16 = *((void *)v10 - 5);
      uint64_t v17 = *((void *)v10 - 4);
      uint64_t v19 = *((void *)v10 - 3);
      uint64_t v18 = *((void *)v10 - 2);
      uint64_t v20 = *((void *)v10 - 1);
      int v22 = *v10;
      v10 += 48;
      char v21 = v22;
      switch(v22)
      {
        case 1:
        case 3:
          break;
        case 2:
          uint64_t v23 = v18;
          uint64_t v24 = v20;
          if (v20) {
            goto LABEL_10;
          }
          uint64_t v11 = v17;
          uint64_t v12 = v19;
          uint64_t v13 = v18;
          uint64_t v14 = 0;
          char v15 = 2;
          goto LABEL_4;
        default:
          uint64_t v23 = v17;
          uint64_t v24 = v19;
          if (v19)
          {
LABEL_10:
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A88AF384(v17, v19, v18, v20, v21);
            uint64_t v25 = v31;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v25 = sub_1A8901700(0, v31[2] + 1, 1, v31);
            }
            unint64_t v27 = v25[2];
            unint64_t v26 = v25[3];
            if (v27 >= v26 >> 1) {
              uint64_t v25 = sub_1A8901700((void *)(v26 > 1), v27 + 1, 1, v25);
            }
            v25[2] = v27 + 1;
            long long v31 = v25;
            uint64_t v28 = &v25[3 * v27];
            v28[4] = v16;
            v28[5] = v23;
            v28[6] = v24;
          }
          else
          {
            uint64_t v11 = v17;
            uint64_t v12 = 0;
            uint64_t v13 = v18;
            uint64_t v14 = v20;
            char v15 = 0;
LABEL_4:
            sub_1A88AF364(v11, v12, v13, v14, v15);
          }
          break;
      }
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    a6 = v30;
    uint64_t v7 = v31;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v7;
  return result;
}

uint64_t sub_1A88AEEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1A88AEC8C(a1, a2, a3, a4, v5, a5);
}

uint64_t variable initialization expression of Cache._allCanonicalNames()
{
  return 0;
}

uint64_t variable initialization expression of Cache._utf8CanonicalName()
{
  return 0;
}

uint64_t variable initialization expression of Cache._eucCnCanonicalName()
{
  return 0;
}

uint64_t variable initialization expression of Cache._gb2312CanonicalName()
{
  return 0;
}

uint64_t variable initialization expression of Cache._gbk95CanonicalName()
{
  return 0;
}

uint64_t variable initialization expression of Cache._gb18030CanonicalName()
{
  return 0;
}

uint64_t variable initialization expression of Cache._big5CanonicalName()
{
  return 0;
}

uint64_t variable initialization expression of Cache._big5HkscsCanonicalName()
{
  return 0;
}

uint64_t variable initialization expression of Cache._converters()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t variable initialization expression of Cache._idna()
{
  return 0;
}

uint64_t variable initialization expression of EmailAddress.name()
{
  return 0;
}

uint64_t variable initialization expression of DisplayPart.Attachment.contentID()
{
  return 0;
}

uint64_t variable initialization expression of UnsafeExtractedAttachment.filename()
{
  return 0;
}

uint64_t variable initialization expression of UnsafeExtractedAttachment.encoding()
{
  return 5;
}

double variable initialization expression of UnsafeExtractedAttachment.mediaType@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = -1;
  return result;
}

uint64_t variable initialization expression of IndexableMessageInfo.date@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A8A74C38();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

double variable initialization expression of IndexableMessageInfo.from@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t variable initialization expression of IndexableMessageInfo.messageID()
{
  return 0;
}

uint64_t variable initialization expression of IndexableMessageInfo.subject()
{
  return 0;
}

uint64_t variable initialization expression of IndexableMessageInfo.priority()
{
  return 256;
}

uint64_t variable initialization expression of IndexableMessageInfo.content()
{
  return 0;
}

uint64_t variable initialization expression of IndexableMessageInfo.Attachment.filename()
{
  return 0;
}

uint64_t variable initialization expression of WatchOSHeaderInfo.from()
{
  return 0;
}

void *sub_1A88AF048(void *result, char a2, void *a3)
{
  uint64_t v3 = result[2];
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v7 = result[4];
    uint64_t v43 = result[5];
    uint64_t v8 = result[6];
    uint64_t v9 = (void *)*a3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    unint64_t v11 = sub_1A88F0E38(v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    char v15 = v10;
    if (v9[3] < v14)
    {
      sub_1A88E8424(v14, a2 & 1);
      unint64_t v16 = sub_1A88F0E38(v7);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_28:
        double result = (void *)sub_1A8A786A8();
        __break(1u);
        return result;
      }
      unint64_t v11 = v16;
      uint64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      uint64_t v19 = (void *)(v18[7] + 16 * v11);
      swift_bridgeObjectRelease();
      *uint64_t v19 = v43;
      v19[1] = v8;
      uint64_t v20 = v3 - 1;
      if (v3 == 1) {
        return (void *)swift_bridgeObjectRelease();
      }
LABEL_16:
      for (uint64_t i = v6 + 9; ; i += 3)
      {
        uint64_t v28 = *(i - 2);
        uint64_t v27 = *(i - 1);
        uint64_t v29 = *i;
        long long v30 = (void *)*a3;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        unint64_t v32 = sub_1A88F0E38(v28);
        uint64_t v33 = v30[2];
        BOOL v34 = (v31 & 1) == 0;
        uint64_t v35 = v33 + v34;
        if (__OFADD__(v33, v34)) {
          break;
        }
        char v36 = v31;
        if (v30[3] < v35)
        {
          sub_1A88E8424(v35, 1);
          unint64_t v37 = sub_1A88F0E38(v28);
          if ((v36 & 1) != (v38 & 1)) {
            goto LABEL_28;
          }
          unint64_t v32 = v37;
        }
        uint64_t v39 = (void *)*a3;
        if (v36)
        {
          swift_bridgeObjectRelease();
          unint64_t v26 = (void *)(v39[7] + 16 * v32);
          swift_bridgeObjectRelease();
          *unint64_t v26 = v27;
          v26[1] = v29;
        }
        else
        {
          v39[(v32 >> 6) + 8] |= 1 << v32;
          *(void *)(v39[6] + 8 * v32) = v28;
          char v40 = (void *)(v39[7] + 16 * v32);
          *char v40 = v27;
          v40[1] = v29;
          uint64_t v41 = v39[2];
          BOOL v23 = __OFADD__(v41, 1);
          uint64_t v42 = v41 + 1;
          if (v23) {
            goto LABEL_27;
          }
          v39[2] = v42;
        }
        if (!--v20) {
          return (void *)swift_bridgeObjectRelease();
        }
      }
      goto LABEL_26;
    }
    if (a2)
    {
      uint64_t v18 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1A88E8D04();
      uint64_t v18 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    *(void *)(v18[6] + 8 * v11) = v7;
    char v21 = (void *)(v18[7] + 16 * v11);
    *char v21 = v43;
    v21[1] = v8;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v18[2] = v24;
    uint64_t v20 = v3 - 1;
    if (v3 == 1) {
      return (void *)swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1A88AF2E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A88AF340(uint64_t *a1)
{
  return sub_1A88F62CC(a1, *(char ***)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(uint64_t **)(v1 + 56));
}

uint64_t sub_1A88AF364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5 || a5 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A88AF384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5 || a5 == 2) {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

void type metadata accessor for CompactEncDet_Encoding(uint64_t a1)
{
}

void type metadata accessor for UErrorCode(uint64_t a1)
{
}

uint64_t sub_1A88AF3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3) {
    uint64_t v7 = a3 + a2;
  }
  else {
    uint64_t v7 = 0;
  }
  if (a3) {
    uint64_t v8 = a3 + a1;
  }
  else {
    uint64_t v8 = 0;
  }
  if (a5)
  {
    uint64_t v9 = a6 - a5;
    uint64_t v10 = a5;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  uint64_t result = sub_1A88AF440(v10, v9, v8, v7, 1, &v12, (uint64_t)&v13);
  if (!v6) {
    return v13;
  }
  return result;
}

uint64_t sub_1A88AF440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  if (a3)
  {
    uint64_t v11 = a4 - a3;
    uint64_t result = sub_1A88AF514(a3, a4 - a3, a1, a2, a5 & 1, (uint64_t)&v17);
    if (!v7)
    {
      uint64_t v13 = v17;
      if (v17 < 0) {
        goto LABEL_13;
      }
      goto LABEL_8;
    }
LABEL_6:
    *a6 = v16;
    return result;
  }
  uint64_t result = sub_1A88AF514(0, 0, a1, a2, a5 & 1, (uint64_t)&v17);
  if (v7) {
    goto LABEL_6;
  }
  uint64_t v11 = 0;
  uint64_t v13 = v17;
  if (v17 < 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }
LABEL_8:
  if (v11 < v13) {
    goto LABEL_13;
  }
  char v14 = v18;
  uint64_t v15 = a3 + v13;
  if (!a3) {
    uint64_t v15 = 0;
  }
  *(void *)a7 = a3;
  *(void *)(a7 + 8) = v15;
  *(unsigned char *)(a7 + 16) = v14;
  return result;
}

uint64_t sub_1A88AF514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t result = sub_1A88AF5F0(a3, a4, a5, a1, a2);
  *(void *)a6 = 0;
  *(unsigned char *)(a6 + 8) = 0;
  return result;
}

uint64_t sub_1A88AF5F0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = result;
  if (a2 < 1 || (*(unsigned char *)(v5 + 1) & 1) != 0)
  {
    uint64_t v9 = 0;
    uint64_t v10 = a2;
    if (a2 > 0) {
      goto LABEL_59;
    }
    return result;
  }
  uint64_t v9 = 0;
  uint64_t v12 = a5 - 3;
  uint64_t v13 = a2 - 2;
  uint64_t result = (uint64_t)&OBJC_PROTOCOL___OS_dispatch_source_timer_0.class_meths;
  p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___OS_dispatch_source_timer_0 + 32);
  uint64_t v15 = (__objc2_meth_list **)(&OBJC_PROTOCOL___OS_dispatch_source_timer_0 + 32);
  uint64_t v16 = (__objc2_meth_list **)(&OBJC_PROTOCOL___OS_dispatch_source_timer_0 + 32);
  while (1)
  {
    while (1)
    {
      int v18 = *(char *)(v8 + v9);
      if ((v18 & 0x80000000) == 0)
      {
        if (*(void *)(result + 432) != -1)
        {
          uint64_t v43 = v12;
          uint64_t v45 = a5;
          uint64_t v35 = v15;
          swift_once();
          uint64_t v16 = (__objc2_meth_list **)(&OBJC_PROTOCOL___OS_dispatch_source_timer_0 + 32);
          uint64_t v15 = v35;
          p_class_meths = &OBJC_PROTOCOL___OS_dispatch_source_timer_0.class_meths;
          uint64_t result = 0x1E974E000;
          uint64_t v12 = v43;
          a5 = v45;
        }
        uint64_t v19 = p_class_meths[63];
        if (*(void *)&v19[2] <= (unint64_t)v18) {
          goto LABEL_79;
        }
        int v20 = *((char *)&v19[4].entrysize + v18);
        if ((v20 & 0x80000000) == 0) {
          break;
        }
      }
      if ((a3 & 1) == 0)
      {
        char v36 = 1;
        goto LABEL_57;
      }
      if (++v9 >= a2) {
        goto LABEL_58;
      }
    }
    if (v15[55] != (__objc2_meth_list *)-1)
    {
      uint64_t v44 = v12;
      uint64_t v46 = a5;
      swift_once();
      uint64_t v16 = &OBJC_PROTOCOL___OS_dispatch_source_timer_0.class_meths;
      uint64_t v15 = &OBJC_PROTOCOL___OS_dispatch_source_timer_0.class_meths;
      p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___OS_dispatch_source_timer_0 + 32);
      uint64_t result = 0x1E974E000;
      uint64_t v12 = v44;
      a5 = v46;
    }
    int v21 = *((unsigned __int8 *)v16 + 512);
    uint64_t v22 = *(void *)(v5 + 24);
    if (v18 != v21) {
      break;
    }
    BOOL v17 = __OFADD__(v22++, 1);
    if (v17) {
      goto LABEL_84;
    }
    *(void *)(v5 + 24) = v22;
LABEL_24:
    int v23 = *(_DWORD *)(v5 + 32);
    int v24 = v20 + (v23 << 6);
    if (__CFADD__(v20, v23 << 6)) {
      goto LABEL_81;
    }
    *(_DWORD *)(v5 + 32) = v24;
    uint64_t v25 = *(void *)(v5 + 16);
    BOOL v17 = __OFADD__(v25, 1);
    uint64_t v26 = v25 + 1;
    if (v17) {
      goto LABEL_82;
    }
    *(void *)(v5 + 16) = v26;
    if (v26 == 4)
    {
      if (a5 < 3 || (uint64_t v27 = *(void *)(v5 + 8), v12 < v27))
      {
        char v36 = 3;
        goto LABEL_57;
      }
      if (v22 == 3) {
        goto LABEL_56;
      }
      BOOL v28 = v9 + 1 >= a2;
      if (v9 + 1 < a2 && v22 >= 1)
      {
        uint64_t v29 = p_class_meths[63];
        uint64_t v30 = v9;
        do
        {
          unint64_t v31 = *(unsigned __int8 *)(v8 + 1 + v30);
          if (v31 != v21)
          {
            if ((a3 & 1) == 0) {
              goto LABEL_49;
            }
            if ((v31 & 0x80) == 0)
            {
              if (*(void *)&v29[2] <= v31) {
                goto LABEL_80;
              }
              if ((*((char *)&v29[4].entrysize + v31) & 0x80000000) == 0)
              {
LABEL_49:
                BOOL v34 = (unsigned char *)(a4 + v27);
                *BOOL v34 = BYTE2(v24);
                v34[1] = BYTE1(v24);
                uint64_t v32 = v27 + 2;
                goto LABEL_50;
              }
            }
          }
          if (v13 == v30)
          {
            BOOL v28 = 1;
            goto LABEL_42;
          }
          ++v30;
        }
        while (v30 + 1 < a2);
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        return result;
      }
LABEL_42:
      *(unsigned char *)(a4 + v27) = BYTE2(v24);
      *(void *)(v5 + 8) = v27 + 1;
      if (!v28 || v22 <= 1)
      {
        *(unsigned char *)(a4 + v27 + 1) = BYTE1(v24);
        uint64_t v32 = v27 + 2;
        *(void *)(v5 + 8) = v27 + 2;
        if (v22 <= 0 || !v28)
        {
LABEL_50:
          *(unsigned char *)(a4 + v32) = v24;
          *(void *)(v5 + 8) = v32 + 1;
        }
      }
      *(void *)(v5 + 16) = 0;
      if (v22 >= 1 && (a3 & 1) == 0)
      {
        *(unsigned char *)(v5 + 1) = 1;
        uint64_t v10 = a2 - v9;
        if (a2 > v9) {
          goto LABEL_59;
        }
        return result;
      }
      *(void *)(v5 + 24) = 0;
    }
    BOOL v17 = __OFADD__(v9++, 1);
    if (v17) {
      goto LABEL_83;
    }
    if (v9 >= a2) {
      goto LABEL_58;
    }
  }
  if (v22 < 1 || (a3 & 1) != 0) {
    goto LABEL_24;
  }
LABEL_56:
  char v36 = 2;
LABEL_57:
  *(unsigned char *)uint64_t v5 = v36;
LABEL_58:
  uint64_t v10 = a2 - v9;
  if (a2 <= v9) {
    return result;
  }
LABEL_59:
  if (!*(unsigned char *)v5)
  {
    unint64_t v37 = (unsigned __int8 *)(v8 + v9);
    char v38 = &qword_1E974E1B0;
    while (1)
    {
      unsigned int v40 = *v37++;
      unint64_t v39 = v40;
      if (a3)
      {
        if ((v39 & 0x80) != 0)
        {
          int v41 = 1;
        }
        else
        {
          if (qword_1E974E1B0 != -1)
          {
            uint64_t v42 = v38;
            uint64_t result = swift_once();
            char v38 = v42;
          }
          if (*((void *)off_1E974E1F8 + 2) <= v39) {
            goto LABEL_78;
          }
          int v41 = *((char *)off_1E974E1F8 + v39 + 32) < 0;
        }
      }
      else
      {
        int v41 = 0;
      }
      if (qword_1E974E1B8 != -1)
      {
        uint64_t result = swift_once();
        char v38 = &qword_1E974E1B0;
      }
      if (((v39 != byte_1E974E200) & ~v41) != 0) {
        break;
      }
      if (!--v10) {
        return result;
      }
    }
    *(unsigned char *)uint64_t v5 = 4;
  }
  return result;
}

void sub_1A88AFA24()
{
  off_1E974E1F8 = &unk_1EFE91140;
}

unint64_t sub_1A88AFA38()
{
  if (sub_1A8A78588())
  {
    unint64_t result = 10;
    goto LABEL_7;
  }
  unint64_t result = sub_1A8A76278();
  if ((result & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t result = sub_1A8884574(0x3DuLL, 0xE100000000000000);
  if ((result & 0x100000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if ((result & 0xFFFFFF80) != 0) {
    goto LABEL_10;
  }
  unint64_t result = sub_1A8884574(0x3DuLL, 0xE100000000000000);
  if ((result & 0x100000000) == 0)
  {
    if ((result & 0xFFFFFF00) == 0)
    {
LABEL_7:
      byte_1E974E200 = result;
      return result;
    }
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1A88AFACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a1)
  {
    uint64_t result = sub_1A88AF440(a1, a2 - a1, a3, a4, a5 & 1, &v7, (uint64_t)&v8);
    if (v5) {
      return result;
    }
    return v8;
  }
  uint64_t result = sub_1A88AF440(0, 0, a3, a4, a5 & 1, &v7, (uint64_t)&v8);
  if (!v5) {
    return v8;
  }
  return result;
}

unint64_t sub_1A88AFB2C()
{
  unint64_t result = qword_1E974E208;
  if (!qword_1E974E208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E208);
  }
  return result;
}

ValueMetadata *type metadata accessor for Base64.InvalidBase64Data()
{
  return &type metadata for Base64.InvalidBase64Data;
}

__n128 sub_1A88AFB90@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A88AFB9C(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  sub_1A873C6F0(a1, (uint64_t)v19);
  sub_1A873C6F0((uint64_t)v19, (uint64_t)&v21);
  unint64_t v2 = v21;
  unint64_t v3 = v21 >> 62;
  if (v21 >> 62)
  {
    unint64_t v4 = (void *)(v21 & 0x3FFFFFFFFFFFFFFFLL);
    v21 &= 0x3FFFFFFFFFFFFFFFuLL;
    if (v3 == 1)
    {
      memcpy(__dst, v4 + 2, sizeof(__dst));
      sub_1A872E2C4((uint64_t)__dst);
      sub_1A88B1740((long long *)__dst);
      sub_1A872E440((uint64_t)__dst);
    }
    else
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      *(void *)long long __dst = v4[2];
      *(void *)&__dst[8] = v5;
      swift_bridgeObjectRetain_n();
      sub_1A88B1AD0((uint64_t *)__dst);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)long long __dst = v6;
      sub_1A8A75F88();
    }
  }
  else
  {
    v21 &= 0x3FFFFFFFFFFFFFFFuLL;
    sub_1A88B1690(*(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18), *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20), *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x28));
  }
  long long v7 = *(_OWORD *)(a1 + 24);
  long long v8 = *(_OWORD *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 40);
  long long v14 = v8;
  long long v15 = *(_OWORD *)(a1 + 72);
  long long v11 = *(_OWORD *)(a1 + 8);
  long long v12 = v7;
  sub_1A8529F8C((uint64_t)&v12 + 8, (uint64_t)v18, (uint64_t *)&unk_1E9743F08);
  sub_1A8529F8C((uint64_t)v18, (uint64_t)&v22, (uint64_t *)&unk_1E9743F08);
  if (v23)
  {
    uint64_t v26 = v22;
    uint64_t v27 = v23;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88B1AD0(&v26);
    swift_bridgeObjectRelease();
  }
  sub_1A8529F8C((uint64_t)&v13 + 8, (uint64_t)v17, (uint64_t *)&unk_1E9743F08);
  sub_1A8529F8C((uint64_t)v17, (uint64_t)&v24, (uint64_t *)&unk_1E9743F08);
  if (v25)
  {
    uint64_t v26 = v24;
    uint64_t v27 = v25;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88B1AD0(&v26);
    swift_bridgeObjectRelease();
  }
  sub_1A8529F8C((uint64_t)&v14 + 8, (uint64_t)v16, &qword_1E9741810);
  sub_1A8529F8C((uint64_t)v16, (uint64_t)&v26, &qword_1E9741810);
  if (v27)
  {
    v10[0] = v26;
    v10[1] = v27;
    swift_bridgeObjectRetain_n();
    sub_1A88B1AD0(v10);
    swift_bridgeObjectRelease();
    sub_1A853489C((uint64_t)v16);
  }
  v10[0] = *((void *)&v15 + 1);
  return sub_1A8A75F88();
}

uint64_t sub_1A88AFE04(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  unint64_t v2 = v1;
  uint64_t v307 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *v1;
  uint64_t v244 = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v215 = v2;
    uint64_t v5 = v3 + 32;
    uint64_t v223 = 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    for (uint64_t i = v4 - 1; ; --i)
    {
      sub_1A8644F84(v5, (uint64_t)v256);
      sub_1A8644F84((uint64_t)v256, (uint64_t)v257);
      if (sub_1A8644FF4((uint64_t)v257) == 1)
      {
        nullsub_1(v257);
        uint64_t v8 = *((void *)v7 + 2);
        long long v299 = *v7;
        uint64_t v300 = v8;
        long long v9 = *(long long *)((char *)v7 + 40);
        long long v301 = *(long long *)((char *)v7 + 24);
        long long v302 = v9;
        long long v10 = *(long long *)((char *)v7 + 72);
        long long v303 = *(long long *)((char *)v7 + 56);
        long long v304 = v10;
        long long v11 = *(long long *)((char *)v7 + 104);
        long long v305 = *(long long *)((char *)v7 + 88);
        long long v306 = v11;
        sub_1A8644F84((uint64_t)v256, (uint64_t)__dst);
        nullsub_1(__dst);
        uint64_t v233 = *(void *)(v12 + 32);
        uint64_t v238 = *(void *)(v12 + 24);
        uint64_t v242 = v5;
        uint64_t v13 = *(void *)(v12 + 40);
        uint64_t v14 = *(void *)(v12 + 48);
        uint64_t v15 = *(void *)(v12 + 56);
        uint64_t v16 = *(void *)(v12 + 64);
        uint64_t v17 = *(void *)(v12 + 72);
        uint64_t v18 = *(void *)(v12 + 80);
        long long v227 = *(_OWORD *)(v12 + 88);
        uint64_t v19 = i;
        uint64_t v20 = *(void *)(v12 + 104);
        uint64_t v21 = *(void *)(v12 + 112);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v200 = v21;
        uint64_t i = v19;
        uint64_t v22 = v13;
        uint64_t v5 = v242;
        sub_1A8640D64(v238, v233, v22, v14, v15, v16, v17, v18, v227, *((uint64_t *)&v227 + 1), v20, v200);
        sub_1A88AFE04(&v299);
        sub_1A87939C8((uint64_t)v256, sub_1A856B460);
        if (!v19) {
          goto LABEL_129;
        }
        goto LABEL_121;
      }
      nullsub_1(v257);
      uint64_t v24 = v23;
      unint64_t v25 = *v23;
      uint64_t v26 = *v23 >> 62;
      if (!v26)
      {
        uint64_t v31 = *(void *)(v25 + 16);
        uint64_t v30 = *(void *)(v25 + 24);
        uint64_t v32 = *(void *)(v25 + 32);
        uint64_t v33 = *(void *)(v25 + 40);
        sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        if ((v30 & 0x1000000000000000) != 0)
        {
          sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
          uint64_t v31 = sub_1A88C65C4();
          uint64_t v34 = v146;
          if ((v146 & 0x2000000000000000) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
          uint64_t v34 = v30;
          if ((v30 & 0x2000000000000000) == 0)
          {
LABEL_14:
            if ((v31 & 0x1000000000000000) == 0) {
              sub_1A8A77E88();
            }
LABEL_51:
            sub_1A8A75F88();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            if ((v33 & 0x1000000000000000) != 0)
            {
              uint64_t v32 = sub_1A88C65C4();
              uint64_t v147 = v149;
              if ((v149 & 0x2000000000000000) == 0) {
                goto LABEL_53;
              }
            }
            else
            {
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              uint64_t v147 = v33;
              if ((v33 & 0x2000000000000000) == 0)
              {
LABEL_53:
                if ((v32 & 0x1000000000000000) == 0) {
                  sub_1A8A77E88();
                }
                goto LABEL_60;
              }
            }
            *(void *)&__dst[0] = v32;
            *((void *)&__dst[0] + 1) = v147 & 0xFFFFFFFFFFFFFFLL;
LABEL_60:
            sub_1A8A75F88();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_96;
          }
        }
        *(void *)&__dst[0] = v31;
        *((void *)&__dst[0] + 1) = v34 & 0xFFFFFFFFFFFFFFLL;
        goto LABEL_51;
      }
      if (v26 != 1)
      {
        uint64_t v35 = i;
        char v36 = (void *)(v25 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v38 = v36[2];
        uint64_t v37 = v36[3];
        uint64_t v39 = v36[4];
        sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
        if ((v37 & 0x1000000000000000) != 0)
        {
          sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          uint64_t v38 = sub_1A88C65C4();
          uint64_t v40 = v148;
          if ((v148 & 0x2000000000000000) == 0) {
            goto LABEL_18;
          }
        }
        else
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          uint64_t v40 = v37;
          if ((v37 & 0x2000000000000000) == 0)
          {
LABEL_18:
            if ((v38 & 0x1000000000000000) == 0) {
              sub_1A8A77E88();
            }
            goto LABEL_57;
          }
        }
        *(void *)&__dst[0] = v38;
        *((void *)&__dst[0] + 1) = v40 & 0xFFFFFFFFFFFFFFLL;
LABEL_57:
        sub_1A8A75F88();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&__dst[0] = v39;
        sub_1A8A75F88();
        uint64_t i = v35;
        goto LABEL_96;
      }
      memcpy(__dst, (const void *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 16), 0x148uLL);
      uint64_t v27 = *((void *)&__dst[0] + 1);
      uint64_t v28 = *(void *)&__dst[0];
      sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
      if ((v27 & 0x1000000000000000) != 0)
      {
        sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A872E2C4((uint64_t)__dst);
        uint64_t v28 = sub_1A88C65C4();
        uint64_t v29 = v41;
        if ((v41 & 0x2000000000000000) == 0)
        {
LABEL_10:
          if ((v28 & 0x1000000000000000) == 0) {
            sub_1A8A77E88();
          }
          goto LABEL_22;
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A87939C8((uint64_t)v256, sub_1A86409B8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A872E2C4((uint64_t)__dst);
        uint64_t v29 = v27;
        if ((v27 & 0x2000000000000000) == 0) {
          goto LABEL_10;
        }
      }
      *(void *)unint64_t v252 = v28;
      *(void *)&v252[8] = v29 & 0xFFFFFFFFFFFFFFLL;
LABEL_22:
      sub_1A8A75F88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A8644F84((uint64_t)&__dst[8] + 8, (uint64_t)v254);
      uint64_t v243 = v5;
      if (sub_1A8644FF4((uint64_t)v254) == 1)
      {
        nullsub_1(v254);
        uint64_t v43 = *((void *)v42 + 2);
        long long v291 = *v42;
        uint64_t v292 = v43;
        long long v293 = *(long long *)((char *)v42 + 24);
        long long v294 = *(long long *)((char *)v42 + 40);
        long long v295 = *(long long *)((char *)v42 + 56);
        long long v296 = *(long long *)((char *)v42 + 72);
        long long v297 = *(long long *)((char *)v42 + 88);
        long long v298 = *(long long *)((char *)v42 + 104);
        sub_1A8644F84((uint64_t)&__dst[8] + 8, (uint64_t)v252);
        nullsub_1(v252);
        uint64_t v234 = *(void *)(v44 + 24);
        uint64_t v239 = v24;
        uint64_t v45 = *(void *)(v44 + 32);
        uint64_t v46 = *(void *)(v44 + 40);
        uint64_t v47 = *(void *)(v44 + 48);
        uint64_t v48 = *(void *)(v44 + 56);
        uint64_t v49 = *(void *)(v44 + 64);
        uint64_t v228 = *(void *)(v44 + 72);
        uint64_t v50 = *(void *)(v44 + 80);
        long long v216 = *(_OWORD *)(v44 + 88);
        uint64_t v51 = i;
        uint64_t v53 = *(void *)(v44 + 104);
        uint64_t v52 = *(void *)(v44 + 112);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v196 = v53;
        uint64_t i = v51;
        uint64_t v54 = v45;
        uint64_t v5 = v243;
        uint64_t v55 = v50;
        uint64_t v24 = v239;
        sub_1A8640D64(v234, v54, v46, v47, v48, v49, v228, v55, v216, *((uint64_t *)&v216 + 1), v196, v52);
        sub_1A88AFE04(&v291);
        sub_1A87939C8((uint64_t)&__dst[8] + 8, sub_1A856B460);
      }
      else
      {
        nullsub_1(v254);
        uint64_t v57 = v56;
        unint64_t v58 = *v56;
        uint64_t v59 = *v56 >> 62;
        uint64_t v221 = i;
        if (v59)
        {
          uint64_t v60 = (void *)(v58 & 0x3FFFFFFFFFFFFFFFLL);
          if (v59 == 1)
          {
            memcpy(v252, v60 + 2, sizeof(v252));
            *(_OWORD *)unint64_t v250 = *(_OWORD *)v252;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A87939C8((uint64_t)&__dst[8] + 8, sub_1A86409B8);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A872E2C4((uint64_t)v252);
            uint64_t v61 = v223;
            sub_1A88B1AD0((uint64_t *)v250);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A8644F84((uint64_t)&v252[136], (uint64_t)v253);
            if (sub_1A8644FF4((uint64_t)v253) == 1)
            {
              nullsub_1(v253);
              uint64_t v63 = *((void *)v62 + 2);
              long long v283 = *v62;
              uint64_t v284 = v63;
              long long v64 = *(long long *)((char *)v62 + 40);
              long long v285 = *(long long *)((char *)v62 + 24);
              long long v286 = v64;
              long long v65 = *(long long *)((char *)v62 + 72);
              long long v287 = *(long long *)((char *)v62 + 56);
              long long v288 = v65;
              long long v66 = *(long long *)((char *)v62 + 104);
              long long v289 = *(long long *)((char *)v62 + 88);
              long long v290 = v66;
              sub_1A8644F84((uint64_t)&v252[136], (uint64_t)v250);
              nullsub_1(v250);
              uint64_t v68 = *(void *)(v67 + 24);
              uint64_t v69 = *(void *)(v67 + 32);
              uint64_t v70 = *(void *)(v67 + 40);
              uint64_t v240 = v57;
              uint64_t v71 = *(void *)(v67 + 48);
              uint64_t v72 = *(void *)(v67 + 56);
              uint64_t v73 = *(void *)(v67 + 64);
              uint64_t v235 = *(void *)(v67 + 72);
              uint64_t v229 = *(void *)(v67 + 80);
              long long v217 = *(_OWORD *)(v67 + 88);
              unsigned int v74 = v24;
              uint64_t v75 = *(void *)(v67 + 104);
              uint64_t v76 = *(void *)(v67 + 112);
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
              uint64_t v201 = v76;
              uint64_t v24 = v74;
              uint64_t v77 = v72;
              uint64_t v57 = v240;
              uint64_t v78 = v73;
              uint64_t v61 = v223;
              sub_1A8640D64(v68, v69, v70, v71, v77, v78, v235, v229, v217, *((uint64_t *)&v217 + 1), v75, v201);
              sub_1A88AFE04(&v283);
              sub_1A87939C8((uint64_t)&v252[136], sub_1A856B460);
            }
            else
            {
              nullsub_1(v253);
              int v85 = v84;
              unint64_t v86 = *v84;
              uint64_t v87 = *v84 >> 62;
              if (v87)
              {
                char v88 = (void *)(v86 & 0x3FFFFFFFFFFFFFFFLL);
                if (v87 == 1)
                {
                  memcpy(v250, v88 + 2, sizeof(v250));
                  *(_OWORD *)uint64_t v248 = *(_OWORD *)v250;
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A87939C8((uint64_t)&v252[136], sub_1A86409B8);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A872E2C4((uint64_t)v250);
                  sub_1A88B1AD0((uint64_t *)v248);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1A8644F84((uint64_t)&v250[136], (uint64_t)v251);
                  if (sub_1A8644FF4((uint64_t)v251) == 1)
                  {
                    nullsub_1(v251);
                    uint64_t v90 = *((void *)v89 + 2);
                    long long v275 = *v89;
                    uint64_t v276 = v90;
                    long long v277 = *(long long *)((char *)v89 + 24);
                    long long v278 = *(long long *)((char *)v89 + 40);
                    long long v279 = *(long long *)((char *)v89 + 56);
                    long long v280 = *(long long *)((char *)v89 + 72);
                    long long v281 = *(long long *)((char *)v89 + 88);
                    long long v282 = *(long long *)((char *)v89 + 104);
                    sub_1A8644F84((uint64_t)&v250[136], (uint64_t)v248);
                    nullsub_1(v248);
                    uint64_t v236 = *(void *)(v91 + 24);
                    uint64_t v92 = *(void *)(v91 + 32);
                    uint64_t v230 = *(void *)(v91 + 40);
                    uint64_t v224 = *(void *)(v91 + 48);
                    uint64_t v218 = *(void *)(v91 + 56);
                    uint64_t v209 = *(void *)(v91 + 72);
                    uint64_t v212 = *(void *)(v91 + 64);
                    uint64_t v206 = *(void *)(v91 + 80);
                    long long v203 = *(_OWORD *)(v91 + 88);
                    unsigned int v93 = v57;
                    int v94 = v24;
                    uint64_t v95 = v61;
                    uint64_t v96 = *(void *)(v91 + 104);
                    uint64_t v97 = *(void *)(v91 + 112);
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                    uint64_t v197 = v96;
                    uint64_t v61 = v95;
                    uint64_t v24 = v94;
                    uint64_t v57 = v93;
                    sub_1A8640D64(v236, v92, v230, v224, v218, v212, v209, v206, v203, *((uint64_t *)&v203 + 1), v197, v97);
                    sub_1A88AFE04(&v275);
                    sub_1A87939C8((uint64_t)&v250[136], sub_1A856B460);
                  }
                  else
                  {
                    nullsub_1(v251);
                    unint64_t v104 = *v103;
                    unint64_t v105 = *v103 >> 62;
                    uint64_t v237 = v103;
                    uint64_t v241 = v57;
                    if (v105)
                    {
                      int v106 = (void *)(v104 & 0x3FFFFFFFFFFFFFFFLL);
                      if (v105 == 1)
                      {
                        memcpy(v248, v106 + 2, sizeof(v248));
                        *(_OWORD *)uint64_t v246 = *(_OWORD *)v248;
                        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                        sub_1A87939C8((uint64_t)&v250[136], sub_1A86409B8);
                        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                        sub_1A872E2C4((uint64_t)v248);
                        sub_1A88B1AD0((uint64_t *)v246);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        sub_1A8644F84((uint64_t)&v248[136], (uint64_t)v249);
                        if (sub_1A8644FF4((uint64_t)v249) == 1)
                        {
                          nullsub_1(v249);
                          uint64_t v108 = *((void *)v107 + 2);
                          long long v267 = *v107;
                          uint64_t v268 = v108;
                          long long v109 = *(long long *)((char *)v107 + 40);
                          long long v269 = *(long long *)((char *)v107 + 24);
                          long long v270 = v109;
                          long long v110 = *(long long *)((char *)v107 + 72);
                          long long v271 = *(long long *)((char *)v107 + 56);
                          long long v272 = v110;
                          long long v111 = *(long long *)((char *)v107 + 104);
                          long long v273 = *(long long *)((char *)v107 + 88);
                          long long v274 = v111;
                          sub_1A8644F84((uint64_t)&v248[136], (uint64_t)v246);
                          nullsub_1(v246);
                          uint64_t v113 = *(void *)(v112 + 24);
                          uint64_t v114 = *(void *)(v112 + 32);
                          uint64_t v231 = *(void *)(v112 + 40);
                          uint64_t v225 = *(void *)(v112 + 48);
                          uint64_t v219 = *(void *)(v112 + 56);
                          uint64_t v210 = *(void *)(v112 + 72);
                          uint64_t v213 = *(void *)(v112 + 64);
                          uint64_t v207 = *(void *)(v112 + 80);
                          long long v204 = *(_OWORD *)(v112 + 88);
                          unsigned int v115 = v24;
                          uint64_t v116 = v61;
                          uint64_t v117 = *(void *)(v112 + 104);
                          uint64_t v118 = *(void *)(v112 + 112);
                          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                          uint64_t v198 = v117;
                          uint64_t v61 = v116;
                          uint64_t v24 = v115;
                          sub_1A8640D64(v113, v114, v231, v225, v219, v213, v210, v207, v204, *((uint64_t *)&v204 + 1), v198, v118);
                          sub_1A88AFE04(&v267);
                          sub_1A87939C8((uint64_t)&v248[136], sub_1A856B460);
                        }
                        else
                        {
                          nullsub_1(v249);
                          BOOL v232 = v126;
                          unint64_t v127 = *v126;
                          uint64_t v128 = *v126 >> 62;
                          if (v128)
                          {
                            uint64_t v129 = (void *)(v127 & 0x3FFFFFFFFFFFFFFFLL);
                            if (v128 == 1)
                            {
                              memcpy(v246, v129 + 2, sizeof(v246));
                              *(_OWORD *)uint64_t v247 = *(_OWORD *)v246;
                              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                              sub_1A87939C8((uint64_t)&v248[136], sub_1A86409B8);
                              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                              sub_1A872E2C4((uint64_t)v246);
                              sub_1A88B1AD0(v247);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              sub_1A8644F84((uint64_t)&v246[136], (uint64_t)v247);
                              if (sub_1A8644FF4((uint64_t)v247) == 1)
                              {
                                nullsub_1(v247);
                                uint64_t v131 = *((void *)v130 + 2);
                                long long v259 = *v130;
                                uint64_t v260 = v131;
                                long long v261 = *(long long *)((char *)v130 + 24);
                                long long v262 = *(long long *)((char *)v130 + 40);
                                long long v263 = *(long long *)((char *)v130 + 56);
                                long long v264 = *(long long *)((char *)v130 + 72);
                                long long v265 = *(long long *)((char *)v130 + 88);
                                long long v266 = *(long long *)((char *)v130 + 104);
                                sub_1A8644F84((uint64_t)&v246[136], (uint64_t)v245);
                                nullsub_1(v245);
                                uint64_t v133 = *(void *)(v132 + 24);
                                uint64_t v134 = *(void *)(v132 + 32);
                                uint64_t v226 = *(void *)(v132 + 40);
                                uint64_t v220 = *(void *)(v132 + 48);
                                uint64_t v211 = *(void *)(v132 + 64);
                                uint64_t v214 = *(void *)(v132 + 56);
                                uint64_t v208 = *(void *)(v132 + 72);
                                uint64_t v205 = *(void *)(v132 + 80);
                                long long v202 = *(_OWORD *)(v132 + 88);
                                char v135 = v24;
                                uint64_t v136 = v61;
                                uint64_t v137 = *(void *)(v132 + 104);
                                uint64_t v138 = *(void *)(v132 + 112);
                                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                                uint64_t v199 = v137;
                                uint64_t v61 = v136;
                                uint64_t v24 = v135;
                                sub_1A8640D64(v133, v134, v226, v220, v214, v211, v208, v205, v202, *((uint64_t *)&v202 + 1), v199, v138);
                                sub_1A88AFE04(&v259);
                              }
                              else
                              {
                                nullsub_1(v247);
                                long long v151 = v150[9];
                                v258[8] = v150[8];
                                v258[9] = v151;
                                v258[10] = v150[10];
                                long long v152 = v150[5];
                                v258[4] = v150[4];
                                v258[5] = v152;
                                long long v153 = v150[6];
                                v258[7] = v150[7];
                                v258[6] = v153;
                                long long v154 = v150[1];
                                v258[0] = *v150;
                                v258[1] = v154;
                                long long v155 = v150[2];
                                v258[3] = v150[3];
                                v258[2] = v155;
                                sub_1A8644F84((uint64_t)&v246[136], (uint64_t)v245);
                                nullsub_1(v245);
                                sub_1A87364EC(v156);
                                sub_1A88AFB9C(v258);
                              }
                              sub_1A87939C8((uint64_t)&v246[136], sub_1A856B460);
                              v245[0] = *(void *)&v246[320];
                              sub_1A8A75F88();
                              sub_1A872E440((uint64_t)v246);
                            }
                            else
                            {
                              uint64_t v144 = v129[3];
                              uint64_t v145 = v129[4];
                              *(void *)uint64_t v246 = v129[2];
                              *(void *)&v246[8] = v144;
                              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                              sub_1A87939C8((uint64_t)&v248[136], sub_1A86409B8);
                              _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                              sub_1A88B1AD0((uint64_t *)v246);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              *(void *)uint64_t v246 = v145;
                              sub_1A8A75F88();
                            }
                          }
                          else
                          {
                            uint64_t v139 = *(void *)(v127 + 16);
                            uint64_t v140 = *(void *)(v127 + 24);
                            uint64_t v142 = *(void *)(v127 + 32);
                            uint64_t v141 = *(void *)(v127 + 40);
                            sub_1A8644F84((uint64_t)&v248[136], (uint64_t)v246);
                            nullsub_1(v246);
                            sub_1A87364EC(v143);
                            sub_1A88B1690(v139, v140, v142, v141);
                          }
                          uint64_t v157 = v232[5];
                          uint64_t v158 = v232[6];
                          uint64_t v160 = v232[7];
                          uint64_t v159 = v232[8];
                          uint64_t v161 = v232[9];
                          uint64_t v162 = v232[10];
                          if (v157)
                          {
                            *(void *)uint64_t v246 = v232[4];
                            *(void *)&v246[8] = v157;
                            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                            sub_1A88B1AD0((uint64_t *)v246);
                            swift_bridgeObjectRelease();
                          }
                          if (v160)
                          {
                            *(void *)uint64_t v246 = v158;
                            *(void *)&v246[8] = v160;
                            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                            sub_1A88B1AD0((uint64_t *)v246);
                            swift_bridgeObjectRelease();
                          }
                          if (v161)
                          {
                            *(void *)uint64_t v246 = v159;
                            *(void *)&v246[8] = v161;
                            swift_bridgeObjectRetain_n();
                            sub_1A88B1AD0((uint64_t *)v246);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                          }
                          *(void *)uint64_t v246 = v162;
                          sub_1A8A75F88();
                          sub_1A87939C8((uint64_t)&v248[136], sub_1A856B460);
                        }
                        *(void *)uint64_t v246 = *(void *)&v248[320];
                        sub_1A8A75F88();
                        sub_1A872E440((uint64_t)v248);
                      }
                      else
                      {
                        uint64_t v124 = v106[3];
                        uint64_t v125 = v106[4];
                        *(void *)uint64_t v248 = v106[2];
                        *(void *)&v248[8] = v124;
                        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                        sub_1A87939C8((uint64_t)&v250[136], sub_1A86409B8);
                        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                        sub_1A88B1AD0((uint64_t *)v248);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        *(void *)uint64_t v248 = v125;
                        sub_1A8A75F88();
                      }
                    }
                    else
                    {
                      uint64_t v119 = *(void *)(v104 + 16);
                      uint64_t v120 = *(void *)(v104 + 24);
                      uint64_t v122 = *(void *)(v104 + 32);
                      uint64_t v121 = *(void *)(v104 + 40);
                      sub_1A8644F84((uint64_t)&v250[136], (uint64_t)v248);
                      nullsub_1(v248);
                      sub_1A87364EC(v123);
                      sub_1A88B1690(v119, v120, v122, v121);
                    }
                    unint64_t v163 = v237[5];
                    unint64_t v164 = v237[6];
                    unint64_t v166 = v237[7];
                    unint64_t v165 = v237[8];
                    unint64_t v167 = v237[9];
                    unint64_t v168 = v237[10];
                    if (v163)
                    {
                      *(void *)uint64_t v248 = v237[4];
                      *(void *)&v248[8] = v163;
                      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                      sub_1A88B1AD0((uint64_t *)v248);
                      swift_bridgeObjectRelease();
                    }
                    if (v166)
                    {
                      *(void *)uint64_t v248 = v164;
                      *(void *)&v248[8] = v166;
                      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                      sub_1A88B1AD0((uint64_t *)v248);
                      swift_bridgeObjectRelease();
                    }
                    if (v167)
                    {
                      *(void *)uint64_t v248 = v165;
                      *(void *)&v248[8] = v167;
                      swift_bridgeObjectRetain_n();
                      sub_1A88B1AD0((uint64_t *)v248);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    *(void *)uint64_t v248 = v168;
                    sub_1A8A75F88();
                    sub_1A87939C8((uint64_t)&v250[136], sub_1A856B460);
                    uint64_t v57 = v241;
                  }
                  *(void *)uint64_t v248 = *(void *)&v250[320];
                  sub_1A8A75F88();
                  sub_1A872E440((uint64_t)v250);
                }
                else
                {
                  uint64_t v101 = v88[3];
                  uint64_t v102 = v88[4];
                  *(void *)unint64_t v250 = v88[2];
                  *(void *)&v250[8] = v101;
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A87939C8((uint64_t)&v252[136], sub_1A86409B8);
                  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                  sub_1A88B1AD0((uint64_t *)v250);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  *(void *)unint64_t v250 = v102;
                  sub_1A8A75F88();
                }
              }
              else
              {
                uint64_t v98 = *(void *)(v86 + 24);
                uint64_t v99 = *(void *)(v86 + 32);
                uint64_t v100 = *(void *)(v86 + 40);
                *(void *)unint64_t v250 = *(void *)(v86 + 16);
                *(void *)&v250[8] = v98;
                swift_bridgeObjectRetain_n();
                sub_1A87939C8((uint64_t)&v252[136], sub_1A86409B8);
                sub_1A88B1AD0((uint64_t *)v250);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(void *)unint64_t v250 = v99;
                *(void *)&v250[8] = v100;
                swift_bridgeObjectRetain_n();
                sub_1A88B1AD0((uint64_t *)v250);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v169 = v85[5];
              uint64_t v170 = v85[6];
              uint64_t v172 = v85[7];
              uint64_t v171 = v85[8];
              uint64_t v173 = v85[9];
              uint64_t v174 = v85[10];
              if (v169)
              {
                *(void *)unint64_t v250 = v85[4];
                *(void *)&v250[8] = v169;
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A88B1AD0((uint64_t *)v250);
                swift_bridgeObjectRelease();
              }
              if (v172)
              {
                *(void *)unint64_t v250 = v170;
                *(void *)&v250[8] = v172;
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                sub_1A88B1AD0((uint64_t *)v250);
                swift_bridgeObjectRelease();
              }
              if (v173)
              {
                *(void *)unint64_t v250 = v171;
                *(void *)&v250[8] = v173;
                swift_bridgeObjectRetain_n();
                sub_1A88B1AD0((uint64_t *)v250);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              *(void *)unint64_t v250 = v174;
              sub_1A8A75F88();
              sub_1A87939C8((uint64_t)&v252[136], sub_1A856B460);
            }
            *(void *)unint64_t v250 = *(void *)&v252[320];
            sub_1A8A75F88();
            sub_1A872E440((uint64_t)v252);
          }
          else
          {
            uint64_t v82 = v60[3];
            uint64_t v83 = v60[4];
            *(void *)unint64_t v252 = v60[2];
            *(void *)&v252[8] = v82;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A87939C8((uint64_t)&__dst[8] + 8, sub_1A86409B8);
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            uint64_t v61 = v223;
            sub_1A88B1AD0((uint64_t *)v252);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)unint64_t v252 = v83;
            sub_1A8A75F88();
          }
        }
        else
        {
          uint64_t v79 = *(void *)(v58 + 24);
          uint64_t v80 = *(void *)(v58 + 32);
          uint64_t v81 = *(void *)(v58 + 40);
          *(void *)unint64_t v252 = *(void *)(v58 + 16);
          *(void *)&v252[8] = v79;
          swift_bridgeObjectRetain_n();
          sub_1A87939C8((uint64_t)&__dst[8] + 8, sub_1A86409B8);
          uint64_t v61 = v223;
          sub_1A88B1AD0((uint64_t *)v252);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)unint64_t v252 = v80;
          *(void *)&v252[8] = v81;
          swift_bridgeObjectRetain_n();
          sub_1A88B1AD0((uint64_t *)v252);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v175 = v57[5];
        uint64_t v176 = v57[6];
        uint64_t v178 = v57[7];
        uint64_t v177 = v57[8];
        uint64_t v179 = v57[9];
        uint64_t v180 = v57[10];
        if (v175)
        {
          *(void *)unint64_t v252 = v57[4];
          *(void *)&v252[8] = v175;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A88B1AD0((uint64_t *)v252);
          swift_bridgeObjectRelease();
        }
        if (v178)
        {
          *(void *)unint64_t v252 = v176;
          *(void *)&v252[8] = v178;
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A88B1AD0((uint64_t *)v252);
          swift_bridgeObjectRelease();
        }
        if (v179)
        {
          *(void *)unint64_t v252 = v177;
          *(void *)&v252[8] = v179;
          swift_bridgeObjectRetain_n();
          sub_1A88B1AD0((uint64_t *)v252);
          uint64_t v223 = v61;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v223 = v61;
        }
        uint64_t v5 = v243;
        uint64_t i = v221;
        *(void *)unint64_t v252 = v180;
        sub_1A8A75F88();
        sub_1A87939C8((uint64_t)&__dst[8] + 8, sub_1A856B460);
      }
      *(void *)unint64_t v252 = *(void *)&__dst[20];
      sub_1A8A75F88();
      sub_1A872E440((uint64_t)__dst);
LABEL_96:
      uint64_t v181 = v24[5];
      uint64_t v182 = v24[6];
      uint64_t v183 = v24[7];
      uint64_t v184 = v24[8];
      uint64_t v186 = v24[9];
      uint64_t v185 = v24[10];
      if (!v181) {
        goto LABEL_104;
      }
      uint64_t v187 = v24[4];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((v181 & 0x1000000000000000) != 0)
      {
        uint64_t v187 = sub_1A88C65C4();
        uint64_t v222 = i;
        uint64_t v189 = v188;
        swift_bridgeObjectRelease();
        uint64_t v181 = v189;
        uint64_t i = v222;
        if ((v181 & 0x2000000000000000) == 0)
        {
LABEL_99:
          if ((v187 & 0x1000000000000000) == 0) {
            sub_1A8A77E88();
          }
          goto LABEL_103;
        }
      }
      else if ((v181 & 0x2000000000000000) == 0)
      {
        goto LABEL_99;
      }
      *(void *)&__dst[0] = v187;
      *((void *)&__dst[0] + 1) = v181 & 0xFFFFFFFFFFFFFFLL;
LABEL_103:
      sub_1A8A75F88();
      swift_bridgeObjectRelease();
LABEL_104:
      if (!v183) {
        goto LABEL_112;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((v183 & 0x1000000000000000) != 0)
      {
        uint64_t v182 = sub_1A88C65C4();
        uint64_t v190 = i;
        uint64_t v192 = v191;
        swift_bridgeObjectRelease();
        uint64_t v183 = v192;
        uint64_t i = v190;
        if ((v183 & 0x2000000000000000) == 0)
        {
LABEL_107:
          if ((v182 & 0x1000000000000000) == 0) {
            sub_1A8A77E88();
          }
          goto LABEL_111;
        }
      }
      else if ((v183 & 0x2000000000000000) == 0)
      {
        goto LABEL_107;
      }
      *(void *)&__dst[0] = v182;
      *((void *)&__dst[0] + 1) = v183 & 0xFFFFFFFFFFFFFFLL;
LABEL_111:
      sub_1A8A75F88();
      swift_bridgeObjectRelease();
LABEL_112:
      if (!v186) {
        goto LABEL_120;
      }
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((v186 & 0x1000000000000000) != 0)
      {
        uint64_t v184 = sub_1A88C65C4();
        uint64_t v193 = v194;
        if ((v194 & 0x2000000000000000) == 0)
        {
LABEL_115:
          if ((v184 & 0x1000000000000000) == 0) {
            sub_1A8A77E88();
          }
          goto LABEL_119;
        }
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v193 = v186;
        if ((v186 & 0x2000000000000000) == 0) {
          goto LABEL_115;
        }
      }
      *(void *)&__dst[0] = v184;
      *((void *)&__dst[0] + 1) = v193 & 0xFFFFFFFFFFFFFFLL;
LABEL_119:
      sub_1A8A75F88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_120:
      *(void *)&__dst[0] = v185;
      sub_1A8A75F88();
      sub_1A87939C8((uint64_t)v256, sub_1A856B460);
      sub_1A87939C8((uint64_t)v256, sub_1A856B460);
      if (!i)
      {
LABEL_129:
        sub_1A85276F0((uint64_t)&v244);
        unint64_t v2 = v215;
        break;
      }
LABEL_121:
      v5 += 184;
    }
  }
  __dst[0] = *(_OWORD *)(v2 + 1);
  *(_OWORD *)unint64_t v252 = __dst[0];
  swift_bridgeObjectRetain_n();
  sub_1A88B1AD0((uint64_t *)v252);
  swift_bridgeObjectRelease();
  return sub_1A853489C((uint64_t)__dst);
}

uint64_t sub_1A88B1690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  uint64_t v8 = a2;
  swift_bridgeObjectRetain_n();
  sub_1A88B1AD0(&v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3;
  uint64_t v8 = a4;
  swift_bridgeObjectRetain_n();
  sub_1A88B1AD0(&v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B1740(long long *a1)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  long long v35 = *a1;
  *(_OWORD *)long long __dst = v35;
  swift_bridgeObjectRetain_n();
  sub_1A88B1AD0((uint64_t *)__dst);
  swift_bridgeObjectRelease();
  sub_1A853489C((uint64_t)&v35);
  sub_1A8644F84((uint64_t)a1 + 136, (uint64_t)v45);
  sub_1A8644F84((uint64_t)v45, (uint64_t)v46);
  if (sub_1A8644FF4((uint64_t)v46) == 1)
  {
    nullsub_1(v46);
    uint64_t v3 = *((void *)v2 + 2);
    long long v37 = *v2;
    uint64_t v38 = v3;
    long long v39 = *(long long *)((char *)v2 + 24);
    long long v40 = *(long long *)((char *)v2 + 40);
    long long v41 = *(long long *)((char *)v2 + 56);
    long long v42 = *(long long *)((char *)v2 + 72);
    long long v43 = *(long long *)((char *)v2 + 88);
    long long v44 = *(long long *)((char *)v2 + 104);
    sub_1A8644F84((uint64_t)v45, (uint64_t)__dst);
    nullsub_1(__dst);
    uint64_t v5 = *(void *)(v4 + 24);
    uint64_t v6 = *(void *)(v4 + 32);
    uint64_t v7 = *(void *)(v4 + 40);
    uint64_t v8 = *(void *)(v4 + 48);
    uint64_t v9 = *(void *)(v4 + 56);
    uint64_t v10 = *(void *)(v4 + 64);
    uint64_t v11 = *(void *)(v4 + 72);
    uint64_t v34 = *(void *)(v4 + 80);
    long long v33 = *(_OWORD *)(v4 + 88);
    uint64_t v12 = *(void *)(v4 + 104);
    uint64_t v13 = *(void *)(v4 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8640D64(v5, v6, v7, v8, v9, v10, v11, v34, v33, *((uint64_t *)&v33 + 1), v12, v13);
    sub_1A88AFE04((uint64_t)&v37);
  }
  else
  {
    nullsub_1(v46);
    uint64_t v15 = v14;
    unint64_t v16 = *v14;
    uint64_t v17 = *v14 >> 62;
    if (v17)
    {
      uint64_t v18 = (void *)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      if (v17 == 1)
      {
        memcpy(__dst, v18 + 2, sizeof(__dst));
        sub_1A87939C8((uint64_t)v45, sub_1A86409B8);
        sub_1A872E2C4((uint64_t)__dst);
        sub_1A88B1740(__dst);
        sub_1A872E440((uint64_t)__dst);
      }
      else
      {
        uint64_t v24 = v18[3];
        uint64_t v25 = v18[4];
        *(void *)long long __dst = v18[2];
        *(void *)&__dst[8] = v24;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A87939C8((uint64_t)v45, sub_1A86409B8);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A88B1AD0((uint64_t *)__dst);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)long long __dst = v25;
        sub_1A8A75F88();
      }
    }
    else
    {
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v20 = *(void *)(v16 + 24);
      uint64_t v21 = *(void *)(v16 + 32);
      uint64_t v22 = *(void *)(v16 + 40);
      sub_1A8644F84((uint64_t)v45, (uint64_t)__dst);
      nullsub_1(__dst);
      sub_1A87364EC(v23);
      sub_1A88B1690(v19, v20, v21, v22);
    }
    uint64_t v26 = v15[5];
    uint64_t v27 = v15[6];
    uint64_t v28 = v15[7];
    uint64_t v29 = v15[8];
    uint64_t v31 = v15[9];
    uint64_t v30 = v15[10];
    if (v26)
    {
      *(void *)&long long v37 = v15[4];
      *((void *)&v37 + 1) = v26;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88B1AD0((uint64_t *)&v37);
      swift_bridgeObjectRelease();
    }
    if (v28)
    {
      *(void *)&long long v37 = v27;
      *((void *)&v37 + 1) = v28;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88B1AD0((uint64_t *)&v37);
      swift_bridgeObjectRelease();
    }
    if (v31)
    {
      *(void *)&long long v37 = v29;
      *((void *)&v37 + 1) = v31;
      swift_bridgeObjectRetain_n();
      sub_1A88B1AD0((uint64_t *)&v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    *(void *)&long long v37 = v30;
    sub_1A8A75F88();
  }
  sub_1A87939C8((uint64_t)v45, sub_1A856B460);
  return sub_1A8A75F88();
}

uint64_t sub_1A88B1AD0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if ((v2 & 0x1000000000000000) != 0)
  {
    uint64_t v1 = sub_1A88C65C4();
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    *a1 = v1;
    a1[1] = v5;
    if ((v5 & 0x2000000000000000) != 0) {
      return sub_1A8A75F88();
    }
  }
  else if ((v2 & 0x2000000000000000) != 0)
  {
    return sub_1A8A75F88();
  }
  if ((v1 & 0x1000000000000000) == 0) {
    sub_1A8A77E88();
  }
  return sub_1A8A75F88();
}

uint64_t sub_1A88B1B94@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[2];
  unint64_t v3 = v1[3];
  if ((int64_t)v3 >= *(void *)(v4 + 16))
  {
    uint64_t v12 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    goto LABEL_7;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v1[1];
  if (v3 >= *(void *)(v5 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = v5 + 16 * v3;
  uint64_t v8 = *(void *)(v6 + 32);
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v9 = v4 + 16 * v3;
  uint64_t v11 = *(void *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  v1[3] = v3 + 1;
  uint64_t v12 = v1[4];
  if (!__OFADD__(v12, 1))
  {
    v1[4] = v12 + 1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_7:
    *a1 = v12;
    a1[1] = v8;
    a1[2] = v7;
    a1[3] = v11;
    a1[4] = v10;
    return result;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1A88B1C5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (char **)(a2 + 16);
  Swift::UInt64 v4 = PCG32Random.next()();
  swift_beginAccess();
  uint64_t v5 = *(char **)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v5 = sub_1A890183C(0, *((void *)v5 + 2) + 1, 1, v5);
  }
  void *v3 = v5;
  uint64_t v7 = 10;
  do
  {
    char v8 = a0123456789abcd[v4 % 0x3E];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    void *v3 = v5;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1A890183C(0, *((void *)v5 + 2) + 1, 1, v5);
      uint64_t v5 = (char *)result;
      void *v3 = (char *)result;
    }
    unint64_t v11 = *((void *)v5 + 2);
    unint64_t v10 = *((void *)v5 + 3);
    if (v11 >= v10 >> 1)
    {
      uint64_t result = (uint64_t)sub_1A890183C((char *)(v10 > 1), v11 + 1, 1, v5);
      uint64_t v5 = (char *)result;
      void *v3 = (char *)result;
    }
    *((void *)v5 + 2) = v11 + 1;
    v5[v11 + 32] = v8;
    uint64_t v5 = *v3;
    v4 /= 0x3EuLL;
    --v7;
  }
  while (v7);
  return result;
}

uint64_t sub_1A88B1DBC(uint64_t result, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t result = sub_1A8A76848();
    uint64_t v3 = result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else
  {
    uint64_t v3 = result & 0xFFFFFFFFFFFFLL;
  }
  Swift::UInt64 v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v4;
    if (!isUniquelyReferenced_nonNull_native || *((void *)v4 + 3) >> 1 < v6)
    {
      if (v5 <= v6) {
        int64_t v8 = v5 + v3;
      }
      else {
        int64_t v8 = v5;
      }
      Swift::UInt64 v4 = sub_1A890183C(isUniquelyReferenced_nonNull_native, v8, 1, v4);
      *uint64_t v2 = v4;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = sub_1A8A77DD8();
    if (v9) {
      goto LABEL_22;
    }
    uint64_t v10 = result;
    uint64_t result = swift_bridgeObjectRelease_n();
    if (v10 >= v3)
    {
      if (v10 < 1)
      {
LABEL_17:
        *uint64_t v2 = v4;
        return result;
      }
      uint64_t v11 = *((void *)v4 + 2);
      BOOL v12 = __OFADD__(v11, v10);
      uint64_t v13 = v11 + v10;
      if (!v12)
      {
        *((void *)v4 + 2) = v13;
        goto LABEL_17;
      }
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t static Message.makeSparse(messageHeaders:bodyStructure:lineEnding:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, long long *a4@<X8>)
{
  uint64_t v5 = a2;
  uint64_t v87 = (long long *)a1;
  sub_1A8644F84(a2, (uint64_t)v92);
  sub_1A8644F84((uint64_t)v92, (uint64_t)v106);
  uint64_t v7 = type metadata accessor for Message(0);
  *(void *)&long long v82 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743BE8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v86 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v71 - v13;
  uint64_t v81 = sub_1A8A75FB8();
  uint64_t v83 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  unint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A8A75F48();
  uint64_t v84 = *(void *)(v17 - 8);
  uint64_t v85 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v91 = xmmword_1A8B04DF0;
  sub_1A8645080(v5, sub_1A86409B8);
  sub_1A8645080(v5, sub_1A86409B8);
  sub_1A8A75FA8();
  sub_1A8644F84(v5, (uint64_t)v94);
  BOOL v20 = sub_1A8644FF4((uint64_t)v94) == 1;
  uint64_t v77 = v9;
  uint64_t v88 = v7;
  if (v20)
  {
    nullsub_1(v94);
    long long v22 = v21[5];
    long long v99 = v21[4];
    long long v100 = v22;
    long long v101 = v21[6];
    *(void *)&long long v102 = *((void *)v21 + 14);
    long long v23 = v21[1];
    long long v95 = *v21;
    long long v96 = v23;
    long long v24 = v21[3];
    long long v97 = v21[2];
    long long v98 = v24;
    sub_1A8644F84((uint64_t)v106, (uint64_t)v93);
    nullsub_1(v93);
    uint64_t v78 = v14;
    uint64_t v26 = *(void *)(v25 + 24);
    uint64_t v27 = *(void *)(v25 + 32);
    uint64_t v74 = *(void *)(v25 + 40);
    uint64_t v75 = v27;
    unsigned int v79 = a3;
    uint64_t v80 = v5;
    uint64_t v29 = *(void *)(v25 + 48);
    uint64_t v28 = *(void *)(v25 + 56);
    uint64_t v76 = a4;
    uint64_t v31 = *(void *)(v25 + 64);
    uint64_t v30 = *(void *)(v25 + 72);
    uint64_t v72 = *(void *)(v25 + 80);
    uint64_t v73 = v30;
    long long v71 = *(_OWORD *)(v25 + 88);
    uint64_t v32 = *(void *)(v25 + 104);
    uint64_t v33 = *(void *)(v25 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v34 = v26;
    uint64_t v14 = v78;
    uint64_t v35 = v29;
    a3 = v79;
    uint64_t v36 = v28;
    uint64_t v5 = v80;
    uint64_t v37 = v31;
    a4 = v76;
    sub_1A8640D64(v34, v75, v74, v35, v36, v37, v73, v72, v71, *((uint64_t *)&v71 + 1), v32, v33);
    sub_1A88AFE04((uint64_t)&v95);
  }
  else
  {
    nullsub_1(v94);
    long long v39 = v38[9];
    long long v103 = v38[8];
    long long v104 = v39;
    long long v105 = v38[10];
    long long v40 = v38[5];
    long long v99 = v38[4];
    long long v100 = v40;
    long long v41 = v38[6];
    long long v102 = v38[7];
    long long v101 = v41;
    long long v42 = v38[1];
    long long v95 = *v38;
    long long v96 = v42;
    long long v43 = v38[3];
    long long v97 = v38[2];
    long long v98 = v43;
    sub_1A8644F84((uint64_t)v106, (uint64_t)v93);
    nullsub_1(v93);
    sub_1A87364EC(v44);
    sub_1A88AFB9C((uint64_t)&v95);
  }
  sub_1A8645080(v5, sub_1A856B460);
  uint64_t v45 = v81;
  uint64_t v46 = v82;
  sub_1A8A75F98();
  sub_1A8645080(v5, sub_1A856B460);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v16, v45);
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97475E8);
  sub_1A8A75F38();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v19, v85);
  sub_1A8645080(v5, sub_1A856B460);
  long long v90 = v93[0];
  sub_1A88B2614((uint64_t)v87, (uint64_t)v14);
  uint64_t v47 = v88;
  uint64_t v48 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v14, 0, 1, v88);
  uint64_t v87 = &v71;
  MEMORY[0x1F4188790](v48);
  uint64_t v69 = (uint64_t (*)(uint64_t, uint64_t))&v91;
  uint64_t v49 = v86;
  sub_1A88B26E0((uint64_t)v14, v86);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v49, 1, v47) == 1)
  {
    sub_1A88B3334(v49);
    uint64_t v50 = sub_1A88B2B20(a3, (uint64_t)&v90, v5, (uint64_t)&v91);
  }
  else
  {
    uint64_t v51 = (uint64_t)v77;
    uint64_t v52 = sub_1A88B3EC0(v49, (uint64_t)v77);
    MEMORY[0x1F4188790](v52);
    *((unsigned char *)&v71 - 48) = 3;
    *((void *)&v71 - 5) = v5;
    char v67 = a3;
    uint64_t v68 = &v90;
    uint64_t v69 = sub_1A88B26D8;
    uint64_t v70 = &v67;
    uint64_t v50 = (uint64_t)sub_1A88E452C(v51, (void *(*)(uint64_t *__return_ptr, void))sub_1A88B3F24, (void *)&v71 - 8);
    sub_1A88B8F94(v51);
  }
  sub_1A8644F84(v5, (uint64_t)v93);
  int v53 = sub_1A8644FF4((uint64_t)v93);
  nullsub_1(v93);
  if (v53 != 1) {
    goto LABEL_10;
  }
  if (v50)
  {
    uint64_t v88 = *v54;
    sub_1A8644F84((uint64_t)v106, (uint64_t)v89);
    nullsub_1(v89);
    uint64_t v56 = *(void *)(v55 + 24);
    uint64_t v85 = *(void *)(v55 + 32);
    uint64_t v86 = v56;
    unsigned int v79 = a3;
    uint64_t v57 = *(void *)(v55 + 40);
    uint64_t v58 = *(void *)(v55 + 48);
    uint64_t v78 = v14;
    uint64_t v59 = *(void *)(v55 + 56);
    uint64_t v60 = *(void *)(v55 + 64);
    uint64_t v61 = *(void *)(v55 + 72);
    uint64_t v83 = *(void *)(v55 + 80);
    uint64_t v84 = v61;
    long long v82 = *(_OWORD *)(v55 + 88);
    uint64_t v80 = v5;
    uint64_t v62 = a4;
    uint64_t v63 = *(void *)(v55 + 104);
    uint64_t v64 = *(void *)(v55 + 112);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v70 = (char *)v64;
    a4 = v62;
    uint64_t v65 = v59;
    uint64_t v14 = v78;
    sub_1A8640D64(v86, v85, v57, v58, v65, v60, v84, v83, v82, *((uint64_t *)&v82 + 1), v63, (uint64_t)v70);
    sub_1A88B3780(v79, v88, v50, (uint64_t)&v90, (uint64_t)&v91);
    sub_1A8645080(v80, sub_1A856B460);
LABEL_10:
    swift_bridgeObjectRelease();
  }
  sub_1A88B3334((uint64_t)v14);
  *a4 = v91;
  type metadata accessor for Message.Data(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A88B2614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88B2678(uint64_t a1, uint64_t a2)
{
  v3[3] = MEMORY[0x1E4FBB2B8];
  v3[4] = MEMORY[0x1E4F27EF0];
  v3[0] = a1;
  v3[1] = a2;
  __swift_project_boxed_opaque_existential_1_0(v3, MEMORY[0x1E4FBB2B8]);
  sub_1A8A74A28();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_1A88B26D8(uint64_t a1, uint64_t a2)
{
  return sub_1A88B2678(a1, a2);
}

uint64_t sub_1A88B26E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BodyStructure.containsMultipartPartWithMissingBoundary.getter()
{
  uint64_t v1 = v0;
  sub_1A8644F84(v0, (uint64_t)v18);
  int v2 = sub_1A8644FF4((uint64_t)v18);
  nullsub_1(v18);
  if (v2 != 1) {
    return 0;
  }
  long long v4 = *v3;
  long long v5 = v3[1];
  long long v6 = v3[3];
  void v19[2] = v3[2];
  v19[3] = v6;
  v19[0] = v4;
  v19[1] = v5;
  long long v7 = v3[4];
  long long v8 = v3[5];
  long long v9 = v3[6];
  uint64_t v20 = *((void *)v3 + 14);
  v19[5] = v8;
  v19[6] = v9;
  v19[4] = v7;
  sub_1A88B8FF0((uint64_t)v19);
  uint64_t v10 = sub_1A88B2900();
  uint64_t v12 = v11;
  sub_1A85C32FC(v10, v11);
  if (v12)
  {
    uint64_t v21 = *(void *)&v19[0];
    uint64_t v13 = *(void *)(*(void *)&v19[0] + 16);
    if (!v13)
    {
      sub_1A8645080(v1, sub_1A856B460);
      return 0;
    }
    uint64_t v14 = *(void *)&v19[0] + 32;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    while (1)
    {
      sub_1A8644F84(v14, (uint64_t)v22);
      uint64_t v15 = sub_1A8645080((uint64_t)v22, sub_1A86409B8);
      char v16 = BodyStructure.containsMultipartPartWithMissingBoundary.getter(v15);
      sub_1A8645080((uint64_t)v22, sub_1A856B460);
      if (v16) {
        break;
      }
      v14 += 184;
      if (!--v13)
      {
        sub_1A8645080(v1, sub_1A856B460);
        sub_1A85276F0((uint64_t)&v21);
        return 0;
      }
    }
    sub_1A8645080(v1, sub_1A856B460);
    sub_1A85276F0((uint64_t)&v21);
  }
  else
  {
    sub_1A8645080(v1, sub_1A856B460);
  }
  return 1;
}

uint64_t sub_1A88B2900()
{
  sub_1A8529F8C(v0 + 24, (uint64_t)v12, &qword_1E9741820);
  sub_1A8529F8C((uint64_t)v12, (uint64_t)&v13, &qword_1E9741820);
  if (*((void *)&v13 + 1) && (uint64_t v1 = v14, v15 = v14, (v2 = *(void *)(v14 + 16)) != 0))
  {
    long long v16 = v13;
    sub_1A8529F8C((uint64_t)&v16, (uint64_t)v18, &qword_1E9743288);
    uint64_t v3 = *((void *)&v16 + 1);
    uint64_t v17 = *((void *)&v16 + 1);
    uint64_t v4 = *(void *)(*((void *)&v16 + 1) + 16);
    sub_1A858B1E0((uint64_t)v18);
    sub_1A858B1E0((uint64_t)&v17);
    sub_1A858B1E0((uint64_t)&v15);
    sub_1A858B1E0((uint64_t)v18);
    sub_1A858B1E0((uint64_t)&v17);
    uint64_t result = sub_1A858B1E0((uint64_t)&v15);
    uint64_t v6 = v3 + 40;
    uint64_t v7 = v1 + 40;
    while (v4)
    {
      uint64_t v8 = *(void *)(v6 - 8);
      if (sub_1A8A76618() == 0x797261646E756F62 && v9 == 0xE800000000000000)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
LABEL_14:
        sub_1A858B20C((uint64_t)v18);
        sub_1A858B20C((uint64_t)&v17);
        sub_1A858B20C((uint64_t)&v15);
        sub_1A858B20C((uint64_t)v18);
        sub_1A858B20C((uint64_t)&v17);
        sub_1A858B20C((uint64_t)&v15);
        return v8;
      }
      char v11 = sub_1A8A78588();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      --v4;
      v6 += 16;
      v7 += 16;
      if (!--v2)
      {
        sub_1A858B20C((uint64_t)v18);
        sub_1A858B20C((uint64_t)&v17);
        sub_1A858B20C((uint64_t)&v15);
        sub_1A858B20C((uint64_t)v18);
        sub_1A858B20C((uint64_t)&v17);
        sub_1A858B20C((uint64_t)&v15);
        return 0;
      }
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1A88B2B20(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A8644F84(a3, (uint64_t)v61);
  sub_1A8644F84((uint64_t)v61, (uint64_t)v102);
  uint64_t v60 = a4;
  sub_1A8645080(a3, sub_1A86409B8);
  uint64_t v8 = sub_1A88BA720((unint64_t)"Content-Type", 12, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v59, a3, (uint64_t (*)(char *, char *))sub_1A88BB018, (uint64_t)v59, a2);
  sub_1A8645080(a3, sub_1A856B460);
  sub_1A8644F84(a3, (uint64_t)v77);
  if (sub_1A8644FF4((uint64_t)v77) == 1)
  {
    nullsub_1(v77);
    sub_1A8644F84((uint64_t)v102, (uint64_t)v76);
    nullsub_1(v76);
    if (!v9[4]) {
      goto LABEL_20;
    }
    uint64_t v10 = v9[9];
    uint64_t v11 = v9[10];
    unint64_t v12 = v9[7];
    uint64_t v13 = v9[8];
    uint64_t v14 = v9[6];
LABEL_13:
    if (v12 >= 2)
    {
      v90[0] = v14;
      v90[1] = v12;
      v90[2] = v13;
      v90[3] = v10;
      v90[4] = v11;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1A88B4310((unint64_t)"Content-Disposition", 19, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v59, (uint64_t (*)(char *, char *))sub_1A88BB018, (uint64_t)v59, (uint64_t)v90);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    sub_1A8644F84(a3, (uint64_t)v76);
    int v27 = sub_1A8644FF4((uint64_t)v76);
    nullsub_1(v76);
    if (v27 == 1) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  nullsub_1(v77);
  long long v16 = v15[9];
  long long v81 = v15[8];
  long long v82 = v16;
  long long v83 = v15[10];
  long long v17 = v15[5];
  *(_OWORD *)&v78[64] = v15[4];
  *(_OWORD *)&v78[80] = v17;
  long long v18 = v15[6];
  long long v80 = v15[7];
  long long v79 = v18;
  long long v19 = v15[1];
  *(_OWORD *)uint64_t v78 = *v15;
  *(_OWORD *)&v78[16] = v19;
  long long v20 = v15[2];
  *(_OWORD *)&v78[48] = v15[3];
  *(_OWORD *)&v78[32] = v20;
  v87[0] = *(_OWORD *)&v78[56];
  long long v86 = *(_OWORD *)&v78[40];
  v87[1] = *(_OWORD *)&v78[72];
  long long v85 = *(_OWORD *)&v78[24];
  long long v84 = *(_OWORD *)&v78[8];
  sub_1A8529F8C((uint64_t)v87 + 8, (uint64_t)v88, &qword_1E9741810);
  sub_1A8529F8C((uint64_t)v88, (uint64_t)&v100, &qword_1E9741810);
  uint64_t v21 = v101;
  if (v101)
  {
    uint64_t v22 = v100;
    if (v22 == sub_1A8A76638() && v23 == v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v24 = sub_1A8A78588();
      sub_1A8645080(a3, sub_1A86409B8);
      sub_1A8561B38((uint64_t)v88);
      swift_bridgeObjectRelease();
      if (v24)
      {
        sub_1A853489C((uint64_t)v88);
        sub_1A8645080(a3, sub_1A856B460);
      }
      else
      {
        sub_1A8561B38((uint64_t)v88);
        sub_1A88B4208((unint64_t)"Content-Transfer-Encoding", 25, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v59, (uint64_t)sub_1A88BB018, (uint64_t)v59, v22, v21);
        sub_1A8645080(a3, sub_1A856B460);
        sub_1A853489C((uint64_t)v88);
      }
    }
  }
  sub_1A8644F84((uint64_t)v102, (uint64_t)v76);
  nullsub_1(v76);
  uint64_t v14 = v25[13];
  unint64_t v12 = v25[14];
  uint64_t v13 = v25[15];
  uint64_t v10 = v25[16];
  uint64_t v11 = v25[17];
  if (v25[12] != 1) {
    goto LABEL_13;
  }
  sub_1A8644F84((uint64_t)v102, (uint64_t)v76);
  nullsub_1(v76);
LABEL_16:
  uint64_t v29 = *(void *)(v26 + 32);
  uint64_t v28 = *(void *)(v26 + 40);
  if (v28)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8645080(a3, sub_1A86409B8);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88B446C((unint64_t)"Content-ID", 10, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v59, (uint64_t)sub_1A88BB018, (uint64_t)v59, v29, v28);
    sub_1A8645080(a3, sub_1A856B460);
    swift_bridgeObjectRelease();
    sub_1A8644F84(a3, (uint64_t)v75);
    int v30 = sub_1A8644FF4((uint64_t)v75);
    nullsub_1(v75);
    if (v30 != 1)
    {
      uint64_t v33 = *(void *)(v31 + 48);
      unint64_t v32 = *(void *)(v31 + 56);
      if (v32) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    sub_1A8644F84((uint64_t)v102, (uint64_t)v75);
    nullsub_1(v75);
    uint64_t v33 = *(void *)(v58 + 48);
    unint64_t v32 = *(void *)(v58 + 56);
    if (v32)
    {
LABEL_19:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8645080(a3, sub_1A86409B8);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88B458C((unint64_t)"Content-Description", 19, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v59, v33, v32, (uint64_t (*)(char *, char *))sub_1A88BB018, (uint64_t)v59);
      sub_1A8645080(a3, sub_1A856B460);
      swift_bridgeObjectRelease();
    }
  }
LABEL_20:
  sub_1A88B3590(a1, a3, a4);
  sub_1A8644F84(a3, (uint64_t)v63);
  int v34 = sub_1A8644FF4((uint64_t)v63);
  nullsub_1(v63);
  if (v34 == 1)
  {
    long long v36 = *v35;
    long long v37 = v35[1];
    long long v38 = v35[3];
    long long v66 = v35[2];
    long long v67 = v38;
    long long v64 = v36;
    long long v65 = v37;
    long long v39 = v35[4];
    long long v40 = v35[5];
    long long v41 = v35[6];
    *(void *)&long long v71 = *((void *)v35 + 14);
    long long v69 = v40;
    long long v70 = v41;
    long long v68 = v39;
    sub_1A8529F8C((uint64_t)&v65 + 8, (uint64_t)v89, &qword_1E9741820);
    sub_1A8529F8C((uint64_t)v89, (uint64_t)v91, &qword_1E9741820);
    if (!v92) {
      goto LABEL_34;
    }
    uint64_t v42 = v96;
    long long v43 = &v99;
    uint64_t v44 = v97;
    unint64_t v45 = v98;
    if (v94 == 1) {
      goto LABEL_31;
    }
LABEL_27:
    if (v42)
    {
      uint64_t v55 = *v43;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8640D20(v44, v45, v55);
      swift_bridgeObjectRelease();
      if (v55)
      {
        swift_bridgeObjectRelease();
        if (v45)
        {
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A88B458C((unint64_t)"Content-Location", 16, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v59, v44, v45, (uint64_t (*)(char *, char *))sub_1A88BB018, (uint64_t)v59);
          swift_bridgeObjectRelease();
        }
      }
    }
LABEL_31:
    sub_1A8644F84(a3, (uint64_t)v62);
    int v56 = sub_1A8644FF4((uint64_t)v62);
    nullsub_1(v62);
    if (v56 == 1) {
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  long long v46 = *v35;
  long long v47 = v35[2];
  long long v65 = v35[1];
  long long v66 = v47;
  long long v64 = v46;
  long long v48 = v35[3];
  long long v49 = v35[4];
  long long v50 = v35[6];
  long long v69 = v35[5];
  long long v70 = v50;
  long long v67 = v48;
  long long v68 = v49;
  long long v51 = v35[7];
  long long v52 = v35[8];
  long long v53 = v35[10];
  long long v73 = v35[9];
  long long v74 = v53;
  long long v71 = v51;
  long long v72 = v52;
  sub_1A8529F8C((uint64_t)&v69 + 8, (uint64_t)v89, &qword_1E97417C8);
  sub_1A8529F8C((uint64_t)v89, (uint64_t)v91, &qword_1E97417C8);
  if (v92 != 1)
  {
    uint64_t v42 = v95;
    long long v43 = (uint64_t *)&v98;
    uint64_t v44 = v96;
    unint64_t v45 = v97;
    if (v93 == 1) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }
  sub_1A8644F84((uint64_t)v102, (uint64_t)v62);
  nullsub_1(v62);
LABEL_32:
  if (*(uint64_t *)(v54 + 80) >= 1)
  {
    sub_1A8645080(a3, sub_1A86409B8);
    sub_1A88B466C((unint64_t)"X-Apple-Content-Length", 22, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v59, (uint64_t)sub_1A88BB018, (uint64_t)v59);
    sub_1A8645080(a3, sub_1A856B460);
  }
LABEL_34:
  sub_1A88DA44C(a1);
  return v8;
}

uint64_t sub_1A88B3334(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743BE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A88B3394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, void (*a10)(uint64_t, char *), uint64_t a11)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  sub_1A88DC9C0(a5, a1, a2, a3);
  if (v19) {
    uint64_t v20 = a2;
  }
  else {
    uint64_t v20 = v18;
  }
  sub_1A88E7008(a5, a1, a2, a3, a4, v20);
  unsigned int v31 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1A8644F84(a6, (uint64_t)v35);
  BOOL v28 = sub_1A8644FF4((uint64_t)v35) != 1;
  nullsub_1(v35);
  uint64_t v34 = 0;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = &v34;
  sub_1A8645080(a6, sub_1A86409B8);
  sub_1A88F466C(a7, v28, 1, (void (*)(void))sub_1A88BAD00, v29, a10, a11, v31, v23, v25, v27, a6, a7, a8, (uint64_t (*)(unint64_t, unint64_t))a10, a11);
  sub_1A8645080(a6, sub_1A856B460);
  uint64_t result = swift_release();
  *a9 = v34;
  return result;
}

uint64_t sub_1A88B3554(uint64_t a1, void *a2)
{
  *a2 = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B3590(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  sub_1A8644F84(a2, (uint64_t)v28);
  int v4 = sub_1A8644FF4((uint64_t)v28);
  nullsub_1(v28);
  if (v4 == 1)
  {
    long long v6 = *v5;
    long long v7 = v5[1];
    long long v8 = v5[3];
    long long v31 = v5[2];
    long long v32 = v8;
    long long v29 = v6;
    long long v30 = v7;
    long long v9 = v5[4];
    long long v10 = v5[5];
    long long v11 = v5[6];
    *(void *)&long long v36 = *((void *)v5 + 14);
    long long v34 = v10;
    long long v35 = v11;
    long long v33 = v9;
    sub_1A8529F8C((uint64_t)&v30 + 8, (uint64_t)v40, &qword_1E9741820);
    uint64_t result = sub_1A8529F8C((uint64_t)v40, (uint64_t)v41, &qword_1E9741820);
    if (!v42) {
      return result;
    }
    uint64_t v13 = v46;
    uint64_t v14 = v47;
    uint64_t v15 = &v49;
    uint64_t v16 = v48;
    if (v44 == 1) {
      return result;
    }
  }
  else
  {
    long long v17 = *v5;
    long long v18 = v5[2];
    long long v30 = v5[1];
    long long v31 = v18;
    long long v29 = v17;
    long long v19 = v5[3];
    long long v20 = v5[4];
    long long v21 = v5[6];
    long long v34 = v5[5];
    long long v35 = v21;
    long long v32 = v19;
    long long v33 = v20;
    long long v22 = v5[7];
    long long v23 = v5[8];
    long long v24 = v5[10];
    long long v38 = v5[9];
    long long v39 = v24;
    long long v36 = v22;
    long long v37 = v23;
    sub_1A8529F8C((uint64_t)&v34 + 8, (uint64_t)v40, &qword_1E97417C8);
    uint64_t result = sub_1A8529F8C((uint64_t)v40, (uint64_t)v41, &qword_1E97417C8);
    if (v42 == 1) {
      return result;
    }
    uint64_t v13 = v45;
    uint64_t v14 = (uint64_t)v46;
    uint64_t v15 = &v48;
    uint64_t v16 = v47;
    if (v43 == 1) {
      return result;
    }
  }
  if (v13)
  {
    uint64_t v25 = *v15;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8640D20(v14, v16, v25);
    sub_1A856B7C8(v14, v16, v25);
    if (v13[2])
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88B4128((unint64_t)"Content-Language", 16, 2, a1, (uint64_t (*)(unint64_t, unint64_t))sub_1A88BB018, (uint64_t)v26, v13, (uint64_t (*)(char *, char *))sub_1A88BB018, (uint64_t)v26);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1A88B3780(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a4;
  v77[23] = *MEMORY[0x1E4F143B8];
  uint64_t v64 = type metadata accessor for Message(0);
  uint64_t v9 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v47 = (uint64_t)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743BE8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v67 = (uint64_t)v45 - v15;
  v70[2] = a5;
  uint64_t v63 = *(void *)(a2 + 16);
  if (v63)
  {
    unsigned int v66 = a1;
    uint64_t v16 = *(void *)(a3 + 16);
    uint64_t v62 = a2 + 32;
    v45[1] = a2;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v68 = 0;
    uint64_t v60 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v61 = 0;
    uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v17 = MEMORY[0x1E4FBB2B8];
    uint64_t v18 = MEMORY[0x1E4F27EF0];
    long long v46 = v13;
    do
    {
      uint64_t v20 = v68;
      uint64_t v21 = v62 + 184 * v68;
      sub_1A8644F84(v21, (uint64_t)v76);
      sub_1A8644F84(v21, (uint64_t)v75);
      if (v20)
      {
        unsigned int v22 = v66;
        if ((_BYTE)v66)
        {
          if (v66 == 1) {
            char v23 = 13;
          }
          else {
            char v23 = 10;
          }
          char v69 = v23;
          uint64_t v73 = v17;
          uint64_t v74 = v18;
          long long v71 = &v69;
          long long v72 = (char *)v70;
        }
        else
        {
          uint64_t v73 = v17;
          uint64_t v74 = v18;
          long long v71 = "\r\n";
          long long v72 = "";
        }
        __swift_project_boxed_opaque_existential_1_0(&v71, v17);
        sub_1A8645080((uint64_t)v76, sub_1A86409B8);
        uint64_t v18 = MEMORY[0x1E4F27EF0];
        sub_1A8A74A28();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      }
      else
      {
        sub_1A8645080((uint64_t)v76, sub_1A86409B8);
        unsigned int v22 = v66;
      }
      uint64_t v73 = v17;
      uint64_t v74 = v18;
      long long v71 = "--";
      long long v72 = "";
      __swift_project_boxed_opaque_existential_1_0(&v71, v17);
      sub_1A8A74A28();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      if (v16)
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        for (uint64_t i = 0; i != v16; ++i)
        {
          if (*(unsigned __int8 *)(a3 + i + 32) - 127 > 0xFFFFFFA0)
          {
            char v69 = *(unsigned char *)(a3 + i + 32);
            uint64_t v73 = v17;
            uint64_t v74 = v18;
            long long v71 = &v69;
            long long v72 = (char *)v70;
            __swift_project_boxed_opaque_existential_1_0(&v71, v17);
            sub_1A8A74A28();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
          }
        }
        swift_bridgeObjectRelease();
      }
      if ((_BYTE)v22)
      {
        if (v22 == 1) {
          char v25 = 13;
        }
        else {
          char v25 = 10;
        }
        char v69 = v25;
        uint64_t v73 = v17;
        uint64_t v74 = v18;
        long long v71 = &v69;
        long long v72 = (char *)v70;
      }
      else
      {
        uint64_t v73 = v17;
        uint64_t v74 = v18;
        long long v71 = "\r\n";
        long long v72 = "";
      }
      __swift_project_boxed_opaque_existential_1_0(&v71, v17);
      sub_1A8A74A28();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      uint64_t v26 = v67;
      uint64_t v27 = v64;
      (*v60)(v67, 1, 1, v64);
      sub_1A88B26E0(v26, (uint64_t)v13);
      if ((*v59)(v13, 1, v27) == 1)
      {
        sub_1A88B3334((uint64_t)v13);
        uint64_t v28 = sub_1A88B2B20(v22, v65, (uint64_t)v76, a5);
      }
      else
      {
        uint64_t v29 = (uint64_t)v13;
        uint64_t v30 = v47;
        sub_1A88B3EC0(v29, v47);
        sub_1A8645080((uint64_t)v76, sub_1A86409B8);
        uint64_t v31 = v61;
        uint64_t v28 = sub_1A88E4C10(v30, 3, (uint64_t)v76, v22, v65, (void (*)(uint64_t, char *))sub_1A88BB018, (uint64_t)v70);
        uint64_t v61 = v31;
        sub_1A8645080((uint64_t)v76, sub_1A856B460);
        uint64_t v32 = v30;
        uint64_t v13 = v46;
        sub_1A88B8F94(v32);
      }
      sub_1A8644F84((uint64_t)v76, (uint64_t)v77);
      int v33 = sub_1A8644FF4((uint64_t)v77);
      nullsub_1(v77);
      if (v33 == 1)
      {
        if (v28)
        {
          uint64_t v58 = *v34;
          sub_1A8644F84((uint64_t)v75, (uint64_t)&v71);
          nullsub_1(&v71);
          uint64_t v36 = *(void *)(v35 + 16);
          uint64_t v37 = *(void *)(v35 + 24);
          uint64_t v56 = *(void *)(v35 + 32);
          uint64_t v57 = v37;
          uint64_t v38 = *(void *)(v35 + 40);
          uint64_t v54 = *(void *)(v35 + 48);
          uint64_t v55 = v38;
          uint64_t v39 = *(void *)(v35 + 56);
          uint64_t v52 = *(void *)(v35 + 64);
          uint64_t v53 = v39;
          uint64_t v51 = *(void *)(v35 + 72);
          uint64_t v40 = *(void *)(v35 + 80);
          uint64_t v49 = v36;
          uint64_t v50 = v40;
          long long v48 = *(_OWORD *)(v35 + 88);
          uint64_t v42 = *(void *)(v35 + 104);
          uint64_t v41 = *(void *)(v35 + 112);
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          sub_1A8640D64(v57, v56, v55, v54, v53, v52, v51, v50, v48, *((uint64_t *)&v48 + 1), v42, v41);
          sub_1A88B3780(v66, v58, v28, v65, a5);
          sub_1A8645080((uint64_t)v76, sub_1A856B460);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1A8645080((uint64_t)v76, sub_1A856B460);
      uint64_t v19 = v68 + 1;
      sub_1A88B3334(v67);
      uint64_t v68 = v19;
      uint64_t v18 = MEMORY[0x1E4F27EF0];
    }
    while (v19 != v63);
    swift_bridgeObjectRelease();
    char v43 = v66;
    sub_1A88DA44C(v66);
    uint64_t v73 = v17;
    uint64_t v74 = v18;
    long long v71 = "--";
    long long v72 = "";
    __swift_project_boxed_opaque_existential_1_0(&v71, v17);
    sub_1A8A74A28();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    if (v16)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      for (uint64_t j = 0; j != v16; ++j)
      {
        if (*(unsigned __int8 *)(a3 + j + 32) - 127 > 0xFFFFFFA0)
        {
          char v69 = *(unsigned char *)(a3 + j + 32);
          uint64_t v73 = v17;
          uint64_t v74 = MEMORY[0x1E4F27EF0];
          long long v71 = &v69;
          long long v72 = (char *)v70;
          __swift_project_boxed_opaque_existential_1_0(&v71, v17);
          sub_1A8A74A28();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x1E4F27EF0];
    }
    uint64_t v73 = v17;
    uint64_t v74 = v18;
    long long v71 = "--";
    long long v72 = "";
    __swift_project_boxed_opaque_existential_1_0(&v71, v17);
    sub_1A8A74A28();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    sub_1A88DA44C(v43);
  }
}

uint64_t sub_1A88B3EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Message(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88B3F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1A88B3394(a1, a2, a3, a4, *(unsigned __int8 *)(v5 + 16), *(void *)(v5 + 24), *(unsigned __int8 *)(v5 + 32), *(void *)(v5 + 40), a5, *(void (**)(uint64_t, char *))(v5 + 48), *(void *)(v5 + 56));
}

uint64_t sub_1A88B3F5C(uint64_t a1, unint64_t a2, uint64_t (*a3)(char *, char *), uint64_t a4)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  v13[2] = a1;
  v13[3] = a2;
  void v13[4] = 0;
  v13[5] = v7;
  __int16 v14 = 256;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  do
  {
    while (1)
    {
      uint64_t isStackAllocationSafe = sub_1A8A76778();
      if (isStackAllocationSafe < 0) {
        __break(1u);
      }
      uint64_t v10 = isStackAllocationSafe;
      if (isStackAllocationSafe >= 1025)
      {
        uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
        if ((isStackAllocationSafe & 1) == 0) {
          break;
        }
      }
      MEMORY[0x1F4188790](isStackAllocationSafe);
      sub_1A88B5CE0((uint64_t)v13 - v8, (uint64_t)v13 + v10 - v8, 0, v4, a3, a4, (char *)&v14);
      if ((v14 & 0x100) != 0) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v11 = swift_slowAlloc();
    sub_1A88B5CE0(v11, v11 + v10, 0, v4, a3, a4, (char *)&v14);
    MEMORY[0x1AD0E4D00](v11, -1, -1);
  }
  while ((v14 & 0x100) == 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B4128(unint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(unint64_t, unint64_t), uint64_t a6, void *a7, uint64_t (*a8)(char *, char *), uint64_t a9)
{
  v16[0] = a4;
  sub_1A88B909C(a1, a2, a3, a5);
  uint64_t result = a5((unint64_t)": ", (unint64_t)"");
  if (a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (__OFADD__(a2, 2))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 + 2;
  sub_1A88B4CE0((uint64_t)v16, a7, a8, a9);
  sub_1A88DA520(a4, (uint64_t (*)(char *, char *))a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B4208(unint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(unint64_t, unint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v17[0] = a4;
  sub_1A88B909C(a1, a2, a3, a5);
  uint64_t result = a5((unint64_t)": ", (unint64_t)"");
  if (a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (__OFADD__(a2, 2))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v18 = a2 + 2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88BAD40(a7, a8, 160, 0, (uint64_t)v17, a9, a10, (void (*)(char *, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A88B6B84);
  swift_bridgeObjectRelease();
  sub_1A88DA520(a4, (uint64_t (*)(char *, char *))a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B4310(unint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(unint64_t, unint64_t), uint64_t a6, uint64_t (*a7)(char *, char *), uint64_t a8, uint64_t a9)
{
  v19[0] = a4;
  sub_1A88B909C(a1, a2, a3, a5);
  uint64_t result = a5((unint64_t)": ", (unint64_t)"");
  if (a3)
  {
    __break(1u);
  }
  else if (!__OFADD__(a2, 2))
  {
    uint64_t v20 = a2 + 2;
    long long v21 = *(_OWORD *)a9;
    uint64_t v16 = *(void *)(a9 + 16);
    uint64_t v17 = *(void *)(a9 + 24);
    uint64_t v18 = *(void *)(a9 + 32);
    sub_1A8561B38((uint64_t)&v21);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A88BA7E0(a7, a8, 160, 0, (uint64_t)v19, a9);
    sub_1A853489C((uint64_t)&v21);
    swift_release();
    swift_release();
    swift_release();
    sub_1A88B48F4(v16, v17, v18, a7, a8);
    sub_1A88DA520(a4, (uint64_t (*)(char *, char *))a5);
    sub_1A853489C((uint64_t)&v21);
    swift_release();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88B446C(unint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(unint64_t, unint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v18[0] = a4;
  sub_1A88B909C(a1, a2, a3, a5);
  uint64_t result = a5((unint64_t)": ", (unint64_t)"");
  if (a3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFADD__(a2, 2))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = a2 + 2;
  uint64_t result = sub_1A8A76778();
  uint64_t v17 = result + 2;
  if (__OFADD__(result, 2))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88BAD40(a7, a8, v17, 0, (uint64_t)v18, a9, a10, (void (*)(char *, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A88B6688);
  swift_bridgeObjectRelease();
  sub_1A88DA520(a4, (uint64_t (*)(char *, char *))a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B458C(unint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(unint64_t, unint64_t), uint64_t a6, uint64_t a7, unint64_t a8, uint64_t (*a9)(char *, char *), uint64_t a10)
{
  sub_1A88B909C(a1, a2, a3, a5);
  uint64_t result = a5((unint64_t)": ", (unint64_t)"");
  if (a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (__OFADD__(a2, 2))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1A88B3F5C(a7, a8, a9, a10);
  sub_1A88DA520(a4, (uint64_t (*)(char *, char *))a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B466C(unint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(unint64_t, unint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  v15[0] = a4;
  sub_1A88B909C(a1, a2, a3, a5);
  uint64_t result = a5((unint64_t)": ", (unint64_t)"");
  if (a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (__OFADD__(a2, 2))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 + 2;
  sub_1A88B473C(a7, a8, 70, 0, (uint64_t)v15);
  return sub_1A88DA520(a4, (uint64_t (*)(char *, char *))a5);
}

uint64_t *sub_1A88B473C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_10:
    __break(1u);
  }
  if (v6 < 0) {
    goto LABEL_10;
  }
  uint64_t v8 = (uint64_t (*)(char *, char *))isStackAllocationSafe;
  if (v6 >= 1025)
  {
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      uint64_t v11 = swift_slowAlloc();
      sub_1A88B774C(v11, v11 + v6, a4 & 1, a5, v8);
      JUMPOUT(0x1AD0E4D00);
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  return sub_1A88B774C((uint64_t)v12 - v9, (uint64_t)v12 + v6 - v9, a4 & 1, a5, v8);
}

uint64_t sub_1A88B48F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v31 = a4;
  uint64_t v5 = a3;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  uint64_t v43 = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A88B1B94(v46);
  sub_1A8529F8C((uint64_t)v46, (uint64_t)v47, &qword_1E9747028);
  unint64_t v6 = v48;
  if (v48)
  {
    uint64_t v30 = v5;
    do
    {
      uint64_t v10 = v47[0] + 1;
      if (__OFADD__(v47[0], 1)) {
        goto LABEL_17;
      }
      uint64_t v11 = v47[1];
      uint64_t v13 = v49;
      uint64_t v12 = v50;
      uint64_t v14 = *(void *)(v5 + 16);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t v15 = sub_1A88B7AC4(v11, v6, v13, v12, v10 == v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15 <= 78)
      {
        BOOL v7 = v10 == v14;
        unint64_t v8 = v12;
        char v9 = v7;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A88B99C8(v31, v32, 160, 1, v33, v11, v6, v13, v8, v9);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        uint64_t v16 = sub_1A8A76968();
        unint64_t v18 = v17;
        uint64_t v20 = v19;
        uint64_t v22 = v21;
        swift_bridgeObjectRelease();
        uint64_t v37 = v16;
        unint64_t v38 = v18;
        uint64_t v39 = v20;
        uint64_t v40 = v22;
        if ((v16 ^ v18) >= 0x4000)
        {
          void v29[2] = v12;
          uint64_t v23 = 0;
          while (1)
          {
            uint64_t v35 = v11;
            unint64_t v36 = v6;
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A8A767E8();
            uint64_t v34 = v23;
            sub_1A8A784D8();
            sub_1A8A767E8();
            swift_bridgeObjectRelease();
            uint64_t v24 = v35;
            unint64_t v25 = v36;
            uint64_t v35 = 77;
            uint64_t v26 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            MEMORY[0x1F4188790](v26);
            sub_1A88B5EE0((uint64_t)&v28, (uint64_t)v29 + 1, 1, v33, v31, v32, &v35, v24, v25, (unint64_t *)&v37, v10 == v14);
            swift_bridgeObjectRelease();
            if (__OFADD__(v23, 1)) {
              break;
            }
            ++v23;
            if (!((v38 ^ v37) >> 14)) {
              goto LABEL_14;
            }
          }
          __break(1u);
LABEL_17:
          __break(1u);
        }
LABEL_14:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = v30;
        swift_bridgeObjectRelease();
      }
      sub_1A88B1B94(v46);
      sub_1A8529F8C((uint64_t)v46, (uint64_t)v47, &qword_1E9747028);
      unint64_t v6 = v48;
    }
    while (v48);
  }
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1A88B4CE0(uint64_t a1, void *a2, uint64_t (*a3)(char *, char *), uint64_t a4)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a2[2];
  if (v4)
  {
    uint64_t v9 = a2[5];
    uint64_t v19 = a2[4];
    swift_bridgeObjectRetain_n();
    uint64_t v20 = a2;
    uint64_t v10 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    MEMORY[0x1F4188790](v10);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v21 = a1;
    uint64_t v22 = a3;
    sub_1A88B68F8((uint64_t)&v17, (uint64_t)&v19, 0, a1, a3, a4, v19, v9, v4 == 1);
    swift_bridgeObjectRelease_n();
    uint64_t v11 = v4 - 1;
    if (v11)
    {
      uint64_t v12 = v20 + 7;
      do
      {
        uint64_t v13 = *(v12 - 1);
        uint64_t v14 = *v12;
        uint64_t v15 = swift_bridgeObjectRetain_n();
        MEMORY[0x1F4188790](v15);
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A88B68F8((uint64_t)v16, (uint64_t)v18, 1, v21, v22, a4, v13, v14, v11 == 1);
        v12 += 2;
        swift_bridgeObjectRelease_n();
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A88B4EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(char *, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8 = a2;
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  sub_1A8644F84(a2, (uint64_t)v67);
  int v11 = sub_1A8644FF4((uint64_t)v67);
  nullsub_1(v67);
  if (v11 != 1)
  {
    long long v23 = *v12;
    long long v24 = v12[2];
    long long v69 = v12[1];
    long long v70 = v24;
    long long v68 = v23;
    long long v25 = v12[3];
    long long v26 = v12[4];
    long long v27 = v12[6];
    long long v73 = v12[5];
    long long v74 = v27;
    long long v71 = v25;
    long long v72 = v26;
    long long v28 = v12[7];
    long long v29 = v12[8];
    long long v30 = v12[10];
    long long v77 = v12[9];
    long long v78 = v30;
    long long v75 = v28;
    long long v76 = v29;
    sub_1A873C6F0((uint64_t)&v68, (uint64_t)&v64);
    sub_1A873C6F0((uint64_t)&v64, (uint64_t)v79);
    if (v79[0] >> 62)
    {
      uint64_t v31 = (void *)(v79[0] & 0x3FFFFFFFFFFFFFFFLL);
      if (v79[0] >> 62 == 1)
      {
        v79[0] &= 0x3FFFFFFFFFFFFFFFuLL;
        memcpy(__dst, v31 + 2, sizeof(__dst));
        sub_1A8645080(v8, sub_1A86409B8);
        sub_1A8793A3C((uint64_t)&v64);
        sub_1A872E2C4((uint64_t)__dst);
        sub_1A88B9F04(a3, a4, 160, 0, a1, (long long *)__dst, (uint64_t)&v68);
        sub_1A8645080(v8, sub_1A856B460);
        uint64_t v32 = *((void *)&v68 + 1);
        long long v33 = v69;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1A88B48F4(v32, v33, *((uint64_t *)&v33 + 1), a3, a4);
        swift_release();
        swift_release();
        swift_release();
        sub_1A872E440((uint64_t)__dst);
LABEL_22:
        uint64_t result = sub_1A8793A6C((uint64_t)&v64);
        *a6 = 0;
        return result;
      }
      v79[0] &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v53 = v31[2];
      unint64_t v54 = v31[3];
      uint64_t v55 = v31[4];
      sub_1A8645080(v8, sub_1A86409B8);
      sub_1A8793A3C((uint64_t)&v64);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88BA148(a3, a4, 160, 0, a1, v53, v54, v55, (uint64_t)&v68);
      sub_1A8645080(v8, sub_1A856B460);
    }
    else
    {
      v79[0] &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v49 = *(void *)(v79[0] + 16);
      unint64_t v50 = *(void *)(v79[0] + 24);
      uint64_t v51 = *(void *)(v79[0] + 32);
      unint64_t v52 = *(void *)(v79[0] + 40);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8645080(v8, sub_1A86409B8);
      sub_1A8793A3C((uint64_t)&v64);
      sub_1A88B92F4(a3, a4, 160, 0, a1, v49, v50, v51, v52, (uint64_t)&v68);
      sub_1A8645080(v8, sub_1A856B460);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = *((void *)&v68 + 1);
    long long v57 = v69;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A88B48F4(v56, v57, *((uint64_t *)&v57 + 1), a3, a4);
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_22;
  }
  long long v13 = *v12;
  long long v14 = v12[1];
  long long v15 = v12[3];
  *(_OWORD *)&__dst[32] = v12[2];
  *(_OWORD *)&__dst[48] = v15;
  *(_OWORD *)long long __dst = v13;
  *(_OWORD *)&__dst[16] = v14;
  long long v16 = v12[4];
  long long v17 = v12[5];
  long long v18 = v12[6];
  *(void *)&__dst[112] = *((void *)v12 + 14);
  *(_OWORD *)&__dst[80] = v17;
  *(_OWORD *)&__dst[96] = v18;
  *(_OWORD *)&__dst[64] = v16;
  sub_1A88B8FF0((uint64_t)__dst);
  sub_1A88BA3B0(a3, a4, 160, 0, a1, (uint64_t)__dst);
  LOBYTE(v68) = 59;
  uint64_t v61 = a3;
  uint64_t v62 = a4;
  a3((char *)&v68, (char *)&v68 + 1);
  sub_1A8529F8C((uint64_t)&__dst[24], (uint64_t)v79, &qword_1E9741820);
  sub_1A8529F8C((uint64_t)v79, (uint64_t)&v68, &qword_1E9741820);
  uint64_t v19 = *((void *)&v68 + 1);
  if (*((void *)&v68 + 1))
  {
    uint64_t v20 = v68;
    uint64_t v21 = v69;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v22 = v20;
  }
  else
  {
    uint64_t v22 = sub_1A88BA5DC(MEMORY[0x1E4FBC860]);
    uint64_t v19 = v34;
    uint64_t v21 = v35;
  }
  uint64_t v64 = v22;
  uint64_t v65 = v19;
  uint64_t v66 = v21;
  uint64_t v36 = *(void *)(v21 + 16);
  if (v36)
  {
    uint64_t v59 = v8;
    uint64_t v60 = a6;
    uint64_t v37 = *(void *)(v19 + 16);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    uint64_t v38 = 0;
    while (1)
    {
      if (!v37) {
        __break(1u);
      }
      uint64_t v39 = *(void *)(v21 + v38 + 32);
      unint64_t v40 = *(void *)(v21 + v38 + 40);
      if (sub_1A8A76618() == 0x797261646E756F62 && v41 == 0xE800000000000000) {
        break;
      }
      char v43 = sub_1A8A78588();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v37;
      v38 += 16;
      if (!--v36)
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        uint64_t v8 = v59;
        a6 = v60;
        goto LABEL_18;
      }
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    uint64_t v45 = sub_1A88B8EF8(v39, v40);
    swift_bridgeObjectRelease();
    uint64_t v8 = v59;
    a6 = v60;
  }
  else
  {
LABEL_18:
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = MEMORY[0x1E4FBC860];
    sub_1A88B1C5C(a5, v44);
    sub_1A88B1C5C(a5, v44);
    swift_beginAccess();
    sub_1A88B1DBC(0xD000000000000016, 0x80000001A8B3E570);
    swift_endAccess();
    sub_1A88B1C5C(a5, v44);
    uint64_t v45 = *(void *)(v44 + 16);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_release();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v46 = sub_1A8A766E8();
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    sub_1A88B5724(v46, v48, 0x797261646E756F62, 0xE800000000000000);
  }
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A88B48F4(v64, v65, v66, v61, v62);
  swift_release();
  swift_release();
  swift_release();
  sub_1A8645080(v8, sub_1A856B460);
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a6 = v45;
  return result;
}

uint64_t sub_1A88B5614(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88B9150(a3, a4, (void (*)(char *, void *))a1);
  swift_bridgeObjectRelease();
  char v15 = 47;
  a1(&v15, (char *)&v16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88B9150(a5, a6, (void (*)(char *, void *))a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(a7 + 24) + 16))
  {
    char v14 = 59;
    return a1(&v14, &v15);
  }
  return result;
}

uint64_t sub_1A88B5724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  uint64_t v10 = (void *)v4[1];
  swift_retain();
  swift_retain();
  unint64_t v11 = sub_1A8893724(a3, a4, v9, v10);
  char v13 = v12;
  unint64_t v15 = v14;
  swift_release();
  swift_release();
  if (v13)
  {
    if (a2)
    {
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88B82E8(a3, a4);
      uint64_t v21 = v4[2];
      v4 += 2;
      uint64_t v20 = v21;
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A89029F4(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = *v4;
      }
      unint64_t v15 = *(void *)(v20 + 16);
      unint64_t v17 = *(void *)(v20 + 24);
      uint64_t v16 = (char *)(v15 + 1);
      if (v15 < v17 >> 1) {
        goto LABEL_12;
      }
      goto LABEL_19;
    }
  }
  else
  {
    if (a2)
    {
      uint64_t v16 = (char *)v4[2];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = sub_1A88B866C((uint64_t)v16);
      }
      if ((v11 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v17 = *((void *)v16 + 2);
        if (v11 < v17)
        {
          long long v18 = &v16[16 * v11];
          _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
          swift_bridgeObjectRelease();
          *((void *)v18 + 4) = a1;
          *((void *)v18 + 5) = a2;
          swift_bridgeObjectRelease_n();
          uint64_t result = swift_bridgeObjectRelease();
          v4[2] = (uint64_t)v16;
          return result;
        }
      }
      __break(1u);
LABEL_19:
      sub_1A89029F4((char *)(v17 > 1), (int64_t)v16, 1);
      uint64_t v20 = *v4;
LABEL_12:
      *(void *)(v20 + 16) = v16;
      unint64_t v23 = v20 + 16 * v15;
      *(void *)(v23 + 32) = a1;
      *(void *)(v23 + 40) = a2;
      swift_bridgeObjectRelease_n();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v4 = v20;
      return result;
    }
    sub_1A88B8464(v11, v15);
    swift_bridgeObjectRelease();
    sub_1A88B85E4(v11);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A88B5934()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  while (1)
  {
    uint64_t v0 = sub_1A8A76838();
    unint64_t v2 = v1;
    if (!v1) {
      goto LABEL_15;
    }
    unint64_t v3 = v0;
    if ((v0 != 2573 || v1 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
    {
      if ((sub_1A8A76278() & 1) == 0) {
        goto LABEL_16;
      }
      unint64_t result = sub_1A8884574(v3, v2);
      if ((result & 0x100000000) != 0) {
        goto LABEL_18;
      }
      if ((result & 0xFFFFFF80) != 0)
      {
LABEL_16:
        swift_bridgeObjectRelease();
LABEL_15:
        swift_bridgeObjectRelease();
        return v2 == 0;
      }
      unint64_t result = sub_1A8884574(v3, v2);
      if ((result & 0x100000000) != 0) {
        goto LABEL_19;
      }
      if ((result & 0xFFFFFF00) != 0) {
        break;
      }
    }
    __int16 v5 = sub_1A88B5A8C(v3, v2);
    swift_bridgeObjectRelease();
    if ((v5 & 0x100) != 0
      || v5 - 127 < 0xFFFFFFA2
      || v5 - 34 <= 0x3B
      && ((1 << (v5 - 34)) & 0xE0000007F0024C1) != 0)
    {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1A88B5A8C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    unsigned __int8 v4 = a1;
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned __int8 v4 = sub_1A8A76888();
    }
    else if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0) {
        unsigned __int8 v4 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      }
      else {
        unsigned __int8 v4 = *(unsigned char *)sub_1A8A77E88();
      }
    }
  }
  else
  {
    unsigned __int8 v4 = 0;
  }
  return v4 | ((v3 == 0) << 8);
}

uint64_t sub_1A88B5B20(void (*a1)(char *, char *), uint64_t a2, char *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if ((a3[1] & 1) == 0)
  {
    char v5 = *a3;
    *(_WORD *)a3 = 256;
    char v14 = v5;
    a1(&v14, &v15);
  }
  uint64_t result = sub_1A8A76838();
  if (v7)
  {
    unint64_t v8 = result;
    unint64_t v9 = v7;
    do
    {
      if ((v8 != 2573 || v9 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
      {
        if ((sub_1A8A76278() & 1) == 0) {
          goto LABEL_5;
        }
        unint64_t v11 = sub_1A8884574(v8, v9);
        if ((v11 & 0x100000000) != 0) {
          goto LABEL_23;
        }
        if ((v11 & 0xFFFFFF80) != 0)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        unint64_t v12 = sub_1A8884574(v8, v9);
        if ((v12 & 0x100000000) != 0) {
          goto LABEL_24;
        }
        if ((v12 & 0xFFFFFF00) != 0)
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
        }
      }
      __int16 v13 = sub_1A88B5A8C(v8, v9);
      uint64_t result = swift_bridgeObjectRelease();
      if ((v13 & 0x100) == 0)
      {
        if (v13 == 32 || v13 == 9)
        {
          *(_WORD *)a3 = v13;
          return result;
        }
        if (v13 - 127 >= 0xFFFFFFA2)
        {
          char v15 = v13;
          a1(&v15, (char *)&v16);
        }
      }
LABEL_6:
      uint64_t result = sub_1A8A76838();
      unint64_t v8 = result;
      unint64_t v9 = v10;
    }
    while (v10);
  }
  return result;
}

uint64_t *sub_1A88B5CE0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, char *a7)
{
  if (a1) {
    uint64_t v12 = a2 - a1;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t result = (uint64_t *)swift_allocObject();
  if (v12 < 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v14 = (uint64_t)result;
  result[2] = 0;
  result[3] = v12;
  result[4] = a1;
  result[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", result);
  }
  sub_1A88B5B20((void (*)(char *, char *))sub_1A88B9148, v14, a7);
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(a4 + 8);
  if (v16 < 1) {
    goto LABEL_13;
  }
  BOOL v17 = __OFADD__(v16, v15);
  uint64_t v18 = v16 + v15;
  if (v17)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 < 79)
  {
LABEL_13:
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (a1) {
        uint64_t v20 = a1 + v15;
      }
      else {
        uint64_t v20 = 0;
      }
      a5((char *)a1, (char *)v20);
      uint64_t result = (uint64_t *)sub_1A870361C(0, v15, a1, a2);
      uint64_t v21 = *(void *)(a4 + 8);
      BOOL v17 = __OFADD__(v21, result);
      uint64_t v22 = (char *)result + v21;
      if (!v17) {
        goto LABEL_29;
      }
      __break(1u);
      goto LABEL_20;
    }
    goto LABEL_31;
  }
  sub_1A88DA520(*(unsigned char *)a4, a5);
  uint64_t result = (uint64_t *)a5("\t", "");
  if (a3)
  {
    if (v15 < 1)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v19 = 1;
    goto LABEL_22;
  }
LABEL_20:
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = 0;
LABEL_22:
    if (a1) {
      uint64_t v23 = a1 + v15;
    }
    else {
      uint64_t v23 = 0;
    }
    if (a1) {
      uint64_t v24 = a1 + v19;
    }
    else {
      uint64_t v24 = 0;
    }
    a5((char *)v24, (char *)v23);
    uint64_t result = (uint64_t *)sub_1A870361C(v19, v15, a1, a2);
    uint64_t v22 = (char *)result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_29:
      *(void *)(a4 + 8) = v22;
      return (uint64_t *)swift_release();
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t *sub_1A88B5EE0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t *a7, uint64_t a8, unint64_t a9, unint64_t *a10, char a11)
{
  if (a1) {
    uint64_t v17 = a2 - a1;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t result = (uint64_t *)swift_allocObject();
  if (v17 < 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v19 = (uint64_t)result;
  uint64_t v30 = a4;
  result[2] = 0;
  result[3] = v17;
  result[4] = a1;
  result[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", result);
  }
  sub_1A88B7EFC((void (*)(char *, uint64_t *))sub_1A88B9148, v19, a7, a8, a9, a10, a11 & 1);
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = *(void *)(a4 + 8);
  if (v21 < 1) {
    goto LABEL_13;
  }
  BOOL v22 = __OFADD__(v21, v20);
  uint64_t v23 = v21 + v20;
  if (v22)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v23 < 79)
  {
LABEL_13:
    if ((v20 & 0x8000000000000000) == 0)
    {
      if (a1) {
        uint64_t v25 = a1 + v20;
      }
      else {
        uint64_t v25 = 0;
      }
      a5((char *)a1, (char *)v25);
      uint64_t result = (uint64_t *)sub_1A870361C(0, v20, a1, a2);
      uint64_t v26 = *(void *)(a4 + 8);
      BOOL v22 = __OFADD__(v26, result);
      long long v27 = (char *)result + v26;
      if (!v22) {
        goto LABEL_29;
      }
      __break(1u);
      goto LABEL_20;
    }
    goto LABEL_31;
  }
  sub_1A88DA520(*(unsigned char *)a4, a5);
  uint64_t result = (uint64_t *)a5("\t", "");
  if (a3)
  {
    if (v20 < 1)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v24 = 1;
    goto LABEL_22;
  }
LABEL_20:
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = 0;
LABEL_22:
    if (a1) {
      uint64_t v28 = a1 + v20;
    }
    else {
      uint64_t v28 = 0;
    }
    if (a1) {
      uint64_t v29 = a1 + v24;
    }
    else {
      uint64_t v29 = 0;
    }
    a5((char *)v29, (char *)v28);
    uint64_t result = (uint64_t *)sub_1A870361C(v24, v20, a1, a2);
    long long v27 = (char *)result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_29:
      *(void *)(v30 + 8) = v27;
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_release();
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A88B6108(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, char a11)
{
  *(void *)&v35[23] = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v16 = a2 - a1;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = (uint64_t *)swift_allocObject();
  if (v16 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v18 = v17;
  v17[2] = 0;
  v17[3] = v16;
  v17[4] = a1;
  v17[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", v17);
  }
  sub_1A88B9150(a7, a8, (void (*)(char *, void *))sub_1A88B9148);
  char v34 = 61;
  sub_1A88B7958((uint64_t)&v34, (uint64_t)v35, v18);
  sub_1A88B97E8(a9, a10, (void (*)(char *, char *))sub_1A88B9148);
  if ((a11 & 1) == 0)
  {
    char v34 = 59;
    sub_1A88B7958((uint64_t)&v34, (uint64_t)v35, v18);
  }
  swift_beginAccess();
  uint64_t v19 = v18[2];
  uint64_t v20 = *(void *)(a4 + 8);
  if (v20 >= 1)
  {
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v22 >= 79)
    {
      sub_1A88DA520(*(unsigned char *)a4, a5);
      a5("\t", "");
      if (a3)
      {
        if (v19 < 1)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
        }
        uint64_t v23 = 1;
        goto LABEL_24;
      }
LABEL_22:
      if (v19 < 0) {
        goto LABEL_37;
      }
      uint64_t v23 = 0;
LABEL_24:
      if (a1) {
        uint64_t v28 = (char *)(a1 + v19);
      }
      else {
        uint64_t v28 = 0;
      }
      if (a1) {
        uint64_t v29 = (char *)(a1 + v23);
      }
      else {
        uint64_t v29 = 0;
      }
      a5(v29, v28);
      uint64_t v30 = sub_1A870361C(v23, v19, a1, a2);
      uint64_t v27 = v30 + 1;
      if (!__OFADD__(v30, 1)) {
        goto LABEL_31;
      }
      goto LABEL_35;
    }
  }
  if (v19 < 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (a1) {
    uint64_t v24 = (char *)(a1 + v19);
  }
  else {
    uint64_t v24 = 0;
  }
  a5((char *)a1, v24);
  uint64_t v25 = sub_1A870361C(0, v19, a1, a2);
  uint64_t v26 = *(void *)(a4 + 8);
  BOOL v21 = __OFADD__(v26, v25);
  uint64_t v27 = v26 + v25;
  if (v21)
  {
    __break(1u);
    goto LABEL_22;
  }
LABEL_31:
  *(void *)(a4 + 8) = v27;
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B63B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, long long *a7)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v13 = a2 - a1;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = (uint64_t *)swift_allocObject();
  if (v13 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v15 = v14;
  void v14[2] = 0;
  void v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  char v33 = a3;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", v14);
  }
  long long v16 = *a7;
  long long v38 = a7[1];
  uint64_t v17 = *((void *)a7 + 4);
  long long v34 = v16;
  uint64_t v36 = v17;
  long long v37 = v16;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v18 = sub_1A8A76958();
  sub_1A88B9150(v18, v19, (void (*)(char *, void *))sub_1A88B9148);
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + 16))
  {
    LOBYTE(v37) = 59;
    sub_1A88B7958((uint64_t)&v37, (uint64_t)&v37 + 1, v15);
  }
  swift_beginAccess();
  uint64_t v20 = v15[2];
  uint64_t v21 = *(void *)(a4 + 8);
  if (v21 >= 1)
  {
    BOOL v22 = __OFADD__(v21, v20);
    uint64_t v23 = v21 + v20;
    if (v22)
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v23 >= 79)
    {
      sub_1A88DA520(*(unsigned char *)a4, a5);
      a5("\t", "");
      if (v33)
      {
        if (v20 < 1)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
        }
        uint64_t v24 = 1;
        goto LABEL_24;
      }
LABEL_22:
      if (v20 < 0) {
        goto LABEL_37;
      }
      uint64_t v24 = 0;
LABEL_24:
      if (a1) {
        uint64_t v29 = (char *)(a1 + v20);
      }
      else {
        uint64_t v29 = 0;
      }
      if (a1) {
        uint64_t v30 = (char *)(a1 + v24);
      }
      else {
        uint64_t v30 = 0;
      }
      a5(v30, v29);
      uint64_t v31 = sub_1A870361C(v24, v20, a1, a2);
      uint64_t v28 = v31 + 1;
      if (!__OFADD__(v31, 1)) {
        goto LABEL_31;
      }
      goto LABEL_35;
    }
  }
  if (v20 < 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (a1) {
    uint64_t v25 = (char *)(a1 + v20);
  }
  else {
    uint64_t v25 = 0;
  }
  a5((char *)a1, v25);
  uint64_t v26 = sub_1A870361C(0, v20, a1, a2);
  uint64_t v27 = *(void *)(a4 + 8);
  BOOL v22 = __OFADD__(v27, v26);
  uint64_t v28 = v27 + v26;
  if (v22)
  {
    __break(1u);
    goto LABEL_22;
  }
LABEL_31:
  *(void *)(a4 + 8) = v28;
  swift_release();
  sub_1A853489C((uint64_t)&v34);
  long long v39 = v38;
  sub_1A8529F8C((uint64_t)&v39, (uint64_t)v40, &qword_1E9743288);
  sub_1A858B20C((uint64_t)v40);
  uint64_t v35 = *((void *)&v39 + 1);
  sub_1A858B20C((uint64_t)&v35);
  return sub_1A858B20C((uint64_t)&v36);
}

uint64_t sub_1A88B6688(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, unint64_t a8)
{
  *(void *)&v32[23] = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v14 = a2 - a1;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = (uint64_t *)swift_allocObject();
  if (v14 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  long long v16 = v15;
  void v15[2] = 0;
  v15[3] = v14;
  v15[4] = a1;
  v15[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", v15);
  }
  char v31 = 60;
  sub_1A88B7958((uint64_t)&v31, (uint64_t)v32, v16);
  sub_1A88BAAD8(a7, a8, (void (*)(char *, void *))sub_1A88B9148);
  char v31 = 62;
  sub_1A88B7958((uint64_t)&v31, (uint64_t)v32, v16);
  swift_beginAccess();
  uint64_t v17 = v16[2];
  uint64_t v18 = *(void *)(a4 + 8);
  if (v18 >= 1)
  {
    BOOL v19 = __OFADD__(v18, v17);
    uint64_t v20 = v18 + v17;
    if (v19)
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v20 >= 79)
    {
      sub_1A88DA520(*(unsigned char *)a4, a5);
      a5("\t", "");
      if (a3)
      {
        if (v17 < 1)
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
        }
        uint64_t v21 = 1;
        goto LABEL_22;
      }
LABEL_20:
      if (v17 < 0) {
        goto LABEL_35;
      }
      uint64_t v21 = 0;
LABEL_22:
      if (a1) {
        uint64_t v26 = (char *)(a1 + v17);
      }
      else {
        uint64_t v26 = 0;
      }
      if (a1) {
        uint64_t v27 = (char *)(a1 + v21);
      }
      else {
        uint64_t v27 = 0;
      }
      a5(v27, v26);
      uint64_t v28 = sub_1A870361C(v21, v17, a1, a2);
      uint64_t v25 = v28 + 1;
      if (!__OFADD__(v28, 1)) {
        goto LABEL_29;
      }
      goto LABEL_33;
    }
  }
  if (v17 < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (a1) {
    BOOL v22 = (char *)(a1 + v17);
  }
  else {
    BOOL v22 = 0;
  }
  a5((char *)a1, v22);
  uint64_t v23 = sub_1A870361C(0, v17, a1, a2);
  uint64_t v24 = *(void *)(a4 + 8);
  BOOL v19 = __OFADD__(v24, v23);
  uint64_t v25 = v24 + v23;
  if (v19)
  {
    __break(1u);
    goto LABEL_20;
  }
LABEL_29:
  *(void *)(a4 + 8) = v25;
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1A88B68F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  v35[3] = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v14 = a2 - a1;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = (uint64_t *)swift_allocObject();
  if (v14 < 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  long long v16 = v15;
  void v15[2] = 0;
  v15[3] = v14;
  v15[4] = a1;
  v15[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", v15);
  }
  v35[0] = a7;
  v35[1] = a8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v17 = sub_1A8A76958();
  sub_1A88B9150(v17, v18, (void (*)(char *, void *))sub_1A88B9148);
  swift_bridgeObjectRelease();
  if ((a9 & 1) == 0)
  {
    LOBYTE(v35[0]) = 44;
    sub_1A88B7958((uint64_t)v35, (uint64_t)v35 + 1, v16);
  }
  swift_beginAccess();
  uint64_t v19 = v16[2];
  uint64_t v20 = a4;
  uint64_t v21 = *(void *)(a4 + 8);
  if (v21 >= 1)
  {
    BOOL v22 = __OFADD__(v21, v19);
    uint64_t v23 = v21 + v19;
    if (v22)
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v23 >= 79)
    {
      sub_1A88DA520(*(unsigned char *)a4, a5);
      a5("\t", "");
      if (a3)
      {
        if (v19 < 1)
        {
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
        }
        uint64_t v24 = 1;
        goto LABEL_24;
      }
LABEL_22:
      if (v19 < 0) {
        goto LABEL_38;
      }
      uint64_t v24 = 0;
LABEL_24:
      if (a1) {
        uint64_t v29 = (char *)(a1 + v19);
      }
      else {
        uint64_t v29 = 0;
      }
      if (a1) {
        uint64_t v30 = (char *)(a1 + v24);
      }
      else {
        uint64_t v30 = 0;
      }
      a5(v30, v29);
      uint64_t v31 = sub_1A870361C(v24, v19, a1, a2);
      uint64_t v28 = v31 + 1;
      if (!__OFADD__(v31, 1))
      {
        uint64_t v20 = a4;
        goto LABEL_32;
      }
      goto LABEL_36;
    }
  }
  if (v19 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (a1) {
    uint64_t v25 = (char *)(a1 + v19);
  }
  else {
    uint64_t v25 = 0;
  }
  a5((char *)a1, v25);
  uint64_t v26 = sub_1A870361C(0, v19, a1, a2);
  uint64_t v27 = *(void *)(a4 + 8);
  BOOL v22 = __OFADD__(v27, v26);
  uint64_t v28 = v27 + v26;
  if (v22)
  {
    __break(1u);
    goto LABEL_22;
  }
LABEL_32:
  *(void *)(v20 + 8) = v28;
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t *sub_1A88B6B84(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a1) {
    uint64_t v14 = a2 - a1;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t result = (uint64_t *)swift_allocObject();
  if (v14 < 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  long long v16 = result;
  result[2] = 0;
  result[3] = v14;
  result[4] = a1;
  result[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", result);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88B9150(a7, a8, (void (*)(char *, void *))sub_1A88B9148);
  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v17 = v16[2];
  uint64_t v18 = *(void *)(a4 + 8);
  if (v18 < 1) {
    goto LABEL_13;
  }
  BOOL v19 = __OFADD__(v18, v17);
  uint64_t v20 = v18 + v17;
  if (v19)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v20 < 79)
  {
LABEL_13:
    if ((v17 & 0x8000000000000000) == 0)
    {
      if (a1) {
        uint64_t v22 = a1 + v17;
      }
      else {
        uint64_t v22 = 0;
      }
      a5((char *)a1, (char *)v22);
      uint64_t result = (uint64_t *)sub_1A870361C(0, v17, a1, a2);
      uint64_t v23 = *(void *)(a4 + 8);
      BOOL v19 = __OFADD__(v23, result);
      uint64_t v24 = (char *)result + v23;
      if (!v19) {
        goto LABEL_29;
      }
      __break(1u);
      goto LABEL_20;
    }
    goto LABEL_31;
  }
  sub_1A88DA520(*(unsigned char *)a4, a5);
  uint64_t result = (uint64_t *)a5("\t", "");
  if (a3)
  {
    if (v17 < 1)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v21 = 1;
    goto LABEL_22;
  }
LABEL_20:
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = 0;
LABEL_22:
    if (a1) {
      uint64_t v25 = a1 + v17;
    }
    else {
      uint64_t v25 = 0;
    }
    if (a1) {
      uint64_t v26 = a1 + v21;
    }
    else {
      uint64_t v26 = 0;
    }
    a5((char *)v26, (char *)v25);
    uint64_t result = (uint64_t *)sub_1A870361C(v21, v17, a1, a2);
    uint64_t v24 = (char *)result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_29:
      *(void *)(a4 + 8) = v24;
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_release();
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t *sub_1A88B6DA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  if (a1) {
    uint64_t v12 = a2 - a1;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t result = (uint64_t *)swift_allocObject();
  if (v12 < 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v14 = result;
  result[2] = 0;
  result[3] = v12;
  result[4] = a1;
  result[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", result);
  }
  sub_1A88B7958((uint64_t)"multipart/", (uint64_t)"", v14);
  long long v25 = *(_OWORD *)(v26 + 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88B9150(v25, *((unint64_t *)&v25 + 1), (void (*)(char *, void *))sub_1A88B9148);
  sub_1A853489C((uint64_t)&v25);
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v15 = v14[2];
  uint64_t v16 = *(void *)(a4 + 8);
  if (v16 < 1) {
    goto LABEL_13;
  }
  BOOL v17 = __OFADD__(v16, v15);
  uint64_t v18 = v16 + v15;
  if (v17)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 < 79)
  {
LABEL_13:
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (a1) {
        uint64_t v20 = a1 + v15;
      }
      else {
        uint64_t v20 = 0;
      }
      a5((char *)a1, (char *)v20);
      uint64_t result = (uint64_t *)sub_1A870361C(0, v15, a1, a2);
      uint64_t v21 = *(void *)(a4 + 8);
      BOOL v17 = __OFADD__(v21, result);
      uint64_t v22 = (char *)result + v21;
      if (!v17) {
        goto LABEL_29;
      }
      __break(1u);
      goto LABEL_20;
    }
    goto LABEL_31;
  }
  sub_1A88DA520(*(unsigned char *)a4, a5);
  uint64_t result = (uint64_t *)a5("\t", "");
  if (a3)
  {
    if (v15 < 1)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v19 = 1;
    goto LABEL_22;
  }
LABEL_20:
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = 0;
LABEL_22:
    if (a1) {
      uint64_t v23 = a1 + v15;
    }
    else {
      uint64_t v23 = 0;
    }
    if (a1) {
      uint64_t v24 = a1 + v19;
    }
    else {
      uint64_t v24 = 0;
    }
    a5((char *)v24, (char *)v23);
    uint64_t result = (uint64_t *)sub_1A870361C(v19, v15, a1, a2);
    uint64_t v22 = (char *)result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_29:
      *(void *)(a4 + 8) = v22;
      swift_release();
      return (uint64_t *)sub_1A88BAF68(v26);
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A88B6FC4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)&v34[23] = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v16 = a2 - a1;
  }
  else {
    uint64_t v16 = 0;
  }
  BOOL v17 = (uint64_t *)swift_allocObject();
  if (v16 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v18 = v17;
  v17[2] = 0;
  v17[3] = v16;
  v17[4] = a1;
  v17[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", v17);
  }
  sub_1A88B7958((uint64_t)"text/", (uint64_t)"", v18);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88B9150(a7, a8, (void (*)(char *, void *))sub_1A88B9148);
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(a10 + 24) + 16))
  {
    char v33 = 59;
    sub_1A88B7958((uint64_t)&v33, (uint64_t)v34, v18);
  }
  swift_beginAccess();
  uint64_t v19 = v18[2];
  uint64_t v20 = *(void *)(a4 + 8);
  if (v20 >= 1)
  {
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v22 >= 79)
    {
      sub_1A88DA520(*(unsigned char *)a4, a5);
      a5("\t", "");
      if (a3)
      {
        if (v19 < 1)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
        }
        uint64_t v23 = 1;
        goto LABEL_24;
      }
LABEL_22:
      if (v19 < 0) {
        goto LABEL_37;
      }
      uint64_t v23 = 0;
LABEL_24:
      if (a1) {
        uint64_t v28 = (char *)(a1 + v19);
      }
      else {
        uint64_t v28 = 0;
      }
      if (a1) {
        uint64_t v29 = (char *)(a1 + v23);
      }
      else {
        uint64_t v29 = 0;
      }
      a5(v29, v28);
      uint64_t v30 = sub_1A870361C(v23, v19, a1, a2);
      uint64_t v27 = v30 + 1;
      if (!__OFADD__(v30, 1)) {
        goto LABEL_31;
      }
      goto LABEL_35;
    }
  }
  if (v19 < 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (a1) {
    uint64_t v24 = (char *)(a1 + v19);
  }
  else {
    uint64_t v24 = 0;
  }
  a5((char *)a1, v24);
  uint64_t v25 = sub_1A870361C(0, v19, a1, a2);
  uint64_t v26 = *(void *)(a4 + 8);
  BOOL v21 = __OFADD__(v26, v25);
  uint64_t v27 = v26 + v25;
  if (v21)
  {
    __break(1u);
    goto LABEL_22;
  }
LABEL_31:
  *(void *)(a4 + 8) = v27;
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1A87F0804(a10);
}

uint64_t sub_1A88B7258(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, long long *a7, uint64_t a8)
{
  *(void *)&v33[23] = *MEMORY[0x1E4F143B8];
  if (a1) {
    uint64_t v13 = a2 - a1;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = (uint64_t *)swift_allocObject();
  if (v13 < 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v15 = v14;
  void v14[2] = 0;
  void v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", v14);
  }
  sub_1A88B7958((uint64_t)"message/", (uint64_t)"", v15);
  long long v31 = *a7;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A88B9150(v31, *((unint64_t *)&v31 + 1), (void (*)(char *, void *))sub_1A88B9148);
  sub_1A853489C((uint64_t)&v31);
  if (*(void *)(*(void *)(a8 + 24) + 16))
  {
    char v32 = 59;
    sub_1A88B7958((uint64_t)&v32, (uint64_t)v33, v15);
  }
  swift_beginAccess();
  uint64_t v16 = v15[2];
  uint64_t v17 = *(void *)(a4 + 8);
  if (v17 >= 1)
  {
    BOOL v18 = __OFADD__(v17, v16);
    uint64_t v19 = v17 + v16;
    if (v18)
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v19 >= 79)
    {
      sub_1A88DA520(*(unsigned char *)a4, a5);
      a5("\t", "");
      if (a3)
      {
        if (v16 < 1)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
        }
        uint64_t v20 = 1;
        goto LABEL_24;
      }
LABEL_22:
      if (v16 < 0) {
        goto LABEL_37;
      }
      uint64_t v20 = 0;
LABEL_24:
      if (a1) {
        uint64_t v25 = (char *)(a1 + v16);
      }
      else {
        uint64_t v25 = 0;
      }
      if (a1) {
        uint64_t v26 = (char *)(a1 + v20);
      }
      else {
        uint64_t v26 = 0;
      }
      a5(v26, v25);
      uint64_t v27 = sub_1A870361C(v20, v16, a1, a2);
      uint64_t v24 = v27 + 1;
      if (!__OFADD__(v27, 1)) {
        goto LABEL_31;
      }
      goto LABEL_35;
    }
  }
  if (v16 < 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (a1) {
    BOOL v21 = (char *)(a1 + v16);
  }
  else {
    BOOL v21 = 0;
  }
  a5((char *)a1, v21);
  uint64_t v22 = sub_1A870361C(0, v16, a1, a2);
  uint64_t v23 = *(void *)(a4 + 8);
  BOOL v18 = __OFADD__(v23, v22);
  uint64_t v24 = v23 + v22;
  if (v18)
  {
    __break(1u);
    goto LABEL_22;
  }
LABEL_31:
  *(void *)(a4 + 8) = v24;
  swift_release();
  sub_1A872E440((uint64_t)a7);
  return sub_1A87F0804(a8);
}

uint64_t *sub_1A88B7500(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11)
{
  if (a1) {
    uint64_t v17 = a2 - a1;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t result = (uint64_t *)swift_allocObject();
  if (v17 < 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v19 = (uint64_t)result;
  uint64_t v20 = a2;
  uint64_t v21 = a4;
  result[2] = 0;
  result[3] = v17;
  result[4] = a1;
  result[5] = v20;
  uint64_t v32 = v20;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", result);
  }
  sub_1A88B5614((uint64_t (*)(char *, char *))sub_1A88B9148, v19, a7, a8, a9, a10, a11);
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v22 = *(void *)(v19 + 16);
  uint64_t v23 = *(void *)(a4 + 8);
  if (v23 < 1) {
    goto LABEL_13;
  }
  BOOL v24 = __OFADD__(v23, v22);
  uint64_t v25 = v23 + v22;
  if (v24)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v25 < 79)
  {
LABEL_13:
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (a1) {
        uint64_t v27 = a1 + v22;
      }
      else {
        uint64_t v27 = 0;
      }
      a5((char *)a1, (char *)v27);
      uint64_t result = (uint64_t *)sub_1A870361C(0, v22, a1, v32);
      uint64_t v28 = *(void *)(a4 + 8);
      BOOL v24 = __OFADD__(v28, result);
      uint64_t v29 = (char *)result + v28;
      if (!v24) {
        goto LABEL_29;
      }
      __break(1u);
      goto LABEL_20;
    }
    goto LABEL_31;
  }
  sub_1A88DA520(*(unsigned char *)a4, a5);
  uint64_t result = (uint64_t *)a5("\t", "");
  if (a3)
  {
    if (v22 < 1)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v26 = 1;
    goto LABEL_22;
  }
LABEL_20:
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v26 = 0;
LABEL_22:
    if (a1) {
      uint64_t v30 = a1 + v22;
    }
    else {
      uint64_t v30 = 0;
    }
    if (a1) {
      uint64_t v31 = a1 + v26;
    }
    else {
      uint64_t v31 = 0;
    }
    a5((char *)v31, (char *)v30);
    uint64_t result = (uint64_t *)sub_1A870361C(v26, v22, a1, v32);
    uint64_t v29 = (char *)result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_29:
      *(void *)(v21 + 8) = v29;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t *)sub_1A87F0804(a11);
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t *sub_1A88B774C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(char *, char *))
{
  if (a1) {
    uint64_t v10 = a2 - a1;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t result = (uint64_t *)swift_allocObject();
  if (v10 < 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v12 = result;
  result[2] = 0;
  result[3] = v10;
  result[4] = a1;
  result[5] = a2;
  if (a3) {
    sub_1A88B7958((uint64_t)" ", (uint64_t)"", result);
  }
  uint64_t v13 = sub_1A8A784D8();
  sub_1A88BAAD8(v13, v14, (void (*)(char *, void *))sub_1A88B9148);
  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t *)swift_beginAccess();
  uint64_t v15 = v12[2];
  uint64_t v16 = *(void *)(a4 + 8);
  if (v16 < 1) {
    goto LABEL_13;
  }
  BOOL v17 = __OFADD__(v16, v15);
  uint64_t v18 = v16 + v15;
  if (v17)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 < 79)
  {
LABEL_13:
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (a1) {
        uint64_t v20 = a1 + v15;
      }
      else {
        uint64_t v20 = 0;
      }
      a5((char *)a1, (char *)v20);
      uint64_t result = (uint64_t *)sub_1A870361C(0, v15, a1, a2);
      uint64_t v21 = *(void *)(a4 + 8);
      BOOL v17 = __OFADD__(v21, result);
      uint64_t v22 = (char *)result + v21;
      if (!v17) {
        goto LABEL_29;
      }
      __break(1u);
      goto LABEL_20;
    }
    goto LABEL_31;
  }
  sub_1A88DA520(*(unsigned char *)a4, a5);
  uint64_t result = (uint64_t *)a5("\t", "");
  if (a3)
  {
    if (v15 < 1)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v19 = 1;
    goto LABEL_22;
  }
LABEL_20:
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = 0;
LABEL_22:
    if (a1) {
      uint64_t v23 = a1 + v15;
    }
    else {
      uint64_t v23 = 0;
    }
    if (a1) {
      uint64_t v24 = a1 + v19;
    }
    else {
      uint64_t v24 = 0;
    }
    a5((char *)v24, (char *)v23);
    uint64_t result = (uint64_t *)sub_1A870361C(v19, v15, a1, a2);
    uint64_t v22 = (char *)result + 1;
    if (!__OFADD__(result, 1))
    {
LABEL_29:
      *(void *)(a4 + 8) = v22;
      return (uint64_t *)swift_release();
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A88B7958(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unsigned __int8 v4 = a3 + 2;
  if (a1) {
    uint64_t v5 = a2 - a1;
  }
  else {
    uint64_t v5 = 0;
  }
  swift_beginAccess();
  if (sub_1A870361C(a3[2], a3[3], a3[4], a3[5]) < v5) {
    goto LABEL_12;
  }
  swift_beginAccess();
  sub_1A88BAC68();
  sub_1A8A744B8();
  swift_beginAccess();
  uint64_t v6 = *v4 + v5;
  if (__OFADD__(*v4, v5))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a3[3];
    if (v7 >= v6)
    {
      if (v6 >= *v4)
      {
        uint64_t v9 = a3[4];
        uint64_t v8 = a3[5];
        uint64_t result = swift_beginAccess();
        a3[2] = v6;
        a3[3] = v7;
        a3[4] = v9;
        a3[5] = v8;
        return result;
      }
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
LABEL_12:
  uint64_t result = sub_1A8A780F8();
  __break(1u);
  return result;
}

uint64_t sub_1A88B7AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v6 = sub_1A8A76838();
  if (!v7) {
    goto LABEL_23;
  }
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  uint64_t v10 = 0;
  while (1)
  {
    if ((v8 != 2573 || v9 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
    {
      if ((sub_1A8A76278() & 1) == 0) {
        goto LABEL_3;
      }
      unint64_t v12 = sub_1A8884574(v8, v9);
      if ((v12 & 0x100000000) != 0) {
        goto LABEL_82;
      }
      if ((v12 & 0xFFFFFF80) != 0)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      unint64_t v13 = sub_1A8884574(v8, v9);
      if ((v13 & 0x100000000) != 0) {
        goto LABEL_83;
      }
      if ((v13 & 0xFFFFFF00) != 0)
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
    }
    __int16 v14 = sub_1A88B5A8C(v8, v9);
    swift_bridgeObjectRelease();
    if ((v14 & 0x100) != 0 || v14 - 127 < 0xFFFFFFA1) {
      goto LABEL_4;
    }
    BOOL v15 = __OFADD__(v10++, 1);
    BOOL v16 = v15;
    if (v14 - 91 > 0xFFFFFFE5) {
      break;
    }
    if (v16) {
      goto LABEL_79;
    }
LABEL_4:
    uint64_t v8 = sub_1A8A76838();
    unint64_t v9 = v11;
    if (!v11) {
      goto LABEL_24;
    }
  }
  if (!v16) {
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  uint64_t v10 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v17 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if ((sub_1A88B5934() & 1) == 0) {
    goto LABEL_43;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v18 = sub_1A8A76838();
  if (!v19) {
    goto LABEL_67;
  }
  uint64_t v20 = v18;
  unint64_t v21 = v19;
  while (2)
  {
    if ((v20 != 2573 || v21 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
    {
      if (sub_1A8A76278())
      {
        unint64_t v24 = sub_1A8884574(v20, v21);
        if ((v24 & 0x100000000) != 0) {
          goto LABEL_84;
        }
        if ((v24 & 0xFFFFFF80) == 0)
        {
          unint64_t v25 = sub_1A8884574(v20, v21);
          if ((v25 & 0x100000000) != 0) {
            goto LABEL_85;
          }
          if ((v25 & 0xFFFFFF00) != 0) {
            goto LABEL_73;
          }
          break;
        }
      }
      swift_bridgeObjectRelease();
LABEL_29:
      uint64_t v20 = sub_1A8A76838();
      unint64_t v21 = v23;
      if (!v23) {
        goto LABEL_67;
      }
      continue;
    }
    break;
  }
  __int16 v22 = sub_1A88B5A8C(v20, v21);
  swift_bridgeObjectRelease();
  if ((v22 & 0x100) != 0) {
    goto LABEL_29;
  }
  BOOL v15 = __OFADD__(v17++, 1);
  if (!v15) {
    goto LABEL_29;
  }
  __break(1u);
LABEL_43:
  BOOL v15 = __OFADD__(v17++, 1);
  if (v15) {
    goto LABEL_76;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v26 = sub_1A8A76838();
  if (!v27)
  {
LABEL_68:
    swift_bridgeObjectRelease();
    BOOL v15 = __OFADD__(v17++, 1);
    if (!v15) {
      goto LABEL_69;
    }
    goto LABEL_77;
  }
  uint64_t v28 = v26;
  unint64_t v29 = v27;
  while (1)
  {
    if ((v28 != 2573 || v29 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
    {
      if ((sub_1A8A76278() & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v31 = sub_1A8884574(v28, v29);
      if ((v31 & 0x100000000) != 0) {
        goto LABEL_86;
      }
      if ((v31 & 0xFFFFFF80) != 0)
      {
LABEL_46:
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      unint64_t v32 = sub_1A8884574(v28, v29);
      if ((v32 & 0x100000000) != 0) {
        goto LABEL_87;
      }
      if ((v32 & 0xFFFFFF00) != 0) {
        goto LABEL_74;
      }
    }
    __int16 v33 = sub_1A88B5A8C(v28, v29);
    swift_bridgeObjectRelease();
    if ((v33 & 0x100) != 0) {
      goto LABEL_47;
    }
    if (v33 == 92 || v33 == 34) {
      break;
    }
    if (v33 - 127 >= 0xFFFFFFA1)
    {
      BOOL v15 = __OFADD__(v17++, 1);
      if (v15) {
        goto LABEL_81;
      }
    }
LABEL_47:
    uint64_t v28 = sub_1A8A76838();
    unint64_t v29 = v30;
    if (!v30) {
      goto LABEL_68;
    }
  }
  uint64_t v34 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_80;
  }
  v17 += 2;
  if (!__OFADD__(v34, 1)) {
    goto LABEL_47;
  }
  __break(1u);
LABEL_67:
  swift_bridgeObjectRelease();
LABEL_69:
  if ((a5 & 1) == 0)
  {
    BOOL v15 = __OFADD__(v17++, 1);
    if (v15)
    {
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
    }
  }
  return v17;
}

uint64_t sub_1A88B7EFC(void (*a1)(char *, uint64_t *), uint64_t a2, uint64_t *a3, uint64_t a4, unint64_t a5, unint64_t *a6, char a7)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = HIBYTE(a5) & 0xF;
  *(void *)&v36[71] = a4;
  unint64_t v37 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v11 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v38 = 0;
  uint64_t v39 = v11;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v12 = sub_1A8A76838();
  if (v13)
  {
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    do
    {
      if ((v14 != 2573 || v15 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
      {
        if ((sub_1A8A76278() & 1) == 0) {
          goto LABEL_5;
        }
        unint64_t v17 = sub_1A8884574(v14, v15);
        if ((v17 & 0x100000000) != 0) {
          goto LABEL_34;
        }
        if ((v17 & 0xFFFFFF80) != 0)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        unint64_t v18 = sub_1A8884574(v14, v15);
        if ((v18 & 0x100000000) != 0) {
          goto LABEL_35;
        }
        if ((v18 & 0xFFFFFF00) != 0)
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
      }
      __int16 v19 = sub_1A88B5A8C(v14, v15);
      swift_bridgeObjectRelease();
      if ((v19 & 0x100) == 0 && v19 - 127 >= 0xFFFFFFA1)
      {
        if (v19 - 91 > 0xFFFFFFE5)
        {
          char v35 = v19 | 0x20;
          uint64_t v20 = *a3 - 1;
          if (__OFSUB__(*a3, 1)) {
            goto LABEL_31;
          }
        }
        else
        {
          char v35 = v19;
          uint64_t v20 = *a3 - 1;
          if (__OFSUB__(*a3, 1)) {
            goto LABEL_30;
          }
        }
        *a3 = v20;
        a1(&v35, (uint64_t *)v36);
      }
LABEL_6:
      uint64_t v14 = sub_1A8A76838();
      unint64_t v15 = v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  char v35 = 61;
  swift_beginAccess();
  if (__OFSUB__(*a3, 1)) {
    goto LABEL_32;
  }
  --*a3;
  a1(&v35, (uint64_t *)v36);
  swift_beginAccess();
  uint64_t v21 = *a3 - 1;
  if (__OFSUB__(*a3, 1))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  unint64_t v22 = *a6;
  unint64_t v23 = a6[1];
  uint64_t v24 = a6[2];
  uint64_t v25 = a6[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v26 = sub_1A88B9C34(v22, v23, v24, v25, v21, a1);
  unint64_t v28 = v27;
  unint64_t v30 = v29;
  unint64_t v32 = v31;
  swift_bridgeObjectRelease();
  *a6 = v26;
  a6[1] = v28;
  a6[2] = v30;
  a6[3] = v32;
  uint64_t result = swift_bridgeObjectRelease();
  if ((a7 & 1) == 0 || (a6[1] ^ *a6) >> 14)
  {
    char v34 = 59;
    return ((uint64_t (*)(char *, char *))a1)(&v34, &v35);
  }
  return result;
}

uint64_t sub_1A88B8204(unsigned int a1, uint64_t (*a2)(uint64_t *))
{
  if (a1 > 0x7F)
  {
    int v4 = (a1 & 0x3F) << 8;
    if (a1 >= 0x800)
    {
      int v5 = (v4 | (a1 >> 6) & 0x3F) << 8;
      int v6 = (((v5 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
      unsigned int v2 = (v5 | (a1 >> 12)) + 8487393;
      if (HIWORD(a1)) {
        unsigned int v2 = v6;
      }
    }
    else
    {
      unsigned int v2 = (v4 | (a1 >> 6)) + 33217;
    }
  }
  else
  {
    unsigned int v2 = a1 + 1;
  }
  uint64_t v7 = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v2) >> 3))));
  return a2(&v7);
}

uint64_t sub_1A88B82E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  int v6 = v2 + 1;
  uint64_t v7 = v8;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *int v6 = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A89029F4(0, *(void *)(v7 + 16) + 1, 1);
    uint64_t v7 = *v6;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  unint64_t v10 = *(void *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_1A89029F4((char *)(v10 > 1), v11 + 1, 1);
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v11 + 1;
  unint64_t v12 = v7 + 16 * v11;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  v3[1] = v7;
  uint64_t v13 = *(void *)(v7 + 16);
  uint64_t v14 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (MEMORY[0x1AD0DE160](*(void *)(v14 + 16) & 0x3FLL) >= v13)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v15 = *v3;
      if (!result)
      {
        if (!v15)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v15 = sub_1A8A75098();
        uint64_t result = swift_release();
        uint64_t *v3 = v15;
      }
      if (v15) {
        return sub_1A8A75038();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v13 < 0x10)
  {
    return result;
  }
  return sub_1A8893AC4();
}

unint64_t sub_1A88B8464(int64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2[1] + 16);
  uint64_t v5 = *v2;
  if (!*v2)
  {
    if (v4) {
      return sub_1A88B85E4(a1);
    }
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(void *)(v5 + 16) & 0x3FLL) == (*(void *)(v5 + 24) & 0x3FLL))
  {
    if (!v4) {
      goto LABEL_15;
    }
  }
  else if (v4 <= sub_1A8A75088())
  {
LABEL_15:
    uint64_t v10 = sub_1A88B85E4(a1);
    sub_1A8893AC4();
    return v10;
  }
  unint64_t result = swift_isUniquelyReferenced_native();
  uint64_t v8 = *v2;
  if (!result)
  {
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v8 = sub_1A8A75098();
    unint64_t result = swift_release();
    *unsigned int v2 = v8;
  }
  if (v8)
  {
    swift_retain();
    unint64_t result = sub_1A88B8680(a2, (void *)(v8 + 16), v8 + 32, (uint64_t)v2);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      uint64_t v9 = v2[1];
      swift_retain();
      sub_1A88B8864(a1, a1 + 1, v9, (void *)(v8 + 16));
      swift_release();
      swift_release();
      return sub_1A88B85E4(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1A88B85E4(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A88B866C(v3);
    uint64_t v3 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = v3 + 16 * a1;
    uint64_t v8 = *(void *)(v7 + 32);
    memmove((void *)(v7 + 32), (const void *)(v7 + 48), 16 * (v5 - 1 - a1));
    *(void *)(v3 + 16) = v6;
    *unint64_t v1 = v3;
    return v8;
  }
  return result;
}

char *sub_1A88B866C(uint64_t a1)
{
  return sub_1A89026E8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1A88B8680(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v15 = sub_1A8A75018();
  sub_1A8A75068();
  if (v15)
  {
    uint64_t v7 = a1;
    uint64_t v8 = sub_1A8A75028();
    while (1)
    {
      unint64_t result = sub_1A8A75048();
      if (v10)
      {
LABEL_20:
        __break(1u);
        return result;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (result >= *(void *)(*(void *)(a4 + 8) + 16)) {
        goto LABEL_18;
      }
      sub_1A8A78738();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A762A8();
      uint64_t v11 = sub_1A8A787C8();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v12 = 1 << *a2;
      if (__OFSUB__(v12, 1)) {
        goto LABEL_19;
      }
      uint64_t v13 = (v12 - 1) & v11;
      if (v6 >= v8) {
        break;
      }
      if (v13 < v8) {
        goto LABEL_12;
      }
LABEL_13:
      sub_1A8A75048();
      sub_1A8A75038();
      uint64_t v6 = v7;
LABEL_3:
      sub_1A8A75068();
      uint64_t v7 = a1;
    }
    if (v13 < v8) {
      goto LABEL_3;
    }
LABEL_12:
    if (v6 < v13) {
      goto LABEL_3;
    }
    goto LABEL_13;
  }
  return sub_1A8A75038();
}

uint64_t sub_1A88B8864(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v5 >= 1)
  {
    uint64_t v7 = result;
    unint64_t v8 = *(void *)(a3 + 16);
    uint64_t v9 = v8 - v5;
    if ((uint64_t)v8 < v5) {
      ++v9;
    }
    if (result < v9 >> 1)
    {
      unint64_t result = MEMORY[0x1AD0DE160](*a4 & 0x3FLL);
      if (result / 3 > v7)
      {
        if (v7 < 0)
        {
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        if (v8 < v7)
        {
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        if (v7)
        {
          swift_retain();
          uint64_t v10 = 0;
          while (1)
          {
            sub_1A8A78738();
            _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
            sub_1A8A762A8();
            unint64_t result = sub_1A8A787C8();
            if (__OFSUB__(1 << *a4, 1)) {
              break;
            }
            if (sub_1A8A75018())
            {
              while (1)
              {
                uint64_t v11 = sub_1A8A75048();
                if ((v12 & 1) == 0 && v11 == v10) {
                  break;
                }
                sub_1A8A75068();
              }
            }
            unint64_t result = v10 + v5;
            if (__OFADD__(v10, v5)) {
              goto LABEL_58;
            }
            ++v10;
            sub_1A8A75058();
            swift_bridgeObjectRelease();
            if (v10 == v7)
            {
              unint64_t result = swift_release();
              goto LABEL_20;
            }
          }
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        goto LABEL_20;
      }
      sub_1A8A75018();
      uint64_t v19 = sub_1A8A75048();
      if ((v20 & 1) != 0 || v19 >= v7)
      {
LABEL_32:
        unint64_t result = sub_1A8A75068();
LABEL_20:
        uint64_t v13 = a4[1];
        if (__OFSUB__(v13 >> 6, v5))
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        uint64_t v14 = 1 << *a4;
        BOOL v15 = __OFSUB__(v14, 1);
        uint64_t v16 = v14 - 1;
        if (v15)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        uint64_t v17 = (v16 & (((v13 >> 6) - v5) >> 63)) + (v13 >> 6) - v5;
        if (v17 < v16) {
          uint64_t v16 = 0;
        }
        a4[1] = a4[1] & 0x3FLL | ((v17 - v16) << 6);
        return result;
      }
      if (!__OFADD__(v19, v5))
      {
        sub_1A8A75058();
        goto LABEL_32;
      }
      __break(1u);
LABEL_38:
      sub_1A8A75018();
      uint64_t v21 = sub_1A8A75048();
      if ((v22 & 1) == 0 && v21 >= v4)
      {
        BOOL v15 = __OFSUB__(v21, v5);
        unint64_t result = v21 - v5;
        if (v15)
        {
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        sub_1A8A75058();
      }
      return sub_1A8A75068();
    }
    uint64_t v4 = a2;
    uint64_t v18 = v8 - a2;
    if (__OFSUB__(v8, a2))
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    unint64_t result = MEMORY[0x1AD0DE160](*a4 & 0x3FLL);
    if (v18 >= result / 3) {
      goto LABEL_38;
    }
    if ((uint64_t)v8 < v4)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if (v4 < 0)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    if (v8 != v4)
    {
      if (v8 <= v4)
      {
LABEL_70:
        __break(1u);
        return result;
      }
      swift_retain();
      while (1)
      {
        sub_1A8A78738();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A762A8();
        unint64_t result = sub_1A8A787C8();
        if (__OFSUB__(1 << *a4, 1)) {
          goto LABEL_60;
        }
        if (sub_1A8A75018())
        {
          while (1)
          {
            uint64_t v23 = sub_1A8A75048();
            if ((v24 & 1) == 0 && v23 == v4) {
              break;
            }
            sub_1A8A75068();
          }
        }
        unint64_t result = v4 - v5;
        if (__OFSUB__(v4, v5)) {
          goto LABEL_61;
        }
        ++v4;
        sub_1A8A75058();
        swift_bridgeObjectRelease();
        if (v4 == v8)
        {
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A88B8D14(uint64_t result, char a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = v2;
  int64_t v5 = result;
  uint64_t v8 = v2[1];
  uint64_t v6 = v2 + 1;
  uint64_t v7 = v8;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(void *)(v7 + 24) >> 1)
  {
    uint64_t v10 = *v3;
    if (*v3) {
      goto LABEL_5;
    }
  }
  else
  {
    if (*(void *)(v7 + 16) <= v5) {
      int64_t v15 = v5;
    }
    else {
      int64_t v15 = *(void *)(v7 + 16);
    }
    sub_1A89029F4(isUniquelyReferenced_nonNull_native, v15, 0);
    uint64_t v7 = *v6;
    uint64_t v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16) & 0x3FLL;
      uint64_t v12 = MEMORY[0x1AD0DE190](v5);
      uint64_t v13 = v12;
      if (a2)
      {
        uint64_t v14 = v12;
        if (v11 >= v12) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v14 = *(void *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13) {
          goto LABEL_20;
        }
      }
LABEL_16:
      if (v14 <= v13) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = v14;
      }
      goto LABEL_30;
    }
  }
  uint64_t v16 = MEMORY[0x1AD0DE190](v5);
  uint64_t v13 = v16;
  uint64_t v11 = 0;
  if (a2) {
    uint64_t v14 = v16;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v16 > 0) {
    goto LABEL_16;
  }
LABEL_20:
  if (v14 <= v13) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v14;
  }
  unint64_t result = MEMORY[0x1AD0DE190](*(void *)(v7 + 16));
  if (result <= v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = result;
  }
  if (v19 < v11)
  {
    if (v14 <= v19) {
      uint64_t v17 = v19;
    }
    else {
      uint64_t v17 = v14;
    }
LABEL_30:
    uint64_t v20 = sub_1A8893B68(v7, v17, 0, v14);
    unint64_t result = swift_release();
    uint64_t *v3 = v20;
    return result;
  }
  if (!v10 || (unint64_t result = swift_isUniquelyReferenced_native(), result))
  {
    uint64_t v21 = *v3;
    if (*v3) {
      goto LABEL_35;
    }
LABEL_39:
    if (!v14) {
      return result;
    }
    __break(1u);
    goto LABEL_41;
  }
  unint64_t result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  uint64_t v21 = sub_1A8A75098();
  unint64_t result = swift_release();
  uint64_t *v3 = v21;
  if (!v21) {
    goto LABEL_39;
  }
LABEL_35:
  unint64_t result = swift_beginAccess();
  if ((*(void *)(v21 + 24) & 0x3FLL) != v14) {
    *(void *)(v21 + 24) = *(void *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  }
  return result;
}

uint64_t sub_1A88B8EF8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      uint64_t v3 = sub_1A88C679C(v2, 0);
      uint64_t result = sub_1A8A77DD8();
      if (v5) {
        break;
      }
      if (result == v2) {
        return (uint64_t)v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = sub_1A8A76848();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1A88B8F94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Message(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A88B8FF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  long long v11 = *(_OWORD *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 112);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8640D64(v13, v12, v2, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v8, v9);
  return a1;
}

unint64_t sub_1A88B909C(unint64_t result, uint64_t a2, char a3, uint64_t (*a4)(unint64_t, unint64_t))
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return a4(result, result + a2);
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >> 11 == 27)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (WORD1(result) > 0x10u)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  return sub_1A88B8204(result, (uint64_t (*)(uint64_t *))sub_1A88BACBC);
}

uint64_t sub_1A88B9138()
{
  return swift_deallocObject();
}

uint64_t sub_1A88B9148(uint64_t a1, uint64_t a2)
{
  return sub_1A88B7958(a1, a2, v2);
}

uint64_t sub_1A88B9150(uint64_t a1, unint64_t a2, void (*a3)(char *, void *))
{
  v16[4] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = HIBYTE(a2) & 0xF;
  v16[0] = a1;
  v16[1] = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  v16[2] = 0;
  v16[3] = v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v5 = sub_1A8A76838();
  if (v6)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    while (1)
    {
      if (v7 == 2573 && v8 == 0xE200000000000000 || (sub_1A8A78588() & 1) != 0) {
        goto LABEL_15;
      }
      if (sub_1A8A76278())
      {
        unint64_t v10 = sub_1A8884574(v7, v8);
        if ((v10 & 0x100000000) != 0) {
          goto LABEL_22;
        }
        if ((v10 & 0xFFFFFF80) == 0) {
          break;
        }
      }
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v7 = sub_1A8A76838();
      unint64_t v8 = v9;
      if (!v9) {
        return swift_bridgeObjectRelease();
      }
    }
    unint64_t v11 = sub_1A8884574(v7, v8);
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_23;
    }
    if ((v11 & 0xFFFFFF00) != 0)
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
LABEL_15:
    __int16 v12 = sub_1A88B5A8C(v7, v8);
    swift_bridgeObjectRelease();
    if ((v12 & 0x100) == 0)
    {
      char v13 = v12;
      if (v12 - 127 >= 0xFFFFFFA1)
      {
        if (v12 - 91 >= 0xFFFFFFE6) {
          char v13 = v12 | 0x20;
        }
        char v15 = v13;
        a3(&v15, v16);
      }
    }
    goto LABEL_6;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B92F4(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v25 = a6;
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (v11 < 0) {
    goto LABEL_9;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A87364EC(a10);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t isStackAllocationSafe = sub_1A87364EC(a10);
  if (v11 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v24 = (uint64_t)&v24;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v18 = a8;
    uint64_t v20 = (char *)&v24 - v19;
    uint64_t v21 = (char *)&v24 + v11 - v19;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A87364EC(a10);
    sub_1A88B7500((uint64_t)v20, (uint64_t)v21, a4 & 1, a5, a1, a2, v25, a7, v18, a9, a10);
  }
  else
  {
    uint64_t v22 = swift_slowAlloc();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A87364EC(a10);
    sub_1A88B7500(v22, v22 + v11, a4 & 1, a5, a1, a2, v25, a7, a8, a9, a10);
    MEMORY[0x1AD0E4D00](v22, -1, -1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A87F0804(a10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A87F0804(a10);
}

uint64_t sub_1A88B95C0(uint64_t a1, unint64_t a2, void (*a3)(char *, char *))
{
  v17[4] = *MEMORY[0x1E4F143B8];
  LOBYTE(v17[0]) = 34;
  a3((char *)v17, (char *)v17 + 1);
  uint64_t v6 = HIBYTE(a2) & 0xF;
  v17[0] = a1;
  v17[1] = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  v17[2] = 0;
  v17[3] = v6;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v7 = sub_1A8A76838();
  if (v8)
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    while (1)
    {
      if (v9 == 2573 && v10 == 0xE200000000000000 || (sub_1A8A78588() & 1) != 0) {
        goto LABEL_15;
      }
      if (sub_1A8A76278())
      {
        unint64_t v12 = sub_1A8884574(v9, v10);
        if ((v12 & 0x100000000) != 0) {
          goto LABEL_23;
        }
        if ((v12 & 0xFFFFFF80) == 0) {
          break;
        }
      }
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v9 = sub_1A8A76838();
      unint64_t v10 = v11;
      if (!v11) {
        goto LABEL_21;
      }
    }
    unint64_t v13 = sub_1A8884574(v9, v10);
    if ((v13 & 0x100000000) != 0) {
      goto LABEL_24;
    }
    if ((v13 & 0xFFFFFF00) != 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
LABEL_15:
    __int16 v14 = sub_1A88B5A8C(v9, v10);
    swift_bridgeObjectRelease();
    if ((v14 & 0x100) == 0)
    {
      if (v14 == 92 || v14 == 34)
      {
        char v16 = 92;
        a3(&v16, (char *)v17);
        char v16 = v14;
        a3(&v16, (char *)v17);
      }
      else if (v14 - 127 >= 0xFFFFFFA1)
      {
        char v16 = v14;
        a3(&v16, (char *)v17);
      }
    }
    goto LABEL_6;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  LOBYTE(v17[0]) = 34;
  return ((uint64_t (*)(void *, char *))a3)(v17, (char *)v17 + 1);
}

uint64_t sub_1A88B97E8(uint64_t a1, unint64_t a2, void (*a3)(char *, char *))
{
  v17[4] = *MEMORY[0x1E4F143B8];
  if (sub_1A88B5934())
  {
    uint64_t v6 = HIBYTE(a2) & 0xF;
    v17[0] = a1;
    v17[1] = a2;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
    }
    v17[2] = 0;
    v17[3] = v6;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v7 = sub_1A8A76838();
    if (v8)
    {
      uint64_t v9 = v7;
      unint64_t v10 = v8;
      while (1)
      {
        if (v9 == 2573 && v10 == 0xE200000000000000 || (sub_1A8A78588() & 1) != 0) {
          goto LABEL_16;
        }
        if (sub_1A8A76278())
        {
          unint64_t v12 = sub_1A8884574(v9, v10);
          if ((v12 & 0x100000000) != 0) {
            goto LABEL_23;
          }
          if ((v12 & 0xFFFFFF80) == 0) {
            break;
          }
        }
        swift_bridgeObjectRelease();
LABEL_7:
        uint64_t v9 = sub_1A8A76838();
        unint64_t v10 = v11;
        if (!v11) {
          return swift_bridgeObjectRelease();
        }
      }
      unint64_t v13 = sub_1A8884574(v9, v10);
      if ((v13 & 0x100000000) != 0) {
        goto LABEL_24;
      }
      if ((v13 & 0xFFFFFF00) != 0)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
LABEL_16:
      __int16 v14 = sub_1A88B5A8C(v9, v10);
      swift_bridgeObjectRelease();
      if ((v14 & 0x100) == 0)
      {
        char v16 = v14;
        a3(&v16, (char *)v17);
      }
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_1A88B95C0(a1, a2, a3);
  }
}

uint64_t sub_1A88B99C8(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, char a10)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (v11 < 0) {
    goto LABEL_9;
  }
  uint64_t v24 = a1;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v11 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v23 = (uint64_t)&v23;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v19 = (char *)&v23 - v18;
    uint64_t v20 = (char *)&v23 + v11 - v18;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88B6108((uint64_t)v19, (uint64_t)v20, a4 & 1, a5, v24, a2, a6, a7, a8, a9, a10 & 1);
  }
  else
  {
    uint64_t v21 = swift_slowAlloc();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88B6108(v21, v21 + v11, a4 & 1, a5, v24, a2, a6, a7, a8, a9, a10 & 1);
    MEMORY[0x1AD0E4D00](v21, -1, -1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88B9C34(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t *))
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  if (a5 < 3) {
    goto LABEL_28;
  }
  char v25 = 34;
  a6(&v25, &v26);
  unint64_t v8 = a1 >> 14;
  unint64_t v20 = a2 >> 14;
  if (a1 >> 14 < a2 >> 14)
  {
    uint64_t v9 = 2;
    do
    {
      uint64_t v11 = sub_1A8A77928();
      unint64_t v12 = v10;
      if ((v11 != 2573 || v10 != 0xE200000000000000) && (sub_1A8A78588() & 1) == 0)
      {
        if ((sub_1A8A76278() & 1) == 0) {
          goto LABEL_4;
        }
        unint64_t v13 = sub_1A8884574(v11, v12);
        if ((v13 & 0x100000000) != 0) {
          goto LABEL_31;
        }
        if ((v13 & 0xFFFFFF80) != 0)
        {
LABEL_4:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        unint64_t v14 = sub_1A8884574(v11, v12);
        if ((v14 & 0x100000000) != 0) {
          goto LABEL_32;
        }
        if ((v14 & 0xFFFFFF00) != 0) {
          goto LABEL_27;
        }
      }
      __int16 v15 = sub_1A88B5A8C(v11, v12);
      swift_bridgeObjectRelease();
      if ((v15 & 0x100) == 0)
      {
        if (v15 == 92 || v15 == 34)
        {
          BOOL v16 = __OFADD__(v9, 2);
          v9 += 2;
          if (v16)
          {
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
          }
          if (v9 >= a5) {
            break;
          }
          char v22 = 92;
          a6(&v22, (uint64_t *)&v23);
          char v21 = v15;
          a6(&v21, (uint64_t *)&v22);
        }
        else if (v15 - 127 >= 0xFFFFFFA1)
        {
          BOOL v16 = __OFADD__(v9++, 1);
          if (v16) {
            goto LABEL_30;
          }
          if (v9 >= a5) {
            break;
          }
          char v23 = v15;
          a6(&v23, (uint64_t *)&v24);
        }
      }
LABEL_5:
      unint64_t v8 = (unint64_t)sub_1A8A778E8() >> 14;
    }
    while (v8 < v20);
  }
  char v24 = 34;
  a6(&v24, (uint64_t *)&v25);
  if (v20 < v8) {
    goto LABEL_29;
  }
  return sub_1A8A77938();
}

uint64_t sub_1A88B9F04(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, char a4, uint64_t a5, long long *a6, uint64_t a7)
{
  v20[1] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (v8 < 0) {
    goto LABEL_9;
  }
  sub_1A872E2C4((uint64_t)a6);
  sub_1A87364EC(a7);
  sub_1A872E2C4((uint64_t)a6);
  uint64_t isStackAllocationSafe = sub_1A87364EC(a7);
  if (v8 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    BOOL v16 = (char *)v20 - v15;
    uint64_t v17 = (char *)v20 + v8 - v15;
    sub_1A872E2C4((uint64_t)a6);
    sub_1A87364EC(a7);
    sub_1A88B7258((uint64_t)v16, (uint64_t)v17, a4 & 1, a5, a1, a2, a6, a7);
  }
  else
  {
    uint64_t v18 = swift_slowAlloc();
    sub_1A872E2C4((uint64_t)a6);
    sub_1A87364EC(a7);
    sub_1A88B7258(v18, v18 + v8, a4 & 1, a5, a1, a2, a6, a7);
    MEMORY[0x1AD0E4D00](v18, -1, -1);
  }
  sub_1A872E440((uint64_t)a6);
  sub_1A87F0804(a7);
  sub_1A872E440((uint64_t)a6);
  return sub_1A87F0804(a7);
}

uint64_t sub_1A88BA148(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  v23[3] = *MEMORY[0x1E4F143B8];
  uint64_t v10 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (v10 < 0) {
    goto LABEL_9;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A87364EC(a9);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t isStackAllocationSafe = sub_1A87364EC(a9);
  if (v10 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v23[1] = v23;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v19 = (char *)v23 - v18;
    unint64_t v20 = (char *)v23 + v10 - v18;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A87364EC(a9);
    sub_1A88B6FC4((uint64_t)v19, (uint64_t)v20, a4 & 1, a5, a1, a2, a6, a7, a8, a9);
  }
  else
  {
    uint64_t v21 = swift_slowAlloc();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A87364EC(a9);
    sub_1A88B6FC4(v21, v21 + v10, a4 & 1, a5, a1, a2, a6, a7, a8, a9);
    MEMORY[0x1AD0E4D00](v21, -1, -1);
  }
  swift_bridgeObjectRelease();
  sub_1A87F0804(a9);
  swift_bridgeObjectRelease();
  return sub_1A87F0804(a9);
}

uint64_t sub_1A88BA3B0(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  v18[1] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_10:
    __break(1u);
  }
  if (v7 < 0) {
    goto LABEL_10;
  }
  sub_1A88B8FF0(a6);
  uint64_t isStackAllocationSafe = sub_1A88B8FF0(a6);
  if (v7 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v14 = (char *)v18 - v13;
    uint64_t v15 = (char *)v18 + v7 - v13;
    sub_1A88B8FF0(a6);
    sub_1A88B6DA0((uint64_t)v14, (uint64_t)v15, a4 & 1, a5, a1, a2, a6);
    sub_1A88BAF68(a6);
    return sub_1A88BAF68(a6);
  }
  else
  {
    uint64_t v17 = swift_slowAlloc();
    sub_1A88B8FF0(a6);
    sub_1A88B6DA0(v17, v17 + v7, a4 & 1, a5, a1, a2, a6);
    MEMORY[0x1AD0E4D00](v17, -1, -1);
    sub_1A88BAF68(a6);
    return sub_1A88BAF68(a6);
  }
}

uint64_t sub_1A88BA5DC(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  sub_1A88B8D14(v3, 0);
  sub_1A89029F4(0, v3, 0);
  if (!v3) {
    return 0;
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v6 = *(v4 - 3);
    uint64_t v5 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t result = sub_1A8893724(v6, v5, 0, v14);
    if ((v10 & 1) == 0) {
      break;
    }
    sub_1A88B82E8(v6, v5);
    unint64_t v12 = *(void *)(v2 + 16);
    unint64_t v11 = *(void *)(v2 + 24);
    if (v12 >= v11 >> 1) {
      sub_1A89029F4((char *)(v11 > 1), v12 + 1, 1);
    }
    v4 += 4;
    *(void *)(v2 + 16) = v12 + 1;
    uint64_t v13 = v2 + 16 * v12;
    *(void *)(v13 + 32) = v8;
    *(void *)(v13 + 40) = v7;
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88BA720(unint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(unint64_t, unint64_t), uint64_t a6, uint64_t a7, uint64_t (*a8)(char *, char *), uint64_t a9, uint64_t a10)
{
  v17[0] = a4;
  sub_1A88B909C(a1, a2, a3, a5);
  uint64_t result = a5((unint64_t)": ", (unint64_t)"");
  if (a3)
  {
    __break(1u);
  }
  else if (!__OFADD__(a2, 2))
  {
    uint64_t v18 = a2 + 2;
    sub_1A88B4EE0((uint64_t)v17, a7, a8, a9, a10, &v19);
    sub_1A88DA520(a4, (uint64_t (*)(char *, char *))a5);
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88BA7E0(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (v7 < 0) {
    goto LABEL_9;
  }
  long long v12 = *(_OWORD *)(a6 + 16);
  long long v23 = *(_OWORD *)a6;
  long long v24 = v12;
  uint64_t v13 = *(void *)(a6 + 32);
  sub_1A8529F8C((uint64_t)&v24, (uint64_t)v25, &qword_1E9743288);
  uint64_t v21 = v13;
  uint64_t v22 = *((void *)&v24 + 1);
  sub_1A8561B38((uint64_t)&v23);
  sub_1A858B1E0((uint64_t)v25);
  sub_1A858B1E0((uint64_t)&v22);
  sub_1A858B1E0((uint64_t)&v21);
  sub_1A8561B38((uint64_t)&v23);
  sub_1A858B1E0((uint64_t)v25);
  sub_1A858B1E0((uint64_t)&v22);
  uint64_t isStackAllocationSafe = sub_1A858B1E0((uint64_t)&v21);
  if (v7 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    BOOL v16 = &v20[-v15];
    uint64_t v17 = &v20[v7 - v15];
    sub_1A8561B38((uint64_t)&v23);
    sub_1A858B1E0((uint64_t)v25);
    sub_1A858B1E0((uint64_t)&v22);
    sub_1A858B1E0((uint64_t)&v21);
    sub_1A88B63B4((uint64_t)v16, (uint64_t)v17, a4 & 1, a5, a1, a2, (long long *)a6);
  }
  else
  {
    uint64_t v18 = swift_slowAlloc();
    sub_1A8561B38((uint64_t)&v23);
    sub_1A858B1E0((uint64_t)v25);
    sub_1A858B1E0((uint64_t)&v22);
    sub_1A858B1E0((uint64_t)&v21);
    sub_1A88B63B4(v18, v18 + v7, a4 & 1, a5, a1, a2, (long long *)a6);
    MEMORY[0x1AD0E4D00](v18, -1, -1);
  }
  sub_1A853489C((uint64_t)&v23);
  sub_1A858B20C((uint64_t)v25);
  sub_1A858B20C((uint64_t)&v22);
  sub_1A858B20C((uint64_t)&v21);
  sub_1A853489C((uint64_t)&v23);
  sub_1A858B20C((uint64_t)v25);
  sub_1A858B20C((uint64_t)&v22);
  return sub_1A858B20C((uint64_t)&v21);
}

uint64_t sub_1A88BAAD8(uint64_t a1, unint64_t a2, void (*a3)(char *, void *))
{
  v15[4] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = HIBYTE(a2) & 0xF;
  v15[0] = a1;
  v15[1] = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  void v15[2] = 0;
  v15[3] = v4;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v5 = sub_1A8A76838();
  if (v6)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    while (1)
    {
      if (v7 == 2573 && v8 == 0xE200000000000000 || (sub_1A8A78588() & 1) != 0) {
        goto LABEL_15;
      }
      if (sub_1A8A76278())
      {
        unint64_t v10 = sub_1A8884574(v7, v8);
        if ((v10 & 0x100000000) != 0) {
          goto LABEL_20;
        }
        if ((v10 & 0xFFFFFF80) == 0) {
          break;
        }
      }
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v7 = sub_1A8A76838();
      unint64_t v8 = v9;
      if (!v9) {
        return swift_bridgeObjectRelease();
      }
    }
    unint64_t v11 = sub_1A8884574(v7, v8);
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_21;
    }
    if ((v11 & 0xFFFFFF00) != 0)
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
LABEL_15:
    __int16 v12 = sub_1A88B5A8C(v7, v8);
    swift_bridgeObjectRelease();
    if ((v12 & 0x100) == 0 && v12 - 127 >= 0xFFFFFFA1)
    {
      char v14 = v12;
      a3(&v14, v15);
    }
    goto LABEL_6;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A88BAC68()
{
  unint64_t result = qword_1E9743C38;
  if (!qword_1E9743C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743C38);
  }
  return result;
}

uint64_t sub_1A88BACBC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = a1 + a2;
  }
  else {
    uint64_t v3 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(a1, v3);
}

uint64_t sub_1A88BACF0()
{
  return swift_deallocObject();
}

uint64_t sub_1A88BAD00(uint64_t a1)
{
  **(void **)(v1 + 16) = a1;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88BAD40(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v9 = a3 + (a4 & 1);
  if (__OFADD__(a3, a4 & 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (v9 < 0) {
    goto LABEL_9;
  }
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v9 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v18 = (char *)v22 - v17;
    uint64_t v19 = (char *)v22 + v9 - v17;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    a8(v18, v19, a4 & 1, a5, a1, a2, a6, a7);
  }
  else
  {
    uint64_t v20 = swift_slowAlloc();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    a8((char *)v20, (char *)(v20 + v9), a4 & 1, a5, a1, a2, a6, a7);
    MEMORY[0x1AD0E4D00](v20, -1, -1);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1A88BAF30()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A88BAF68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  long long v11 = *(_OWORD *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A856B80C(v13, v12, v2, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v8, v9);
  return a1;
}

uint64_t sub_1A88BB01C(uint64_t a1)
{
  sub_1A8A78738();
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A8A78768();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    do
    {
      ++v3;
      sub_1A8A78778();
      --v2;
    }
    while (v2);
  }
  return sub_1A8A787C8();
}

uint64_t sub_1A88BB08C()
{
  return sub_1A88BB01C(*v0);
}

uint64_t sub_1A88BB094@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a1;
  if (a1) {
    int64_t v6 = a2 - a1;
  }
  else {
    int64_t v6 = 0;
  }
  uint64_t result = MEMORY[0x1AD0DF770](v6);
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  if (v4) {
    goto LABEL_7;
  }
  if (a2)
  {
    uint64_t v4 = 0;
    do
    {
      unsigned int v10 = *v4++;
      uint64_t result = v10;
      if (v10 - 1 <= 0x7D)
      {
        uint64_t v11 = v8;
        unint64_t v12 = v9;
        uint64_t result = sub_1A8A766D8();
        uint64_t v8 = v11;
        unint64_t v9 = v12;
      }
LABEL_7:
      ;
    }
    while (!a2 || v4 != a2);
  }
  *a3 = v8;
  a3[1] = v9;
  return result;
}

void sub_1A88BB140()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    if (v1) {
      uint64_t v3 = v2 - v1;
    }
    else {
      uint64_t v3 = 0;
    }
    if (v3 < 0) {
      __break(1u);
    }
    else {
      sub_1A88DBF44(0, v3, v1, v2);
    }
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)v0;
    uint64_t v5 = *(unsigned __int8 **)(v0 + 8);
    sub_1A88BB1BC(v4, v5);
  }
}

uint64_t sub_1A88BB1BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3 = a1;
  if (a1) {
    int64_t v4 = a2 - a1;
  }
  else {
    int64_t v4 = 0;
  }
  MEMORY[0x1AD0DF770](v4);
  uint64_t result = 0;
  unint64_t v6 = 0xE000000000000000;
  if (v3) {
    goto LABEL_7;
  }
  if (a2)
  {
    uint64_t v3 = 0;
    do
    {
      int v7 = *v3++;
      if ((v7 - 1) <= 0x7D)
      {
        uint64_t v8 = result;
        unint64_t v9 = v6;
        sub_1A8A766D8();
        uint64_t result = v8;
        unint64_t v6 = v9;
      }
LABEL_7:
      ;
    }
    while (!a2 || v3 != a2);
  }
  return result;
}

uint64_t sub_1A88BB254(unsigned __int8 *a1, unsigned __int8 *a2, char a3)
{
  uint64_t v5 = a1;
  if (a1) {
    int64_t v6 = a2 - a1;
  }
  else {
    int64_t v6 = 0;
  }
  MEMORY[0x1AD0DF770](v6);
  uint64_t result = 0;
  unint64_t v8 = 0xE000000000000000;
  if (v5) {
    goto LABEL_7;
  }
  if (a2)
  {
    char v9 = 0;
    uint64_t v5 = 0;
    do
    {
      int v11 = *v5++;
      int v10 = v11;
      if ((v11 - 1) >= 0x7E)
      {
LABEL_7:
        char v9 = 0;
      }
      else if ((v9 & 1) != 0 || (a3 & 1) == 0 || (char v9 = 1, v10 != 92))
      {
        uint64_t v12 = result;
        unint64_t v13 = v8;
        sub_1A8A766D8();
        char v9 = 0;
        uint64_t result = v12;
        unint64_t v8 = v13;
      }
    }
    while (!a2 || v5 != a2);
  }
  return result;
}

uint64_t sub_1A88BB310()
{
  return sub_1A88BB1BC(*v0, v0[1]);
}

BOOL sub_1A88BB318(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  BOOL v5 = *(void *)a1 == *(void *)a2 && v2 == v3;
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    BOOL v5 = 0;
  }
  BOOL v7 = *(void *)a1 == *(void *)a2 && v2 == v3;
  if (*(unsigned char *)(a2 + 16)) {
    BOOL v7 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    return v5;
  }
  else {
    return v7;
  }
}

uint64_t sub_1A88BB35C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    uint64_t v3 = 0x28646E652ELL;
  }
  else
  {
    sub_1A8A77DC8();
    swift_bridgeObjectRelease();
    uint64_t v3 = 0x28656C6464696D2ELL;
  }
  uint64_t v5 = v3;
  sub_1A8A784D8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  sub_1A8A784D8();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A8A767E8();
  return v5;
}

uint64_t sub_1A88BB46C()
{
  return sub_1A88BB35C(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void *sub_1A88BB478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *__little, uint64_t a7)
{
  uint64_t result = 0;
  if (__little && a3)
  {
    size_t v14 = a7 - (void)__little;
    uint64_t v15 = a1;
    do
    {
      uint64_t v16 = a3 + v15;
      uint64_t result = memmem((const void *)(a3 + v15), a2 - v15, __little, v14);
      if (!result) {
        break;
      }
      uint64_t v17 = (uint64_t)result - v16;
      if ((uint64_t)result - v16 < 0) {
        return 0;
      }
      uint64_t v18 = v17 + v14;
      if (__OFADD__(v17, v14))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        return result;
      }
      if (a2 - v15 < v18) {
        return 0;
      }
      uint64_t v19 = v17 + v15;
      if (__OFADD__(v17, v15)) {
        goto LABEL_20;
      }
      BOOL v20 = __OFADD__(v18, v15);
      v15 += v18;
      if (v20) {
        goto LABEL_21;
      }
      if (v18 < v17 || v15 < v19) {
        goto LABEL_22;
      }
      if (v19 < a1) {
        goto LABEL_23;
      }
      if (v15 > a2) {
        goto LABEL_24;
      }
      uint64_t result = (void *)sub_1A88BB5B8(a1, a2, a3, a4, a5, v19, v15);
    }
    while (v21 == -1);
  }
  return result;
}

uint64_t sub_1A88BB5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  if (__OFADD__(a1, 2))
  {
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (a1 + 2 != a6)
  {
    switch(a5)
    {
      case 1:
        if (__OFADD__(a1, 3)) {
          goto LABEL_90;
        }
        if (a1 + 3 > a6) {
          return 0;
        }
        uint64_t v13 = a6 - 3;
        if (__OFSUB__(a6, 3)) {
          goto LABEL_95;
        }
        if (v13 < a1 || v13 >= a2) {
          goto LABEL_96;
        }
        if (*(unsigned char *)(a3 + v13) != 13) {
          return 0;
        }
        uint64_t v16 = a6 - 2;
        if (a6 - 2 < a1 || v16 >= a2) {
          goto LABEL_101;
        }
        if (*(unsigned char *)(a3 + v16) != 45) {
          return 0;
        }
        if (a6 <= a2) {
          goto LABEL_9;
        }
        __break(1u);
LABEL_25:
        if (__OFADD__(a1, 3)) {
          goto LABEL_91;
        }
        if (a1 + 3 > a6) {
          return 0;
        }
        uint64_t v13 = a6 - 3;
        if (__OFSUB__(a6, 3)) {
          goto LABEL_97;
        }
        if (v13 < a1 || v13 >= a2) {
          goto LABEL_98;
        }
        if (*(unsigned char *)(a3 + v13) != 10) {
          return 0;
        }
        uint64_t v17 = a6 - 2;
        if (a6 - 2 < a1 || v17 >= a2) {
          goto LABEL_102;
        }
        if (*(unsigned char *)(a3 + v17) != 45) {
          return 0;
        }
        if (a6 <= a2) {
          goto LABEL_9;
        }
        __break(1u);
LABEL_36:
        uint64_t v14 = sub_1A88BB9A8(a1, a2, a3, a6);
        if (v18)
        {
          uint64_t v14 = sub_1A88BBA5C(a1, a2, a3, a6);
          if (v19) {
            return 0;
          }
        }
LABEL_38:
        uint64_t v13 = v14;
        break;
      case 2:
        goto LABEL_25;
      case 3:
        goto LABEL_36;
      default:
        uint64_t v14 = sub_1A88BB9A8(a1, a2, a3, a6);
        if (v15) {
          return 0;
        }
        goto LABEL_38;
    }
    goto LABEL_39;
  }
  uint64_t v13 = a6 - 2;
  if (__OFSUB__(a6, 2)) {
    goto LABEL_84;
  }
  if (v13 < a1 || v13 >= a2) {
    goto LABEL_85;
  }
  if (*(unsigned char *)(a3 + v13) != 45) {
    return 0;
  }
  if (a6 <= a1 || a6 > a2) {
    goto LABEL_87;
  }
LABEL_9:
  if (*(unsigned char *)(a6 + a3 - 1) != 45) {
    return 0;
  }
LABEL_39:
  if (__OFADD__(a7, 2))
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (a7 + 2 == a2)
  {
    if (a7 < a1 || a7 >= a2) {
      goto LABEL_89;
    }
    if (*(unsigned char *)(a3 + a7) == 45)
    {
      if (a7 + 1 >= a2)
      {
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      if (*(unsigned char *)(a3 + a7 + 1) == 45)
      {
        if (v13 <= a2) {
          return v13;
        }
        goto LABEL_100;
      }
    }
  }
  uint64_t v20 = sub_1A88BBE44(a5, a7, a1, a2, a3, v13);
  if (v21 == -1)
  {
    if (a2 < a7)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    if (a7 < a1)
    {
LABEL_93:
      __break(1u);
      goto LABEL_94;
    }
    uint64_t v28 = a7;
    if (a7 == a2) {
      goto LABEL_53;
    }
    if (a7 >= a2)
    {
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
      JUMPOUT(0x1A88BB998);
    }
    int v22 = *(unsigned __int8 *)(a3 + a7);
    if (v22 == 45)
    {
      if (a7 + 1 == a2) {
        return 0;
      }
      if (a7 + 1 >= a2) {
        goto LABEL_103;
      }
      if (*(unsigned char *)(a3 + a7 + 1) != 45) {
        return 0;
      }
      a7 += 2;
      uint64_t v28 = a7;
      if (a7 == a2) {
        goto LABEL_79;
      }
    }
    if (a7 <= a2) {
      uint64_t v23 = a2;
    }
    else {
      uint64_t v23 = a7;
    }
    if (a7 < a2)
    {
      int v24 = *(unsigned __int8 *)(a3 + a7);
      if (v24 == 32 || v24 == 9)
      {
        if (++a7 != a2)
        {
          while (v23 != a7)
          {
            int v25 = *(unsigned __int8 *)(a3 + a7);
            if (v25 != 32 && v25 != 9) {
              goto LABEL_77;
            }
            if (a2 == ++a7) {
              goto LABEL_75;
            }
          }
          goto LABEL_88;
        }
LABEL_75:
        uint64_t v28 = a2;
        if (v22 == 45)
        {
LABEL_79:
          if (v28 >= v13) {
            return v13;
          }
          __break(1u);
          return 0;
        }
      }
      else
      {
LABEL_77:
        uint64_t v28 = a7;
        if (v22 == 45)
        {
          if ((sub_1A88DC32C(a5) & 1) == 0) {
            return 0;
          }
          goto LABEL_79;
        }
      }
LABEL_53:
      if ((sub_1A88DC32C(a5) & 1) == 0) {
        return 0;
      }
      goto LABEL_79;
    }
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  return v20;
}

uint64_t sub_1A88BB9A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (__OFADD__(result, 4))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (result + 4 > a4) {
    return 0;
  }
  uint64_t v4 = result;
  uint64_t result = a4 - 4;
  if (__OFSUB__(a4, 4)) {
    goto LABEL_16;
  }
  if (result < v4 || result >= a2) {
    goto LABEL_17;
  }
  if (*(unsigned char *)(a3 + result) != 13) {
    return 0;
  }
  uint64_t v5 = a4 - 3;
  if (a4 - 3 < v4 || v5 >= a2) {
    goto LABEL_18;
  }
  if (*(unsigned char *)(a3 + v5) != 10) {
    return 0;
  }
  if (a4 - 2 >= a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*(unsigned char *)(a3 + a4 - 2) != 45) {
    return 0;
  }
  if (a4 <= a2)
  {
    if (*(unsigned char *)(a4 + a3 - 1) == 45) {
      return result;
    }
    return 0;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1A88BBA5C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (__OFADD__(result, 3))
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (result + 3 > a4) {
    return 0;
  }
  uint64_t v4 = result;
  uint64_t result = a4 - 3;
  if (__OFSUB__(a4, 3)) {
    goto LABEL_14;
  }
  if (result < v4 || result >= a2) {
    goto LABEL_15;
  }
  if (*(unsigned char *)(a3 + result) != 10) {
    return 0;
  }
  uint64_t v5 = a4 - 2;
  if (a4 - 2 < v4 || v5 >= a2) {
    goto LABEL_16;
  }
  if (*(unsigned char *)(a3 + v5) != 45) {
    return 0;
  }
  if (a4 <= a2)
  {
    if (*(unsigned char *)(a4 + a3 - 1) == 45) {
      return result;
    }
    return 0;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1A88BBAF4(unsigned __int8 a1, unsigned __int8 a2, unsigned __int8 a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = a5 + 4;
  if (__OFADD__(a5, 4))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (result > a7) {
    return 0;
  }
  if (a5 < a6 || a5 >= a7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(unsigned __int8 *)(a8 + a5) != a1) {
    return 0;
  }
  if (a5 + 1 >= a7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a8 + a5 + 1) != a2) {
    return 0;
  }
  if (a5 + 2 >= a7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(a8 + a5 + 2) != a3) {
    return 0;
  }
  if (a5 + 3 < a7)
  {
    if (*(unsigned __int8 *)(a8 + a5 + 3) == a4) {
      return result;
    }
    return 0;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1A88BBB94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v6 <= a3)
  {
    if (result < a2 || result >= a3) {
      goto LABEL_23;
    }
    if (*(unsigned char *)(a4 + result) == 13)
    {
      if (v6 >= a5) {
        return a5;
      }
      goto LABEL_25;
    }
  }
  uint64_t v7 = result + 3;
  if (__OFADD__(result, 3))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 > a3) {
    return 0;
  }
  if (result < a2 || result >= a3)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (*(unsigned char *)(a4 + result) != 45) {
    return 0;
  }
  if (v6 < a2 || v6 >= a3) {
    goto LABEL_26;
  }
  if (*(unsigned char *)(a4 + v6) != 45) {
    return 0;
  }
  if (result + 2 < a3)
  {
    if (*(unsigned char *)(a4 + result + 2) == 13)
    {
      if (v7 >= a5) {
        return a5;
      }
      goto LABEL_28;
    }
    return 0;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A88BBC80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v6 <= a3)
  {
    if (result < a2 || result >= a3) {
      goto LABEL_23;
    }
    if (*(unsigned char *)(a4 + result) == 10)
    {
      if (v6 >= a5) {
        return a5;
      }
      goto LABEL_25;
    }
  }
  uint64_t v7 = result + 3;
  if (__OFADD__(result, 3))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 > a3) {
    return 0;
  }
  if (result < a2 || result >= a3)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (*(unsigned char *)(a4 + result) != 2) {
    return 0;
  }
  if (v6 < a2 || v6 >= a3) {
    goto LABEL_26;
  }
  if (*(unsigned char *)(a4 + v6) != 45) {
    return 0;
  }
  if (result + 2 < a3)
  {
    if (*(unsigned char *)(a4 + result + 2) == 10)
    {
      if (v7 >= a5) {
        return a5;
      }
      goto LABEL_28;
    }
    return 0;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A88BBD6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = result + 2;
  if (__OFADD__(result, 2))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = a5;
  if (v5 > a3)
  {
LABEL_10:
    uint64_t result = sub_1A88BBAF4(0x2Du, 0x2Du, 0xDu, 0xAu, result, a2, a3, a4);
    if (v7) {
      return 0;
    }
    if (result >= v6) {
      return v6;
    }
    goto LABEL_17;
  }
  if (result < a2 || result >= a3)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (*(unsigned char *)(a4 + result) != 13) {
    goto LABEL_10;
  }
  if (result + 1 >= a3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(unsigned char *)(a4 + result + 1) != 10) {
    goto LABEL_10;
  }
  if (v5 >= a5) {
    return v6;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1A88BBE44(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  switch(a1)
  {
    case 1:
      return sub_1A88BBB94(a2, a3, a4, a5, a6);
    case 2:
      return sub_1A88BBC80(a2, a3, a4, a5, v6);
    case 3:
      uint64_t v13 = sub_1A88BBD6C(a2, a3, a4, a5, a6);
      if (v14 != -1) {
        return v13;
      }
      return sub_1A88BBC80(a2, a3, a4, a5, v6);
    default:
      uint64_t v11 = a2 + 2;
      if (__OFADD__(a2, 2))
      {
        __break(1u);
        goto LABEL_22;
      }
      if (v11 > a4) {
        goto LABEL_17;
      }
      if (a2 < a3 || a2 >= a4)
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (*(unsigned char *)(a5 + a2) == 13)
      {
        if (a2 + 1 >= a4)
        {
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        if (*(unsigned char *)(a5 + a2 + 1) == 10)
        {
          if (v11 >= a6) {
            return v6;
          }
LABEL_25:
          __break(1u);
          JUMPOUT(0x1A88BBFD0);
        }
      }
LABEL_17:
      uint64_t v16 = sub_1A88BBAF4(0x2Du, 0x2Du, 0xDu, 0xAu, a2, a3, a4, a5);
      if ((v17 & 1) == 0)
      {
        if (v16 >= v6) {
          return v6;
        }
        goto LABEL_23;
      }
      return 0;
  }
}

ValueMetadata *type metadata accessor for Boundary()
{
  return &type metadata for Boundary;
}

__n128 __swift_memcpy17_8_3(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for UnsafeBoundary()
{
  return &type metadata for UnsafeBoundary;
}

__n128 __swift_memcpy16_8_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for UnsafeBoundary.PatchedBoundary()
{
  return &type metadata for UnsafeBoundary.PatchedBoundary;
}

uint64_t getEnumTagSinglePayload for UnsafeDelimiterLine(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnsafeDelimiterLine(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A88BC0BC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UnsafeDelimiterLine()
{
  return &type metadata for UnsafeDelimiterLine;
}

unint64_t sub_1A88BC0DC()
{
  unint64_t result = qword_1E974E210;
  if (!qword_1E974E210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E210);
  }
  return result;
}

double Cache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(void *)(v0 + 80) = v2;
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 96) = 1;
  return result;
}

double Cache.init()()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 80) = v2;
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 96) = 1;
  return result;
}

uint64_t Cache.deinit()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 16);
  if (v1)
  {
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v2 = 40;
    do
    {
      ucnv_close();
      v2 += 16;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v0 + 96) & 1) == 0)
  {
    unsigned int v3 = *(UIDNA **)(v0 + 88);
    if (v3) {
      uidna_close(v3);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Cache.__deallocating_deinit()
{
  Cache.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Cache()
{
  return self;
}

uint64_t getEnumTagSinglePayload for Cache.CachedConverter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Cache.CachedConverter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)double result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)double result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Cache.CachedConverter()
{
  return &type metadata for Cache.CachedConverter;
}

uint64_t sub_1A88BC320(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  char v7 = (char **)(a2 + 80);
  swift_beginAccess();
  unint64_t v8 = *(void **)(a2 + 80);
  unint64_t v9 = v8[2];
  if (v9)
  {
    int v10 = v8 + 4;
    if (v8[4] == a1)
    {
      uint64_t v18 = v8[5];
      goto LABEL_23;
    }
    if (v9 != 1)
    {
      if (v8[6] == a1)
      {
        uint64_t v18 = v8[7];
        unint64_t v12 = 1;
LABEL_22:
        uint64_t v19 = v10[2 * v12];
        sub_1A88BC5D4(v12);
        sub_1A88BC660(0, 0, v19, v18);
        goto LABEL_23;
      }
      if (v9 != 2)
      {
        uint64_t v11 = v8 + 9;
        unint64_t v12 = 2;
        while (*(v11 - 1) != a1)
        {
          unint64_t v13 = v12 + 1;
          if (__OFADD__(v12, 1))
          {
            __break(1u);
LABEL_28:
            __break(1u);
          }
          ++v12;
          v11 += 2;
          if (v13 == v9) {
            goto LABEL_10;
          }
        }
        if (v12 >= v9) {
          goto LABEL_28;
        }
        uint64_t v18 = *v11;
        if (v12) {
          goto LABEL_22;
        }
LABEL_23:
        ucnv_reset();
        ucnv_setFallback();
        uint64_t v22 = v18;
        goto LABEL_24;
      }
    }
  }
LABEL_10:
  LODWORD(v22) = 0;
  uint64_t v14 = ucnv_open();
  ucnv_setFallback();
  swift_beginAccess();
  sub_1A88BC660(0, 0, a1, v14);
  char v15 = *v7;
  if (*((void *)*v7 + 2) < 3uLL) {
    goto LABEL_17;
  }
  while (1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long *v7 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      break;
    }
    uint64_t v17 = *((void *)v15 + 2);
    if (!v17) {
      goto LABEL_16;
    }
LABEL_13:
    *((void *)v15 + 2) = v17 - 1;
    long long *v7 = v15;
    ucnv_close();
    char v15 = *v7;
    if (*((void *)*v7 + 2) <= 2uLL) {
      goto LABEL_17;
    }
  }
  char v15 = sub_1A88BC77C((uint64_t)v15);
  long long *v7 = v15;
  uint64_t v17 = *((void *)v15 + 2);
  if (v17) {
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  swift_endAccess();
  uint64_t v22 = v14;
LABEL_24:
  int v23 = 0;
  __int16 v24 = 0;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  a3(&v21, &v22);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    return v21;
  }
  return result;
}

uint64_t sub_1A88BC5D4(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1A88BC77C(v3);
    uint64_t v3 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = v3 + 16 * a1;
    uint64_t v8 = *(void *)(v7 + 32);
    memmove((void *)(v7 + 32), (const void *)(v7 + 48), 16 * (v5 - 1 - a1));
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
    return v8;
  }
  return result;
}

unint64_t sub_1A88BC660(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v6 = *v4;
  int64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = result;
  unint64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v11 > *(void *)(v6 + 24) >> 1)
  {
    if (v7 <= v11) {
      int64_t v14 = v7 + v10;
    }
    else {
      int64_t v14 = v7;
    }
    uint64_t result = (unint64_t)sub_1A8901A24((char *)result, v14, 1, (char *)v6);
    unint64_t v6 = result;
  }
  char v15 = (void *)(v6 + 32 + 16 * v8);
  if (!v10) {
    goto LABEL_19;
  }
  uint64_t v16 = *(void *)(v6 + 16);
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v15 + 2);
  uint64_t v19 = (void *)(v6 + 32 + 16 * a2);
  if (v15 + 2 != v19 || result >= (unint64_t)&v19[2 * v18]) {
    uint64_t result = (unint64_t)memmove((void *)result, v19, 16 * v18);
  }
  uint64_t v20 = *(void *)(v6 + 16);
  BOOL v17 = __OFADD__(v20, v10);
  uint64_t v21 = v20 + v10;
  if (!v17)
  {
    *(void *)(v6 + 16) = v21;
LABEL_19:
    *char v15 = a3;
    v15[1] = a4;
    *int v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_1A88BC77C(uint64_t a1)
{
  return sub_1A8901A24(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1A88BC790(uint64_t a1)
{
  return sub_1A8901D88(0, *(void *)(a1 + 16), 0, (char *)a1);
}

size_t sub_1A88BC7A4(void *a1)
{
  return sub_1A89023FC(0, a1[2], 0, a1);
}

uint64_t ContentDisposition.kind.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t sub_1A88BC7E8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t ContentDisposition.kind.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A88BC834(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_1A88BC834(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

double (*ContentDisposition.kind.modify())(void)
{
  return nullsub_1;
}

uint64_t ContentDisposition.attributes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ContentDisposition.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

double (*ContentDisposition.attributes.modify())(void)
{
  return nullsub_1;
}

uint64_t static ContentDisposition.Kind.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      return !a4;
    case 1:
      return a4 == 1;
    case 2:
      return a4 == 2;
  }
  if (a4 < 3) {
    return 0;
  }
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1A8A78588();
  }
}

uint64_t sub_1A88BC930(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  switch(v3)
  {
    case 0:
      return !v4;
    case 1:
      return v4 == 1;
    case 2:
      return v4 == 2;
  }
  if (v4 < 3) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return sub_1A8A78588();
}

uint64_t ContentDisposition.Attribute.key.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t sub_1A88BC9D8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 6) {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t ContentDisposition.Attribute.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A88BCA24(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_1A88BCA24(uint64_t a1, unint64_t a2)
{
  if (a2 >= 6) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

double (*ContentDisposition.Attribute.key.modify())(void)
{
  return nullsub_1;
}

uint64_t ContentDisposition.Attribute.value.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t ContentDisposition.Attribute.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

double (*ContentDisposition.Attribute.value.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1A88BCAEC(uint64_t *a1, uint64_t a2)
{
  return _s9IMAP2MIME18ContentDispositionV9AttributeV3KeyO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_1A88BCB04(uint64_t *a1, uint64_t a2)
{
  return _s9IMAP2MIME18ContentDispositionV9AttributeV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, a1[1], a1[2], a1[3], *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t static ContentDisposition.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a5 != 1) {
        return 0;
      }
    }
    else if (a2 == 2)
    {
      if (a5 != 2) {
        return 0;
      }
    }
    else if (a5 < 3 || (a1 != a4 || a2 != a5) && (sub_1A8A78588() & 1) == 0)
    {
      return 0;
    }
  }
  else if (a5)
  {
    return 0;
  }
  return sub_1A88BCE0C(a3, a6);
}

uint64_t sub_1A88BCBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a2 + 64);
    for (uint64_t i = (unint64_t *)(a1 + 64); ; i += 12)
    {
      uint64_t v5 = *(i - 3);
      uint64_t v6 = *(i - 2);
      uint64_t v8 = *(i - 1);
      unint64_t v7 = *i;
      unint64_t v10 = i[1];
      unint64_t v9 = i[2];
      unint64_t v11 = i[3];
      unint64_t v46 = i[7];
      uint64_t v12 = *(v3 - 3);
      uint64_t v13 = *(v3 - 2);
      uint64_t v15 = *(v3 - 1);
      unint64_t v14 = *v3;
      unint64_t v17 = v3[1];
      unint64_t v16 = v3[2];
      unint64_t v18 = v3[3];
      unint64_t v45 = v3[6];
      unint64_t v43 = v3[4];
      unint64_t v44 = v3[7];
      unint64_t v41 = i[6];
      unint64_t v42 = v3[5];
      unint64_t v39 = i[4];
      unint64_t v40 = i[5];
      if (v5)
      {
        if (!v12) {
          return 0;
        }
        if (*(i - 4) != *(v3 - 4) || v5 != v12)
        {
          unint64_t v36 = i[2];
          unint64_t v37 = v3[2];
          unint64_t v19 = i[3];
          unint64_t v34 = v3[3];
          unint64_t v35 = i[1];
          unint64_t v20 = *i;
          unint64_t v21 = *v3;
          unint64_t v33 = v3[1];
          char v22 = sub_1A8A78588();
          unint64_t v17 = v33;
          unint64_t v18 = v34;
          unint64_t v14 = v21;
          unint64_t v10 = v35;
          unint64_t v9 = v36;
          unint64_t v7 = v20;
          unint64_t v16 = v37;
          unint64_t v11 = v19;
          if ((v22 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v12)
      {
        return 0;
      }
      if (v6 != v13 || v8 != v15)
      {
        unint64_t v38 = v16;
        unint64_t v23 = v9;
        unint64_t v24 = v11;
        unint64_t v25 = v18;
        unint64_t v26 = v7;
        unint64_t v27 = v10;
        unint64_t v28 = v14;
        uint64_t v29 = v2;
        unint64_t v30 = v17;
        char v31 = sub_1A8A78588();
        unint64_t v17 = v30;
        uint64_t v2 = v29;
        unint64_t v14 = v28;
        unint64_t v10 = v27;
        unint64_t v7 = v26;
        unint64_t v18 = v25;
        unint64_t v16 = v38;
        unint64_t v11 = v24;
        unint64_t v9 = v23;
        if ((v31 & 1) == 0) {
          break;
        }
      }
      if ((v9 != v16 || v11 != v18 || v7 >> 16 != v14 >> 16 || v10 >> 16 != v17 >> 16) && (sub_1A8A784C8() & 1) == 0
        || (v41 != v45 || v46 != v44 || v39 >> 16 != v43 >> 16 || v40 >> 16 != v42 >> 16) && (sub_1A8A784C8() & 1) == 0)
      {
        break;
      }
      v3 += 12;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A88BCE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 2);
      uint64_t v6 = *(i - 1);
      uint64_t v7 = *i;
      unint64_t v8 = *(v3 - 2);
      uint64_t v9 = *(v3 - 1);
      uint64_t v10 = *v3;
      switch(v5)
      {
        case 0:
          if (v8) {
            return 0;
          }
          break;
        case 1:
          if (v8 != 1) {
            return 0;
          }
          break;
        case 2:
          if (v8 != 2) {
            return 0;
          }
          break;
        case 3:
          if (v8 != 3) {
            return 0;
          }
          break;
        case 4:
          if (v8 != 4) {
            return 0;
          }
          break;
        case 5:
          if (v8 != 5) {
            return 0;
          }
          break;
        default:
          if (v8 < 6) {
            return 0;
          }
          BOOL v11 = *(i - 3) == *(v3 - 3) && v5 == v8;
          if (!v11 && (sub_1A8A78588() & 1) == 0) {
            return 0;
          }
          break;
      }
      BOOL v12 = v6 == v9 && v7 == v10;
      if (!v12 && (sub_1A8A78588() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A88BCF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1A8A78588() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_1A8A78588() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1A88BD034(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 80);
    for (uint64_t i = (uint64_t *)(a1 + 80); ; i += 7)
    {
      sub_1A88BFB40((uint64_t)(i - 6), (uint64_t)v11);
      uint64_t v7 = *(i - 1);
      uint64_t v6 = *i;
      sub_1A88BFB40((uint64_t)(v3 - 6), (uint64_t)v12);
      uint64_t v9 = *(v3 - 1);
      uint64_t v8 = *v3;
      sub_1A88BFC7C((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1A88BFB9C);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88BFC7C((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1A88BFB9C);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      if ((_s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v12) & 1) == 0) {
        break;
      }
      if (v6)
      {
        if (!v8)
        {
          sub_1A88BFC7C((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
          goto LABEL_18;
        }
        if (v7 == v9 && v6 == v8)
        {
          sub_1A88BFC7C((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
          swift_bridgeObjectRelease();
          sub_1A88BFC7C((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v5 = sub_1A8A78588();
          sub_1A88BFC7C((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
          swift_bridgeObjectRelease();
          sub_1A88BFC7C((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
          swift_bridgeObjectRelease();
          if ((v5 & 1) == 0) {
            return 0;
          }
        }
      }
      else
      {
        sub_1A88BFC7C((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
        if (v8)
        {
          swift_bridgeObjectRelease();
          sub_1A88BFC7C((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
          return 0;
        }
        sub_1A88BFC7C((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      }
      v3 += 7;
      if (!--v2) {
        return 1;
      }
    }
    sub_1A88BFC7C((uint64_t)v12, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1A88BFC7C((uint64_t)v11, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t sub_1A88BD2A4(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  if (v3)
  {
    if (v3 == 1)
    {
      if (v5 != 1) {
        return 0;
      }
    }
    else if (v3 == 2)
    {
      if (v5 != 2) {
        return 0;
      }
    }
    else if (v5 < 3 || (*a1 != *a2 || v3 != v5) && (sub_1A8A78588() & 1) == 0)
    {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  return sub_1A88BCE0C(v4, v6);
}

uint64_t ContentDisposition.description.getter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1A88BC7E8(a1, a2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _sSS9IMAP2MIMEEySSAA18ContentDispositionVcfC_0(a1, a2, a3);
}

uint64_t sub_1A88BD3B0()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1A88BC7E8(v1, v2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _sSS9IMAP2MIMEEySSAA18ContentDispositionVcfC_0(v1, v2, v3);
}

uint64_t ContentDisposition.Kind.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0x656D686361747461;
  uint64_t v3 = 0x7461642D6D726F66;
  if (a2 != 2) {
    uint64_t v3 = a1;
  }
  if (a2 != 1) {
    uint64_t v2 = v3;
  }
  if (a2) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0x656E696C6E69;
  }
  sub_1A88BC7E8(a1, a2);
  return v4;
}

uint64_t String.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0x656D686361747461;
  uint64_t v3 = 0x7461642D6D726F66;
  if (a2 != 2) {
    uint64_t v3 = a1;
  }
  if (a2 != 1) {
    uint64_t v2 = v3;
  }
  if (a2) {
    return v2;
  }
  else {
    return 0x656E696C6E69;
  }
}

{
  uint64_t result;

  uint64_t result = 0x646578696DLL;
  switch(a2)
  {
    case 0:
      sub_1A88BFD7C(a1, 0);
      uint64_t result = 0;
      break;
    case 1:
      return result;
    case 2:
      uint64_t result = 0x747365676964;
      break;
    case 3:
      uint64_t result = 0x74616E7265746C61;
      break;
    case 4:
      uint64_t result = 0x646574616C6572;
      break;
    case 5:
      uint64_t result = 0x74726F706572;
      break;
    case 6:
      uint64_t result = 0x64656E676973;
      break;
    case 7:
      uint64_t result = 0x6574707972636E65;
      break;
    case 8:
      uint64_t result = 0x7461642D6D726F66;
      break;
    case 9:
      uint64_t result = 0x2D646578696D2D78;
      break;
    case 10:
      uint64_t result = 0x676E617265747962;
      break;
    case 11:
      uint64_t result = 0x756F64656C707061;
      break;
    default:
      uint64_t result = a1;
      break;
  }
  return result;
}

uint64_t sub_1A88BD500()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = 0x656D686361747461;
  uint64_t v3 = 0x7461642D6D726F66;
  if (v1 != 2) {
    uint64_t v3 = *v0;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0x656E696C6E69;
  }
  sub_1A88BC7E8(*v0, v1);
  return v4;
}

uint64_t ContentDisposition.Attribute.description.getter(uint64_t a1, unint64_t a2)
{
  sub_1A88BC9D8(a1, a2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _sSS9IMAP2MIMEEySSAA18ContentDispositionV9AttributeVcfC_0(a1, a2);
}

uint64_t sub_1A88BD5F4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1A88BC9D8(*v0, v2);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return _sSS9IMAP2MIMEEySSAA18ContentDispositionV9AttributeVcfC_0(v1, v2);
}

unint64_t ContentDisposition.Attribute.Key.description.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0x656D616E656C6966;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v2 = 0x6E6F697461657263;
      break;
    case 2uLL:
      unint64_t v2 = 0xD000000000000011;
      break;
    case 3uLL:
      unint64_t v2 = 0x7461642D64616572;
      break;
    case 4uLL:
      unint64_t v2 = 1702521203;
      break;
    case 5uLL:
      unint64_t v2 = 1701667182;
      break;
    default:
      unint64_t v2 = a1;
      break;
  }
  sub_1A88BC9D8(a1, a2);
  return v2;
}

unint64_t String.init(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t result = 0x656D616E656C6966;
  switch(a2)
  {
    case 1:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x7461642D64616572;
      break;
    case 4:
      unint64_t result = 1702521203;
      break;
    case 5:
      unint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A88BD834()
{
  return ContentDisposition.Attribute.Key.description.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_1A88BD844@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A88BD87C(a1, (uint64_t (*)(void, void))_s9IMAP2MIME18ContentDispositionV4KindO13stringLiteralAESS_tcfC_0, a2);
}

uint64_t sub_1A88BD864@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A88BD87C(a1, (uint64_t (*)(void, void))_s9IMAP2MIME18ContentDispositionV9AttributeV3KeyO13stringLiteralAGSS_tcfC_0, a2);
}

uint64_t sub_1A88BD87C@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1, a1[1]);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t ContentDisposition.filename.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  for (uint64_t i = a3 + 56; *(void *)(i - 16); i += 32)
  {
    if (!--v3) {
      return 0;
    }
  }
  uint64_t v5 = *(void *)(i - 8);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v5;
}

int64_t sub_1A88BD90C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 16);
  if (!v5) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  for (uint64_t i = (uint64_t *)(a5 + 80); (*(unsigned char *)(i - 4) & 1) != 0; i += 7)
  {
LABEL_5:
    if (!--v5)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  uint64_t v9 = (unsigned __int8 *)*(i - 3);
  BOOL v10 = (unsigned __int8 *)*(i - 2);
  char v11 = *((unsigned char *)i - 8);
  uint64_t v12 = *i;
  switch(*((unsigned char *)i - 48))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      char v8 = sub_1A8A78588();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain();
      int64_t result = sub_1A88EE130(v9, v10, v11, v12, a1);
      break;
  }
  return result;
}

uint64_t sub_1A88BDAEC()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88BDB94()
{
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88BDC28()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88BDCCC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A88C03BC();
  *a1 = result;
  return result;
}

void sub_1A88BDCFC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xEA0000000000746ELL;
  uint64_t v5 = 0x656D686361747461;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7461642D6D726F66;
    unint64_t v4 = 0xE900000000000061;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x656E696C6E69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A88BDD60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A88D01F0(*a1, *a2);
}

void sub_1A88BDD6C(void *a1@<X8>)
{
  *a1 = &unk_1EFE90A20;
}

uint64_t sub_1A88BDD7C()
{
  return sub_1A88C0E78(*v0);
}

uint64_t sub_1A88BDD84(uint64_t a1)
{
  return sub_1A88C107C(a1, *v1);
}

uint64_t sub_1A88BDD8C(uint64_t a1)
{
  return sub_1A88C1184(a1, *v1);
}

uint64_t sub_1A88BDD94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A88C0408();
  *a1 = result;
  return result;
}

uint64_t sub_1A88BDDD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A88D01EC(*a1, *a2);
}

void sub_1A88BDDDC(void *a1@<X8>)
{
  *a1 = &unk_1EFE90AD8;
}

uint64_t sub_1A88BDDEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A88C0408();
  *a1 = result;
  return result;
}

void sub_1A88BDE24(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x656D616E656C6966;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED0000657461642DLL;
      uint64_t v3 = 0x6E6F697461657263;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000011;
      a1[1] = 0x80000001A8B3E080;
      break;
    case 3:
      *a1 = 0x7461642D64616572;
      a1[1] = 0xE900000000000065;
      break;
    case 4:
      *a1 = 1702521203;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 1701667182;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1A88BDF04(void *a1@<X8>)
{
  *a1 = &unk_1EFE8FA30;
}

uint64_t sub_1A88BDF14(uint64_t a1, uint64_t a2)
{
  char v4 = sub_1A88C1C9C(0, a1, a2);
  char v5 = sub_1A88C1C9C(1, a1, a2);
  char v6 = sub_1A88C1C9C(2, a1, a2);
  char v7 = sub_1A88C1C9C(3, a1, a2);
  switch(v4)
  {
    case 'c':
      if (v5 != 114 || v6 != 101 || v7 != 97) {
        return 6;
      }
      char v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 1;
      break;
    case 'f':
      if (v5 != 105 || v6 != 108 || v7 != 101) {
        return 6;
      }
      char v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 0;
      break;
    case 'm':
      if (v5 != 111 || v6 != 100 || v7 != 105) {
        return 6;
      }
      char v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 2;
      break;
    case 'n':
      if (v5 != 97 || v6 != 109 || v7 != 101) {
        return 6;
      }
      char v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 5;
      break;
    case 'r':
      if (v5 != 101 || v6 != 97 || v7 != 100) {
        return 6;
      }
      char v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 3;
      break;
    case 's':
      if (v5 != 105 || v6 != 122 || v7 != 101) {
        return 6;
      }
      char v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 4;
      break;
    default:
      return 6;
  }
  uint64_t result = sub_1A88C08DC(v8, v9, v10);
  if (result == 6) {
    return 6;
  }
  return result;
}

uint64_t sub_1A88BE150(uint64_t a1, uint64_t a2)
{
  char v4 = sub_1A88C1C9C(0, a1, a2);
  char v5 = sub_1A88C1C9C(1, a1, a2);
  char v6 = sub_1A88C1C9C(2, a1, a2);
  char v7 = sub_1A88C1C9C(3, a1, a2);
  if (v4 == 97)
  {
    if (v5 != 116 || v6 != 116 || v7 != 97) {
      return 3;
    }
    char v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 1;
    goto LABEL_16;
  }
  if (v4 == 102)
  {
    if (v5 != 111 || v6 != 114 || v7 != 109) {
      return 3;
    }
    char v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 2;
LABEL_16:
    uint64_t result = sub_1A88C06E8(v8, v9, v10);
    if (result != 3) {
      return result;
    }
    return 3;
  }
  if (v4 == 105 && v5 == 110 && v6 == 108 && v7 == 105)
  {
    char v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 0;
    goto LABEL_16;
  }
  return 3;
}

uint64_t _s9IMAP2MIME18ContentDispositionV9AttributeV3KeyO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a4 != 5) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 6)
      {
LABEL_18:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = sub_1A8A78588();
      }
      break;
  }
  return result;
}

uint64_t _s9IMAP2MIME18ContentDispositionV9AttributeV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  switch(a2)
  {
    case 0:
      if (a6) {
        return 0;
      }
      goto LABEL_18;
    case 1:
      if (a6 == 1) {
        goto LABEL_18;
      }
      return 0;
    case 2:
      if (a6 == 2) {
        goto LABEL_18;
      }
      return 0;
    case 3:
      if (a6 == 3) {
        goto LABEL_18;
      }
      return 0;
    case 4:
      if (a6 == 4) {
        goto LABEL_18;
      }
      return 0;
    case 5:
      if (a6 == 5) {
        goto LABEL_18;
      }
      return 0;
    default:
      if (a6 < 6) {
        return 0;
      }
      if (a1 == a5 && a2 == a6 || (char v12 = sub_1A8A78588(), result = 0, (v12 & 1) != 0))
      {
LABEL_18:
        if (a3 == a7 && a4 == a8)
        {
          return 1;
        }
        else
        {
          return sub_1A8A78588();
        }
      }
      return result;
  }
}

uint64_t _sSS9IMAP2MIMEEySSAA18ContentDispositionV9AttributeVcfC_0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = qword_1E974E1C0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A8A744A8();
  __swift_project_value_buffer_0(v5, (uint64_t)qword_1E974E288);
  sub_1A88BFD94();
  sub_1A8A77A08();
  char v7 = v6;
  swift_bridgeObjectRelease();
  sub_1A88BC9D8(a1, a2);
  sub_1A88BC9D8(a1, a2);
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  sub_1A88BCA24(a1, a2);
  sub_1A8A767E8();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A767E8();
  sub_1A88BCA24(a1, a2);
  swift_bridgeObjectRelease_n();
  if ((v7 & 1) == 0) {
    sub_1A8A767E8();
  }
  return 0;
}

uint64_t _sSS9IMAP2MIMEEySSAA18ContentDispositionVcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0x656D686361747461;
  uint64_t v4 = 0x7461642D6D726F66;
  if (a2 != 2) {
    uint64_t v4 = a1;
  }
  if (a2 != 1) {
    uint64_t v3 = v4;
  }
  if (a2) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0x656E696C6E69;
  }
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v7 = a3 + 56;
    do
    {
      uint64_t v8 = *(void *)(v7 - 24);
      unint64_t v9 = *(void *)(v7 - 16);
      sub_1A88BC9D8(v8, v9);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A88BC9D8(v8, v9);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      _sSS9IMAP2MIMEEySSAA18ContentDispositionV9AttributeVcfC_0(v8, v9);
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      sub_1A88BCA24(v8, v9);
      swift_bridgeObjectRelease();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      v7 += 32;
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t _s9IMAP2MIME18ContentDispositionV4KindO13stringLiteralAESS_tcfC_0(uint64_t a1)
{
  uint64_t v2 = 0x656E696C6E69;
  uint64_t v4 = sub_1A8A76618();
  uint64_t v5 = 0x656D686361747461;
  unint64_t v6 = 0xEA0000000000746ELL;
  if (byte_1EFE8FA28 != 1)
  {
    uint64_t v5 = 0x7461642D6D726F66;
    unint64_t v6 = 0xE900000000000061;
  }
  if (byte_1EFE8FA28) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x656E696C6E69;
  }
  if (byte_1EFE8FA28) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = 0xE600000000000000;
  }
  uint64_t v9 = v3;
  if (v7 == v4 && v8 == v3) {
    goto LABEL_11;
  }
  char v10 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_13;
  }
  if (byte_1EFE8FA29)
  {
    if (byte_1EFE8FA29 == 1)
    {
      unint64_t v12 = 0xEA0000000000746ELL;
      if (v4 != 0x656D686361747461) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v12 = 0xE900000000000061;
      if (v4 != 0x7461642D6D726F66) {
        goto LABEL_23;
      }
    }
  }
  else
  {
    unint64_t v12 = 0xE600000000000000;
    if (v4 != 0x656E696C6E69) {
      goto LABEL_23;
    }
  }
  if (v12 == v9)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_23:
  char v13 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_13;
  }
  if (byte_1EFE8FA2A)
  {
    if (byte_1EFE8FA2A == 1)
    {
      uint64_t v2 = 0x656D686361747461;
      unint64_t v14 = 0xEA0000000000746ELL;
    }
    else
    {
      uint64_t v2 = 0x7461642D6D726F66;
      unint64_t v14 = 0xE900000000000061;
    }
  }
  else
  {
    unint64_t v14 = 0xE600000000000000;
  }
  if (v2 == v4 && v14 == v9) {
    goto LABEL_11;
  }
  char v15 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return a1;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s9IMAP2MIME18ContentDispositionV9AttributeV3KeyO13stringLiteralAGSS_tcfC_0(uint64_t a1)
{
  unint64_t v2 = 0x656D616E656C6966;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v5 = sub_1A8A76618();
  uint64_t v6 = v4;
  uint64_t v7 = 0x656D616E656C6966;
  switch(byte_1EFE8FC50)
  {
    case 1:
      unint64_t v3 = 0xED0000657461642DLL;
      if (v5 == 0x6E6F697461657263) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 2:
      unint64_t v3 = 0x80000001A8B3E080;
      if (v5 != 0xD000000000000011) {
        goto LABEL_13;
      }
      goto LABEL_10;
    case 3:
      uint64_t v7 = 0x7461642D64616572;
      unint64_t v3 = 0xE900000000000065;
      goto LABEL_9;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      if (v5 != 1702521203) {
        goto LABEL_13;
      }
      goto LABEL_10;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      if (v5 != 1701667182) {
        goto LABEL_13;
      }
      goto LABEL_10;
    default:
LABEL_9:
      if (v7 != v5) {
        goto LABEL_13;
      }
LABEL_10:
      if (v3 == v4)
      {
LABEL_11:
        swift_bridgeObjectRelease();
LABEL_64:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
LABEL_13:
      char v8 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_64;
      }
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x656D616E656C6966;
      switch(byte_1EFE8FC51)
      {
        case 1:
          unint64_t v9 = 0xED0000657461642DLL;
          if (v5 == 0x6E6F697461657263) {
            goto LABEL_23;
          }
          goto LABEL_24;
        case 2:
          unint64_t v9 = 0x80000001A8B3E080;
          if (v5 != 0xD000000000000011) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 3:
          uint64_t v10 = 0x7461642D64616572;
          unint64_t v9 = 0xE900000000000065;
          goto LABEL_22;
        case 4:
          unint64_t v9 = 0xE400000000000000;
          if (v5 != 1702521203) {
            goto LABEL_24;
          }
          goto LABEL_23;
        case 5:
          unint64_t v9 = 0xE400000000000000;
          if (v5 != 1701667182) {
            goto LABEL_24;
          }
          goto LABEL_23;
        default:
LABEL_22:
          if (v10 != v5) {
            goto LABEL_24;
          }
LABEL_23:
          if (v9 == v6) {
            goto LABEL_11;
          }
LABEL_24:
          char v11 = sub_1A8A78588();
          swift_bridgeObjectRelease();
          if (v11) {
            goto LABEL_64;
          }
          unint64_t v12 = 0xE800000000000000;
          unint64_t v13 = 0x656D616E656C6966;
          switch(byte_1EFE8FC52)
          {
            case 1:
              unint64_t v13 = 0x6E6F697461657263;
              unint64_t v12 = 0xED0000657461642DLL;
              break;
            case 2:
              unint64_t v12 = 0x80000001A8B3E080;
              unint64_t v13 = 0xD000000000000011;
              break;
            case 3:
              unint64_t v13 = 0x7461642D64616572;
              unint64_t v12 = 0xE900000000000065;
              break;
            case 4:
              unint64_t v12 = 0xE400000000000000;
              unint64_t v13 = 1702521203;
              break;
            case 5:
              unint64_t v12 = 0xE400000000000000;
              unint64_t v13 = 1701667182;
              break;
            default:
              break;
          }
          if (v13 == v5 && v12 == v6) {
            goto LABEL_11;
          }
          char v14 = sub_1A8A78588();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_64;
          }
          unint64_t v15 = 0xE800000000000000;
          unint64_t v16 = 0x656D616E656C6966;
          switch(byte_1EFE8FC53)
          {
            case 1:
              unint64_t v16 = 0x6E6F697461657263;
              unint64_t v15 = 0xED0000657461642DLL;
              break;
            case 2:
              unint64_t v15 = 0x80000001A8B3E080;
              unint64_t v16 = 0xD000000000000011;
              break;
            case 3:
              unint64_t v16 = 0x7461642D64616572;
              unint64_t v15 = 0xE900000000000065;
              break;
            case 4:
              unint64_t v15 = 0xE400000000000000;
              unint64_t v16 = 1702521203;
              break;
            case 5:
              unint64_t v15 = 0xE400000000000000;
              unint64_t v16 = 1701667182;
              break;
            default:
              break;
          }
          if (v16 == v5 && v15 == v6) {
            goto LABEL_11;
          }
          char v17 = sub_1A8A78588();
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_64;
          }
          unint64_t v18 = 0xE800000000000000;
          unint64_t v19 = 0x656D616E656C6966;
          switch(byte_1EFE8FC54)
          {
            case 1:
              unint64_t v19 = 0x6E6F697461657263;
              unint64_t v18 = 0xED0000657461642DLL;
              break;
            case 2:
              unint64_t v18 = 0x80000001A8B3E080;
              unint64_t v19 = 0xD000000000000011;
              break;
            case 3:
              unint64_t v19 = 0x7461642D64616572;
              unint64_t v18 = 0xE900000000000065;
              break;
            case 4:
              unint64_t v18 = 0xE400000000000000;
              unint64_t v19 = 1702521203;
              break;
            case 5:
              unint64_t v18 = 0xE400000000000000;
              unint64_t v19 = 1701667182;
              break;
            default:
              break;
          }
          if (v19 == v5 && v18 == v6) {
            goto LABEL_11;
          }
          char v20 = sub_1A8A78588();
          swift_bridgeObjectRelease();
          if (v20) {
            goto LABEL_64;
          }
          unint64_t v21 = 0xE800000000000000;
          switch(byte_1EFE8FC55)
          {
            case 1:
              unint64_t v2 = 0x6E6F697461657263;
              unint64_t v21 = 0xED0000657461642DLL;
              break;
            case 2:
              unint64_t v21 = 0x80000001A8B3E080;
              unint64_t v2 = 0xD000000000000011;
              break;
            case 3:
              unint64_t v2 = 0x7461642D64616572;
              unint64_t v21 = 0xE900000000000065;
              break;
            case 4:
              unint64_t v21 = 0xE400000000000000;
              unint64_t v2 = 1702521203;
              break;
            case 5:
              unint64_t v21 = 0xE400000000000000;
              unint64_t v2 = 1701667182;
              break;
            default:
              break;
          }
          if (v2 == v5 && v21 == v6) {
            goto LABEL_11;
          }
          char v22 = sub_1A8A78588();
          swift_bridgeObjectRelease();
          if (v22) {
            goto LABEL_64;
          }
          swift_bridgeObjectRelease();
          break;
      }
      return a1;
  }
}

unint64_t sub_1A88BF2E4()
{
  unint64_t result = qword_1E974E218;
  if (!qword_1E974E218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E218);
  }
  return result;
}

unint64_t sub_1A88BF33C()
{
  unint64_t result = qword_1E974E220;
  if (!qword_1E974E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E220);
  }
  return result;
}

unint64_t sub_1A88BF394()
{
  unint64_t result = qword_1E974E228;
  if (!qword_1E974E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E228);
  }
  return result;
}

unint64_t sub_1A88BF3EC()
{
  unint64_t result = qword_1E974E230;
  if (!qword_1E974E230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E230);
  }
  return result;
}

uint64_t destroy for ContentDisposition(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *_s9IMAP2MIME18ContentDispositionVwCP_0(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >= 3)
  {
    *a1 = *a2;
    a1[1] = v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *assignWithCopy for ContentDisposition(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 3uLL)
  {
    if (v4 >= 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1A88BF590((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_8:
  a1[2] = a2[2];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A88BF590(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy24_8_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for ContentDisposition(void *a1, void *a2)
{
  if (a1[1] >= 3uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 3)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1A88BF590((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ContentDisposition()
{
  return &type metadata for ContentDisposition;
}

unint64_t destroy for ContentDisposition.Kind(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentDisposition.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ContentDisposition.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentDisposition.Kind()
{
  return &type metadata for ContentDisposition.Kind;
}

uint64_t destroy for ContentDisposition.Attribute(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 6uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContentDisposition.Attribute(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >= 6)
  {
    *a1 = *a2;
    a1[1] = v4;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

void *assignWithCopy for ContentDisposition.Attribute(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 6uLL)
  {
    if (v4 >= 6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1A88BF590((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 < 6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ContentDisposition.Attribute(void *a1, void *a2)
{
  if (a1[1] >= 6uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 6)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1A88BF590((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ContentDisposition.Attribute()
{
  return &type metadata for ContentDisposition.Attribute;
}

uint64_t _s9IMAP2MIME18ContentDispositionV4KindOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return a1;
}

void *_s9IMAP2MIME18ContentDispositionV4KindOwca_0(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9IMAP2MIME18ContentDispositionV4KindOwta_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentDisposition.Attribute.Key(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ContentDisposition.Attribute.Key(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentDisposition.Attribute.Key()
{
  return &type metadata for ContentDisposition.Attribute.Key;
}

uint64_t sub_1A88BFB40(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A88BFB9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      unint64_t result = sub_1A88BFC64(result, a2);
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      goto LABEL_2;
    case 10:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
LABEL_2:
      unint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88BFC64(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 0xB) {
    return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return result;
}

uint64_t sub_1A88BFC7C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1A88BFCBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      uint64_t result = sub_1A88BFD7C(result, a2);
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      goto LABEL_4;
    case 10:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88BFD7C(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 0xB) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A88BFD94()
{
  unint64_t result = qword_1E9743C08;
  if (!qword_1E9743C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9743C08);
  }
  return result;
}

uint64_t initializeWithCopy for RFC_2231.UnsafeAttributeValue(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for RFC_2231.UnsafeAttributeValue(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RFC_2231.UnsafeAttributeValue(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UnsafeContentDisposition()
{
  return &type metadata for UnsafeContentDisposition;
}

uint64_t destroy for UnsafeContentDisposition.Attribute()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnsafeContentDisposition.Attribute(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for UnsafeContentDisposition.Attribute(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v3;
  long long v4 = *(long long *)((char *)a2 + 24);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(_OWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UnsafeContentDisposition.Attribute(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UnsafeContentDisposition.Attribute()
{
  return &type metadata for UnsafeContentDisposition.Attribute;
}

ValueMetadata *type metadata accessor for UnsafeContentDisposition.Kind()
{
  return &type metadata for UnsafeContentDisposition.Kind;
}

unsigned char *__swift_memcpy1_1_5(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnsafeContentDisposition.Kind.Known(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88C00ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeContentDisposition.Kind.Known()
{
  return &type metadata for UnsafeContentDisposition.Kind.Known;
}

ValueMetadata *type metadata accessor for UnsafeContentDisposition.Attribute.Key.Known()
{
  return &type metadata for UnsafeContentDisposition.Attribute.Key.Known;
}

unsigned char *_s9IMAP2MIME24UnsafeContentDispositionV9AttributeV3KeyO5KnownOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88C0204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentDisposition.Attribute.Key.Known()
{
  return &type metadata for ContentDisposition.Attribute.Key.Known;
}

uint64_t sub_1A88C023C()
{
  return sub_1A85E35E8(&qword_1E974E238, &qword_1E974E240);
}

unint64_t sub_1A88C0268()
{
  unint64_t result = qword_1E974E248;
  if (!qword_1E974E248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E248);
  }
  return result;
}

uint64_t sub_1A88C02BC()
{
  return sub_1A85E35E8(&qword_1E974E250, &qword_1E974E258);
}

unint64_t sub_1A88C02E8()
{
  unint64_t result = qword_1E974E260;
  if (!qword_1E974E260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E260);
  }
  return result;
}

uint64_t sub_1A88C033C()
{
  return sub_1A85E35E8(&qword_1E974E268, &qword_1E974E270);
}

unint64_t sub_1A88C0368()
{
  unint64_t result = qword_1E974E278;
  if (!qword_1E974E278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E278);
  }
  return result;
}

uint64_t sub_1A88C03BC()
{
  unint64_t v0 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A88C0408()
{
  unint64_t v0 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for UnsafeContentDisposition.Attribute.Key()
{
  return &type metadata for UnsafeContentDisposition.Attribute.Key;
}

uint64_t sub_1A88C0474(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = 0xEB00000000657669;
  switch((char)a3)
  {
    case 1:
      unint64_t v4 = 0xEB00000000656C62;
      break;
    case 2:
      unint64_t v4 = 0xE900000000000065;
      break;
    case 3:
    case 9:
    case 10:
      unint64_t v4 = 0xE600000000000000;
      break;
    case 4:
      unint64_t v4 = 0xE900000000000064;
      break;
    case 5:
      unint64_t v4 = 0xE900000000000061;
      break;
    case 6:
      unint64_t v4 = 0xE500000000000000;
      break;
    case 7:
      unint64_t v4 = 0xEF6563616C706572;
      break;
    case 8:
      unint64_t v4 = 0xE700000000000000;
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v4) & 0xF;
  if (a1)
  {
    if (v7 != a2 - a1) {
      return 11;
    }
  }
  else if (v7)
  {
    return 11;
  }
  unint64_t v8 = sub_1A88DDD2C(v3);
  char v10 = sub_1A88EC7CC(v8, v9, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 11;
  }
  return v3;
}

uint64_t sub_1A88C05D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = 0xE900000000000074;
  switch((char)a3)
  {
    case 1:
      unint64_t v4 = 0xEB000000006E6F69;
      break;
    case 2:
    case 3:
    case 6:
    case 9:
      unint64_t v4 = 0xE500000000000000;
      break;
    case 4:
    case 8:
      unint64_t v4 = 0xE700000000000000;
      break;
    case 5:
    case 7:
      unint64_t v4 = 0xE400000000000000;
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v4) & 0xF;
  if (a1)
  {
    if (v7 != a2 - a1) {
      return 10;
    }
  }
  else if (v7)
  {
    return 10;
  }
  unint64_t v8 = sub_1A88DDFC4(v3);
  char v10 = sub_1A88EC7CC(v8, v9, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 10;
  }
  return v3;
}

uint64_t sub_1A88C06E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if ((_BYTE)a3)
  {
    if (a3 == 1) {
      unint64_t v6 = 0xEA0000000000746ELL;
    }
    else {
      unint64_t v6 = 0xE900000000000061;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if (a1)
  {
    if (v7 != a2 - a1) {
      return 3;
    }
  }
  else if (v7)
  {
    return 3;
  }
  if ((_BYTE)v3)
  {
    if (v3 == 1) {
      unint64_t v8 = 0x656D686361747461;
    }
    else {
      unint64_t v8 = 0x7461642D6D726F66;
    }
    if (v3 == 1) {
      unint64_t v9 = 0xEA0000000000746ELL;
    }
    else {
      unint64_t v9 = 0xE900000000000061;
    }
  }
  else
  {
    unint64_t v9 = 0xE600000000000000;
    unint64_t v8 = 0x656E696C6E69;
  }
  char v10 = sub_1A88EC7CC(v8, v9, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 3;
  }
  return v3;
}

uint64_t sub_1A88C07FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v6 = sub_1A88FD5F0(a3);
  unint64_t v8 = v7;
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1A8A76848();
    swift_bridgeObjectRelease();
    if (a1) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((v8 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(v8) & 0xF;
    }
    else {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (a1)
    {
LABEL_6:
      if (v9 != a2 - a1) {
        return 20;
      }
      goto LABEL_10;
    }
  }
  if (v9) {
    return 20;
  }
LABEL_10:
  unint64_t v10 = sub_1A88FD5F0(v3);
  char v12 = sub_1A88EC7CC(v10, v11, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 20;
  }
  return v3;
}

uint64_t sub_1A88C08DC(char *a1, char *a2, uint64_t a3)
{
  unint64_t v3 = 0x656D616E656C6966;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a3;
  unint64_t v8 = 0x656D616E656C6966;
  switch((char)a3)
  {
    case 1:
      unint64_t v8 = 0x6E6F697461657263;
      unint64_t v4 = 0xED0000657461642DLL;
      break;
    case 2:
      unint64_t v4 = 0x80000001A8B3E080;
      unint64_t v8 = 0xD000000000000011;
      break;
    case 3:
      unint64_t v8 = 0x7461642D64616572;
      unint64_t v4 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v8 = 1702521203;
      break;
    case 5:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v8 = 1701667182;
      break;
    default:
      break;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1A8A76848();
    swift_bridgeObjectRelease();
    if (a1) {
      goto LABEL_12;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((v4 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(v4) & 0xF;
    }
    else {
      uint64_t v9 = v8 & 0x6D7F657F7F7FLL;
    }
    if (a1)
    {
LABEL_12:
      if (v9 != a2 - a1) {
        return 6;
      }
      goto LABEL_16;
    }
  }
  if (v9) {
    return 6;
  }
LABEL_16:
  unint64_t v10 = 0xE800000000000000;
  switch((char)v5)
  {
    case 1:
      unint64_t v3 = 0x6E6F697461657263;
      unint64_t v10 = 0xED0000657461642DLL;
      break;
    case 2:
      unint64_t v10 = 0x80000001A8B3E080;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 3:
      unint64_t v3 = 0x7461642D64616572;
      unint64_t v10 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v10 = 0xE400000000000000;
      unint64_t v3 = 1702521203;
      break;
    case 5:
      unint64_t v10 = 0xE400000000000000;
      unint64_t v3 = 1701667182;
      break;
    default:
      break;
  }
  char v11 = sub_1A88EC7CC(v3, v10, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 6;
  }
  return v5;
}

uint64_t sub_1A88C0B48(char *a1, char *a2, uint64_t a3)
{
  unint64_t v3 = 1953063479;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = a3;
  unint64_t v8 = 1953063479;
  switch((char)a3)
  {
    case 1:
      unint64_t v8 = 1953063480;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v8 = 0x7972616E6962;
      break;
    case 3:
      unint64_t v4 = 0x80000001A8B3E0C0;
      unint64_t v8 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v8 = 0x343665736162;
      break;
    default:
      break;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1A8A76848();
    swift_bridgeObjectRelease();
    if (a1) {
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((v4 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(v4) & 0xF;
    }
    else {
      uint64_t v9 = v8 & 0x7D76757F6B7FLL;
    }
    if (a1)
    {
LABEL_11:
      if (v9 != a2 - a1) {
        return 5;
      }
      goto LABEL_15;
    }
  }
  if (v9) {
    return 5;
  }
LABEL_15:
  unint64_t v10 = 0xE400000000000000;
  switch((char)v5)
  {
    case 1:
      unint64_t v3 = 1953063480;
      break;
    case 2:
      unint64_t v10 = 0xE600000000000000;
      unint64_t v3 = 0x7972616E6962;
      break;
    case 3:
      unint64_t v10 = 0x80000001A8B3E0C0;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v10 = 0xE600000000000000;
      unint64_t v3 = 0x343665736162;
      break;
    default:
      break;
  }
  char v11 = sub_1A88EC7CC(v3, v10, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 5;
  }
  return v5;
}

uint64_t sub_1A88C0D3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = 0xE400000000000000;
  switch((char)a3)
  {
    case 1:
      unint64_t v4 = 0xEB00000000657079;
      break;
    case 2:
    case 9:
      unint64_t v4 = 0xE800000000000000;
      break;
    case 3:
    case 11:
      unint64_t v4 = 0xE700000000000000;
      break;
    case 4:
    case 6:
      unint64_t v4 = 0xE500000000000000;
      break;
    case 5:
    case 10:
    case 12:
      unint64_t v4 = 0xE600000000000000;
      break;
    case 7:
      unint64_t v4 = 0xE200000000000000;
      break;
    case 8:
      unint64_t v4 = 0xEB000000006E6F69;
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v4) & 0xF;
  if (a1)
  {
    if (v7 != a2 - a1) {
      return 13;
    }
  }
  else if (v7)
  {
    return 13;
  }
  unint64_t v8 = sub_1A88C2E8C(v3);
  char v10 = sub_1A88EC7CC(v8, v9, a1, a2, (void (*)(uint64_t *__return_ptr, void *))sub_1A88DD34C);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 13;
  }
  return v3;
}

uint64_t sub_1A88C0E7C()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88C0F94()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88C1080()
{
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88C1188()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88C126C()
{
  return sub_1A8A787C8();
}

unint64_t ContentTransferEncoding.rawValue.getter(char a1)
{
  unint64_t result = 1953063479;
  switch(a1)
  {
    case 1:
      unint64_t result = 1953063480;
      break;
    case 2:
      unint64_t result = 0x7972616E6962;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x343665736162;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88C1418(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A88D00BC(*a1, *a2);
}

uint64_t sub_1A88C1424()
{
  return sub_1A88C0F94();
}

uint64_t sub_1A88C142C()
{
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88C14F0()
{
  return sub_1A88C1188();
}

uint64_t sub_1A88C14F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9IMAP2MIME23ContentTransferEncodingO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1A88C1528(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1953063479;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 1953063480;
      goto LABEL_3;
    case 2:
      *a1 = 0x7972616E6962;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000010;
      a1[1] = 0x80000001A8B3E0C0;
      break;
    case 4:
      *a1 = 0x343665736162;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE400000000000000;
      break;
  }
}

uint64_t ContentTransferEncoding.init(_:)(uint64_t a1, uint64_t a2)
{
  if (sub_1A8A76638() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v6 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (sub_1A8A76638() == a1 && v9 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v10 = sub_1A8A78588();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (sub_1A8A76638() == a1 && v11 == a2)
    {
      uint64_t v7 = 2;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v12 = sub_1A8A78588();
      swift_bridgeObjectRelease();
      if (v12)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (sub_1A8A76638() == a1 && v13 == a2)
      {
        swift_bridgeObjectRelease_n();
        return 4;
      }
      else
      {
        char v14 = sub_1A8A78588();
        swift_bridgeObjectRelease();
        if (v14)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          if (sub_1A8A76638() == a1 && v15 == a2)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v16 = sub_1A8A78588();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v16 & 1) == 0) {
              return 5;
            }
          }
          return 3;
        }
      }
    }
  }
  return v7;
}

Swift::String __swiftcall String.init(_:)(IMAP2MIME::ContentTransferEncoding a1)
{
  uint64_t v2 = 1953063479;
  uint64_t v3 = (void *)0xE400000000000000;
  switch(a1)
  {
    case IMAP2MIME_ContentTransferEncoding_eightBit:
      uint64_t v2 = 1953063480;
      break;
    case IMAP2MIME_ContentTransferEncoding_binary:
      uint64_t v3 = (void *)0xE600000000000000;
      uint64_t v2 = 0x7972616E6962;
      break;
    case IMAP2MIME_ContentTransferEncoding_quotedPrintable:
      uint64_t v3 = (void *)0x80000001A8B3E0C0;
      uint64_t v2 = 0xD000000000000010;
      break;
    case IMAP2MIME_ContentTransferEncoding_base64:
      uint64_t v3 = (void *)0xE600000000000000;
      uint64_t v2 = 0x343665736162;
      break;
    default:
      break;
  }
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t sub_1A88C195C(uint64_t result, unsigned __int8 a2)
{
  if (a2 >= 4u)
  {
    double v2 = ceil((double)result * 3.0 * 0.25);
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        if (v2 < 9.22337204e18)
        {
          Swift::String result = (uint64_t)v2 + 10;
          if (!__OFADD__((uint64_t)v2, 10)) {
            return result;
          }
LABEL_10:
          __break(1u);
          return result;
        }
LABEL_9:
        __break(1u);
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A88C19D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (a2) {
      uint64_t v4 = a3 - a2;
    }
    else {
      uint64_t v4 = 0;
    }
    Swift::String result = sub_1A88C1D14(0, result, v4, a2, a3, a4);
    if (v5) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = result;
    }
    if ((v6 & 0x8000000000000000) == 0) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88C1A4C(uint64_t result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result >= 3u)
  {
    if (result == 3)
    {
      if (a2) {
        unint64_t v18 = a3 - (void)a2;
      }
      else {
        unint64_t v18 = 0;
      }
      if ((v18 & 0x8000000000000000) == 0) {
        return sub_1A88EA308(0, v18, (uint64_t)a2, a3, a4, a5);
      }
      __break(1u);
    }
    else
    {
      if (a2) {
        uint64_t v19 = a3 - (void)a2;
      }
      else {
        uint64_t v19 = 0;
      }
      if ((v19 & 0x8000000000000000) == 0) {
        return sub_1A88AF3CC(0, v19, (uint64_t)a2, a3, a4, a5);
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = a3 - (void)a2;
    if (!a2) {
      uint64_t v7 = 0;
    }
    uint64_t v8 = v7 & (v7 >> 63);
    if (a5 - a4 < v7) {
      uint64_t v7 = a5 - a4;
    }
    if (a4) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = v8;
    }
    uint64_t v10 = sub_1A88C19D4(v9, a4, a5, sub_1A870361C);
    uint64_t v13 = v12;
    if (v11) {
      char v14 = (const void *)(v11 + v10);
    }
    else {
      char v14 = 0;
    }
    if (a2 && v14)
    {
      uint64_t v15 = v11 + v13;
      if (!v11) {
        uint64_t v15 = 0;
      }
      memmove(a2, v14, v15 - (void)v14);
    }
    uint64_t v16 = sub_1A88C19D4(v9, (uint64_t)a2, a3, sub_1A870361C);
    if (v17) {
      return v17 + v16;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A88C1BCC(uint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = a4 - a3;
  if (!a3) {
    int64_t v4 = 0;
  }
  if (result < 0 || v4 < result)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (a2 < 0 || v4 < a2) {
    goto LABEL_27;
  }
  if (a2 - result < 100) {
    return result;
  }
  unint64_t v5 = a2 - 99;
  if ((unint64_t)a2 < 0x63) {
    goto LABEL_28;
  }
  if (a2 - 2 < v5)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v6 = 0;
  uint64_t v7 = a3 + a2;
  while (1)
  {
    if ((uint64_t)(v5 + v6) >= a2 || (uint64_t)v5 < result || (uint64_t)(v5 + v6) >= a2 - 2)
    {
      __break(1u);
      goto LABEL_26;
    }
    if (*(unsigned __int8 *)(v7 + v6 - 99) <= 0x7Eu && *(unsigned __int8 *)(v7 + v6 - 98) < 0x7Fu) {
      break;
    }
    if (++v6 == 97) {
      return result;
    }
  }
  uint64_t v10 = v5 + v6;
  BOOL v11 = __OFADD__(v10, 2);
  int64_t v12 = v10 + 2;
  if (v11) {
    goto LABEL_30;
  }
  if (v12 < result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v12 > a2) {
LABEL_32:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A88C1C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 - a2;
  if (a2) {
    uint64_t v6 = a3 - a2;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = sub_1A88C1D14(0, a1, v6, a2, a3, sub_1A870361C);
  if ((v8 & 1) == 0)
  {
    if (a2)
    {
      if (v7 < v5) {
        return *(unsigned __int8 *)(a2 + v7) | 0x20u;
      }
    }
    else if (v7 < 0)
    {
      return *(unsigned __int8 *)(a2 + v7) | 0x20u;
    }
  }
  return 0;
}

uint64_t sub_1A88C1D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a6(a1, a3, a4, a5);
  if (a2 > 0)
  {
    if (v10 < 0 || v10 >= (unint64_t)a2) {
      goto LABEL_8;
    }
    return 0;
  }
  if (v10 <= 0 && v10 > a2) {
    return 0;
  }
LABEL_8:
  uint64_t result = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v12 = a5 - a4;
  if (!a4) {
    uint64_t v12 = 0;
  }
  if (result < 0 || v12 < result) {
    goto LABEL_15;
  }
  return result;
}

uint64_t _s9IMAP2MIME23ContentTransferEncodingO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A88C1E0C()
{
  unint64_t result = qword_1E974E280;
  if (!qword_1E974E280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E280);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentTransferEncoding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88C1F2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentTransferEncoding()
{
  return &type metadata for ContentTransferEncoding;
}

uint64_t sub_1A88C1F64(uint64_t a1, uint64_t a2)
{
  char v4 = sub_1A88C1C9C(0, a1, a2);
  char v5 = sub_1A88C1C9C(1, a1, a2);
  char v6 = sub_1A88C1C9C(2, a1, a2);
  char v7 = sub_1A88C1C9C(3, a1, a2);
  if (v4 == 56)
  {
    if (v5 == 98 && v6 == 105 && v7 == 116)
    {
      char v8 = (char *)a1;
      uint64_t v9 = (char *)a2;
      uint64_t v10 = 1;
      goto LABEL_26;
    }
  }
  else if (v4 == 55 && v5 == 98 && v6 == 105 && v7 == 116)
  {
    char v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 0;
    goto LABEL_26;
  }
  if (v4 == 98 && v5 == 105 && v6 == 110 && v7 == 97)
  {
    char v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 2;
    goto LABEL_26;
  }
  if (v4 == 113 && v5 == 117 && v6 == 111 && v7 == 116)
  {
    char v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 3;
    goto LABEL_26;
  }
  if (v4 == 98 && v5 == 97 && v6 == 115 && v7 == 101)
  {
    char v8 = (char *)a1;
    uint64_t v9 = (char *)a2;
    uint64_t v10 = 4;
LABEL_26:
    uint64_t result = sub_1A88C0B48(v8, v9, v10);
    if (result != 5) {
      return result;
    }
  }
  return 5;
}

uint64_t sub_1A88C212C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  void v31[2] = *MEMORY[0x1E4F143B8];
  BOOL v12 = isStackAllocationSafe == 3;
  if (isStackAllocationSafe >= 3u)
  {
LABEL_6:
    if (v12)
    {
      if ((a2 & 0x8000000000000000) == 0)
      {
        if (a2 < 1025
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          uint64_t v15 = sub_1A88EA308(0, a2, (uint64_t)&v29 - v14, (uint64_t)&v29 + a2 - v14, a3, a4);
          if (!v6) {
            goto LABEL_28;
          }
          goto LABEL_29;
        }
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = sub_1A88EA308(0, a2, v24, v24 + a2, a3, a4);
        if (!v6)
        {
LABEL_33:
          sub_1A88C7250(v25, v26, v27 & 1, a5, a6, (uint64_t *)&v30);
          a6 = v30;
          MEMORY[0x1AD0E4D00](v24, -1, -1);
          goto LABEL_35;
        }
LABEL_34:
        MEMORY[0x1AD0E4D00](v24, -1, -1);
        goto LABEL_35;
      }
      __break(1u);
    }
    else if ((a2 & 0x8000000000000000) == 0)
    {
      if (a2 < 1025 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
      {
        MEMORY[0x1F4188790](isStackAllocationSafe);
        uint64_t v15 = sub_1A88AF3CC(0, a2, (uint64_t)&v29 - v23, (uint64_t)&v29 + a2 - v23, a3, a4);
        if (!v6)
        {
LABEL_28:
          sub_1A88C7250(v15, v16, v17 & 1, a5, a6, (uint64_t *)&v30);
          a6 = v30;
          goto LABEL_35;
        }
LABEL_29:
        swift_willThrow();
        goto LABEL_35;
      }
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = sub_1A88AF3CC(0, a2, v24, v24 + a2, a3, a4);
      if (!v6) {
        goto LABEL_33;
      }
      goto LABEL_34;
    }
    __break(1u);
  }
  if (a3)
  {
    uint64_t v13 = a4 - a3;
    BOOL v12 = a4 - a3 == a2;
    if (a4 - a3 <= a2)
    {
      if (v13 < 0)
      {
        __break(1u);
        goto LABEL_6;
      }
LABEL_15:
      sub_1A88C24A4(a5);
      swift_retain();
      a6 = (uint64_t *)sub_1A88FA6C8(a5, 0, v13, a3, a6);
LABEL_35:
      sub_1A88C2478(a5);
      return (uint64_t)a6;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = 0;
    goto LABEL_15;
  }
  uint64_t v18 = sub_1A88C19D4(a2, a3, a4, sub_1A870361C);
  if (v20) {
    uint64_t v21 = v20 + v19;
  }
  else {
    uint64_t v21 = 0;
  }
  if (v20) {
    uint64_t v22 = v20 + v18;
  }
  else {
    uint64_t v22 = 0;
  }
  sub_1A88C7250(v22, v21, 1, a5, a6, v31);
  sub_1A88C2478(a5);
  if (!v6) {
    return v31[0];
  }
  return (uint64_t)a6;
}

uint64_t sub_1A88C2478(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88C24A4(uint64_t a1)
{
  return a1;
}

uint64_t ContentType.mediaType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A88C24DC(v1, a1);
}

uint64_t sub_1A88C24DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ContentType.mediaType.setter(uint64_t a1)
{
  return sub_1A88C2540(a1, v1);
}

uint64_t sub_1A88C2540(uint64_t a1, uint64_t a2)
{
  return a2;
}

double (*ContentType.mediaType.modify())(void)
{
  return nullsub_1;
}

uint64_t ContentType.attributes.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t ContentType.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

double (*ContentType.attributes.modify())(void)
{
  return nullsub_1;
}

double ContentType.init(mediaType:attributes:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A88BFB40(a1, (uint64_t)v8);
  char v5 = v9;
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a3 = v8[0];
  *(_OWORD *)(a3 + 16) = v7;
  *(unsigned char *)(a3 + 32) = v5;
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t ContentType.Attribute.key.getter(uint64_t a1)
{
  return a1;
}

uint64_t ContentType.Attribute.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *double v2 = a1;
  v2[1] = a2;
  return result;
}

double (*ContentType.Attribute.key.modify())(void)
{
  return nullsub_1;
}

uint64_t ContentType.Attribute.value.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t ContentType.Attribute.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

double (*ContentType.Attribute.value.modify())(void)
{
  return nullsub_1;
}

uint64_t static ContentType.Attribute.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6 || (char v12 = sub_1A8A78588(), result = 0, (v12 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
    {
      return 1;
    }
    else
    {
      return sub_1A8A78588();
    }
  }
  return result;
}

uint64_t sub_1A88C281C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1A8A78588(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1A8A78588();
    }
  }
  return result;
}

uint64_t static ContentType.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1A88BFB40(a1, (uint64_t)v7);
  sub_1A88BFB40(a2, (uint64_t)v6);
  if (_s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v6)) {
    char v4 = sub_1A88BCF6C(*(void *)(a1 + 40), *(void *)(a2 + 40));
  }
  else {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1A88C2928(uint64_t a1, uint64_t a2)
{
  sub_1A88BFB40(a1, (uint64_t)v8);
  uint64_t v4 = *(void *)(a1 + 40);
  sub_1A88BFB40(a2, (uint64_t)v9);
  uint64_t v5 = *(void *)(a2 + 40);
  if (_s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v8, (uint64_t)v9)) {
    char v6 = sub_1A88BCF6C(v4, v5);
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t ContentType.description.getter()
{
  sub_1A88BFB40(v0, (uint64_t)v3);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1A88C3F64((uint64_t)v3);
  sub_1A852CA8C((uint64_t)&v2);
  return _sSS9IMAP2MIMEEySSAA11ContentTypeVcfC_0(v0);
}

uint64_t sub_1A88C29E4()
{
  long long v1 = v0[1];
  v3[0] = *v0;
  v3[1] = v1;
  long long v4 = v0[2];
  sub_1A88BFB40((uint64_t)v3, (uint64_t)v5);
  uint64_t v6 = *((void *)&v4 + 1);
  sub_1A88C3F64((uint64_t)v5);
  sub_1A852CA8C((uint64_t)&v6);
  return _sSS9IMAP2MIMEEySSAA11ContentTypeVcfC_0((uint64_t)v3);
}

uint64_t ContentType.Attribute.description.getter(uint64_t a1)
{
  uint64_t v2 = qword_1E974E1C0;
  swift_bridgeObjectRetain_n();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8A744A8();
  __swift_project_value_buffer_0(v3, (uint64_t)qword_1E974E288);
  sub_1A88BFD94();
  sub_1A8A77A08();
  char v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t v7 = 8251;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = a1;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
  }
  return v7;
}

Swift::String __swiftcall String.init(_:)(IMAP2MIME::ContentType::Attribute a1)
{
  object = a1.key._object;
  uint64_t countAndFlagsBits = a1.key._countAndFlagsBits;
  uint64_t v3 = qword_1E974E1C0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8A744A8();
  __swift_project_value_buffer_0(v4, (uint64_t)qword_1E974E288);
  sub_1A88BFD94();
  sub_1A8A77A08();
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    uint64_t v10 = 8251;
    unint64_t v11 = 0xE200000000000000;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = countAndFlagsBits;
    unint64_t v11 = (unint64_t)object;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A8A767E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1A8A767E8();
  }
  uint64_t v7 = v10;
  char v8 = (void *)v11;
  result._object = v8;
  result._uint64_t countAndFlagsBits = v7;
  return result;
}

uint64_t sub_1A88C2D80()
{
  return ContentType.Attribute.description.getter(*v0);
}

uint64_t sub_1A88C2D8C()
{
  uint64_t v0 = sub_1A8A744A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer_0(v4, qword_1E974E288);
  __swift_project_value_buffer_0(v0, (uint64_t)qword_1E974E288);
  sub_1A8A74458();
  sub_1A8A74498();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1A88C2E8C(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x742D737365636361;
      break;
    case 2:
      uint64_t result = 0x797261646E756F62;
      break;
    case 3:
      uint64_t result = 0x74657372616863;
      break;
    case 4:
      uint64_t result = 0x70736C6564;
      break;
    case 5:
      uint64_t result = 0x7265626D756ELL;
      break;
    case 6:
      uint64_t result = 0x6C61746F74;
      break;
    case 7:
      uint64_t result = 25705;
      break;
    case 8:
      uint64_t result = 0x7469736F70736964;
      break;
    case 9:
      uint64_t result = 0x6C6F636F746F7270;
      break;
    case 10:
      uint64_t result = 0x636C6167696DLL;
      break;
    case 11:
      uint64_t result = 0x746E656D6D6F63;
      break;
    case 12:
      uint64_t result = 0x74616D726F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A88C3004()
{
  char v1 = *v0;
  sub_1A8A78738();
  sub_1A88C2E8C(v1);
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  return sub_1A8A787C8();
}

uint64_t sub_1A88C3068()
{
  sub_1A88C2E8C(*v0);
  sub_1A8A762A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A88C30BC()
{
  char v1 = *v0;
  sub_1A8A78738();
  sub_1A88C2E8C(v1);
  sub_1A8A762A8();
  swift_bridgeObjectRelease();
  return sub_1A8A787C8();
}

uint64_t sub_1A88C311C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A88C4524();
  *a1 = result;
  return result;
}

uint64_t sub_1A88C314C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A88C2E8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A88C3178(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1A88C2E8C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1A88C2E8C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1A8A78588();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A88C3204()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  for (uint64_t i = v1 + 48; (*(unsigned char *)i & 1) != 0; i += 56)
  {
LABEL_3:
    if (!--v2)
    {
      sub_1A88C2478(v0);
      sub_1A88C2478(v0);
      return 0;
    }
  }
  uint64_t v4 = *(void *)(i + 32);
  switch(*(unsigned char *)(i - 16))
  {
    case 3:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      char v5 = sub_1A8A78588();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
LABEL_10:
      sub_1A88C2478(v0);
      sub_1A88C2478(v0);
      if (*(void *)(v4 + 16) == 1)
      {
        uint64_t v6 = *(void *)(v4 + 32);
        int v7 = *(__int16 *)(v4 + 48);
        swift_bridgeObjectRelease();
        if (v7 < 0) {
          return v6;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return 0;
  }
}

uint64_t sub_1A88C3474()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  for (uint64_t i = v1 + 48; (*(unsigned char *)i & 1) != 0; i += 56)
  {
LABEL_3:
    if (!--v2)
    {
      sub_1A88C2478(v0);
      sub_1A88C2478(v0);
      return 0;
    }
  }
  uint64_t v4 = *(void *)(i + 32);
  switch(*(unsigned char *)(i - 16))
  {
    case 2:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      char v5 = sub_1A8A78588();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
LABEL_10:
      sub_1A88C2478(v0);
      sub_1A88C2478(v0);
      if (*(void *)(v4 + 16) == 1)
      {
        uint64_t v6 = *(void *)(v4 + 32);
        int v7 = *(__int16 *)(v4 + 48);
        swift_bridgeObjectRelease();
        if (v7 < 0) {
          return v6;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return 0;
  }
}

uint64_t sub_1A88C36DC(uint64_t a1, uint64_t a2)
{
  char v4 = sub_1A88C1C9C(0, a1, a2);
  char v5 = sub_1A88C1C9C(1, a1, a2);
  char v6 = sub_1A88C1C9C(2, a1, a2);
  char v7 = sub_1A88C1C9C(3, a1, a2);
  if (v4 == 110 && v5 == 97 && v6 == 109 && v7 == 101)
  {
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 0;
    goto LABEL_31;
  }
  if (v4 == 98)
  {
    if (v5 == 111 && v6 == 117 && v7 == 110)
    {
      char v8 = (char *)a1;
      char v9 = (char *)a2;
      uint64_t v10 = 2;
      goto LABEL_31;
    }
  }
  else if (v4 == 97 && v5 == 99 && v6 == 99 && v7 == 101)
  {
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 1;
    goto LABEL_31;
  }
  if (v4 == 99 && v5 == 104 && v6 == 97 && v7 == 114)
  {
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 3;
    goto LABEL_31;
  }
  if (v4 == 100 && v5 == 101 && v6 == 108 && v7 == 115)
  {
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 4;
    goto LABEL_31;
  }
  if (v4 == 110 && v5 == 117 && v6 == 109 && v7 == 98)
  {
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 5;
    goto LABEL_31;
  }
  if (v4 == 105)
  {
    if (v5 == 100 && !v6 && !v7)
    {
      char v8 = (char *)a1;
      char v9 = (char *)a2;
      uint64_t v10 = 7;
      goto LABEL_31;
    }
    goto LABEL_44;
  }
  if (v4 == 116)
  {
    if (v5 == 111 && v6 == 116 && v7 == 97)
    {
      char v8 = (char *)a1;
      char v9 = (char *)a2;
      uint64_t v10 = 6;
      goto LABEL_31;
    }
LABEL_44:
    BOOL v12 = v5 == 105;
    goto LABEL_45;
  }
  BOOL v12 = v5 == 105;
  if (v4 == 100 && v5 == 105 && v6 == 115 && v7 == 112)
  {
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 8;
    goto LABEL_31;
  }
LABEL_45:
  if (v4 == 109)
  {
    if (v6 != 103) {
      BOOL v12 = 0;
    }
    if (!v12 || v7 != 97) {
      return 13;
    }
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 10;
    goto LABEL_31;
  }
  if (v4 != 112)
  {
    if (v4 == 99 && v5 == 111 && v6 == 109 && v7 == 109)
    {
      char v8 = (char *)a1;
      char v9 = (char *)a2;
      uint64_t v10 = 11;
    }
    else
    {
      if (v4 != 102 || v5 != 111 || v6 != 114 || v7 != 109) {
        return 13;
      }
      char v8 = (char *)a1;
      char v9 = (char *)a2;
      uint64_t v10 = 12;
    }
LABEL_31:
    uint64_t result = sub_1A88C0D3C(v8, v9, v10);
    if (result != 13) {
      return result;
    }
    return 13;
  }
  if (v5 == 114 && v6 == 111 && v7 == 116)
  {
    char v8 = (char *)a1;
    char v9 = (char *)a2;
    uint64_t v10 = 9;
    goto LABEL_31;
  }
  return 13;
}

uint64_t sub_1A88C3A98@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = a1;
  unint64_t v7 = sub_1A88EEEF8(a1, a2, a3);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1A88DF9BC(v7, v8, (uint64_t)v18);
    sub_1A88C4190((uint64_t)v18, (uint64_t)&v19);
    char v11 = v22;
    if (v22 <= 0xFDu)
    {
      uint64_t v5 = v19;
      long long v16 = v20;
      uint64_t v15 = v21;
      char v17 = (char *)MEMORY[0x1E4FBC860];
      sub_1A88EBA30(v10, &v17);
      uint64_t result = swift_bridgeObjectRelease();
      long long v13 = v16;
      uint64_t v14 = v17;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1A88DF054(v5, a2);
  long long v13 = (unint64_t)a2;
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  char v11 = -95;
  uint64_t v15 = 0;
  switch((char)result)
  {
    case 1:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 16;
      break;
    case 2:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 32;
      break;
    case 3:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 48;
      break;
    case 4:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 64;
      break;
    case 5:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 80;
      break;
    case 6:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 96;
      break;
    case 7:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 112;
      break;
    case 8:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = 0x80;
      break;
    case 9:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      long long v13 = xmmword_1A8AD8FE0;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      char v11 = -112;
      break;
    case 10:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v15 = 0;
      char v11 = 0;
      long long v13 = xmmword_1A8B04E00;
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      break;
  }
LABEL_7:
  *(void *)a4 = v5;
  *(_OWORD *)(a4 + 8) = v13;
  *(void *)(a4 + 24) = v15;
  *(unsigned char *)(a4 + 32) = v11;
  *(void *)(a4 + 40) = v14;
  return result;
}

uint64_t _sSS9IMAP2MIMEEySSAA11ContentTypeVcfC_0(uint64_t a1)
{
  sub_1A88BFB40(a1, (uint64_t)v14);
  uint64_t v2 = _sSS9IMAP2MIMEEySSAA9MediaTypeOcfC_0((uint64_t)v14);
  uint64_t v12 = v2;
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v13 = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 56;
    do
    {
      uint64_t v6 = qword_1E974E1C0;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      if (v6 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1A8A744A8();
      __swift_project_value_buffer_0(v7, (uint64_t)qword_1E974E288);
      sub_1A88BFD94();
      sub_1A8A77A08();
      char v9 = v8;
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      sub_1A8A767E8();
      if (v9)
      {
        swift_bridgeObjectRelease();
        sub_1A8A767E8();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A767E8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A8A767E8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1A8A767E8();
      }
      v5 += 32;
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A8A767E8();
      swift_bridgeObjectRelease();
      --v4;
    }
    while (v4);
    sub_1A85276F0((uint64_t)&v13);
    return v12;
  }
  else
  {
    uint64_t v10 = v2;
    sub_1A85276F0((uint64_t)&v13);
  }
  return v10;
}

uint64_t sub_1A88C3F64(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ContentType(uint64_t a1)
{
  sub_1A88BFCBC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_1A88BFB9C(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ContentType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_1A88BFB9C(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1A88BFCBC(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8_3(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContentType(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1A88BFCBC(v5, v6, v7, v8, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ContentType()
{
  return &type metadata for ContentType;
}

ValueMetadata *type metadata accessor for ContentType.Attribute()
{
  return &type metadata for ContentType.Attribute;
}

uint64_t sub_1A88C4190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for UnsafeContentType()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnsafeContentType(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for UnsafeContentType(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UnsafeContentType(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7ElementVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for UnsafeContentType()
{
  return &type metadata for UnsafeContentType;
}

ValueMetadata *type metadata accessor for UnsafeContentType.Attribute()
{
  return &type metadata for UnsafeContentType.Attribute;
}

uint64_t getEnumTagSinglePayload for UnsafeContentType.Attribute.Key.Known(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UnsafeContentType.Attribute.Key.Known(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88C4494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeContentType.Attribute.Key.Known()
{
  return &type metadata for UnsafeContentType.Attribute.Key.Known;
}

unint64_t sub_1A88C44D0()
{
  unint64_t result = qword_1E974E2A0;
  if (!qword_1E974E2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2A0);
  }
  return result;
}

uint64_t sub_1A88C4524()
{
  unint64_t v0 = sub_1A8A782F8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

ValueMetadata *type metadata accessor for UnsafeContentType.Attribute.Key()
{
  return &type metadata for UnsafeContentType.Attribute.Key;
}

uint64_t EmailAddress.name.getter()
{
  uint64_t v1 = *v0;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t EmailAddress.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

double (*EmailAddress.name.modify())(void)
{
  return nullsub_1;
}

uint64_t EmailAddress.address.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t EmailAddress.localPart.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t EmailAddress.domainPart.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

double EmailAddress.init(name:localPart:domainPart:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  sub_1A88C5540(a1, a2, a3, a4, v10);
  long long v6 = v10[3];
  a5[2] = v10[2];
  a5[3] = v6;
  long long v7 = v10[5];
  a5[4] = v10[4];
  a5[5] = v7;
  double result = *(double *)v10;
  long long v9 = v10[1];
  *a5 = v10[0];
  a5[1] = v9;
  return result;
}

uint64_t sub_1A88C470C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  void v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  _OWORD v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  void v10[2] = a2[2];
  uint64_t v10[3] = v5;
  long long v6 = a2[5];
  long long v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return _s9IMAP2MIME12EmailAddressV23__derived_struct_equalsySbAC_ACtFZ_0(v9, v10) & 1;
}

uint64_t sub_1A88C4768(uint64_t a1)
{
  v27[1] = *MEMORY[0x1E4F143B8];
  if (v1[9] >> 14 < v1[8] >> 14) {
    __break(1u);
  }
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v3 = sub_1A8A77938();
  unint64_t v5 = v4;
  unint64_t v7 = v6;
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v10 = sub_1A88F8B78(v3, v5, v7, v9);
  unint64_t v13 = v11;
  if (v11)
  {
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v14 = MEMORY[0x1AD0DF750](v3, v5, v7, v9);
    unint64_t v13 = v15;
  }
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 96))
  {
    LODWORD(v26[0]) = 0;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v12 = MEMORY[0x1AD0E5010](60, v26);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 88);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  v27[0] = v12;
  sub_1A88D0DB4((uint64_t)v27, v14, v13, v26);
  *(void *)(a1 + 88) = v12;
  *(unsigned char *)(a1 + 96) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t v16 = v1[4];
  unint64_t v17 = v1[5];
  unint64_t v19 = v1[6];
  unint64_t v18 = v1[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v20 = sub_1A88F8B78(v16, v17, v19, v18);
  uint64_t v22 = v21;
  if (v21)
  {
    uint64_t v23 = v20;
  }
  else
  {
    uint64_t v23 = MEMORY[0x1AD0DF750](v16, v17, v19, v18);
    uint64_t v22 = v24;
  }
  swift_bridgeObjectRelease();
  v26[0] = v23;
  v26[1] = v22;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v26[0];
}

uint64_t sub_1A88C4A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = sub_1A88FA8A8(a1, a2);
  uint64_t v8 = v7;
  swift_retain();
  sub_1A88EB78C(v6, v8, a3);
  uint64_t v9 = sub_1A88C4B4C();
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = *(void *)(v9 + 32);
    uint64_t v11 = *(void *)(v9 + 56);
    long long v22 = *(_OWORD *)(v9 + 64);
    uint64_t v13 = *(void *)(v9 + 80);
    uint64_t v12 = *(void *)(v9 + 88);
    long long v20 = *(_OWORD *)(v9 + 40);
    long long v21 = *(_OWORD *)(v9 + 96);
    uint64_t v15 = *(void *)(v9 + 112);
    uint64_t v14 = *(void *)(v9 + 120);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    long long v18 = v21;
    long long v17 = v22;
    long long v19 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v13 = 0;
    uint64_t v12 = 0;
    uint64_t v15 = 0;
    uint64_t v14 = 0;
    long long v19 = 0uLL;
    long long v17 = 0uLL;
    long long v18 = 0uLL;
  }
  *(void *)a4 = v10;
  *(_OWORD *)(a4 + 8) = v19;
  *(void *)(a4 + 24) = v11;
  *(_OWORD *)(a4 + 32) = v17;
  *(void *)(a4 + 48) = v13;
  *(void *)(a4 + 56) = v12;
  *(_OWORD *)(a4 + 64) = v18;
  *(void *)(a4 + 80) = v15;
  *(void *)(a4 + 88) = v14;
  return result;
}

uint64_t sub_1A88C4B4C()
{
  uint64_t v0 = (void *)sub_1A8A76538();
  id v1 = IMAP2EmailCore_ECEmailAddressesFromHeader(v0);

  sub_1A88C59E4();
  unint64_t v2 = sub_1A8A76C68();

  if (v2 >> 62) {
    goto LABEL_27;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  if (v3)
  {
    do
    {
      if (v3 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v5 = 0;
      uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
      while (1)
      {
        id v7 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AD0E0F10](v5, v2) : *(id *)(v2 + 8 * v5 + 32);
        uint64_t v8 = v7;
        uint64_t v9 = sub_1A88C4D38((uint64_t)v7, 0);

        uint64_t v10 = *(void *)(v9 + 16);
        int64_t v11 = *((void *)v6 + 2);
        int64_t v12 = v11 + v10;
        if (__OFADD__(v11, v10)) {
          break;
        }
        char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v12 <= *((void *)v6 + 3) >> 1)
        {
          if (*(void *)(v9 + 16)) {
            goto LABEL_19;
          }
        }
        else
        {
          if (v11 <= v12) {
            int64_t v14 = v11 + v10;
          }
          else {
            int64_t v14 = v11;
          }
          uint64_t v6 = sub_1A8901C6C(isUniquelyReferenced_nonNull_native, v14, 1, v6);
          if (*(void *)(v9 + 16))
          {
LABEL_19:
            if ((*((void *)v6 + 3) >> 1) - *((void *)v6 + 2) < v10) {
              goto LABEL_25;
            }
            swift_arrayInitWithCopy();
            if (v10)
            {
              uint64_t v15 = *((void *)v6 + 2);
              BOOL v16 = __OFADD__(v15, v10);
              uint64_t v17 = v15 + v10;
              if (v16) {
                goto LABEL_26;
              }
              *((void *)v6 + 2) = v17;
            }
            goto LABEL_6;
          }
        }
        if (v10) {
          goto LABEL_24;
        }
LABEL_6:
        swift_bridgeObjectRelease();
        if (v3 == ++v5) {
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      uint64_t result = sub_1A8A781B8();
      uint64_t v3 = result;
    }
    while (result);
  }
  uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
LABEL_29:
  swift_bridgeObjectRelease_n();
  return (uint64_t)v6;
}

uint64_t sub_1A88C4D38(uint64_t a1, uint64_t a2)
{
  if (a2 > 3) {
    return MEMORY[0x1E4FBC860];
  }
  id v3 = (id)IMAP2EmailCore_ECEmailAddress_groupList();
  if (v3)
  {
    unint64_t v4 = v3;
    sub_1A88C59E4();
    unint64_t v5 = sub_1A8A76C68();
  }
  else
  {
    unint64_t v5 = 0;
  }
  id v6 = (id)IMAP2EmailCore_ECEmailAddress_displayName(a1);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = sub_1A8A76558();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  id v11 = (id)IMAP2EmailCore_ECEmailAddress_localPart(a1);
  if (v11)
  {
    int64_t v12 = v11;
    uint64_t v13 = sub_1A8A76558();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0;
  }
  id v16 = (id)IMAP2EmailCore_ECEmailAddress_domain(a1);
  if (v16)
  {
    uint64_t v17 = v16;
    sub_1A8A76558();
    uint64_t v19 = v18;

    if (v5) {
      goto LABEL_13;
    }
LABEL_34:
    if (v15)
    {
      if (v19)
      {
        __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E97475B0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1A8AD8F00;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        sub_1A88C5540(v8, v10, v13, v15, v46);
        long long v33 = v46[3];
        *(_OWORD *)(v23 + 64) = v46[2];
        *(_OWORD *)(v23 + 80) = v33;
        long long v34 = v46[5];
        *(_OWORD *)(v23 + 96) = v46[4];
        *(_OWORD *)(v23 + 112) = v34;
        long long v35 = v46[1];
        *(_OWORD *)(v23 + 32) = v46[0];
        *(_OWORD *)(v23 + 48) = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v23;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_67;
    }
    swift_bridgeObjectRelease_n();
LABEL_66:
    swift_bridgeObjectRelease();
LABEL_67:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = 0;
  if (!v5) {
    goto LABEL_34;
  }
LABEL_13:
  if (v5 >> 62) {
    goto LABEL_64;
  }
  uint64_t v20 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v20)
  {
LABEL_65:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  while (v20 >= 1)
  {
    if ((v5 & 0xC000000000000001) == 0)
    {
      unint64_t v36 = (id *)(v5 + 32);
      uint64_t v23 = MEMORY[0x1E4FBC860];
      while (1)
      {
        id v37 = *v36;
        uint64_t v38 = sub_1A88C4D38();

        uint64_t v39 = *(void *)(v38 + 16);
        int64_t v40 = *(void *)(v23 + 16);
        int64_t v41 = v40 + v39;
        if (__OFADD__(v40, v39)) {
          goto LABEL_60;
        }
        char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v41 <= *(void *)(v23 + 24) >> 1)
        {
          if (*(void *)(v38 + 16)) {
            goto LABEL_49;
          }
        }
        else
        {
          if (v40 <= v41) {
            int64_t v43 = v40 + v39;
          }
          else {
            int64_t v43 = v40;
          }
          uint64_t v23 = (uint64_t)sub_1A8901C6C(isUniquelyReferenced_nonNull_native, v43, 1, (char *)v23);
          if (*(void *)(v38 + 16))
          {
LABEL_49:
            if ((*(void *)(v23 + 24) >> 1) - *(void *)(v23 + 16) < v39) {
              goto LABEL_62;
            }
            swift_arrayInitWithCopy();
            if (v39)
            {
              uint64_t v44 = *(void *)(v23 + 16);
              BOOL v31 = __OFADD__(v44, v39);
              uint64_t v45 = v44 + v39;
              if (v31) {
                goto LABEL_63;
              }
              *(void *)(v23 + 16) = v45;
            }
            goto LABEL_39;
          }
        }
        if (v39) {
          goto LABEL_59;
        }
LABEL_39:
        swift_bridgeObjectRelease();
        ++v36;
        if (!--v20)
        {
LABEL_53:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return v23;
        }
      }
    }
    uint64_t v22 = 0;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    while (1)
    {
      MEMORY[0x1AD0E0F10](v22, v5);
      uint64_t v24 = sub_1A88C4D38();
      swift_unknownObjectRelease();
      uint64_t v25 = *(void *)(v24 + 16);
      int64_t v26 = *(void *)(v23 + 16);
      int64_t v27 = v26 + v25;
      if (__OFADD__(v26, v25)) {
        break;
      }
      unint64_t v28 = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (v28 && v27 <= *(void *)(v23 + 24) >> 1)
      {
        if (*(void *)(v24 + 16)) {
          goto LABEL_29;
        }
      }
      else
      {
        if (v26 <= v27) {
          int64_t v29 = v26 + v25;
        }
        else {
          int64_t v29 = v26;
        }
        uint64_t v23 = (uint64_t)sub_1A8901C6C(v28, v29, 1, (char *)v23);
        if (*(void *)(v24 + 16))
        {
LABEL_29:
          if ((*(void *)(v23 + 24) >> 1) - *(void *)(v23 + 16) < v25) {
            goto LABEL_58;
          }
          swift_arrayInitWithCopy();
          if (v25)
          {
            uint64_t v30 = *(void *)(v23 + 16);
            BOOL v31 = __OFADD__(v30, v25);
            uint64_t v32 = v30 + v25;
            if (v31) {
              goto LABEL_61;
            }
            *(void *)(v23 + 16) = v32;
          }
          goto LABEL_19;
        }
      }
      if (v25)
      {
        __break(1u);
        break;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      if (v20 == ++v22) {
        goto LABEL_53;
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1A8A781B8();
    uint64_t v20 = result;
    if (!result) {
      goto LABEL_65;
    }
  }
  __break(1u);
  return result;
}

uint64_t _s9IMAP2MIME12EmailAddressV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *a1 == *a2 && v4 == v5;
    if (!v6 && (sub_1A8A78588() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v7 && (sub_1A8A78588() & 1) == 0
    || (sub_1A88D133C(a1[4], a1[5], a1[6], a1[7], a2[4], a2[5], a2[6], a2[7]) & 1) == 0)
  {
    return 0;
  }
  unint64_t v8 = a1[8];
  unint64_t v9 = a1[9];
  uint64_t v10 = a1[10];
  uint64_t v11 = a1[11];
  unint64_t v12 = a2[8];
  unint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  return sub_1A88D133C(v8, v9, v10, v11, v12, v13, v14, v15);
}

unint64_t sub_1A88C52B0()
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v0 = sub_1A8A76838();
  if (!v1)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char v7 = 1;
LABEL_17:
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v8 = sub_1A8A76838();
    if (v9)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v9;
      do
      {
        if (v10 == 34 && v11 == 0xE100000000000000
          || (sub_1A8A78588() & 1) != 0
          || v10 == 92 && v11 == 0xE100000000000000
          || (sub_1A8A78588() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1A8A767E8();
        }
        else
        {
          MEMORY[0x1AD0DF8C0](v10, v11);
          swift_bridgeObjectRelease();
        }
        uint64_t v10 = sub_1A8A76838();
        uint64_t v11 = v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      sub_1A8A767E8();
    }
    return sub_1A88F9438(0);
  }
  unint64_t v2 = v0;
  unint64_t v3 = v1;
  while (1)
  {
    if (v2 == 2573 && v3 == 0xE200000000000000 || (sub_1A8A78588() & 1) != 0 || (sub_1A8A76278() & 1) == 0) {
      goto LABEL_3;
    }
    unint64_t result = sub_1A8884574(v2, v3);
    if ((result & 0x100000000) != 0) {
      goto LABEL_36;
    }
    if ((result & 0xFFFFFF80) != 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    unint64_t result = sub_1A8884574(v2, v3);
    if ((result & 0x100000000) != 0) {
      goto LABEL_37;
    }
    int v6 = result;
    unint64_t result = swift_bridgeObjectRelease();
    if ((v6 & 0xFFFFFF00) != 0) {
      break;
    }
    if (v6 - 34 <= 0x3A
      && ((1 << (v6 - 34)) & 0x4000000540004C1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1A8A767E8();
      char v7 = 0;
      goto LABEL_17;
    }
LABEL_4:
    unint64_t v2 = sub_1A8A76838();
    unint64_t v3 = v4;
    if (!v4) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A88C5540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X8>)
{
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  sub_1A8A767E8();
  if ((a4 & 0x2000000000000000) != 0) {
    unint64_t v7 = HIBYTE(a4) & 0xF;
  }
  else {
    unint64_t v7 = a3 & 0xFFFFFFFFFFFFLL;
  }
  sub_1A8A767E8();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t result = sub_1A8A76968();
  unint64_t v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v12 < v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = v11;
    uint64_t v14 = result;
    uint64_t v22 = v9;
    uint64_t v23 = v10;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    uint64_t v15 = sub_1A8A76968();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
    a5[3] = a4;
    a5[4] = v14;
    a5[5] = v22;
    a5[6] = v23;
    a5[7] = v13;
    a5[8] = v15;
    a5[9] = v17;
    a5[10] = v19;
    a5[11] = v21;
  }
  return result;
}

void *assignWithCopy for EmailAddress(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8_1(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for EmailAddress(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmailAddress(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_1A88C59E4()
{
  unint64_t result = qword_1E9745158;
  if (!qword_1E9745158)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9745158);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeEmailAddress()
{
  return &type metadata for UnsafeEmailAddress;
}

ValueMetadata *type metadata accessor for UnsafeEmailAddressValue()
{
  return &type metadata for UnsafeEmailAddressValue;
}

uint64_t sub_1A88C5A44(uint64_t a1, uint64_t (*a2)(void *), uint64_t a3, uint64_t (*a4)(_OWORD *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = swift_allocObject();
  sub_1A88C5BFC(v40);
  sub_1A88C5C20((uint64_t)v40, v15 + 16);
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 2;
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  long long v33 = a4;
  uint64_t v34 = a5;
  uint64_t v27 = v15 + 16;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  char v17 = sub_1A88E7068(a1, a8, a9, a10, a11);
  uint64_t v35 = MEMORY[0x1E4FBC860];
  char v36 = v17;
  uint64_t v37 = v18;
  uint64_t v38 = v19;
  uint64_t v39 = v20;
  sub_1A88E6824((uint64_t (*)(uint64_t))sub_1A88C5F88, (uint64_t)v30, (void (*)(void *, char *, char *, uint64_t, uint64_t))sub_1A88C6248, (uint64_t)v26, a2, a3);
  sub_1A88C5C98(v15, v16, a4);
  swift_release();
  return swift_release();
}

uint64_t sub_1A88C5BB0()
{
  if (*(void *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

double sub_1A88C5BFC(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 169) = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1A88C5C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88C5C88()
{
  return swift_deallocObject();
}

uint64_t *sub_1A88C5C98(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *))
{
  uint64_t v6 = a1 + 16;
  unint64_t v7 = (unsigned char *)(a2 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(a2 + 16) == 2
    && (swift_beginAccess(),
        sub_1A88C5C20(v6, (uint64_t)v15),
        sub_1A88C5C20((uint64_t)v15, (uint64_t)v16),
        sub_1A8561268((uint64_t *)v16) != 1))
  {
    char v18[8] = v16[8];
    v18[9] = v16[9];
    v19[0] = v17[0];
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v17 + 9);
    v18[4] = v16[4];
    v18[5] = v16[5];
    v18[6] = v16[6];
    unsigned char v18[7] = v16[7];
    v18[0] = v16[0];
    v18[1] = v16[1];
    void v18[2] = v16[2];
    v18[3] = v16[3];
    sub_1A88C5C20((uint64_t)v15, (uint64_t)v14);
    sub_1A88C69AC((uint64_t)v14);
    char v9 = a3(v18);
    if (v3)
    {
      sub_1A88C68EC(v15);
    }
    else
    {
      char v10 = v9;
      sub_1A88C68EC(v15);
      swift_beginAccess();
      unsigned char *v7 = v10;
    }
    sub_1A88C5BFC(v12);
    swift_beginAccess();
    sub_1A88C5C20(v6, (uint64_t)v13);
    sub_1A88C5C20((uint64_t)v12, v6);
    uint64_t v8 = (uint64_t *)v13;
  }
  else
  {
    sub_1A88C5BFC(v15);
    swift_beginAccess();
    sub_1A88C5C20(v6, (uint64_t)v16);
    sub_1A88C5C20((uint64_t)v15, v6);
    uint64_t v8 = (uint64_t *)v16;
  }
  return sub_1A88C68EC(v8);
}

uint64_t *sub_1A88C5E68(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  uint64_t v7 = *a1;
  char v8 = *((unsigned char *)a1 + 8);
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  double result = sub_1A88C5C98(a2, a3, a4);
  if (!v4)
  {
    uint64_t v14 = v7;
    uint64_t v13 = a2 + 16;
    char v15 = v8;
    uint64_t v16 = v9;
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    char v22 = 2;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    char v27 = 2;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    char v30 = 2;
    nullsub_1(&v14);
    swift_beginAccess();
    sub_1A88C5C20(v13, (uint64_t)v31);
    sub_1A88C5C20((uint64_t)&v14, v13);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88C68EC(v31);
    swift_beginAccess();
    return (uint64_t *)*(unsigned __int8 *)(a3 + 16);
  }
  return result;
}

uint64_t *sub_1A88C5F88(uint64_t *a1)
{
  return sub_1A88C5E68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(_OWORD *))(v1 + 32));
}

uint64_t sub_1A88C5FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  sub_1A88C69F8(a1, (uint64_t)v32);
  swift_beginAccess();
  sub_1A88C5C20(a6, (uint64_t)v38);
  sub_1A88C5C20((uint64_t)v38, (uint64_t)v39);
  if (sub_1A8561268(v39) != 1)
  {
    sub_1A88C69F8(a1, (uint64_t)&v33);
    unsigned __int8 v17 = v36;
    switch(v36 >> 59)
    {
      case 0uLL:
        v36 &= 0x7FFFFFFFFFFFFFFuLL;
        char v18 = v34;
        *(_OWORD *)(a6 + 168) = v33;
        *(unsigned char *)(a6 + 184) = v18;
        break;
      case 5uLL:
        v36 &= 0x7FFFFFFFFFFFFFFuLL;
        uint64_t v28 = v33;
        uint64_t v24 = v34;
        uint64_t v26 = *((void *)&v33 + 1);
        uint64_t v22 = v35;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        *(void *)(a6 + 40) = v28;
        *(void *)(a6 + 48) = v26;
        *(void *)(a6 + 56) = v24;
        *(void *)(a6 + 64) = v22;
        break;
      case 6uLL:
        v36 &= 0x7FFFFFFFFFFFFFFuLL;
        char v19 = v34;
        *(_OWORD *)(a6 + 144) = v33;
        *(unsigned char *)(a6 + 160) = v19;
        break;
      case 8uLL:
        v36 &= 0x7FFFFFFFFFFFFFFuLL;
        char v20 = v34;
        *(_OWORD *)(a6 + 72) = v33;
        *(unsigned char *)(a6 + 88) = v20;
        break;
      case 9uLL:
        v36 &= 0x7FFFFFFFFFFFFFFuLL;
        long long v27 = v33;
        uint64_t v23 = v35;
        uint64_t v25 = v34;
        uint64_t v29 = v37;
        uint64_t v21 = v17;
        _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
        swift_bridgeObjectRelease();
        *(_OWORD *)(a6 + 96) = v27;
        *(void *)(a6 + 112) = v25;
        *(void *)(a6 + 120) = v23;
        *(void *)(a6 + 128) = v21;
        *(void *)(a6 + 136) = v29;
        break;
      default:
        break;
    }
  }
  swift_beginAccess();
  sub_1A88C5C20(a6, (uint64_t)v30);
  sub_1A88C5C20((uint64_t)v30, (uint64_t)v31);
  uint64_t result = sub_1A8561268(v31);
  if (result != 1)
  {
    uint64_t v15 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    char v16 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v15, MEMORY[0x1E4FBC860]);
    uint64_t result = swift_bridgeObjectRelease();
    if (v16) {
      return a7(a1, a2, a3, a4, a5 & 1);
    }
  }
  return result;
}

uint64_t sub_1A88C6248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1A88C5FA8(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5 + 24));
}

uint64_t sub_1A88C6254()
{
  if (*(unsigned char *)(v0 + 184) == 2) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  if (v2) {
    uint64_t v4 = v3 - v2;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4 < 0)
  {
    __break(1u);
LABEL_60:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v32 = sub_1A88FA8C0(0, v4, v2, v3);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  uint64_t v35 = v7;
  MEMORY[0x1F4188790](v32);
  uint64_t result = (uint64_t)sub_1A88F9E40(v8, v9, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A88C6A54);
  uint64_t v11 = v10;
  uint64_t v12 = HIBYTE(v10) & 0xF;
  uint64_t v13 = result & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v14) {
    goto LABEL_60;
  }
  if ((v11 & 0x1000000000000000) == 0)
  {
    if ((v11 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v15 = (unsigned __int8 *)sub_1A8A77E88();
      }
      uint64_t v16 = (uint64_t)sub_1A858DCB8(v15, v13, 10);
      char v18 = v17 & 1;
      goto LABEL_50;
    }
    uint64_t v32 = result;
    uint64_t v33 = v11 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v12) {
        goto LABEL_64;
      }
      if (v12 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_37;
      }
      uint64_t v16 = (BYTE1(result) - 48);
      if (v12 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_37;
        }
        uint64_t v16 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v19 = v12 - 3;
        if (v19)
        {
          char v20 = (unsigned __int8 *)&v32 + 3;
          while (1)
          {
            unsigned int v21 = *v20 - 48;
            if (v21 > 9) {
              goto LABEL_37;
            }
            uint64_t v22 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
              goto LABEL_37;
            }
            uint64_t v16 = v22 + v21;
            if (__OFADD__(v22, v21)) {
              goto LABEL_37;
            }
            char v18 = 0;
            ++v20;
            if (!--v19) {
              goto LABEL_50;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v12)
        {
          if (v12 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v12 == 2)
            {
              char v18 = 0;
              uint64_t v16 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_50;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v16 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v27 = v12 - 3;
              if (!v27) {
                goto LABEL_49;
              }
              uint64_t v28 = (unsigned __int8 *)&v32 + 3;
              while (1)
              {
                unsigned int v29 = *v28 - 48;
                if (v29 > 9) {
                  break;
                }
                uint64_t v30 = 10 * v16;
                if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                  break;
                }
                uint64_t v16 = v30 - v29;
                if (__OFSUB__(v30, v29)) {
                  break;
                }
                char v18 = 0;
                ++v28;
                if (!--v27) {
                  goto LABEL_50;
                }
              }
            }
          }
LABEL_37:
          uint64_t v16 = 0;
          char v18 = 1;
          goto LABEL_50;
        }
        __break(1u);
LABEL_64:
        __break(1u);
        return result;
      }
      if (!v12 || (result - 48) > 9u) {
        goto LABEL_37;
      }
      uint64_t v16 = (result - 48);
      if (v12 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_37;
        }
        uint64_t v16 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v23 = v12 - 2;
        if (v23)
        {
          uint64_t v24 = (unsigned __int8 *)&v32 + 2;
          while (1)
          {
            unsigned int v25 = *v24 - 48;
            if (v25 > 9) {
              goto LABEL_37;
            }
            uint64_t v26 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
              goto LABEL_37;
            }
            uint64_t v16 = v26 + v25;
            if (__OFADD__(v26, v25)) {
              goto LABEL_37;
            }
            char v18 = 0;
            ++v24;
            if (!--v23) {
              goto LABEL_50;
            }
          }
        }
      }
    }
LABEL_49:
    char v18 = 0;
    goto LABEL_50;
  }
  uint64_t v16 = (uint64_t)sub_1A88C6804(result, v11, 10);
  char v18 = v31;
LABEL_50:
  swift_bridgeObjectRelease();
  if (v18) {
    return 0;
  }
  else {
    return v16;
  }
}

uint64_t sub_1A88C65C4()
{
  unint64_t v0 = sub_1A8A76968();
  uint64_t v4 = sub_1A88C6644(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A88C6644(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1A858E388(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1A88C679C(v9, 0);
      unint64_t v12 = sub_1A858E488((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1A8A77E88();
LABEL_4:
        JUMPOUT(0x1AD0DF7E0);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1AD0DF7E0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1AD0DF7E0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void *sub_1A88C679C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9745EC0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  _OWORD v4[3] = 2 * v5 - 64;
  return v4;
}

unsigned __int8 *sub_1A88C6804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  uint64_t v5 = sub_1A8A76958();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1A88C65C4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_1A8A77E88();
  }
LABEL_7:
  uint64_t v11 = sub_1A858DCB8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t *sub_1A88C68EC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1A88C6960(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A88C69AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A88C69F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1A88C6A54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1A88F9F64(a1, *(uint64_t **)(v2 + 16), *(void *(**)(void *__return_ptr, uint64_t, void *))(v2 + 24), a2);
}

uint64_t destroy for ContentPart()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentPart(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v3 = *(_OWORD *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v3;
  *(_OWORD *)(a1 + 112) = v4;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return a1;
}

uint64_t assignWithCopy for ContentPart(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = v8;
  long long v9 = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = v9;
  return a1;
}

__n128 __swift_memcpy185_8_0(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(long long *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for ContentPart(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentPart(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 185)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentPart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 184) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 185) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 185) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentPart()
{
  return &type metadata for ContentPart;
}

uint64_t Message.enumerateDecodedPlainText(input:outputLimit:cache:_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v8[16] = a1;
  uint64_t v9 = a2;
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  return sub_1A88E1964(v6, (uint64_t (*)(void))sub_1A88C6E70, (uint64_t)v8, a6);
}

uint64_t sub_1A88C6E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = *(unsigned __int8 *)(v4 + 16);
  char v15 = 0;
  unsigned char v10[16] = 0;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v13 = &v15;
  long long v14 = *(_OWORD *)(v4 + 40);
  return sub_1A88C5A44(v8, 0, 0, (uint64_t (*)(_OWORD *))sub_1A88C750C, (uint64_t)v10, (uint64_t)nullsub_1, 0, a1, a2, a3, a4);
}

uint64_t Message.enumerateDecodedHTMLText(input:outputLimit:cache:_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v8[16] = a1;
  uint64_t v9 = a2;
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  return sub_1A88E1964(v6, (uint64_t (*)(void))sub_1A88C7314, (uint64_t)v8, a6);
}

uint64_t TextPartEnumerationResult.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static TextPartEnumerationResult.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TextPartEnumerationResult.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t sub_1A88C6FDC(uint64_t a1, char a2, uint64_t a3, uint64_t *a4, unsigned char *a5, uint64_t (*a6)(uint64_t, unint64_t))
{
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(a1 + 136);
  if (!v8) {
    goto LABEL_36;
  }
  char v10 = *(unsigned char *)(a1 + 128);
  if (v10 & 0xF0) != 0x50 || (*(_OWORD *)(a1 + 112)) {
    goto LABEL_36;
  }
  long long v37 = *(_OWORD *)(a1 + 112);
  unint64_t v46 = a5;
  char v15 = *(unsigned __int8 **)(a1 + 96);
  long long v14 = *(unsigned __int8 **)(a1 + 104);
  uint64_t v17 = sub_1A88CCDF4(v15, v14);
  if ((a2 & 1) == 0)
  {
    if (v17 != 0x6E69616C70 || v16 != 0xE500000000000000) {
      goto LABEL_17;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v17 == 1819112552 && v16 == 0xE400000000000000) {
    goto LABEL_19;
  }
LABEL_17:
  char v20 = sub_1A8A78588();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_20:
  v40[0] = v15;
  v40[1] = v14;
  long long v41 = v37;
  char v42 = v10;
  uint64_t v43 = v8;
  sub_1A88C7524(a1 + 72, (uint64_t)v39);
  sub_1A88C7524((uint64_t)v39, (uint64_t)v44);
  if (v45 == 2 || (uint64_t v21 = sub_1A88FA8A8(v44[0], v44[1]), v23 = sub_1A88C1F64(v21, v22), v23 == 5)) {
    uint64_t v23 = 0;
  }
  if (a3 < 1)
  {
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
  }
  else
  {
    uint64_t result = sub_1A88E614C(*(unsigned __int8 *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
    uint64_t v26 = v25 - result;
    if (!result) {
      uint64_t v26 = 0;
    }
    if (v26 + 0x4000000000000000 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v27 = result;
    uint64_t v28 = v25;
    uint64_t v29 = 2 * v26;
    if (v29 >= a3) {
      uint64_t v30 = a3;
    }
    else {
      uint64_t v30 = v29;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    swift_retain();
    uint64_t v31 = sub_1A88C212C(v23, v30, v27, v28, (uint64_t)v40, a4);
    if (v7)
    {
      swift_release();

LABEL_32:
      a5 = v46;
      goto LABEL_36;
    }
    uint64_t v33 = v31;
    unint64_t v34 = v32;
    swift_release();
    if (!v34) {
      goto LABEL_32;
    }
  }
  char v35 = a6(v33, v34) & 1;
  swift_bridgeObjectRelease();
  a5 = v46;
  *unint64_t v46 = v35;
LABEL_36:
  if (*a5) {
    return 0;
  }
  else {
    return 2;
  }
}

uint64_t sub_1A88C7250@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8 = a2;
  uint64_t v9 = result;
  if ((a3 & 1) == 0) {
    goto LABEL_8;
  }
  if (result) {
    int64_t v11 = a2 - result;
  }
  else {
    int64_t v11 = 0;
  }
  if ((v11 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = sub_1A88C1BCC(0, v11, result, v8);
    if (!v14)
    {
      uint64_t v15 = 0;
      uint64_t v9 = 0;
      goto LABEL_13;
    }
    uint64_t v9 = v14 + v12;
    uint64_t v8 = v14 + v13;
LABEL_8:
    if (v9)
    {
      uint64_t v15 = v8 - v9;
      if (v8 - v9 >= 0)
      {
LABEL_13:
        sub_1A88C24A4(a4);
        swift_retain();
        uint64_t result = sub_1A88FA6C8(a4, 0, v15, v9, a5);
        *a6 = result;
        a6[1] = v16;
        return result;
      }
      __break(1u);
    }
    uint64_t v15 = 0;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88C7314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = *(unsigned __int8 *)(v4 + 16);
  char v15 = 0;
  unsigned char v10[16] = 1;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v13 = &v15;
  long long v14 = *(_OWORD *)(v4 + 40);
  return sub_1A88C5A44(v8, 0, 0, (uint64_t (*)(_OWORD *))sub_1A88C750C, (uint64_t)v10, (uint64_t)nullsub_1, 0, a1, a2, a3, a4);
}

unint64_t sub_1A88C73B4()
{
  unint64_t result = qword_1E974E2A8;
  if (!qword_1E974E2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TextPartEnumerationResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A88C74D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextPartEnumerationResult()
{
  return &type metadata for TextPartEnumerationResult;
}

uint64_t sub_1A88C750C(uint64_t a1)
{
  return sub_1A88C758C(a1);
}

uint64_t sub_1A88C7524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName_0(&qword_1E9743B28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A88C758C(uint64_t a1)
{
  return sub_1A88C6FDC(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32), *(unsigned char **)(v1 + 40), *(uint64_t (**)(uint64_t, unint64_t))(v1 + 48));
}

uint64_t sub_1A88C75BC(long long *a1, long long *a2)
{
  sub_1A88C9650(a1, v4);
  sub_1A88C9650(a2, v5);
  return _s9IMAP2MIME11DisplayPartO21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5) & 1;
}

uint64_t DisplayPart.Attachment.part.getter()
{
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t DisplayPart.Attachment.part.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

double (*DisplayPart.Attachment.part.modify())(void)
{
  return nullsub_1;
}

uint64_t DisplayPart.Attachment.contentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 40);
  sub_1A88BFB9C(v3, v4, v5, v6, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v7;
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

__n128 DisplayPart.Attachment.contentType.setter(uint64_t a1)
{
  sub_1A88BFCBC(*(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  swift_bridgeObjectRelease();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 40) = result;
  return result;
}

double (*DisplayPart.Attachment.contentType.modify())(void)
{
  return nullsub_1;
}

uint64_t DisplayPart.Attachment.contentDisposition.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1A88BC7E8(v1, *(void *)(v0 + 64));
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t DisplayPart.Attachment.contentDisposition.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A88BC834(v3[7], v3[8]);
  uint64_t result = swift_bridgeObjectRelease();
  v3[7] = a1;
  v3[8] = a2;
  v3[9] = a3;
  return result;
}

double (*DisplayPart.Attachment.contentDisposition.modify())(void)
{
  return nullsub_1;
}

uint64_t DisplayPart.Attachment.contentID.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  return v1;
}

uint64_t DisplayPart.Attachment.contentID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

double (*DisplayPart.Attachment.contentID.modify())(void)
{
  return nullsub_1;
}

uint64_t DisplayPart.Attachment.contentTransferEncoding.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t DisplayPart.Attachment.contentTransferEncoding.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 96) = result;
  return result;
}

double (*DisplayPart.Attachment.contentTransferEncoding.modify())(void)
{
  return nullsub_1;
}

uint64_t DisplayPart.Attachment.estimatedDecodedSize.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t DisplayPart.Attachment.estimatedDecodedSize.setter(uint64_t result)
{
  *(void *)(v1 + 104) = result;
  return result;
}

double (*DisplayPart.Attachment.estimatedDecodedSize.modify())(void)
{
  return nullsub_1;
}

uint64_t DisplayPart.Attachment.encodedBytes.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t DisplayPart.Attachment.encodedBytes.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 112) = result;
  *(void *)(v2 + 120) = a2;
  return result;
}

double (*DisplayPart.Attachment.encodedBytes.modify())(void)
{
  return nullsub_1;
}

__n128 DisplayPart.Attachment.init(part:contentDisposition:contentType:contentTransferEncoding:estimatedDecodedSize:encodedBytes:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  __n128 result = *(__n128 *)a5;
  long long v11 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 8) = *(_OWORD *)a5;
  char v12 = *(unsigned char *)(a5 + 32);
  uint64_t v13 = *(void *)(a5 + 40);
  *(void *)a9 = a1;
  *(_OWORD *)(a9 + 24) = v11;
  *(unsigned char *)(a9 + 40) = v12;
  *(void *)(a9 + 48) = v13;
  *(void *)(a9 + 56) = a2;
  *(void *)(a9 + 64) = a3;
  *(void *)(a9 + 72) = a4;
  *(void *)(a9 + 80) = 0;
  *(void *)(a9 + 88) = 0;
  *(unsigned char *)(a9 + 96) = a6;
  *(void *)(a9 + 104) = a7;
  *(void *)(a9 + 112) = a8;
  *(void *)(a9 + 120) = a10;
  return result;
}

BOOL sub_1A88C7954(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  void v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[7];
  void v13[6] = a1[6];
  v13[7] = v3;
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  long long v8 = a2[3];
  void v14[2] = a2[2];
  void v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  long long v9 = a2[4];
  long long v10 = a2[5];
  long long v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return _s9IMAP2MIME11DisplayPartO10AttachmentV2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v14);
}

uint64_t DisplayPart.AlternativePartStrategy.hash(into:)()
{
  return sub_1A8A78768();
}

BOOL static DisplayPart.AlternativePartStrategy.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DisplayPart.AlternativePartStrategy.hashValue.getter()
{
  return sub_1A8A787C8();
}

uint64_t Message.enumeratePartsForDisplay(strategy:maximumByteCountPerPart:cache:closure:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v7[16] = a1 & 1;
  uint64_t v8 = a2;
  uint64_t v9 = a3;
  uint64_t v10 = a4;
  uint64_t v11 = a5;
  return sub_1A88E1964(v5, (uint64_t (*)(void))sub_1A88C8AB0, (uint64_t)v7, a1 & 1);
}

uint64_t sub_1A88C7AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v15 = sub_1A88E9574(a5 & 1, a1, a2, a3, a4);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v22 = a8;
  uint64_t v23 = a9;
  sub_1A88C5A44(3, (uint64_t (*)(void *))sub_1A88C9F38, v16, (uint64_t (*)(_OWORD *))sub_1A88C9F40, (uint64_t)v19, (uint64_t)nullsub_1, 0, a1, a2, a3, a4);
  return swift_release();
}

uint64_t Message.decodedAttachmentByteCountUpperBound(attachment:)(uint64_t a1)
{
  long long v4 = *(_OWORD *)(a1 + 112);
  sub_1A8529F8C((uint64_t)&v4, (uint64_t)v5, &qword_1E974E2B0);
  sub_1A8529F8C((uint64_t)v5, (uint64_t)&v6, &qword_1E974E2B0);
  if (v6) {
    uint64_t result = *((void *)&v4 + 1) - v6;
  }
  else {
    uint64_t result = 0;
  }
  if (*(unsigned __int8 *)(a1 + 96) >= 4u)
  {
    double v3 = ceil((double)result * 3.0 * 0.25);
    if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -9.22337204e18)
      {
        if (v3 < 9.22337204e18)
        {
          uint64_t result = (uint64_t)v3 + 10;
          if (!__OFADD__((uint64_t)v3, 10)) {
            return result;
          }
LABEL_13:
          __break(1u);
          return result;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t Message.decode(attachment:into:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = sub_1A88C1A4C(*(unsigned __int8 *)(a1 + 96), a2, a3, *(void *)(a1 + 112), *(void *)(a1 + 120));
  if (!v3 && (v5 & 1) != 0)
  {
    sub_1A88C8AE0();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1A88C7CF4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  unint64_t v4 = sub_1A88F0E38(v3);
  if (v5)
  {
    unint64_t v6 = *(void *)(*(void *)(a2 + 56) + 8 * v4);
    sub_1A85170D0(v6);
  }
  else
  {
    unint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A88C7D58(uint64_t *a1, uint64_t a2, uint64_t *a3, void (*a4)(_OWORD *))
{
  sub_1A8529F8C((uint64_t)(a1 + 21), (uint64_t)v29, &qword_1E9743B28);
  sub_1A8529F8C((uint64_t)v29, (uint64_t)v34, &qword_1E9743B28);
  if (v34[16] != 2) {
    return 2;
  }
  sub_1A8529F8C((uint64_t)(a1 + 12), (uint64_t)v28, &qword_1E9743B78);
  sub_1A8529F8C((uint64_t)v28, (uint64_t)v35, &qword_1E9743B78);
  if (v36)
  {
    sub_1A88C69AC((uint64_t)a1);
    swift_retain();
    sub_1A88C8024((uint64_t)v28, (uint64_t)a1, a2, a3, (uint64_t)v24);
  }
  else
  {
    uint64_t v8 = *a1;
    sub_1A88C69AC((uint64_t)a1);
    swift_retain();
    sub_1A88C69AC((uint64_t)a1);
    swift_retain();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v8, MEMORY[0x1E4FBC860]) & 1) == 0)
    {
      swift_release();
      sub_1A88C9C34((uint64_t)a1);
      sub_1A88C9C34((uint64_t)a1);
      swift_release();
      sub_1A88C9678((uint64_t)v30);
      sub_1A8529F8C((uint64_t)v30, (uint64_t)v24, &qword_1E9743B20);
      goto LABEL_13;
    }
    unint64_t v10 = sub_1A88EEEF8((unint64_t)"text/plain", (uint64_t)"", 0);
    long long v13 = 0uLL;
    if (v12)
    {
      uint64_t v14 = v12;
      sub_1A88DF9BC(v10, v11, (uint64_t)v25);
      sub_1A8529F8C((uint64_t)v25, (uint64_t)v26, &qword_1E9743B70);
      uint64_t v15 = v27;
      if (v27 <= 0xFDuLL)
      {
        long long v19 = v26[1];
        long long v20 = v26[0];
        *(void *)&v30[0] = v9;
        sub_1A88EBA30(v14, (char **)v30);
        swift_bridgeObjectRelease();
        long long v17 = v19;
        long long v13 = v20;
        uint64_t v16 = *(void *)&v30[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        long long v17 = 0uLL;
        long long v13 = 0uLL;
      }
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      long long v17 = 0uLL;
    }
    v31[0] = v13;
    v31[1] = v17;
    uint64_t v32 = v15;
    uint64_t v33 = v16;
    sub_1A88C8024((uint64_t)v31, (uint64_t)a1, a2, a3, (uint64_t)v24);
    swift_bridgeObjectRelease();
    sub_1A88C9C34((uint64_t)a1);
    swift_release();
  }
  sub_1A88C9C34((uint64_t)a1);
  swift_release();
LABEL_13:
  sub_1A8529F8C((uint64_t)v24, (uint64_t)v22, &qword_1E9743B20);
  sub_1A8529F8C((uint64_t)v22, (uint64_t)v23, &qword_1E9743B20);
  if (sub_1A88C9F60((uint64_t)v23) != 1)
  {
    sub_1A8529F8C((uint64_t)v22, (uint64_t)v21, &qword_1E9743B20);
    sub_1A88C9650(v21, v30);
    a4(v30);
    sub_1A88C9F78((uint64_t)v22);
  }
  return 2;
}

uint64_t sub_1A88C8024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  sub_1A8529F8C(a1, (uint64_t)v33, &qword_1E9743B78);
  if (!*((void *)&v34 + 1))
  {
    sub_1A88C9678((uint64_t)v29);
    goto LABEL_12;
  }
  v35[0] = v33[0];
  v35[1] = v33[1];
  v35[2] = v34;
  sub_1A8529F8C(a2 + 72, (uint64_t)v37, &qword_1E9743B28);
  sub_1A8529F8C((uint64_t)v37, (uint64_t)v38, &qword_1E9743B28);
  if (v39 == 2 || (v10 = sub_1A88FA8A8(v38[0], v38[1]), uint64_t v12 = sub_1A88C1F64(v10, v11), v12 == 5)) {
    uint64_t v12 = 0;
  }
  sub_1A88AF2E4((uint64_t)v35, (uint64_t)v36);
  sub_1A88E0D28((uint64_t)v36, (uint64_t)v27);
  sub_1A88BFB40((uint64_t)v27, (uint64_t)&v30);
  if (v32 != 5) {
    goto LABEL_24;
  }
  uint64_t v13 = v31;
  if (!v31) {
    goto LABEL_24;
  }
  uint64_t v14 = v30;
  if (v30 == 0x6E69616C70 && v31 == 0xE500000000000000 || (sub_1A8A78588() & 1) != 0)
  {
    sub_1A88C8420(0, a2, (uint64_t)v35, v12, a3, a4, (uint64_t)v29);
    sub_1A88C9D4C((uint64_t)v27, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
LABEL_12:
    uint64_t v15 = v29;
    return sub_1A8529F8C((uint64_t)v15, a5, &qword_1E9743B20);
  }
  if ((v14 != 1819112552 || v13 != 0xE400000000000000) && (sub_1A8A78588() & 1) == 0)
  {
LABEL_24:
    sub_1A88C9D4C((uint64_t)v27, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
    swift_retain();
    sub_1A88C69AC(a2);
    sub_1A88C9698(a2, v12, a4, (uint64_t)v28);
    sub_1A8529F8C((uint64_t)v28, (uint64_t)v29, &qword_1E9743B18);
    if (sub_1A8561268((uint64_t *)v29) == 1)
    {
      sub_1A88C9678((uint64_t)v26);
    }
    else
    {
      v25[4] = v29[4];
      v25[5] = v29[5];
      v25[6] = v29[6];
      v25[7] = v29[7];
      v25[0] = v29[0];
      v25[1] = v29[1];
      v25[2] = v29[2];
      v25[3] = v29[3];
      sub_1A88C9BF4((uint64_t)v25);
      sub_1A88C9650(v25, v26);
      nullsub_1(v26);
    }
    uint64_t v15 = v26;
    return sub_1A8529F8C((uint64_t)v15, a5, &qword_1E9743B20);
  }
  if (a3 < 1)
  {
    uint64_t v22 = 0;
    unint64_t v24 = 0xE000000000000000;
    goto LABEL_31;
  }
  uint64_t result = sub_1A88E614C(*(unsigned __int8 *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32));
  uint64_t v18 = v17 - result;
  if (!result) {
    uint64_t v18 = 0;
  }
  if (v18 + 0x4000000000000000 >= 0)
  {
    uint64_t v19 = result;
    uint64_t v20 = v17;
    uint64_t v21 = 2 * v18;
    if (v21 < a3) {
      a3 = v21;
    }
    sub_1A88C24A4(a1);
    swift_retain();
    uint64_t v22 = sub_1A88C212C(v12, a3, v19, v20, (uint64_t)v35, a4);
    unint64_t v24 = v23;
    swift_release();
    if (!v24)
    {
      sub_1A88C9D4C((uint64_t)v27, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
      sub_1A88C9678((uint64_t)v28);
LABEL_32:
      sub_1A8529F8C((uint64_t)v28, (uint64_t)v29, &qword_1E9743B20);
      goto LABEL_12;
    }
LABEL_31:
    sub_1A88C9D4C((uint64_t)v27, (void (*)(void, void, void, void, void))sub_1A88BFCBC);
    *(void *)&v26[0] = v22;
    *((void *)&v26[0] + 1) = v24;
    sub_1A88C9C14((uint64_t)v26);
    sub_1A88C9650(v26, v28);
    nullsub_1(v28);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A88C8420@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  if (a5 < 1)
  {
    uint64_t v20 = 0;
    unint64_t v22 = 0xE000000000000000;
    goto LABEL_11;
  }
  uint64_t v11 = a5;
  uint64_t result = sub_1A88E614C(*(unsigned __int8 *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32));
  uint64_t v16 = v15 - result;
  if (!result) {
    uint64_t v16 = 0;
  }
  if (v16 + 0x4000000000000000 >= 0)
  {
    uint64_t v17 = result;
    uint64_t v18 = v15;
    uint64_t v19 = 2 * v16;
    if (v19 < v11) {
      uint64_t v11 = v19;
    }
    sub_1A88C24A4(a3);
    swift_retain();
    uint64_t v20 = sub_1A88C212C(a4, v11, v17, v18, a3, a6);
    unint64_t v22 = v21;
    swift_release();
    if (!v22)
    {
      sub_1A88C9678((uint64_t)v48);
LABEL_27:
      sub_1A8529F8C((uint64_t)v48, (uint64_t)v49, &qword_1E9743B20);
      return sub_1A8529F8C((uint64_t)v49, a7, &qword_1E9743B20);
    }
LABEL_11:
    if (a1)
    {
      *(void *)&long long v46 = v20;
      *((void *)&v46 + 1) = v22;
      sub_1A88C9C14((uint64_t)&v46);
    }
    else
    {
      uint64_t v23 = *(void *)(a2 + 136);
      if (v23)
      {
        uint64_t v24 = *(void *)(v23 + 16);
        if (v24)
        {
          uint64_t v39 = a7;
          uint64_t v44 = 0;
          uint64_t v45 = 0;
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          uint64_t v25 = 0;
          uint64_t v40 = 0;
          uint64_t v41 = 0;
          uint64_t v26 = 0;
          unsigned __int8 v27 = (uint64_t *)(_s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0() + 80);
          do
          {
            if ((*(unsigned char *)(v27 - 4) & 1) == 0)
            {
              uint64_t v28 = *(v27 - 3);
              uint64_t v29 = *(v27 - 2);
              uint64_t v30 = *((unsigned __int8 *)v27 - 8);
              uint64_t v31 = *v27;
              int v32 = *((unsigned __int8 *)v27 - 48);
              if (v32 == 4)
              {
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                swift_bridgeObjectRelease();
                uint64_t v44 = v29;
                uint64_t v45 = v28;
                uint64_t v43 = v30;
                uint64_t v25 = v31;
              }
              else if (v32 == 12)
              {
                _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
                swift_bridgeObjectRelease();
                uint64_t v41 = v29;
                uint64_t v42 = v28;
                uint64_t v40 = v30;
                uint64_t v26 = v31;
              }
            }
            v27 += 7;
            --v24;
          }
          while (v24);
          swift_bridgeObjectRelease();
          a7 = v39;
          uint64_t v33 = v40;
          uint64_t v35 = v44;
          uint64_t v34 = v45;
          uint64_t v36 = v42;
          uint64_t v37 = v43;
          uint64_t v38 = v41;
        }
        else
        {
          uint64_t v34 = 0;
          uint64_t v35 = 0;
          uint64_t v37 = 0;
          uint64_t v25 = 0;
          uint64_t v36 = 0;
          uint64_t v38 = 0;
          uint64_t v33 = 0;
          uint64_t v26 = 0;
        }
        LOBYTE(v23) = sub_1A88EA1E8(v36, v38, v33, v26, v34, v35, v37, v25);
      }
      *(void *)&long long v46 = v20;
      *((void *)&v46 + 1) = v22;
      char v47 = v23;
      sub_1A88C9EE4((uint64_t)&v46);
    }
    sub_1A88C9650(&v46, v48);
    nullsub_1(v48);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

BOOL _s9IMAP2MIME11DisplayPartO10AttachmentV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)a1) & 1) == 0) {
    return 0;
  }
  long long v4 = *(_OWORD *)(a1 + 24);
  v26[0] = *(_OWORD *)(a1 + 8);
  v26[1] = v4;
  long long v27 = *(_OWORD *)(a1 + 40);
  long long v5 = *(_OWORD *)(a2 + 24);
  v23[0] = *(_OWORD *)(a2 + 8);
  v23[1] = v5;
  long long v24 = *(_OWORD *)(a2 + 40);
  sub_1A88BFB40((uint64_t)v26, (uint64_t)v28);
  sub_1A88BFB40((uint64_t)v23, (uint64_t)v25);
  if ((_s9IMAP2MIME9MediaTypeO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v28, (uint64_t)v25) & 1) == 0
    || (sub_1A88BCF6C(*((uint64_t *)&v27 + 1), *((uint64_t *)&v24 + 1)) & 1) == 0)
  {
    return 0;
  }
  long long v20 = *(_OWORD *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 72);
  long long v17 = *(_OWORD *)(a2 + 56);
  uint64_t v18 = *(void *)(a2 + 72);
  sub_1A88CA010((uint64_t)&v20, (uint64_t)v22);
  sub_1A88CA010((uint64_t)&v17, (uint64_t)v19);
  sub_1A88CA010((uint64_t)v22, (uint64_t)&v29);
  uint64_t v6 = v30;
  if (v30 == 2)
  {
    sub_1A88CA010((uint64_t)v19, (uint64_t)&v31);
    if (v32 != 2) {
      return 0;
    }
  }
  else if (v30 == 1)
  {
    sub_1A88CA010((uint64_t)v19, (uint64_t)&v31);
    if (v32 != 1) {
      return 0;
    }
  }
  else if (v30)
  {
    uint64_t v7 = v29;
    sub_1A88CA010((uint64_t)v19, (uint64_t)&v31);
    if (v32 < 3) {
      return 0;
    }
    if (v7 != v31 || v6 != v32)
    {
      char v8 = sub_1A8A78588();
      BOOL result = 0;
      if ((v8 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    sub_1A88CA010((uint64_t)v19, (uint64_t)&v31);
    if (v32) {
      return 0;
    }
  }
  if ((sub_1A88BCE0C(v21, v18) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a2 + 88);
  if (!v10)
  {
    if (!v11) {
      goto LABEL_25;
    }
    return 0;
  }
  if (!v11) {
    return 0;
  }
  if (*(void *)(a1 + 80) != *(void *)(a2 + 80) || v10 != v11)
  {
    char v12 = sub_1A8A78588();
    BOOL result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
LABEL_25:
  if ((sub_1A88D00BC(*(unsigned __int8 *)(a1 + 96), *(unsigned __int8 *)(a2 + 96)) & 1) == 0
    || *(void *)(a1 + 104) != *(void *)(a2 + 104))
  {
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + 112);
  if (v13) {
    uint64_t v14 = *(void *)(a1 + 120) - v13;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(void *)(a2 + 112);
  if (!v15) {
    return (v14 | v13) == 0;
  }
  BOOL result = 0;
  if (v13 && v14 == *(void *)(a2 + 120) - v15) {
    return v13 == v15;
  }
  return result;
}

uint64_t _s9IMAP2MIME11DisplayPartO21__derived_enum_equalsySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  sub_1A88C9650(a1, v26);
  int v3 = sub_1A88C9120((uint64_t)v26);
  if (v3)
  {
    if (v3 == 1)
    {
      long long v4 = (uint64_t *)sub_1A88C912C((uint64_t)v26);
      uint64_t v5 = *v4;
      uint64_t v6 = v4[1];
      sub_1A88C9650(a2, v27);
      if (sub_1A88C9120((uint64_t)v27) == 1)
      {
        uint64_t v7 = (void *)sub_1A88C912C((uint64_t)v27);
        if (v5 == *v7 && v6 == v7[1]) {
          char v8 = 1;
        }
        else {
          char v8 = sub_1A8A78588();
        }
        return v8 & 1;
      }
    }
    else
    {
      long long v17 = (_OWORD *)sub_1A88C912C((uint64_t)v26);
      _OWORD v27[4] = v17[4];
      v27[5] = v17[5];
      v27[6] = v17[6];
      v27[7] = v17[7];
      v27[0] = *v17;
      v27[1] = v17[1];
      void v27[2] = v17[2];
      void v27[3] = v17[3];
      sub_1A88C9650(a2, v24);
      if (sub_1A88C9120((uint64_t)v24) == 2)
      {
        uint64_t v18 = (_OWORD *)sub_1A88C912C((uint64_t)v24);
        long long v19 = v18[5];
        v25[4] = v18[4];
        v25[5] = v19;
        long long v20 = v18[7];
        v25[6] = v18[6];
        v25[7] = v20;
        long long v21 = v18[1];
        v25[0] = *v18;
        v25[1] = v21;
        long long v22 = v18[3];
        v25[2] = v18[2];
        v25[3] = v22;
        char v8 = _s9IMAP2MIME11DisplayPartO10AttachmentV2eeoiySbAE_AEtFZ_0((uint64_t)v27, (uint64_t)v25);
        return v8 & 1;
      }
    }
LABEL_16:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v9 = sub_1A88C912C((uint64_t)v26);
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  int v12 = *(unsigned __int8 *)(v9 + 16);
  sub_1A88C9650(a2, v27);
  if (sub_1A88C9120((uint64_t)v27)) {
    goto LABEL_16;
  }
  uint64_t v13 = sub_1A88C912C((uint64_t)v27);
  int v14 = *(unsigned __int8 *)(v13 + 16);
  BOOL v15 = v10 == *(void *)v13 && v11 == *(void *)(v13 + 8);
  if (v15 || (v16 = sub_1A8A78588(), char v8 = 0, (v16 & 1) != 0)) {
    char v8 = v12 == v14;
  }
  return v8 & 1;
}

uint64_t sub_1A88C8AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A88C7AA0(a1, a2, a3, a4, *(unsigned char *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48));
}

unint64_t sub_1A88C8AE0()
{
  unint64_t result = qword_1E974E2B8;
  if (!qword_1E974E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2B8);
  }
  return result;
}

unint64_t sub_1A88C8B38()
{
  unint64_t result = qword_1E974E2C0;
  if (!qword_1E974E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E974E2C0);
  }
  return result;
}

uint64_t sub_1A88C8B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if ((a13 >> 62) >= 2)
  {
    if (a13 >> 62 != 2) {
      return result;
    }
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88BFB9C(a2, a3, a4, a5, a6);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
    sub_1A88BC7E8(a8, a9);
    _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
  }
  return _s13IMAP2Behavior27ConnectionIDsGroupedByStateV11connectionsSayAC0C0VGvg_0();
}

uint64_t destroy for DisplayPart(uint64_t *a1)
{
  return sub_1A88C8CB8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12]);
}

uint64_t sub_1A88C8CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if ((a13 >> 62) >= 2)
  {
    if (a13 >> 62 != 2) {
      return result;
    }
    swift_bridgeObjectRelease();
    sub_1A88BFCBC(a2, a3, a4, a5, a6);
    swift_bridgeObjectRelease();
    sub_1A88BC834(a8, a9);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for DisplayPart(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  unint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  unint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  sub_1A88C8B8C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  return a1;
}

uint64_t assignWithCopy for DisplayPart(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  unint64_t v11 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v25 = a2[10];
  uint64_t v26 = a2[11];
  unint64_t v27 = a2[12];
  uint64_t v28 = a2[13];
  uint64_t v29 = a2[14];
  uint64_t v30 = a2[15];
  sub_1A88C8B8C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v27;
  *(void *)(a1 + 104) = v28;
  *(void *)(a1 + 112) = v29;
  *(void *)(a1 + 120) = v30;
  sub_1A88C8CB8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22);
  return a1;
}

__n128 __swift_memcpy128_8_1(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for DisplayPart(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v11 = *(_OWORD *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 96);
  long long v14 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v15;
  long long v16 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v16;
  long long v17 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v17;
  sub_1A88C8CB8(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13);
  return a1;
}