uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t Artwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA1E564(v1, a1, &qword_26B1CFD40);
}

uint64_t Artwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Artwork();
  return sub_24EA1E564(v1 + *(int *)(v3 + 20), a1, &qword_26B1CF9E8);
}

uint64_t type metadata accessor for Artwork()
{
  uint64_t result = qword_26B1CFCF8;
  if (!qword_26B1CFCF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EA1E564(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t Artwork.init(backgroundColor:templateURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24EA1E61C(a1, a3, &qword_26B1CFD40);
  uint64_t v5 = type metadata accessor for Artwork();
  return sub_24EA1E61C(a2, a3 + *(int *)(v5 + 20), &qword_26B1CF9E8);
}

uint64_t sub_24EA1E61C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA1E680(char a1)
{
  if (a1) {
    return 0x6574616C706D6574;
  }
  else {
    return 0x756F72676B636162;
  }
}

BOOL sub_24EA1E6CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24EA1E6E4()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA1E72C()
{
  return sub_24EA94B80();
}

uint64_t sub_24EA1E758()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA1E79C()
{
  return sub_24EA1E680(*v0);
}

uint64_t sub_24EA1E7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA1F46C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA1E7CC()
{
  return 0;
}

void sub_24EA1E7D8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24EA1E7E4(uint64_t a1)
{
  unint64_t v2 = sub_24EA1EAF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA1E820(uint64_t a1)
{
  unint64_t v2 = sub_24EA1EAF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA1E85C@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA1E564(v1, a1, &qword_26B1CFD40);
}

uint64_t sub_24EA1E884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EA1E564(v2 + *(int *)(a1 + 20), a2, &qword_26B1CF9E8);
}

uint64_t Artwork.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA1EAF4();
  sub_24EA94C00();
  v8[15] = 0;
  sub_24EA93EB0();
  sub_24EA212B4(&qword_26B1CFD28, MEMORY[0x263F3E0F0]);
  sub_24EA94A80();
  if (!v1)
  {
    type metadata accessor for Artwork();
    v8[14] = 1;
    sub_24EA93DE0();
    sub_24EA212B4(&qword_26B1CF9D0, MEMORY[0x263F06EA8]);
    sub_24EA94A80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24EA1EAF4()
{
  unint64_t result = qword_26B1CFCB8;
  if (!qword_26B1CFCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFCB8);
  }
  return result;
}

uint64_t Artwork.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388]();
  v21 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269928ED8);
  uint64_t v20 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388]();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Artwork();
  MEMORY[0x270FA5388]();
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA1EAF4();
  sub_24EA94BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v18 = v9;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v20;
  sub_24EA93EB0();
  char v24 = 0;
  sub_24EA212B4(&qword_269928EE0, MEMORY[0x263F3E0F0]);
  uint64_t v14 = (uint64_t)v21;
  uint64_t v15 = v22;
  sub_24EA94A10();
  sub_24EA1E61C(v14, v12, &qword_26B1CFD40);
  sub_24EA93DE0();
  char v23 = 1;
  sub_24EA212B4(&qword_269928EE8, MEMORY[0x263F06EA8]);
  sub_24EA94A10();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v15);
  sub_24EA1E61C((uint64_t)v5, v12 + *(int *)(v18 + 20), &qword_26B1CF9E8);
  sub_24EA1EF24(v12, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EA1EF88(v12);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24EA1EF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA1EF88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA1EFE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Artwork.init(from:)(a1, a2);
}

uint64_t sub_24EA1EFFC(void *a1)
{
  return Artwork.encode(to:)(a1);
}

uint64_t Artwork.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EA93DE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v17 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EA93EB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v1, (uint64_t)v12, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v12, v7);
    sub_24EA94B90();
    sub_24EA212B4(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v13 = type metadata accessor for Artwork();
  sub_24EA1E564(v1 + *(int *)(v13 + 20), (uint64_t)v6, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2) == 1) {
    return sub_24EA94B90();
  }
  uint64_t v15 = v17;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v17, v6, v2);
  sub_24EA94B90();
  sub_24EA212B4(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
  sub_24EA94580();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v15, v2);
}

uint64_t Artwork.hashValue.getter()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA1F3E8()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA1F42C()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA1F46C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL _s12FitnessAsset7ArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = sub_24EA93DE0();
  uint64_t v56 = *(void *)(v58 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v48 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9F8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v57 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v49 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v54 = (uint64_t)&v47 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (uint64_t)&v47 - v10;
  uint64_t v11 = sub_24EA93EB0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v50 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD50);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  char v24 = (char *)&v47 - v23;
  MEMORY[0x270FA5388](v22);
  v26 = (char *)&v47 - v25;
  uint64_t v52 = a1;
  sub_24EA1E564(a1, (uint64_t)&v47 - v25, &qword_26B1CFD40);
  uint64_t v53 = a2;
  sub_24EA1E564(a2, (uint64_t)v24, &qword_26B1CFD40);
  uint64_t v27 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_24EA1E564((uint64_t)v26, (uint64_t)v17, &qword_26B1CFD40);
  sub_24EA1E564((uint64_t)v24, v27, &qword_26B1CFD40);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) != 1)
  {
    sub_24EA1E564((uint64_t)v17, (uint64_t)v21, &qword_26B1CFD40);
    if (v28(v27, 1, v11) != 1)
    {
      v31 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v50, v27, v11);
      sub_24EA212B4(&qword_26B1CFD38, MEMORY[0x263F3E0F0]);
      char v32 = sub_24EA945D0();
      v33 = *(void (**)(char *, uint64_t))(v12 + 8);
      v33(v31, v11);
      sub_24EA21258((uint64_t)v24, &qword_26B1CFD40);
      sub_24EA21258((uint64_t)v26, &qword_26B1CFD40);
      v33(v21, v11);
      sub_24EA21258((uint64_t)v17, &qword_26B1CFD40);
      if ((v32 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    sub_24EA21258((uint64_t)v24, &qword_26B1CFD40);
    sub_24EA21258((uint64_t)v26, &qword_26B1CFD40);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
LABEL_6:
    v29 = &qword_26B1CFD50;
    uint64_t v30 = (uint64_t)v17;
LABEL_14:
    sub_24EA21258(v30, v29);
    return 0;
  }
  sub_24EA21258((uint64_t)v24, &qword_26B1CFD40);
  sub_24EA21258((uint64_t)v26, &qword_26B1CFD40);
  if (v28(v27, 1, v11) != 1) {
    goto LABEL_6;
  }
  sub_24EA21258((uint64_t)v17, &qword_26B1CFD40);
LABEL_8:
  uint64_t v34 = type metadata accessor for Artwork();
  uint64_t v35 = v55;
  sub_24EA1E564(v52 + *(int *)(v34 + 20), v55, &qword_26B1CF9E8);
  uint64_t v36 = v54;
  sub_24EA1E564(v53 + *(int *)(v34 + 20), v54, &qword_26B1CF9E8);
  uint64_t v37 = v57;
  uint64_t v38 = v57 + *(int *)(v51 + 48);
  sub_24EA1E564(v35, v57, &qword_26B1CF9E8);
  sub_24EA1E564(v36, v38, &qword_26B1CF9E8);
  uint64_t v39 = v56;
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  uint64_t v41 = v58;
  if (v40(v37, 1, v58) == 1)
  {
    sub_24EA21258(v36, &qword_26B1CF9E8);
    sub_24EA21258(v35, &qword_26B1CF9E8);
    if (v40(v38, 1, v41) == 1)
    {
      sub_24EA21258(v37, &qword_26B1CF9E8);
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v42 = v49;
  sub_24EA1E564(v37, v49, &qword_26B1CF9E8);
  if (v40(v38, 1, v41) == 1)
  {
    sub_24EA21258(v36, &qword_26B1CF9E8);
    sub_24EA21258(v35, &qword_26B1CF9E8);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v41);
LABEL_13:
    v29 = &qword_26B1CF9F8;
    uint64_t v30 = v37;
    goto LABEL_14;
  }
  v44 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v48, v38, v41);
  sub_24EA212B4(&qword_26B1CF9E0, MEMORY[0x263F06EA8]);
  char v45 = sub_24EA945D0();
  v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v44, v41);
  sub_24EA21258(v36, &qword_26B1CF9E8);
  sub_24EA21258(v35, &qword_26B1CF9E8);
  v46((char *)v42, v41);
  sub_24EA21258(v37, &qword_26B1CF9E8);
  return (v45 & 1) != 0;
}

uint64_t sub_24EA1FCD8()
{
  return sub_24EA212B4(&qword_26B1CFCF0, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t sub_24EA1FD20()
{
  return sub_24EA212B4(&qword_26B1CFCD8, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t sub_24EA1FD68()
{
  return sub_24EA212B4(&qword_26B1CFCE0, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t sub_24EA1FDB0()
{
  return sub_24EA212B4(&qword_26B1CFCE8, (void (*)(uint64_t))type metadata accessor for Artwork);
}

uint64_t *initializeBufferWithCopyOfBuffer for Artwork(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EA93EB0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_24EA93DE0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA93EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_24EA93DE0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *initializeWithCopy for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24EA93DE0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithCopy for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24EA93DE0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *initializeWithTake for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24EA93DE0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithTake for Artwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24EA93DE0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA20B74);
}

uint64_t sub_24EA20B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA20C88);
}

uint64_t sub_24EA20C88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_24EA20D94()
{
  sub_24EA20E94(319, &qword_26B1CFD48, MEMORY[0x263F3E0F0]);
  if (v0 <= 0x3F)
  {
    sub_24EA20E94(319, &qword_26B1CF9F0, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24EA20E94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24EA94820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_24EA20EF8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24EA20F18(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize()
{
  if (!qword_26B1CFED8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26B1CFED8);
    }
  }
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Artwork.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Artwork.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA21100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24EA21128(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24EA21134(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Artwork.CodingKeys()
{
  return &type metadata for Artwork.CodingKeys;
}

unint64_t sub_24EA21154()
{
  unint64_t result = qword_269928EF0;
  if (!qword_269928EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269928EF0);
  }
  return result;
}

unint64_t sub_24EA211AC()
{
  unint64_t result = qword_26B1CFCC8;
  if (!qword_26B1CFCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFCC8);
  }
  return result;
}

unint64_t sub_24EA21204()
{
  unint64_t result = qword_26B1CFCC0;
  if (!qword_26B1CFCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFCC0);
  }
  return result;
}

uint64_t sub_24EA21258(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EA212B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_24EA212FC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EA2130C()
{
  return sub_24EA94B80();
}

uint64_t sub_24EA21334(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64656863746566 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701602409 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EA2146C()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA214B4(char a1)
{
  return *(void *)&aFetched_1[8 * a1];
}

BOOL sub_24EA214D4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24EA214E4()
{
  return sub_24EA94B80();
}

uint64_t sub_24EA2150C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x637465467473616CLL && a2 == 0xE900000000000068)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EA215E8()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA21630(char a1)
{
  if (a1) {
    return 0x637465467473616CLL;
  }
  else {
    return 12383;
  }
}

uint64_t sub_24EA21660(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65636E6174736E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_24EA216E8(char *a1, char *a2)
{
  return sub_24EA212FC(*a1, *a2);
}

uint64_t sub_24EA21734()
{
  return sub_24EA2146C();
}

uint64_t sub_24EA21770()
{
  return sub_24EA2130C();
}

uint64_t sub_24EA217B0()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA21810()
{
  return sub_24EA214B4(*v0);
}

uint64_t sub_24EA2184C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24EA21AAC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_24EA21334, a4);
}

uint64_t sub_24EA21864@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24EA21B1C(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_24EA268B4, a2);
}

uint64_t sub_24EA2187C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EA218D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

BOOL sub_24EA21924(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24EA214D4(*a1, *a2);
}

uint64_t sub_24EA21970()
{
  return sub_24EA215E8();
}

uint64_t sub_24EA219B0()
{
  return sub_24EA214E4();
}

uint64_t sub_24EA219F4()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA21A54()
{
  return sub_24EA21630(*v0);
}

uint64_t sub_24EA21A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24EA21AAC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_24EA2150C, a4);
}

uint64_t sub_24EA21AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10]);
  *a5 = result;
  return result;
}

uint64_t sub_24EA21B04@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24EA21B1C(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_24EA268BC, a2);
}

uint64_t sub_24EA21B1C@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  *a3 = result;
  return result;
}

uint64_t sub_24EA21B70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EA21BC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EA21C18()
{
  return 1;
}

uint64_t sub_24EA21C20()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA21C64()
{
  return sub_24EA94B80();
}

uint64_t sub_24EA21C8C()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA21CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA21660(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EA21D24@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24EA21E58(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_24EA268DC, a2);
}

uint64_t sub_24EA21D3C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EA21D90(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24EA21DE4()
{
  return 0;
}

uint64_t sub_24EA21DF0@<X0>(unsigned char *a1@<X8>)
{
  char v2 = sub_24EA21C18();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

uint64_t sub_24EA21E58@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EA21EB0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24EA21F04(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t AssetLoadState.encode(to:)(void *a1, void *a2)
{
  v76 = a1;
  uint64_t v3 = a2[2];
  uint64_t v5 = a2[4];
  uint64_t v4 = a2[5];
  uint64_t v80 = a2[3];
  uint64_t v81 = v4;
  uint64_t v6 = a2[6];
  uint64_t v79 = a2[7];
  uint64_t v8 = a2[8];
  uint64_t v7 = a2[9];
  uint64_t v9 = a2[10];
  uint64_t v86 = v3;
  uint64_t v87 = v80;
  uint64_t v74 = v3;
  uint64_t v88 = v5;
  uint64_t v89 = v4;
  uint64_t v95 = v5;
  uint64_t v90 = v6;
  uint64_t v91 = v79;
  uint64_t v92 = v8;
  uint64_t v93 = v7;
  uint64_t v94 = v9;
  uint64_t v68 = type metadata accessor for AssetLoadState.IdleCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = sub_24EA94AC0();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v58 = (char *)&v48 - v10;
  uint64_t v86 = v3;
  uint64_t v87 = v80;
  uint64_t v11 = v81;
  uint64_t v88 = v5;
  uint64_t v89 = v81;
  uint64_t v75 = v6;
  uint64_t v12 = v79;
  uint64_t v90 = v6;
  uint64_t v91 = v79;
  uint64_t v78 = v8;
  uint64_t v92 = v8;
  uint64_t v93 = v7;
  uint64_t v94 = v9;
  uint64_t v13 = type metadata accessor for AssetLoadState.FetchingCodingKeys();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v55 = v13;
  uint64_t v54 = v14;
  uint64_t v65 = sub_24EA94AC0();
  uint64_t v61 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v57 = (char *)&v48 - v15;
  uint64_t v60 = sub_24EA93E70();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v56 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v74;
  uint64_t v86 = v74;
  uint64_t v87 = v80;
  uint64_t v88 = v95;
  uint64_t v89 = v11;
  uint64_t v90 = v6;
  uint64_t v91 = v12;
  uint64_t v92 = v8;
  uint64_t v93 = v7;
  uint64_t v94 = v9;
  uint64_t v18 = type metadata accessor for AssetLoadState.FetchedCodingKeys();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v53 = v18;
  uint64_t v52 = v19;
  uint64_t v63 = sub_24EA94AC0();
  uint64_t v49 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  v72 = (char *)&v48 - v20;
  uint64_t v62 = sub_24EA93E40();
  uint64_t v51 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  v71 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v80;
  uint64_t v50 = sub_24EA94BC0();
  uint64_t v70 = *(void *)(v50 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v50);
  v69 = (char *)&v48 - v24;
  uint64_t v25 = *(a2 - 1);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v17;
  uint64_t v87 = v22;
  uint64_t v88 = v95;
  uint64_t v89 = v81;
  uint64_t v90 = v75;
  uint64_t v91 = v12;
  uint64_t v92 = v78;
  uint64_t v93 = v7;
  uint64_t v94 = v9;
  type metadata accessor for AssetLoadState.CodingKeys();
  swift_getWitnessTable();
  uint64_t v75 = sub_24EA94AC0();
  uint64_t v80 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  v29 = (char *)&v48 - v28;
  __swift_project_boxed_opaque_existential_1(v76, v76[3]);
  sub_24EA94C00();
  (*(void (**)(char *, uint64_t, void *))(v25 + 16))(v27, v77, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v38 = v49;
    uint64_t v39 = v50;
    uint64_t v40 = v62;
    uint64_t v41 = &v27[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v27, v39);
    uint64_t v42 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v71, v41, v40);
    LOBYTE(v86) = 0;
    uint64_t v36 = v75;
    sub_24EA94A70();
    LOBYTE(v86) = 0;
    uint64_t v82 = v95;
    uint64_t v83 = v81;
    uint64_t v84 = v79;
    uint64_t v85 = v78;
    swift_getWitnessTable();
    uint64_t v43 = v63;
    uint64_t v44 = v73;
    sub_24EA94AB0();
    if (!v44)
    {
      LOBYTE(v86) = 1;
      sub_24EA23B34(&qword_269928F00, MEMORY[0x263F07490]);
      sub_24EA94AB0();
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v72, v43);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v71, v40);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v29, v36);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v31 = v59;
    char v32 = v56;
    v33 = v27;
    uint64_t v34 = v60;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v33, v60);
    LOBYTE(v86) = 1;
    uint64_t v35 = v57;
    uint64_t v36 = v75;
    sub_24EA94A70();
    sub_24EA23B34(&qword_269928EF8, MEMORY[0x263F07508]);
    uint64_t v37 = v65;
    sub_24EA94AB0();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v37);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v29, v36);
  }
  LOBYTE(v86) = 2;
  v46 = v58;
  uint64_t v47 = v75;
  sub_24EA94A70();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v29, v47);
}

uint64_t type metadata accessor for AssetLoadState.IdleCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AssetLoadState.FetchingCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AssetLoadState.FetchedCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AssetLoadState.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t AssetLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  v110 = a6;
  uint64_t v95 = a1;
  uint64_t v76 = a9;
  uint64_t v96 = a11;
  *(void *)&long long v103 = a2;
  *((void *)&v103 + 1) = a3;
  *(void *)&long long v104 = a4;
  *((void *)&v104 + 1) = a5;
  v105 = a6;
  uint64_t v106 = a7;
  uint64_t v107 = a8;
  uint64_t v108 = a10;
  uint64_t v109 = a11;
  uint64_t v85 = type metadata accessor for AssetLoadState.IdleCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v72 = sub_24EA94A60();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v82 = (char *)&v66 - v17;
  *(void *)&long long v103 = a2;
  *((void *)&v103 + 1) = a3;
  *(void *)&long long v91 = a2;
  *((void *)&v91 + 1) = a3;
  *(void *)&long long v104 = a4;
  *((void *)&v104 + 1) = a5;
  uint64_t v92 = a4;
  v105 = v110;
  uint64_t v106 = a7;
  uint64_t v93 = a7;
  uint64_t v94 = a8;
  uint64_t v107 = a8;
  uint64_t v108 = a10;
  uint64_t v90 = a10;
  uint64_t v109 = a11;
  uint64_t v18 = type metadata accessor for AssetLoadState.FetchingCodingKeys();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v80 = v18;
  uint64_t v79 = v19;
  uint64_t v70 = sub_24EA94A60();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v81 = (char *)&v66 - v20;
  *(void *)&long long v103 = a2;
  *((void *)&v103 + 1) = a3;
  *(void *)&long long v104 = a4;
  *((void *)&v104 + 1) = a5;
  uint64_t v21 = v110;
  v105 = v110;
  uint64_t v106 = a7;
  uint64_t v107 = a8;
  uint64_t v108 = a10;
  uint64_t v109 = a11;
  uint64_t v22 = type metadata accessor for AssetLoadState.FetchedCodingKeys();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v78 = v22;
  uint64_t v77 = v23;
  uint64_t v74 = sub_24EA94A60();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v84 = (char *)&v66 - v24;
  long long v25 = v91;
  long long v103 = v91;
  uint64_t v26 = v92;
  *(void *)&long long v104 = v92;
  *((void *)&v104 + 1) = a5;
  uint64_t v28 = v93;
  uint64_t v27 = v94;
  v105 = v21;
  uint64_t v106 = v93;
  uint64_t v29 = v90;
  uint64_t v107 = v94;
  uint64_t v108 = v90;
  uint64_t v109 = a11;
  type metadata accessor for AssetLoadState.CodingKeys();
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v87 = sub_24EA94A60();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v31 = (char *)&v66 - v30;
  long long v103 = v25;
  *(void *)&long long v104 = v26;
  *((void *)&v104 + 1) = a5;
  uint64_t v75 = a5;
  v105 = v110;
  uint64_t v106 = v28;
  uint64_t v107 = v27;
  uint64_t v108 = v29;
  uint64_t v109 = v96;
  uint64_t State = type metadata accessor for AssetLoadState();
  uint64_t v96 = *(void *)(State - 8);
  uint64_t v33 = MEMORY[0x270FA5388](State);
  uint64_t v35 = (char *)&v66 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v66 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v66 - v39;
  __swift_project_boxed_opaque_existential_1(v95, v95[3]);
  v110 = v31;
  uint64_t v41 = v89;
  sub_24EA94BF0();
  if (v41) {
    goto LABEL_8;
  }
  v67 = v35;
  uint64_t v68 = v38;
  uint64_t v88 = (uint64_t)v40;
  uint64_t v89 = State;
  uint64_t v42 = v87;
  uint64_t v43 = v110;
  *(void *)&long long v101 = sub_24EA94A50();
  sub_24EA946C0();
  swift_getWitnessTable();
  *(void *)&long long v103 = sub_24EA94880();
  *((void *)&v103 + 1) = v44;
  *(void *)&long long v104 = v45;
  *((void *)&v104 + 1) = v46;
  sub_24EA94870();
  swift_getWitnessTable();
  sub_24EA94790();
  int v47 = v101;
  if (v101 == 3 || (long long v66 = v103, v101 = v103, v102 = v104, (sub_24EA947A0() & 1) == 0))
  {
    uint64_t v49 = sub_24EA94910();
    swift_allocError();
    uint64_t v51 = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269928F08);
    *uint64_t v51 = v89;
    sub_24EA94A00();
    sub_24EA94900();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v49 - 8) + 104))(v51, *MEMORY[0x263F8DCB0], v49);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v43, v42);
LABEL_8:
    uint64_t v52 = v95;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  }
  if (v47)
  {
    if (v47 == 1)
    {
      LOBYTE(v101) = 1;
      uint64_t v48 = v81;
      sub_24EA949F0();
      sub_24EA93E70();
      sub_24EA23B34(&qword_269928F10, MEMORY[0x263F07508]);
      uint64_t v57 = v67;
      uint64_t v58 = v70;
      sub_24EA94A40();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v58);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v43, v42);
      uint64_t v60 = v89;
      swift_storeEnumTagMultiPayload();
      uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 32);
      uint64_t v62 = v88;
      v61(v88, v57, v60);
    }
    else
    {
      LOBYTE(v101) = 2;
      uint64_t v56 = v82;
      sub_24EA949F0();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v56, v72);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v43, v42);
      uint64_t v62 = v88;
      uint64_t v60 = v89;
      swift_storeEnumTagMultiPayload();
      uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 32);
    }
  }
  else
  {
    LOBYTE(v101) = 0;
    uint64_t v54 = v84;
    uint64_t v55 = v42;
    sub_24EA949F0();
    sub_24EA94BC0();
    LOBYTE(v101) = 0;
    uint64_t v97 = v92;
    uint64_t v98 = v75;
    uint64_t v99 = v93;
    uint64_t v100 = v94;
    swift_getWitnessTable();
    uint64_t v59 = v74;
    sub_24EA94A40();
    sub_24EA93E40();
    swift_getTupleTypeMetadata2();
    LOBYTE(v101) = 1;
    sub_24EA23B34(&qword_269928F18, MEMORY[0x263F07490]);
    sub_24EA94A40();
    uint64_t v63 = v86;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v59);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v55);
    uint64_t v64 = v68;
    uint64_t v60 = v89;
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 32);
    uint64_t v62 = v88;
    v61(v88, v64, v60);
  }
  uint64_t v65 = v95;
  v61(v76, (char *)v62, v60);
  uint64_t v52 = v65;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
}

uint64_t type metadata accessor for AssetLoadState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EA236DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return AssetLoadState.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(char **)(a2 + 48), *(void *)(a2 + 56), *(void *)(a2 + 64), a3, *(void *)(a2 + 72), *(void *)(a2 + 80));
}

uint64_t sub_24EA23718(void *a1, void *a2)
{
  return AssetLoadState.encode(to:)(a1, a2);
}

uint64_t AssetLoadState.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v4 = sub_24EA93E70();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EA93E40();
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EA94BC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v16, v2, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = v24;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v6, v16, v4);
      sub_24EA94B80();
      sub_24EA23B34(&qword_26B1CFA00, MEMORY[0x263F07508]);
      sub_24EA94580();
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v6, v4);
    }
    else
    {
      return sub_24EA94B80();
    }
  }
  else
  {
    uint64_t v21 = &v16[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v16, v10);
    uint64_t v22 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v9, v21, v7);
    sub_24EA94B80();
    sub_24EA94BD0();
    sub_24EA23B34(qword_269928F20, MEMORY[0x263F07490]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

uint64_t sub_24EA23B34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static AssetLoadState.== infix(_:_:)(char *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v17 = sub_24EA93E70();
  uint64_t v73 = *(void *)(v17 - 8);
  uint64_t v74 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v68 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24EA93E40();
  uint64_t v71 = *(void *)(v19 - 8);
  uint64_t v72 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v63 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v69 = (char *)v62 - v22;
  uint64_t v76 = sub_24EA94BC0();
  uint64_t v70 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v24 = (char *)v62 - v23;
  v62[1] = a3;
  uint64_t v79 = a3;
  uint64_t v80 = a4;
  uint64_t v67 = a4;
  uint64_t v81 = a5;
  uint64_t v82 = a6;
  uint64_t v65 = a7;
  uint64_t v83 = a7;
  uint64_t v84 = a8;
  uint64_t v85 = a9;
  uint64_t v86 = a10;
  uint64_t v66 = a10;
  uint64_t v64 = a11;
  uint64_t v87 = a11;
  uint64_t State = type metadata accessor for AssetLoadState();
  uint64_t v26 = *(void *)(State - 8);
  uint64_t v27 = MEMORY[0x270FA5388](State);
  uint64_t v29 = (char *)v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v62 - v30;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v33 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v36 = (char *)v62 - v35;
  uint64_t v37 = (char *)v62 + *(int *)(v34 + 48) - v35;
  uint64_t v75 = v26;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v38((char *)v62 - v35, v77, State);
  v38(v37, v78, State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v38(v29, v36, State);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v41 = v73;
        uint64_t v40 = v74;
        uint64_t v42 = v68;
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v68, v37, v74);
        char v43 = sub_24EA93E50();
        uint64_t v44 = *(void (**)(char *, uint64_t))(v41 + 8);
        v44(v42, v40);
        v44(v29, v40);
        uint64_t v33 = v75;
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v74);
    }
    else if (swift_getEnumCaseMultiPayload() == 2)
    {
      char v43 = 1;
      uint64_t v33 = v75;
      goto LABEL_11;
    }
LABEL_10:
    char v43 = 0;
    uint64_t State = TupleTypeMetadata2;
    goto LABEL_11;
  }
  v38(v31, v36, State);
  uint64_t v45 = v72;
  uint64_t v46 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  int v47 = &v31[v46];
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(&v31[v46], v45);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v31, v76);
    goto LABEL_10;
  }
  uint64_t v78 = &v37[v46];
  uint64_t v49 = v70;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v24, v37, v76);
  uint64_t v50 = v71;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
  v51(v69, v47, v45);
  uint64_t v52 = v63;
  v51(v63, v78, v45);
  uint64_t v53 = v24;
  uint64_t v54 = v49;
  LOBYTE(v49) = sub_24EA94BE0();
  uint64_t v55 = *(char **)(v54 + 8);
  uint64_t v56 = v31;
  uint64_t v57 = v50;
  ((void (*)(char *, uint64_t))v55)(v56, v76);
  uint64_t v33 = v75;
  if (v49)
  {
    uint64_t v78 = v55;
    uint64_t v58 = v69;
    char v59 = sub_24EA93E20();
    uint64_t v77 = v53;
    char v43 = v59;
    uint64_t v60 = *(void (**)(char *, uint64_t))(v57 + 8);
    v60(v52, v45);
    v60(v58, v45);
    ((void (*)(char *, uint64_t))v78)(v77, v76);
  }
  else
  {
    uint64_t v61 = *(void (**)(char *, uint64_t))(v57 + 8);
    v61(v52, v45);
    v61(v69, v45);
    ((void (*)(char *, uint64_t))v55)(v53, v76);
    char v43 = 0;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t))(v33 + 8))(v36, State);
  return v43 & 1;
}

uint64_t AssetLoadState.hashValue.getter(uint64_t a1)
{
  sub_24EA94B70();
  AssetLoadState.hash(into:)((uint64_t)v3, a1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA24270(uint64_t a1, uint64_t a2)
{
  sub_24EA94B70();
  AssetLoadState.hash(into:)((uint64_t)v4, a2);
  return sub_24EA94BB0();
}

uint64_t sub_24EA242B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA242D0(char *a1, char *a2, uint64_t *a3)
{
  return static AssetLoadState.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10]) & 1;
}

uint64_t sub_24EA24314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 80);
}

uint64_t sub_24EA2431C()
{
  uint64_t result = sub_24EA94BC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EA93E40();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v4[4] = v4;
      uint64_t result = sub_24EA93E70();
      if (v3 <= 0x3F)
      {
        v4[5] = *(void *)(result - 8) + 64;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unsigned char *sub_24EA24430(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 24);
  uint64_t v39 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v39 - 8);
  uint64_t v5 = *(void *)(v3 - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(v39 - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v3 - 8) + 64);
  }
  uint64_t v7 = sub_24EA93E40();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  unint64_t v10 = ((v6 + v9 + 1) & ~(unint64_t)v9) + *(void *)(v8 + 64);
  uint64_t v11 = sub_24EA93E70();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(void *)(v12 + 64) > v10) {
    unint64_t v10 = *(void *)(*(void *)(v11 - 8) + 64);
  }
  size_t v13 = v10 + 1;
  int v14 = *(_DWORD *)(v12 + 80);
  uint64_t v15 = (*(unsigned char *)(v4 + 80) | *(unsigned char *)(v5 + 80) | v14 | v9);
  if (v15 <= 7
    && v13 <= 0x18
    && ((*(_DWORD *)(v4 + 80) | *(_DWORD *)(v5 + 80) | v14 | v9) & 0x100000) == 0)
  {
    uint64_t v20 = v5;
    uint64_t v37 = v6 + v9 + 1;
    uint64_t v38 = v7;
    unsigned int v21 = a2[v10];
    unsigned int v22 = v21 - 2;
    if (v21 < 2)
    {
      uint64_t v24 = v8;
      uint64_t v25 = v6;
      uint64_t v19 = a1;
      uint64_t v26 = v9;
      if (v21 == 1)
      {
LABEL_38:
        (*(void (**)(unsigned char *))(v12 + 16))(v19);
        v19[v10] = 1;
        return v19;
      }
    }
    else
    {
      if (v10 <= 3) {
        uint64_t v23 = v10;
      }
      else {
        uint64_t v23 = 4;
      }
      uint64_t v24 = v8;
      uint64_t v25 = v6;
      uint64_t v19 = a1;
      uint64_t v26 = v9;
      switch(v23)
      {
        case 1:
          int v27 = *a2;
          if (v10 < 4) {
            goto LABEL_26;
          }
          goto LABEL_37;
        case 2:
          int v27 = *(unsigned __int16 *)a2;
          if (v10 < 4) {
            goto LABEL_26;
          }
          goto LABEL_37;
        case 3:
          int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 >= 4) {
            goto LABEL_37;
          }
          goto LABEL_26;
        case 4:
          int v27 = *(_DWORD *)a2;
          if (v10 >= 4)
          {
LABEL_37:
            unsigned int v21 = v27 + 2;
            if (v21 != 1) {
              break;
            }
            goto LABEL_38;
          }
LABEL_26:
          unsigned int v21 = (v27 | (v22 << (8 * v10))) + 2;
LABEL_27:
          if (v21 == 1) {
            goto LABEL_38;
          }
          break;
        default:
          goto LABEL_27;
      }
    }
    if (v21)
    {
      memcpy(v19, a2, v13);
    }
    else
    {
      uint64_t v28 = ~v26;
      unsigned int v29 = a2[v25];
      unsigned int v30 = v29 - 2;
      if (v29 >= 2)
      {
        if (v25 <= 3) {
          uint64_t v31 = v25;
        }
        else {
          uint64_t v31 = 4;
        }
        switch(v31)
        {
          case 1:
            int v32 = *a2;
            goto LABEL_42;
          case 2:
            int v32 = *(unsigned __int16 *)a2;
            goto LABEL_42;
          case 3:
            int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_42;
          case 4:
            int v32 = *(_DWORD *)a2;
LABEL_42:
            int v33 = (v32 | (v30 << (8 * v25))) + 2;
            unsigned int v29 = v32 + 2;
            if (v25 < 4) {
              unsigned int v29 = v33;
            }
            break;
          default:
            break;
        }
      }
      BOOL v34 = v29 == 1;
      if (v29 == 1) {
        uint64_t v35 = v20;
      }
      else {
        uint64_t v35 = v4;
      }
      (*(void (**)(unsigned char *))(v35 + 16))(v19);
      v19[v25] = v34;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16))((unint64_t)&v19[v37] & v28, (unint64_t)&a2[v37] & v28, v38);
      v19[v10] = 0;
    }
  }
  else
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v19 = (unsigned char *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return v19;
}

uint64_t sub_24EA24830(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  if (*(void *)(v6 + 64) <= *(void *)(v5 + 64)) {
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  uint64_t v8 = sub_24EA93E40();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v10 = v7 + v9 + 1;
  unint64_t v11 = (v10 & ~v9) + *(void *)(v30 + 64);
  uint64_t result = sub_24EA93E70();
  uint64_t v13 = *(void *)(result - 8);
  unint64_t v14 = *(void *)(v13 + 64);
  if (v14 <= v11) {
    unint64_t v14 = v11;
  }
  unsigned int v15 = a1[v14];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a1;
        goto LABEL_15;
      case 2:
        int v18 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v18 = *(_DWORD *)a1;
LABEL_15:
        int v19 = (v18 | (v16 << (8 * v14))) + 2;
        unsigned int v15 = v18 + 2;
        if (v14 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    uint64_t v25 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v13 + 8);
    return v25(a1, result);
  }
  else if (!v15)
  {
    uint64_t v20 = ~v9;
    unsigned int v21 = a1[v7];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v23 = v7;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a1;
          goto LABEL_32;
        case 2:
          int v24 = *(unsigned __int16 *)a1;
          goto LABEL_32;
        case 3:
          int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_32;
        case 4:
          int v24 = *(_DWORD *)a1;
LABEL_32:
          int v26 = (v24 | (v22 << (8 * v7))) + 2;
          unsigned int v21 = v24 + 2;
          if (v7 < 4) {
            unsigned int v21 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1) {
      uint64_t v27 = v6;
    }
    else {
      uint64_t v27 = v5;
    }
    if (v21 == 1) {
      uint64_t v28 = v4;
    }
    else {
      uint64_t v28 = v3;
    }
    (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v27 + 8))(a1, v28, v13);
    unsigned int v29 = *(uint64_t (**)(unint64_t, uint64_t))(v30 + 8);
    return v29((unint64_t)&a1[v10] & v20, v8);
  }
  return result;
}

unsigned char *sub_24EA24BA0(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v29 = *(void *)(v6 - 8);
  if (*(void *)(v29 + 64) <= *(void *)(v30 + 64)) {
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v8 = sub_24EA93E40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10 + 1;
  unint64_t v12 = (v11 & ~v10) + *(void *)(v9 + 64);
  uint64_t v13 = sub_24EA93E70();
  if (*(void *)(*(void *)(v13 - 8) + 64) > v12) {
    unint64_t v12 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  unsigned int v14 = a2[v12];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v12 <= 3) {
      uint64_t v16 = v12;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v12))) + 2;
        unsigned int v14 = v17 + 2;
        if (v12 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    a1[v12] = 1;
  }
  else if (v14)
  {
    memcpy(a1, a2, v12 + 1);
  }
  else
  {
    uint64_t v28 = ~v10;
    unsigned int v19 = a2[v7];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v21 = v7;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          goto LABEL_30;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v22 = *(_DWORD *)a2;
LABEL_30:
          int v23 = (v22 | (v20 << (8 * v7))) + 2;
          unsigned int v19 = v22 + 2;
          if (v7 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    BOOL v24 = v19 == 1;
    uint64_t v25 = v30;
    if (v19 == 1)
    {
      uint64_t v25 = v29;
      uint64_t v26 = v6;
    }
    else
    {
      uint64_t v26 = v5;
    }
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v25 + 16))(a1, a2, v26);
    a1[v7] = v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v28, (unint64_t)&a2[v11] & v28, v8);
    a1[v12] = 0;
  }
  return a1;
}

unsigned __int8 *sub_24EA24F00(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v41 = *(void *)(a3 + 16);
    uint64_t v39 = *(void *)(v41 - 8);
    uint64_t v38 = *(void *)(v5 - 8);
    if (*(void *)(v38 + 64) <= *(void *)(v39 + 64)) {
      uint64_t v6 = *(void *)(*(void *)(v41 - 8) + 64);
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    uint64_t v40 = sub_24EA93E40();
    uint64_t v7 = *(void *)(v40 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v6 + v8 + 1;
    unint64_t v10 = (v9 & ~v8) + *(void *)(v7 + 64);
    uint64_t v11 = sub_24EA93E70();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(void *)(v12 + 64) > v10) {
      unint64_t v10 = *(void *)(*(void *)(v11 - 8) + 64);
    }
    unsigned int v13 = a1[v10];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v15 = v10;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_17;
        case 4:
          int v16 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_17:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v10))) + 2;
          else {
LABEL_19:
          }
            unsigned int v13 = v16 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(a1, v11);
    }
    else if (!v13)
    {
      unsigned int v18 = a1[v6];
      unsigned int v19 = v18 - 2;
      if (v18 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v20 = v6;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            goto LABEL_32;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            goto LABEL_32;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_32;
          case 4:
            int v21 = *(_DWORD *)a1;
LABEL_32:
            int v22 = (v21 | (v19 << (8 * v6))) + 2;
            unsigned int v18 = v21 + 2;
            if (v6 < 4) {
              unsigned int v18 = v22;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v23 = v39;
      if (v18 == 1)
      {
        uint64_t v23 = v38;
        uint64_t v24 = v5;
      }
      else
      {
        uint64_t v24 = v41;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(a1, v24);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v9] & v17, v40);
    }
    unsigned int v25 = a2[v10];
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v27 = v10;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *a2;
          if (v10 >= 4) {
            goto LABEL_59;
          }
          goto LABEL_48;
        case 2:
          int v28 = *(unsigned __int16 *)a2;
          if (v10 < 4) {
            goto LABEL_48;
          }
          goto LABEL_59;
        case 3:
          int v28 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 >= 4) {
            goto LABEL_59;
          }
          goto LABEL_48;
        case 4:
          int v28 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_48:
            unsigned int v25 = (v28 | (v26 << (8 * v10))) + 2;
            break;
          }
LABEL_59:
          unsigned int v25 = v28 + 2;
          if (v25 == 1) {
            goto LABEL_60;
          }
          goto LABEL_50;
        default:
          break;
      }
    }
    if (v25 == 1)
    {
LABEL_60:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 16))(a1, a2, v11);
      a1[v10] = 1;
    }
    else
    {
LABEL_50:
      if (v25)
      {
        memcpy(a1, a2, v10 + 1);
      }
      else
      {
        unsigned int v29 = a2[v6];
        unsigned int v30 = v29 - 2;
        if (v29 >= 2)
        {
          if (v6 <= 3) {
            uint64_t v31 = v6;
          }
          else {
            uint64_t v31 = 4;
          }
          switch(v31)
          {
            case 1:
              int v32 = *a2;
              goto LABEL_64;
            case 2:
              int v32 = *(unsigned __int16 *)a2;
              goto LABEL_64;
            case 3:
              int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_64;
            case 4:
              int v32 = *(_DWORD *)a2;
LABEL_64:
              int v33 = (v32 | (v30 << (8 * v6))) + 2;
              unsigned int v29 = v32 + 2;
              if (v6 < 4) {
                unsigned int v29 = v33;
              }
              break;
            default:
              break;
          }
        }
        BOOL v34 = v29 == 1;
        uint64_t v35 = v39;
        if (v29 == 1)
        {
          uint64_t v35 = v38;
          uint64_t v36 = v5;
        }
        else
        {
          uint64_t v36 = v41;
        }
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 16))(a1, a2, v36);
        a1[v6] = v34;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((unint64_t)&a1[v9] & v17, (unint64_t)&a2[v9] & v17, v40);
        a1[v10] = 0;
      }
    }
  }
  return a1;
}

unsigned char *sub_24EA2541C(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v29 = *(void *)(v6 - 8);
  if (*(void *)(v29 + 64) <= *(void *)(v30 + 64)) {
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v8 = sub_24EA93E40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10 + 1;
  unint64_t v12 = (v11 & ~v10) + *(void *)(v9 + 64);
  uint64_t v13 = sub_24EA93E70();
  if (*(void *)(*(void *)(v13 - 8) + 64) > v12) {
    unint64_t v12 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  unsigned int v14 = a2[v12];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v12 <= 3) {
      uint64_t v16 = v12;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v12))) + 2;
        unsigned int v14 = v17 + 2;
        if (v12 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    a1[v12] = 1;
  }
  else if (v14)
  {
    memcpy(a1, a2, v12 + 1);
  }
  else
  {
    uint64_t v28 = ~v10;
    unsigned int v19 = a2[v7];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v21 = v7;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          goto LABEL_30;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v22 = *(_DWORD *)a2;
LABEL_30:
          int v23 = (v22 | (v20 << (8 * v7))) + 2;
          unsigned int v19 = v22 + 2;
          if (v7 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    BOOL v24 = v19 == 1;
    uint64_t v25 = v30;
    if (v19 == 1)
    {
      uint64_t v25 = v29;
      uint64_t v26 = v6;
    }
    else
    {
      uint64_t v26 = v5;
    }
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v25 + 32))(a1, a2, v26);
    a1[v7] = v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))((unint64_t)&a1[v11] & v28, (unint64_t)&a2[v11] & v28, v8);
    a1[v12] = 0;
  }
  return a1;
}

unsigned __int8 *sub_24EA2577C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v41 = *(void *)(a3 + 16);
    uint64_t v39 = *(void *)(v41 - 8);
    uint64_t v38 = *(void *)(v5 - 8);
    if (*(void *)(v38 + 64) <= *(void *)(v39 + 64)) {
      uint64_t v6 = *(void *)(*(void *)(v41 - 8) + 64);
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    uint64_t v40 = sub_24EA93E40();
    uint64_t v7 = *(void *)(v40 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v6 + v8 + 1;
    unint64_t v10 = (v9 & ~v8) + *(void *)(v7 + 64);
    uint64_t v11 = sub_24EA93E70();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(void *)(v12 + 64) > v10) {
      unint64_t v10 = *(void *)(*(void *)(v11 - 8) + 64);
    }
    unsigned int v13 = a1[v10];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v15 = v10;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          if (v10 < 4) {
            goto LABEL_17;
          }
          goto LABEL_19;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_17;
        case 4:
          int v16 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_17:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v10))) + 2;
          else {
LABEL_19:
          }
            unsigned int v13 = v16 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(a1, v11);
    }
    else if (!v13)
    {
      unsigned int v18 = a1[v6];
      unsigned int v19 = v18 - 2;
      if (v18 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v20 = v6;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            goto LABEL_32;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            goto LABEL_32;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_32;
          case 4:
            int v21 = *(_DWORD *)a1;
LABEL_32:
            int v22 = (v21 | (v19 << (8 * v6))) + 2;
            unsigned int v18 = v21 + 2;
            if (v6 < 4) {
              unsigned int v18 = v22;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v23 = v39;
      if (v18 == 1)
      {
        uint64_t v23 = v38;
        uint64_t v24 = v5;
      }
      else
      {
        uint64_t v24 = v41;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(a1, v24);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v9] & v17, v40);
    }
    unsigned int v25 = a2[v10];
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v27 = v10;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *a2;
          if (v10 >= 4) {
            goto LABEL_59;
          }
          goto LABEL_48;
        case 2:
          int v28 = *(unsigned __int16 *)a2;
          if (v10 < 4) {
            goto LABEL_48;
          }
          goto LABEL_59;
        case 3:
          int v28 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 >= 4) {
            goto LABEL_59;
          }
          goto LABEL_48;
        case 4:
          int v28 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_48:
            unsigned int v25 = (v28 | (v26 << (8 * v10))) + 2;
            break;
          }
LABEL_59:
          unsigned int v25 = v28 + 2;
          if (v25 == 1) {
            goto LABEL_60;
          }
          goto LABEL_50;
        default:
          break;
      }
    }
    if (v25 == 1)
    {
LABEL_60:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(a1, a2, v11);
      a1[v10] = 1;
    }
    else
    {
LABEL_50:
      if (v25)
      {
        memcpy(a1, a2, v10 + 1);
      }
      else
      {
        unsigned int v29 = a2[v6];
        unsigned int v30 = v29 - 2;
        if (v29 >= 2)
        {
          if (v6 <= 3) {
            uint64_t v31 = v6;
          }
          else {
            uint64_t v31 = 4;
          }
          switch(v31)
          {
            case 1:
              int v32 = *a2;
              goto LABEL_64;
            case 2:
              int v32 = *(unsigned __int16 *)a2;
              goto LABEL_64;
            case 3:
              int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_64;
            case 4:
              int v32 = *(_DWORD *)a2;
LABEL_64:
              int v33 = (v32 | (v30 << (8 * v6))) + 2;
              unsigned int v29 = v32 + 2;
              if (v6 < 4) {
                unsigned int v29 = v33;
              }
              break;
            default:
              break;
          }
        }
        BOOL v34 = v29 == 1;
        uint64_t v35 = v39;
        if (v29 == 1)
        {
          uint64_t v35 = v38;
          uint64_t v36 = v5;
        }
        else
        {
          uint64_t v36 = v41;
        }
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 32))(a1, a2, v36);
        a1[v6] = v34;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))((unint64_t)&a1[v9] & v17, (unint64_t)&a2[v9] & v17, v40);
        a1[v10] = 0;
      }
    }
  }
  return a1;
}

uint64_t sub_24EA25C98(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8)
                                                                                + 64))
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  uint64_t v6 = *(void *)(sub_24EA93E40() - 8);
  unint64_t v7 = ((v5 + *(unsigned __int8 *)(v6 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  unint64_t v8 = *(void *)(*(void *)(sub_24EA93E70() - 8) + 64);
  if (v8 <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_26;
  }
  unint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 253) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v14 < 2)
    {
LABEL_26:
      unsigned int v16 = *((unsigned __int8 *)a1 + v9);
      if (v16 >= 3) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_26;
  }
LABEL_18:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 254;
}

void sub_24EA25E84(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) <= *(void *)(*(void *)(*(void *)(a4 + 16) - 8)
                                                                                + 64))
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  else {
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  uint64_t v8 = *(void *)(sub_24EA93E40() - 8);
  unint64_t v9 = ((v7 + *(unsigned __int8 *)(v8 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(void *)(v8 + 64);
  unint64_t v10 = *(void *)(*(void *)(sub_24EA93E70() - 8) + 64);
  if (v10 <= v9) {
    unint64_t v10 = v9;
  }
  size_t v11 = v10 + 1;
  if (a3 < 0xFE)
  {
    int v12 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << (8 * v11)) - 253) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v13 = a2 - 254;
    if (v11 < 4)
    {
      int v14 = (v13 >> (8 * v11)) + 1;
      if (v10 != -1)
      {
        int v16 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v11] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v11] = v14;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x24EA260E4);
      case 4:
        *(_DWORD *)&a1[v11] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v11] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v10] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24EA2610C(unsigned __int8 *a1, uint64_t a2)
{
  if (*(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64) <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8)
                                                                                + 64))
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  else {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  }
  uint64_t v4 = *(void *)(sub_24EA93E40() - 8);
  unint64_t v5 = ((v3 + *(unsigned __int8 *)(v4 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + *(void *)(v4 + 64);
  unint64_t v6 = *(void *)(*(void *)(sub_24EA93E70() - 8) + 64);
  if (v6 <= v5) {
    unint64_t v6 = v5;
  }
  uint64_t result = a1[v6];
  if (result >= 2)
  {
    if (v6 <= 3) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_15;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v10 = (v9 | ((result - 2) << (8 * v6))) + 2;
        unsigned int v11 = v9 + 2;
        if (v6 >= 4) {
          uint64_t result = v11;
        }
        else {
          uint64_t result = v10;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24EA2626C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8)
                                                                                + 64))
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  uint64_t v6 = *(void *)(sub_24EA93E40() - 8);
  size_t v7 = ((v5 + *(unsigned __int8 *)(v6 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  size_t v8 = *(void *)(*(void *)(sub_24EA93E70() - 8) + 64);
  if (v8 > v7) {
    size_t v7 = v8;
  }
  if (a2 > 1)
  {
    unsigned int v9 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v10 = v9 >> (8 * v7);
      int v11 = v9 & ~(-1 << (8 * v7));
      a1[v7] = v10 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
  }
  else
  {
    a1[v7] = a2;
  }
}

uint64_t sub_24EA263D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t getEnumTagSinglePayload for ImageAssetState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24EA26470(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA2653CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EA26564(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

unsigned char *sub_24EA2656C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA26638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicImageAssetAction.ViewSizeChangedCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_24EA266B4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EA26750);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EA26778()
{
  return 0;
}

uint64_t sub_24EA26780()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA2679C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA267B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA267D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA267F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA2680C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA26828()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA26844()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA26860()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA2687C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA26898()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EA268B4()
{
  return 3;
}

uint64_t sub_24EA268BC()
{
  return 2;
}

uint64_t sub_24EA268C4()
{
  return 0x65636E6174736E69;
}

uint64_t sub_24EA268DC()
{
  return sub_24EA21C18();
}

unint64_t DynamicPredicateBooleanValue.makePredicateExpression<A>(using:)@<X0>(uint64_t a1@<X8>)
{
  char v2 = sub_24EA94020();
  *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_269929128);
  unint64_t result = sub_24EA26940();
  *(void *)(a1 + 32) = result;
  *(unsigned char *)a1 = v2 & 1;
  return result;
}

unint64_t sub_24EA26940()
{
  unint64_t result = qword_269929130;
  if (!qword_269929130)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929130);
  }
  return result;
}

unint64_t sub_24EA2699C@<X0>(uint64_t a1@<X8>)
{
  return DynamicPredicateBooleanValue.makePredicateExpression<A>(using:)(a1);
}

uint64_t ImageAssetState.loadStateBySize.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImageAssetState.loadStateBySize.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*ImageAssetState.loadStateBySize.modify())()
{
  return nullsub_1;
}

uint64_t ImageAssetState.init(displayScale:imageAsset:loadStateBySize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = a3 + *(int *)(type metadata accessor for ImageAssetState() + 24);
  uint64_t v9 = type metadata accessor for ImageAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(double *)(a3 + 8) = a4;
  uint64_t result = sub_24EA26AF4(a1, v8);
  *(void *)a3 = a2;
  return result;
}

uint64_t type metadata accessor for ImageAssetState()
{
  uint64_t result = qword_26B1CFAE0;
  if (!qword_26B1CFAE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EA26AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA26B5C(char a1)
{
  return qword_24EA95CD0[a1];
}

BOOL sub_24EA26B7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EA26B90()
{
  return sub_24EA26B5C(*v0);
}

uint64_t sub_24EA26B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA2AC4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EA26BC0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24EA26BCC(uint64_t a1)
{
  unint64_t v2 = sub_24EA26E60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA26C08(uint64_t a1)
{
  unint64_t v2 = sub_24EA26E60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAssetState.encode(to:)(void *a1)
{
  int v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929138);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA26E60();
  sub_24EA94C00();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929148);
  sub_24EA26EB4();
  sub_24EA94AB0();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    HIBYTE(v10) = 1;
    sub_24EA26F7C();
    sub_24EA94AB0();
    type metadata accessor for ImageAssetState();
    LOBYTE(v11) = 2;
    type metadata accessor for ImageAsset();
    sub_24EA2AEE4(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
    sub_24EA94A80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EA26E60()
{
  unint64_t result = qword_269929140;
  if (!qword_269929140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929140);
  }
  return result;
}

unint64_t sub_24EA26EB4()
{
  unint64_t result = qword_269929150;
  if (!qword_269929150)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929148);
    sub_24EA2AEE4(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
    sub_24EA2744C(&qword_269929158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929150);
  }
  return result;
}

unint64_t sub_24EA26F7C()
{
  unint64_t result = qword_269929160;
  if (!qword_269929160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929160);
  }
  return result;
}

uint64_t ImageAssetState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929168);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ImageAssetState();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  unsigned int v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (uint64_t)v13 + *(int *)(v11 + 32);
  uint64_t v15 = type metadata accessor for ImageAsset();
  int v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v25 = v14;
  v16(v14, 1, 1, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA26E60();
  sub_24EA94BF0();
  if (v2)
  {
    uint64_t v19 = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_24EA21258(v19, &qword_26B1CFAB8);
  }
  else
  {
    uint64_t v17 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929148);
    char v26 = 0;
    sub_24EA27384();
    uint64_t v18 = v24;
    sub_24EA94A40();
    *unsigned int v13 = v27;
    char v26 = 1;
    sub_24EA27494();
    sub_24EA94A40();
    v13[1] = v27;
    LOBYTE(v27) = 2;
    sub_24EA2AEE4(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
    sub_24EA94A10();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
    sub_24EA26AF4((uint64_t)v6, v25);
    sub_24EA2ADC4((uint64_t)v13, v22, (uint64_t (*)(void))type metadata accessor for ImageAssetState);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_24EA29EC8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ImageAssetState);
  }
}

unint64_t sub_24EA27384()
{
  unint64_t result = qword_269929170;
  if (!qword_269929170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929148);
    sub_24EA2AEE4(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
    sub_24EA2744C(&qword_269929180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929170);
  }
  return result;
}

uint64_t sub_24EA2744C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFC70);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EA27494()
{
  unint64_t result = qword_269929188;
  if (!qword_269929188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929188);
  }
  return result;
}

uint64_t sub_24EA274E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageAssetState.init(from:)(a1, a2);
}

uint64_t sub_24EA27500(void *a1)
{
  return ImageAssetState.encode(to:)(a1);
}

uint64_t ImageAssetState.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_24EA27C38(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EA94BA0();
  type metadata accessor for ImageAssetState();
  return sub_24EA27728();
}

uint64_t ImageAssetState.hashValue.getter()
{
  sub_24EA94B70();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_24EA27C38(v3, v1);
  swift_bridgeObjectRelease();
  sub_24EA94BA0();
  type metadata accessor for ImageAssetState();
  sub_24EA27728();
  return sub_24EA94BB0();
}

uint64_t sub_24EA27620(long long *a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_24EA27C38(a1, v3);
  swift_bridgeObjectRelease();
  sub_24EA94BA0();
  return sub_24EA27728();
}

uint64_t sub_24EA2769C()
{
  sub_24EA94B70();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_24EA27C38(v3, v1);
  swift_bridgeObjectRelease();
  sub_24EA94BA0();
  sub_24EA27728();
  return sub_24EA94BB0();
}

uint64_t sub_24EA27728()
{
  uint64_t v1 = sub_24EA93DE0();
  uint64_t v28 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v25 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v27 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EA93EB0();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ImageAsset();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v0, (uint64_t)v17, &qword_26B1CFAB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1) {
    return sub_24EA94B90();
  }
  sub_24EA2AE2C((uint64_t)v17, (uint64_t)v14);
  sub_24EA94B90();
  sub_24EA1E564((uint64_t)v14, (uint64_t)v10, &qword_26B1CFD40);
  uint64_t v19 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v5) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v7, v10, v5);
    sub_24EA94B90();
    sub_24EA2AEE4(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  uint64_t v21 = v28;
  uint64_t v20 = v29;
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  uint64_t v22 = v27;
  sub_24EA1E564((uint64_t)&v14[*(int *)(v11 + 28)], v27, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v22, 1, v20) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    uint64_t v23 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v25, v22, v20);
    sub_24EA94B90();
    sub_24EA2AEE4(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  return sub_24EA29EC8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageAsset);
}

uint64_t sub_24EA27C38(long long *a1, uint64_t a2)
{
  uint64_t v70 = sub_24EA93E70();
  uint64_t v4 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_24EA93E40();
  uint64_t v6 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
  MEMORY[0x270FA5388](v66);
  uint64_t v65 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v72 = *(void *)(v75 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v75);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v77 = (uint64_t)&v58 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEC0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v58 - v17;
  uint64_t v19 = *(void *)(a2 + 64);
  uint64_t v60 = a2 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  uint64_t v64 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v63 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v61 = (void (**)(char *, uint64_t))(v6 + 8);
  int64_t v71 = (unint64_t)(v20 + 63) >> 6;
  int64_t v59 = v71 - 1;
  uint64_t v73 = a2;
  uint64_t v23 = (uint64_t)v11;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  int64_t v76 = 0;
  uint64_t v26 = (uint64_t *)&unk_26B1CFEB8;
  for (i = v16; ; uint64_t v16 = i)
  {
    if (v22)
    {
      unint64_t v27 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v28 = v27 | (v76 << 6);
      goto LABEL_8;
    }
    int64_t v34 = v76 + 1;
    if (__OFADD__(v76, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v34 < v71)
    {
      unint64_t v35 = *(void *)(v60 + 8 * v34);
      if (v35) {
        goto LABEL_12;
      }
      int64_t v36 = v76 + 2;
      ++v76;
      if (v34 + 1 < v71)
      {
        unint64_t v35 = *(void *)(v60 + 8 * v36);
        if (v35)
        {
          ++v34;
          goto LABEL_12;
        }
        int64_t v37 = v34 + 2;
        int64_t v76 = v34 + 1;
        if (v34 + 2 < v71) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(v26);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v16, 1, 1, v38);
    unint64_t v22 = 0;
LABEL_25:
    sub_24EA1E61C((uint64_t)v16, (uint64_t)v18, &qword_26B1CFEC0);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v18, 1, v39) == 1)
    {
      swift_release();
      return sub_24EA94B80();
    }
    uint64_t v40 = v26;
    uint64_t v41 = v77;
    sub_24EA1E61C((uint64_t)&v18[*(int *)(v39 + 48)], v77, &qword_26B1CFC70);
    uint64_t v42 = *((void *)a1 + 8);
    long long v43 = a1[1];
    long long v78 = *a1;
    long long v79 = v43;
    long long v44 = a1[3];
    long long v80 = a1[2];
    long long v81 = v44;
    uint64_t v82 = v42;
    sub_24EA94BA0();
    sub_24EA94BA0();
    sub_24EA1E564(v41, v23, &qword_26B1CFC70);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v46 = a1;
        uint64_t v47 = v25;
        uint64_t v48 = v69;
        uint64_t v49 = v70;
        (*v64)(v69, v23, v70);
        sub_24EA94B80();
        sub_24EA2AEE4(&qword_26B1CFA00, MEMORY[0x263F07508]);
        sub_24EA94580();
        uint64_t v50 = v48;
        uint64_t v25 = v47;
        a1 = v46;
        (*v63)(v50, v49);
      }
      else
      {
        sub_24EA94B80();
      }
    }
    else
    {
      uint64_t v51 = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68) + 48);
      uint64_t v52 = v65;
      uint64_t v53 = v23;
      sub_24EA1E61C(v23, v65, &qword_26B1CFF60);
      uint64_t v54 = v67;
      uint64_t v55 = v25;
      uint64_t v56 = v68;
      (*v62)(v67, v51, v68);
      sub_24EA94B80();
      sub_24EA2AEE4(&qword_2699291C0, (void (*)(uint64_t))type metadata accessor for FetchedImageAsset);
      sub_24EA2AE90();
      sub_24EA94BD0();
      sub_24EA2AEE4(qword_269928F20, MEMORY[0x263F07490]);
      sub_24EA94580();
      uint64_t v57 = v56;
      uint64_t v25 = v55;
      (*v61)(v54, v57);
      uint64_t v23 = v53;
      sub_24EA21258(v52, &qword_26B1CFF60);
    }
    uint64_t v26 = v40;
    sub_24EA21258(v77, &qword_26B1CFC70);
    uint64_t result = sub_24EA94BB0();
    v25 ^= result;
  }
  unint64_t v35 = *(void *)(v60 + 8 * v37);
  if (v35)
  {
    v34 += 2;
LABEL_12:
    unint64_t v22 = (v35 - 1) & v35;
    unint64_t v28 = __clz(__rbit64(v35)) + (v34 << 6);
    int64_t v76 = v34;
LABEL_8:
    uint64_t v29 = (uint64_t *)(*(void *)(v73 + 48) + 16 * v28);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v32 = *(void *)(v73 + 56) + *(void *)(v72 + 72) * v28;
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(v26);
    sub_24EA1E564(v32, (uint64_t)v16 + *(int *)(v33 + 48), &qword_26B1CFC70);
    *uint64_t v16 = v30;
    v16[1] = v31;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v16, 0, 1, v33);
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v34 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v34 >= v71)
    {
      int64_t v76 = v59;
      goto LABEL_24;
    }
    unint64_t v35 = *(void *)(v60 + 8 * v34);
    ++v37;
    if (v35) {
      goto LABEL_12;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_24EA28460(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = sub_24EA93DE0();
  uint64_t v4 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v56 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EA93EB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v55 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ImageAsset();
  uint64_t v58 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v65 = (uint64_t)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v64 = (uint64_t)&v49 - v21;
  uint64_t v22 = *(void *)(a2 + 64);
  uint64_t v50 = a2 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  uint64_t v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v54 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v53 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v60 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v52 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v51 = (void (**)(char *, uint64_t))(v4 + 8);
  int64_t v57 = (unint64_t)(v23 + 63) >> 6;
  int64_t v49 = v57 - 1;
  uint64_t v59 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  int64_t v66 = 0;
  uint64_t v63 = v17;
  while (1)
  {
    uint64_t v68 = v27;
    if (v25)
    {
      uint64_t v67 = (v25 - 1) & v25;
      unint64_t v29 = __clz(__rbit64(v25)) | (v66 << 6);
      goto LABEL_8;
    }
    int64_t v34 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v31 = v65;
    if (v34 < v57)
    {
      unint64_t v35 = *(void *)(v50 + 8 * v34);
      if (v35) {
        goto LABEL_12;
      }
      int64_t v36 = v66 + 2;
      ++v66;
      if (v34 + 1 < v57)
      {
        unint64_t v35 = *(void *)(v50 + 8 * v36);
        if (v35)
        {
          ++v34;
          goto LABEL_12;
        }
        int64_t v37 = v34 + 2;
        int64_t v66 = v34 + 1;
        if (v34 + 2 < v57) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v31, 1, 1, v38);
    uint64_t v67 = 0;
LABEL_25:
    uint64_t v39 = v64;
    sub_24EA1E61C(v31, v64, &qword_2699291B0);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40) == 1)
    {
      swift_release();
      return sub_24EA94B80();
    }
    uint64_t v41 = *(int *)(v40 + 48);
    sub_24EA2AE2C(v39, (uint64_t)v17);
    uint64_t v42 = *(void *)(v39 + v41);
    uint64_t v43 = *(void *)(a1 + 64);
    long long v44 = *(_OWORD *)(a1 + 16);
    v69[0] = *(_OWORD *)a1;
    v69[1] = v44;
    long long v45 = *(_OWORD *)(a1 + 48);
    v69[2] = *(_OWORD *)(a1 + 32);
    v69[3] = v45;
    uint64_t v70 = v43;
    sub_24EA1E564((uint64_t)v17, (uint64_t)v14, &qword_26B1CFD40);
    if ((*v61)(v14, 1, v9) == 1)
    {
      sub_24EA94B90();
    }
    else
    {
      uint64_t v46 = v55;
      (*v54)(v55, v14, v9);
      sub_24EA94B90();
      sub_24EA2AEE4(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
      sub_24EA94580();
      uint64_t v47 = v46;
      uint64_t v17 = v63;
      (*v53)(v47, v9);
    }
    sub_24EA94610();
    sub_24EA94610();
    swift_bridgeObjectRelease();
    sub_24EA1E564((uint64_t)&v17[*(int *)(v15 + 28)], (uint64_t)v8, &qword_26B1CF9E8);
    uint64_t v48 = v62;
    if ((*v60)(v8, 1, v62) == 1)
    {
      sub_24EA94B90();
    }
    else
    {
      unint64_t v28 = v56;
      (*v52)(v56, v8, v48);
      sub_24EA94B90();
      sub_24EA2AEE4(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
      sub_24EA94580();
      uint64_t v17 = v63;
      (*v51)(v28, v48);
    }
    unint64_t v25 = v67;
    sub_24EA29EC8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    sub_24EA27C38(v69, v42);
    swift_bridgeObjectRelease();
    uint64_t result = sub_24EA94BB0();
    uint64_t v27 = result ^ v68;
  }
  unint64_t v35 = *(void *)(v50 + 8 * v37);
  if (v35)
  {
    v34 += 2;
LABEL_12:
    int64_t v66 = v34;
    uint64_t v67 = (v35 - 1) & v35;
    unint64_t v29 = __clz(__rbit64(v35)) + (v34 << 6);
LABEL_8:
    uint64_t v30 = v59;
    uint64_t v31 = v65;
    sub_24EA2ADC4(*(void *)(v59 + 48) + *(void *)(v58 + 72) * v29, v65, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v32 = *(void *)(*(void *)(v30 + 56) + 8 * v29);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B8);
    *(void *)(v31 + *(int *)(v33 + 48)) = v32;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v34 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v34 >= v57)
    {
      int64_t v66 = v49;
      goto LABEL_24;
    }
    unint64_t v35 = *(void *)(v50 + 8 * v34);
    ++v37;
    if (v35) {
      goto LABEL_12;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

BOOL _s12FitnessAsset05ImageB5StateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageAsset();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAC8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v27 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v27 - v18;
  if ((sub_24EA47324(*(void *)a1, *(void *)a2) & 1) == 0 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  unint64_t v28 = v7;
  uint64_t v20 = v5;
  uint64_t v21 = type metadata accessor for ImageAssetState();
  sub_24EA1E564(a1 + *(int *)(v21 + 24), (uint64_t)v19, &qword_26B1CFAB8);
  sub_24EA1E564(a2 + *(int *)(v21 + 24), (uint64_t)v17, &qword_26B1CFAB8);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_24EA1E564((uint64_t)v19, (uint64_t)v10, &qword_26B1CFAB8);
  sub_24EA1E564((uint64_t)v17, v22, &qword_26B1CFAB8);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_24EA21258((uint64_t)v17, &qword_26B1CFAB8);
    sub_24EA21258((uint64_t)v19, &qword_26B1CFAB8);
    if (v23(v22, 1, v4) == 1)
    {
      sub_24EA21258((uint64_t)v10, &qword_26B1CFAB8);
      return 1;
    }
    goto LABEL_8;
  }
  sub_24EA1E564((uint64_t)v10, (uint64_t)v14, &qword_26B1CFAB8);
  if (v23(v22, 1, v4) == 1)
  {
    sub_24EA21258((uint64_t)v17, &qword_26B1CFAB8);
    sub_24EA21258((uint64_t)v19, &qword_26B1CFAB8);
    sub_24EA29EC8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageAsset);
LABEL_8:
    sub_24EA21258((uint64_t)v10, &qword_26B1CFAC8);
    return 0;
  }
  uint64_t v24 = (uint64_t)v28;
  sub_24EA2AE2C(v22, (uint64_t)v28);
  char v25 = static ImageAsset.== infix(_:_:)(v14, v24);
  sub_24EA29EC8(v24, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  sub_24EA21258((uint64_t)v17, &qword_26B1CFAB8);
  sub_24EA21258((uint64_t)v19, &qword_26B1CFAB8);
  sub_24EA29EC8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  sub_24EA21258((uint64_t)v10, &qword_26B1CFAB8);
  return (v25 & 1) != 0;
}

uint64_t sub_24EA29070()
{
  return sub_24EA2AEE4(&qword_26B1CFAD8, (void (*)(uint64_t))type metadata accessor for ImageAssetState);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageAssetState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = (int *)type metadata accessor for ImageAsset();
    uint64_t v10 = *((void *)v9 - 1);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, int *))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_24EA93EB0();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v7, v8, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
      }
      uint64_t v16 = v9[5];
      uint64_t v17 = &v7[v16];
      uint64_t v18 = &v8[v16];
      uint64_t v19 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v19;
      v7[v9[6]] = v8[v9[6]];
      uint64_t v20 = v9[7];
      __dst = &v7[v20];
      uint64_t v21 = &v8[v20];
      uint64_t v22 = sub_24EA93DE0();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      if (v24(v21, 1, v22))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for ImageAssetState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ImageAsset();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_24EA93EB0();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v4 + *(int *)(v5 + 28);
    uint64_t v10 = sub_24EA93DE0();
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10);
    if (!result)
    {
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
      return v11(v9, v10);
    }
  }
  return result;
}

void *initializeWithCopy for ImageAssetState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = (int *)type metadata accessor for ImageAsset();
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, int *))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_24EA93EB0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(v6, v7, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v6, v7, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    }
    uint64_t v15 = v8[5];
    uint64_t v16 = &v6[v15];
    uint64_t v17 = &v7[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    v6[v8[6]] = v7[v8[6]];
    uint64_t v19 = v8[7];
    __dst = &v6[v19];
    uint64_t v20 = &v7[v19];
    uint64_t v21 = sub_24EA93DE0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for ImageAssetState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for ImageAsset();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_24EA29EC8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      goto LABEL_7;
    }
    uint64_t v20 = sub_24EA93EB0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48);
    int v23 = v22(v7, 1, v20);
    int v24 = v22(v8, 1, v20);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16))(v7, v8, v20);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v20);
LABEL_21:
        uint64_t v36 = v9[5];
        int64_t v37 = &v7[v36];
        uint64_t v38 = &v8[v36];
        *int64_t v37 = *v38;
        v37[1] = v38[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v7[v9[6]] = v8[v9[6]];
        uint64_t v39 = v9[7];
        uint64_t v40 = &v7[v39];
        uint64_t v41 = &v8[v39];
        uint64_t v42 = sub_24EA93DE0();
        uint64_t v43 = *(void *)(v42 - 8);
        long long v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
        int v45 = v44(v40, 1, v42);
        int v46 = v44(v41, 1, v42);
        if (v45)
        {
          if (!v46)
          {
            (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
            return a1;
          }
        }
        else
        {
          if (!v46)
          {
            (*(void (**)(char *, char *, uint64_t))(v43 + 24))(v40, v41, v42);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
        }
        size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8) - 8) + 64);
        uint64_t v18 = v40;
        uint64_t v19 = v41;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 24))(v7, v8, v20);
        goto LABEL_21;
      }
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v7, v20);
    }
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v7, v8, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_21;
  }
  if (v13)
  {
LABEL_7:
    size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8) - 8) + 64);
    uint64_t v18 = v7;
    uint64_t v19 = v8;
LABEL_8:
    memcpy(v18, v19, v17);
    return a1;
  }
  uint64_t v14 = sub_24EA93EB0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  uint64_t v25 = v9[5];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  void *v26 = *v27;
  v26[1] = v27[1];
  v7[v9[6]] = v8[v9[6]];
  uint64_t v28 = v9[7];
  __dst = &v7[v28];
  unint64_t v29 = &v8[v28];
  uint64_t v30 = sub_24EA93DE0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_24EA29EC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for ImageAssetState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = (int *)type metadata accessor for ImageAsset();
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_24EA93EB0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v5, v6, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
    }
    *(_OWORD *)&v5[v7[5]] = *(_OWORD *)&v6[v7[5]];
    v5[v7[6]] = v6[v7[6]];
    uint64_t v13 = v7[7];
    uint64_t v14 = &v5[v13];
    uint64_t v15 = &v6[v13];
    uint64_t v16 = sub_24EA93DE0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for ImageAssetState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for ImageAsset();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_24EA29EC8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      goto LABEL_7;
    }
    uint64_t v20 = sub_24EA93EB0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48);
    int v23 = v22(v7, 1, v20);
    int v24 = v22(v8, 1, v20);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v7, v8, v20);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v20);
LABEL_21:
        uint64_t v33 = v9[5];
        int64_t v34 = &v7[v33];
        uint64_t v35 = (uint64_t *)&v8[v33];
        uint64_t v37 = *v35;
        uint64_t v36 = v35[1];
        *int64_t v34 = v37;
        v34[1] = v36;
        swift_bridgeObjectRelease();
        v7[v9[6]] = v8[v9[6]];
        uint64_t v38 = v9[7];
        uint64_t v39 = &v7[v38];
        uint64_t v40 = &v8[v38];
        uint64_t v41 = sub_24EA93DE0();
        uint64_t v42 = *(void *)(v41 - 8);
        uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
        int v44 = v43(v39, 1, v41);
        int v45 = v43(v40, 1, v41);
        if (v44)
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
            return a1;
          }
        }
        else
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
        }
        size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8) - 8) + 64);
        uint64_t v18 = v39;
        uint64_t v19 = v40;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 40))(v7, v8, v20);
        goto LABEL_21;
      }
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v7, v20);
    }
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v7, v8, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_21;
  }
  if (v13)
  {
LABEL_7:
    size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8) - 8) + 64);
    uint64_t v18 = v7;
    uint64_t v19 = v8;
LABEL_8:
    memcpy(v18, v19, v17);
    return a1;
  }
  uint64_t v14 = sub_24EA93EB0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v7, v8, v14);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  *(_OWORD *)&v7[v9[5]] = *(_OWORD *)&v8[v9[5]];
  v7[v9[6]] = v8[v9[6]];
  uint64_t v25 = v9[7];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  uint64_t v28 = sub_24EA93DE0();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAssetState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA2A7CC);
}

uint64_t sub_24EA2A7CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ImageAssetState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA2A894);
}

void *sub_24EA2A894(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24EA2A940()
{
  sub_24EA2A9E8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24EA2A9E8()
{
  if (!qword_26B1CFAC0)
  {
    type metadata accessor for ImageAsset();
    unint64_t v0 = sub_24EA94820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1CFAC0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ImageAssetState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA2AB0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAssetState.CodingKeys()
{
  return &type metadata for ImageAssetState.CodingKeys;
}

unint64_t sub_24EA2AB48()
{
  unint64_t result = qword_269929198;
  if (!qword_269929198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929198);
  }
  return result;
}

unint64_t sub_24EA2ABA0()
{
  unint64_t result = qword_2699291A0;
  if (!qword_2699291A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699291A0);
  }
  return result;
}

unint64_t sub_24EA2ABF8()
{
  unint64_t result = qword_2699291A8;
  if (!qword_2699291A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699291A8);
  }
  return result;
}

uint64_t sub_24EA2AC4C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7461745364616F6CLL && a2 == 0xEF657A6953794265;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C6163 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7373416567616D69 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EA2ADC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA2AE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EA2AE90()
{
  unint64_t result = qword_2699291C8;
  if (!qword_2699291C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699291C8);
  }
  return result;
}

uint64_t sub_24EA2AEE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA2AF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_24EA2C5B8;
  return MonogramFetching.fetchAccountMonogram(_:for:)(a1, a2, a3, a4, a5);
}

uint64_t sub_24EA2AFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  long long v3[4] = a1;
  uint64_t v4 = sub_24EA93DA0();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24EA2B0B8, 0, 0);
}

uint64_t sub_24EA2B0B8()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_aa_altDSID);
  if (v1)
  {
    uint64_t v2 = v1;
    BOOL v3 = *(void **)(v0 + 48);
    uint64_t v4 = sub_24EA945F0();
    uint64_t v6 = v5;

    *(void *)(v0 + 80) = v4;
    *(void *)(v0 + 88) = v6;
    id v7 = objc_msgSend(v3, sel_userFullName);
    if (v7)
    {
      uint64_t v8 = v7;
      sub_24EA945F0();

      sub_24EA93DB0();
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_24EA2B298;
      uint64_t v15 = *(void *)(v0 + 40);
      uint64_t v14 = *(void *)(v0 + 48);
      return MonogramFetcher.fetchAccountProfileImage(_:for:)(v15, v14);
    }
    sub_24EA2BD9C();
    swift_allocError();
    *uint64_t v10 = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24EA2BD9C();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24EA2B298(uint64_t a1)
{
  *(void *)(*(void *)v2 + 104) = a1;
  swift_task_dealloc();
  if (v1)
  {

    BOOL v3 = sub_24EA2B518;
  }
  else
  {
    BOOL v3 = sub_24EA2B3B4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24EA2B3B4()
{
  uint64_t v1 = qword_269928EC0;
  id v2 = *(id *)(v0 + 104);
  if (v1 == -1)
  {
    BOOL v3 = v2;
  }
  else
  {
    swift_once();
    BOOL v3 = *(void **)(v0 + 104);
  }
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = (void *)qword_269931C40;
  *(void *)(v0 + 16) = *(void *)(v0 + 80);
  *(void *)(v0 + 24) = v4;
  id v6 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2699291D8));
  id v7 = v5;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_24EA93FF0();
  objc_msgSend(v7, sel_setObject_forKey_, v3, v8);

  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v14 = *(char **)(v0 + 32);
  uint64_t v15 = type metadata accessor for Monogram();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v14[*(int *)(v15 + 20)], v11, v13);
  *(void *)uint64_t v14 = v10;
  *((void *)v14 + 1) = v9;
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_24EA2B518()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[7];
  id v6 = (char *)v0[4];
  uint64_t v7 = type metadata accessor for Monogram();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v6[*(int *)(v7 + 20)], v3, v5);
  *(void *)id v6 = v2;
  *((void *)v6 + 1) = v1;
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t MonogramFetching.fetchAccountMonogram(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[8] = a5;
  v6[9] = v5;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  uint64_t v7 = sub_24EA93DA0();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24EA2B690, 0, 0);
}

uint64_t sub_24EA2B690()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_aa_altDSID);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v3 = sub_24EA945F0();
    uint64_t v5 = v4;

    *(void *)(v0 + 104) = v3;
    *(void *)(v0 + 112) = v5;
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 24) + **(int **)(v15 + 24));
    id v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v6;
    void *v6 = v0;
    v6[1] = sub_24EA2B82C;
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 56);
    return v14(v7, v9, v10, v8);
  }
  else
  {
    sub_24EA2BD9C();
    swift_allocError();
    *uint64_t v12 = 0;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_24EA2B82C()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_24EA2BC88, 0, 0);
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2[8] + 16)
                                                                    + **(int **)(v2[8] + 16));
    uint64_t v3 = (void *)swift_task_alloc();
    v2[17] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_24EA2BA08;
    uint64_t v4 = v2[8];
    uint64_t v5 = v2[6];
    uint64_t v6 = v2[7];
    uint64_t v7 = v2[5];
    return v9(v7, v5, v6, v4);
  }
}

uint64_t sub_24EA2BA08(uint64_t a1)
{
  *(void *)(*(void *)v2 + 144) = a1;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v3 = sub_24EA2BCEC;
  }
  else
  {
    uint64_t v3 = sub_24EA2BB24;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24EA2BB24()
{
  uint64_t v1 = qword_269928EC0;
  id v2 = *(id *)(v0 + 144);
  if (v1 == -1)
  {
    uint64_t v3 = v2;
  }
  else
  {
    swift_once();
    uint64_t v3 = *(void **)(v0 + 144);
  }
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = (void *)qword_269931C40;
  *(void *)(v0 + 16) = *(void *)(v0 + 104);
  *(void *)(v0 + 24) = v4;
  id v6 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2699291D8));
  id v7 = v5;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_24EA93FF0();
  objc_msgSend(v7, sel_setObject_forKey_, v3, v8);

  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v14 = *(char **)(v0 + 32);
  uint64_t v15 = type metadata accessor for Monogram();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v14[*(int *)(v15 + 20)], v11, v13);
  *(void *)uint64_t v14 = v10;
  *((void *)v14 + 1) = v9;
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_24EA2BC88()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EA2BCEC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[10];
  id v6 = (char *)v0[4];
  uint64_t v7 = type metadata accessor for Monogram();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v6[*(int *)(v7 + 20)], v3, v5);
  *(void *)id v6 = v2;
  *((void *)v6 + 1) = v1;
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

unint64_t sub_24EA2BD9C()
{
  unint64_t result = qword_26B1CFC90;
  if (!qword_26B1CFC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFC90);
  }
  return result;
}

uint64_t sub_24EA2BDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = a2;
  v5[1] = sub_24EA2C5B8;
  return MEMORY[0x270FA2498](sub_24EA2BEC0, 0, 0);
}

uint64_t MonogramFetching.fetchAccountProfileNameComponents(for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24EA2BEC0, 0, 0);
}

uint64_t sub_24EA2BEC0()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_userFullName);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_24EA945F0();

    sub_24EA93DB0();
  }
  else
  {
    sub_24EA2BD9C();
    swift_allocError();
    *uint64_t v3 = 1;
    swift_willThrow();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t dispatch thunk of MonogramFetching.fetchAccountMonogram(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_24EA2C0C8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_24EA2C0C8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of MonogramFetching.fetchAccountProfileImage(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24EA2C2C8;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_24EA2C2C8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of MonogramFetching.fetchAccountProfileNameComponents(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24EA2C5B8;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_24EA2C4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269929220 + dword_269929220);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24EA2C0C8;
  return v9(a1, a2, a3);
}

uint64_t sub_24EA2C598(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24EA2BEC0, 0, 0);
}

uint64_t ArtworkAssetView.init(store:placeholderImage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a4 = sub_24EA2C65C;
  *(void *)(a4 + 8) = result;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = a3;
  return result;
}

uint64_t sub_24EA2C624()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EA2C65C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_24EA2C684(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EA944C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v1 + 24);
  if (!v13)
  {
    sub_24EA2D278();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE80);
    sub_24EA2F2A8(&qword_26B1CFE78, &qword_26B1CFE80);
    sub_24EA941E0();
    sub_24EA2D26C();
    swift_getKeyPath();
    sub_24EA94520();
    swift_release();
    swift_release();
    uint64_t v16 = type metadata accessor for ImageAsset();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16) == 1)
    {
      size_t v17 = &qword_26B1CFAB8;
      uint64_t v18 = (uint64_t)v5;
    }
    else
    {
      sub_24EA1E564((uint64_t)v5, (uint64_t)v8, &qword_26B1CFD40);
      sub_24EA2F564((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v19 = sub_24EA93EB0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v19) != 1)
      {
        id v21 = (id)sub_24EA93EA0();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
        goto LABEL_9;
      }
      size_t v17 = &qword_26B1CFD40;
      uint64_t v18 = (uint64_t)v8;
    }
    sub_24EA21258(v18, v17);
    id v21 = objc_msgSend(self, sel_tertiarySystemFillColor);
LABEL_9:
    uint64_t v23 = MEMORY[0x253347590](v21);
    char v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDA8);
    sub_24EA2EB88();
    sub_24EA943D0();
    goto LABEL_10;
  }
  id v14 = v13;
  sub_24EA944A0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B4B8], v9);
  uint64_t v15 = sub_24EA944D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v23 = v15;
  char v24 = 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDA8);
  sub_24EA2EB88();
  sub_24EA943D0();
  swift_release();

LABEL_10:
  char v22 = v26;
  *(void *)a1 = v25;
  *(unsigned char *)(a1 + 8) = v22;
}

uint64_t sub_24EA2CAF4()
{
  return sub_24EA94470();
}

id sub_24EA2CB10@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = *((unsigned char *)v1 + 16);
  id v8 = (id)v1[3];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  *(unsigned char *)(v6 + 32) = v5;
  *(void *)(v6 + 40) = v8;
  *a1 = sub_24EA2D274;
  a1[1] = v6;
  sub_24EA2D278();
  return v8;
}

id ArtworkAssetView.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = *((unsigned char *)v1 + 16);
  id v8 = (id)v1[3];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  *(unsigned char *)(v6 + 32) = v5;
  *(void *)(v6 + 40) = v8;
  *a1 = sub_24EA2D274;
  a1[1] = v6;
  sub_24EA2D278();
  return v8;
}

uint64_t sub_24EA2CC58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v64 = a5;
  int v8 = a3 & 1;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE28);
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE30);
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  int64_t v57 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA941F0();
  sub_24EA94800();
  double v16 = v15;
  double v18 = v17;
  sub_24EA2D570(a1, a2, v8, a4, &v67, v15, v17);
  sub_24EA941F0();
  uint64_t v65 = v19;
  uint64_t v66 = v20;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a2;
  *(unsigned char *)(v21 + 32) = v8;
  *(void *)(v21 + 40) = a4;
  sub_24EA2D278();
  uint64_t v58 = a4;
  id v22 = a4;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE40);
  type metadata accessor for CGSize();
  unint64_t v25 = v24;
  unint64_t v26 = sub_24EA2E974();
  unint64_t v27 = sub_24EA2EE00();
  uint64_t v61 = v12;
  uint64_t v56 = v23;
  unint64_t v28 = v25;
  uint64_t v29 = v27;
  sub_24EA94480();
  swift_release();
  sub_24EA2EE58(v67, v68, v69, v70, v71, v72, v73, v74);
  sub_24EA2D278();
  id v30 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE80);
  sub_24EA2F2A8(&qword_26B1CFE78, &qword_26B1CFE80);
  sub_24EA941E0();
  sub_24EA2D26C();
  id v53 = v30;

  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  uint64_t v31 = v65;
  if (*(void *)(v65 + 16))
  {
    uint64_t v32 = (uint64_t)v54;
    unint64_t v33 = sub_24EA62BB8(v16, v18);
    if (v34)
    {
      unint64_t v35 = v33;
      uint64_t v51 = v29;
      unint64_t v36 = v26;
      uint64_t v37 = *(void *)(v31 + 56);
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
      uint64_t v39 = *(void *)(v38 - 8);
      unint64_t v52 = v28;
      uint64_t v40 = v39;
      uint64_t v41 = v37 + *(void *)(v39 + 72) * v35;
      unint64_t v26 = v36;
      uint64_t v29 = v51;
      sub_24EA1E564(v41, v32, &qword_26B1CFC70);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v38);
      unint64_t v28 = v52;
    }
    else
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v32, 1, 1, v43);
    }
  }
  else
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
    uint64_t v32 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v54, 1, 1, v42);
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a1;
  *(void *)(v44 + 24) = a2;
  *(unsigned char *)(v44 + 32) = v8 != 0;
  *(void *)(v44 + 40) = v58;
  *(double *)(v44 + 48) = v16;
  *(double *)(v44 + 56) = v18;
  sub_24EA2D278();
  id v45 = v53;
  uint64_t v67 = v56;
  unint64_t v68 = v28;
  unint64_t v69 = v26;
  uint64_t v70 = v29;
  swift_getOpaqueTypeConformance2();
  sub_24EA2F210();
  int v46 = v57;
  uint64_t v47 = v63;
  uint64_t v48 = v61;
  sub_24EA94480();
  swift_release();
  sub_24EA21258(v32, &qword_26B1CFC78);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v48, v47);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v59 + 32))(v64, v46, v60);
}

uint64_t sub_24EA2D264()
{
  return objectdestroy_2Tm(48);
}

uint64_t sub_24EA2D26C()
{
  return swift_release();
}

uint64_t sub_24EA2D278()
{
  return swift_retain();
}

uint64_t sub_24EA2D280()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ArtworkAssetView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for ArtworkAssetView(uint64_t a1)
{
  sub_24EA2D26C();
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for ArtworkAssetView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EA2D278();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = (void *)a2[3];
  *(void *)(a1 + 24) = v7;
  id v8 = v7;
  return a1;
}

uint64_t assignWithCopy for ArtworkAssetView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EA2D278();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24EA2D26C();
  uint64_t v7 = *(void **)(a1 + 24);
  id v8 = (void *)a2[3];
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ArtworkAssetView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24EA2D26C();
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkAssetView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkAssetView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkAssetView()
{
  return &type metadata for ArtworkAssetView;
}

uint64_t sub_24EA2D514()
{
  return sub_24EA2F2A8(&qword_26B1CFD80, &qword_26B1CFD88);
}

uint64_t sub_24EA2D550()
{
  return objectdestroy_2Tm(48);
}

uint64_t sub_24EA2D558@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA2CC58(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_24EA2D570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X3>, void *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v99 = a5;
  int v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for FetchedImageAsset();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v90 = (uint64_t)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v91 = (uint64_t)&v90 - v16;
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
  uint64_t v17 = MEMORY[0x270FA5388](v95);
  uint64_t v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v97 = (uint64_t)&v90 - v20;
  uint64_t v94 = sub_24EA944C0();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v92 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v22 - 8);
  unint64_t v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  *(void *)&long long v101 = (char *)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  *(void *)&long long v100 = (char *)&v90 - v29;
  sub_24EA2D278();
  *(void *)&long long v98 = a4;
  id v30 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE80);
  sub_24EA2F2A8(&qword_26B1CFE78, &qword_26B1CFE80);
  sub_24EA941E0();
  sub_24EA2D26C();
  id v96 = v30;

  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  uint64_t v31 = v106;
  if (*(void *)(v106 + 16) && (unint64_t v32 = sub_24EA62BB8(a6, a7), (v33 & 1) != 0))
  {
    sub_24EA1E564(*(void *)(v31 + 56) + *(void *)(v26 + 72) * v32, (uint64_t)v24, &qword_26B1CFC70);
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v34 = 1;
  }
  uint64_t v35 = v100;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, v34, 1, v25);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_24EA21258((uint64_t)v24, &qword_26B1CFC78);
  }
  else
  {
    sub_24EA1E61C((uint64_t)v24, v35, &qword_26B1CFC70);
  }
  uint64_t v36 = v101;
  sub_24EA1E564(v35, v101, &qword_26B1CFC70);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      if ((void)v98)
      {
        id v38 = v96;
        sub_24EA944A0();
        uint64_t v39 = v93;
        uint64_t v40 = v92;
        uint64_t v41 = v94;
        (*(void (**)(char *, void, uint64_t))(v93 + 104))(v92, *MEMORY[0x263F1B4B8], v94);
        uint64_t v42 = sub_24EA944D0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
        *(void *)long long v102 = v42;
        *(_WORD *)&v102[8] = 0;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
        sub_24EA2EB60();
        sub_24EA943D0();
        swift_release();
      }
      else
      {
        *(void *)&long long v106 = a1;
        *((void *)&v106 + 1) = a2;
        LOBYTE(v107) = v12 != 0;
        *((void *)&v107 + 1) = 0;
        sub_24EA2C684((uint64_t)v102);
        v102[9] = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
        sub_24EA2EB60();
        sub_24EA943D0();
      }
      LODWORD(v98) = BYTE8(v106);
      uint64_t v72 = 256;
      if (!BYTE9(v106)) {
        uint64_t v72 = 0;
      }
      *(void *)long long v102 = v106;
      *(void *)&v102[8] = v72 | BYTE8(v106);
      *(_OWORD *)&v102[16] = 0u;
      long long v103 = 0u;
      LOBYTE(v104) = 1;
      uint64_t v97 = v106;
      LODWORD(v96) = BYTE9(v106);
      sub_24EA2F428(v106, BYTE8(v106), SBYTE9(v106));
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDD8);
      sub_24EA2EAE4();
      sub_24EA2EC7C();
      sub_24EA943D0();
      unint64_t v74 = *((void *)&v106 + 1);
      uint64_t v73 = v106;
      uint64_t v76 = *((void *)&v107 + 1);
      uint64_t v75 = v107;
      uint64_t v78 = *((void *)&v108 + 1);
      uint64_t v77 = v108;
      char v79 = v109;
      *(_OWORD *)long long v102 = v106;
      *(_OWORD *)&v102[16] = v107;
      long long v103 = v108;
      __int16 v104 = v109;
      char v105 = 0;
      sub_24EA2F43C(v106, *((unint64_t *)&v106 + 1), v107, *((uint64_t *)&v107 + 1), v108, *((uint64_t *)&v108 + 1), v109, (void (*)(uint64_t, unint64_t))j__swift_retain, (void (*)(uint64_t, uint64_t))sub_24EA2F4F4, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_24EA2F428);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE08);
      sub_24EA2EA20();
      sub_24EA2ED24();
      sub_24EA943D0();
      sub_24EA2EEE4(v97, v98, (char)v96);
      sub_24EA2F43C(v73, v74, v75, v76, v77, v78, v79, (void (*)(uint64_t, unint64_t))j__swift_release, (void (*)(uint64_t, uint64_t))sub_24EA2EED4, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_24EA2EEE4);
      uint64_t v52 = *((void *)&v106 + 1);
      uint64_t v51 = v106;
      uint64_t v54 = *((void *)&v107 + 1);
      uint64_t v53 = v107;
      uint64_t v56 = *((void *)&v108 + 1);
      uint64_t v55 = v108;
      __int16 v57 = v109;
      char v58 = v110;
      sub_24EA21258(v100, &qword_26B1CFC70);
      uint64_t v80 = sub_24EA93E70();
      uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)(v80 - 8) + 8))(v101, v80);
    }
    else
    {
      *(void *)&long long v106 = a1;
      *((void *)&v106 + 1) = a2;
      LOBYTE(v107) = v12 != 0;
      uint64_t v46 = v98;
      *((void *)&v107 + 1) = v98;
      sub_24EA2C684((uint64_t)v102);
      uint64_t v47 = *(void *)v102;
      uint64_t v48 = v102[8];
      uint64_t v49 = swift_allocObject();
      *(double *)(v49 + 16) = a6;
      *(double *)(v49 + 24) = a7;
      *(void *)(v49 + 32) = a1;
      *(void *)(v49 + 40) = a2;
      *(unsigned char *)(v49 + 48) = v12 != 0;
      *(void *)(v49 + 56) = v46;
      *(void *)long long v102 = v47;
      *(void *)&v102[8] = v48;
      *(void *)&v102[16] = sub_24EA2F548;
      *(void *)&v102[24] = v49;
      long long v103 = 0uLL;
      LOBYTE(v104) = 0;
      sub_24EA2D278();
      id v50 = v96;
      j__swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDD8);
      sub_24EA2EAE4();
      sub_24EA2EC7C();
      sub_24EA943D0();
      *(_OWORD *)long long v102 = v106;
      *(_OWORD *)&v102[16] = v107;
      long long v103 = v108;
      __int16 v104 = v109;
      char v105 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE08);
      sub_24EA2EA20();
      sub_24EA2ED24();
      sub_24EA943D0();
      j__swift_release();
      swift_release();
      uint64_t v52 = *((void *)&v106 + 1);
      uint64_t v51 = v106;
      uint64_t v54 = *((void *)&v107 + 1);
      uint64_t v53 = v107;
      uint64_t v56 = *((void *)&v108 + 1);
      uint64_t v55 = v108;
      __int16 v57 = v109;
      char v58 = v110;
      uint64_t result = sub_24EA21258(v35, &qword_26B1CFC70);
    }
  }
  else
  {
    uint64_t v43 = v97;
    sub_24EA1E61C(v36, v97, &qword_26B1CFF60);
    sub_24EA1E564(v43, (uint64_t)v19, &qword_26B1CFF60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)&long long v106 = a1;
      *((void *)&v106 + 1) = a2;
      LOBYTE(v107) = v12 != 0;
      *((void *)&v107 + 1) = v98;
      sub_24EA2C684((uint64_t)v102);
      *(void *)&v102[8] = v102[8];
      *(_OWORD *)&v102[16] = 0u;
      long long v103 = 0u;
      __int16 v104 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
      sub_24EA2ED60();
      sub_24EA2EB60();
      sub_24EA943D0();
      long long v100 = v107;
      long long v101 = v106;
      long long v98 = v108;
      __int16 v44 = v109;
      int v45 = HIBYTE(v109);
    }
    else
    {
      uint64_t v60 = v91;
      sub_24EA2F2EC((uint64_t)v19, v91);
      if (qword_26B1CFBA0 != -1) {
        swift_once();
      }
      uint64_t v61 = (void *)qword_26B1D1F10;
      sub_24EA2F350(v60, v90);
      id v62 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD60));
      id v63 = v61;
      uint64_t v64 = (void *)sub_24EA93FF0();
      id v65 = objc_msgSend(v63, sel_objectForKey_, v64);

      if (v65)
      {
        uint64_t v66 = sub_24EA942E0();
        id v67 = v65;
        sub_24EA944A0();
        uint64_t v68 = v93;
        unint64_t v69 = v92;
        uint64_t v70 = v94;
        (*(void (**)(char *, void, uint64_t))(v93 + 104))(v92, *MEMORY[0x263F1B4B8], v94);
        uint64_t v71 = sub_24EA944D0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
        *(void *)long long v102 = v66;
        *(_OWORD *)&v102[8] = xmmword_24EA95D20;
        long long v103 = 0uLL;
        *(void *)&v102[24] = v71;
        LOBYTE(v104) = 0;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE50);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
        sub_24EA2F2A8(&qword_26B1CFE48, &qword_26B1CFE50);
        sub_24EA2EAE4();
        uint64_t v36 = v101;
        sub_24EA943D0();
        swift_release();
      }
      else
      {
        *(void *)&long long v106 = a1;
        *((void *)&v106 + 1) = a2;
        LOBYTE(v107) = v12 != 0;
        uint64_t v81 = v98;
        *((void *)&v107 + 1) = v98;
        sub_24EA2C684((uint64_t)v102);
        uint64_t v82 = *(void *)v102;
        uint64_t v83 = v102[8];
        uint64_t v84 = swift_allocObject();
        *(void *)(v84 + 16) = a1;
        *(void *)(v84 + 24) = a2;
        *(unsigned char *)(v84 + 32) = v12 != 0;
        *(void *)(v84 + 40) = v81;
        *(double *)(v84 + 48) = a6;
        *(double *)(v84 + 56) = a7;
        *(void *)long long v102 = v82;
        *(void *)&v102[8] = v83;
        *(void *)&v102[16] = sub_24EA2F40C;
        *(void *)&v102[24] = v84;
        long long v103 = 0uLL;
        LOBYTE(v104) = 1;
        sub_24EA2D278();
        id v85 = v96;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE50);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
        sub_24EA2F2A8(&qword_26B1CFE48, &qword_26B1CFE50);
        sub_24EA2EAE4();
        sub_24EA943D0();
      }
      *(_OWORD *)long long v102 = v106;
      *(_OWORD *)&v102[16] = v107;
      long long v103 = v108;
      __int16 v104 = v109;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
      sub_24EA2ED60();
      sub_24EA2EB60();
      sub_24EA943D0();
      long long v100 = v107;
      long long v101 = v106;
      long long v98 = v108;
      __int16 v44 = v109;
      int v45 = HIBYTE(v109);
      sub_24EA2F564(v60, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    }
    uint64_t v86 = v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68) + 48);
    if (v45) {
      __int16 v87 = 256;
    }
    else {
      __int16 v87 = 0;
    }
    *(_OWORD *)long long v102 = v101;
    *(_OWORD *)&v102[16] = v100;
    long long v103 = v98;
    __int16 v104 = v87 | v44;
    char v105 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE08);
    sub_24EA2EA20();
    sub_24EA2ED24();
    sub_24EA943D0();
    uint64_t v52 = *((void *)&v106 + 1);
    uint64_t v51 = v106;
    uint64_t v54 = *((void *)&v107 + 1);
    uint64_t v53 = v107;
    uint64_t v56 = *((void *)&v108 + 1);
    uint64_t v55 = v108;
    __int16 v57 = v109;
    char v58 = v110;
    sub_24EA21258(v97, &qword_26B1CFF60);
    sub_24EA21258(v35, &qword_26B1CFC70);
    uint64_t v88 = sub_24EA93E40();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v86, v88);
  }
  uint64_t v89 = v99;
  *uint64_t v99 = v51;
  v89[1] = v52;
  v89[2] = v53;
  v89[3] = v54;
  v89[4] = v55;
  v89[5] = v56;
  *((_WORD *)v89 + 24) = v57;
  *((unsigned char *)v89 + 50) = v58;
  return result;
}

uint64_t sub_24EA2E4E4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = type metadata accessor for ImageAssetAction();
  uint64_t result = MEMORY[0x270FA5388](v9);
  int v12 = (double *)((char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 != 0.0 || a2 != 0.0)
  {
    sub_24EA2D278();
    id v13 = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE80);
    sub_24EA2F2A8(&qword_26B1CFE78, &qword_26B1CFE80);
    sub_24EA941E0();
    sub_24EA2D26C();

    *int v12 = a1;
    v12[1] = a2;
    swift_storeEnumTagMultiPayload();
    sub_24EA94530();
    swift_release();
    return sub_24EA2F564((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  }
  return result;
}

uint64_t sub_24EA2E660(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (double *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24EA2D278();
  id v12 = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE80);
  sub_24EA2F2A8(&qword_26B1CFE78, &qword_26B1CFE80);
  sub_24EA941E0();
  sub_24EA2D26C();

  double *v11 = a1;
  v11[1] = a2;
  swift_storeEnumTagMultiPayload();
  sub_24EA94530();
  swift_release();
  return sub_24EA2F564((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
}

uint64_t sub_24EA2E7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_24EA94810();
  if (result)
  {
    sub_24EA2D278();
    id v11 = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE80);
    sub_24EA2F2A8(&qword_26B1CFE78, &qword_26B1CFE80);
    sub_24EA941E0();
    sub_24EA2D26C();

    sub_24EA94800();
    *uint64_t v9 = v12;
    v9[1] = v13;
    swift_storeEnumTagMultiPayload();
    sub_24EA94530();
    swift_release();
    return sub_24EA2F564((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  }
  return result;
}

uint64_t sub_24EA2E954()
{
  return objectdestroy_2Tm(48);
}

uint64_t sub_24EA2E95C(uint64_t a1, uint64_t a2)
{
  return sub_24EA2E7CC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void **)(v2 + 40));
}

unint64_t sub_24EA2E974()
{
  unint64_t result = qword_26B1CFE38;
  if (!qword_26B1CFE38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFE40);
    sub_24EA2EA5C(&qword_26B1CFDF0, &qword_26B1CFDF8, (void (*)(void))sub_24EA2EA20, (void (*)(void))sub_24EA2ED24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFE38);
  }
  return result;
}

uint64_t sub_24EA2EA20()
{
  return sub_24EA2EA5C(&qword_26B1CFDB0, &qword_26B1CFDB8, (void (*)(void))sub_24EA2EAE4, (void (*)(void))sub_24EA2EC7C);
}

uint64_t sub_24EA2EA5C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EA2EAE4()
{
  unint64_t result = qword_26B1CFD90;
  if (!qword_26B1CFD90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFD98);
    sub_24EA2EB60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFD90);
  }
  return result;
}

uint64_t sub_24EA2EB60()
{
  return sub_24EA2ECA4(&qword_26B1CFDC0, &qword_26B1CFDC8, (void (*)(void))sub_24EA2EB88);
}

unint64_t sub_24EA2EB88()
{
  unint64_t result = qword_26B1CFDA0;
  if (!qword_26B1CFDA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFDA8);
    sub_24EA2EC28();
    sub_24EA2F2A8(&qword_26B1CFE18, &qword_26B1CFE20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFDA0);
  }
  return result;
}

unint64_t sub_24EA2EC28()
{
  unint64_t result = qword_26B1CFE58;
  if (!qword_26B1CFE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFE58);
  }
  return result;
}

uint64_t sub_24EA2EC7C()
{
  return sub_24EA2ECA4(&qword_26B1CFDD0, &qword_26B1CFDD8, (void (*)(void))sub_24EA2EB60);
}

uint64_t sub_24EA2ECA4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA2ED24()
{
  return sub_24EA2EA5C(&qword_26B1CFE00, &qword_26B1CFE08, (void (*)(void))sub_24EA2ED60, (void (*)(void))sub_24EA2EB60);
}

unint64_t sub_24EA2ED60()
{
  unint64_t result = qword_26B1CFDE0;
  if (!qword_26B1CFDE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFDE8);
    sub_24EA2F2A8(&qword_26B1CFE48, &qword_26B1CFE50);
    sub_24EA2EAE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFDE0);
  }
  return result;
}

unint64_t sub_24EA2EE00()
{
  unint64_t result = qword_26B1CFED0;
  if (!qword_26B1CFED0)
  {
    type metadata accessor for CGSize();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFED0);
  }
  return result;
}

uint64_t sub_24EA2EE58(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7, char a8)
{
  if ((a8 & 1) == 0) {
    return sub_24EA2F43C(a1, a2, a3, a4, a5, a6, a7 & 1, (void (*)(uint64_t, unint64_t))j__swift_release, (void (*)(uint64_t, uint64_t))sub_24EA2EED4, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_24EA2EEE4);
  }
  return sub_24EA2EEF4(a1, a2, a3, a4, a5, a6, a7, HIBYTE(a7) & 1);
}

uint64_t sub_24EA2EED4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24EA2EEE4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return j__swift_release();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_24EA2EEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  if (a8) {
    return j__swift_release();
  }
  else {
    return sub_24EA2EF08(a1, a2, a3, a4, a5, a6, a7 & 1);
  }
}

uint64_t sub_24EA2EF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    j__swift_release();
    sub_24EA2EED4(a3);
    return sub_24EA2EED4(a5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_24EA2EF90(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (double *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(a4, (uint64_t)v17, &qword_26B1CFC78);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18) == 1) {
    return sub_24EA21258((uint64_t)v17, &qword_26B1CFC78);
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_24EA21258((uint64_t)v17, &qword_26B1CFC70);
  if (EnumCaseMultiPayload == 2)
  {
    sub_24EA2D278();
    id v21 = a8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE80);
    sub_24EA2F2A8(&qword_26B1CFE78, &qword_26B1CFE80);
    sub_24EA941E0();
    sub_24EA2D26C();

    *uint64_t v14 = a1;
    v14[1] = a2;
    swift_storeEnumTagMultiPayload();
    sub_24EA94530();
    swift_release();
    return sub_24EA2F564((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  }
  return result;
}

uint64_t sub_24EA2F1EC()
{
  return objectdestroy_2Tm(64);
}

uint64_t sub_24EA2F1F4(uint64_t a1, uint64_t a2)
{
  return sub_24EA2EF90(*(double *)(v2 + 48), *(double *)(v2 + 56), a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void **)(v2 + 40));
}

unint64_t sub_24EA2F210()
{
  unint64_t result = qword_26B1CFC80;
  if (!qword_26B1CFC80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFC78);
    sub_24EA2F2A8(&qword_26B1CFC68, &qword_26B1CFC70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFC80);
  }
  return result;
}

uint64_t sub_24EA2F2A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA2F2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FetchedImageAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA2F350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FetchedImageAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA2F3B4()
{
  return objectdestroy_2Tm(64);
}

uint64_t objectdestroy_2Tm(uint64_t a1)
{
  sub_24EA2D26C();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24EA2F40C()
{
  return sub_24EA2E660(*(double *)(v0 + 48), *(double *)(v0 + 56), *(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_24EA2F428(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return j__swift_retain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_24EA2F43C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void (*a8)(uint64_t, unint64_t), void (*a9)(uint64_t, uint64_t), uint64_t (*a10)(uint64_t, unint64_t, uint64_t))
{
  if (a7)
  {
    return a10(a1, a2, (a2 >> 8) & 1);
  }
  else
  {
    a8(a1, a2 & 1);
    a9(a3, a4);
    return ((uint64_t (*)(uint64_t, uint64_t))a9)(a5, a6);
  }
}

uint64_t sub_24EA2F4F4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24EA2F504()
{
  sub_24EA2D26C();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24EA2F548()
{
  return sub_24EA2E4E4(*(double *)(v0 + 16), *(double *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_24EA2F564(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t DynamicArtworkLayoutEnvironment.description.getter()
{
  BYTE8(v3) = 0;
  sub_24EA948D0();
  sub_24EA94620();
  sub_24EA94970();
  sub_24EA94620();
  uint64_t v1 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  sub_24EA93FA0();
  sub_24EA94970();
  sub_24EA94620();
  *(void *)&long long v3 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 28));
  sub_24EA94970();
  sub_24EA94620();
  sub_24EA94970();
  sub_24EA94620();
  return *(void *)((char *)&v3 + 1);
}

uint64_t sub_24EA2F764(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 0x7373416567616D69;
  }
}

unint64_t sub_24EA2F798(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x616D496863746566;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x646564616F6CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x6570704177656976;
      break;
    case 7:
      unint64_t result = 0x657A695377656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EA2F8BC(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 12383;
  }
}

uint64_t sub_24EA2F8E0(char a1)
{
  return *(void *)&aImageasserror[8 * a1];
}

uint64_t sub_24EA2F900(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 0x4164656863746566;
  }
}

uint64_t sub_24EA2F938(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_24EA2F974()
{
  return sub_24EA2F764(*v0);
}

uint64_t sub_24EA2F97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA39934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA2F9A4(uint64_t a1)
{
  unint64_t v2 = sub_24EA315BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2F9E0(uint64_t a1)
{
  unint64_t v2 = sub_24EA315BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EA2FA1C()
{
  return sub_24EA2F798(*v0);
}

uint64_t sub_24EA2FA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA39A18(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EA2FA4C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24EA2FA58(uint64_t a1)
{
  unint64_t v2 = sub_24EA31264();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FA94(uint64_t a1)
{
  unint64_t v2 = sub_24EA31264();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA2FAD0()
{
  return sub_24EA2F8BC(*v0);
}

uint64_t sub_24EA2FAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA39D64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA2FB00(uint64_t a1)
{
  unint64_t v2 = sub_24EA31568();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FB3C(uint64_t a1)
{
  unint64_t v2 = sub_24EA31568();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA2FB78()
{
  return sub_24EA2F8E0(*v0);
}

uint64_t sub_24EA2FB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA39E28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA2FBA8(uint64_t a1)
{
  unint64_t v2 = sub_24EA314C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FBE4(uint64_t a1)
{
  unint64_t v2 = sub_24EA314C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA2FC20(uint64_t a1)
{
  unint64_t v2 = sub_24EA3146C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FC5C(uint64_t a1)
{
  unint64_t v2 = sub_24EA3146C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA2FC98()
{
  return sub_24EA2F900(*v0);
}

uint64_t sub_24EA2FCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA39F60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA2FCC8(uint64_t a1)
{
  unint64_t v2 = sub_24EA31418();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FD04(uint64_t a1)
{
  unint64_t v2 = sub_24EA31418();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA2FD40(uint64_t a1)
{
  unint64_t v2 = sub_24EA313C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FD7C(uint64_t a1)
{
  unint64_t v2 = sub_24EA313C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA2FDB8()
{
  return sub_24EA2F938(*v0);
}

uint64_t sub_24EA2FDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA3A04C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA2FDE8(uint64_t a1)
{
  unint64_t v2 = sub_24EA31370();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FE24(uint64_t a1)
{
  unint64_t v2 = sub_24EA31370();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA2FE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA3A12C(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_24EA2FE90(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24EA2FE9C(uint64_t a1)
{
  unint64_t v2 = sub_24EA3131C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA2FED8(uint64_t a1)
{
  unint64_t v2 = sub_24EA3131C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicImageAssetAction.encode(to:)(void *a1)
{
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929228);
  uint64_t v88 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  long long v106 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929230);
  uint64_t v90 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  v111 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929238);
  uint64_t v89 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  long long v108 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929240);
  uint64_t v87 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  char v105 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v97);
  uint64_t v104 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929248);
  uint64_t v86 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  long long v101 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v114);
  uint64_t v102 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v100 = (uint64_t)&v83 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v98 = (uint64_t)&v83 - v12;
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929250);
  uint64_t v91 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  id v96 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929258);
  uint64_t v85 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v93 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929260);
  uint64_t v84 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v113);
  uint64_t v94 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v83 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (uint64_t *)((char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v118[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_269929268);
  uint64_t v115 = *(void *)(v118[0] - 8);
  MEMORY[0x270FA5388](v118[0]);
  uint64_t v28 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA31264();
  v117 = v28;
  sub_24EA94C00();
  sub_24EA312B8(v118[1], (uint64_t)v26);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v38 = (void *)((char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48));
      uint64_t v39 = *v38;
      uint64_t v40 = v38[1];
      sub_24EA33044((uint64_t)v26, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      LOBYTE(v119) = 1;
      sub_24EA31568();
      uint64_t v41 = v93;
      uint64_t v43 = v117;
      uint64_t v42 = v118[0];
      sub_24EA94A70();
      LOBYTE(v119) = 0;
      sub_24EA34DCC(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v44 = v95;
      uint64_t v45 = v116;
      sub_24EA94AB0();
      if (!v45)
      {
        uint64_t v119 = v39;
        uint64_t v120 = v40;
        char v122 = 1;
        type metadata accessor for CGSize();
        sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      (*(void (**)(char *, uint64_t))(v85 + 8))(v41, v44);
      sub_24EA37294((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      return (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v43, v42);
    case 2u:
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
      char v48 = *((unsigned char *)v26 + *(int *)(v47 + 48));
      uint64_t v49 = (void *)((char *)v26 + *(int *)(v47 + 64));
      uint64_t v50 = *v49;
      uint64_t v51 = v49[1];
      uint64_t v52 = v94;
      sub_24EA33044((uint64_t)v26, v94, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      LOBYTE(v119) = 2;
      sub_24EA314C0();
      uint64_t v53 = v96;
      uint64_t v54 = v117;
      uint64_t v32 = v118[0];
      sub_24EA94A70();
      LOBYTE(v119) = 0;
      sub_24EA34DCC(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v55 = v99;
      uint64_t v56 = v116;
      sub_24EA94AB0();
      if (!v56)
      {
        LOBYTE(v119) = v48;
        char v122 = 1;
        sub_24EA31514();
        sub_24EA94AB0();
        uint64_t v119 = v50;
        uint64_t v120 = v51;
        char v122 = 2;
        type metadata accessor for CGSize();
        sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v55);
      __int16 v57 = type metadata accessor for ImageAsset;
      goto LABEL_24;
    case 3u:
      char v58 = (void *)((char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48));
      uint64_t v59 = *v58;
      uint64_t v60 = v58[1];
      uint64_t v52 = v98;
      sub_24EA33044((uint64_t)v26, v98, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      LOBYTE(v119) = 3;
      sub_24EA3146C();
      uint64_t v61 = v101;
      uint64_t v54 = v117;
      uint64_t v32 = v118[0];
      sub_24EA94A70();
      LOBYTE(v119) = 0;
      sub_24EA34DCC(&qword_269929290, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v62 = v103;
      uint64_t v63 = v116;
      sub_24EA94AB0();
      if (!v63)
      {
        uint64_t v119 = v59;
        uint64_t v120 = v60;
        char v122 = 1;
        type metadata accessor for CGSize();
        sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      uint64_t v64 = v118;
      goto LABEL_23;
    case 4u:
      id v65 = (void *)((char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48));
      uint64_t v66 = *v65;
      uint64_t v67 = v65[1];
      uint64_t v52 = v104;
      sub_24EA33044((uint64_t)v26, v104, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      LOBYTE(v119) = 4;
      sub_24EA31418();
      uint64_t v68 = v105;
      uint64_t v54 = v117;
      uint64_t v32 = v118[0];
      sub_24EA94A70();
      LOBYTE(v119) = 0;
      sub_24EA34DCC(&qword_26B1CFA58, (void (*)(uint64_t))type metadata accessor for FetchedImageAsset);
      uint64_t v69 = v107;
      uint64_t v70 = v116;
      sub_24EA94AB0();
      if (!v70)
      {
        uint64_t v119 = v66;
        uint64_t v120 = v67;
        char v122 = 1;
        type metadata accessor for CGSize();
        sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      (*(void (**)(char *, uint64_t))(v87 + 8))(v68, v69);
      __int16 v57 = type metadata accessor for FetchedImageAsset;
      goto LABEL_24;
    case 5u:
      uint64_t v71 = (void *)((char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48));
      uint64_t v72 = *v71;
      uint64_t v73 = v71[1];
      uint64_t v52 = v100;
      sub_24EA33044((uint64_t)v26, v100, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      LOBYTE(v119) = 5;
      sub_24EA313C4();
      uint64_t v61 = v108;
      uint64_t v54 = v117;
      uint64_t v32 = v118[0];
      sub_24EA94A70();
      LOBYTE(v119) = 0;
      sub_24EA34DCC(&qword_269929290, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v62 = v110;
      uint64_t v74 = v116;
      sub_24EA94AB0();
      if (!v74)
      {
        uint64_t v119 = v72;
        uint64_t v120 = v73;
        char v122 = 1;
        type metadata accessor for CGSize();
        sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      uint64_t v64 = &v120;
      goto LABEL_23;
    case 6u:
      uint64_t v75 = (void *)((char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48));
      uint64_t v76 = *v75;
      uint64_t v77 = v75[1];
      uint64_t v52 = v102;
      sub_24EA33044((uint64_t)v26, v102, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      LOBYTE(v119) = 6;
      sub_24EA31370();
      uint64_t v61 = v111;
      uint64_t v54 = v117;
      uint64_t v32 = v118[0];
      sub_24EA94A70();
      LOBYTE(v119) = 0;
      sub_24EA34DCC(&qword_269929290, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v62 = v112;
      uint64_t v78 = v116;
      sub_24EA94AB0();
      if (!v78)
      {
        uint64_t v119 = v76;
        uint64_t v120 = v77;
        char v122 = 1;
        type metadata accessor for CGSize();
        sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      uint64_t v64 = (uint64_t *)&v121;
LABEL_23:
      (*(void (**)(char *, uint64_t))(*(v64 - 32) + 8))(v61, v62);
      __int16 v57 = type metadata accessor for DynamicArtworkLayoutEnvironment;
LABEL_24:
      sub_24EA37294(v52, (uint64_t (*)(void))v57);
      goto LABEL_25;
    case 7u:
      uint64_t v79 = *v26;
      uint64_t v80 = v26[1];
      LOBYTE(v119) = 7;
      sub_24EA3131C();
      uint64_t v81 = v106;
      uint64_t v54 = v117;
      uint64_t v32 = v118[0];
      sub_24EA94A70();
      uint64_t v119 = v79;
      uint64_t v120 = v80;
      type metadata accessor for CGSize();
      sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v82 = v109;
      sub_24EA94AB0();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v81, v82);
LABEL_25:
      uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v115 + 8);
      uint64_t v37 = v54;
      break;
    default:
      uint64_t v29 = (void *)((char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78) + 48));
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      sub_24EA33044((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      LOBYTE(v119) = 0;
      sub_24EA315BC();
      char v33 = v117;
      uint64_t v32 = v118[0];
      sub_24EA94A70();
      LOBYTE(v119) = 0;
      sub_24EA34DCC(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v34 = v92;
      uint64_t v35 = v116;
      sub_24EA94AB0();
      if (!v35)
      {
        uint64_t v119 = v30;
        uint64_t v120 = v31;
        char v122 = 1;
        type metadata accessor for CGSize();
        sub_24EA34DCC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      (*(void (**)(char *, uint64_t))(v84 + 8))(v16, v34);
      sub_24EA37294((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v115 + 8);
      uint64_t v37 = v33;
      break;
  }
  return v36(v37, v32);
}

uint64_t type metadata accessor for DynamicImageAssetAction()
{
  uint64_t result = qword_269929340;
  if (!qword_269929340) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EA31264()
{
  unint64_t result = qword_269929270;
  if (!qword_269929270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929270);
  }
  return result;
}

uint64_t sub_24EA312B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DynamicImageAssetAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EA3131C()
{
  unint64_t result = qword_269929278;
  if (!qword_269929278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929278);
  }
  return result;
}

unint64_t sub_24EA31370()
{
  unint64_t result = qword_269929288;
  if (!qword_269929288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929288);
  }
  return result;
}

unint64_t sub_24EA313C4()
{
  unint64_t result = qword_269929298;
  if (!qword_269929298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929298);
  }
  return result;
}

unint64_t sub_24EA31418()
{
  unint64_t result = qword_2699292A0;
  if (!qword_2699292A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699292A0);
  }
  return result;
}

unint64_t sub_24EA3146C()
{
  unint64_t result = qword_2699292A8;
  if (!qword_2699292A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699292A8);
  }
  return result;
}

unint64_t sub_24EA314C0()
{
  unint64_t result = qword_2699292B8;
  if (!qword_2699292B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699292B8);
  }
  return result;
}

unint64_t sub_24EA31514()
{
  unint64_t result = qword_2699292C0;
  if (!qword_2699292C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699292C0);
  }
  return result;
}

unint64_t sub_24EA31568()
{
  unint64_t result = qword_2699292C8;
  if (!qword_2699292C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699292C8);
  }
  return result;
}

unint64_t sub_24EA315BC()
{
  unint64_t result = qword_2699292D0;
  if (!qword_2699292D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699292D0);
  }
  return result;
}

uint64_t DynamicImageAssetAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292D8);
  uint64_t v105 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  char v122 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292E0);
  uint64_t v107 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  v129 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292E8);
  uint64_t v106 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  v128 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292F0);
  uint64_t v104 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  v127 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292F8);
  uint64_t v103 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  v126 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929300);
  uint64_t v100 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  v123 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929308);
  uint64_t v102 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  char v121 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929310);
  uint64_t v101 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v120 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929318);
  uint64_t v124 = *(void *)(v11 - 8);
  uint64_t v125 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v130);
  uint64_t v99 = (_OWORD *)((char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v109 = (char *)&v93 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v119 = (char *)&v93 - v18;
  MEMORY[0x270FA5388](v19);
  long long v108 = (char *)&v93 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v93 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v93 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v93 - v28;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v93 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v93 - v34;
  uint64_t v36 = a1[3];
  v132 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v36);
  sub_24EA31264();
  v131 = v13;
  uint64_t v37 = v134;
  sub_24EA94BF0();
  if (v37)
  {
LABEL_21:
    uint64_t v83 = (uint64_t)v132;
    return __swift_destroy_boxed_opaque_existential_1(v83);
  }
  uint64_t v95 = v32;
  id v96 = v29;
  uint64_t v97 = v23;
  uint64_t v98 = v26;
  uint64_t v39 = v126;
  id v38 = v127;
  uint64_t v41 = v128;
  uint64_t v40 = v129;
  uint64_t v134 = 0;
  uint64_t v42 = v130;
  uint64_t v94 = v35;
  uint64_t v43 = v125;
  uint64_t v44 = v131;
  uint64_t v45 = sub_24EA94A50();
  uint64_t v46 = (char *)v45;
  if (*(void *)(v45 + 16) != 1)
  {
    uint64_t v51 = v44;
    uint64_t v52 = sub_24EA94910();
    swift_allocError();
    uint64_t v54 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269928F08);
    *uint64_t v54 = v42;
    sub_24EA94A00();
    sub_24EA94900();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v52 - 8) + 104))(v54, *MEMORY[0x263F8DCB0], v52);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v51, v43);
    goto LABEL_21;
  }
  switch(*(unsigned char *)(v45 + 32))
  {
    case 1:
      LOBYTE(v133) = 1;
      sub_24EA31568();
      uint64_t v55 = v121;
      uint64_t v56 = v134;
      sub_24EA949F0();
      if (v56)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v124 + 8))(v44, v43);
        uint64_t v83 = (uint64_t)v132;
        return __swift_destroy_boxed_opaque_existential_1(v83);
      }
      type metadata accessor for ImageAsset();
      LOBYTE(v133) = 0;
      sub_24EA34DCC(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v80 = v111;
      uint64_t v81 = v55;
      sub_24EA94A40();
      uint64_t v82 = v124;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      type metadata accessor for CGSize();
      LOBYTE(v133) = 1;
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v81, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v131, v43);
      uint64_t v89 = (uint64_t)v96;
      swift_storeEnumTagMultiPayload();
      uint64_t v90 = (uint64_t)v94;
      sub_24EA33044(v89, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
      uint64_t v91 = (uint64_t)v132;
      uint64_t v92 = v118;
      uint64_t v134 = 0;
      goto LABEL_27;
    case 2:
      LOBYTE(v133) = 2;
      sub_24EA314C0();
      __int16 v57 = v123;
      uint64_t v58 = v134;
      sub_24EA949F0();
      if (v58) {
        goto LABEL_20;
      }
      type metadata accessor for ImageAsset();
      LOBYTE(v133) = 0;
      sub_24EA34DCC(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v59 = v113;
      sub_24EA94A40();
      uint64_t v60 = v124;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
      LOBYTE(v133) = 1;
      sub_24EA330AC();
      sub_24EA94A40();
      type metadata accessor for CGSize();
      LOBYTE(v133) = 2;
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      uint64_t v134 = 0;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v57, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v131, v43);
      uint64_t v87 = v98;
      goto LABEL_25;
    case 3:
      LOBYTE(v133) = 3;
      sub_24EA3146C();
      uint64_t v61 = v39;
      uint64_t v62 = v134;
      sub_24EA949F0();
      if (v62) {
        goto LABEL_20;
      }
      type metadata accessor for DynamicArtworkLayoutEnvironment();
      LOBYTE(v133) = 0;
      sub_24EA34DCC(&qword_269929320, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v63 = v112;
      sub_24EA94A40();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
      type metadata accessor for CGSize();
      LOBYTE(v133) = 1;
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      uint64_t v134 = 0;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v61, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v44, v43);
      uint64_t v87 = v97;
      goto LABEL_25;
    case 4:
      LOBYTE(v133) = 4;
      sub_24EA31418();
      uint64_t v64 = v38;
      uint64_t v65 = v134;
      sub_24EA949F0();
      if (v65) {
        goto LABEL_20;
      }
      type metadata accessor for FetchedImageAsset();
      LOBYTE(v133) = 0;
      sub_24EA34DCC(&qword_269929328, (void (*)(uint64_t))type metadata accessor for FetchedImageAsset);
      uint64_t v66 = v108;
      uint64_t v67 = v114;
      sub_24EA94A40();
      uint64_t v68 = v124;
      v128 = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      type metadata accessor for CGSize();
      LOBYTE(v133) = 1;
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      uint64_t v134 = 0;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v67);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v43);
      swift_storeEnumTagMultiPayload();
      uint64_t v88 = (uint64_t)v66;
      goto LABEL_26;
    case 5:
      LOBYTE(v133) = 5;
      sub_24EA313C4();
      uint64_t v69 = v134;
      sub_24EA949F0();
      if (v69) {
        goto LABEL_20;
      }
      type metadata accessor for DynamicArtworkLayoutEnvironment();
      LOBYTE(v133) = 0;
      sub_24EA34DCC(&qword_269929320, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v70 = v116;
      sub_24EA94A40();
      uint64_t v71 = v124;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
      type metadata accessor for CGSize();
      LOBYTE(v133) = 1;
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      uint64_t v134 = 0;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v41, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v131, v43);
      uint64_t v87 = v119;
      goto LABEL_25;
    case 6:
      LOBYTE(v133) = 6;
      sub_24EA31370();
      uint64_t v72 = v40;
      uint64_t v73 = v134;
      sub_24EA949F0();
      if (v73) {
        goto LABEL_20;
      }
      v128 = v46;
      type metadata accessor for DynamicArtworkLayoutEnvironment();
      LOBYTE(v133) = 0;
      sub_24EA34DCC(&qword_269929320, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v74 = v109;
      uint64_t v75 = v117;
      sub_24EA94A40();
      uint64_t v76 = v124;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
      type metadata accessor for CGSize();
      LOBYTE(v133) = 1;
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      uint64_t v134 = 0;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v72, v75);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v131, v43);
      swift_storeEnumTagMultiPayload();
      uint64_t v88 = (uint64_t)v74;
      goto LABEL_26;
    case 7:
      LOBYTE(v133) = 7;
      sub_24EA3131C();
      uint64_t v77 = v122;
      uint64_t v78 = v134;
      sub_24EA949F0();
      if (v78) {
        goto LABEL_20;
      }
      type metadata accessor for CGSize();
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v84 = v115;
      sub_24EA94A40();
      uint64_t v85 = v77;
      uint64_t v86 = v124;
      uint64_t v134 = 0;
      (*(void (**)(char *, uint64_t))(v105 + 8))(v85, v84);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v131, v43);
      uint64_t v87 = v99;
      *uint64_t v99 = v133;
      goto LABEL_25;
    default:
      LOBYTE(v133) = 0;
      sub_24EA315BC();
      uint64_t v47 = v120;
      uint64_t v48 = v134;
      sub_24EA949F0();
      if (v48)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v124 + 8))(v44, v43);
        goto LABEL_21;
      }
      type metadata accessor for ImageAsset();
      LOBYTE(v133) = 0;
      sub_24EA34DCC(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v49 = v110;
      sub_24EA94A40();
      uint64_t v50 = v124;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      type metadata accessor for CGSize();
      LOBYTE(v133) = 1;
      sub_24EA34DCC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v131, v43);
      uint64_t v134 = 0;
      uint64_t v87 = v95;
LABEL_25:
      swift_storeEnumTagMultiPayload();
      uint64_t v88 = (uint64_t)v87;
LABEL_26:
      uint64_t v90 = (uint64_t)v94;
      sub_24EA33044(v88, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
      uint64_t v91 = (uint64_t)v132;
      uint64_t v92 = v118;
LABEL_27:
      sub_24EA33044(v90, v92, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v91);
      break;
  }
  return result;
}

uint64_t sub_24EA33044(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24EA330AC()
{
  unint64_t result = qword_269929330;
  if (!qword_269929330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929330);
  }
  return result;
}

uint64_t sub_24EA33100@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicImageAssetAction.init(from:)(a1, a2);
}

uint64_t sub_24EA33118(void *a1)
{
  return DynamicImageAssetAction.encode(to:)(a1);
}

uint64_t DynamicImageAssetAction.hash(into:)(uint64_t a1)
{
  uint64_t v94 = a1;
  uint64_t v85 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v85);
  uint64_t v86 = (char *)&v80 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EA93DE0();
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v93 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v88 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v84 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v83 = (uint64_t)&v80 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v82 = (uint64_t)&v80 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v81 = (uint64_t)&v80 - v14;
  uint64_t v15 = sub_24EA93EB0();
  uint64_t v89 = *(void *)(v15 - 8);
  uint64_t v90 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v87 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v80 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v80 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v80 - v27;
  uint64_t v91 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v91);
  uint64_t v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v80 - v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v80 - v35;
  uint64_t v37 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v80 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA312B8(v95, (uint64_t)v39);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      sub_24EA33044((uint64_t)v39, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA94B80();
      sub_24EA1E564((uint64_t)v33, (uint64_t)v25, &qword_26B1CFD40);
      uint64_t v43 = v89;
      uint64_t v42 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v25, 1, v90) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        __int16 v57 = v87;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v87, v25, v42);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v57, v42);
      }
      uint64_t v59 = v92;
      uint64_t v58 = v93;
      uint64_t v60 = v91;
      sub_24EA94610();
      sub_24EA94610();
      swift_bridgeObjectRelease();
      uint64_t v61 = (uint64_t)&v33[*(int *)(v60 + 28)];
      uint64_t v62 = v82;
      sub_24EA1E564(v61, v82, &qword_26B1CF9E8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v62, 1, v58) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v76 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v88, v62, v58);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v76, v58);
      }
      sub_24EA94BA0();
      sub_24EA94BA0();
      uint64_t v50 = type metadata accessor for ImageAsset;
      uint64_t v49 = (uint64_t)v33;
      return sub_24EA37294(v49, (uint64_t (*)(void))v50);
    case 2u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
      sub_24EA33044((uint64_t)v39, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA94B80();
      sub_24EA1E564((uint64_t)v30, (uint64_t)v22, &qword_26B1CFD40);
      uint64_t v45 = v89;
      uint64_t v44 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v22, 1, v90) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v63 = v87;
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v87, v22, v44);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v63, v44);
      }
      uint64_t v65 = v92;
      uint64_t v64 = v93;
      uint64_t v66 = v91;
      sub_24EA94610();
      sub_24EA94610();
      swift_bridgeObjectRelease();
      uint64_t v67 = (uint64_t)&v30[*(int *)(v66 + 28)];
      uint64_t v68 = v83;
      sub_24EA1E564(v67, v83, &qword_26B1CF9E8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v68, 1, v64) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v77 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v88, v68, v64);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v77, v64);
      }
      sub_24EA94B80();
      sub_24EA94BA0();
      sub_24EA94BA0();
      uint64_t v78 = type metadata accessor for ImageAsset;
      goto LABEL_32;
    case 3u:
    case 5u:
    case 6u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
      sub_24EA33044((uint64_t)v39, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      sub_24EA94B80();
      DynamicArtworkLayoutEnvironment.hash(into:)();
      sub_24EA94BA0();
      sub_24EA94BA0();
      uint64_t v49 = (uint64_t)v4;
      uint64_t v50 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      return sub_24EA37294(v49, (uint64_t (*)(void))v50);
    case 4u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      uint64_t v30 = v86;
      sub_24EA33044((uint64_t)v39, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      sub_24EA94B80();
      sub_24EA1E564((uint64_t)v30, (uint64_t)v19, &qword_26B1CFD40);
      uint64_t v47 = v89;
      uint64_t v46 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v19, 1, v90) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v69 = v87;
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v87, v19, v46);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v69, v46);
      }
      uint64_t v71 = v92;
      uint64_t v70 = v93;
      uint64_t v72 = v91;
      sub_24EA94610();
      sub_24EA94610();
      swift_bridgeObjectRelease();
      uint64_t v73 = (uint64_t)&v30[*(int *)(v72 + 28)];
      uint64_t v74 = v84;
      sub_24EA1E564(v73, v84, &qword_26B1CF9E8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v74, 1, v70) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v79 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v88, v74, v70);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v79, v70);
      }
      sub_24EA94BA0();
      sub_24EA94BA0();
      sub_24EA94BA0();
      sub_24EA94BA0();
      uint64_t v78 = type metadata accessor for FetchedImageAsset;
LABEL_32:
      uint64_t v50 = v78;
      uint64_t v49 = (uint64_t)v30;
      return sub_24EA37294(v49, (uint64_t (*)(void))v50);
    case 7u:
      sub_24EA94B80();
      sub_24EA94BA0();
      return sub_24EA94BA0();
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      sub_24EA33044((uint64_t)v39, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA94B80();
      sub_24EA1E564((uint64_t)v36, (uint64_t)v28, &qword_26B1CFD40);
      uint64_t v41 = v89;
      uint64_t v40 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v28, 1, v90) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v51 = v87;
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v87, v28, v40);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v51, v40);
      }
      uint64_t v52 = v91;
      sub_24EA94610();
      sub_24EA94610();
      swift_bridgeObjectRelease();
      uint64_t v53 = (uint64_t)&v36[*(int *)(v52 + 28)];
      uint64_t v54 = v81;
      sub_24EA1E564(v53, v81, &qword_26B1CF9E8);
      uint64_t v56 = v92;
      uint64_t v55 = v93;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v54, 1, v93) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v75 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v88, v54, v55);
        sub_24EA94B90();
        sub_24EA34DCC(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v75, v55);
      }
      sub_24EA94BA0();
      sub_24EA94BA0();
      uint64_t v50 = type metadata accessor for ImageAsset;
      uint64_t v49 = (uint64_t)v36;
      return sub_24EA37294(v49, (uint64_t (*)(void))v50);
  }
}

uint64_t DynamicImageAssetAction.hashValue.getter()
{
  sub_24EA94B70();
  DynamicImageAssetAction.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA3417C()
{
  sub_24EA94B70();
  DynamicImageAssetAction.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA341C0()
{
  sub_24EA94B70();
  DynamicImageAssetAction.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA34200()
{
  sub_24EA94610();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EA34244()
{
  sub_24EA94610();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EA34314()
{
  return sub_24EA94BA0();
}

BOOL _s12FitnessAsset012DynamicImageB6ActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, double *a2)
{
  uint64_t v106 = a1;
  uint64_t v107 = a2;
  uint64_t v97 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v97);
  uint64_t v104 = (uint64_t)&v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v103 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v102 = (uint64_t)&v96 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v101 = (uint64_t)&v96 - v8;
  uint64_t v9 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v100 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v99 = (uint64_t)&v96 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v98 = (uint64_t)&v96 - v14;
  uint64_t v15 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (double *)((char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v96 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v96 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v105 = (char *)&v96 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v96 - v27;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v96 - v30;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v96 - v33;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v96 - v36;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929428);
  MEMORY[0x270FA5388](v38 - 8);
  uint64_t v40 = (char *)&v96 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = (uint64_t)&v40[*(int *)(v41 + 56)];
  sub_24EA312B8(v106, (uint64_t)v40);
  uint64_t v43 = (uint64_t)v107;
  uint64_t v107 = (double *)v42;
  sub_24EA312B8(v43, v42);
  uint64_t v44 = (uint64_t)v40;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EA312B8((uint64_t)v40, (uint64_t)v34);
      uint64_t v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48);
      double v47 = *(double *)&v34[v61];
      double v46 = *(double *)&v34[v61 + 8];
      uint64_t v62 = (uint64_t)v107;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        double v54 = *(double *)(v62 + v61);
        double v53 = *(double *)(v62 + v61 + 8);
        uint64_t v63 = type metadata accessor for ImageAsset;
        uint64_t v64 = v99;
        sub_24EA33044(v62, v99, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        char v65 = static ImageAsset.== infix(_:_:)(v34, v64);
        sub_24EA37294(v64, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v66 = (uint64_t)v34;
        goto LABEL_34;
      }
      uint64_t v92 = type metadata accessor for ImageAsset;
      goto LABEL_25;
    case 2u:
      sub_24EA312B8((uint64_t)v40, (uint64_t)v31);
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
      uint64_t v68 = *(int *)(v67 + 48);
      int v69 = v31[v68];
      uint64_t v70 = *(int *)(v67 + 64);
      double v72 = *(double *)&v31[v70];
      double v71 = *(double *)&v31[v70 + 8];
      uint64_t v73 = (uint64_t)v107;
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_24EA37294((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v40 = (char *)v44;
        goto LABEL_31;
      }
      int v74 = *(unsigned __int8 *)(v73 + v68);
      double v76 = *(double *)(v73 + v70);
      double v75 = *(double *)(v73 + v70 + 8);
      uint64_t v77 = v100;
      sub_24EA33044(v73, v100, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      char v78 = static ImageAsset.== infix(_:_:)(v31, v77);
      sub_24EA37294(v77, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA37294((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      if ((v78 & 1) == 0)
      {
        uint64_t v79 = v44;
        goto LABEL_41;
      }
      uint64_t v79 = v44;
      if (v69 != v74) {
        goto LABEL_41;
      }
      BOOL v94 = v71 == v75 && v72 == v76;
      sub_24EA37294(v44, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
      return v94;
    case 3u:
      sub_24EA312B8((uint64_t)v40, (uint64_t)v28);
      uint64_t v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48);
      double v47 = *(double *)&v28[v80];
      double v46 = *(double *)&v28[v80 + 8];
      uint64_t v81 = (uint64_t)v107;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        double v54 = *(double *)(v81 + v80);
        double v53 = *(double *)(v81 + v80 + 8);
        uint64_t v63 = type metadata accessor for DynamicArtworkLayoutEnvironment;
        uint64_t v82 = v101;
        sub_24EA33044(v81, v101, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
        char v65 = _s12FitnessAsset31DynamicArtworkLayoutEnvironmentV2eeoiySbAC_ACtFZ_0((uint64_t)v28, v82);
        sub_24EA37294(v82, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
        uint64_t v66 = (uint64_t)v28;
        goto LABEL_34;
      }
      uint64_t v49 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      uint64_t v50 = (uint64_t)v28;
      goto LABEL_30;
    case 4u:
      uint64_t v34 = v105;
      sub_24EA312B8((uint64_t)v40, (uint64_t)v105);
      uint64_t v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48);
      double v47 = *(double *)&v34[v51];
      double v46 = *(double *)&v34[v51 + 8];
      uint64_t v52 = (uint64_t)v107;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        uint64_t v92 = type metadata accessor for FetchedImageAsset;
LABEL_25:
        uint64_t v49 = v92;
        uint64_t v50 = (uint64_t)v34;
        goto LABEL_30;
      }
      double v54 = *(double *)(v52 + v51);
      double v53 = *(double *)(v52 + v51 + 8);
      uint64_t v55 = v52;
      uint64_t v56 = v104;
      sub_24EA33044(v55, v104, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      if (static ImageAsset.== infix(_:_:)(v34, v56))
      {
        uint64_t v57 = *(int *)(v97 + 20);
        uint64_t v58 = &v34[v57];
        double v59 = *(double *)&v34[v57];
        uint64_t v60 = (double *)(v56 + v57);
        if (v59 == *v60 && *((double *)v58 + 1) == v60[1])
        {
          sub_24EA37294(v56, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
          sub_24EA37294((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
          goto LABEL_35;
        }
      }
      sub_24EA37294(v56, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      sub_24EA37294((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      goto LABEL_40;
    case 5u:
      sub_24EA312B8((uint64_t)v40, (uint64_t)v23);
      uint64_t v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48);
      double v47 = *(double *)&v23[v83];
      double v46 = *(double *)&v23[v83 + 8];
      uint64_t v84 = (uint64_t)v107;
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        double v54 = *(double *)(v84 + v83);
        double v53 = *(double *)(v84 + v83 + 8);
        uint64_t v63 = type metadata accessor for DynamicArtworkLayoutEnvironment;
        uint64_t v85 = v102;
        sub_24EA33044(v84, v102, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
        char v65 = _s12FitnessAsset31DynamicArtworkLayoutEnvironmentV2eeoiySbAC_ACtFZ_0((uint64_t)v23, v85);
        sub_24EA37294(v85, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
        uint64_t v66 = (uint64_t)v23;
        goto LABEL_34;
      }
      uint64_t v49 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      uint64_t v50 = (uint64_t)v23;
      goto LABEL_30;
    case 6u:
      sub_24EA312B8((uint64_t)v40, (uint64_t)v20);
      uint64_t v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48);
      double v47 = *(double *)&v20[v86];
      double v46 = *(double *)&v20[v86 + 8];
      uint64_t v87 = (uint64_t)v107;
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        double v54 = *(double *)(v87 + v86);
        double v53 = *(double *)(v87 + v86 + 8);
        uint64_t v63 = type metadata accessor for DynamicArtworkLayoutEnvironment;
        uint64_t v88 = v103;
        sub_24EA33044(v87, v103, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
        char v65 = _s12FitnessAsset31DynamicArtworkLayoutEnvironmentV2eeoiySbAC_ACtFZ_0((uint64_t)v20, v88);
        sub_24EA37294(v88, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
        uint64_t v66 = (uint64_t)v20;
        goto LABEL_34;
      }
      uint64_t v49 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      uint64_t v50 = (uint64_t)v20;
      goto LABEL_30;
    case 7u:
      sub_24EA312B8((uint64_t)v40, (uint64_t)v17);
      uint64_t v89 = v107;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_31;
      }
      BOOL v90 = *v17 == *v89;
      BOOL v91 = v17[1] == v89[1];
      goto LABEL_36;
    default:
      sub_24EA312B8((uint64_t)v40, (uint64_t)v37);
      uint64_t v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78) + 48);
      double v47 = *(double *)&v37[v45];
      double v46 = *(double *)&v37[v45 + 8];
      uint64_t v48 = (uint64_t)v107;
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v49 = type metadata accessor for ImageAsset;
        uint64_t v50 = (uint64_t)v37;
LABEL_30:
        sub_24EA37294(v50, (uint64_t (*)(void))v49);
LABEL_31:
        sub_24EA3A1B4((uint64_t)v40);
        return 0;
      }
      double v54 = *(double *)(v48 + v45);
      double v53 = *(double *)(v48 + v45 + 8);
      uint64_t v63 = type metadata accessor for ImageAsset;
      uint64_t v93 = v98;
      sub_24EA33044(v48, v98, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      char v65 = static ImageAsset.== infix(_:_:)(v37, v93);
      sub_24EA37294(v93, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v66 = (uint64_t)v37;
LABEL_34:
      sub_24EA37294(v66, (uint64_t (*)(void))v63);
      if ((v65 & 1) == 0)
      {
LABEL_40:
        uint64_t v79 = (uint64_t)v40;
LABEL_41:
        sub_24EA37294(v79, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
        return 0;
      }
LABEL_35:
      BOOL v90 = v47 == v54;
      BOOL v91 = v46 == v53;
LABEL_36:
      BOOL v94 = v91 && v90;
      sub_24EA37294((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
      return v94;
  }
}

uint64_t sub_24EA34D84()
{
  return sub_24EA34DCC(&qword_269929338, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetAction);
}

uint64_t sub_24EA34DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DynamicImageAssetAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_24EA93EB0();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        uint64_t v28 = (int *)type metadata accessor for ImageAsset();
        uint64_t v29 = v28[5];
        uint64_t v30 = (uint64_t *)((char *)a1 + v29);
        uint64_t v31 = (uint64_t *)((char *)a2 + v29);
        uint64_t v32 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v32;
        *((unsigned char *)a1 + v28[6]) = *((unsigned char *)a2 + v28[6]);
        uint64_t v33 = v28[7];
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_24EA93DE0();
        uint64_t v37 = *(void *)(v36 - 8);
        uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
        swift_bridgeObjectRetain();
        if (v38(v35, 1, v36))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
        *(_OWORD *)((char *)a1 + *(int *)(v76 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v76 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v12 = sub_24EA93EB0();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v40 = (int *)type metadata accessor for ImageAsset();
        uint64_t v41 = v40[5];
        uint64_t v42 = (uint64_t *)((char *)a1 + v41);
        uint64_t v43 = (uint64_t *)((char *)a2 + v41);
        uint64_t v44 = v43[1];
        *uint64_t v42 = *v43;
        v42[1] = v44;
        *((unsigned char *)a1 + v40[6]) = *((unsigned char *)a2 + v40[6]);
        uint64_t v45 = v40[7];
        double v46 = (char *)a1 + v45;
        double v47 = (char *)a2 + v45;
        uint64_t v48 = sub_24EA93DE0();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
        swift_bridgeObjectRetain();
        if (v50(v47, 1, v48))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
        *(_OWORD *)((char *)a1 + *(int *)(v77 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v77 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v15 = sub_24EA93EB0();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        uint64_t v52 = (int *)type metadata accessor for ImageAsset();
        uint64_t v53 = v52[5];
        double v54 = (uint64_t *)((char *)a1 + v53);
        uint64_t v55 = (uint64_t *)((char *)a2 + v53);
        uint64_t v56 = v55[1];
        *double v54 = *v55;
        v54[1] = v56;
        *((unsigned char *)a1 + v52[6]) = *((unsigned char *)a2 + v52[6]);
        uint64_t v57 = v52[7];
        uint64_t v58 = (char *)a1 + v57;
        double v59 = (char *)a2 + v57;
        uint64_t v60 = sub_24EA93DE0();
        uint64_t v61 = *(void *)(v60 - 8);
        uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
        swift_bridgeObjectRetain();
        if (v62(v59, 1, v60))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
        *((unsigned char *)a1 + *(int *)(v78 + 48)) = *((unsigned char *)a2 + *(int *)(v78 + 48));
        *(_OWORD *)((char *)a1 + *(int *)(v78 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v78 + 64));
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 5u:
      case 6u:
        *(_WORD *)a1 = *(_WORD *)a2;
        uint64_t v21 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
        uint64_t v22 = v21[6];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_24EA93FA0();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        v26(v23, v24, v25);
        *((unsigned char *)a1 + v21[7]) = *((unsigned char *)a2 + v21[7]);
        v26((char *)a1 + v21[8], (char *)a2 + v21[8], v25);
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
        *(_OWORD *)((char *)a1 + *(int *)(v27 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v27 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v18 = sub_24EA93EB0();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v19 + 16))(a1, a2, v18);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
        }
        uint64_t v64 = (int *)type metadata accessor for ImageAsset();
        uint64_t v65 = v64[5];
        uint64_t v66 = (uint64_t *)((char *)a1 + v65);
        uint64_t v67 = (uint64_t *)((char *)a2 + v65);
        uint64_t v68 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v68;
        *((unsigned char *)a1 + v64[6]) = *((unsigned char *)a2 + v64[6]);
        uint64_t v69 = v64[7];
        uint64_t v70 = (char *)a1 + v69;
        double v71 = (char *)a2 + v69;
        uint64_t v72 = sub_24EA93DE0();
        uint64_t v73 = *(void *)(v72 - 8);
        int v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
        swift_bridgeObjectRetain();
        if (v74(v71, 1, v72))
        {
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        uint64_t v79 = type metadata accessor for FetchedImageAsset();
        *(_OWORD *)((char *)a1 + *(int *)(v79 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v79 + 20));
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
        *(_OWORD *)((char *)a1 + *(int *)(v80 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v80 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for DynamicImageAssetAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      uint64_t v3 = sub_24EA93EB0();
      uint64_t v4 = *(void *)(v3 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
      }
      uint64_t v5 = type metadata accessor for ImageAsset();
      swift_bridgeObjectRelease();
      uint64_t v6 = a1 + *(int *)(v5 + 28);
      uint64_t v7 = sub_24EA93DE0();
      uint64_t v14 = *(void *)(v7 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v6, 1, v7);
      if (!result)
      {
        uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v11 = v6;
        uint64_t v12 = v7;
        goto LABEL_8;
      }
      break;
    case 3:
    case 5:
    case 6:
      uint64_t v8 = type metadata accessor for DynamicArtworkLayoutEnvironment();
      uint64_t v9 = a1 + *(int *)(v8 + 24);
      uint64_t v10 = sub_24EA93FA0();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v15)((void *)(v10 - 8), v9, v10);
      uint64_t v11 = a1 + *(int *)(v8 + 32);
      uint64_t v12 = v10;
      uint64_t v13 = v15;
LABEL_8:
      uint64_t result = v13(v11, v12);
      break;
    default:
      return result;
  }
  return result;
}

_WORD *initializeWithCopy for DynamicImageAssetAction(_WORD *a1, _WORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24EA93EB0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v25 = (int *)type metadata accessor for ImageAsset();
      uint64_t v26 = v25[5];
      uint64_t v27 = (void *)((char *)a1 + v26);
      uint64_t v28 = (void *)((char *)a2 + v26);
      uint64_t v29 = v28[1];
      *uint64_t v27 = *v28;
      v27[1] = v29;
      *((unsigned char *)a1 + v25[6]) = *((unsigned char *)a2 + v25[6]);
      uint64_t v30 = v25[7];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = sub_24EA93DE0();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      if (v35(v32, 1, v33))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)((char *)a1 + *(int *)(v73 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v73 + 48));
      goto LABEL_32;
    case 1u:
      uint64_t v9 = sub_24EA93EB0();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v37 = (int *)type metadata accessor for ImageAsset();
      uint64_t v38 = v37[5];
      uint64_t v39 = (void *)((char *)a1 + v38);
      uint64_t v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v41;
      *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
      uint64_t v42 = v37[7];
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = sub_24EA93DE0();
      uint64_t v46 = *(void *)(v45 - 8);
      double v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      swift_bridgeObjectRetain();
      if (v47(v44, 1, v45))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      *(_OWORD *)((char *)a1 + *(int *)(v74 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v74 + 48));
      goto LABEL_32;
    case 2u:
      uint64_t v12 = sub_24EA93EB0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v13 + 16))(a1, a2, v12);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      uint64_t v49 = (int *)type metadata accessor for ImageAsset();
      uint64_t v50 = v49[5];
      uint64_t v51 = (void *)((char *)a1 + v50);
      uint64_t v52 = (void *)((char *)a2 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      *((unsigned char *)a1 + v49[6]) = *((unsigned char *)a2 + v49[6]);
      uint64_t v54 = v49[7];
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = sub_24EA93DE0();
      uint64_t v58 = *(void *)(v57 - 8);
      double v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
      swift_bridgeObjectRetain();
      if (v59(v56, 1, v57))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v55, v56, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
      *((unsigned char *)a1 + *(int *)(v75 + 48)) = *((unsigned char *)a2 + *(int *)(v75 + 48));
      *(_OWORD *)((char *)a1 + *(int *)(v75 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v75 + 64));
      goto LABEL_32;
    case 3u:
    case 5u:
    case 6u:
      *a1 = *a2;
      uint64_t v18 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
      uint64_t v19 = v18[6];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_24EA93FA0();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      v23(v20, v21, v22);
      *((unsigned char *)a1 + v18[7]) = *((unsigned char *)a2 + v18[7]);
      v23((char *)a1 + v18[8], (char *)a2 + v18[8], v22);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
      *(_OWORD *)((char *)a1 + *(int *)(v24 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 48));
      goto LABEL_32;
    case 4u:
      uint64_t v15 = sub_24EA93EB0();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
      uint64_t v61 = (int *)type metadata accessor for ImageAsset();
      uint64_t v62 = v61[5];
      uint64_t v63 = (void *)((char *)a1 + v62);
      uint64_t v64 = (void *)((char *)a2 + v62);
      uint64_t v65 = v64[1];
      *uint64_t v63 = *v64;
      v63[1] = v65;
      *((unsigned char *)a1 + v61[6]) = *((unsigned char *)a2 + v61[6]);
      uint64_t v66 = v61[7];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      uint64_t v69 = sub_24EA93DE0();
      uint64_t v70 = *(void *)(v69 - 8);
      double v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
      swift_bridgeObjectRetain();
      if (v71(v68, 1, v69))
      {
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v67, v68, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      uint64_t v76 = type metadata accessor for FetchedImageAsset();
      *(_OWORD *)((char *)a1 + *(int *)(v76 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v76 + 20));
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      *(_OWORD *)((char *)a1 + *(int *)(v77 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v77 + 48));
LABEL_32:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithCopy for DynamicImageAssetAction(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EA37294((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_24EA93EB0();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(a1, a2, v6);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        uint64_t v25 = (int *)type metadata accessor for ImageAsset();
        uint64_t v26 = v25[5];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        *uint64_t v27 = *v28;
        v27[1] = v28[1];
        a1[v25[6]] = a2[v25[6]];
        uint64_t v29 = v25[7];
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        uint64_t v32 = sub_24EA93DE0();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v34 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48);
        swift_bridgeObjectRetain();
        if (v34(v31, 1, v32))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v33 + 16))(v30, v31, v32);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
        *(_OWORD *)&a1[*(int *)(v69 + 48)] = *(_OWORD *)&a2[*(int *)(v69 + 48)];
        goto LABEL_33;
      case 1u:
        uint64_t v9 = sub_24EA93EB0();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        uint64_t v36 = (int *)type metadata accessor for ImageAsset();
        uint64_t v37 = v36[5];
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        *uint64_t v38 = *v39;
        v38[1] = v39[1];
        a1[v36[6]] = a2[v36[6]];
        uint64_t v40 = v36[7];
        uint64_t v41 = &a1[v40];
        uint64_t v42 = &a2[v40];
        uint64_t v43 = sub_24EA93DE0();
        uint64_t v44 = *(void *)(v43 - 8);
        uint64_t v45 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v44 + 48);
        swift_bridgeObjectRetain();
        if (v45(v42, 1, v43))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 16))(v41, v42, v43);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
        *(_OWORD *)&a1[*(int *)(v70 + 48)] = *(_OWORD *)&a2[*(int *)(v70 + 48)];
        goto LABEL_33;
      case 2u:
        uint64_t v12 = sub_24EA93EB0();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        double v47 = (int *)type metadata accessor for ImageAsset();
        uint64_t v48 = v47[5];
        uint64_t v49 = &a1[v48];
        uint64_t v50 = &a2[v48];
        *uint64_t v49 = *v50;
        v49[1] = v50[1];
        a1[v47[6]] = a2[v47[6]];
        uint64_t v51 = v47[7];
        uint64_t v52 = &a1[v51];
        uint64_t v53 = &a2[v51];
        uint64_t v54 = sub_24EA93DE0();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v56 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v55 + 48);
        swift_bridgeObjectRetain();
        if (v56(v53, 1, v54))
        {
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v55 + 16))(v52, v53, v54);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
        a1[*(int *)(v71 + 48)] = a2[*(int *)(v71 + 48)];
        *(_OWORD *)&a1[*(int *)(v71 + 64)] = *(_OWORD *)&a2[*(int *)(v71 + 64)];
        goto LABEL_33;
      case 3u:
      case 5u:
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v18 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
        uint64_t v19 = v18[6];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        uint64_t v22 = sub_24EA93FA0();
        uint64_t v23 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 16);
        v23(v20, v21, v22);
        a1[v18[7]] = a2[v18[7]];
        v23(&a1[v18[8]], &a2[v18[8]], v22);
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
        *(_OWORD *)&a1[*(int *)(v24 + 48)] = *(_OWORD *)&a2[*(int *)(v24 + 48)];
        goto LABEL_33;
      case 4u:
        uint64_t v15 = sub_24EA93EB0();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        uint64_t v58 = (int *)type metadata accessor for ImageAsset();
        uint64_t v59 = v58[5];
        uint64_t v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        *uint64_t v60 = *v61;
        v60[1] = v61[1];
        a1[v58[6]] = a2[v58[6]];
        uint64_t v62 = v58[7];
        uint64_t v63 = &a1[v62];
        uint64_t v64 = &a2[v62];
        uint64_t v65 = sub_24EA93DE0();
        uint64_t v66 = *(void *)(v65 - 8);
        uint64_t v67 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v66 + 48);
        swift_bridgeObjectRetain();
        if (v67(v64, 1, v65))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 16))(v63, v64, v65);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        uint64_t v72 = type metadata accessor for FetchedImageAsset();
        *(_OWORD *)&a1[*(int *)(v72 + 20)] = *(_OWORD *)&a2[*(int *)(v72 + 20)];
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
        *(_OWORD *)&a1[*(int *)(v73 + 48)] = *(_OWORD *)&a2[*(int *)(v73 + 48)];
LABEL_33:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24EA37294(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_WORD *initializeWithTake for DynamicImageAssetAction(_WORD *a1, _WORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24EA93EB0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v25 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)((char *)a1 + v25[5]) = *(_OWORD *)((char *)a2 + v25[5]);
      *((unsigned char *)a1 + v25[6]) = *((unsigned char *)a2 + v25[6]);
      uint64_t v26 = v25[7];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_24EA93DE0();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)((char *)a1 + *(int *)(v53 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v53 + 48));
      goto LABEL_32;
    case 1u:
      uint64_t v9 = sub_24EA93EB0();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v32 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)((char *)a1 + v32[5]) = *(_OWORD *)((char *)a2 + v32[5]);
      *((unsigned char *)a1 + v32[6]) = *((unsigned char *)a2 + v32[6]);
      uint64_t v33 = v32[7];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_24EA93DE0();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      *(_OWORD *)((char *)a1 + *(int *)(v54 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v54 + 48));
      goto LABEL_32;
    case 2u:
      uint64_t v12 = sub_24EA93EB0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v13 + 32))(a1, a2, v12);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      uint64_t v39 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)((char *)a1 + v39[5]) = *(_OWORD *)((char *)a2 + v39[5]);
      *((unsigned char *)a1 + v39[6]) = *((unsigned char *)a2 + v39[6]);
      uint64_t v40 = v39[7];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      uint64_t v43 = sub_24EA93DE0();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
      *((unsigned char *)a1 + *(int *)(v55 + 48)) = *((unsigned char *)a2 + *(int *)(v55 + 48));
      *(_OWORD *)((char *)a1 + *(int *)(v55 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v55 + 64));
      goto LABEL_32;
    case 3u:
    case 5u:
    case 6u:
      *a1 = *a2;
      uint64_t v18 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
      uint64_t v19 = v18[6];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_24EA93FA0();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      *((unsigned char *)a1 + v18[7]) = *((unsigned char *)a2 + v18[7]);
      v23((char *)a1 + v18[8], (char *)a2 + v18[8], v22);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
      *(_OWORD *)((char *)a1 + *(int *)(v24 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 48));
      goto LABEL_32;
    case 4u:
      uint64_t v15 = sub_24EA93EB0();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v16 + 32))(a1, a2, v15);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
      uint64_t v46 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)((char *)a1 + v46[5]) = *(_OWORD *)((char *)a2 + v46[5]);
      *((unsigned char *)a1 + v46[6]) = *((unsigned char *)a2 + v46[6]);
      uint64_t v47 = v46[7];
      uint64_t v48 = (char *)a1 + v47;
      uint64_t v49 = (char *)a2 + v47;
      uint64_t v50 = sub_24EA93DE0();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      uint64_t v56 = type metadata accessor for FetchedImageAsset();
      *(_OWORD *)((char *)a1 + *(int *)(v56 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v56 + 20));
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      *(_OWORD *)((char *)a1 + *(int *)(v57 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v57 + 48));
LABEL_32:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_WORD *assignWithTake for DynamicImageAssetAction(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EA37294((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_24EA93EB0();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(_WORD *, _WORD *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        uint64_t v25 = (int *)type metadata accessor for ImageAsset();
        *(_OWORD *)((char *)a1 + v25[5]) = *(_OWORD *)((char *)a2 + v25[5]);
        *((unsigned char *)a1 + v25[6]) = *((unsigned char *)a2 + v25[6]);
        uint64_t v26 = v25[7];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = sub_24EA93DE0();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
        *(_OWORD *)((char *)a1 + *(int *)(v53 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v53 + 48));
        goto LABEL_33;
      case 1u:
        uint64_t v9 = sub_24EA93EB0();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(_WORD *, _WORD *, uint64_t))(v10 + 32))(a1, a2, v9);
          (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        uint64_t v32 = (int *)type metadata accessor for ImageAsset();
        *(_OWORD *)((char *)a1 + v32[5]) = *(_OWORD *)((char *)a2 + v32[5]);
        *((unsigned char *)a1 + v32[6]) = *((unsigned char *)a2 + v32[6]);
        uint64_t v33 = v32[7];
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_24EA93DE0();
        uint64_t v37 = *(void *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
        *(_OWORD *)((char *)a1 + *(int *)(v54 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v54 + 48));
        goto LABEL_33;
      case 2u:
        uint64_t v12 = sub_24EA93EB0();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(_WORD *, _WORD *, uint64_t))(v13 + 32))(a1, a2, v12);
          (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v39 = (int *)type metadata accessor for ImageAsset();
        *(_OWORD *)((char *)a1 + v39[5]) = *(_OWORD *)((char *)a2 + v39[5]);
        *((unsigned char *)a1 + v39[6]) = *((unsigned char *)a2 + v39[6]);
        uint64_t v40 = v39[7];
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        uint64_t v43 = sub_24EA93DE0();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
        {
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
        *((unsigned char *)a1 + *(int *)(v55 + 48)) = *((unsigned char *)a2 + *(int *)(v55 + 48));
        *(_OWORD *)((char *)a1 + *(int *)(v55 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v55 + 64));
        goto LABEL_33;
      case 3u:
      case 5u:
      case 6u:
        *a1 = *a2;
        uint64_t v18 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
        uint64_t v19 = v18[6];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_24EA93FA0();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
        v23(v20, v21, v22);
        *((unsigned char *)a1 + v18[7]) = *((unsigned char *)a2 + v18[7]);
        v23((char *)a1 + v18[8], (char *)a2 + v18[8], v22);
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
        *(_OWORD *)((char *)a1 + *(int *)(v24 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 48));
        goto LABEL_33;
      case 4u:
        uint64_t v15 = sub_24EA93EB0();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(_WORD *, _WORD *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        uint64_t v46 = (int *)type metadata accessor for ImageAsset();
        *(_OWORD *)((char *)a1 + v46[5]) = *(_OWORD *)((char *)a2 + v46[5]);
        *((unsigned char *)a1 + v46[6]) = *((unsigned char *)a2 + v46[6]);
        uint64_t v47 = v46[7];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_24EA93DE0();
        uint64_t v51 = *(void *)(v50 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
        {
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
          memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
        }
        uint64_t v56 = type metadata accessor for FetchedImageAsset();
        *(_OWORD *)((char *)a1 + *(int *)(v56 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v56 + 20));
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
        *(_OWORD *)((char *)a1 + *(int *)(v57 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v57 + 48));
LABEL_33:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicImageAssetAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for DynamicImageAssetAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24EA38954()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24EA38964()
{
  uint64_t result = type metadata accessor for ImageAsset();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v11 = &v10;
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v9;
    swift_getTupleTypeLayout3();
    uint64_t v13 = &v8;
    uint64_t result = type metadata accessor for DynamicArtworkLayoutEnvironment();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v14 = &v7;
      uint64_t result = type metadata accessor for FetchedImageAsset();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v15 = &v6;
        swift_getTupleTypeLayout2();
        uint64_t v16 = &v5;
        swift_getTupleTypeLayout2();
        uint64_t v17 = &v4;
        uint64_t v18 = &unk_24EA95EF8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicImageAssetAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DynamicImageAssetAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA38C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.CodingKeys()
{
  return &type metadata for DynamicImageAssetAction.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.CachedImageAssetLoadFailedCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.CachedImageAssetLoadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.FetchImageAssetCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.FetchImageAssetCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DynamicImageAssetAction.ImageAssetLoadFailedCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA38DACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.ImageAssetLoadFailedCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.ImageAssetLoadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.LayoutEnvironmentChangedCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.LayoutEnvironmentChangedCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.LoadedCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.LoadedCodingKeys;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.UpdatePreferredArtworkCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.UpdatePreferredArtworkCodingKeys;
}

unsigned char *_s12FitnessAsset23DynamicImageAssetActionO36CachedImageAssetLoadFailedCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA38EE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.ViewAppearedCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.ViewAppearedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DynamicImageAssetAction.ViewSizeChangedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EA38FB4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImageAssetAction.ViewSizeChangedCodingKeys()
{
  return &type metadata for DynamicImageAssetAction.ViewSizeChangedCodingKeys;
}

unint64_t sub_24EA38FF0()
{
  unint64_t result = qword_269929350;
  if (!qword_269929350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929350);
  }
  return result;
}

unint64_t sub_24EA39048()
{
  unint64_t result = qword_269929358;
  if (!qword_269929358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929358);
  }
  return result;
}

unint64_t sub_24EA390A0()
{
  unint64_t result = qword_269929360;
  if (!qword_269929360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929360);
  }
  return result;
}

unint64_t sub_24EA390F8()
{
  unint64_t result = qword_269929368;
  if (!qword_269929368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929368);
  }
  return result;
}

unint64_t sub_24EA39150()
{
  unint64_t result = qword_269929370;
  if (!qword_269929370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929370);
  }
  return result;
}

unint64_t sub_24EA391A8()
{
  unint64_t result = qword_269929378;
  if (!qword_269929378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929378);
  }
  return result;
}

unint64_t sub_24EA39200()
{
  unint64_t result = qword_269929380;
  if (!qword_269929380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929380);
  }
  return result;
}

unint64_t sub_24EA39258()
{
  unint64_t result = qword_269929388;
  if (!qword_269929388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929388);
  }
  return result;
}

unint64_t sub_24EA392B0()
{
  unint64_t result = qword_269929390;
  if (!qword_269929390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929390);
  }
  return result;
}

unint64_t sub_24EA39308()
{
  unint64_t result = qword_269929398;
  if (!qword_269929398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929398);
  }
  return result;
}

unint64_t sub_24EA39360()
{
  unint64_t result = qword_2699293A0;
  if (!qword_2699293A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293A0);
  }
  return result;
}

unint64_t sub_24EA393B8()
{
  unint64_t result = qword_2699293A8;
  if (!qword_2699293A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293A8);
  }
  return result;
}

unint64_t sub_24EA39410()
{
  unint64_t result = qword_2699293B0;
  if (!qword_2699293B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293B0);
  }
  return result;
}

unint64_t sub_24EA39468()
{
  unint64_t result = qword_2699293B8;
  if (!qword_2699293B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293B8);
  }
  return result;
}

unint64_t sub_24EA394C0()
{
  unint64_t result = qword_2699293C0;
  if (!qword_2699293C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293C0);
  }
  return result;
}

unint64_t sub_24EA39518()
{
  unint64_t result = qword_2699293C8;
  if (!qword_2699293C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293C8);
  }
  return result;
}

unint64_t sub_24EA39570()
{
  unint64_t result = qword_2699293D0;
  if (!qword_2699293D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293D0);
  }
  return result;
}

unint64_t sub_24EA395C8()
{
  unint64_t result = qword_2699293D8;
  if (!qword_2699293D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293D8);
  }
  return result;
}

unint64_t sub_24EA39620()
{
  unint64_t result = qword_2699293E0;
  if (!qword_2699293E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293E0);
  }
  return result;
}

unint64_t sub_24EA39678()
{
  unint64_t result = qword_2699293E8;
  if (!qword_2699293E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293E8);
  }
  return result;
}

unint64_t sub_24EA396D0()
{
  unint64_t result = qword_2699293F0;
  if (!qword_2699293F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293F0);
  }
  return result;
}

unint64_t sub_24EA39728()
{
  unint64_t result = qword_2699293F8;
  if (!qword_2699293F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699293F8);
  }
  return result;
}

unint64_t sub_24EA39780()
{
  unint64_t result = qword_269929400;
  if (!qword_269929400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929400);
  }
  return result;
}

unint64_t sub_24EA397D8()
{
  unint64_t result = qword_269929408;
  if (!qword_269929408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929408);
  }
  return result;
}

unint64_t sub_24EA39830()
{
  unint64_t result = qword_269929410;
  if (!qword_269929410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929410);
  }
  return result;
}

unint64_t sub_24EA39888()
{
  unint64_t result = qword_269929418;
  if (!qword_269929418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929418);
  }
  return result;
}

unint64_t sub_24EA398E0()
{
  unint64_t result = qword_269929420;
  if (!qword_269929420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929420);
  }
  return result;
}

uint64_t sub_24EA39934(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7373416567616D69 && a2 == 0xEA00000000007465;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EA39A18(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x800000024EA9A900 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616D496863746566 && a2 == 0xEF74657373416567 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EA9A920 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024EA9A940 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EA9A960 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657A695377656976 && a2 == 0xEF6465676E616843)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_24EA39D64(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EA39E28(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7373416567616D69 && a2 == 0xEA00000000007465;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EA39F60(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4164656863746566 && a2 == 0xEC00000074657373;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EA3A04C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000024EA9A980 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EA3A12C(uint64_t a1, uint64_t a2)
{
  if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EA3A1A4()
{
  return 1702521203;
}

uint64_t sub_24EA3A1B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA3A234(char a1)
{
  return *(void *)&aViewappeavatar[8 * a1];
}

uint64_t sub_24EA3A258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA3C8B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EA3A284(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AB90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3A2C0(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AB90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA3A2FC()
{
  return sub_24EA3A234(*v0);
}

uint64_t sub_24EA3A304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA3C934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA3A32C(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AA1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3A368(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AA1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA3A3A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24EA3A3D4(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AAD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3A410(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AAD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA3A44C(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AD30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3A488(uint64_t a1)
{
  unint64_t v2 = sub_24EA3AD30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MonogramAction.encode(to:)(void *a1)
{
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929430);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v29 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929438);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v30 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v28 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929440);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MonogramAction();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929448);
  uint64_t v13 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA3AA1C();
  sub_24EA94C00();
  sub_24EA3AA70(v35, (uint64_t)v12);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v35 = v4;
  int v17 = v16(v12, 2, v4);
  if (v17)
  {
    if (v17 == 1)
    {
      char v37 = 0;
      sub_24EA3AD30();
      uint64_t v18 = v36;
      sub_24EA94A70();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v18);
    }
    else
    {
      char v39 = 2;
      sub_24EA3AAD4();
      uint64_t v24 = v29;
      uint64_t v25 = v36;
      sub_24EA94A70();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v25);
    }
  }
  else
  {
    uint64_t v20 = v28;
    sub_24EA3AB28((uint64_t)v12, v28);
    char v38 = 1;
    sub_24EA3AB90();
    uint64_t v21 = v30;
    uint64_t v22 = v36;
    sub_24EA94A70();
    sub_24EA3B4E4(&qword_269929468);
    uint64_t v23 = v34;
    sub_24EA94AB0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v23);
    sub_24EA3ACD0(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v22);
  }
}

uint64_t type metadata accessor for MonogramAction()
{
  uint64_t result = qword_2699294C0;
  if (!qword_2699294C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EA3AA1C()
{
  unint64_t result = qword_269929450;
  if (!qword_269929450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929450);
  }
  return result;
}

uint64_t sub_24EA3AA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MonogramAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EA3AAD4()
{
  unint64_t result = qword_269929458;
  if (!qword_269929458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929458);
  }
  return result;
}

uint64_t sub_24EA3AB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EA3AB90()
{
  unint64_t result = qword_269929460;
  if (!qword_269929460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929460);
  }
  return result;
}

uint64_t sub_24EA3ABE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Monogram();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EA3AC28()
{
  unint64_t result = qword_269929480;
  if (!qword_269929480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929480);
  }
  return result;
}

unint64_t sub_24EA3AC7C()
{
  unint64_t result = qword_269929488;
  if (!qword_269929488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929488);
  }
  return result;
}

uint64_t sub_24EA3ACD0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24EA3AD30()
{
  unint64_t result = qword_269929490;
  if (!qword_269929490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929490);
  }
  return result;
}

uint64_t MonogramAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929498);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699294A0);
  uint64_t v43 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v47 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699294A8);
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699294B0);
  uint64_t v46 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MonogramAction();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = a1[3];
  uint64_t v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24EA3AA1C();
  uint64_t v18 = v49;
  sub_24EA94BF0();
  if (!v18)
  {
    uint64_t v19 = v7;
    uint64_t v49 = v13;
    uint64_t v20 = v47;
    uint64_t v21 = sub_24EA94A50();
    uint64_t v22 = (char *)v21;
    if (*(void *)(v21 + 16) == 1)
    {
      if (*(unsigned char *)(v21 + 32))
      {
        if (*(unsigned char *)(v21 + 32) == 1)
        {
          char v51 = 1;
          sub_24EA3AB90();
          uint64_t v23 = v20;
          sub_24EA949F0();
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
          uint64_t v45 = v22;
          uint64_t v25 = v24;
          sub_24EA3B4E4(&qword_2699294B8);
          uint64_t v26 = (uint64_t)v49;
          uint64_t v27 = v39;
          sub_24EA94A40();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v27);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v8);
          uint64_t v28 = (uint64_t)v48;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v26, 0, 2, v25);
          sub_24EA3B480(v26, (uint64_t)v16);
LABEL_12:
          sub_24EA3B480((uint64_t)v16, v44);
          return __swift_destroy_boxed_opaque_existential_1(v28);
        }
        char v52 = 2;
        sub_24EA3AAD4();
        uint64_t v35 = v45;
        sub_24EA949F0();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v8);
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v16, 2, 2, v37);
      }
      else
      {
        char v50 = 0;
        sub_24EA3AD30();
        sub_24EA949F0();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v38);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v8);
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v16, 1, 2, v34);
      }
      uint64_t v28 = (uint64_t)v48;
      goto LABEL_12;
    }
    uint64_t v29 = sub_24EA94910();
    swift_allocError();
    uint64_t v30 = v10;
    uint64_t v31 = v8;
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269928F08);
    uint64_t *v33 = v11;
    sub_24EA94A00();
    sub_24EA94900();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v31);
  }
  uint64_t v28 = (uint64_t)v48;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_24EA3B480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MonogramAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA3B4E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFF70);
    sub_24EA3ABE4(&qword_269929470);
    sub_24EA3ABE4(&qword_269929478);
    sub_24EA3AC28();
    sub_24EA3AC7C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA3B5A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MonogramAction.init(from:)(a1, a2);
}

uint64_t sub_24EA3B5C0(void *a1)
{
  return MonogramAction.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MonogramAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_24EA93DA0();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for MonogramAction(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (!result)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v5 = sub_24EA93DA0();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(v4, v5);
    }
  }
  return result;
}

void *initializeWithCopy for MonogramAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_24EA93DA0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for MonogramAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_24EA3ACD0((uint64_t)a1);
      if (!swift_getEnumCaseMultiPayload())
      {
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v18 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_24EA93DA0();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v11 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_24EA3ACD0((uint64_t)a1);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    *a1 = *a2;
    a1[1] = a2[1];
    uint64_t v12 = *(int *)(type metadata accessor for Monogram() + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_24EA93DA0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

_OWORD *initializeWithTake for MonogramAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for Monogram() + 20);
      int v9 = (char *)a1 + v8;
      int v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24EA93DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

_OWORD *assignWithTake for MonogramAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_24EA3ACD0((uint64_t)a1);
      if (!swift_getEnumCaseMultiPayload())
      {
        *a1 = *a2;
        uint64_t v17 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_24EA93DA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v11 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_24EA3ACD0((uint64_t)a1);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v12 = *(int *)(type metadata accessor for Monogram() + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_24EA93DA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonogramAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA3C080);
}

uint64_t sub_24EA3C080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MonogramAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA3C104);
}

uint64_t sub_24EA3C104(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_24EA3C18C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_24EA3C1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

void sub_24EA3C26C()
{
  sub_24EA3C2E4();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

void sub_24EA3C2E4()
{
  if (!qword_26B1CFF78)
  {
    type metadata accessor for Monogram();
    sub_24EA2BD9C();
    unint64_t v0 = sub_24EA94BC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1CFF78);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MonogramAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA3C41CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramAction.CodingKeys()
{
  return &type metadata for MonogramAction.CodingKeys;
}

ValueMetadata *type metadata accessor for MonogramAction.ViewAppearedCodingKeys()
{
  return &type metadata for MonogramAction.ViewAppearedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MonogramAction.AvatarFetchedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EA3C500);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramAction.AvatarFetchedCodingKeys()
{
  return &type metadata for MonogramAction.AvatarFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for MonogramAction.FetchAvatarCodingKeys()
{
  return &type metadata for MonogramAction.FetchAvatarCodingKeys;
}

unint64_t sub_24EA3C54C()
{
  unint64_t result = qword_2699294D0;
  if (!qword_2699294D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699294D0);
  }
  return result;
}

unint64_t sub_24EA3C5A4()
{
  unint64_t result = qword_2699294D8;
  if (!qword_2699294D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699294D8);
  }
  return result;
}

unint64_t sub_24EA3C5FC()
{
  unint64_t result = qword_2699294E0;
  if (!qword_2699294E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699294E0);
  }
  return result;
}

unint64_t sub_24EA3C654()
{
  unint64_t result = qword_2699294E8;
  if (!qword_2699294E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699294E8);
  }
  return result;
}

unint64_t sub_24EA3C6AC()
{
  unint64_t result = qword_2699294F0;
  if (!qword_2699294F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699294F0);
  }
  return result;
}

unint64_t sub_24EA3C704()
{
  unint64_t result = qword_2699294F8;
  if (!qword_2699294F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699294F8);
  }
  return result;
}

unint64_t sub_24EA3C75C()
{
  unint64_t result = qword_269929500;
  if (!qword_269929500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929500);
  }
  return result;
}

unint64_t sub_24EA3C7B4()
{
  unint64_t result = qword_269929508;
  if (!qword_269929508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929508);
  }
  return result;
}

unint64_t sub_24EA3C80C()
{
  unint64_t result = qword_269929510;
  if (!qword_269929510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929510);
  }
  return result;
}

unint64_t sub_24EA3C864()
{
  unint64_t result = qword_269929518;
  if (!qword_269929518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929518);
  }
  return result;
}

uint64_t sub_24EA3C8B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EA3C928()
{
  return 12383;
}

uint64_t sub_24EA3C934(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6570704177656976 && a2 == 0xEC00000064657261;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6546726174617661 && a2 == 0xED00006465686374 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6176416863746566 && a2 == 0xEB00000000726174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t MonogramState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA3CAC4(v1, a1);
}

uint64_t sub_24EA3CAC4(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for MonogramLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t MonogramState.loadState.setter(uint64_t a1)
{
  return sub_24EA3CB30(a1, v1);
}

uint64_t sub_24EA3CB30(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for MonogramLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*MonogramState.loadState.modify())()
{
  return nullsub_1;
}

uint64_t MonogramState.init(loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EA3D124(a1, a2, (uint64_t (*)(void))type metadata accessor for MonogramLoadState);
}

uint64_t sub_24EA3CBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA3E4B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EA3CC14(uint64_t a1)
{
  unint64_t v2 = sub_24EA3CDEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3CC50(uint64_t a1)
{
  unint64_t v2 = sub_24EA3CDEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MonogramState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929520);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA3CDEC();
  sub_24EA94C00();
  type metadata accessor for MonogramLoadState();
  sub_24EA3D0E0(&qword_269929530);
  sub_24EA94AB0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24EA3CDEC()
{
  unint64_t result = qword_269929528;
  if (!qword_269929528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929528);
  }
  return result;
}

uint64_t MonogramState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t State = type metadata accessor for MonogramLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929538);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MonogramState();
  MEMORY[0x270FA5388](v9 - 8);
  size_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA3CDEC();
  sub_24EA94BF0();
  if (!v2)
  {
    sub_24EA3D0E0(&qword_269929540);
    sub_24EA94A40();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_24EA3D124(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MonogramLoadState);
    sub_24EA3D124((uint64_t)v11, v13, (uint64_t (*)(void))type metadata accessor for MonogramState);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for MonogramState()
{
  uint64_t result = qword_269929548;
  if (!qword_269929548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EA3D0E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MonogramLoadState();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA3D124(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA3D18C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MonogramState.init(from:)(a1, a2);
}

uint64_t sub_24EA3D1A4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929520);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA3CDEC();
  sub_24EA94C00();
  type metadata accessor for MonogramLoadState();
  sub_24EA3D0E0(&qword_269929530);
  sub_24EA94AB0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t *initializeBufferWithCopyOfBuffer for MonogramState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for MonogramLoadState() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v21 = (char *)a1 + v12;
        uint64_t v13 = (char *)a2 + v12;
        uint64_t v14 = sub_24EA93DA0();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v21, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v16 = *(int *)(v7 + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_24EA93E40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for MonogramLoadState(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (!swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v5 = sub_24EA93DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
    uint64_t v6 = a1 + *(int *)(v2 + 48);
    uint64_t v7 = sub_24EA93E40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  return result;
}

void *initializeWithCopy for MonogramState(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, v4))
  {
    uint64_t State = type metadata accessor for MonogramLoadState();
    memcpy(a1, a2, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v18 = (char *)a1 + v9;
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = sub_24EA93DA0();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v18, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v13 = *(int *)(v4 + 48);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_24EA93E40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, v4);
  }
  return a1;
}

void *assignWithCopy for MonogramState(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 2, v4);
  int v8 = v6(a2, 2, v4);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v12 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v30 = (char *)a1 + v12;
        uint64_t v13 = (char *)a2 + v12;
        uint64_t v14 = sub_24EA93DA0();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v30, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v16 = *(int *)(v4 + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_24EA93E40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, v4);
      return a1;
    }
LABEL_7:
    uint64_t State = type metadata accessor for MonogramLoadState();
    memcpy(a1, a2, *(void *)(*(void *)(State - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_24EA21258((uint64_t)a1, (uint64_t *)&unk_26B1CFF80);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_24EA21258((uint64_t)a1, &qword_26B1CFF70);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v20 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_24EA93DA0();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v25 = *(int *)(v4 + 48);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_24EA93E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

_OWORD *initializeWithTake for MonogramState(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 2, v4))
  {
    uint64_t State = type metadata accessor for MonogramLoadState();
    memcpy(a1, a2, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24EA93DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v12 = *(int *)(v4 + 48);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_24EA93E40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, v4);
  }
  return a1;
}

_OWORD *assignWithTake for MonogramState(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 2, v4);
  int v8 = v6(a2, 2, v4);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v12 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_24EA93DA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v16 = *(int *)(v4 + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_24EA93E40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, v4);
      return a1;
    }
LABEL_7:
    uint64_t State = type metadata accessor for MonogramLoadState();
    memcpy(a1, a2, *(void *)(*(void *)(State - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_24EA21258((uint64_t)a1, (uint64_t *)&unk_26B1CFF80);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_24EA21258((uint64_t)a1, &qword_26B1CFF70);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v20 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_24EA93DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v24 = *(int *)(v4 + 48);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_24EA93E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonogramState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA3E160);
}

uint64_t sub_24EA3E160(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for MonogramLoadState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 48);
  return v5(a1, a2, State);
}

uint64_t storeEnumTagSinglePayload for MonogramState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA3E1E0);
}

uint64_t sub_24EA3E1E0(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for MonogramLoadState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56);
  return v5(a1, a2, a2, State);
}

uint64_t sub_24EA3E250()
{
  uint64_t result = type metadata accessor for MonogramLoadState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MonogramState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EA3E378);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramState.CodingKeys()
{
  return &type metadata for MonogramState.CodingKeys;
}

unint64_t sub_24EA3E3B4()
{
  unint64_t result = qword_269929558;
  if (!qword_269929558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929558);
  }
  return result;
}

unint64_t sub_24EA3E40C()
{
  unint64_t result = qword_269929560;
  if (!qword_269929560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929560);
  }
  return result;
}

unint64_t sub_24EA3E464()
{
  unint64_t result = qword_269929568;
  if (!qword_269929568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929568);
  }
  return result;
}

uint64_t sub_24EA3E4B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EA3E548()
{
  return 0x7461745364616F6CLL;
}

BOOL static MonogramError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MonogramError.hash(into:)()
{
  return sub_24EA94B80();
}

uint64_t sub_24EA3E5A4(char a1)
{
  if (!a1) {
    return 0x41676E697373696DLL;
  }
  if (a1 == 1) {
    return 0x656D614E6F6ELL;
  }
  return 0xD000000000000010;
}

uint64_t sub_24EA3E608()
{
  return sub_24EA3E5A4(*v0);
}

uint64_t sub_24EA3E610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA3F7C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA3E638(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EB7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3E674(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EB7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA3E6B0(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EC78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3E6EC(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EC78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA3E728(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EC24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3E764(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EC24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA3E7A0(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EBD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA3E7DC(uint64_t a1)
{
  unint64_t v2 = sub_24EA3EBD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MonogramError.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929570);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929578);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929580);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929588);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA3EB7C();
  sub_24EA94C00();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24EA3EC24();
      sub_24EA94A70();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24EA3EBD0();
      uint64_t v17 = v23;
      sub_24EA94A70();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24EA3EC78();
    sub_24EA94A70();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24EA3EB7C()
{
  unint64_t result = qword_269929590;
  if (!qword_269929590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929590);
  }
  return result;
}

unint64_t sub_24EA3EBD0()
{
  unint64_t result = qword_269929598;
  if (!qword_269929598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929598);
  }
  return result;
}

unint64_t sub_24EA3EC24()
{
  unint64_t result = qword_2699295A0;
  if (!qword_2699295A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295A0);
  }
  return result;
}

unint64_t sub_24EA3EC78()
{
  unint64_t result = qword_2699295A8;
  if (!qword_2699295A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295A8);
  }
  return result;
}

uint64_t MonogramError.hashValue.getter()
{
  return sub_24EA94BB0();
}

uint64_t MonogramError.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699295B0);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699295B8);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699295C0);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699295C8);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA3EB7C();
  uint64_t v12 = (uint64_t)v39;
  sub_24EA94BF0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_24EA94A50();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_24EA94910();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269928F08);
    *uint64_t v23 = &type metadata for MonogramError;
    sub_24EA94A00();
    sub_24EA94900();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24EA3EC24();
      uint64_t v18 = v30;
      sub_24EA949F0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24EA3EBD0();
      uint64_t v25 = v30;
      sub_24EA949F0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24EA3EC78();
    uint64_t v24 = v30;
    sub_24EA949F0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_24EA3F2DC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return MonogramError.init(from:)(a1, a2);
}

uint64_t sub_24EA3F2F4(void *a1)
{
  return MonogramError.encode(to:)(a1);
}

unint64_t sub_24EA3F310()
{
  unint64_t result = qword_2699295D0;
  if (!qword_2699295D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramError()
{
  return &type metadata for MonogramError;
}

unsigned char *_s12FitnessAsset13MonogramErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA3F448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramError.CodingKeys()
{
  return &type metadata for MonogramError.CodingKeys;
}

ValueMetadata *type metadata accessor for MonogramError.MissingAltDSIDCodingKeys()
{
  return &type metadata for MonogramError.MissingAltDSIDCodingKeys;
}

ValueMetadata *type metadata accessor for MonogramError.NoNameCodingKeys()
{
  return &type metadata for MonogramError.NoNameCodingKeys;
}

ValueMetadata *type metadata accessor for MonogramError.NoProfilePictureCodingKeys()
{
  return &type metadata for MonogramError.NoProfilePictureCodingKeys;
}

unint64_t sub_24EA3F4B4()
{
  unint64_t result = qword_2699295D8;
  if (!qword_2699295D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295D8);
  }
  return result;
}

unint64_t sub_24EA3F50C()
{
  unint64_t result = qword_2699295E0;
  if (!qword_2699295E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295E0);
  }
  return result;
}

unint64_t sub_24EA3F564()
{
  unint64_t result = qword_2699295E8;
  if (!qword_2699295E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295E8);
  }
  return result;
}

unint64_t sub_24EA3F5BC()
{
  unint64_t result = qword_2699295F0;
  if (!qword_2699295F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295F0);
  }
  return result;
}

unint64_t sub_24EA3F614()
{
  unint64_t result = qword_2699295F8;
  if (!qword_2699295F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699295F8);
  }
  return result;
}

unint64_t sub_24EA3F66C()
{
  unint64_t result = qword_269929600;
  if (!qword_269929600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929600);
  }
  return result;
}

unint64_t sub_24EA3F6C4()
{
  unint64_t result = qword_269929608;
  if (!qword_269929608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929608);
  }
  return result;
}

unint64_t sub_24EA3F71C()
{
  unint64_t result = qword_269929610;
  if (!qword_269929610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929610);
  }
  return result;
}

unint64_t sub_24EA3F774()
{
  unint64_t result = qword_269929618;
  if (!qword_269929618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929618);
  }
  return result;
}

uint64_t sub_24EA3F7C8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x41676E697373696DLL && a2 == 0xEE0044495344746CLL;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6F6ELL && a2 == 0xE600000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EA9A9A0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

ValueMetadata *type metadata accessor for ImageAssetConstants()
{
  return &type metadata for ImageAssetConstants;
}

void sub_24EA3F92C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  objc_msgSend(v0, sel_setCountLimit_, 0);
  objc_msgSend(v0, sel_baf_setEvictsObjectsWhenApplicationEntersBackground_, 0);

  qword_269931C40 = (uint64_t)v0;
}

uint64_t MonogramFeature.init(environment:fetcher:)@<X0>(_OWORD *a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X8>)
{
  long long v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  a3[2] = a1[2];
  return sub_24EA3F9B8(a2, (uint64_t)(a3 + 3));
}

uint64_t sub_24EA3F9B8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t MonogramFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, unint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v120 = a3;
  unint64_t v122 = a2;
  uint64_t v113 = a1;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929620);
  uint64_t v121 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v117 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v116 = (char *)&v105 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v114 = (char *)&v105 - v9;
  uint64_t v112 = sub_24EA93E40();
  uint64_t v111 = *(void (***)(char *, char *, uint64_t))(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v110 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v115 = (char *)&v105 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v105 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v105 - v21;
  uint64_t State = type metadata accessor for MonogramLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v25 = (char *)&v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v105 - v27;
  uint64_t v29 = type metadata accessor for MonogramAction();
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v105 - v33;
  sub_24EA43A2C(a4, (uint64_t)&v105 - v33, (uint64_t (*)(void))type metadata accessor for MonogramAction);
  uint64_t v35 = v14;
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v34, 2, v13);
  if (!v36)
  {
    sub_24EA3AB28((uint64_t)v34, (uint64_t)v16);
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
    sub_24EA406C0((uint64_t)v16, (uint64_t)v25);
    sub_24EA93E30();
    sub_24EA3ACD0((uint64_t)v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v25, 0, 2, v78);
    return sub_24EA3CB30((uint64_t)v25, v122);
  }
  if (v36 != 1)
  {
    unint64_t v79 = v122;
    sub_24EA43A94(v122, (uint64_t (*)(void))type metadata accessor for MonogramLoadState);
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 2, 2, v80);
    uint64_t v81 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
    uint64_t v82 = v117;
    uint64_t v83 = &v117[v81[16]];
    uint64_t v84 = &v117[v81[20]];
    uint64_t v85 = &v117[v81[24]];
    LOBYTE(v123) = 0;
    sub_24EA40728();
    sub_24EA948C0();
    uint64_t v86 = *MEMORY[0x263F39590];
    uint64_t v87 = sub_24EA94510();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 104))(v83, v86, v87);
    sub_24EA42B00(v118, (uint64_t)&v123);
    uint64_t v88 = swift_allocObject();
    long long v89 = v126;
    *(_OWORD *)(v88 + 48) = v125;
    *(_OWORD *)(v88 + 64) = v89;
    *(_OWORD *)(v88 + 80) = v127;
    *(void *)(v88 + 96) = v128;
    long long v90 = v124;
    *(_OWORD *)(v88 + 16) = v123;
    *(_OWORD *)(v88 + 32) = v90;
    *(void *)uint64_t v85 = &unk_269929638;
    *((void *)v85 + 1) = v88;
    sub_24EA94740();
    uint64_t v91 = *MEMORY[0x263F39578];
    uint64_t v92 = sub_24EA94500();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v84, v91, v92);
    uint64_t v93 = v121;
    uint64_t v94 = v119;
    (*(void (**)(char *, void, uint64_t))(v121 + 104))(v82, *MEMORY[0x263F39530], v119);
    uint64_t v67 = v120;
    unint64_t v75 = *v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v75 = sub_24EA43564(0, *(void *)(v75 + 16) + 1, 1, v75, &qword_2699296A8, &qword_269929620);
    }
    unint64_t v96 = *(void *)(v75 + 16);
    unint64_t v95 = *(void *)(v75 + 24);
    if (v96 >= v95 >> 1) {
      unint64_t v75 = sub_24EA43564(v95 > 1, v96 + 1, 1, v75, &qword_2699296A8, &qword_269929620);
    }
    *(void *)(v75 + 16) = v96 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v93 + 32))(v75+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v96, v82, v94);
    goto LABEL_20;
  }
  unint64_t v37 = v122;
  sub_24EA43A2C(v122, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for MonogramLoadState);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v28, 2, v38);
  if (result)
  {
    if (result != 1) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t v97 = &v28[*(int *)(v38 + 48)];
  sub_24EA3AB28((uint64_t)v28, (uint64_t)v22);
  uint64_t v98 = v111;
  uint64_t v99 = v115;
  uint64_t v100 = v112;
  v111[4](v115, v97, v112);
  sub_24EA406C0((uint64_t)v22, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    ((void (*)(char *, uint64_t))v98[1])(v99, v100);
    sub_24EA3ACD0((uint64_t)v22);
    return sub_24EA3ACD0((uint64_t)v19);
  }
  uint64_t v101 = v110;
  sub_24EA93E30();
  sub_24EA93E10();
  double v103 = v102;
  uint64_t v104 = v98[1];
  ((void (*)(char *, uint64_t))v104)(v101, v100);
  ((void (*)(char *, uint64_t))v104)(v115, v100);
  uint64_t result = sub_24EA3ACD0((uint64_t)v22);
  if (v103 > 600.0)
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v31, 2, 2, v13);
    char v40 = v120;
    uint64_t v41 = v118;
    MonogramFeature.reduce(localState:sharedState:sideEffects:action:)(v113, v37, v120, v31);
    sub_24EA43A94((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for MonogramAction);
    char v42 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
    uint64_t v43 = v114;
    uint64_t v44 = &v114[v42[16]];
    uint64_t v45 = &v114[v42[20]];
    uint64_t v46 = &v114[v42[24]];
    LOBYTE(v123) = 1;
    unint64_t v122 = sub_24EA40728();
    sub_24EA948C0();
    uint64_t v47 = *MEMORY[0x263F39580];
    uint64_t v48 = sub_24EA94510();
    uint64_t v49 = *(void *)(v48 - 8);
    char v50 = *(char **)(v49 + 104);
    LODWORD(v117) = v47;
    uint64_t v115 = v50;
    uint64_t v113 = v49 + 104;
    ((void (*)(char *, uint64_t, uint64_t))v50)(v44, v47, v48);
    uint64_t v51 = *MEMORY[0x263F39570];
    uint64_t v52 = sub_24EA94500();
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = *(void (***)(char *, char *, uint64_t))(v53 + 104);
    LODWORD(v112) = v51;
    uint64_t v111 = v54;
    uint64_t v110 = (char *)(v53 + 104);
    ((void (*)(char *, uint64_t, uint64_t))v54)(v45, v51, v52);
    sub_24EA42B00(v41, (uint64_t)&v123);
    uint64_t v55 = swift_allocObject();
    long long v56 = v126;
    *(_OWORD *)(v55 + 48) = v125;
    *(_OWORD *)(v55 + 64) = v56;
    *(_OWORD *)(v55 + 80) = v127;
    *(void *)(v55 + 96) = v128;
    long long v57 = v124;
    *(_OWORD *)(v55 + 16) = v123;
    *(_OWORD *)(v55 + 32) = v57;
    *(void *)uint64_t v46 = &unk_269929648;
    *((void *)v46 + 1) = v55;
    sub_24EA94740();
    uint64_t v58 = v121;
    uint64_t v59 = *(void (**)(void))(v121 + 104);
    unsigned int v109 = *MEMORY[0x263F39530];
    long long v108 = (void (*)(char *, void, uint64_t))v59;
    v59(v43);
    unint64_t v60 = *v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v60 = sub_24EA43564(0, *(void *)(v60 + 16) + 1, 1, v60, &qword_2699296A8, &qword_269929620);
    }
    unint64_t v62 = *(void *)(v60 + 16);
    unint64_t v61 = *(void *)(v60 + 24);
    if (v62 >= v61 >> 1) {
      unint64_t v60 = sub_24EA43564(v61 > 1, v62 + 1, 1, v60, &qword_2699296A8, &qword_269929620);
    }
    *(void *)(v60 + 16) = v62 + 1;
    uint64_t v64 = *(char **)(v58 + 32);
    uint64_t v63 = v58 + 32;
    unint64_t v107 = (*(unsigned __int8 *)(v63 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 48);
    uint64_t v106 = *(void *)(v63 + 40);
    unint64_t v65 = v60 + v107 + v106 * v62;
    uint64_t v66 = v119;
    uint64_t v121 = v63;
    uint64_t v114 = v64;
    ((void (*)(unint64_t, char *, uint64_t))v64)(v65, v43, v119);
    uint64_t v67 = v120;
    *uint64_t v120 = v60;
    uint64_t v68 = v116;
    uint64_t v69 = &v116[v42[16]];
    uint64_t v70 = &v116[v42[20]];
    uint64_t v71 = &v116[v42[24]];
    LOBYTE(v123) = 2;
    sub_24EA948C0();
    ((void (*)(char *, void, uint64_t))v115)(v69, v117, v48);
    ((void (*)(char *, void, uint64_t))v111)(v70, v112, v52);
    sub_24EA42B00(v118, (uint64_t)&v123);
    uint64_t v72 = swift_allocObject();
    long long v73 = v126;
    *(_OWORD *)(v72 + 48) = v125;
    *(_OWORD *)(v72 + 64) = v73;
    *(_OWORD *)(v72 + 80) = v127;
    *(void *)(v72 + 96) = v128;
    long long v74 = v124;
    *(_OWORD *)(v72 + 16) = v123;
    *(_OWORD *)(v72 + 32) = v74;
    *(void *)uint64_t v71 = &unk_269929658;
    *((void *)v71 + 1) = v72;
    sub_24EA94740();
    v108(v68, v109, v66);
    unint64_t v75 = *v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v75 = sub_24EA43564(0, *(void *)(v75 + 16) + 1, 1, v75, &qword_2699296A8, &qword_269929620);
    }
    unint64_t v77 = *(void *)(v75 + 16);
    unint64_t v76 = *(void *)(v75 + 24);
    if (v77 >= v76 >> 1) {
      unint64_t v75 = sub_24EA43564(v76 > 1, v77 + 1, 1, v75, &qword_2699296A8, &qword_269929620);
    }
    *(void *)(v75 + 16) = v77 + 1;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v114)(v75 + v107 + v77 * v106, v116, v66);
LABEL_20:
    unint64_t *v67 = v75;
  }
  return result;
}

uint64_t sub_24EA406C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EA40728()
{
  unint64_t result = qword_269929628;
  if (!qword_269929628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269929628);
  }
  return result;
}

uint64_t sub_24EA4077C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MonogramAction();
  v2[4] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929698);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296A0);
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_24EA94730();
  v2[12] = sub_24EA94720();
  uint64_t v6 = sub_24EA946D0();
  v2[13] = v6;
  v2[14] = v5;
  return MEMORY[0x270FA2498](sub_24EA40904, v6, v5);
}

uint64_t sub_24EA40904()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(v0[3] + 16) + **(int **)(v0[3] + 16));
  unint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24EA409D8;
  uint64_t v2 = v0[7];
  return v4(v2);
}

uint64_t sub_24EA409D8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_24EA40AF8, v3, v2);
}

uint64_t sub_24EA40AF8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  sub_24EA94750();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_24EA94720();
  v0[16] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24EA40BEC;
  uint64_t v6 = v0[8];
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 19, v4, v7, v6);
}

uint64_t sub_24EA40BEC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_24EA40D30, v3, v2);
}

uint64_t sub_24EA40D30()
{
  if (*(unsigned char *)(v0 + 152) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 2, 2, v4);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929690);
    *uint64_t v5 = v0;
    v5[1] = sub_24EA40EB4;
    uint64_t v7 = *(void *)(v0 + 32);
    return MEMORY[0x270F252C8](v7, v6);
  }
}

uint64_t sub_24EA40EB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  sub_24EA43A94(v2, (uint64_t (*)(void))type metadata accessor for MonogramAction);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_24EA4100C, v4, v3);
}

uint64_t sub_24EA4100C()
{
  uint64_t v1 = sub_24EA94720();
  v0[16] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EA40BEC;
  uint64_t v3 = v0[8];
  uint64_t v4 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 19, v1, v4, v3);
}

uint64_t sub_24EA410D4(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  type metadata accessor for MonogramAction();
  v2[14] = swift_task_alloc();
  v2[15] = sub_24EA94730();
  v2[16] = sub_24EA94720();
  uint64_t v4 = sub_24EA946D0();
  v2[17] = v4;
  v2[18] = v3;
  return MEMORY[0x270FA2498](sub_24EA4119C, v4, v3);
}

uint64_t sub_24EA4119C()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 104) + 32)
                                       + **(int **)(*(void *)(v0 + 104) + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EA41278;
  return v3(v0 + 56);
}

uint64_t sub_24EA41278()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_24EA41398, v3, v2);
}

uint64_t sub_24EA41398()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_24EA94780();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  uint64_t v5 = sub_24EA94720();
  v0[20] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v6;
  void *v6 = v0;
  v6[1] = sub_24EA41588;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 23, v5, v7);
}

uint64_t sub_24EA41588()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_24EA416CC, v3, v2);
}

uint64_t sub_24EA416CC()
{
  if (*(unsigned char *)(v0 + 184) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 2, 2, v4);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929690);
    *uint64_t v5 = v0;
    v5[1] = sub_24EA41820;
    uint64_t v7 = *(void *)(v0 + 112);
    return MEMORY[0x270F252C8](v7, v6);
  }
}

uint64_t sub_24EA41820()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  swift_task_dealloc();
  sub_24EA43A94(v2, (uint64_t (*)(void))type metadata accessor for MonogramAction);
  uint64_t v3 = *(void *)(v1 + 144);
  uint64_t v4 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_24EA41978, v4, v3);
}

uint64_t sub_24EA41978()
{
  uint64_t v1 = sub_24EA94720();
  v0[20] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EA41588;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 23, v1, v3);
}

uint64_t sub_24EA41A64(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  type metadata accessor for MonogramAction();
  v2[6] = swift_task_alloc();
  type metadata accessor for Monogram();
  v2[7] = swift_task_alloc();
  sub_24EA94730();
  v2[8] = sub_24EA94720();
  uint64_t v4 = sub_24EA946D0();
  v2[9] = v4;
  v2[10] = v3;
  return MEMORY[0x270FA2498](sub_24EA41B54, v4, v3);
}

uint64_t sub_24EA41B54()
{
  uint64_t v3 = (uint64_t (*)(void))(**(void **)(v0 + 40) + ***(int ***)(v0 + 40));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EA41C20;
  return v3();
}

uint64_t sub_24EA41C20(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 104) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v3 + 72);
  if (v1) {
    uint64_t v7 = sub_24EA424A0;
  }
  else {
    uint64_t v7 = sub_24EA41D64;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_24EA41D64()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v1[9];
  uint64_t v3 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v2);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[14] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24EA41E78;
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  return v9(v6, v7, v5, v2, v3);
}

uint64_t sub_24EA41E78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  if (v0) {
    uint64_t v5 = sub_24EA427CC;
  }
  else {
    uint64_t v5 = sub_24EA41FB4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EA41FB4()
{
  uint64_t v1 = v0[6];
  sub_24EA43A2C(v0[7], v1, (uint64_t (*)(void))type metadata accessor for Monogram);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 2, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929690);
  *uint64_t v3 = v0;
  v3[1] = sub_24EA420D8;
  uint64_t v5 = v0[6];
  return MEMORY[0x270F252C8](v5, v4);
}

uint64_t sub_24EA420D8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  sub_24EA43A94(v2, (uint64_t (*)(void))type metadata accessor for MonogramAction);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_24EA42230, v4, v3);
}

uint64_t sub_24EA42230()
{
  uint64_t v1 = *(void *)(v0 + 56);

  swift_release();
  sub_24EA43A94(v1, (uint64_t (*)(void))type metadata accessor for Monogram);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24EA422CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  sub_24EA43A94(v2, (uint64_t (*)(void))type metadata accessor for MonogramAction);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_24EA42424, v4, v3);
}

uint64_t sub_24EA42424()
{
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EA424A0()
{
  uint64_t v1 = *(void **)(v0 + 104);
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
  if (swift_dynamicCast())
  {

    char v3 = *(unsigned char *)(v0 + 144);
    if (qword_269928EC8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24EA941C0();
    __swift_project_value_buffer(v4, (uint64_t)qword_269931C48);
    uint64_t v5 = sub_24EA941A0();
    os_log_type_t v6 = sub_24EA947B0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      sub_24EA2BD9C();
      swift_allocError();
      *uint64_t v9 = v3;
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 24) = v10;
      sub_24EA94830();
      void *v8 = v10;
      _os_log_impl(&dword_24EA1C000, v5, v6, "Failed to fetch Account Avatar: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
      swift_arrayDestroy();
      MEMORY[0x253348310](v8, -1, -1);
      MEMORY[0x253348310](v7, -1, -1);
    }
    uint64_t v11 = *(unsigned char **)(v0 + 48);

    unsigned char *v11 = v3;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 2, v12);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v13;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929690);
    *uint64_t v13 = v0;
    v13[1] = sub_24EA422CC;
    uint64_t v15 = *(void *)(v0 + 48);
    return MEMORY[0x270F252C8](v15, v14);
  }
  else
  {
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_24EA427CC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
  if (swift_dynamicCast())
  {

    char v3 = *(unsigned char *)(v0 + 144);
    if (qword_269928EC8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24EA941C0();
    __swift_project_value_buffer(v4, (uint64_t)qword_269931C48);
    uint64_t v5 = sub_24EA941A0();
    os_log_type_t v6 = sub_24EA947B0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      sub_24EA2BD9C();
      swift_allocError();
      *uint64_t v9 = v3;
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 24) = v10;
      sub_24EA94830();
      void *v8 = v10;
      _os_log_impl(&dword_24EA1C000, v5, v6, "Failed to fetch Account Avatar: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
      swift_arrayDestroy();
      MEMORY[0x253348310](v8, -1, -1);
      MEMORY[0x253348310](v7, -1, -1);
    }
    uint64_t v11 = *(unsigned char **)(v0 + 48);

    unsigned char *v11 = v3;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 2, v12);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v13;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929690);
    *uint64_t v13 = v0;
    v13[1] = sub_24EA422CC;
    uint64_t v15 = *(void *)(v0 + 48);
    return MEMORY[0x270F252C8](v15, v14);
  }
  else
  {
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_24EA42B00(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24EA42B3C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EA2C0C8;
  return sub_24EA41A64(a1, v1 + 16);
}

uint64_t sub_24EA42BE4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EA2C5B8;
  return sub_24EA4077C(a1, v1 + 16);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_24EA42CD4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EA2C5B8;
  return sub_24EA410D4(a1, v1 + 16);
}

uint64_t sub_24EA42D70()
{
  return sub_24EA42EA0(&qword_269929660, (void (*)(uint64_t))type metadata accessor for MonogramAction);
}

uint64_t sub_24EA42DB8()
{
  return sub_24EA42EA0(&qword_269929668, (void (*)(uint64_t))type metadata accessor for MonogramAction);
}

unint64_t sub_24EA42E04()
{
  unint64_t result = qword_26B1CFE60;
  if (!qword_26B1CFE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFE60);
  }
  return result;
}

uint64_t sub_24EA42E58()
{
  return sub_24EA42EA0(&qword_269929670, (void (*)(uint64_t))type metadata accessor for MonogramState);
}

uint64_t sub_24EA42EA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MonogramFeature(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
}

uint64_t initializeWithCopy for MonogramFeature(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = a1 + 48;
  uint64_t v5 = a2 + 48;
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v8(v4, v5, v7);
  return a1;
}

void *assignWithCopy for MonogramFeature(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MonogramFeature(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonogramFeature(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MonogramFeature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramFeature()
{
  return &type metadata for MonogramFeature;
}

unsigned char *storeEnumTagSinglePayload for MonogramFeature.TaskIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA434C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramFeature.TaskIdentifier()
{
  return &type metadata for MonogramFeature.TaskIdentifier;
}

unint64_t sub_24EA434FC()
{
  unint64_t result = qword_269929678;
  if (!qword_269929678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929678);
  }
  return result;
}

uint64_t sub_24EA43550(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EA43564(a1, a2, a3, a4, &qword_269929680, &qword_269929688);
}

uint64_t sub_24EA43564(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_24EA94980();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24EA437E4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_24EA437D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EA43564(a1, a2, a3, a4, &qword_26B1CFF58, &qword_26B1CFE68);
}

uint64_t sub_24EA437E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24EA949D0();
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24EA43A2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA43A94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t MonogramEnvironment.init(fetchPrimaryAccount:makeAccountChangedStream:makeRemoteBrowsingIdentityUpdatedStream:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t destroy for MonogramEnvironment()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MonogramEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MonogramEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for MonogramEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MonogramEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MonogramEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramEnvironment()
{
  return &type metadata for MonogramEnvironment;
}

uint64_t sub_24EA43D3C()
{
  uint64_t v0 = sub_24EA941C0();
  __swift_allocate_value_buffer(v0, qword_269931C48);
  __swift_project_value_buffer(v0, (uint64_t)qword_269931C48);
  return sub_24EA941B0();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t MonogramFetcher.fetchAccountProfileImage(_:for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_24EA43E38, 0, 0);
}

uint64_t sub_24EA43E38()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F258D8]), sel_initWithAccount_, v0[17]);
  v0[18] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_24EA43F60;
    uint64_t v3 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_24EA4438C;
    v0[13] = &block_descriptor;
    v0[14] = v3;
    objc_msgSend(v2, sel_performRequestWithHandler_, v0 + 10);
    id v1 = v0 + 2;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA23F0](v1);
}

uint64_t sub_24EA43F60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_24EA4431C;
  }
  else {
    uint64_t v2 = sub_24EA44070;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24EA44070()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void **)(v0 + 144);

  uint64_t v2 = *(void **)(v0 + 128);
  if (v2)
  {
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      id v5 = v2;
      id v6 = objc_msgSend(v4, sel_photoData);
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = sub_24EA93E00();
        unint64_t v10 = v9;

        id v11 = objc_msgSend(v4, sel_cropRect);
        if (v11)
        {
          unint64_t v12 = v11;
          CGPoint v25 = (CGPoint)0;
          CGSize v26 = (CGSize)0;
          char v27 = 1;
          MEMORY[0x2533478F0](v11, &v25);

          if ((v27 & 1) == 0)
          {
            CGPoint v13 = v25;
            CGSize v14 = v26;
            id v15 = objc_allocWithZone(MEMORY[0x263F827E8]);
            sub_24EA444A4(v8, v10);
            uint64_t v16 = (void *)sub_24EA93DF0();
            id v17 = objc_msgSend(v15, sel_initWithData_, v16);
            sub_24EA4444C(v8, v10);

            if (v17)
            {
              BOOL v18 = (CGImage *)objc_msgSend(v17, sel_CGImage);

              if (v18)
              {
                v30.origin = v13;
                v30.size = v14;
                CGImageRef v19 = CGImageCreateWithImageInRect(v18, v30);

                if (v19)
                {
                  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_initWithCGImage_, v19);

                  sub_24EA4444C(v8, v10);
                  unint64_t v21 = *(uint64_t (**)(id))(v0 + 8);
                  return v21(v20);
                }
              }
            }
          }
        }

        sub_24EA4444C(v8, v10);
      }
      else
      {
      }
    }
  }
  sub_24EA2BD9C();
  swift_allocError();
  *uint64_t v23 = 2;
  swift_willThrow();

  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_24EA4431C()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24EA4438C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = a4;
    id v8 = a4;
    return MEMORY[0x270FA2410](v4, v6);
  }
  else
  {
    unint64_t v10 = *(void **)(*(void *)(v4 + 64) + 40);
    *unint64_t v10 = a2;
    v10[1] = a3;
    id v11 = a2;
    id v12 = a3;
    return MEMORY[0x270FA2408](v4);
  }
}

uint64_t sub_24EA4444C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24EA444A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24EA444FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24EA445A8;
  v4[17] = a2;
  return MEMORY[0x270FA2498](sub_24EA43E38, 0, 0);
}

uint64_t sub_24EA445A8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  id v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

ValueMetadata *type metadata accessor for MonogramFetcher()
{
  return &type metadata for MonogramFetcher;
}

uint64_t MonogramView.init(store:font:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a4 = sub_24EA2C65C;
  *(void *)(a4 + 8) = result;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = a3;
  return result;
}

uint64_t sub_24EA44720()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EA44758@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t State = type metadata accessor for MonogramLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v18 - v8;
  sub_24EA2D278();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929770);
  sub_24EA2F2A8(&qword_269929778, &qword_269929770);
  sub_24EA941E0();
  sub_24EA2D26C();
  swift_release();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v3, 2, v10))
  {
    sub_24EA46680((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for MonogramLoadState);
    uint64_t v11 = v19;
LABEL_5:
    uint64_t v15 = type metadata accessor for Monogram();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 1, 1, v15);
  }
  id v12 = &v3[*(int *)(v10 + 48)];
  sub_24EA3AB28((uint64_t)v3, (uint64_t)v9);
  uint64_t v13 = sub_24EA93E40();
  (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  sub_24EA3AB28((uint64_t)v9, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = v19;
  if (EnumCaseMultiPayload == 1)
  {
    sub_24EA21258((uint64_t)v6, &qword_26B1CFF70);
    goto LABEL_5;
  }
  sub_24EA466E0((uint64_t)v6, v19);
  uint64_t v17 = type metadata accessor for Monogram();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
}

uint64_t MonogramView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296D0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296D8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296E0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v1 + 8);
  char v15 = *(unsigned char *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  v21[0] = *(void *)v1;
  uint64_t v13 = v21[0];
  v21[1] = v14;
  char v22 = v15;
  uint64_t v23 = v16;
  sub_24EA44CE8((uint64_t)v5);
  sub_24EA944E0();
  sub_24EA4512C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0);
  sub_24EA21258((uint64_t)v5, &qword_2699296D0);
  char v17 = sub_24EA94410();
  sub_24EA1E564((uint64_t)v8, (uint64_t)v12, &qword_2699296D8);
  v12[*(int *)(v10 + 44)] = v17;
  sub_24EA21258((uint64_t)v8, &qword_2699296D8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v14;
  *(unsigned char *)(v18 + 32) = v15;
  *(void *)(v18 + 40) = v16;
  sub_24EA1E564((uint64_t)v12, a1, &qword_2699296E0);
  uint64_t v19 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699296E8) + 36));
  *uint64_t v19 = sub_24EA454B8;
  v19[1] = (uint64_t (*)())v18;
  v19[2] = 0;
  v19[3] = 0;
  sub_24EA2D278();
  swift_retain();
  return sub_24EA21258((uint64_t)v12, &qword_2699296E0);
}

void sub_24EA44CE8(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929718);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929780);
  MEMORY[0x270FA5388](v34);
  uint64_t v7 = (void *)((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_24EA944C0();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v31 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929788);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (void *)((char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  char v15 = *((unsigned char *)v1 + 16);
  uint64_t v16 = v1[3];
  uint64_t v35 = *v1;
  uint64_t v36 = v14;
  char v37 = v15;
  uint64_t v38 = v16;
  sub_24EA44758((uint64_t)v12);
  uint64_t v17 = type metadata accessor for Monogram();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v12, 1, v17) == 1)
  {
    sub_24EA21258((uint64_t)v12, &qword_269929788);
  }
  else
  {
    v30[0] = a1;
    v30[1] = v3;
    uint64_t v18 = *v12;
    uint64_t v19 = v12[1];
    swift_bridgeObjectRetain();
    sub_24EA46680((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Monogram);
    if (qword_269928EC0 != -1) {
      swift_once();
    }
    id v20 = (void *)qword_269931C40;
    uint64_t v35 = v18;
    uint64_t v36 = v19;
    id v21 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2699291D8));
    swift_bridgeObjectRetain();
    id v22 = v20;
    uint64_t v23 = (void *)sub_24EA93FF0();
    id v24 = objc_msgSend(v22, sel_objectForKey_, v23);
    swift_bridgeObjectRelease();

    if (v24)
    {
      id v25 = v24;
      sub_24EA944A0();
      char v27 = v31;
      uint64_t v26 = v32;
      uint64_t v28 = v33;
      (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x263F1B4B8], v33);
      uint64_t v29 = sub_24EA944D0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
      *uint64_t v7 = v29;
      swift_storeEnumTagMultiPayload();
      sub_24EA462E8();
      swift_retain();
      sub_24EA943D0();
      swift_release();

      return;
    }
  }
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  char v37 = v15;
  uint64_t v38 = v16;
  sub_24EA454EC((uint64_t)v5);
  sub_24EA1E564((uint64_t)v5, (uint64_t)v7, &qword_269929718);
  swift_storeEnumTagMultiPayload();
  sub_24EA462E8();
  sub_24EA943D0();
  sub_24EA21258((uint64_t)v5, &qword_269929718);
}

__n128 sub_24EA4512C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EA947C0();
    uint64_t v23 = (void *)sub_24EA94400();
    sub_24EA94190();
  }
  sub_24EA94250();
  sub_24EA1E564(v13, a9, &qword_2699296D0);
  id v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699296D8) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *id v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_24EA452EC()
{
  uint64_t v0 = type metadata accessor for MonogramAction();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA2D278();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929770);
  sub_24EA2F2A8(&qword_269929778, &qword_269929770);
  sub_24EA941E0();
  sub_24EA2D26C();
  swift_release();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 2, v3);
  sub_24EA94530();
  swift_release();
  return sub_24EA46680((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for MonogramAction);
}

uint64_t sub_24EA45474()
{
  sub_24EA2D26C();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24EA454B8()
{
  return sub_24EA452EC();
}

uint64_t sub_24EA454D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EA454EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929728);
  MEMORY[0x270FA5388](v43);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929790);
  MEMORY[0x270FA5388](v41);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24EA93D60();
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24EA93D70();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929788);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929798);
  MEMORY[0x270FA5388](v13 - 8);
  char v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24EA93DA0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  char v40 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v18) = *((unsigned char *)v1 + 16);
  uint64_t v19 = *((void *)v1 + 3);
  long long v45 = *v1;
  char v46 = v18;
  uint64_t v47 = v19;
  sub_24EA44758((uint64_t)v12);
  uint64_t v20 = type metadata accessor for Monogram();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v12, 1, v20) == 1)
  {
    sub_24EA21258((uint64_t)v12, &qword_269929788);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_4:
    sub_24EA21258((uint64_t)v15, &qword_269929798);
    sub_24EA45AF4((uint64_t)v3);
    sub_24EA1E564((uint64_t)v3, (uint64_t)v5, &qword_269929728);
    swift_storeEnumTagMultiPayload();
    sub_24EA46394();
    sub_24EA943D0();
    return sub_24EA21258((uint64_t)v3, &qword_269929728);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, &v12[*(int *)(v20 + 20)], v16);
  sub_24EA46680((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Monogram);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(void))(v17 + 32))();
  uint64_t v22 = v37;
  uint64_t v23 = v39;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v7, *MEMORY[0x263F06A00], v39);
  MEMORY[0x253346E50](v7);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  sub_24EA46508();
  uint64_t v24 = v38;
  sub_24EA93D90();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v24);
  long long v44 = v45;
  sub_24EA46560();
  uint64_t v25 = sub_24EA94430();
  uint64_t v27 = v26;
  LOBYTE(v22) = v28 & 1;
  uint64_t v29 = sub_24EA94420();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v39 = v34;
  sub_24EA465B4(v25, v27, v22);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v5 = v29;
  *((void *)v5 + 1) = v31;
  v5[16] = v33 & 1;
  *((void *)v5 + 3) = v39;
  swift_storeEnumTagMultiPayload();
  sub_24EA46394();
  sub_24EA943D0();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v40, v16);
}

uint64_t sub_24EA45AF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297A8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v31 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_24EA94230();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_24EA944C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297B0);
  uint64_t v13 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  char v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA944B0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B4B8], v9);
  uint64_t v16 = sub_24EA944D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  int v17 = sub_24EA943E0();
  uint64_t v33 = v16;
  int v34 = v17;
  sub_24EA94220();
  sub_24EA94210();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v19 = v29;
  v18(v8, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929730);
  sub_24EA46468();
  sub_24EA94460();
  v18(v5, v19);
  swift_release();
  uint64_t v20 = (uint64_t)v31;
  sub_24EA942F0();
  uint64_t v21 = sub_24EA94300();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929728);
  uint64_t v24 = v32;
  uint64_t v25 = (uint64_t *)(v32 + *(int *)(v23 + 36));
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929758);
  sub_24EA1E564(v20, (uint64_t)v25 + *(int *)(v26 + 28), &qword_2699297A8);
  *uint64_t v25 = KeyPath;
  uint64_t v27 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v24, v15, v30);
  sub_24EA21258(v20, &qword_2699297A8);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v27);
}

uint64_t destroy for MonogramView()
{
  sub_24EA2D26C();
  return swift_release();
}

uint64_t initializeWithCopy for MonogramView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EA2D278();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MonogramView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EA2D278();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24EA2D26C();
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MonogramView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24EA2D26C();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MonogramView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MonogramView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramView()
{
  return &type metadata for MonogramView;
}

unint64_t sub_24EA46124()
{
  unint64_t result = qword_2699296F0;
  if (!qword_2699296F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699296E8);
    sub_24EA461A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699296F0);
  }
  return result;
}

unint64_t sub_24EA461A0()
{
  unint64_t result = qword_2699296F8;
  if (!qword_2699296F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699296E0);
    sub_24EA46240();
    sub_24EA2F2A8(&qword_269929760, &qword_269929768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699296F8);
  }
  return result;
}

unint64_t sub_24EA46240()
{
  unint64_t result = qword_269929700;
  if (!qword_269929700)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699296D8);
    sub_24EA46318(&qword_269929708, &qword_2699296D0, (void (*)(void))sub_24EA462E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929700);
  }
  return result;
}

uint64_t sub_24EA462E8()
{
  return sub_24EA46318(&qword_269929710, &qword_269929718, (void (*)(void))sub_24EA46394);
}

uint64_t sub_24EA46318(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EA46394()
{
  unint64_t result = qword_269929720;
  if (!qword_269929720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929728);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929730);
    sub_24EA46468();
    swift_getOpaqueTypeConformance2();
    sub_24EA2F2A8(&qword_269929750, &qword_269929758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929720);
  }
  return result;
}

unint64_t sub_24EA46468()
{
  unint64_t result = qword_269929738;
  if (!qword_269929738)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929730);
    sub_24EA2F2A8(&qword_269929740, &qword_269929748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929738);
  }
  return result;
}

unint64_t sub_24EA46508()
{
  unint64_t result = qword_2699297A0;
  if (!qword_2699297A0)
  {
    sub_24EA93D70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699297A0);
  }
  return result;
}

unint64_t sub_24EA46560()
{
  unint64_t result = qword_26B1CFE90;
  if (!qword_26B1CFE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFE90);
  }
  return result;
}

uint64_t sub_24EA465B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EA465C4()
{
  return sub_24EA942A0();
}

uint64_t sub_24EA465E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297A8);
  MEMORY[0x270FA5388](v2 - 8);
  sub_24EA1E564(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2699297A8);
  return sub_24EA942B0();
}

uint64_t sub_24EA46680(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EA466E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Monogram();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ImageSequenceView.init(imagesNamed:startFrame:endFrame:bundle:framesPerSecond:repeatCount:isAnimating:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  if (a4) {
    a3 = *(void *)(result + 16) - 1;
  }
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a6;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a7;
  *(unsigned char *)(a9 + 48) = a8 & 1;
  return result;
}

id ImageSequenceView.makeUIView(context:)()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 1);
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  ImageSequenceView.updateUIView(_:context:)(v0);
  return v0;
}

char *ImageSequenceView.updateUIView(_:context:)(void *a1)
{
  long long v4 = v2[1];
  long long v16 = *v2;
  long long v17 = v4;
  long long v18 = v2[2];
  char v19 = *((unsigned char *)v2 + 48);
  unint64_t v5 = *((void *)&v16 + 1);
  uint64_t v6 = v4;
  if ((uint64_t)v4 < *((uint64_t *)&v16 + 1))
  {
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v10 = (char *)sub_24EA94990();
    if (!v10) {
      goto LABEL_10;
    }
LABEL_4:
    unint64_t result = v10 - 1;
    if (__OFSUB__(v10, 1))
    {
      __break(1u);
    }
    else if ((v5 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v12 = (char *)*(id *)(v5 + 8 * (void)result + 32);
LABEL_9:
        uint64_t v10 = v12;
        goto LABEL_10;
      }
      __break(1u);
      return result;
    }
    id v12 = (char *)MEMORY[0x2533479F0](result, v5);
    goto LABEL_9;
  }
  uint64_t v1 = a1;
  sub_24EA46D74((uint64_t)&v16);
  sub_24EA46C1C(v5, v6, (uint64_t *)&v16);
  unint64_t v5 = v7;
  sub_24EA46DAC((uint64_t)&v16);
  LODWORD(v8) = 1132068864;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v8);
  LODWORD(v9) = 1132068864;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v9);
  unint64_t v3 = v5 >> 62;
  if (v5 >> 62) {
    goto LABEL_17;
  }
  uint64_t v10 = *(char **)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v10) {
    goto LABEL_4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setImage_, v10);

  sub_24EA46DE0();
  uint64_t v13 = (void *)sub_24EA94680();
  objc_msgSend(v1, sel_setAnimationImages_, v13);

  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24EA94990();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAnimationDuration_, (double)v14 / (double)*((uint64_t *)&v17 + 1));
  char v15 = &selRef_stopAnimating;
  if (v19) {
    char v15 = &selRef_startAnimating;
  }
  return (char *)[v1 *v15];
}

id sub_24EA46A2C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 1);
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  ImageSequenceView.updateUIView(_:context:)(v0);
  return v0;
}

uint64_t sub_24EA46AE8()
{
  return sub_24EA94330();
}

uint64_t sub_24EA46B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_24EA470BC();
  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_24EA46B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_24EA470BC();
  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_24EA46BF4()
{
}

void sub_24EA46C1C(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v5 = *a3;
  unint64_t v6 = (void *)a3[4];
  uint64_t v7 = self;
  unint64_t v8 = *(void *)(v5 + 16);
  unint64_t v9 = v8 - a1;
  if (v8 <= a1)
  {
LABEL_11:
    __break(1u);
  }
  else
  {
    uint64_t v10 = (void *)v7;
    uint64_t v11 = a2 - a1;
    uint64_t v12 = v5 + 16 * a1 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      id v13 = v6;
      uint64_t v14 = (void *)sub_24EA945E0();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(v10, sel_imageNamed_inBundle_withConfiguration_, v14, v13, 0);

      if (v15)
      {
        MEMORY[0x253347770]();
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24EA946A0();
        }
        sub_24EA946B0();
        sub_24EA94690();
      }
      if (!v11) {
        break;
      }
      v12 += 16;
      --v11;
      if (!--v9) {
        goto LABEL_11;
      }
    }
  }
}

uint64_t sub_24EA46D74(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24EA46DAC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_24EA46DE0()
{
  unint64_t result = qword_26B1CFEE0;
  if (!qword_26B1CFEE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B1CFEE0);
  }
  return result;
}

unint64_t sub_24EA46E24()
{
  unint64_t result = qword_2699297B8;
  if (!qword_2699297B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699297B8);
  }
  return result;
}

uint64_t sub_24EA46E78()
{
  return MEMORY[0x263F1BB58];
}

void destroy for ImageSequenceView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for ImageSequenceView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unint64_t v3 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ImageSequenceView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ImageSequenceView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  long long v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageSequenceView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageSequenceView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageSequenceView()
{
  return &type metadata for ImageSequenceView;
}

unint64_t sub_24EA470BC()
{
  unint64_t result = qword_2699297C0;
  if (!qword_2699297C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699297C0);
  }
  return result;
}

uint64_t DynamicImageAssetEnvironment.init(fetchRemoteImageData:queryRemoteImageURLBestMatches:reportFailedRemoteURL:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

ValueMetadata *type metadata accessor for DynamicImageAssetEnvironment()
{
  return &type metadata for DynamicImageAssetEnvironment;
}

uint64_t DynamicPredicateLogicalDescriptor.makePredicateExpression<A>(using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  char v9 = sub_24EA940E0();
  unint64_t v10 = sub_24EA940F0();
  DynamicPredicateDescriptor.makePredicateExpression<A>(using:)(a1, v10, a2, a3, v15);
  uint64_t result = swift_release();
  if (!v4)
  {
    unint64_t v12 = sub_24EA94100();
    DynamicPredicateDescriptor.makePredicateExpression<A>(using:)(a1, v12, a2, a3, v14);
    swift_release();
    a4[3] = (uint64_t)&type metadata for ArtworkPredicateLogicalOperation;
    a4[4] = (uint64_t)&protocol witness table for ArtworkPredicateLogicalOperation;
    uint64_t v13 = swift_allocObject();
    *a4 = v13;
    sub_24EA472A8((uint64_t)v15, v13 + 16);
    sub_24EA472A8((uint64_t)v14, v13 + 56);
    *(unsigned char *)(v13 + 96) = v9 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return result;
}

uint64_t sub_24EA47268()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return MEMORY[0x270FA0238](v0, 97, 7);
}

uint64_t sub_24EA472A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24EA4730C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return DynamicPredicateLogicalDescriptor.makePredicateExpression<A>(using:)(a1, a2, a3, a4);
}

uint64_t sub_24EA47324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v38 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEC0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (_OWORD *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (double *)((char *)&v38 - v15);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v41 = (unint64_t)(v18 + 63) >> 6;
  int64_t v42 = 0;
  int64_t v39 = v41 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v42 << 6);
LABEL_8:
      uint64_t v23 = *(void *)(a1 + 56);
      *uint64_t v13 = *(_OWORD *)(*(void *)(a1 + 48) + 16 * v22);
      uint64_t v24 = v23 + *(void *)(v43 + 72) * v22;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEB8);
      sub_24EA1E564(v24, (uint64_t)v13 + *(int *)(v25 + 48), &qword_26B1CFC70);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 0, 1, v25);
      goto LABEL_30;
    }
    int64_t v26 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v26 < v41)
    {
      unint64_t v27 = *(void *)(v40 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v42 + 2;
      ++v42;
      if (v26 + 1 < v41)
      {
        unint64_t v27 = *(void *)(v40 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v42 = v26 + 1;
        if (v26 + 2 < v41)
        {
          unint64_t v27 = *(void *)(v40 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v42 = v26 + 2;
          if (v26 + 3 < v41)
          {
            unint64_t v27 = *(void *)(v40 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_12;
            }
            int64_t v28 = v26 + 4;
            int64_t v42 = v26 + 3;
            if (v26 + 4 < v41) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEB8);
    (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 1, 1, v29);
    unint64_t v20 = 0;
LABEL_30:
    sub_24EA1E61C((uint64_t)v13, (uint64_t)v16, &qword_26B1CFEC0);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEB8);
    int v31 = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v16, 1, v30);
    BOOL v32 = v31 == 1;
    if (v31 == 1) {
      return v32;
    }
    double v33 = *v16;
    double v34 = v16[1];
    sub_24EA1E61C((uint64_t)v16 + *(int *)(v30 + 48), (uint64_t)v9, &qword_26B1CFC70);
    unint64_t v35 = sub_24EA62BB8(v33, v34);
    if ((v36 & 1) == 0)
    {
      sub_24EA21258((uint64_t)v9, &qword_26B1CFC70);
      return 0;
    }
    sub_24EA1E564(*(void *)(a2 + 56) + *(void *)(v43 + 72) * v35, (uint64_t)v7, &qword_26B1CFC70);
    char v37 = sub_24EA822F4((uint64_t)v7, (uint64_t)v9);
    sub_24EA21258((uint64_t)v7, &qword_26B1CFC70);
    uint64_t result = sub_24EA21258((uint64_t)v9, &qword_26B1CFC70);
    if ((v37 & 1) == 0) {
      return v32;
    }
  }
  unint64_t v27 = *(void *)(v40 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v42 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v41)
    {
      int64_t v42 = v39;
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v40 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_24EA477C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageAsset();
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B0);
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v36 - v11;
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v41 = 0;
  uint64_t v39 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v37 = v14;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  int64_t v36 = v38 - 1;
  uint64_t v19 = &qword_2699291B8;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v41 << 6);
LABEL_8:
      uint64_t v22 = v39;
      sub_24EA4C460(*(void *)(v39 + 48) + *(void *)(v40 + 72) * v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v23 = *(void *)(v22 + 56);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(v19);
      *(void *)&v9[*(int *)(v24 + 48)] = *(void *)(v23 + 8 * v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 0, 1, v24);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    int64_t v25 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v25 < v38)
    {
      unint64_t v26 = *(void *)(v37 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v41 + 2;
      ++v41;
      if (v25 + 1 < v38)
      {
        unint64_t v26 = *(void *)(v37 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v41 = v25 + 1;
        if (v25 + 2 < v38)
        {
          unint64_t v26 = *(void *)(v37 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v41 = v25 + 2;
          if (v25 + 3 < v38)
          {
            unint64_t v26 = *(void *)(v37 + 8 * (v25 + 3));
            if (v26)
            {
              v25 += 3;
              goto LABEL_12;
            }
            int64_t v27 = v25 + 4;
            int64_t v41 = v25 + 3;
            if (v25 + 4 < v38) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(v19);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v9, 1, 1, v28);
    unint64_t v18 = 0;
LABEL_30:
    sub_24EA1E61C((uint64_t)v9, (uint64_t)v12, &qword_2699291B0);
    uint64_t v29 = v19;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 1, v30) == 1) {
      return;
    }
    uint64_t v31 = *(int *)(v30 + 48);
    sub_24EA4C3F8((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v32 = *(void *)&v12[v31];
    sub_24EA62C2C((uint64_t)v6);
    LOBYTE(v31) = v33;
    sub_24EA4AC84((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    if ((v31 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v34 = swift_bridgeObjectRetain();
    char v35 = sub_24EA47324(v34, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v29;
    if ((v35 & 1) == 0) {
      return;
    }
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    unint64_t v18 = (v26 - 1) & v26;
    unint64_t v21 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v41 = v25;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v38)
    {
      int64_t v41 = v36;
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t DynamicImageAssetState.layoutEnvironment.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA1E564(v1, a1, &qword_2699297C8);
}

uint64_t DynamicImageAssetState.layoutEnvironment.setter(uint64_t a1)
{
  return sub_24EA47E40(a1, v1, &qword_2699297C8);
}

uint64_t (*DynamicImageAssetState.layoutEnvironment.modify())()
{
  return nullsub_1;
}

uint64_t DynamicImageAssetState.loadStateRegistryByAsset.getter()
{
  type metadata accessor for DynamicImageAssetState();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DynamicImageAssetState()
{
  uint64_t result = qword_26B1CFA18;
  if (!qword_26B1CFA18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DynamicImageAssetState.loadStateRegistryByAsset.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for DynamicImageAssetState() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*DynamicImageAssetState.loadStateRegistryByAsset.modify())()
{
  return nullsub_1;
}

uint64_t DynamicImageAssetState.preferredImageAsset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DynamicImageAssetState();
  return sub_24EA1E564(v1 + *(int *)(v3 + 24), a1, &qword_26B1CFAB8);
}

uint64_t DynamicImageAssetState.preferredImageAsset.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DynamicImageAssetState();
  return sub_24EA47E40(a1, v1 + *(int *)(v3 + 24), &qword_26B1CFAB8);
}

uint64_t sub_24EA47E40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*DynamicImageAssetState.preferredImageAsset.modify())()
{
  return nullsub_1;
}

uint64_t DynamicImageAssetState.init(descriptor:displayScale:layoutEnvironment:loadStateRegistryByAsset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a4, 1, 1, v10);
  uint64_t v11 = (int *)type metadata accessor for DynamicImageAssetState();
  uint64_t v12 = a4 + v11[6];
  uint64_t v13 = type metadata accessor for ImageAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a4 + v11[7];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a1, v15);
  *(double *)(a4 + v11[8]) = a5;
  uint64_t result = sub_24EA47E40(a2, a4, &qword_2699297C8);
  *(void *)(a4 + v11[5]) = a3;
  return result;
}

unint64_t sub_24EA48034(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x7470697263736564;
      break;
    case 4:
      unint64_t result = 0x5379616C70736964;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EA480EC()
{
  return sub_24EA48034(*v0);
}

uint64_t sub_24EA480F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA4C1DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EA4811C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24EA48128(uint64_t a1)
{
  unint64_t v2 = sub_24EA484B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA48164(uint64_t a1)
{
  unint64_t v2 = sub_24EA484B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicImageAssetState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA484B0();
  sub_24EA94C00();
  LOBYTE(v13) = 0;
  type metadata accessor for DynamicArtworkLayoutEnvironment();
  sub_24EA4BEF8(&qword_269929290, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
  sub_24EA94A80();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for DynamicImageAssetState();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 20));
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699297E8);
    sub_24EA48504();
    sub_24EA94AB0();
    LOBYTE(v13) = 2;
    type metadata accessor for ImageAsset();
    sub_24EA4BEF8(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
    sub_24EA94A80();
    LOBYTE(v13) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
    sub_24EA2F2A8(&qword_2699297F8, &qword_2699297D0);
    sub_24EA94AB0();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 32));
    char v12 = 4;
    sub_24EA26F7C();
    sub_24EA94AB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EA484B0()
{
  unint64_t result = qword_2699297E0;
  if (!qword_2699297E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699297E0);
  }
  return result;
}

unint64_t sub_24EA48504()
{
  unint64_t result = qword_2699297F0;
  if (!qword_2699297F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699297E8);
    sub_24EA4BEF8(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
    sub_24EA26EB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699297F0);
  }
  return result;
}

uint64_t DynamicImageAssetState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  int64_t v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929800);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DynamicImageAssetState();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v35 = v11;
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 24)];
  uint64_t v16 = type metadata accessor for ImageAsset();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v32 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v18 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24EA484B0();
  uint64_t v19 = v36;
  sub_24EA94BF0();
  if (v19)
  {
    uint64_t v21 = v32;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    sub_24EA21258((uint64_t)v13, &qword_2699297C8);
    return sub_24EA21258(v21, &qword_26B1CFAB8);
  }
  else
  {
    LOBYTE(v38) = 0;
    sub_24EA4BEF8(&qword_269929320, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
    uint64_t v20 = (uint64_t)v29;
    sub_24EA94A10();
    sub_24EA47E40(v20, (uint64_t)v13, &qword_2699297C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699297E8);
    char v37 = 1;
    sub_24EA48C40();
    sub_24EA94A40();
    uint64_t v22 = v35;
    *(void *)&v13[*(int *)(v35 + 20)] = v38;
    LOBYTE(v38) = 2;
    sub_24EA4BEF8(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
    sub_24EA94A10();
    sub_24EA47E40((uint64_t)v6, v32, &qword_26B1CFAB8);
    LOBYTE(v38) = 3;
    sub_24EA2F2A8(&qword_269929810, &qword_2699297D0);
    uint64_t v23 = v27;
    uint64_t v24 = v33;
    sub_24EA94A40();
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v13[*(int *)(v22 + 28)], v23, v24);
    char v37 = 4;
    sub_24EA27494();
    sub_24EA94A40();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v30);
    *(void *)&v13[*(int *)(v22 + 32)] = v38;
    sub_24EA4C460((uint64_t)v13, v26, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetState);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return sub_24EA4AC84((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetState);
  }
}

unint64_t sub_24EA48C40()
{
  unint64_t result = qword_269929808;
  if (!qword_269929808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699297E8);
    sub_24EA4BEF8(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
    sub_24EA27384();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929808);
  }
  return result;
}

uint64_t sub_24EA48CEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicImageAssetState.init(from:)(a1, a2);
}

uint64_t sub_24EA48D04(void *a1)
{
  return DynamicImageAssetState.encode(to:)(a1);
}

uint64_t DynamicImageAssetState.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v2, (uint64_t)v10, &qword_2699297C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    sub_24EA4C3F8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
    sub_24EA94B90();
    DynamicArtworkLayoutEnvironment.hash(into:)();
    sub_24EA4AC84((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  }
  uint64_t v11 = *(void *)(v2 + *(int *)(type metadata accessor for DynamicImageAssetState() + 20));
  swift_bridgeObjectRetain();
  sub_24EA28460(a1, v11);
  swift_bridgeObjectRelease();
  sub_24EA27728();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  sub_24EA2F2A8(&qword_269929818, &qword_2699297D0);
  sub_24EA94580();
  return sub_24EA94BA0();
}

uint64_t DynamicImageAssetState.hashValue.getter()
{
  sub_24EA94B70();
  DynamicImageAssetState.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA48FA4()
{
  sub_24EA94B70();
  DynamicImageAssetState.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA48FE8()
{
  sub_24EA94B70();
  DynamicImageAssetState.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

BOOL _s12FitnessAsset012DynamicImageB5StateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = a2;
  uint64_t v3 = type metadata accessor for ImageAsset();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAC8);
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v50 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (uint64_t)&v49 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v56 = (uint64_t)&v49 - v11;
  uint64_t v12 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929840);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  int64_t v25 = (char *)&v49 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v49 - v27;
  uint64_t v57 = a1;
  sub_24EA1E564(a1, (uint64_t)&v49 - v27, &qword_2699297C8);
  sub_24EA1E564(v58, (uint64_t)v25, &qword_2699297C8);
  uint64_t v29 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_24EA1E564((uint64_t)v28, (uint64_t)v19, &qword_2699297C8);
  sub_24EA1E564((uint64_t)v25, v29, &qword_2699297C8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v30((uint64_t)v19, 1, v12) == 1)
  {
    sub_24EA21258((uint64_t)v25, &qword_2699297C8);
    sub_24EA21258((uint64_t)v28, &qword_2699297C8);
    if (v30(v29, 1, v12) == 1)
    {
      sub_24EA21258((uint64_t)v19, &qword_2699297C8);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v31 = &qword_269929840;
    uint64_t v32 = (uint64_t)v19;
LABEL_7:
    sub_24EA21258(v32, v31);
    return 0;
  }
  sub_24EA1E564((uint64_t)v19, (uint64_t)v22, &qword_2699297C8);
  if (v30(v29, 1, v12) == 1)
  {
    sub_24EA21258((uint64_t)v25, &qword_2699297C8);
    sub_24EA21258((uint64_t)v28, &qword_2699297C8);
    sub_24EA4AC84((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
    goto LABEL_6;
  }
  sub_24EA4C3F8(v29, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  char v33 = _s12FitnessAsset31DynamicArtworkLayoutEnvironmentV2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v15);
  sub_24EA4AC84((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  sub_24EA21258((uint64_t)v25, &qword_2699297C8);
  sub_24EA21258((uint64_t)v28, &qword_2699297C8);
  sub_24EA4AC84((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  sub_24EA21258((uint64_t)v19, &qword_2699297C8);
  if ((v33 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v34 = (int *)type metadata accessor for DynamicImageAssetState();
  uint64_t v36 = v57;
  uint64_t v35 = v58;
  sub_24EA477C4(*(void *)(v57 + v34[5]), *(void *)(v58 + v34[5]));
  if ((v37 & 1) == 0) {
    return 0;
  }
  uint64_t v38 = v56;
  sub_24EA1E564(v36 + v34[6], v56, &qword_26B1CFAB8);
  uint64_t v39 = v55;
  sub_24EA1E564(v35 + v34[6], v55, &qword_26B1CFAB8);
  uint64_t v40 = v54;
  uint64_t v41 = v54 + *(int *)(v51 + 48);
  sub_24EA1E564(v38, v54, &qword_26B1CFAB8);
  sub_24EA1E564(v39, v41, &qword_26B1CFAB8);
  uint64_t v42 = v53;
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v43(v40, 1, v53) != 1)
  {
    uint64_t v44 = v50;
    sub_24EA1E564(v40, v50, &qword_26B1CFAB8);
    if (v43(v41, 1, v42) != 1)
    {
      uint64_t v45 = v49;
      sub_24EA4C3F8(v41, v49, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      BOOL v46 = _s12FitnessAsset05ImageB0V2eeoiySbAC_ACtFZ_0(v44, v45);
      sub_24EA4AC84(v45, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA21258(v55, &qword_26B1CFAB8);
      sub_24EA21258(v56, &qword_26B1CFAB8);
      sub_24EA4AC84(v44, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA21258(v40, &qword_26B1CFAB8);
      if (!v46) {
        return 0;
      }
      goto LABEL_17;
    }
    sub_24EA21258(v55, &qword_26B1CFAB8);
    sub_24EA21258(v56, &qword_26B1CFAB8);
    sub_24EA4AC84(v44, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    goto LABEL_15;
  }
  sub_24EA21258(v39, &qword_26B1CFAB8);
  sub_24EA21258(v38, &qword_26B1CFAB8);
  if (v43(v41, 1, v42) != 1)
  {
LABEL_15:
    uint64_t v31 = &qword_26B1CFAC8;
    uint64_t v32 = v40;
    goto LABEL_7;
  }
  sub_24EA21258(v40, &qword_26B1CFAB8);
LABEL_17:
  uint64_t v47 = v58;
  type metadata accessor for Artwork();
  sub_24EA4BEF8(&qword_26B1CFCD0, (void (*)(uint64_t))type metadata accessor for Artwork);
  if (sub_24EA93F40()) {
    return *(double *)(v36 + v34[8]) == *(double *)(v47 + v34[8]);
  }
  return 0;
}

uint64_t sub_24EA49790()
{
  return sub_24EA4BEF8(&qword_269929820, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetState);
}

uint64_t *initializeBufferWithCopyOfBuffer for DynamicImageAssetState(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v11 = v7[6];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_24EA93FA0();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      *((unsigned char *)a1 + v7[7]) = *((unsigned char *)a2 + v7[7]);
      v15((char *)a1 + v7[8], (char *)a2 + v7[8], v14);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = (int *)type metadata accessor for ImageAsset();
    uint64_t v20 = *((void *)v19 - 1);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, int *))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v23 = sub_24EA93EB0();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v42 = v20;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v23))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v17, v18, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, v23);
      }
      uint64_t v26 = v19[5];
      uint64_t v27 = &v17[v26];
      uint64_t v28 = &v18[v26];
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      v17[v19[6]] = v18[v19[6]];
      uint64_t v30 = v19[7];
      uint64_t v43 = v17;
      __dst = &v17[v30];
      uint64_t v31 = &v18[v30];
      uint64_t v32 = sub_24EA93DE0();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      if (v34(v31, 1, v32))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(__dst, v31, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v42 + 56))(v43, 0, 1, v19);
    }
    uint64_t v36 = a3[7];
    char v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t destroy for DynamicImageAssetState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_24EA93FA0();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    v7(v5, v6);
    v7(a1 + *(int *)(v4 + 32), v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = type metadata accessor for ImageAsset();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_24EA93EB0();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = v8 + *(int *)(v9 + 28);
    uint64_t v13 = sub_24EA93DE0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  uint64_t v15 = a1 + *(int *)(a2 + 28);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  return v17(v15, v16);
}

_WORD *initializeWithCopy for DynamicImageAssetState(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = v6[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_24EA93FA0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    v13((char *)a1 + v6[8], (char *)a2 + v6[8], v12);
    (*(void (**)(_WORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = (int *)type metadata accessor for ImageAsset();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_24EA93EB0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v41 = a3;
    uint64_t v39 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v15, v16, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v15, 0, 1, v21);
    }
    uint64_t v24 = v17[5];
    uint64_t v25 = &v15[v24];
    uint64_t v26 = &v16[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    v15[v17[6]] = v16[v17[6]];
    uint64_t v28 = v17[7];
    __dst = &v15[v28];
    uint64_t v29 = &v16[v28];
    uint64_t v30 = sub_24EA93DE0();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_bridgeObjectRetain();
    if (v32(v29, 1, v30))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    a3 = v41;
    (*(void (**)(char *, void, uint64_t, int *))(v39 + 56))(v15, 0, 1, v17);
  }
  uint64_t v34 = a3[7];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

unsigned char *assignWithCopy for DynamicImageAssetState(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v11 = v6[6];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_24EA93FA0();
      uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      a1[v6[7]] = a2[v6[7]];
      v15(&a1[v6[8]], &a2[v6[8]], v14);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_24EA4AC84((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v31 = v6[6];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = sub_24EA93FA0();
  uint64_t v35 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 24);
  v35(v32, v33, v34);
  a1[v6[7]] = a2[v6[7]];
  v35(&a1[v6[8]], &a2[v6[8]], v34);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = (int *)type metadata accessor for ImageAsset();
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_24EA4AC84((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      goto LABEL_13;
    }
    uint64_t v36 = sub_24EA93EB0();
    __dst = *(void **)(v36 - 8);
    uint64_t v37 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))__dst[6];
    int v38 = v37(v18, 1, v36);
    int v39 = v37(v19, 1, v36);
    if (v38)
    {
      if (!v39)
      {
        ((void (*)(unsigned char *, unsigned char *, uint64_t))__dst[2])(v18, v19, v36);
        ((void (*)(unsigned char *, void, uint64_t, uint64_t))__dst[7])(v18, 0, 1, v36);
LABEL_28:
        uint64_t v54 = v20[5];
        uint64_t v55 = &v18[v54];
        uint64_t v56 = &v19[v54];
        *uint64_t v55 = *v56;
        v55[1] = v56[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v18[v20[6]] = v19[v20[6]];
        uint64_t v57 = v20[7];
        uint64_t v58 = &v18[v57];
        uint64_t v59 = &v19[v57];
        uint64_t v60 = sub_24EA93DE0();
        uint64_t v61 = *(void *)(v60 - 8);
        unint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
        int v63 = v62(v58, 1, v60);
        int v64 = v62(v59, 1, v60);
        if (v63)
        {
          if (!v64)
          {
            (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
            goto LABEL_24;
          }
        }
        else
        {
          if (!v64)
          {
            (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v58, v59, v60);
            goto LABEL_24;
          }
          (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
        }
        size_t v28 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8) - 8) + 64);
        uint64_t v29 = v58;
        uint64_t v30 = v59;
        goto LABEL_14;
      }
    }
    else
    {
      if (!v39)
      {
        ((void (*)(unsigned char *, unsigned char *, uint64_t))__dst[3])(v18, v19, v36);
        goto LABEL_28;
      }
      ((void (*)(unsigned char *, uint64_t))__dst[1])(v18, v36);
    }
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v18, v19, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_28;
  }
  if (v24)
  {
LABEL_13:
    size_t v28 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8) - 8) + 64);
    uint64_t v29 = v18;
    uint64_t v30 = v19;
LABEL_14:
    memcpy(v29, v30, v28);
    goto LABEL_24;
  }
  uint64_t v25 = sub_24EA93EB0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v68 = a3;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 16))(v18, v19, v25);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
  }
  uint64_t v40 = v20[5];
  uint64_t v41 = &v18[v40];
  uint64_t v42 = &v19[v40];
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  v18[v20[6]] = v19[v20[6]];
  uint64_t v43 = v20[7];
  unint64_t v65 = &v19[v43];
  __dsta = &v18[v43];
  uint64_t v44 = sub_24EA93DE0();
  uint64_t v45 = *(void *)(v44 - 8);
  BOOL v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  if (v46(v65, 1, v44))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(__dsta, v65, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dsta, v65, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dsta, 0, 1, v44);
  }
  a3 = v68;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_24:
  uint64_t v48 = a3[7];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

uint64_t sub_24EA4AC84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_WORD *initializeWithTake for DynamicImageAssetState(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_WORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = v6[6];
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_24EA93FA0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    v13((char *)a1 + v6[8], (char *)a2 + v6[8], v12);
    (*(void (**)(_WORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = (int *)type metadata accessor for ImageAsset();
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_24EA93EB0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v15, v16, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v20);
    }
    *(_OWORD *)&v15[v17[5]] = *(_OWORD *)&v16[v17[5]];
    v15[v17[6]] = v16[v17[6]];
    uint64_t v23 = v17[7];
    int v24 = &v15[v23];
    uint64_t v25 = &v16[v23];
    uint64_t v26 = sub_24EA93DE0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v29 = a3[7];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

_WORD *assignWithTake for DynamicImageAssetState(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(_WORD *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      uint64_t v11 = v6[6];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_24EA93FA0();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(v12, v13, v14);
      *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
      v15((char *)a1 + v6[8], (char *)a2 + v6[8], v14);
      (*(void (**)(_WORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_24EA4AC84((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v31 = v6[6];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_24EA93FA0();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40);
  v35(v32, v33, v34);
  *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
  v35((char *)a1 + v6[8], (char *)a2 + v6[8], v34);
LABEL_7:
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = (int *)type metadata accessor for ImageAsset();
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_24EA4AC84((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      goto LABEL_13;
    }
    uint64_t v36 = sub_24EA93EB0();
    uint64_t v65 = *(void *)(v36 - 8);
    uint64_t v37 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v65 + 48);
    int v38 = v37(v18, 1, v36);
    int v39 = v37(v19, 1, v36);
    if (v38)
    {
      if (!v39)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32))(v18, v19, v36);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v65 + 56))(v18, 0, 1, v36);
LABEL_28:
        uint64_t v52 = v20[5];
        uint64_t v53 = &v18[v52];
        uint64_t v54 = (uint64_t *)&v19[v52];
        uint64_t v56 = *v54;
        uint64_t v55 = v54[1];
        *uint64_t v53 = v56;
        v53[1] = v55;
        swift_bridgeObjectRelease();
        v18[v20[6]] = v19[v20[6]];
        uint64_t v57 = v20[7];
        uint64_t v58 = &v18[v57];
        uint64_t v59 = &v19[v57];
        uint64_t v60 = sub_24EA93DE0();
        uint64_t v61 = *(void *)(v60 - 8);
        unint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
        int v63 = v62(v58, 1, v60);
        int v64 = v62(v59, 1, v60);
        if (v63)
        {
          if (!v64)
          {
            (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
            goto LABEL_24;
          }
        }
        else
        {
          if (!v64)
          {
            (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
            goto LABEL_24;
          }
          (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
        }
        size_t v28 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8) - 8) + 64);
        uint64_t v29 = v58;
        uint64_t v30 = v59;
        goto LABEL_14;
      }
    }
    else
    {
      if (!v39)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 40))(v18, v19, v36);
        goto LABEL_28;
      }
      (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v18, v36);
    }
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v18, v19, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_28;
  }
  if (v24)
  {
LABEL_13:
    size_t v28 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8) - 8) + 64);
    uint64_t v29 = v18;
    uint64_t v30 = v19;
LABEL_14:
    memcpy(v29, v30, v28);
    goto LABEL_24;
  }
  uint64_t v25 = sub_24EA93EB0();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 32))(v18, v19, v25);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
  }
  *(_OWORD *)&v18[v20[5]] = *(_OWORD *)&v19[v20[5]];
  v18[v20[6]] = v19[v20[6]];
  uint64_t v40 = v20[7];
  uint64_t v41 = &v18[v40];
  uint64_t v42 = &v19[v40];
  uint64_t v43 = sub_24EA93DE0();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_24:
  uint64_t v46 = a3[7];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicImageAssetState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA4B990);
}

uint64_t sub_24EA4B990(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for DynamicImageAssetState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA4BB30);
}

uint64_t sub_24EA4BB30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];
  return v16(v18, a2, a2, v17);
}

void sub_24EA4BCBC()
{
  sub_24EA4BE10(319, &qword_26B1CFCB0, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
  if (v0 <= 0x3F)
  {
    sub_24EA4BE10(319, (unint64_t *)&qword_26B1CFAC0, (void (*)(uint64_t))type metadata accessor for ImageAsset);
    if (v1 <= 0x3F)
    {
      sub_24EA4BE64();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_24EA4BE10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24EA94820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24EA4BE64()
{
  if (!qword_26B1CFD58)
  {
    type metadata accessor for Artwork();
    sub_24EA4BEF8(&qword_26B1CFCD0, (void (*)(uint64_t))type metadata accessor for Artwork);
    unint64_t v0 = sub_24EA93F50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1CFD58);
    }
  }
}

uint64_t sub_24EA4BEF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicImageAssetState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DynamicImageAssetState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA4C09CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImageAssetState.CodingKeys()
{
  return &type metadata for DynamicImageAssetState.CodingKeys;
}

unint64_t sub_24EA4C0D8()
{
  unint64_t result = qword_269929828;
  if (!qword_269929828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929828);
  }
  return result;
}

unint64_t sub_24EA4C130()
{
  unint64_t result = qword_269929830;
  if (!qword_269929830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929830);
  }
  return result;
}

unint64_t sub_24EA4C188()
{
  unint64_t result = qword_269929838;
  if (!qword_269929838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929838);
  }
  return result;
}

uint64_t sub_24EA4C1DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000024EA9A980 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024EA9AB40 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EA9AB60 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C6163)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24EA4C3F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA4C460(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA4C4C8@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, double a5@<X4>, int a6@<W5>, unsigned char *a7@<X8>)
{
  uint64_t v8 = v7;
  double v46 = a5;
  uint64_t v47 = a2;
  uint64_t v49 = a4;
  int v54 = a3;
  int v9 = a1;
  uint64_t v55 = a7;
  int v52 = a6;
  int v53 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929848);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = sub_24EA93FA0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v51 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v56 = (char *)&v46 - v19;
  uint64_t v20 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v20);
  uint64_t v48 = (uint64_t)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  int v24 = (char *)&v46 - v23;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v46 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v46 - v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (unsigned __int8 *)&v46 - v32;
  sub_24EA4C934(v8, (uint64_t)&v46 - v32);
  if (v53 == 13) {
    int v9 = *v33;
  }
  int v53 = v9;
  sub_24EA4C998((uint64_t)v33);
  sub_24EA4C9F4(v47, (uint64_t)v14);
  sub_24EA4C934(v8, (uint64_t)v30);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v34(v14, 1, v15) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v56, &v30[v20[6]], v15);
    sub_24EA4C998((uint64_t)v30);
    sub_24EA4CA5C((uint64_t)v14);
  }
  else
  {
    sub_24EA4C998((uint64_t)v30);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v56, v14, v15);
  }
  sub_24EA4C934(v8, (uint64_t)v27);
  char v35 = v54;
  if (v54 == 4) {
    char v35 = v27[v20[7]];
  }
  sub_24EA4C998((uint64_t)v27);
  uint64_t v36 = v50;
  sub_24EA4C9F4(v49, v50);
  sub_24EA4C934(v8, (uint64_t)v24);
  if (v34((char *)v36, 1, v15) == 1)
  {
    uint64_t v37 = v51;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v51, &v24[v20[8]], v15);
    sub_24EA4C998((uint64_t)v24);
    sub_24EA4CA5C(v36);
  }
  else
  {
    sub_24EA4C998((uint64_t)v24);
    uint64_t v37 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v51, v36, v15);
  }
  char v38 = v53;
  uint64_t v39 = v48;
  sub_24EA4C934(v8, v48);
  if (v52)
  {
    sub_24EA93E80();
    double v40 = v41;
  }
  else
  {
    double v40 = v46;
  }
  uint64_t v42 = sub_24EA4C998(v39);
  uint64_t v43 = v55;
  *uint64_t v55 = v38;
  v43[1] = MEMORY[0x253346F90](v42, v40);
  uint64_t v44 = *(void (**)(unsigned char *, char *, uint64_t))(v16 + 32);
  v44(&v43[v20[6]], v56, v15);
  v43[v20[7]] = v35;
  return ((uint64_t (*)(unsigned char *, char *, uint64_t))v44)(&v43[v20[8]], v37, v15);
}

uint64_t sub_24EA4C934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA4C998(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA4C9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA4CA5C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929848);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ImageAsset.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA1E564(v1, a1, &qword_26B1CFD40);
}

uint64_t ImageAsset.cropCode.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ImageAsset() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImageAsset.fileType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ImageAsset();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ImageAsset.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ImageAsset();
  return sub_24EA1E564(v1 + *(int *)(v3 + 28), a1, &qword_26B1CF9E8);
}

uint64_t ImageAsset.init(backgroundColor:cropCode:fileType:templateURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *a3;
  sub_24EA1E564(a1, a5, &qword_26B1CFD40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD68);
  sub_24EA94000();
  sub_24EA21258(a2, &qword_26B1CFD68);
  sub_24EA21258(a1, &qword_26B1CFD40);
  uint64_t v10 = (int *)type metadata accessor for ImageAsset();
  uint64_t v11 = (void *)(a5 + v10[5]);
  void *v11 = v13;
  v11[1] = v14;
  *(unsigned char *)(a5 + v10[6]) = v9;
  return sub_24EA1E61C(a4, a5 + v10[7], &qword_26B1CF9E8);
}

uint64_t sub_24EA4CC68(char a1)
{
  return qword_24EA97C78[a1];
}

uint64_t sub_24EA4CC88()
{
  return sub_24EA4CC68(*v0);
}

uint64_t sub_24EA4CC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA50214(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EA4CCB8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24EA4CCC4(uint64_t a1)
{
  unint64_t v2 = sub_24EA4EC00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA4CD00(uint64_t a1)
{
  unint64_t v2 = sub_24EA4EC00();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAsset.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA4EC00();
  sub_24EA94C00();
  v11[15] = 0;
  sub_24EA93EB0();
  sub_24EA503E0(&qword_26B1CFD28, MEMORY[0x263F3E0F0]);
  sub_24EA94A80();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ImageAsset();
    v11[14] = 1;
    sub_24EA94A90();
    v11[13] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_24EA4EC54();
    sub_24EA94AB0();
    v11[11] = 3;
    sub_24EA93DE0();
    sub_24EA503E0(&qword_26B1CF9D0, MEMORY[0x263F06EA8]);
    sub_24EA94A80();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ImageAsset.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929850);
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_24EA4EC00();
  sub_24EA94BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  uint64_t v17 = v23;
  sub_24EA93EB0();
  char v30 = 0;
  sub_24EA503E0(&qword_269928EE0, MEMORY[0x263F3E0F0]);
  sub_24EA94A10();
  sub_24EA1E61C((uint64_t)v9, (uint64_t)v15, &qword_26B1CFD40);
  char v29 = 1;
  uint64_t v18 = sub_24EA94A20();
  uint64_t v19 = (uint64_t *)&v15[v13[5]];
  *uint64_t v19 = v18;
  v19[1] = v20;
  char v27 = 2;
  sub_24EA4ECA8();
  sub_24EA94A40();
  v15[v13[6]] = v28;
  sub_24EA93DE0();
  char v26 = 3;
  sub_24EA503E0(&qword_269928EE8, MEMORY[0x263F06EA8]);
  sub_24EA94A10();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v24);
  sub_24EA1E61C((uint64_t)v6, (uint64_t)&v15[v13[7]], &qword_26B1CF9E8);
  sub_24EA4ECFC((uint64_t)v15, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_24EA4ED60((uint64_t)v15);
}

uint64_t sub_24EA4D3F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageAsset.init(from:)(a1, a2);
}

uint64_t sub_24EA4D408(void *a1)
{
  return ImageAsset.encode(to:)(a1);
}

uint64_t ImageAsset.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EA93DE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EA93EB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v1, (uint64_t)v14, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_24EA94B90();
    sub_24EA503E0(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v15 = type metadata accessor for ImageAsset();
  swift_bridgeObjectRetain();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v1 + *(int *)(v15 + 28), (uint64_t)v7, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1) {
    return sub_24EA94B90();
  }
  uint64_t v17 = v19;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
  sub_24EA94B90();
  sub_24EA503E0(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
  sub_24EA94580();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v17, v2);
}

uint64_t ImageAsset.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EA93DE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EA93EB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA94B70();
  sub_24EA1E564(v1, (uint64_t)v15, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24EA94B90();
    sub_24EA503E0(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v16 = type metadata accessor for ImageAsset();
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v1 + *(int *)(v16 + 28), (uint64_t)v8, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_24EA94B90();
    sub_24EA503E0(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_24EA94BB0();
}

uint64_t sub_24EA4DBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = sub_24EA93DE0();
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v20 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EA93EB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v4, (uint64_t)v16, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    sub_24EA94B90();
    sub_24EA503E0(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v4 + *(int *)(a2 + 28), (uint64_t)v9, &qword_26B1CF9E8);
  uint64_t v17 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v5) == 1) {
    return sub_24EA94B90();
  }
  uint64_t v19 = v20;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v9, v5);
  sub_24EA94B90();
  sub_24EA503E0(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
  sub_24EA94580();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v5);
}

uint64_t sub_24EA4DFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA93DE0();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EA93EB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA94B70();
  sub_24EA1E564(v2, (uint64_t)v15, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24EA94B90();
    sub_24EA503E0(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v2 + *(int *)(a2 + 28), (uint64_t)v8, &qword_26B1CF9E8);
  uint64_t v16 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v4) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    uint64_t v17 = v20;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v8, v4);
    sub_24EA94B90();
    sub_24EA503E0(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v4);
  }
  return sub_24EA94BB0();
}

BOOL _s12FitnessAsset05ImageB0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a2;
  uint64_t v68 = sub_24EA93DE0();
  uint64_t v62 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v60 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9F8);
  MEMORY[0x270FA5388](v61);
  uint64_t v67 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v66 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v64 = (char *)&v60 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v65 = (char *)&v60 - v10;
  uint64_t v11 = sub_24EA93EB0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD50);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v60 - v23;
  MEMORY[0x270FA5388](v25);
  char v27 = (char *)&v60 - v26;
  uint64_t v63 = a1;
  sub_24EA1E564(a1, (uint64_t)&v60 - v26, &qword_26B1CFD40);
  sub_24EA1E564(v69, (uint64_t)v24, &qword_26B1CFD40);
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_24EA1E564((uint64_t)v27, (uint64_t)v18, &qword_26B1CFD40);
  sub_24EA1E564((uint64_t)v24, v28, &qword_26B1CFD40);
  char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v29((uint64_t)v18, 1, v11) == 1)
  {
    sub_24EA21258((uint64_t)v24, &qword_26B1CFD40);
    sub_24EA21258((uint64_t)v27, &qword_26B1CFD40);
    if (v29(v28, 1, v11) == 1)
    {
      sub_24EA21258((uint64_t)v18, &qword_26B1CFD40);
      goto LABEL_11;
    }
LABEL_6:
    char v30 = &qword_26B1CFD50;
    uint64_t v31 = (uint64_t)v18;
LABEL_7:
    sub_24EA21258(v31, v30);
    return 0;
  }
  sub_24EA1E564((uint64_t)v18, (uint64_t)v21, &qword_26B1CFD40);
  if (v29(v28, 1, v11) == 1)
  {
    sub_24EA21258((uint64_t)v24, &qword_26B1CFD40);
    sub_24EA21258((uint64_t)v27, &qword_26B1CFD40);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v28, v11);
  sub_24EA503E0(&qword_26B1CFD38, MEMORY[0x263F3E0F0]);
  char v33 = sub_24EA945D0();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v14, v11);
  sub_24EA21258((uint64_t)v24, &qword_26B1CFD40);
  sub_24EA21258((uint64_t)v27, &qword_26B1CFD40);
  v34(v21, v11);
  sub_24EA21258((uint64_t)v18, &qword_26B1CFD40);
  if ((v33 & 1) == 0) {
    return 0;
  }
LABEL_11:
  char v35 = (int *)type metadata accessor for ImageAsset();
  uint64_t v36 = v35[5];
  uint64_t v37 = v63;
  uint64_t v38 = (uint64_t)v64;
  uint64_t v39 = *(void *)(v63 + v36);
  uint64_t v40 = *(void *)(v63 + v36 + 8);
  uint64_t v42 = v68;
  uint64_t v41 = v69;
  uint64_t v43 = (void *)(v69 + v36);
  uint64_t v45 = (uint64_t)v66;
  uint64_t v44 = (uint64_t)v67;
  uint64_t v46 = (uint64_t)v65;
  if (v39 == *v43 && v40 == v43[1] || (v47 = sub_24EA94AE0(), BOOL result = 0, (v47 & 1) != 0))
  {
    uint64_t v48 = v35[6];
    int v49 = *(unsigned __int8 *)(v37 + v48);
    int v50 = *(unsigned __int8 *)(v41 + v48);
    if (v49) {
      uint64_t v51 = 6778986;
    }
    else {
      uint64_t v51 = 6778480;
    }
    if (v50) {
      uint64_t v52 = 6778986;
    }
    else {
      uint64_t v52 = 6778480;
    }
    if (v51 == v52)
    {
      swift_bridgeObjectRelease_n();
LABEL_23:
      sub_24EA1E564(v37 + v35[7], v46, &qword_26B1CF9E8);
      sub_24EA1E564(v41 + v35[7], v38, &qword_26B1CF9E8);
      uint64_t v54 = v44 + *(int *)(v61 + 48);
      sub_24EA1E564(v46, v44, &qword_26B1CF9E8);
      sub_24EA1E564(v38, v54, &qword_26B1CF9E8);
      uint64_t v55 = v62;
      uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
      if (v56(v44, 1, v42) == 1)
      {
        sub_24EA21258(v38, &qword_26B1CF9E8);
        sub_24EA21258(v46, &qword_26B1CF9E8);
        if (v56(v54, 1, v42) == 1)
        {
          sub_24EA21258(v44, &qword_26B1CF9E8);
          return 1;
        }
      }
      else
      {
        sub_24EA1E564(v44, v45, &qword_26B1CF9E8);
        if (v56(v54, 1, v42) != 1)
        {
          uint64_t v57 = v60;
          (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v60, v54, v42);
          sub_24EA503E0(&qword_26B1CF9E0, MEMORY[0x263F06EA8]);
          char v58 = sub_24EA945D0();
          uint64_t v59 = *(void (**)(char *, uint64_t))(v55 + 8);
          v59(v57, v42);
          sub_24EA21258(v38, &qword_26B1CF9E8);
          sub_24EA21258(v46, &qword_26B1CF9E8);
          v59((char *)v45, v42);
          sub_24EA21258(v44, &qword_26B1CF9E8);
          return (v58 & 1) != 0;
        }
        sub_24EA21258(v38, &qword_26B1CF9E8);
        sub_24EA21258(v46, &qword_26B1CF9E8);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v45, v42);
      }
      char v30 = &qword_26B1CF9F8;
      uint64_t v31 = v44;
      goto LABEL_7;
    }
    char v53 = sub_24EA94AE0();
    swift_bridgeObjectRelease_n();
    BOOL result = 0;
    if (v53) {
      goto LABEL_23;
    }
  }
  return result;
}

uint64_t type metadata accessor for ImageAsset()
{
  uint64_t result = qword_26B1CFAA8;
  if (!qword_26B1CFAA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EA4EC00()
{
  unint64_t result = qword_26B1CFA80;
  if (!qword_26B1CFA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFA80);
  }
  return result;
}

unint64_t sub_24EA4EC54()
{
  unint64_t result = qword_26B1CFD08;
  if (!qword_26B1CFD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFD08);
  }
  return result;
}

unint64_t sub_24EA4ECA8()
{
  unint64_t result = qword_269929858;
  if (!qword_269929858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929858);
  }
  return result;
}

uint64_t sub_24EA4ECFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA4ED60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageAsset();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA4EDBC()
{
  return sub_24EA503E0(&qword_26B1CFAA0, (void (*)(uint64_t))type metadata accessor for ImageAsset);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageAsset(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EA93EB0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    LOBYTE(v14) = *((unsigned char *)a2 + v12);
    *uint64_t v13 = v15;
    v13[1] = v16;
    *((unsigned char *)a1 + v12) = (_BYTE)v14;
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_24EA93DE0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return a1;
}

uint64_t destroy for ImageAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA93EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_24EA93DE0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *initializeWithCopy for ImageAsset(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  LOBYTE(v12) = a2[v10];
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  a1[v10] = (char)v12;
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_24EA93DE0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

char *assignWithCopy for ImageAsset(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[6]] = a2[a3[6]];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_24EA93DE0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

char *initializeWithTake for ImageAsset(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  a1[v9] = a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_24EA93DE0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

char *assignWithTake for ImageAsset(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_24EA93DE0();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA4FBE0);
}

uint64_t sub_24EA4FBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ImageAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA4FD2C);
}

uint64_t sub_24EA4FD2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_24EA4FE64()
{
  sub_24EA20E94(319, &qword_26B1CFD48, MEMORY[0x263F3E0F0]);
  if (v0 <= 0x3F)
  {
    sub_24EA20E94(319, &qword_26B1CF9F0, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for AssetPlatform(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ImageAsset.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA500D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.CodingKeys()
{
  return &type metadata for ImageAsset.CodingKeys;
}

unint64_t sub_24EA50110()
{
  unint64_t result = qword_269929860;
  if (!qword_269929860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929860);
  }
  return result;
}

unint64_t sub_24EA50168()
{
  unint64_t result = qword_26B1CFA90;
  if (!qword_26B1CFA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFA90);
  }
  return result;
}

unint64_t sub_24EA501C0()
{
  unint64_t result = qword_26B1CFA88;
  if (!qword_26B1CFA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFA88);
  }
  return result;
}

uint64_t sub_24EA50214(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F43706F7263 && a2 == 0xE800000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65707954656C6966 && a2 == 0xE800000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24EA503E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ImageAssetEnvironment.init(fetchRemoteImageData:queryRemoteImageURLBestMatches:reportFailedRemoteURL:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

ValueMetadata *type metadata accessor for ImageAssetEnvironment()
{
  return &type metadata for ImageAssetEnvironment;
}

void ImageAssetCache.insertImage(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *v3;
  sub_24EA93FD0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v11 = (void *)sub_24EA93FE0();
  objc_msgSend(v10, sel_setObject_forKey_, a1, v11);
}

id ImageAssetCache.image(forKey:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_24EA93FD0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = (void *)sub_24EA93FE0();
  id v10 = objc_msgSend(v8, sel_objectForKey_, v9);

  return v10;
}

void ImageAssetCache.init(countLimit:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_269929868);
  sub_24EA93FD0();
  sub_24EA46DE0();
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v4, sel_setCountLimit_, a1);
  objc_msgSend(v4, sel_baf_setEvictsObjectsWhenApplicationEntersBackground_, 0);

  *a2 = v4;
}

uint64_t sub_24EA50710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for ImageAssetCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

BOOL static FetchedImageAsset.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s12FitnessAsset05ImageB0V2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for FetchedImageAsset() + 20);
  double v5 = *(double *)(a1 + v4);
  double v6 = *(double *)(a1 + v4 + 8);
  uint64_t v7 = (double *)(a2 + v4);
  double v8 = v7[1];
  BOOL v9 = v5 == *v7;
  return v6 == v8 && v9;
}

uint64_t sub_24EA507C0(uint64_t a1)
{
  unint64_t v2 = sub_24EA51E38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA507FC(uint64_t a1)
{
  unint64_t v2 = sub_24EA51E38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FetchedImageAsset.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EA93DE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EA93EB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v1, (uint64_t)v14, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v15 = type metadata accessor for ImageAsset();
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v1 + *(int *)(v15 + 28), (uint64_t)v7, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    uint64_t v16 = v19;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
  }
  type metadata accessor for FetchedImageAsset();
  return sub_24EA34314();
}

uint64_t FetchedImageAsset.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA51E38();
  sub_24EA94C00();
  LOBYTE(v11) = 0;
  type metadata accessor for ImageAsset();
  sub_24EA51F34(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
  sub_24EA94AB0();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for FetchedImageAsset() + 20));
    v10[15] = 1;
    type metadata accessor for CGSize();
    sub_24EA51F34(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
    sub_24EA94AB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FetchedImageAsset.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EA93DE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EA93EB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA94B70();
  sub_24EA1E564(v1, (uint64_t)v15, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v16 = type metadata accessor for ImageAsset();
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v1 + *(int *)(v16 + 28), (uint64_t)v8, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for FetchedImageAsset();
  sub_24EA34314();
  return sub_24EA94BB0();
}

uint64_t FetchedImageAsset.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v4);
  uint64_t v19 = (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699298F0);
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA51E38();
  sub_24EA94BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v17;
  LOBYTE(v20) = 0;
  sub_24EA51F34(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
  uint64_t v14 = v18;
  sub_24EA94A40();
  sub_24EA2AE2C(v19, v12);
  type metadata accessor for CGSize();
  char v21 = 1;
  sub_24EA51F34(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
  sub_24EA94A40();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  *(_OWORD *)(v12 + *(int *)(v9 + 20)) = v20;
  sub_24EA2F350(v12, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EA51E8C(v12, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
}

uint64_t sub_24EA51558@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchedImageAsset.init(from:)(a1, a2);
}

uint64_t sub_24EA51570(void *a1)
{
  return FetchedImageAsset.encode(to:)(a1);
}

uint64_t sub_24EA5158C(uint64_t a1, uint64_t a2)
{
  v20[1] = a2;
  uint64_t v3 = v2;
  uint64_t v4 = sub_24EA93DE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v20[0] = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EA93EB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v3, (uint64_t)v16, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v17 = type metadata accessor for ImageAsset();
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v3 + *(int *)(v17 + 28), (uint64_t)v9, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    uint64_t v18 = v20[0];
    (*(void (**)(void, char *, uint64_t))(v5 + 32))(v20[0], v9, v4);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v4);
  }
  return sub_24EA34314();
}

uint64_t sub_24EA51980(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v3 = v2;
  uint64_t v4 = sub_24EA93DE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v21 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EA93EB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA94B70();
  sub_24EA1E564(v2, (uint64_t)v16, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v17 = type metadata accessor for ImageAsset();
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(v3 + *(int *)(v17 + 28), (uint64_t)v9, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    uint64_t v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v21, v9, v4);
    sub_24EA94B90();
    sub_24EA51F34(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
  }
  sub_24EA34314();
  return sub_24EA94BB0();
}

BOOL sub_24EA51D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static ImageAsset.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  double v7 = *(double *)(a1 + v6);
  double v8 = *(double *)(a1 + v6 + 8);
  uint64_t v9 = (double *)(a2 + v6);
  double v10 = v9[1];
  BOOL v11 = v7 == *v9;
  return v8 == v10 && v11;
}

uint64_t type metadata accessor for FetchedImageAsset()
{
  uint64_t result = qword_26B1CFA68;
  if (!qword_26B1CFA68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EA51E38()
{
  unint64_t result = qword_26B1CFA40;
  if (!qword_26B1CFA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFA40);
  }
  return result;
}

uint64_t sub_24EA51E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EA51EEC()
{
  return sub_24EA51F34(&qword_26B1CFA60, (void (*)(uint64_t))type metadata accessor for FetchedImageAsset);
}

uint64_t sub_24EA51F34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchedImageAsset(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24EA93EB0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    BOOL v11 = (int *)type metadata accessor for ImageAsset();
    uint64_t v12 = v11[5];
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
    uint64_t v16 = v11[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_24EA93DE0();
    uint64_t v20 = *(void *)(v19 - 8);
    char v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for FetchedImageAsset(uint64_t a1)
{
  uint64_t v2 = sub_24EA93EB0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  uint64_t v4 = type metadata accessor for ImageAsset();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(v4 + 28);
  uint64_t v6 = sub_24EA93DE0();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

char *initializeWithCopy for FetchedImageAsset(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = (int *)type metadata accessor for ImageAsset();
  uint64_t v10 = v9[5];
  BOOL v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)BOOL v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  a1[v9[6]] = a2[v9[6]];
  uint64_t v14 = v9[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_24EA93DE0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithCopy for FetchedImageAsset(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = (int *)type metadata accessor for ImageAsset();
  uint64_t v13 = v12[5];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v12[6]] = a2[v12[6]];
  uint64_t v16 = v12[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_24EA93DE0();
  uint64_t v20 = *(void *)(v19 - 8);
  char v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = &a1[v25];
  char v27 = &a2[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  return a1;
}

char *initializeWithTake for FetchedImageAsset(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  int v9 = (int *)type metadata accessor for ImageAsset();
  *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
  a1[v9[6]] = a2[v9[6]];
  uint64_t v10 = v9[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_24EA93DE0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for FetchedImageAsset(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = (int *)type metadata accessor for ImageAsset();
  uint64_t v13 = v12[5];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  a1[v12[6]] = a2[v12[6]];
  uint64_t v18 = v12[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_24EA93DE0();
  uint64_t v22 = *(void *)(v21 - 8);
  int v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchedImageAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA52E14);
}

uint64_t sub_24EA52E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageAsset();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FetchedImageAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA52E94);
}

uint64_t sub_24EA52E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageAsset();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24EA52F04()
{
  uint64_t result = type metadata accessor for ImageAsset();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FetchedImageAsset.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA53064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchedImageAsset.CodingKeys()
{
  return &type metadata for FetchedImageAsset.CodingKeys;
}

unint64_t sub_24EA530A0()
{
  unint64_t result = qword_2699298F8;
  if (!qword_2699298F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699298F8);
  }
  return result;
}

unint64_t sub_24EA530F8()
{
  unint64_t result = qword_26B1CFA50;
  if (!qword_26B1CFA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFA50);
  }
  return result;
}

unint64_t sub_24EA53150()
{
  unint64_t result = qword_26B1CFA48;
  if (!qword_26B1CFA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFA48);
  }
  return result;
}

uint64_t AssetPlatform.rawValue.getter(char a1)
{
  return *(void *)&aPhone_1[8 * a1];
}

uint64_t sub_24EA531C8(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = AssetPlatform.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == AssetPlatform.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EA94AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EA53254@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s12FitnessAsset0B8PlatformO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_24EA53284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AssetPlatform.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *static AssetPlatform.allCases.getter()
{
  return &unk_2700785B0;
}

void sub_24EA532BC(void *a1@<X8>)
{
  *a1 = &unk_2700785D8;
}

uint64_t sub_24EA532CC()
{
  return sub_24EA94660();
}

uint64_t sub_24EA5332C()
{
  return sub_24EA94650();
}

uint64_t sub_24EA5337C()
{
  char v1 = *v0;
  sub_24EA94B70();
  AssetPlatform.rawValue.getter(v1);
  sub_24EA94610();
  swift_bridgeObjectRelease();
  return sub_24EA94BB0();
}

uint64_t sub_24EA533E0()
{
  AssetPlatform.rawValue.getter(*v0);
  sub_24EA94610();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EA53434()
{
  char v1 = *v0;
  sub_24EA94B70();
  AssetPlatform.rawValue.getter(v1);
  sub_24EA94610();
  swift_bridgeObjectRelease();
  return sub_24EA94BB0();
}

uint64_t _s12FitnessAsset0B8PlatformO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EA949E0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EA534E4()
{
  unint64_t result = qword_269929900;
  if (!qword_269929900)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929900);
  }
  return result;
}

unint64_t sub_24EA53544()
{
  unint64_t result = qword_269929910;
  if (!qword_269929910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929910);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetPlatform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA53664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetPlatform()
{
  return &type metadata for AssetPlatform;
}

unint64_t sub_24EA5369C()
{
  unint64_t result = qword_269929918;
  if (!qword_269929918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929918);
  }
  return result;
}

uint64_t sub_24EA536F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EA93E40();
  uint64_t v27 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v1, (uint64_t)v16, &qword_26B1CFC70);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = sub_24EA93E70();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
      return 0;
    }
    return 1;
  }
  else
  {
    uint64_t v19 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68) + 48)];
    sub_24EA1E61C((uint64_t)v16, (uint64_t)v13, &qword_26B1CFF60);
    uint64_t v20 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v7, v19, v2);
    sub_24EA1E564((uint64_t)v13, (uint64_t)v10, &qword_26B1CFF60);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v2);
      sub_24EA21258((uint64_t)v13, &qword_26B1CFF60);
      sub_24EA21258((uint64_t)v10, &qword_26B1CFF60);
      return 0;
    }
    sub_24EA93E30();
    sub_24EA93E10();
    double v22 = v21;
    int v23 = *(void (**)(char *, uint64_t))(v20 + 8);
    v23(v4, v2);
    v23(v7, v2);
    sub_24EA21258((uint64_t)v13, &qword_26B1CFF60);
    BOOL v24 = v22 > 600.0;
    sub_24EA21258((uint64_t)v10, &qword_26B1CFF60);
  }
  return v24;
}

uint64_t sub_24EA53A34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v5 = sub_24EA940E0();
  uint64_t v6 = sub_24EA940F0();
  sub_24EA53B4C(v11, a1, v6);
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v8 = sub_24EA94100();
    sub_24EA53B4C(v10, a1, v8);
    swift_release();
    a2[3] = (uint64_t)&type metadata for ArtworkPredicateLogicalOperation;
    a2[4] = (uint64_t)&protocol witness table for ArtworkPredicateLogicalOperation;
    uint64_t v9 = swift_allocObject();
    *a2 = v9;
    sub_24EA472A8((uint64_t)v11, v9 + 16);
    sub_24EA472A8((uint64_t)v10, v9 + 56);
    *(unsigned char *)(v9 + 96) = v5 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return result;
}

uint64_t sub_24EA53B4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  uint64_t v4 = sub_24EA94110();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EA94140();
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EA94180();
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24EA94030();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v27 = swift_projectBox();
      uint64_t v28 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v12, v27, v10);
      sub_24EA5F7AC(v33, v34);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v12, v10);
      break;
    case 2uLL:
      uint64_t v22 = swift_projectBox();
      uint64_t v23 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v9, v22, v7);
      sub_24EA60B34(v33, v34);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v7);
      break;
    case 3uLL:
      uint64_t v24 = swift_projectBox();
      uint64_t v26 = v31;
      uint64_t v25 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v6, v24, v32);
      sub_24EA53A34(v33, v34);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v6, v25);
      break;
    default:
      uint64_t v17 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
      char v18 = sub_24EA94020();
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929128);
      uint64_t v20 = v34;
      v34[3] = v19;
      v20[4] = sub_24EA26940();
      *(unsigned char *)uint64_t v20 = v18 & 1;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      break;
  }
  return result;
}

uint64_t sub_24EA53F28(uint64_t a1)
{
  uint64_t v42 = a1;
  uint64_t v2 = sub_24EA93DE0();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v36 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v41 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EA93EB0();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  char v35 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24EA93E70();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DynamicImageAssetFeature.TaskIdentifier(0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA64C80(v1, (uint64_t)v23, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EA64D48((uint64_t)v23, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      sub_24EA94B80();
      DynamicArtworkLayoutEnvironment.hash(into:)();
      uint64_t v25 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      uint64_t v26 = (uint64_t)v16;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      sub_24EA64D48((uint64_t)v23, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA94B80();
      sub_24EA1E564((uint64_t)v13, (uint64_t)v10, &qword_26B1CFD40);
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v10, 1, v40) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v30 = v35;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v35, v10, v28);
        sub_24EA94B90();
        sub_24EA658F8(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
      }
      uint64_t v32 = v37;
      uint64_t v31 = v38;
      sub_24EA94610();
      sub_24EA94610();
      swift_bridgeObjectRelease();
      uint64_t v33 = v41;
      sub_24EA1E564((uint64_t)&v13[*(int *)(v11 + 28)], v41, &qword_26B1CF9E8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v31) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v34 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v36, v33, v31);
        sub_24EA94B90();
        sub_24EA658F8(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      }
      sub_24EA34314();
      uint64_t v25 = type metadata accessor for ImageAsset;
      uint64_t v26 = (uint64_t)v13;
    }
    return sub_24EA64CE8(v26, (uint64_t (*)(void))v25);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v23, v17);
    sub_24EA94B80();
    sub_24EA658F8(&qword_26B1CFA00, MEMORY[0x263F07508]);
    sub_24EA94580();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_24EA545EC()
{
  sub_24EA94B70();
  sub_24EA53F28((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA54630()
{
  sub_24EA94B70();
  sub_24EA53F28((uint64_t)v1);
  return sub_24EA94BB0();
}

void sub_24EA54670()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  objc_msgSend(v0, sel_setCountLimit_, 0);
  objc_msgSend(v0, sel_baf_setEvictsObjectsWhenApplicationEntersBackground_, 0);

  qword_269931C60 = (uint64_t)v0;
}

__n128 DynamicImageAssetFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24EA93E60();
  uint64_t v4 = a2 + *(int *)(type metadata accessor for DynamicImageAssetFeature(0) + 20);
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v5;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v4 + 32) = result;
  return result;
}

uint64_t type metadata accessor for DynamicImageAssetFeature(uint64_t a1)
{
  return sub_24EA64C48(a1, (uint64_t *)&unk_26B1CFA28);
}

uint64_t sub_24EA54748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EA93E70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a2, v7);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a2) = sub_24EA822F4(a1, (uint64_t)v6);
  sub_24EA21258((uint64_t)v6, &qword_26B1CFC70);
  return a2 & 1;
}

uint64_t sub_24EA54840(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = *a1;
  double v12 = a1[1];
  sub_24EA64C80(a3, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  type metadata accessor for DynamicImageAssetState();
  uint64_t v13 = sub_24EA54A10(v17, (uint64_t)v10);
  if (*v14)
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 0, 1, v15);
    sub_24EA54B34((uint64_t)v7, v11, v12);
  }
  ((void (*)(void *, void))v13)(v17, 0);
  return sub_24EA64CE8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageAsset);
}

void (*sub_24EA54A10(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for ImageAsset();
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_24EA64C80(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  v4[5] = sub_24EA63204(v4, (uint64_t)v6);
  return sub_24EA54AC4;
}

void sub_24EA54AC4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_24EA64CE8((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  free(v2);
  free(v1);
}

uint64_t sub_24EA54B34(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 48))(a1, 1, v11, v13) == 1)
  {
    sub_24EA21258(a1, &qword_26B1CFC78);
    unint64_t v16 = sub_24EA62BB8(a2, a3);
    if (v17)
    {
      unint64_t v18 = v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = *v4;
      uint64_t v24 = *v4;
      *uint64_t v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24EA8B424();
        uint64_t v20 = v24;
      }
      sub_24EA1E61C(*(void *)(v20 + 56) + *(void *)(v12 + 72) * v18, (uint64_t)v10, &qword_26B1CFC70);
      sub_24EA63374(v18, v20);
      *uint64_t v4 = v20;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    return sub_24EA21258((uint64_t)v10, &qword_26B1CFC78);
  }
  else
  {
    sub_24EA1E61C(a1, (uint64_t)v15, &qword_26B1CFC70);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_24EA63C7C((uint64_t)v15, v21, a2, a3);
    *uint64_t v4 = v24;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EA54D94(uint64_t (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
    long long v18 = *(_OWORD *)(*(void *)(a3 + 48) + 16 * v14);
    uint64_t result = a1(&v18);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t DynamicImageAssetFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, char *a4)
{
  v348 = a4;
  v346 = a3;
  v349 = (char *)a2;
  uint64_t v329 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v321 = (uint64_t)&v297 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v323 = (uint64_t)&v297 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = sub_24EA93E70();
  uint64_t v332 = *(void *)(v331 - 8);
  MEMORY[0x270FA5388](v331);
  v299 = (char *)&v297 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DynamicImageAssetFeature(0);
  uint64_t v311 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v312 = v10;
  uint64_t v313 = (uint64_t)&v297 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v342 = type metadata accessor for DynamicImageAssetFeature.TaskIdentifier(0);
  MEMORY[0x270FA5388](v342);
  v308 = (char *)&v297 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v320 = (char *)&v297 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v319 = (uint64_t)&v297 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v341 = (uint64_t)&v297 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v310 = (uint64_t)&v297 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929688);
  uint64_t v343 = *(void *)(v20 - 8);
  uint64_t v344 = v20;
  MEMORY[0x270FA5388](v20);
  v309 = (char *)&v297 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  v322 = (char *)&v297 - v23;
  MEMORY[0x270FA5388](v24);
  v337 = (char *)&v297 - v25;
  MEMORY[0x270FA5388](v26);
  v324 = (char *)&v297 - v27;
  uint64_t v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v325 = *(void *)(v330 - 8);
  MEMORY[0x270FA5388](v330);
  v302 = (char *)&v297 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  v301 = (char *)&v297 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v300 = (uint64_t)&v297 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v326 = (uint64_t)&v297 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v297 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v317 = (uint64_t)&v297 - v39;
  uint64_t v40 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v339 = *(void *)(v40 - 8);
  uint64_t v340 = v40;
  MEMORY[0x270FA5388](v40);
  v304 = (char *)&v297 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v328 = (uint64_t)&v297 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v336 = (uint64_t)&v297 - v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v335 = (uint64_t)&v297 - v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v306 = (uint64_t)&v297 - v49;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v50 - 8);
  v314 = (char *)&v297 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v338 = type metadata accessor for ImageAsset();
  uint64_t v345 = *(void *)(v338 - 8);
  uint64_t v52 = *(void *)(v345 + 64);
  MEMORY[0x270FA5388](v338);
  uint64_t v305 = (uint64_t)&v297 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v318 = (uint64_t)&v297 - v54;
  MEMORY[0x270FA5388](v55);
  uint64_t v316 = (uint64_t)&v297 - v56;
  MEMORY[0x270FA5388](v57);
  uint64_t v334 = (uint64_t)&v297 - v58;
  MEMORY[0x270FA5388](v59);
  uint64_t v298 = (uint64_t)&v297 - v60;
  MEMORY[0x270FA5388](v61);
  uint64_t v315 = (uint64_t)&v297 - v62;
  MEMORY[0x270FA5388](v63);
  uint64_t v65 = (char *)&v297 - v64;
  MEMORY[0x270FA5388](v66);
  uint64_t v333 = (uint64_t)&v297 - v67;
  MEMORY[0x270FA5388](v68);
  uint64_t v297 = (uint64_t)&v297 - v69;
  MEMORY[0x270FA5388](v70);
  uint64_t v72 = (char *)&v297 - v71;
  MEMORY[0x270FA5388](v73);
  uint64_t v307 = (uint64_t)&v297 - v74;
  MEMORY[0x270FA5388](v75);
  uint64_t v303 = (uint64_t)&v297 - v76;
  MEMORY[0x270FA5388](v77);
  unint64_t v79 = (char *)&v297 - v78;
  MEMORY[0x270FA5388](v80);
  uint64_t v327 = (uint64_t)&v297 - v81;
  MEMORY[0x270FA5388](v82);
  uint64_t v84 = (char *)&v297 - v83;
  MEMORY[0x270FA5388](v85);
  uint64_t v87 = (char *)&v297 - v86;
  uint64_t v88 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v88);
  long long v90 = (char *)&v297 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v91);
  uint64_t v93 = (uint64_t *)((char *)&v297 - v92);
  sub_24EA64C80((uint64_t)v348, (uint64_t)&v297 - v92, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v105 = (double *)((char *)v93 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48));
      double v106 = *v105;
      double v107 = v105[1];
      uint64_t v108 = v327;
      sub_24EA64D48((uint64_t)v93, v327, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v109 = type metadata accessor for DynamicImageAssetState();
      uint64_t v110 = (uint64_t)v349;
      uint64_t v111 = &v349[*(int *)(v109 + 20)];
      uint64_t v112 = *(void *)v111;
      if (*(void *)(*(void *)v111 + 16)
        && (unint64_t v113 = sub_24EA62C2C(v108), (v114 & 1) != 0)
        && (uint64_t v115 = *(void *)(*(void *)(v112 + 56) + 8 * v113), *(void *)(v115 + 16))
        && (unint64_t v116 = sub_24EA62BB8(v106, v107), (v117 & 1) != 0))
      {
        uint64_t v118 = v300;
        sub_24EA1E564(*(void *)(v115 + 56) + *(void *)(v325 + 72) * v116, v300, &qword_26B1CFC70);
        uint64_t v119 = v326;
        sub_24EA1E61C(v118, v326, &qword_26B1CFC70);
        uint64_t v120 = v330;
      }
      else
      {
        uint64_t v119 = v326;
        uint64_t v120 = v330;
        swift_storeEnumTagMultiPayload();
      }
      if (sub_24EA536F0())
      {
        uint64_t v236 = *(void *)(v110 + *(int *)(v109 + 32));
        if (!*(void *)(*(void *)v111 + 16) || (sub_24EA62C2C(v108), (v237 & 1) == 0))
        {
          sub_24EA64C80(v108, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for ImageAsset);
          unint64_t v238 = sub_24EA652CC(MEMORY[0x263F8EE78]);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v350 = *(void *)v111;
          *(void *)uint64_t v111 = 0x8000000000000000;
          sub_24EA63DD4(v238, (uint64_t)v79, isUniquelyReferenced_nonNull_native);
          *(void *)uint64_t v111 = v350;
          swift_bridgeObjectRelease();
          sub_24EA64CE8((uint64_t)v79, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        }
        uint64_t v240 = v303;
        sub_24EA64C80(v108, v303, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v241 = sub_24EA54A10(&v350, v240);
        if (*v242)
        {
          v243 = v314;
          (*(void (**)(unsigned char *, char *, uint64_t))(v332 + 16))(v314, v347, v331);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v325 + 56))(v243, 0, 1, v120);
          sub_24EA54B34((uint64_t)v243, v106, v107);
        }
        ((void (*)(uint64_t *, void))v241)(&v350, 0);
        sub_24EA64CE8(v240, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v244 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
        v245 = v324;
        v349 = &v324[v244[16]];
        v246 = &v324[v244[20]];
        v247 = &v324[v244[24]];
        uint64_t v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
        uint64_t v249 = v310;
        v250 = (double *)(v310 + *(int *)(v248 + 48));
        sub_24EA64C80(v108, v310, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        double *v250 = v106;
        v250[1] = v107;
        swift_storeEnumTagMultiPayload();
        sub_24EA64C80(v249, v341, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
        sub_24EA658F8(&qword_269929920, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
        sub_24EA948C0();
        sub_24EA64CE8(v249, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
        sub_24EA94740();
        uint64_t v251 = *MEMORY[0x263F39570];
        uint64_t v252 = sub_24EA94500();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v252 - 8) + 104))(v246, v251, v252);
        uint64_t v253 = v307;
        sub_24EA64C80(v108, v307, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v254 = v313;
        sub_24EA64C80((uint64_t)v347, v313, type metadata accessor for DynamicImageAssetFeature);
        unint64_t v255 = (*(unsigned __int8 *)(v345 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v345 + 80);
        unint64_t v256 = (v52 + v255 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v257 = (v256 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v258 = (*(unsigned __int8 *)(v311 + 80) + v257 + 8) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80);
        uint64_t v259 = swift_allocObject();
        sub_24EA64D48(v253, v259 + v255, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v260 = (double *)(v259 + v256);
        double *v260 = v106;
        v260[1] = v107;
        *(void *)(v259 + v257) = v236;
        sub_24EA64D48(v254, v259 + v258, type metadata accessor for DynamicImageAssetFeature);
        *(void *)v247 = &unk_269929960;
        *((void *)v247 + 1) = v259;
        uint64_t v261 = *MEMORY[0x263F39588];
        uint64_t v262 = sub_24EA94510();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v262 - 8) + 104))(v349, v261, v262);
        uint64_t v264 = v343;
        uint64_t v263 = v344;
        (*(void (**)(char *, void, uint64_t))(v343 + 104))(v245, *MEMORY[0x263F39530], v344);
        v265 = v346;
        unint64_t v266 = *v346;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v266 = sub_24EA43550(0, *(void *)(v266 + 16) + 1, 1, v266);
        }
        uint64_t v267 = v326;
        unint64_t v269 = *(void *)(v266 + 16);
        unint64_t v268 = *(void *)(v266 + 24);
        uint64_t v270 = v327;
        if (v269 >= v268 >> 1) {
          unint64_t v266 = sub_24EA43550(v268 > 1, v269 + 1, 1, v266);
        }
        *(void *)(v266 + 16) = v269 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v264 + 32))(v266+ ((*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80))+ *(void *)(v264 + 72) * v269, v324, v263);
        unint64_t *v265 = v266;
        sub_24EA21258(v267, &qword_26B1CFC70);
        v143 = type metadata accessor for ImageAsset;
        uint64_t v142 = v270;
      }
      else
      {
        sub_24EA21258(v119, &qword_26B1CFC70);
        v143 = type metadata accessor for ImageAsset;
        uint64_t v142 = v108;
      }
      return sub_24EA64CE8(v142, (uint64_t (*)(void))v143);
    case 2u:
      uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
      char v122 = *((unsigned char *)v93 + *(int *)(v121 + 48));
      long long v123 = (double *)((char *)v93 + *(int *)(v121 + 64));
      double v124 = *v123;
      double v125 = v123[1];
      sub_24EA64D48((uint64_t)v93, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      long long v126 = &v349[*(int *)(type metadata accessor for DynamicImageAssetState() + 20)];
      uint64_t v127 = *(void *)v126;
      if (!*(void *)(*(void *)v126 + 16)) {
        goto LABEL_72;
      }
      unint64_t v128 = sub_24EA62C2C((uint64_t)v72);
      if ((v129 & 1) == 0) {
        goto LABEL_72;
      }
      uint64_t v130 = *(void *)(*(void *)(v127 + 56) + 8 * v128);
      if (!*(void *)(v130 + 16)) {
        goto LABEL_72;
      }
      unint64_t v131 = sub_24EA62BB8(v124, v125);
      if ((v132 & 1) == 0) {
        goto LABEL_72;
      }
      uint64_t v133 = *(void *)(v130 + 56) + *(void *)(v325 + 72) * v131;
      uint64_t v37 = v301;
      sub_24EA1E564(v133, (uint64_t)v301, &qword_26B1CFC70);
      uint64_t v134 = v330;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        v295 = type metadata accessor for ImageAsset;
        uint64_t v296 = (uint64_t)v72;
        goto LABEL_70;
      }
      uint64_t v135 = v332;
      v136 = v299;
      uint64_t v137 = v331;
      (*(void (**)(char *, char *, uint64_t))(v332 + 32))(v299, v37, v331);
      if (sub_24EA93E50())
      {
        uint64_t v138 = v297;
        sub_24EA64C80((uint64_t)v72, v297, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v139 = sub_24EA54A10(&v350, v138);
        if (*v140)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68);
          v141 = v314;
          unsigned char *v314 = v122;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
          swift_storeEnumTagMultiPayload();
          v136 = v299;
          sub_24EA93E30();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v325 + 56))(v141, 0, 1, v134);
          sub_24EA54B34((uint64_t)v141, v124, v125);
        }
        ((void (*)(uint64_t *, void))v139)(&v350, 0);
        sub_24EA64CE8(v297, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v137);
        uint64_t v142 = (uint64_t)v72;
        v143 = type metadata accessor for ImageAsset;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v137);
LABEL_72:
        v143 = type metadata accessor for ImageAsset;
        uint64_t v142 = (uint64_t)v72;
      }
      return sub_24EA64CE8(v142, (uint64_t (*)(void))v143);
    case 3u:
      v144 = (void *)((char *)v93 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48));
      uint64_t v145 = *v144;
      uint64_t v146 = v144[1];
      uint64_t v147 = v335;
      sub_24EA64D48((uint64_t)v93, v335, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v148 = type metadata accessor for DynamicImageAssetState();
      uint64_t v149 = (uint64_t)v349;
      uint64_t v150 = v333;
      sub_24EA5CC58((uint64_t)&v349[*(int *)(v148 + 28)], v147, v333);
      uint64_t v151 = v149 + *(int *)(v148 + 24);
      sub_24EA21258(v151, &qword_26B1CFAB8);
      sub_24EA64C80(v150, v151, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v152 = v345 + 56;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v345 + 56))(v151, 0, 1, v338);
      v153 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
      v154 = v337;
      v349 = &v337[v153[12]];
      v155 = &v337[v153[16]];
      v347 = &v337[v153[20]];
      v348 = &v337[v153[24]];
      uint64_t v156 = v319;
      sub_24EA64C80(v147, v319, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      swift_storeEnumTagMultiPayload();
      sub_24EA64C80(v156, v341, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
      sub_24EA658F8(&qword_269929920, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
      sub_24EA948C0();
      sub_24EA64CE8(v156, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
      uint64_t v157 = *MEMORY[0x263F39590];
      uint64_t v158 = sub_24EA94510();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v158 - 8) + 104))(v155, v157, v158);
      uint64_t v159 = *MEMORY[0x263F39570];
      uint64_t v160 = sub_24EA94500();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v160 - 8) + 104))(v347, v159, v160);
      sub_24EA64C80(v150, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      unint64_t v161 = (*(unsigned __int8 *)(v152 + 24) + 16) & ~(unint64_t)*(unsigned __int8 *)(v152 + 24);
      uint64_t v162 = swift_allocObject();
      sub_24EA64D48((uint64_t)v65, v162 + v161, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      v163 = (void *)(v162 + ((v52 + v161 + 7) & 0xFFFFFFFFFFFFFFF8));
      void *v163 = v145;
      v163[1] = v146;
      v164 = v348;
      *(void *)v348 = &unk_269929950;
      *((void *)v164 + 1) = v162;
      sub_24EA94740();
      uint64_t v166 = v343;
      uint64_t v165 = v344;
      (*(void (**)(char *, void, uint64_t))(v343 + 104))(v154, *MEMORY[0x263F39530], v344);
      v167 = v346;
      unint64_t v168 = *v346;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v168 = sub_24EA43550(0, *(void *)(v168 + 16) + 1, 1, v168);
      }
      unint64_t v170 = *(void *)(v168 + 16);
      unint64_t v169 = *(void *)(v168 + 24);
      if (v170 >= v169 >> 1) {
        unint64_t v168 = sub_24EA43550(v169 > 1, v170 + 1, 1, v168);
      }
      *(void *)(v168 + 16) = v170 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v166 + 32))(v168+ ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ *(void *)(v166 + 72) * v170, v337, v165);
      unint64_t *v167 = v168;
      sub_24EA64CE8(v333, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      v143 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      v171 = &v352;
      goto LABEL_64;
    case 4u:
      v172 = (double *)((char *)v93 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48));
      double v173 = *v172;
      double v174 = v172[1];
      uint64_t v175 = (uint64_t)v93;
      uint64_t v176 = v323;
      sub_24EA64D48(v175, v323, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      uint64_t v177 = v315;
      sub_24EA64C80(v176, v315, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      v178 = &v349[*(int *)(type metadata accessor for DynamicImageAssetState() + 20)];
      uint64_t v179 = *(void *)v178;
      if (!*(void *)(*(void *)v178 + 16)
        || (unint64_t v180 = sub_24EA62C2C(v177), (v181 & 1) == 0)
        || (uint64_t v182 = *(void *)(*(void *)(v179 + 56) + 8 * v180), !*(void *)(v182 + 16))
        || (unint64_t v183 = sub_24EA62BB8(v173, v174), (v184 & 1) == 0))
      {
        uint64_t v191 = v177;
LABEL_57:
        sub_24EA64CE8(v191, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v143 = type metadata accessor for FetchedImageAsset;
        uint64_t v142 = v176;
        return sub_24EA64CE8(v142, (uint64_t (*)(void))v143);
      }
      uint64_t v185 = *(void *)(v182 + 56) + *(void *)(v325 + 72) * v183;
      uint64_t v37 = v302;
      sub_24EA1E564(v185, (uint64_t)v302, &qword_26B1CFC70);
      uint64_t v186 = v330;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, uint64_t))(v332 + 8))(v37, v331);
        uint64_t v187 = v298;
        sub_24EA64C80(v177, v298, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v188 = sub_24EA54A10(&v350, v187);
        if (*v189)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68);
          v190 = v314;
          sub_24EA64C80(v176, (uint64_t)v314, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
          swift_storeEnumTagMultiPayload();
          sub_24EA93E30();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v325 + 56))(v190, 0, 1, v186);
          sub_24EA54B34((uint64_t)v190, v173, v174);
        }
        ((void (*)(uint64_t *, void))v188)(&v350, 0);
        sub_24EA64CE8(v187, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v191 = v177;
        goto LABEL_57;
      }
      sub_24EA64CE8(v177, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      v295 = type metadata accessor for FetchedImageAsset;
      uint64_t v296 = v176;
LABEL_70:
      sub_24EA64CE8(v296, (uint64_t (*)(void))v295);
      double v103 = &qword_26B1CFC70;
LABEL_42:
      uint64_t v104 = (uint64_t)v37;
      return sub_24EA21258(v104, v103);
    case 5u:
      v192 = (void *)((char *)v93 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48));
      uint64_t v193 = *v192;
      uint64_t v194 = v192[1];
      uint64_t v195 = v336;
      sub_24EA64D48((uint64_t)v93, v336, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v196 = type metadata accessor for DynamicImageAssetState();
      uint64_t v197 = (uint64_t)v349;
      uint64_t v198 = v334;
      uint64_t v199 = (uint64_t)v347;
      sub_24EA5CC58((uint64_t)&v349[*(int *)(v196 + 28)], v195, v334);
      uint64_t v200 = v197 + *(int *)(v196 + 24);
      sub_24EA21258(v200, &qword_26B1CFAB8);
      sub_24EA64C80(v198, v200, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v201 = v345 + 56;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v345 + 56))(v200, 0, 1, v338);
      v202 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
      v203 = v322;
      v349 = &v322[v202[12]];
      v204 = &v322[v202[16]];
      v205 = &v322[v202[20]];
      v348 = &v322[v202[24]];
      uint64_t v206 = (uint64_t)v320;
      (*(void (**)(char *, uint64_t, uint64_t))(v332 + 16))(v320, v199, v331);
      swift_storeEnumTagMultiPayload();
      sub_24EA64C80(v206, v341, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
      sub_24EA658F8(&qword_269929920, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
      sub_24EA948C0();
      sub_24EA64CE8(v206, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
      uint64_t v207 = *MEMORY[0x263F39590];
      uint64_t v208 = sub_24EA94510();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v208 - 8) + 104))(v204, v207, v208);
      uint64_t v209 = *MEMORY[0x263F39570];
      uint64_t v210 = sub_24EA94500();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v210 - 8) + 104))(v205, v209, v210);
      uint64_t v211 = v316;
      sub_24EA64C80(v198, v316, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      unint64_t v212 = (*(unsigned __int8 *)(v201 + 24) + 16) & ~(unint64_t)*(unsigned __int8 *)(v201 + 24);
      uint64_t v213 = swift_allocObject();
      sub_24EA64D48(v211, v213 + v212, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      v214 = (void *)(v213 + ((v52 + v212 + 7) & 0xFFFFFFFFFFFFFFF8));
      void *v214 = v193;
      v214[1] = v194;
      v215 = v348;
      *(void *)v348 = &unk_269929940;
      *((void *)v215 + 1) = v213;
      sub_24EA94740();
      uint64_t v217 = v343;
      uint64_t v216 = v344;
      (*(void (**)(char *, void, uint64_t))(v343 + 104))(v203, *MEMORY[0x263F39530], v344);
      v218 = v346;
      unint64_t v219 = *v346;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v219 = sub_24EA43550(0, *(void *)(v219 + 16) + 1, 1, v219);
      }
      unint64_t v221 = *(void *)(v219 + 16);
      unint64_t v220 = *(void *)(v219 + 24);
      if (v221 >= v220 >> 1) {
        unint64_t v219 = sub_24EA43550(v220 > 1, v221 + 1, 1, v219);
      }
      *(void *)(v219 + 16) = v221 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v217 + 32))(v219+ ((*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80))+ *(void *)(v217 + 72) * v221, v203, v216);
      unint64_t *v218 = v219;
      sub_24EA64CE8(v334, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      v143 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      v171 = &v353;
      goto LABEL_64;
    case 6u:
      uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
      v223 = (void *)((char *)v93 + *(int *)(v222 + 48));
      uint64_t v225 = *v223;
      uint64_t v224 = v223[1];
      uint64_t v226 = v328;
      sub_24EA64D48((uint64_t)v93, v328, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      uint64_t v227 = (uint64_t)v349;
      sub_24EA21258((uint64_t)v349, &qword_2699297C8);
      sub_24EA64C80(v226, v227, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v339 + 56))(v227, 0, 1, v340);
      uint64_t v228 = type metadata accessor for DynamicImageAssetState();
      uint64_t v229 = v321;
      sub_24EA1E564(v227 + *(int *)(v228 + 24), v321, &qword_26B1CFAB8);
      uint64_t v230 = v345;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v345 + 48))(v229, 1, v338) == 1)
      {
        sub_24EA21258(v229, &qword_26B1CFAB8);
        v231 = &v90[*(int *)(v222 + 48)];
        sub_24EA64C80(v226, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
        *(void *)v231 = v225;
        *((void *)v231 + 1) = v224;
        swift_storeEnumTagMultiPayload();
        DynamicImageAssetFeature.reduce(localState:sharedState:sideEffects:action:)(v329, v227, v346, v90);
        sub_24EA64CE8((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
        v143 = type metadata accessor for DynamicArtworkLayoutEnvironment;
        uint64_t v142 = v226;
      }
      else
      {
        uint64_t v274 = v318;
        sub_24EA64D48(v229, v318, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v275 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
        v276 = v309;
        v349 = &v309[v275[12]];
        v277 = &v309[v275[16]];
        v348 = &v309[v275[20]];
        v278 = &v309[v275[24]];
        uint64_t v279 = (uint64_t)v308;
        (*(void (**)(char *, char *, uint64_t))(v332 + 16))(v308, v347, v331);
        swift_storeEnumTagMultiPayload();
        sub_24EA64C80(v279, v341, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
        sub_24EA658F8(&qword_269929920, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
        sub_24EA948C0();
        sub_24EA64CE8(v279, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
        uint64_t v280 = *MEMORY[0x263F39590];
        uint64_t v281 = sub_24EA94510();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v281 - 8) + 104))(v277, v280, v281);
        uint64_t v282 = *MEMORY[0x263F39570];
        uint64_t v283 = sub_24EA94500();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v283 - 8) + 104))(v348, v282, v283);
        uint64_t v284 = v305;
        sub_24EA64C80(v274, v305, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        unint64_t v285 = (*(unsigned __int8 *)(v230 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80);
        uint64_t v286 = swift_allocObject();
        sub_24EA64D48(v284, v286 + v285, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v287 = (void *)(v286 + ((v52 + v285 + 7) & 0xFFFFFFFFFFFFFFF8));
        void *v287 = v225;
        v287[1] = v224;
        *(void *)v278 = &unk_269929930;
        *((void *)v278 + 1) = v286;
        sub_24EA94740();
        uint64_t v289 = v343;
        uint64_t v288 = v344;
        (*(void (**)(char *, void, uint64_t))(v343 + 104))(v276, *MEMORY[0x263F39530], v344);
        v290 = v346;
        unint64_t v291 = *v346;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v291 = sub_24EA43550(0, *(void *)(v291 + 16) + 1, 1, v291);
        }
        unint64_t v293 = *(void *)(v291 + 16);
        unint64_t v292 = *(void *)(v291 + 24);
        if (v293 >= v292 >> 1) {
          unint64_t v291 = sub_24EA43550(v292 > 1, v293 + 1, 1, v291);
        }
        *(void *)(v291 + 16) = v293 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v289 + 32))(v291+ ((*(unsigned __int8 *)(v289 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v289 + 80))+ *(void *)(v289 + 72) * v293, v276, v288);
        unint64_t *v290 = v291;
        sub_24EA64CE8(v318, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        v143 = type metadata accessor for DynamicArtworkLayoutEnvironment;
        v171 = &v351;
LABEL_64:
        uint64_t v142 = *(v171 - 32);
      }
      return sub_24EA64CE8(v142, (uint64_t (*)(void))v143);
    case 7u:
      uint64_t v232 = *v93;
      uint64_t v233 = v93[1];
      uint64_t v234 = (uint64_t)v349;
      sub_24EA1E564((uint64_t)v349, (uint64_t)v37, &qword_2699297C8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v339 + 48))(v37, 1, v340) == 1)
      {
        double v103 = &qword_2699297C8;
        goto LABEL_42;
      }
      uint64_t v87 = v304;
      sub_24EA64D48((uint64_t)v37, (uint64_t)v304, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      v294 = &v90[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48)];
      sub_24EA64C80((uint64_t)v87, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      *(void *)v294 = v232;
      *((void *)v294 + 1) = v233;
      swift_storeEnumTagMultiPayload();
      DynamicImageAssetFeature.reduce(localState:sharedState:sideEffects:action:)(v329, v234, v346, v90);
      sub_24EA64CE8((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
      v273 = type metadata accessor for DynamicArtworkLayoutEnvironment;
      goto LABEL_66;
    default:
      uint64_t v94 = (double *)((char *)v93 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78) + 48));
      double v95 = *v94;
      double v96 = v94[1];
      sub_24EA64D48((uint64_t)v93, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA64C80((uint64_t)v87, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      type metadata accessor for DynamicImageAssetState();
      uint64_t v97 = (uint64_t)v349;
      uint64_t v98 = sub_24EA54A10(&v350, (uint64_t)v84);
      if (*v99)
      {
        uint64_t v100 = v314;
        uint64_t v101 = v330;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v325 + 56))(v100, 0, 1, v101);
        sub_24EA54B34((uint64_t)v100, v95, v96);
      }
      ((void (*)(uint64_t *, void))v98)(&v350, 0);
      sub_24EA64CE8((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v102 = v317;
      sub_24EA1E564(v97, v317, &qword_2699297C8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v339 + 48))(v102, 1, v340) == 1)
      {
        sub_24EA64CE8((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        double v103 = &qword_2699297C8;
        uint64_t v104 = v102;
        return sub_24EA21258(v104, v103);
      }
      uint64_t v271 = v306;
      sub_24EA64D48(v102, v306, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      v272 = (double *)&v90[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48)];
      sub_24EA64C80(v271, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      double *v272 = v95;
      v272[1] = v96;
      swift_storeEnumTagMultiPayload();
      DynamicImageAssetFeature.reduce(localState:sharedState:sideEffects:action:)(v329, v97, v346, v90);
      sub_24EA64CE8((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
      sub_24EA64CE8(v271, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      v273 = type metadata accessor for ImageAsset;
LABEL_66:
      v143 = v273;
      uint64_t v142 = (uint64_t)v87;
      return sub_24EA64CE8(v142, (uint64_t (*)(void))v143);
  }
}

uint64_t sub_24EA575B8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  *(void *)(v6 + 184) = a3;
  *(double *)(v6 + 168) = a5;
  *(double *)(v6 + 176) = a6;
  *(double *)(v6 + 160) = a4;
  *(void *)(v6 + 144) = a1;
  *(void *)(v6 + 152) = a2;
  uint64_t v7 = sub_24EA94700();
  *(void *)(v6 + 192) = v7;
  *(void *)(v6 + 200) = *(void *)(v7 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  *(void *)(v6 + 216) = type metadata accessor for ImageAsset();
  *(void *)(v6 + 224) = swift_task_alloc();
  *(void *)(v6 + 232) = swift_task_alloc();
  *(void *)(v6 + 240) = swift_task_alloc();
  *(void *)(v6 + 248) = type metadata accessor for DynamicImageAssetAction();
  *(void *)(v6 + 256) = swift_task_alloc();
  *(void *)(v6 + 264) = type metadata accessor for FetchedImageAsset();
  *(void *)(v6 + 272) = swift_task_alloc();
  *(void *)(v6 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  *(void *)(v6 + 288) = swift_task_alloc();
  *(void *)(v6 + 296) = swift_task_alloc();
  uint64_t v8 = sub_24EA93DE0();
  *(void *)(v6 + 304) = v8;
  *(void *)(v6 + 312) = *(void *)(v8 - 8);
  *(void *)(v6 + 320) = swift_task_alloc();
  *(void *)(v6 + 328) = swift_task_alloc();
  *(void *)(v6 + 336) = swift_task_alloc();
  sub_24EA94730();
  *(void *)(v6 + 344) = sub_24EA94720();
  uint64_t v10 = sub_24EA946D0();
  *(void *)(v6 + 352) = v10;
  *(void *)(v6 + 360) = v9;
  return MEMORY[0x270FA2498](sub_24EA5782C, v10, v9);
}

uint64_t sub_24EA5782C()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  sub_24EA728D4(v3, *(double *)(v0 + 160), *(double *)(v0 + 168), *(double *)(v0 + 176));
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 368) = v4;
  *(void *)(v0 + 376) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 296);
    swift_release();
    sub_24EA21258(v5, &qword_26B1CF9E8);
    sub_24EA675A0();
    swift_allocError();
    unsigned char *v6 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v10 = *(void *)(v0 + 304);
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v12 = *(void *)(v0 + 296);
    uint64_t v13 = *(void *)(v0 + 184);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
    *(void *)(v0 + 384) = v14;
    *(void *)(v0 + 392) = (v11 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v14(v9, v12, v10);
    uint64_t v15 = *(int *)(type metadata accessor for DynamicImageAssetFeature(0) + 20);
    *(_DWORD *)(v0 + 624) = v15;
    uint64_t v18 = (uint64_t (*)(uint64_t))(*(void *)(v13 + v15) + **(int **)(v13 + v15));
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_24EA57AB8;
    uint64_t v17 = *(void *)(v0 + 336);
    return v18(v17);
  }
}

uint64_t sub_24EA57AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[51] = a1;
  v5[52] = a2;
  v5[53] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[45];
  uint64_t v7 = v4[44];
  if (v2) {
    uint64_t v8 = sub_24EA5BE74;
  }
  else {
    uint64_t v8 = sub_24EA57C00;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24EA57C00()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void **)(v0 + 424);
  sub_24EA94770();
  if (v1)
  {
    sub_24EA4444C(*(void *)(v0 + 408), *(void *)(v0 + 416));
    *(void *)(v0 + 472) = v1;
    *(void *)(v0 + 128) = v1;
    id v2 = v1;
    *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
    sub_24EA6764C(0, &qword_2699299A0);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v3 = *(void **)(v0 + 96);
    *(void *)(v0 + 488) = v3;
    id v4 = objc_msgSend(v3, sel_domain);
    uint64_t v5 = sub_24EA945F0();
    uint64_t v7 = v6;

    if (v5 == sub_24EA945F0() && v7 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v10 = sub_24EA94AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {

LABEL_9:
        *(void *)(v0 + 48) = v1;
        id v11 = v1;
        if (swift_dynamicCast())
        {
          swift_release();

          if (qword_269928EC8 != -1) {
            swift_once();
          }
          uint64_t v12 = *(void *)(v0 + 224);
          uint64_t v13 = *(void *)(v0 + 152);
          uint64_t v14 = sub_24EA941C0();
          __swift_project_value_buffer(v14, (uint64_t)qword_269931C48);
          sub_24EA64C80(v13, v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
          uint64_t v15 = sub_24EA941A0();
          os_log_type_t v16 = sub_24EA947B0();
          BOOL v17 = os_log_type_enabled(v15, v16);
          uint64_t v18 = *(void *)(v0 + 336);
          uint64_t v19 = *(void *)(v0 + 304);
          uint64_t v20 = *(void *)(v0 + 312);
          if (v17)
          {
            uint64_t v84 = *(void *)(v0 + 336);
            uint64_t v22 = *(void *)(v0 + 224);
            uint64_t v21 = *(void *)(v0 + 232);
            uint64_t v24 = *(void *)(v0 + 160);
            uint64_t v23 = *(void *)(v0 + 168);
            uint64_t v25 = swift_slowAlloc();
            uint64_t type = swift_slowAlloc();
            v88[0] = type;
            *(_DWORD *)uint64_t v25 = 136315394;
            sub_24EA64C80(v22, v21, (uint64_t (*)(void))type metadata accessor for ImageAsset);
            uint64_t v26 = sub_24EA94600();
            *(void *)(v0 + 88) = sub_24EA81BE0(v26, v27, v88);
            sub_24EA94830();
            swift_bridgeObjectRelease();
            sub_24EA64CE8(v22, (uint64_t (*)(void))type metadata accessor for ImageAsset);
            *(_WORD *)(v25 + 12) = 2080;
            *(void *)(v0 + 32) = v24;
            *(void *)(v0 + 40) = v23;
            type metadata accessor for CGSize();
            uint64_t v28 = sub_24EA94600();
            *(void *)(v0 + 104) = sub_24EA81BE0(v28, v29, v88);
            sub_24EA94830();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24EA1C000, v15, v16, "Fetching %s for %s cancelled", (uint8_t *)v25, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x253348310](type, -1, -1);
            MEMORY[0x253348310](v25, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v84, v19);
          }
          else
          {
            uint64_t v74 = *(void *)(v0 + 224);

            sub_24EA64CE8(v74, (uint64_t (*)(void))type metadata accessor for ImageAsset);
            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
          }
          (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v75 = *(uint64_t (**)(void))(v0 + 8);
          return v75();
        }
        else
        {

          if (qword_269928EC8 != -1) {
            swift_once();
          }
          uint64_t v30 = *(void *)(v0 + 336);
          uint64_t v32 = *(void *)(v0 + 312);
          uint64_t v31 = *(void *)(v0 + 320);
          uint64_t v33 = *(void *)(v0 + 304);
          uint64_t v34 = sub_24EA941C0();
          __swift_project_value_buffer(v34, (uint64_t)qword_269931C48);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
          id v35 = v1;
          id v36 = v1;
          uint64_t v37 = sub_24EA941A0();
          os_log_type_t v38 = sub_24EA947B0();
          BOOL v39 = os_log_type_enabled(v37, v38);
          uint64_t v41 = *(void *)(v0 + 312);
          uint64_t v40 = *(void *)(v0 + 320);
          uint64_t v42 = *(void *)(v0 + 304);
          if (v39)
          {
            log = v37;
            uint64_t v43 = swift_slowAlloc();
            uint64_t v82 = (void *)swift_slowAlloc();
            uint64_t v85 = swift_slowAlloc();
            v88[0] = v85;
            *(_DWORD *)uint64_t v43 = 136446466;
            sub_24EA658F8(&qword_2699299B0, MEMORY[0x263F06EA8]);
            uint64_t v44 = sub_24EA94AD0();
            os_log_type_t typea = v38;
            *(void *)(v0 + 72) = sub_24EA81BE0(v44, v45, v88);
            sub_24EA94830();
            swift_bridgeObjectRelease();
            uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
            v46(v40, v42);
            *(_WORD *)(v43 + 12) = 2114;
            id v47 = v1;
            uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v0 + 80) = v48;
            sub_24EA94830();
            *uint64_t v82 = v48;

            _os_log_impl(&dword_24EA1C000, log, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v43, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
            swift_arrayDestroy();
            MEMORY[0x253348310](v82, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253348310](v85, -1, -1);
            MEMORY[0x253348310](v43, -1, -1);
          }
          else
          {
            uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
            v46(*(void *)(v0 + 320), *(void *)(v0 + 304));
          }
          *(void *)(v0 + 592) = v46;
          uint64_t v76 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
          uint64_t v87 = (uint64_t (*)(uint64_t))(*(void *)(v76 + 32) + **(int **)(v76 + 32));
          uint64_t v77 = (void *)swift_task_alloc();
          *(void *)(v0 + 600) = v77;
          *uint64_t v77 = v0;
          v77[1] = sub_24EA5B76C;
          uint64_t v78 = *(void *)(v0 + 336);
          return v87(v78);
        }
      }
    }

    if (qword_269928EC8 != -1) {
      swift_once();
    }
    uint64_t v49 = *(void *)(v0 + 240);
    uint64_t v50 = *(void *)(v0 + 152);
    uint64_t v51 = sub_24EA941C0();
    __swift_project_value_buffer(v51, (uint64_t)qword_269931C48);
    sub_24EA64C80(v50, v49, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v52 = sub_24EA941A0();
    os_log_type_t v53 = sub_24EA947B0();
    BOOL v54 = os_log_type_enabled(v52, v53);
    uint64_t v55 = *(void *)(v0 + 240);
    if (v54)
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v58 = *(void *)(v0 + 160);
      uint64_t v57 = *(void *)(v0 + 168);
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      v88[0] = v60;
      *(_DWORD *)uint64_t v59 = 136315394;
      sub_24EA64C80(v55, v56, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v61 = sub_24EA94600();
      *(void *)(v0 + 120) = sub_24EA81BE0(v61, v62, v88);
      sub_24EA94830();
      swift_bridgeObjectRelease();
      sub_24EA64CE8(v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      *(_WORD *)(v59 + 12) = 2080;
      *(void *)(v0 + 16) = v58;
      *(void *)(v0 + 24) = v57;
      type metadata accessor for CGSize();
      uint64_t v63 = sub_24EA94600();
      *(void *)(v0 + 136) = sub_24EA81BE0(v63, v64, v88);
      sub_24EA94830();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EA1C000, v52, v53, "Fetching fallback for %s with %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x253348310](v60, -1, -1);
      MEMORY[0x253348310](v59, -1, -1);
    }
    else
    {
      sub_24EA64CE8(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
    }

    uint64_t v65 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
    sub_24EA94800();
    unint64_t v67 = v66;
    unint64_t v69 = v68;
    uint64_t v86 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v65 + *v65);
    uint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v70;
    *uint64_t v70 = v0;
    v70[1] = sub_24EA5A5FC;
    uint64_t v71 = *(void *)(v0 + 152);
    v72.n128_u64[0] = v67;
    v73.n128_u64[0] = v69;
    return v86(v71, v72, v73);
  }
  else
  {
    *(unsigned char *)(v0 + 629) = *(unsigned char *)(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 216) + 24));
    return MEMORY[0x270FA2498](sub_24EA587D4, 0, 0);
  }
}

uint64_t sub_24EA587D4()
{
  char v1 = *(unsigned char *)(v0 + 629);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 432) = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(unsigned char *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v6;
  uint64_t v7 = sub_24EA6764C(0, (unint64_t *)&qword_26B1CFEE0);
  void *v6 = v0;
  v6[1] = sub_24EA588FC;
  return MEMORY[0x270FA2360](v0 + 64, 0, 0, 0xD000000000000021, 0x800000024EA9AB80, sub_24EA67648, v5, v7);
}

uint64_t sub_24EA588FC()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24EA59784;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24EA58A18;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24EA58A18()
{
  v0[57] = v0[8];
  return MEMORY[0x270FA2498](sub_24EA58A38, v0[44], v0[45]);
}

uint64_t sub_24EA58A38()
{
  uint64_t v107 = v0;
  uint64_t v1 = *(void **)(v0 + 448);
  sub_24EA94770();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 408);
    unint64_t v2 = *(void *)(v0 + 416);

    sub_24EA4444C(v3, v2);
    *(void *)(v0 + 472) = v1;
    *(void *)(v0 + 128) = v1;
    id v4 = v1;
    *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
    sub_24EA6764C(0, &qword_2699299A0);
    if (swift_dynamicCast())
    {
      uint64_t v5 = *(void **)(v0 + 96);
      *(void *)(v0 + 488) = v5;
      id v6 = objc_msgSend(v5, sel_domain);
      uint64_t v7 = sub_24EA945F0();
      uint64_t v9 = v8;

      if (v7 == sub_24EA945F0() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
LABEL_12:

        if (qword_269928EC8 != -1) {
          swift_once();
        }
        uint64_t v29 = *(void *)(v0 + 240);
        uint64_t v30 = *(void *)(v0 + 152);
        uint64_t v31 = sub_24EA941C0();
        __swift_project_value_buffer(v31, (uint64_t)qword_269931C48);
        sub_24EA64C80(v30, v29, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v32 = sub_24EA941A0();
        os_log_type_t v33 = sub_24EA947B0();
        BOOL v34 = os_log_type_enabled(v32, v33);
        uint64_t v35 = *(void *)(v0 + 240);
        if (v34)
        {
          uint64_t v36 = *(void *)(v0 + 232);
          uint64_t v38 = *(void *)(v0 + 160);
          uint64_t v37 = *(void *)(v0 + 168);
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          v106[0] = v40;
          *(_DWORD *)uint64_t v39 = 136315394;
          sub_24EA64C80(v35, v36, (uint64_t (*)(void))type metadata accessor for ImageAsset);
          uint64_t v41 = sub_24EA94600();
          *(void *)(v0 + 120) = sub_24EA81BE0(v41, v42, v106);
          sub_24EA94830();
          swift_bridgeObjectRelease();
          sub_24EA64CE8(v35, (uint64_t (*)(void))type metadata accessor for ImageAsset);
          *(_WORD *)(v39 + 12) = 2080;
          *(void *)(v0 + 16) = v38;
          *(void *)(v0 + 24) = v37;
          type metadata accessor for CGSize();
          uint64_t v43 = sub_24EA94600();
          *(void *)(v0 + 136) = sub_24EA81BE0(v43, v44, v106);
          sub_24EA94830();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24EA1C000, v32, v33, "Fetching fallback for %s with %s", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x253348310](v40, -1, -1);
          MEMORY[0x253348310](v39, -1, -1);
        }
        else
        {
          sub_24EA64CE8(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
        }

        unint64_t v45 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
        sub_24EA94800();
        unint64_t v47 = v46;
        unint64_t v49 = v48;
        uint64_t v104 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v45 + *v45);
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 496) = v50;
        void *v50 = v0;
        v50[1] = sub_24EA5A5FC;
        uint64_t v51 = *(void *)(v0 + 152);
        v52.n128_u64[0] = v47;
        v53.n128_u64[0] = v49;
        return v104(v51, v52, v53);
      }
      char v28 = sub_24EA94AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_12;
      }
    }
    *(void *)(v0 + 48) = v1;
    id v54 = v1;
    if (swift_dynamicCast())
    {
      swift_release();

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 224);
      uint64_t v56 = *(void *)(v0 + 152);
      uint64_t v57 = sub_24EA941C0();
      __swift_project_value_buffer(v57, (uint64_t)qword_269931C48);
      sub_24EA64C80(v56, v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v58 = sub_24EA941A0();
      os_log_type_t v59 = sub_24EA947B0();
      BOOL v60 = os_log_type_enabled(v58, v59);
      uint64_t v61 = *(void *)(v0 + 336);
      uint64_t v62 = *(void *)(v0 + 304);
      uint64_t v63 = *(void *)(v0 + 312);
      if (v60)
      {
        uint64_t v102 = *(void *)(v0 + 336);
        uint64_t v65 = *(void *)(v0 + 224);
        uint64_t v64 = *(void *)(v0 + 232);
        uint64_t v67 = *(void *)(v0 + 160);
        uint64_t v66 = *(void *)(v0 + 168);
        uint64_t v68 = swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        v106[0] = type;
        *(_DWORD *)uint64_t v68 = 136315394;
        sub_24EA64C80(v65, v64, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v69 = sub_24EA94600();
        *(void *)(v0 + 88) = sub_24EA81BE0(v69, v70, v106);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        sub_24EA64CE8(v65, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        *(_WORD *)(v68 + 12) = 2080;
        *(void *)(v0 + 32) = v67;
        *(void *)(v0 + 40) = v66;
        type metadata accessor for CGSize();
        uint64_t v71 = sub_24EA94600();
        *(void *)(v0 + 104) = sub_24EA81BE0(v71, v72, v106);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24EA1C000, v58, v59, "Fetching %s for %s cancelled", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253348310](type, -1, -1);
        MEMORY[0x253348310](v68, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v102, v62);
      }
      else
      {
        uint64_t v92 = *(void *)(v0 + 224);

        sub_24EA64CE8(v92, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
      }
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v93 = *(uint64_t (**)(void))(v0 + 8);
      return v93();
    }
    else
    {

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v73 = *(void *)(v0 + 336);
      uint64_t v75 = *(void *)(v0 + 312);
      uint64_t v74 = *(void *)(v0 + 320);
      uint64_t v76 = *(void *)(v0 + 304);
      uint64_t v77 = sub_24EA941C0();
      __swift_project_value_buffer(v77, (uint64_t)qword_269931C48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v74, v73, v76);
      id v78 = v1;
      id v79 = v1;
      uint64_t v80 = sub_24EA941A0();
      os_log_type_t v81 = sub_24EA947B0();
      BOOL v82 = os_log_type_enabled(v80, v81);
      uint64_t v84 = *(void *)(v0 + 312);
      uint64_t v83 = *(void *)(v0 + 320);
      uint64_t v85 = *(void *)(v0 + 304);
      if (v82)
      {
        log = v80;
        uint64_t v86 = swift_slowAlloc();
        uint64_t v100 = (void *)swift_slowAlloc();
        uint64_t v103 = swift_slowAlloc();
        v106[0] = v103;
        *(_DWORD *)uint64_t v86 = 136446466;
        sub_24EA658F8(&qword_2699299B0, MEMORY[0x263F06EA8]);
        uint64_t v87 = sub_24EA94AD0();
        os_log_type_t typea = v81;
        *(void *)(v0 + 72) = sub_24EA81BE0(v87, v88, v106);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v89(v83, v85);
        *(_WORD *)(v86 + 12) = 2114;
        id v90 = v1;
        uint64_t v91 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 80) = v91;
        sub_24EA94830();
        *uint64_t v100 = v91;

        _os_log_impl(&dword_24EA1C000, log, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v86, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
        swift_arrayDestroy();
        MEMORY[0x253348310](v100, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253348310](v103, -1, -1);
        MEMORY[0x253348310](v86, -1, -1);
      }
      else
      {
        uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v89(*(void *)(v0 + 320), *(void *)(v0 + 304));
      }
      *(void *)(v0 + 592) = v89;
      uint64_t v94 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
      uint64_t v105 = (uint64_t (*)(uint64_t))(*(void *)(v94 + 32) + **(int **)(v94 + 32));
      double v95 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v95;
      *double v95 = v0;
      v95[1] = sub_24EA5B76C;
      uint64_t v96 = *(void *)(v0 + 336);
      return v105(v96);
    }
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 264);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 168);
    sub_24EA64C80(*(void *)(v0 + 152), v11, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v15 = (void *)(v11 + *(int *)(v12 + 20));
    *uint64_t v15 = v14;
    v15[1] = v13;
    if (qword_269928ED0 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void *)(v0 + 456);
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 256);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 168);
    uint64_t v21 = (void *)qword_269931C60;
    sub_24EA64C80(v17, *(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD60));
    id v22 = v21;
    uint64_t v23 = (void *)sub_24EA93FF0();
    objc_msgSend(v22, sel_setObject_forKey_, v16, v23);

    uint64_t v24 = (void *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48));
    sub_24EA64C80(v17, v18, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    *uint64_t v24 = v20;
    v24[1] = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v25;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299A8);
    *uint64_t v25 = v0;
    v25[1] = sub_24EA5A34C;
    uint64_t v27 = *(void *)(v0 + 256);
    return MEMORY[0x270F252C8](v27, v26);
  }
}

uint64_t sub_24EA59784()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  return MEMORY[0x270FA2498](sub_24EA597E8, v1, v2);
}

uint64_t sub_24EA597E8()
{
  uint64_t v88 = v0;
  sub_24EA4444C(*(void *)(v0 + 408), *(void *)(v0 + 416));
  uint64_t v1 = *(void **)(v0 + 448);
  *(void *)(v0 + 128) = v1;
  *(void *)(v0 + 472) = v1;
  id v2 = v1;
  *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
  sub_24EA6764C(0, &qword_2699299A0);
  if (!swift_dynamicCast())
  {
LABEL_8:

    *(void *)(v0 + 48) = v1;
    id v11 = v1;
    if (swift_dynamicCast())
    {
      swift_release();

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v12 = *(void *)(v0 + 224);
      uint64_t v13 = *(void *)(v0 + 152);
      uint64_t v14 = sub_24EA941C0();
      __swift_project_value_buffer(v14, (uint64_t)qword_269931C48);
      sub_24EA64C80(v13, v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v15 = sub_24EA941A0();
      os_log_type_t v16 = sub_24EA947B0();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 336);
      uint64_t v19 = *(void *)(v0 + 304);
      uint64_t v20 = *(void *)(v0 + 312);
      if (v17)
      {
        os_log_t log = *(os_log_t *)(v0 + 304);
        uint64_t v22 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 232);
        uint64_t v24 = *(void *)(v0 + 160);
        uint64_t v23 = *(void *)(v0 + 168);
        uint64_t v25 = swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        uint64_t v87 = type;
        *(_DWORD *)uint64_t v25 = 136315394;
        sub_24EA64C80(v22, v21, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v26 = sub_24EA94600();
        *(void *)(v0 + 88) = sub_24EA81BE0(v26, v27, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        sub_24EA64CE8(v22, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        *(_WORD *)(v25 + 12) = 2080;
        *(void *)(v0 + 32) = v24;
        *(void *)(v0 + 40) = v23;
        type metadata accessor for CGSize();
        uint64_t v28 = sub_24EA94600();
        *(void *)(v0 + 104) = sub_24EA81BE0(v28, v29, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24EA1C000, v15, v16, "Fetching %s for %s cancelled", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253348310](type, -1, -1);
        MEMORY[0x253348310](v25, -1, -1);

        (*(void (**)(uint64_t, os_log_t))(v20 + 8))(v18, log);
      }
      else
      {
        uint64_t v75 = *(void *)(v0 + 224);

        sub_24EA64CE8(v75, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
      return v76();
    }
    else
    {

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v30 = *(void *)(v0 + 336);
      uint64_t v32 = *(void *)(v0 + 312);
      uint64_t v31 = *(void *)(v0 + 320);
      uint64_t v33 = *(void *)(v0 + 304);
      uint64_t v34 = sub_24EA941C0();
      __swift_project_value_buffer(v34, (uint64_t)qword_269931C48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
      id v35 = v1;
      id v36 = v1;
      uint64_t v37 = sub_24EA941A0();
      os_log_type_t v38 = sub_24EA947B0();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v41 = *(void *)(v0 + 312);
      uint64_t v40 = *(void *)(v0 + 320);
      uint64_t v42 = *(void *)(v0 + 304);
      if (v39)
      {
        uint64_t v43 = swift_slowAlloc();
        BOOL v82 = (void *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v87 = v83;
        *(_DWORD *)uint64_t v43 = 136446466;
        sub_24EA658F8(&qword_2699299B0, MEMORY[0x263F06EA8]);
        uint64_t v44 = sub_24EA94AD0();
        os_log_type_t typea = v38;
        *(void *)(v0 + 72) = sub_24EA81BE0(v44, v45, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(v40, v42);
        *(_WORD *)(v43 + 12) = 2114;
        id v47 = v1;
        uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 80) = v48;
        sub_24EA94830();
        *BOOL v82 = v48;

        _os_log_impl(&dword_24EA1C000, v37, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
        swift_arrayDestroy();
        MEMORY[0x253348310](v82, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253348310](v83, -1, -1);
        MEMORY[0x253348310](v43, -1, -1);
      }
      else
      {
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(*(void *)(v0 + 320), *(void *)(v0 + 304));
      }
      *(void *)(v0 + 592) = v46;
      uint64_t v77 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
      uint64_t v86 = (uint64_t (*)(uint64_t))(*(void *)(v77 + 32) + **(int **)(v77 + 32));
      id v78 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v78;
      *id v78 = v0;
      v78[1] = sub_24EA5B76C;
      uint64_t v79 = *(void *)(v0 + 336);
      return v86(v79);
    }
  }
  uint64_t v3 = *(void **)(v0 + 96);
  *(void *)(v0 + 488) = v3;
  id v4 = objc_msgSend(v3, sel_domain);
  uint64_t v5 = sub_24EA945F0();
  uint64_t v7 = v6;

  if (v5 == sub_24EA945F0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {

      goto LABEL_8;
    }
  }

  if (qword_269928EC8 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)(v0 + 240);
  uint64_t v50 = *(void *)(v0 + 152);
  uint64_t v51 = sub_24EA941C0();
  __swift_project_value_buffer(v51, (uint64_t)qword_269931C48);
  sub_24EA64C80(v50, v49, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  __n128 v52 = sub_24EA941A0();
  os_log_type_t v53 = sub_24EA947B0();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v55 = *(void *)(v0 + 240);
  if (v54)
  {
    uint64_t v56 = *(void *)(v0 + 232);
    uint64_t v58 = *(void *)(v0 + 160);
    uint64_t v57 = *(void *)(v0 + 168);
    uint64_t v59 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v87 = v60;
    *(_DWORD *)uint64_t v59 = 136315394;
    sub_24EA64C80(v55, v56, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v61 = sub_24EA94600();
    *(void *)(v0 + 120) = sub_24EA81BE0(v61, v62, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    sub_24EA64CE8(v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    *(_WORD *)(v59 + 12) = 2080;
    *(void *)(v0 + 16) = v58;
    *(void *)(v0 + 24) = v57;
    type metadata accessor for CGSize();
    uint64_t v63 = sub_24EA94600();
    *(void *)(v0 + 136) = sub_24EA81BE0(v63, v64, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EA1C000, v52, v53, "Fetching fallback for %s with %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253348310](v60, -1, -1);
    MEMORY[0x253348310](v59, -1, -1);
  }
  else
  {
    sub_24EA64CE8(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
  }

  uint64_t v65 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
  sub_24EA94800();
  unint64_t v67 = v66;
  unint64_t v69 = v68;
  uint64_t v85 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v65 + *v65);
  unint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v70;
  *unint64_t v70 = v0;
  v70[1] = sub_24EA5A5FC;
  uint64_t v71 = *(void *)(v0 + 152);
  v72.n128_u64[0] = v67;
  v73.n128_u64[0] = v69;
  return v85(v71, v72, v73);
}

uint64_t sub_24EA5A34C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA64CE8(v2, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA5A4A4, v4, v3);
}

uint64_t sub_24EA5A4A4()
{
  uint64_t v1 = (void *)v0[57];
  uint64_t v2 = v0[51];
  unint64_t v3 = v0[52];
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[38];
  uint64_t v6 = v0[39];
  uint64_t v7 = v0[35];
  swift_release();

  sub_24EA4444C(v2, v3);
  sub_24EA64CE8(v7, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_24EA5A5FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 504) = a1;
  *(void *)(v4 + 512) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 360);
  uint64_t v6 = *(void *)(v3 + 352);
  if (v1) {
    uint64_t v7 = sub_24EA5C9D0;
  }
  else {
    uint64_t v7 = sub_24EA5A740;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_24EA5A740()
{
  uint64_t v1 = *(void *)(v0 + 512);
  sub_24EA94770();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 488);
    (*(void (**)(void, void))(*(void *)(v0 + 312) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 304));
    swift_release();
    swift_bridgeObjectRelease();

LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 288);
  sub_24EA82C24(*(void *)(v0 + 504), v5);
  swift_bridgeObjectRelease();
  int v6 = v3(v5, 1, v4);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 288);
  if (v6 == 1)
  {
    uint64_t v9 = *(void **)(v0 + 488);
    uint64_t v10 = *(void *)(v0 + 336);
    uint64_t v11 = *(void *)(v0 + 312);
    swift_release();
    sub_24EA21258(v8, &qword_26B1CF9E8);
    sub_24EA675F4();
    swift_allocError();
    *uint64_t v12 = 2;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v7);
    goto LABEL_5;
  }
  uint64_t v15 = (void *)(*(void *)(v0 + 184) + *(int *)(v0 + 624));
  (*(void (**)(void, void, void))(v0 + 384))(*(void *)(v0 + 328), *(void *)(v0 + 288), *(void *)(v0 + 304));
  uint64_t v18 = (uint64_t (*)(uint64_t))(*v15 + *(int *)*v15);
  os_log_type_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v16;
  *os_log_type_t v16 = v0;
  v16[1] = sub_24EA5AA10;
  uint64_t v17 = *(void *)(v0 + 328);
  return v18(v17);
}

uint64_t sub_24EA5AA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[66] = a1;
  v5[67] = a2;
  v5[68] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[45];
  uint64_t v7 = v4[44];
  if (v2) {
    uint64_t v8 = sub_24EA5CB08;
  }
  else {
    uint64_t v8 = sub_24EA5AB5C;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24EA5AB5C()
{
  uint64_t v1 = *(void *)(v0 + 544);
  sub_24EA94770();
  if (v1)
  {
    unint64_t v2 = *(void *)(v0 + 536);
    uint64_t v3 = *(void *)(v0 + 528);
    uint64_t v4 = *(void **)(v0 + 488);
    uint64_t v5 = *(void *)(v0 + 336);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 312);
    swift_release();

    sub_24EA4444C(v3, v2);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v6, v7);
    v9(v5, v7);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    *(unsigned char *)(v0 + 630) = *(unsigned char *)(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 216) + 24));
    return MEMORY[0x270FA2498](sub_24EA5AD24, 0, 0);
  }
}

uint64_t sub_24EA5AD24()
{
  char v1 = *(unsigned char *)(v0 + 630);
  uint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 528);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 552) = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(unsigned char *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v6;
  uint64_t v7 = sub_24EA6764C(0, (unint64_t *)&qword_26B1CFEE0);
  void *v6 = v0;
  v6[1] = sub_24EA5AE50;
  return MEMORY[0x270FA2360](v0 + 112, 0, 0, 0xD000000000000021, 0x800000024EA9AB80, sub_24EA67648, v5, v7);
}

uint64_t sub_24EA5AE50()
{
  *(void *)(*(void *)v1 + 568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24EA5B2C8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24EA5AF6C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24EA5AF6C()
{
  v0[72] = v0[14];
  return MEMORY[0x270FA2498](sub_24EA5AF8C, v0[44], v0[45]);
}

uint64_t sub_24EA5AF8C()
{
  uint64_t v1 = *(void *)(v0 + 568);
  sub_24EA94770();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 576);
    unint64_t v3 = *(void *)(v0 + 536);
    uint64_t v4 = *(void *)(v0 + 528);
    uint64_t v5 = *(void **)(v0 + 488);
    uint64_t v6 = *(void *)(v0 + 336);
    uint64_t v7 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 304);
    uint64_t v9 = *(void *)(v0 + 312);
    swift_release();

    sub_24EA4444C(v4, v3);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v6, v8);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 280);
    uint64_t v14 = *(void *)(v0 + 264);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 168);
    sub_24EA64C80(*(void *)(v0 + 152), v13, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v17 = (void *)(v13 + *(int *)(v14 + 20));
    *uint64_t v17 = v16;
    v17[1] = v15;
    if (qword_269928ED0 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)(v0 + 576);
    uint64_t v19 = *(void *)(v0 + 280);
    uint64_t v20 = *(void *)(v0 + 256);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 168);
    uint64_t v23 = (void *)qword_269931C60;
    sub_24EA64C80(v19, *(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    id v24 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD60));
    id v25 = v23;
    uint64_t v26 = (void *)sub_24EA93FF0();
    objc_msgSend(v25, sel_setObject_forKey_, v18, v26);

    unint64_t v27 = (void *)(v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48));
    sub_24EA64C80(v19, v20, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    *unint64_t v27 = v22;
    v27[1] = v21;
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v28;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299A8);
    *uint64_t v28 = v0;
    v28[1] = sub_24EA5B490;
    uint64_t v30 = *(void *)(v0 + 256);
    return MEMORY[0x270F252C8](v30, v29);
  }
}

uint64_t sub_24EA5B2C8()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  return MEMORY[0x270FA2498](sub_24EA5B32C, v1, v2);
}

uint64_t sub_24EA5B32C()
{
  unint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 528);
  unint64_t v3 = *(void **)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 312);
  swift_release();

  sub_24EA4444C(v2, v1);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v4, v6);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_24EA5B490()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA64CE8(v2, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA5B5E8, v4, v3);
}

uint64_t sub_24EA5B5E8()
{
  uint64_t v1 = *(void **)(v0 + 576);
  unint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 528);
  uint64_t v4 = *(void **)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 280);
  swift_release();

  sub_24EA4444C(v3, v2);
  sub_24EA64CE8(v9, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v10(v6, v7);
  v10(v5, v7);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24EA5B76C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_24EA67ACC;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_24EA5B890;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24EA5B890()
{
  uint64_t v1 = *(void **)(v0 + 472);
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 152);
  if (v3)
  {
    char v8 = *(unsigned char *)(v0 + 628);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
    uint64_t v10 = *(int *)(v9 + 48);
    uint64_t v11 = (void *)(v4 + *(int *)(v9 + 64));
    sub_24EA64C80(v7, v4, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    *(unsigned char *)(v4 + v10) = v8;
    void *v11 = v6;
    v11[1] = v5;
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v12;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299A8);
    *uint64_t v12 = v0;
    uint64_t v14 = sub_24EA5BD1C;
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699292B0);
    uint64_t v16 = *(int *)(v15 + 48);
    uint64_t v17 = (void *)(v4 + *(int *)(v15 + 64));
    sub_24EA64C80(v7, v4, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    *(unsigned char *)(v4 + v16) = 0;
    *uint64_t v17 = v6;
    v17[1] = v5;
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v12;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299A8);
    *uint64_t v12 = v0;
    uint64_t v14 = sub_24EA5BA94;
  }
  v12[1] = v14;
  uint64_t v18 = *(void *)(v0 + 256);
  return MEMORY[0x270F252C8](v18, v13);
}

uint64_t sub_24EA5BA94()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA64CE8(v2, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA5BBEC, v4, v3);
}

uint64_t sub_24EA5BBEC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[74];
  uint64_t v2 = (void *)v0[59];
  uint64_t v3 = v0[42];
  uint64_t v4 = v0[38];
  swift_release();

  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24EA5BD1C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA64CE8(v2, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA67AD4, v4, v3);
}

uint64_t sub_24EA5BE74()
{
  uint64_t v88 = v0;
  uint64_t v1 = *(void **)(v0 + 424);
  *(void *)(v0 + 128) = v1;
  *(void *)(v0 + 472) = v1;
  id v2 = v1;
  *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
  sub_24EA6764C(0, &qword_2699299A0);
  if (!swift_dynamicCast())
  {
LABEL_8:

    *(void *)(v0 + 48) = v1;
    id v11 = v1;
    if (swift_dynamicCast())
    {
      swift_release();

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v12 = *(void *)(v0 + 224);
      uint64_t v13 = *(void *)(v0 + 152);
      uint64_t v14 = sub_24EA941C0();
      __swift_project_value_buffer(v14, (uint64_t)qword_269931C48);
      sub_24EA64C80(v13, v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v15 = sub_24EA941A0();
      os_log_type_t v16 = sub_24EA947B0();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 336);
      uint64_t v19 = *(void *)(v0 + 304);
      uint64_t v20 = *(void *)(v0 + 312);
      if (v17)
      {
        os_log_t log = *(os_log_t *)(v0 + 304);
        uint64_t v22 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 232);
        uint64_t v24 = *(void *)(v0 + 160);
        uint64_t v23 = *(void *)(v0 + 168);
        uint64_t v25 = swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        uint64_t v87 = type;
        *(_DWORD *)uint64_t v25 = 136315394;
        sub_24EA64C80(v22, v21, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v26 = sub_24EA94600();
        *(void *)(v0 + 88) = sub_24EA81BE0(v26, v27, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        sub_24EA64CE8(v22, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        *(_WORD *)(v25 + 12) = 2080;
        *(void *)(v0 + 32) = v24;
        *(void *)(v0 + 40) = v23;
        type metadata accessor for CGSize();
        uint64_t v28 = sub_24EA94600();
        *(void *)(v0 + 104) = sub_24EA81BE0(v28, v29, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24EA1C000, v15, v16, "Fetching %s for %s cancelled", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253348310](type, -1, -1);
        MEMORY[0x253348310](v25, -1, -1);

        (*(void (**)(uint64_t, os_log_t))(v20 + 8))(v18, log);
      }
      else
      {
        uint64_t v75 = *(void *)(v0 + 224);

        sub_24EA64CE8(v75, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
      return v76();
    }
    else
    {

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v30 = *(void *)(v0 + 336);
      uint64_t v32 = *(void *)(v0 + 312);
      uint64_t v31 = *(void *)(v0 + 320);
      uint64_t v33 = *(void *)(v0 + 304);
      uint64_t v34 = sub_24EA941C0();
      __swift_project_value_buffer(v34, (uint64_t)qword_269931C48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
      id v35 = v1;
      id v36 = v1;
      uint64_t v37 = sub_24EA941A0();
      os_log_type_t v38 = sub_24EA947B0();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v41 = *(void *)(v0 + 312);
      uint64_t v40 = *(void *)(v0 + 320);
      uint64_t v42 = *(void *)(v0 + 304);
      if (v39)
      {
        uint64_t v43 = swift_slowAlloc();
        BOOL v82 = (void *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v87 = v83;
        *(_DWORD *)uint64_t v43 = 136446466;
        sub_24EA658F8(&qword_2699299B0, MEMORY[0x263F06EA8]);
        uint64_t v44 = sub_24EA94AD0();
        os_log_type_t typea = v38;
        *(void *)(v0 + 72) = sub_24EA81BE0(v44, v45, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(v40, v42);
        *(_WORD *)(v43 + 12) = 2114;
        id v47 = v1;
        uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 80) = v48;
        sub_24EA94830();
        *BOOL v82 = v48;

        _os_log_impl(&dword_24EA1C000, v37, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
        swift_arrayDestroy();
        MEMORY[0x253348310](v82, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253348310](v83, -1, -1);
        MEMORY[0x253348310](v43, -1, -1);
      }
      else
      {
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(*(void *)(v0 + 320), *(void *)(v0 + 304));
      }
      *(void *)(v0 + 592) = v46;
      uint64_t v77 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
      uint64_t v86 = (uint64_t (*)(uint64_t))(*(void *)(v77 + 32) + **(int **)(v77 + 32));
      id v78 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v78;
      *id v78 = v0;
      v78[1] = sub_24EA5B76C;
      uint64_t v79 = *(void *)(v0 + 336);
      return v86(v79);
    }
  }
  uint64_t v3 = *(void **)(v0 + 96);
  *(void *)(v0 + 488) = v3;
  id v4 = objc_msgSend(v3, sel_domain);
  uint64_t v5 = sub_24EA945F0();
  uint64_t v7 = v6;

  if (v5 == sub_24EA945F0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {

      goto LABEL_8;
    }
  }

  if (qword_269928EC8 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)(v0 + 240);
  uint64_t v50 = *(void *)(v0 + 152);
  uint64_t v51 = sub_24EA941C0();
  __swift_project_value_buffer(v51, (uint64_t)qword_269931C48);
  sub_24EA64C80(v50, v49, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  __n128 v52 = sub_24EA941A0();
  os_log_type_t v53 = sub_24EA947B0();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v55 = *(void *)(v0 + 240);
  if (v54)
  {
    uint64_t v56 = *(void *)(v0 + 232);
    uint64_t v58 = *(void *)(v0 + 160);
    uint64_t v57 = *(void *)(v0 + 168);
    uint64_t v59 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v87 = v60;
    *(_DWORD *)uint64_t v59 = 136315394;
    sub_24EA64C80(v55, v56, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v61 = sub_24EA94600();
    *(void *)(v0 + 120) = sub_24EA81BE0(v61, v62, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    sub_24EA64CE8(v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    *(_WORD *)(v59 + 12) = 2080;
    *(void *)(v0 + 16) = v58;
    *(void *)(v0 + 24) = v57;
    type metadata accessor for CGSize();
    uint64_t v63 = sub_24EA94600();
    *(void *)(v0 + 136) = sub_24EA81BE0(v63, v64, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EA1C000, v52, v53, "Fetching fallback for %s with %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253348310](v60, -1, -1);
    MEMORY[0x253348310](v59, -1, -1);
  }
  else
  {
    sub_24EA64CE8(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
  }

  uint64_t v65 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
  sub_24EA94800();
  unint64_t v67 = v66;
  unint64_t v69 = v68;
  uint64_t v85 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v65 + *v65);
  unint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v70;
  *unint64_t v70 = v0;
  v70[1] = sub_24EA5A5FC;
  uint64_t v71 = *(void *)(v0 + 152);
  v72.n128_u64[0] = v67;
  v73.n128_u64[0] = v69;
  return v85(v71, v72, v73);
}

uint64_t sub_24EA5C9D0()
{
  uint64_t v1 = *(void **)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 312);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24EA5CB08()
{
  uint64_t v1 = *(void **)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 312);
  swift_release();

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_24EA5CC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v228 = a2;
  uint64_t v197 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v197);
  uint64_t v196 = (uint64_t)&v168 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v195 = (uint64_t)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD68);
  MEMORY[0x270FA5388](v194);
  uint64_t v193 = (char *)&v168 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v192 = (uint64_t)&v168 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299C8);
  uint64_t v186 = *(void *)(v11 - 8);
  uint64_t v187 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v185 = (char *)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_24EA94110();
  unint64_t v233 = *(void *)(v219 - 8);
  MEMORY[0x270FA5388](v219);
  uint64_t v14 = (char *)&v168 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  v178 = (char *)&v168 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v200 = (char *)&v168 - v18;
  MEMORY[0x270FA5388](v19);
  v218 = (char *)&v168 - v20;
  uint64_t v227 = sub_24EA94140();
  uint64_t v21 = *(void *)(v227 - 8);
  MEMORY[0x270FA5388](v227);
  unint64_t v180 = (char *)&v168 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v172 = (char *)&v168 - v24;
  MEMORY[0x270FA5388](v25);
  v190 = (char *)&v168 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v226 = (char *)&v168 - v28;
  uint64_t v216 = sub_24EA94180();
  uint64_t v29 = *(void *)(v216 - 8);
  MEMORY[0x270FA5388](v216);
  uint64_t v179 = (char *)&v168 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v171 = (char *)&v168 - v32;
  MEMORY[0x270FA5388](v33);
  v189 = (char *)&v168 - v34;
  MEMORY[0x270FA5388](v35);
  v204 = (char *)&v168 - v36;
  uint64_t v215 = sub_24EA94030();
  uint64_t v37 = *(void *)(v215 - 8);
  MEMORY[0x270FA5388](v215);
  v214 = (char *)&v168 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v225);
  uint64_t v184 = (uint64_t)&v168 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v224 = (unsigned __int8 *)&v168 - v41;
  uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299D0);
  uint64_t v42 = *(void *)(v230 - 8);
  MEMORY[0x270FA5388](v230);
  uint64_t v229 = (char *)&v168 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  unint64_t v183 = (char *)&v168 - v45;
  uint64_t v191 = type metadata accessor for Artwork();
  MEMORY[0x270FA5388](v191);
  uint64_t v182 = (char *)&v168 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v199 = (char *)&v168 - v48;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299D8);
  MEMORY[0x270FA5388](v49 - 8);
  uint64_t v51 = (char *)&v168 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  uint64_t v201 = (uint64_t)&v168 - v53;
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297D0);
  uint64_t v188 = a1;
  uint64_t v54 = sub_24EA93F30();
  unint64_t v55 = *(void *)(v54 + 16);
  uint64_t v198 = a3;
  if (!v55)
  {
    uint64_t v138 = 1;
    uint64_t v60 = v230;
    goto LABEL_61;
  }
  double v174 = v51;
  uint64_t v175 = v42;
  uint64_t v177 = v14;
  uint64_t v57 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
  uint64_t v56 = v42 + 16;
  uint64_t v222 = v57;
  unint64_t v58 = v54 + ((*(unsigned __int8 *)(v56 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 64));
  unint64_t v212 = (void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v213 = (void (**)(char *, uint64_t, uint64_t))(v233 + 16);
  uint64_t v207 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v208 = (void (**)(char *, uint64_t))(v233 + 8);
  uint64_t v206 = (void (**)(char *, uint64_t))(v29 + 8);
  uint64_t v210 = (void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  uint64_t v211 = (void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  uint64_t v209 = (void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v223 = v56;
  uint64_t v220 = *(void *)(v56 + 56);
  unint64_t v221 = (void (**)(char *, uint64_t))(v56 - 8);
  uint64_t v173 = v54;
  swift_bridgeObjectRetain();
  v231 = 0;
  uint64_t v59 = v229;
  uint64_t v60 = v230;
  while (1)
  {
    unint64_t v232 = v58;
    unint64_t v233 = v55;
    v222(v59, v58, v60);
    unint64_t v70 = sub_24EA93EF0();
    uint64_t v71 = v224;
    sub_24EA64C80(v228, (uint64_t)v224, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
    uint64_t v72 = *v71 + 1;
    uint64_t v73 = v71[1] + 1;
    uint64_t v74 = v225;
    uint64_t v75 = sub_24EA93F90();
    uint64_t v77 = v76;
    LOBYTE(v74) = v71[*(int *)(v74 + 28)];
    uint64_t v78 = sub_24EA93F90();
    uint64_t v80 = v79;
    sub_24EA64CE8((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
    v253[0] = v72;
    v253[1] = v73;
    v253[2] = v75;
    v253[3] = v77;
    char v254 = v74;
    uint64_t v255 = v78;
    uint64_t v256 = v80;
    os_log_type_t v81 = v226;
    uint64_t v82 = v227;
    switch(v70 >> 62)
    {
      case 1uLL:
        uint64_t v83 = swift_projectBox();
        uint64_t v84 = v204;
        uint64_t v85 = v216;
        (*v211)(v204, v83, v216);
        uint64_t v86 = v231;
        sub_24EA5F7AC((uint64_t)v253, (uint64_t *)&v246);
        unint64_t v66 = v232;
        unint64_t v65 = v233;
        if (v86)
        {
          (*v206)(v84, v85);
LABEL_11:
          v231 = 0;
          uint64_t v60 = v230;
          goto LABEL_56;
        }
        v231 = 0;
        (*v206)(v84, v85);
        break;
      case 2uLL:
        uint64_t v87 = swift_projectBox();
        (*v212)(v81, v87, v82);
        uint64_t v86 = v231;
        sub_24EA60B34((uint64_t)v253, (uint64_t *)&v246);
        unint64_t v66 = v232;
        unint64_t v65 = v233;
        if (v86)
        {
          (*v207)(v81, v82);
          goto LABEL_11;
        }
        v231 = 0;
        (*v207)(v81, v82);
        break;
      case 3uLL:
        uint64_t v88 = swift_projectBox();
        uint64_t v217 = *v213;
        v217(v218, v88, v219);
        int v89 = sub_24EA940E0() & 1;
        unint64_t v90 = sub_24EA940F0();
        unint64_t v66 = v232;
        unint64_t v65 = v233;
        switch(v90 >> 62)
        {
          case 1uLL:
            int v202 = v89;
            uint64_t v205 = v90 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v95 = swift_projectBox();
            uint64_t v96 = v189;
            uint64_t v97 = v216;
            (*v211)(v189, v95, v216);
            uint64_t v86 = v231;
            sub_24EA5F7AC((uint64_t)v253, (uint64_t *)&v242);
            if (v86)
            {
              (*v206)(v96, v97);
LABEL_21:
              v231 = 0;
              uint64_t v60 = v230;
              goto LABEL_55;
            }
            uint64_t v203 = v77;
            v231 = 0;
            (*v206)(v96, v97);
            break;
          case 2uLL:
            uint64_t v205 = v90 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v98 = swift_projectBox();
            uint64_t v99 = v190;
            (*v212)(v190, v98, v82);
            uint64_t v86 = v231;
            sub_24EA60B34((uint64_t)v253, (uint64_t *)&v242);
            if (v86)
            {
              (*v207)(v99, v82);
              goto LABEL_21;
            }
            int v202 = v89;
            uint64_t v203 = v77;
            v231 = 0;
            (*v207)(v99, v82);
            break;
          case 3uLL:
            uint64_t v205 = v90 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v100 = swift_projectBox();
            v217(v200, v100, v219);
            LOBYTE(v170) = sub_24EA940E0() & 1;
            int v170 = v170;
            unint64_t v101 = sub_24EA940F0();
            switch(v101 >> 62)
            {
              case 1uLL:
                int v202 = v89;
                uint64_t v176 = v101 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v123 = swift_projectBox();
                double v124 = v171;
                uint64_t v125 = v216;
                (*v211)(v171, v123, v216);
                uint64_t v86 = v231;
                sub_24EA5F7AC((uint64_t)v253, (uint64_t *)&v236);
                if (v86)
                {
                  (*v206)(v124, v125);
LABEL_40:
                  v231 = 0;
                  double v106 = v200;
                  uint64_t v60 = v230;
LABEL_44:
                  swift_release();
                  goto LABEL_54;
                }
                uint64_t v203 = v77;
                (*v206)(v124, v125);
                break;
              case 2uLL:
                uint64_t v176 = v101 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v126 = swift_projectBox();
                uint64_t v127 = v172;
                (*v212)(v172, v126, v82);
                uint64_t v86 = v231;
                sub_24EA60B34((uint64_t)v253, (uint64_t *)&v236);
                if (v86)
                {
                  (*v207)(v127, v82);
                  goto LABEL_40;
                }
                int v202 = v89;
                uint64_t v203 = v77;
                (*v207)(v127, v82);
                break;
              case 3uLL:
                uint64_t v203 = v77;
                uint64_t v176 = v101 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v128 = swift_projectBox();
                char v129 = v178;
                v217(v178, v128, v219);
                int v169 = sub_24EA940E0();
                unint64_t v130 = sub_24EA940F0();
                uint64_t v86 = v231;
                sub_24EA53B4C((uint64_t)v253, v130, v235);
                if (v86)
                {
                  swift_release();
                  v231 = 0;
                  (*v208)(v178, v219);
                  double v106 = v200;
                  uint64_t v60 = v230;
                  goto LABEL_44;
                }
                swift_release();
                unint64_t v131 = sub_24EA94100();
                sub_24EA53B4C((uint64_t)v253, v131, v234);
                int v202 = v89;
                char v134 = v169 & 1;
                swift_release();
                char v237 = &type metadata for ArtworkPredicateLogicalOperation;
                unint64_t v238 = &protocol witness table for ArtworkPredicateLogicalOperation;
                uint64_t v135 = swift_allocObject();
                *(void *)&long long v236 = v135;
                sub_24EA472A8((uint64_t)v235, v135 + 16);
                sub_24EA472A8((uint64_t)v234, v135 + 56);
                *(unsigned char *)(v135 + 96) = v134;
                uint64_t v86 = 0;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v234);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v235);
                (*v208)(v129, v219);
                break;
              default:
                int v202 = v89;
                uint64_t v203 = v77;
                uint64_t v102 = swift_projectBox();
                uint64_t v104 = v214;
                uint64_t v103 = v215;
                (*v210)(v214, v102, v215);
                char v105 = sub_24EA94020();
                char v237 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_269929128);
                unint64_t v238 = (_UNKNOWN **)sub_24EA26940();
                LOBYTE(v236) = v105 & 1;
                (*v209)(v104, v103);
                double v106 = v200;
                uint64_t v86 = v231;
                goto LABEL_52;
            }
            double v106 = v200;
LABEL_52:
            sub_24EA3F9B8(&v236, (uint64_t)&v239);
            swift_release();
            unint64_t v136 = sub_24EA94100();
            sub_24EA53B4C((uint64_t)v253, v136, (uint64_t *)&v236);
            if (v86)
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
              swift_release();
              v231 = 0;
              uint64_t v60 = v230;
LABEL_54:
              (*v208)(v106, v219);
LABEL_55:
              swift_release();
              (*v208)(v218, v219);
LABEL_56:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();

              goto LABEL_5;
            }
            v231 = 0;
            swift_release();
            v243 = &type metadata for ArtworkPredicateLogicalOperation;
            v244 = &protocol witness table for ArtworkPredicateLogicalOperation;
            uint64_t v137 = swift_allocObject();
            *(void *)&long long v242 = v137;
            sub_24EA472A8((uint64_t)&v239, v137 + 16);
            sub_24EA472A8((uint64_t)&v236, v137 + 56);
            *(unsigned char *)(v137 + 96) = v170;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v236);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
            (*v208)(v106, v219);
            break;
          default:
            int v202 = v89;
            uint64_t v203 = v77;
            uint64_t v91 = swift_projectBox();
            uint64_t v92 = v214;
            uint64_t v93 = v215;
            (*v210)(v214, v91, v215);
            char v94 = sub_24EA94020();
            v243 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_269929128);
            v244 = (_UNKNOWN **)sub_24EA26940();
            LOBYTE(v242) = v94 & 1;
            (*v209)(v92, v93);
            break;
        }
        sub_24EA3F9B8(&v242, (uint64_t)v245);
        swift_release();
        unint64_t v107 = sub_24EA94100();
        uint64_t v108 = v217;
        switch(v107 >> 62)
        {
          case 1uLL:
            uint64_t v205 = v107 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v113 = swift_projectBox();
            char v114 = v179;
            uint64_t v115 = v216;
            (*v211)(v179, v113, v216);
            uint64_t v86 = v231;
            sub_24EA5F7AC((uint64_t)v253, (uint64_t *)&v239);
            if (v86)
            {
              (*v206)(v114, v115);
              v231 = 0;
              uint64_t v60 = v230;
              goto LABEL_35;
            }
            v231 = 0;
            (*v206)(v114, v115);
            uint64_t v60 = v230;
            break;
          case 2uLL:
            uint64_t v116 = swift_projectBox();
            char v117 = v180;
            (*v212)(v180, v116, v82);
            uint64_t v86 = v231;
            sub_24EA60B34((uint64_t)v253, (uint64_t *)&v239);
            if (v86)
            {
              (*v207)(v117, v82);
              v231 = 0;
              uint64_t v60 = v230;
LABEL_35:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
              goto LABEL_55;
            }
            v231 = 0;
            (*v207)(v117, v82);
LABEL_47:
            uint64_t v60 = v230;
            break;
          case 3uLL:
            uint64_t v205 = v107 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v118 = swift_projectBox();
            uint64_t v119 = v177;
            v108(v177, v118, v219);
            char v120 = sub_24EA940E0();
            unint64_t v121 = sub_24EA940F0();
            uint64_t v86 = v231;
            sub_24EA53B4C((uint64_t)v253, v121, (uint64_t *)&v236);
            if (v86)
            {
              swift_release();
              v231 = 0;
              uint64_t v60 = v230;
              (*v208)(v177, v219);
              goto LABEL_35;
            }
            swift_release();
            unint64_t v122 = sub_24EA94100();
            sub_24EA53B4C((uint64_t)v253, v122, v235);
            v231 = 0;
            swift_release();
            uint64_t v240 = &type metadata for ArtworkPredicateLogicalOperation;
            v241 = &protocol witness table for ArtworkPredicateLogicalOperation;
            uint64_t v132 = swift_allocObject();
            *(void *)&long long v239 = v132;
            sub_24EA472A8((uint64_t)&v236, v132 + 16);
            sub_24EA472A8((uint64_t)v235, v132 + 56);
            *(unsigned char *)(v132 + 96) = v120 & 1;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v235);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v236);
            (*v208)(v119, v219);
            uint64_t v60 = v230;
            break;
          default:
            uint64_t v109 = swift_projectBox();
            uint64_t v111 = v214;
            uint64_t v110 = v215;
            (*v210)(v214, v109, v215);
            char v112 = sub_24EA94020();
            uint64_t v240 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_269929128);
            v241 = (_UNKNOWN **)sub_24EA26940();
            LOBYTE(v239) = v112 & 1;
            (*v209)(v111, v110);
            goto LABEL_47;
        }
        sub_24EA3F9B8(&v239, (uint64_t)&v242);
        swift_release();
        v247 = &type metadata for ArtworkPredicateLogicalOperation;
        uint64_t v248 = &protocol witness table for ArtworkPredicateLogicalOperation;
        uint64_t v133 = swift_allocObject();
        *(void *)&long long v246 = v133;
        sub_24EA472A8((uint64_t)v245, v133 + 16);
        sub_24EA472A8((uint64_t)&v242, v133 + 56);
        *(unsigned char *)(v133 + 96) = v202;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v242);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
        (*v208)(v218, v219);
        goto LABEL_4;
      default:
        uint64_t v61 = swift_projectBox();
        uint64_t v63 = v214;
        uint64_t v62 = v215;
        (*v210)(v214, v61, v215);
        char v64 = sub_24EA94020();
        v247 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_269929128);
        uint64_t v248 = (_UNKNOWN **)sub_24EA26940();
        LOBYTE(v246) = v64 & 1;
        (*v209)(v63, v62);
        uint64_t v60 = v230;
        unint64_t v66 = v232;
        unint64_t v65 = v233;
        goto LABEL_4;
    }
    uint64_t v60 = v230;
LABEL_4:
    sub_24EA3F9B8(&v246, (uint64_t)&v249);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v67 = v251;
    uint64_t v68 = v252;
    __swift_project_boxed_opaque_existential_1(&v249, v251);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v68 + 16))(&v246, v67, v68);
    char v69 = v246;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v249);
    if (v69) {
      break;
    }
LABEL_5:
    uint64_t v59 = v229;
    (*v221)(v229, v60);
    unint64_t v58 = v66 + v220;
    unint64_t v55 = v65 - 1;
    if (!v55)
    {
      swift_bridgeObjectRelease();
      uint64_t v138 = 1;
      uint64_t v51 = v174;
      uint64_t v42 = v175;
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = v175;
  (*(void (**)(uint64_t, char *, uint64_t))(v175 + 32))(v201, v229, v60);
  uint64_t v138 = 0;
  uint64_t v51 = v174;
LABEL_61:
  uint64_t v139 = v201;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v201, v138, 1, v60);
  swift_bridgeObjectRelease();
  sub_24EA1E564(v139, (uint64_t)v51, &qword_2699299D8);
  int v140 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v51, 1, v60);
  uint64_t v141 = (uint64_t)v199;
  if (v140 == 1)
  {
    sub_24EA21258((uint64_t)v51, &qword_2699299D8);
    uint64_t v142 = v185;
    sub_24EA93F20();
    uint64_t v143 = (uint64_t)v182;
    uint64_t v144 = v187;
    sub_24EA93F60();
    uint64_t v145 = *(void (**)(char *, uint64_t))(v186 + 8);
    v145(v142, v144);
    sub_24EA64D48(v143, v141, (uint64_t (*)(void))type metadata accessor for Artwork);
    sub_24EA93F20();
    uint64_t v146 = sub_24EA93F70();
    unint64_t v233 = v147;
    v145(v142, v144);
    if (qword_269928EC8 != -1) {
      swift_once();
    }
    uint64_t v148 = sub_24EA941C0();
    __swift_project_value_buffer(v148, (uint64_t)qword_269931C48);
    uint64_t v149 = v184;
    sub_24EA64C80(v228, v184, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
    uint64_t v150 = sub_24EA941A0();
    os_log_type_t v151 = sub_24EA947B0();
    if (os_log_type_enabled(v150, v151))
    {
      uint64_t v152 = (uint8_t *)swift_slowAlloc();
      uint64_t v153 = swift_slowAlloc();
      uint64_t v249 = v153;
      *(_DWORD *)uint64_t v152 = 136446210;
      uint64_t v154 = DynamicArtworkLayoutEnvironment.description.getter();
      *(void *)&long long v246 = sub_24EA81BE0(v154, v155, &v249);
      uint64_t v141 = (uint64_t)v199;
      sub_24EA94830();
      swift_bridgeObjectRelease();
      sub_24EA64CE8(v149, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      _os_log_impl(&dword_24EA1C000, v150, v151, "[DynamicAssetFeature] Failed to find preferred artwork for environment %{public}s", v152, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253348310](v153, -1, -1);
      MEMORY[0x253348310](v152, -1, -1);
    }
    else
    {
      sub_24EA64CE8(v149, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
    }

    unint64_t v159 = v233;
  }
  else
  {
    uint64_t v156 = v183;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v183, v51, v60);
    sub_24EA93F00();
    uint64_t v157 = sub_24EA93F10();
    if (v158) {
      uint64_t v146 = v157;
    }
    else {
      uint64_t v146 = 0;
    }
    if (v158) {
      unint64_t v159 = v158;
    }
    else {
      unint64_t v159 = 0xE000000000000000;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v156, v60);
  }
  uint64_t v160 = v192;
  sub_24EA1E564(v141, v192, &qword_26B1CFD40);
  uint64_t v249 = v146;
  unint64_t v250 = v159;
  sub_24EA93F80();
  sub_24EA658F8(&qword_2699299E0, MEMORY[0x263F3E1A8]);
  uint64_t v161 = (uint64_t)v193;
  sub_24EA94010();
  uint64_t v162 = v195;
  sub_24EA1E564(v141 + *(int *)(v191 + 20), v195, &qword_26B1CF9E8);
  uint64_t v163 = v196;
  sub_24EA1E564(v160, v196, &qword_26B1CFD40);
  sub_24EA94000();
  sub_24EA21258(v161, &qword_26B1CFD68);
  sub_24EA21258(v160, &qword_26B1CFD40);
  unint64_t v164 = v250;
  uint64_t v165 = v197;
  uint64_t v166 = (void *)(v163 + *(int *)(v197 + 20));
  *uint64_t v166 = v249;
  v166[1] = v164;
  *(unsigned char *)(v163 + *(int *)(v165 + 24)) = 1;
  sub_24EA1E61C(v162, v163 + *(int *)(v165 + 28), &qword_26B1CF9E8);
  sub_24EA64D48(v163, v198, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  sub_24EA64CE8(v141, (uint64_t (*)(void))type metadata accessor for Artwork);
  return sub_24EA21258(v201, &qword_2699299D8);
}

uint64_t sub_24EA5E700(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(double *)(v4 + 32) = a3;
  *(double *)(v4 + 40) = a4;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 48) = type metadata accessor for DynamicImageAssetAction();
  *(void *)(v4 + 56) = swift_task_alloc();
  sub_24EA94730();
  *(void *)(v4 + 64) = sub_24EA94720();
  uint64_t v6 = sub_24EA946D0();
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = v5;
  return MEMORY[0x270FA2498](sub_24EA5E7CC, v6, v5);
}

uint64_t sub_24EA5E7CC()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = (void *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48));
  sub_24EA64C80(v4, v1, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  *uint64_t v5 = v3;
  v5[1] = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299A8);
  void *v6 = v0;
  v6[1] = sub_24EA5E8DC;
  uint64_t v8 = v0[7];
  return MEMORY[0x270F252C8](v8, v7);
}

uint64_t sub_24EA5E8DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  swift_task_dealloc();
  sub_24EA64CE8(v2, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_24EA5EA34, v4, v3);
}

uint64_t sub_24EA5EA34()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EA5EAA0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(double *)(v4 + 32) = a3;
  *(double *)(v4 + 40) = a4;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 48) = type metadata accessor for DynamicImageAssetAction();
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = sub_24EA94950();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  sub_24EA94730();
  *(void *)(v4 + 88) = sub_24EA94720();
  uint64_t v7 = sub_24EA946D0();
  *(void *)(v4 + 96) = v7;
  *(void *)(v4 + 104) = v6;
  return MEMORY[0x270FA2498](sub_24EA5EBC8, v7, v6);
}

uint64_t sub_24EA5EBC8()
{
  uint64_t v1 = sub_24EA94C10();
  uint64_t v3 = v2;
  sub_24EA94940();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269929FC8 + dword_269929FC8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24EA5ECA8;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24EA5ECA8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 104);
  uint64_t v7 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v8 = sub_24EA5F120;
  }
  else {
    uint64_t v8 = sub_24EA5EE40;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24EA5EE40()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = (void *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48));
  sub_24EA64C80(v4, v1, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  *uint64_t v5 = v3;
  v5[1] = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[16] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299A8);
  void *v6 = v0;
  v6[1] = sub_24EA5EF50;
  uint64_t v8 = v0[7];
  return MEMORY[0x270F252C8](v8, v7);
}

uint64_t sub_24EA5EF50()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  swift_task_dealloc();
  sub_24EA64CE8(v2, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 96);
  return MEMORY[0x270FA2498](sub_24EA5F0A8, v4, v3);
}

uint64_t sub_24EA5F0A8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EA5F120()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EA5F198(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(double *)(v4 + 32) = a3;
  *(double *)(v4 + 40) = a4;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 48) = type metadata accessor for DynamicImageAssetAction();
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = sub_24EA94950();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  sub_24EA94730();
  *(void *)(v4 + 88) = sub_24EA94720();
  uint64_t v7 = sub_24EA946D0();
  *(void *)(v4 + 96) = v7;
  *(void *)(v4 + 104) = v6;
  return MEMORY[0x270FA2498](sub_24EA5F2C0, v7, v6);
}

uint64_t sub_24EA5F2C0()
{
  uint64_t v1 = sub_24EA94C10();
  uint64_t v3 = v2;
  sub_24EA94940();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269929FC8 + dword_269929FC8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24EA5F3A0;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24EA5F3A0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 104);
  uint64_t v7 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v8 = sub_24EA67AD0;
  }
  else {
    uint64_t v8 = sub_24EA5F538;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24EA5F538()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = (void *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48));
  sub_24EA64C80(v4, v1, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  *uint64_t v5 = v3;
  v5[1] = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[16] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299A8);
  void *v6 = v0;
  v6[1] = sub_24EA5F648;
  uint64_t v8 = v0[7];
  return MEMORY[0x270F252C8](v8, v7);
}

uint64_t sub_24EA5F648()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  swift_task_dealloc();
  sub_24EA64CE8(v2, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 96);
  return MEMORY[0x270FA2498](sub_24EA67AC8, v4, v3);
}

uint64_t sub_24EA5F7A0(uint64_t a1, int64_t a2)
{
  return _s12FitnessAsset012DynamicImageB7FeatureV7dispose10localState06sharedH0y8DataFlow05EmptyH0V_AA0cdbH0VztF_0(a2);
}

uint64_t sub_24EA5F7AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v171 = a2;
  uint64_t v156 = *(void *)a1;
  uint64_t v157 = *(void *)(a1 + 8);
  uint64_t v158 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  int v160 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v161 = *(void *)(a1 + 40);
  uint64_t v162 = v2;
  uint64_t v159 = a1;
  uint64_t v163 = *(void *)(a1 + 48);
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299E8);
  MEMORY[0x270FA5388](v174);
  uint64_t v175 = (uint64_t)&v153 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_24EA940A0();
  uint64_t v4 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  uint64_t v6 = (char *)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v153 - v8;
  uint64_t v173 = sub_24EA940B0();
  MEMORY[0x270FA5388](v173);
  uint64_t v176 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v153 = (uint64_t)&v153 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v154 = (uint64_t)&v153 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v169 = (uint64_t)&v153 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v155 = (uint64_t)&v153 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v168 = (uint64_t *)((char *)&v153 - v20);
  MEMORY[0x270FA5388](v21);
  v167 = (uint64_t *)((char *)&v153 - v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v166 = (uint64_t *)((char *)&v153 - v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v170 = (uint64_t)&v153 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v165 = (char *)&v153 - v28;
  MEMORY[0x270FA5388](v29);
  v172 = (char *)&v153 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v153 - v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v153 - v35;
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v153 - v38;
  sub_24EA94160();
  sub_24EA94080();
  uint64_t v40 = (uint64_t (*)(void))MEMORY[0x263F3F208];
  unint64_t v164 = (uint64_t *)v39;
  sub_24EA64CE8((uint64_t)v39, MEMORY[0x263F3F208]);
  sub_24EA94170();
  sub_24EA94080();
  sub_24EA64CE8((uint64_t)v36, v40);
  LOBYTE(v40) = sub_24EA94090();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v42 = v177;
  v41(v6, v177);
  v41(v9, v42);
  if ((v40 & 1) == 0)
  {
    sub_24EA676D8();
    swift_allocError();
    char v62 = 6;
LABEL_58:
    *uint64_t v61 = v62;
    return swift_willThrow();
  }
  char v43 = sub_24EA94150();
  sub_24EA94160();
  uint64_t v44 = (uint64_t)v172;
  sub_24EA94170();
  uint64_t v45 = v175;
  uint64_t v46 = (uint64_t *)(v175 + *(int *)(v174 + 48));
  uint64_t v47 = (uint64_t (*)(void))MEMORY[0x263F3F208];
  sub_24EA64D48((uint64_t)v33, v175, MEMORY[0x263F3F208]);
  sub_24EA64D48(v44, (uint64_t)v46, v47);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v49 = (uint64_t)v176;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v63 = v166;
      sub_24EA64C80(v45, (uint64_t)v166, MEMORY[0x263F3F208]);
      uint64_t v64 = *v63;
      int v65 = swift_getEnumCaseMultiPayload();
      if (v65 == 1)
      {
        unint64_t v122 = v164;
        sub_24EA64C80((uint64_t)v46, (uint64_t)v164, MEMORY[0x263F3F208]);
        uint64_t v76 = *v122;
        sub_24EA64CE8((uint64_t)v46, MEMORY[0x263F3F208]);
        goto LABEL_38;
      }
      if (v65 != 3) {
        goto LABEL_42;
      }
      sub_24EA64C80((uint64_t)v46, v49, MEMORY[0x263F3F208]);
      uint64_t v66 = sub_24EA940D0();
      uint64_t v67 = *(void *)(v66 - 8);
      uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 88))(v49, v66);
      if (v68 == *MEMORY[0x263F3F240])
      {
        MEMORY[0x270FA5388](v68);
        *(&v153 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
        *(&v153 - 1) = sub_24EA67750();
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A10);
        uint64_t v71 = v171;
        v171[3] = v70;
        v71[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
        uint64_t v60 = swift_allocObject();
        uint64_t *v71 = v60;
        *(void *)(v60 + 16) = v64;
        *(void *)(v60 + 24) = KeyPath;
        goto LABEL_12;
      }
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v49, v66);
      goto LABEL_42;
    case 2:
      uint64_t v75 = v167;
      sub_24EA64C80(v45, (uint64_t)v167, MEMORY[0x263F3F208]);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_42;
      }
      uint64_t v64 = *v75;
      uint64_t v76 = *v46;
LABEL_38:
      sub_24EA64CE8(v45, MEMORY[0x263F3F208]);
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A00);
      double v124 = v171;
      v171[3] = result;
      v124[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
      *double v124 = v64;
      v124[1] = v76;
      *((unsigned char *)v124 + 16) = v43;
      return result;
    case 3:
      char v77 = v43;
      uint64_t v78 = v170;
      sub_24EA64C80(v45, v170, MEMORY[0x263F3F208]);
      uint64_t v79 = sub_24EA940D0();
      uint64_t v80 = *(void *)(v79 - 8);
      os_log_type_t v81 = *(uint64_t (**)(uint64_t, uint64_t))(v80 + 88);
      int v82 = v81(v78, v79);
      int v83 = v82;
      if (v82 == *MEMORY[0x263F3F248])
      {
        int v84 = swift_getEnumCaseMultiPayload();
        if (v84)
        {
          if (v84 != 3) {
            goto LABEL_57;
          }
          uint64_t v85 = v154;
          sub_24EA64C80((uint64_t)v46, v154, MEMORY[0x263F3F208]);
          if (v81(v85, v79) == v83)
          {
            if (qword_269928EC8 != -1) {
              swift_once();
            }
            uint64_t v86 = sub_24EA941C0();
            __swift_project_value_buffer(v86, (uint64_t)qword_269931C48);
            uint64_t v87 = sub_24EA941A0();
            os_log_type_t v88 = sub_24EA947B0();
            if (os_log_type_enabled(v87, v88))
            {
              int v89 = (uint8_t *)swift_slowAlloc();
              uint64_t v90 = swift_slowAlloc();
              uint64_t v179 = v90;
              *(_DWORD *)int v89 = 136315138;
              uint64_t v178 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v179);
              sub_24EA94830();
              _os_log_impl(&dword_24EA1C000, v87, v88, "%s", v89, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x253348310](v90, -1, -1);
              MEMORY[0x253348310](v89, -1, -1);
            }
LABEL_34:

            MEMORY[0x270FA5388](v107);
            *(&v153 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
            *(&v153 - 1) = sub_24EA67750();
            uint64_t v108 = swift_getKeyPath();
            uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A18);
            uint64_t v110 = v171;
            v171[3] = v109;
            v110[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
            uint64_t v111 = swift_allocObject();
            uint64_t *v110 = v111;
            uint64_t v112 = v156;
            *(void *)(v111 + 16) = v108;
            *(void *)(v111 + 24) = v112;
            uint64_t v113 = v157;
            uint64_t v114 = v158;
            *(void *)(v111 + 32) = v157;
            *(void *)(v111 + 40) = v114;
            uint64_t v115 = v161;
            uint64_t v116 = v162;
            *(void *)(v111 + 48) = v162;
            char v117 = v160;
            *(unsigned char *)(v111 + 56) = v160;
            uint64_t v118 = v163;
            *(void *)(v111 + 64) = v115;
            *(void *)(v111 + 72) = v118;
            *(void *)(v111 + 80) = v108;
            *(void *)(v111 + 88) = v112;
            *(void *)(v111 + 96) = v113;
            *(void *)(v111 + 104) = v114;
            *(void *)(v111 + 112) = v116;
            *(unsigned char *)(v111 + 120) = v117;
            *(void *)(v111 + 128) = v115;
            *(void *)(v111 + 136) = v118;
            *(unsigned char *)(v111 + 144) = v77;
            sub_24EA677AC(v159);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_61;
          }
LABEL_56:
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v85, v79);
LABEL_57:
          uint64_t v141 = (uint64_t (*)(void))MEMORY[0x263F3F208];
          sub_24EA64CE8((uint64_t)v46, MEMORY[0x263F3F208]);
          sub_24EA64CE8(v45, v141);
          sub_24EA676D8();
          swift_allocError();
          char v62 = 5;
          goto LABEL_58;
        }
        uint64_t v131 = sub_24EA64C80((uint64_t)v46, (uint64_t)v164, MEMORY[0x263F3F208]);
        MEMORY[0x270FA5388](v131);
        *(&v153 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
        *(&v153 - 1) = sub_24EA67750();
        uint64_t v132 = swift_getKeyPath();
        sub_24EA677AC(v159);
        uint64_t v133 = sub_24EA93FC0();
        uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A20);
        uint64_t v135 = v171;
        v171[3] = v134;
        v135[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
        uint64_t v136 = swift_allocObject();
        *uint64_t v135 = v136;
        uint64_t v137 = v156;
        *(void *)(v136 + 16) = v132;
        *(void *)(v136 + 24) = v137;
        uint64_t v138 = v158;
        *(void *)(v136 + 32) = v157;
        *(void *)(v136 + 40) = v138;
        *(void *)(v136 + 48) = v162;
        *(unsigned char *)(v136 + 56) = v160;
        uint64_t v139 = v163;
        *(void *)(v136 + 64) = v161;
        *(void *)(v136 + 72) = v139;
        *(void *)(v136 + 80) = v133;
        *(unsigned char *)(v136 + 88) = v77;
        goto LABEL_61;
      }
      if (v82 != *MEMORY[0x263F3F240])
      {
        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v170, v79);
LABEL_42:
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v125 = v169;
          sub_24EA64C80((uint64_t)v46, v169, MEMORY[0x263F3F208]);
          uint64_t v126 = sub_24EA940D0();
          uint64_t v127 = *(void *)(v126 - 8);
          int v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 88))(v125, v126);
          if (v128 == *MEMORY[0x263F3F248] || v128 == *MEMORY[0x263F3F240]) {
            goto LABEL_57;
          }
          (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v125, v126);
        }
        unsigned int v129 = swift_getEnumCaseMultiPayload();
        if (v129 >= 3)
        {
          if (v129 == 3)
          {
            unsigned int v130 = swift_getEnumCaseMultiPayload();
            if (v130 < 3)
            {
              uint64_t v46 = (uint64_t *)v45;
              goto LABEL_51;
            }
            if (v130 == 3)
            {
              sub_24EA676D8();
              swift_allocError();
              unsigned char *v140 = 10;
              swift_willThrow();
              return sub_24EA21258(v45, &qword_2699299E8);
            }
            uint64_t v46 = (uint64_t *)v45;
          }
          swift_bridgeObjectRelease();
        }
LABEL_51:
        sub_24EA64CE8((uint64_t)v46, MEMORY[0x263F3F208]);
        sub_24EA676D8();
        swift_allocError();
        char v62 = 2;
        goto LABEL_58;
      }
      int v102 = swift_getEnumCaseMultiPayload();
      if (v102 != 1)
      {
        if (v102 != 3) {
          goto LABEL_57;
        }
        uint64_t v85 = v153;
        sub_24EA64C80((uint64_t)v46, v153, MEMORY[0x263F3F208]);
        if (v81(v85, v79) == v83)
        {
          if (qword_269928EC8 != -1) {
            swift_once();
          }
          uint64_t v103 = sub_24EA941C0();
          __swift_project_value_buffer(v103, (uint64_t)qword_269931C48);
          uint64_t v87 = sub_24EA941A0();
          os_log_type_t v104 = sub_24EA947B0();
          if (os_log_type_enabled(v87, v104))
          {
            char v105 = (uint8_t *)swift_slowAlloc();
            uint64_t v106 = swift_slowAlloc();
            uint64_t v179 = v106;
            *(_DWORD *)char v105 = 136315138;
            uint64_t v178 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v179);
            sub_24EA94830();
            _os_log_impl(&dword_24EA1C000, v87, v104, "%s", v105, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x253348310](v106, -1, -1);
            MEMORY[0x253348310](v105, -1, -1);
          }
          goto LABEL_34;
        }
        goto LABEL_56;
      }
      uint64_t v142 = v164;
      uint64_t v143 = sub_24EA64C80((uint64_t)v46, (uint64_t)v164, MEMORY[0x263F3F208]);
      uint64_t v144 = *v142;
      MEMORY[0x270FA5388](v143);
      *(&v153 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
      *(&v153 - 1) = sub_24EA67750();
      uint64_t v145 = swift_getKeyPath();
      uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A20);
      unint64_t v147 = v171;
      v171[3] = v146;
      v147[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
      uint64_t v148 = swift_allocObject();
      *unint64_t v147 = v148;
      uint64_t v149 = v156;
      *(void *)(v148 + 16) = v145;
      *(void *)(v148 + 24) = v149;
      uint64_t v150 = v158;
      *(void *)(v148 + 32) = v157;
      *(void *)(v148 + 40) = v150;
      *(void *)(v148 + 48) = v162;
      *(unsigned char *)(v148 + 56) = v160;
      uint64_t v151 = v163;
      *(void *)(v148 + 64) = v161;
      *(void *)(v148 + 72) = v151;
      *(void *)(v148 + 80) = v144;
      *(unsigned char *)(v148 + 88) = v77;
LABEL_60:
      sub_24EA677AC(v159);
LABEL_61:
      uint64_t v152 = (uint64_t (*)(void))MEMORY[0x263F3F208];
      sub_24EA64CE8((uint64_t)v46, MEMORY[0x263F3F208]);
      uint64_t v101 = v45;
      uint64_t v100 = v152;
      return sub_24EA64CE8(v101, v100);
    case 4:
      uint64_t v91 = v168;
      sub_24EA64C80(v45, (uint64_t)v168, MEMORY[0x263F3F208]);
      uint64_t v92 = v91[1];
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v93 = *v91;
        uint64_t v94 = *v46;
        uint64_t v95 = v46[1];
        uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299F8);
        char v97 = v43;
        uint64_t v98 = v171;
        v171[3] = v96;
        v98[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
        uint64_t v99 = swift_allocObject();
        *uint64_t v98 = v99;
        *(void *)(v99 + 16) = v93;
        *(void *)(v99 + 24) = v92;
        *(void *)(v99 + 32) = v94;
        *(void *)(v99 + 40) = v95;
        *(unsigned char *)(v99 + 48) = v97;
        uint64_t v100 = (uint64_t (*)(void))MEMORY[0x263F3F208];
        uint64_t v101 = v45;
        return sub_24EA64CE8(v101, v100);
      }
      swift_bridgeObjectRelease();
      goto LABEL_42;
    default:
      uint64_t v50 = v165;
      sub_24EA64C80(v45, (uint64_t)v165, MEMORY[0x263F3F208]);
      char v51 = *v50;
      int v52 = swift_getEnumCaseMultiPayload();
      if (!v52)
      {
        uint64_t v119 = v164;
        sub_24EA64C80((uint64_t)v46, (uint64_t)v164, MEMORY[0x263F3F208]);
        LOBYTE(v119) = *(unsigned char *)v119;
        uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A28);
        unint64_t v121 = v171;
        v171[3] = v120;
        v121[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
        *(unsigned char *)unint64_t v121 = v51;
        *((unsigned char *)v121 + 1) = (_BYTE)v119;
        *((unsigned char *)v121 + 2) = v43;
        goto LABEL_61;
      }
      if (v52 != 3) {
        goto LABEL_42;
      }
      uint64_t v53 = v155;
      sub_24EA64C80((uint64_t)v46, v155, MEMORY[0x263F3F208]);
      uint64_t v54 = sub_24EA940D0();
      uint64_t v55 = *(void *)(v54 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v55 + 88))(v53, v54) != *MEMORY[0x263F3F248])
      {
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
        goto LABEL_42;
      }
      uint64_t v56 = sub_24EA93FC0();
      MEMORY[0x270FA5388](v56);
      *(&v153 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
      *(&v153 - 1) = sub_24EA67750();
      uint64_t v57 = swift_getKeyPath();
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A10);
      uint64_t v59 = v171;
      v171[3] = v58;
      v59[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
      uint64_t v60 = swift_allocObject();
      *uint64_t v59 = v60;
      *(void *)(v60 + 16) = v56;
      *(void *)(v60 + 24) = v57;
LABEL_12:
      uint64_t v72 = v157;
      *(void *)(v60 + 32) = v156;
      *(void *)(v60 + 40) = v72;
      uint64_t v73 = v162;
      *(void *)(v60 + 48) = v158;
      *(void *)(v60 + 56) = v73;
      *(unsigned char *)(v60 + 64) = v160;
      uint64_t v74 = v163;
      *(void *)(v60 + 72) = v161;
      *(void *)(v60 + 80) = v74;
      *(unsigned char *)(v60 + 88) = v43;
      goto LABEL_60;
  }
}

void *sub_24EA60B34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v258 = a2;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v248 = *(void *)a1;
  uint64_t v249 = v2;
  uint64_t v250 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v253 = a1;
  uint64_t v254 = v3;
  int v251 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v252 = *(void *)(a1 + 40);
  uint64_t v255 = *(void *)(a1 + 48);
  uint64_t v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A30);
  MEMORY[0x270FA5388](v260);
  uint64_t v261 = (uint64_t)&v230 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EA94060();
  uint64_t v263 = *(void *)(v5 - 8);
  uint64_t v264 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v230 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v230 - v9;
  uint64_t v259 = sub_24EA94070();
  MEMORY[0x270FA5388](v259);
  uint64_t v262 = (char *)&v230 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v238 = (uint64_t)&v230 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v239 = (uint64_t)&v230 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v237 = (uint64_t)&v230 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v231 = (uint64_t)&v230 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v233 = (uint64_t)&v230 - v21;
  MEMORY[0x270FA5388](v22);
  unint64_t v232 = (char *)&v230 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v234 = (uint64_t)&v230 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v235 = (uint64_t)&v230 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v257 = (uint64_t)&v230 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v236 = (uint64_t)&v230 - v31;
  MEMORY[0x270FA5388](v32);
  v245 = (uint64_t *)((char *)&v230 - v33);
  MEMORY[0x270FA5388](v34);
  long long v246 = (uint64_t *)((char *)&v230 - v35);
  MEMORY[0x270FA5388](v36);
  v243 = (char *)&v230 - v37;
  MEMORY[0x270FA5388](v38);
  v244 = (uint64_t *)((char *)&v230 - v39);
  MEMORY[0x270FA5388](v40);
  long long v242 = (uint64_t *)((char *)&v230 - v41);
  MEMORY[0x270FA5388](v42);
  v241 = (uint64_t *)((char *)&v230 - v43);
  MEMORY[0x270FA5388](v44);
  uint64_t v247 = (uint64_t)&v230 - v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v240 = (char *)&v230 - v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = (char *)&v230 - v49;
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = (char *)&v230 - v52;
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (uint64_t)&v230 - v55;
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = (char *)&v230 - v58;
  sub_24EA94120();
  sub_24EA94040();
  uint64_t v60 = (uint64_t (*)(void))MEMORY[0x263F3F200];
  uint64_t v256 = (uint64_t *)v59;
  sub_24EA64CE8((uint64_t)v59, MEMORY[0x263F3F200]);
  sub_24EA94130();
  sub_24EA94040();
  sub_24EA64CE8(v56, v60);
  LOBYTE(v56) = sub_24EA94050();
  uint64_t v61 = v264;
  char v62 = *(void (**)(char *, uint64_t))(v263 + 8);
  v62(v7, v264);
  v62(v10, v61);
  if (v56)
  {
    sub_24EA94120();
    sub_24EA94130();
    uint64_t v63 = v261;
    uint64_t v64 = (uint64_t *)(v261 + *(int *)(v260 + 48));
    int v65 = (uint64_t (*)(void))MEMORY[0x263F3F200];
    sub_24EA64D48((uint64_t)v53, v261, MEMORY[0x263F3F200]);
    sub_24EA64D48((uint64_t)v50, (uint64_t)v64, v65);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v67 = (uint64_t)v262;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        os_log_type_t v81 = v241;
        sub_24EA64C80(v63, (uint64_t)v241, MEMORY[0x263F3F200]);
        uint64_t v82 = *v81;
        int v83 = swift_getEnumCaseMultiPayload();
        if (v83 == 1)
        {
          uint64_t v146 = v256;
          sub_24EA64C80((uint64_t)v64, (uint64_t)v256, MEMORY[0x263F3F200]);
          uint64_t v99 = *v146;
          sub_24EA64CE8((uint64_t)v64, MEMORY[0x263F3F200]);
          goto LABEL_42;
        }
        if (v83 != 4) {
          goto LABEL_61;
        }
        uint64_t v84 = v237;
        sub_24EA64C80((uint64_t)v64, v237, MEMORY[0x263F3F200]);
        uint64_t v85 = sub_24EA940C0();
        uint64_t v86 = *(void *)(v85 - 8);
        uint64_t v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 88))(v84, v85);
        if (v87 == *MEMORY[0x263F3F218])
        {
          MEMORY[0x270FA5388](v87);
          *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
          *(&v230 - 1) = sub_24EA67750();
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A60);
          uint64_t v90 = v258;
          v258[3] = v89;
          v90[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t v78 = swift_allocObject();
          *uint64_t v90 = v78;
          *(void *)(v78 + 16) = v82;
          goto LABEL_45;
        }
        goto LABEL_49;
      case 2:
        uint64_t v91 = v242;
        sub_24EA64C80(v63, (uint64_t)v242, MEMORY[0x263F3F200]);
        uint64_t v93 = *v91;
        uint64_t v92 = v91[1];
        int v94 = swift_getEnumCaseMultiPayload();
        if (v94 == 2) {
          goto LABEL_28;
        }
        if (v94 != 4) {
          goto LABEL_30;
        }
        uint64_t v67 = v239;
        sub_24EA64C80((uint64_t)v64, v239, MEMORY[0x263F3F200]);
        uint64_t v95 = sub_24EA940C0();
        uint64_t v96 = *(void *)(v95 - 8);
        uint64_t v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 88))(v67, v95);
        if (v97 == *MEMORY[0x263F3F230]) {
          goto LABEL_48;
        }
        goto LABEL_50;
      case 3:
        uint64_t v98 = v244;
        sub_24EA64C80(v63, (uint64_t)v244, MEMORY[0x263F3F200]);
        if (swift_getEnumCaseMultiPayload() != 3) {
          goto LABEL_61;
        }
        uint64_t v82 = *v98;
        uint64_t v99 = *v64;
LABEL_42:
        sub_24EA64CE8(v63, MEMORY[0x263F3F200]);
        uint64_t result = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_269929A58);
        unint64_t v147 = v258;
        v258[3] = (uint64_t)result;
        v147[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
        *unint64_t v147 = v82;
        v147[1] = v99;
        return result;
      case 4:
        uint64_t v100 = v247;
        sub_24EA64C80(v63, v247, MEMORY[0x263F3F200]);
        uint64_t v101 = sub_24EA940C0();
        uint64_t v102 = *(void *)(v101 - 8);
        uint64_t v103 = *(uint64_t (**)(uint64_t, uint64_t))(v102 + 88);
        int v104 = v103(v100, v101);
        if (v104 == *MEMORY[0x263F3F220])
        {
          uint64_t v105 = swift_getEnumCaseMultiPayload();
          if (v105) {
            goto LABEL_104;
          }
          MEMORY[0x270FA5388](v105);
          *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
          *(&v230 - 1) = sub_24EA67750();
          uint64_t v106 = swift_getKeyPath();
          sub_24EA677AC(v253);
          uint64_t v107 = sub_24EA93FC0();
          uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A90);
          uint64_t v109 = v258;
          v258[3] = v108;
          v109[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t v110 = swift_allocObject();
          *uint64_t v109 = v110;
          uint64_t v111 = v248;
          *(void *)(v110 + 16) = v106;
          *(void *)(v110 + 24) = v111;
          uint64_t v112 = v250;
          *(void *)(v110 + 32) = v249;
          *(void *)(v110 + 40) = v112;
          *(void *)(v110 + 48) = v254;
          *(unsigned char *)(v110 + 56) = v251;
          uint64_t v113 = v255;
          *(void *)(v110 + 64) = v252;
          *(void *)(v110 + 72) = v113;
          *(void *)(v110 + 80) = v107;
          uint64_t v114 = (uint64_t (*)(void))MEMORY[0x263F3F200];
          uint64_t v115 = v63;
          return (void *)sub_24EA64CE8(v115, v114);
        }
        int v131 = v104;
        if (v104 == *MEMORY[0x263F3F218])
        {
          int v132 = swift_getEnumCaseMultiPayload();
          if (v132 == 1)
          {
            uint64_t v184 = v256;
            uint64_t v185 = sub_24EA64C80((uint64_t)v64, (uint64_t)v256, MEMORY[0x263F3F200]);
            uint64_t v186 = *v184;
            MEMORY[0x270FA5388](v185);
            *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
            *(&v230 - 1) = sub_24EA67750();
            uint64_t v187 = swift_getKeyPath();
            uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A90);
            v189 = v258;
            v258[3] = v188;
            v189[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            uint64_t v190 = swift_allocObject();
            uint64_t *v189 = v190;
            uint64_t v191 = v248;
            *(void *)(v190 + 16) = v187;
            *(void *)(v190 + 24) = v191;
            uint64_t v192 = v250;
            *(void *)(v190 + 32) = v249;
            *(void *)(v190 + 40) = v192;
            *(void *)(v190 + 48) = v254;
            *(unsigned char *)(v190 + 56) = v251;
            uint64_t v193 = v255;
            *(void *)(v190 + 64) = v252;
            *(void *)(v190 + 72) = v193;
            *(void *)(v190 + 80) = v186;
            goto LABEL_85;
          }
          if (v132 != 4) {
            goto LABEL_104;
          }
          uint64_t v133 = v235;
          sub_24EA64C80((uint64_t)v64, v235, MEMORY[0x263F3F200]);
          if (v103(v133, v101) == v131)
          {
            if (qword_269928EC8 != -1) {
              swift_once();
            }
            uint64_t v134 = sub_24EA941C0();
            __swift_project_value_buffer(v134, (uint64_t)qword_269931C48);
            uint64_t v135 = sub_24EA941A0();
            os_log_type_t v136 = sub_24EA947B0();
            if (os_log_type_enabled(v135, v136))
            {
              uint64_t v137 = (uint8_t *)swift_slowAlloc();
              uint64_t v138 = swift_slowAlloc();
              uint64_t v266 = v138;
              *(_DWORD *)uint64_t v137 = 136315138;
              uint64_t v265 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v266);
              sub_24EA94830();
              _os_log_impl(&dword_24EA1C000, v135, v136, "%s", v137, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x253348310](v138, -1, -1);
              MEMORY[0x253348310](v137, -1, -1);
            }

            MEMORY[0x270FA5388](v139);
            *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
            *(&v230 - 1) = sub_24EA67750();
            uint64_t v140 = swift_getKeyPath();
            uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A88);
            uint64_t v142 = v258;
            v258[3] = v141;
            v142[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            goto LABEL_102;
          }
          goto LABEL_103;
        }
        if (v104 == *MEMORY[0x263F3F230])
        {
          int v161 = swift_getEnumCaseMultiPayload();
          if (v161 != 2)
          {
            if (v161 != 4) {
              goto LABEL_104;
            }
            uint64_t v133 = v234;
            sub_24EA64C80((uint64_t)v64, v234, MEMORY[0x263F3F200]);
            if (v103(v133, v101) == v131)
            {
              if (qword_269928EC8 != -1) {
                swift_once();
              }
              uint64_t v162 = sub_24EA941C0();
              __swift_project_value_buffer(v162, (uint64_t)qword_269931C48);
              uint64_t v163 = sub_24EA941A0();
              os_log_type_t v164 = sub_24EA947B0();
              if (os_log_type_enabled(v163, v164))
              {
                uint64_t v165 = (uint8_t *)swift_slowAlloc();
                uint64_t v166 = swift_slowAlloc();
                uint64_t v266 = v166;
                *(_DWORD *)uint64_t v165 = 136315138;
                uint64_t v265 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v266);
                sub_24EA94830();
                _os_log_impl(&dword_24EA1C000, v163, v164, "%s", v165, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x253348310](v166, -1, -1);
                MEMORY[0x253348310](v165, -1, -1);
              }
LABEL_101:

              MEMORY[0x270FA5388](v219);
              *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
              *(&v230 - 1) = sub_24EA67750();
              uint64_t v140 = swift_getKeyPath();
              uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A68);
              uint64_t v142 = v258;
              v258[3] = v220;
              v142[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
LABEL_102:
              uint64_t v221 = swift_allocObject();
              *uint64_t v142 = v221;
              uint64_t v223 = v248;
              uint64_t v222 = v249;
              *(void *)(v221 + 16) = v140;
              *(void *)(v221 + 24) = v223;
              uint64_t v224 = v250;
              *(void *)(v221 + 32) = v222;
              *(void *)(v221 + 40) = v224;
              uint64_t v226 = v254;
              uint64_t v225 = v255;
              *(void *)(v221 + 48) = v254;
              char v227 = v251;
              *(unsigned char *)(v221 + 56) = v251;
              uint64_t v228 = v252;
              *(void *)(v221 + 64) = v252;
              *(void *)(v221 + 72) = v225;
              *(void *)(v221 + 80) = v140;
              *(void *)(v221 + 88) = v223;
              *(void *)(v221 + 96) = v222;
              *(void *)(v221 + 104) = v224;
              *(void *)(v221 + 112) = v226;
              *(unsigned char *)(v221 + 120) = v227;
              *(void *)(v221 + 128) = v228;
              *(void *)(v221 + 136) = v225;
              sub_24EA677AC(v253);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_86:
              uint64_t v206 = (uint64_t (*)(void))MEMORY[0x263F3F200];
              sub_24EA64CE8((uint64_t)v64, MEMORY[0x263F3F200]);
              uint64_t v115 = v63;
              uint64_t v114 = v206;
              return (void *)sub_24EA64CE8(v115, v114);
            }
            goto LABEL_103;
          }
          goto LABEL_84;
        }
        if (v104 == *MEMORY[0x263F3F238])
        {
          int v173 = swift_getEnumCaseMultiPayload();
          if (v173 != 4)
          {
            if (v173 != 5) {
              goto LABEL_104;
            }
            uint64_t v174 = v232;
            uint64_t v175 = sub_24EA64C80((uint64_t)v64, (uint64_t)v232, MEMORY[0x263F3F200]);
            char v176 = *v174;
            MEMORY[0x270FA5388](v175);
            *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
            *(&v230 - 1) = sub_24EA67750();
            uint64_t v177 = swift_getKeyPath();
            uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A80);
            uint64_t v179 = v258;
            v258[3] = v178;
            v179[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            uint64_t v180 = swift_allocObject();
            *uint64_t v179 = v180;
            uint64_t v181 = v248;
            *(void *)(v180 + 16) = v177;
            *(void *)(v180 + 24) = v181;
            uint64_t v182 = v250;
            *(void *)(v180 + 32) = v249;
            *(void *)(v180 + 40) = v182;
            *(void *)(v180 + 48) = v254;
            *(unsigned char *)(v180 + 56) = v251;
            uint64_t v183 = v255;
            *(void *)(v180 + 64) = v252;
            *(void *)(v180 + 72) = v183;
            *(unsigned char *)(v180 + 80) = v176;
LABEL_85:
            sub_24EA677AC(v253);
            goto LABEL_86;
          }
          uint64_t v133 = v233;
          sub_24EA64C80((uint64_t)v64, v233, MEMORY[0x263F3F200]);
          if (v103(v133, v101) == v131)
          {
            if (qword_269928EC8 != -1) {
              swift_once();
            }
            uint64_t v208 = sub_24EA941C0();
            __swift_project_value_buffer(v208, (uint64_t)qword_269931C48);
            uint64_t v209 = sub_24EA941A0();
            os_log_type_t v210 = sub_24EA947B0();
            if (os_log_type_enabled(v209, v210))
            {
              uint64_t v211 = (uint8_t *)swift_slowAlloc();
              uint64_t v212 = swift_slowAlloc();
              uint64_t v266 = v212;
              *(_DWORD *)uint64_t v211 = 136315138;
              uint64_t v265 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v266);
              sub_24EA94830();
              _os_log_impl(&dword_24EA1C000, v209, v210, "%s", v211, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x253348310](v212, -1, -1);
              MEMORY[0x253348310](v211, -1, -1);
            }

            MEMORY[0x270FA5388](v213);
            *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
            *(&v230 - 1) = sub_24EA67750();
            uint64_t v140 = swift_getKeyPath();
            uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A78);
            uint64_t v142 = v258;
            v258[3] = v214;
            v142[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            goto LABEL_102;
          }
          goto LABEL_103;
        }
        if (v104 == *MEMORY[0x263F3F228])
        {
          int v194 = swift_getEnumCaseMultiPayload();
          if (v194 == 4)
          {
            uint64_t v133 = v231;
            sub_24EA64C80((uint64_t)v64, v231, MEMORY[0x263F3F200]);
            if (v103(v133, v101) == v131)
            {
              if (qword_269928EC8 != -1) {
                swift_once();
              }
              uint64_t v215 = sub_24EA941C0();
              __swift_project_value_buffer(v215, (uint64_t)qword_269931C48);
              uint64_t v163 = sub_24EA941A0();
              os_log_type_t v216 = sub_24EA947B0();
              if (os_log_type_enabled(v163, v216))
              {
                uint64_t v217 = (uint8_t *)swift_slowAlloc();
                uint64_t v218 = swift_slowAlloc();
                uint64_t v266 = v218;
                *(_DWORD *)uint64_t v217 = 136315138;
                uint64_t v265 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v266);
                sub_24EA94830();
                _os_log_impl(&dword_24EA1C000, v163, v216, "%s", v217, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x253348310](v218, -1, -1);
                MEMORY[0x253348310](v217, -1, -1);
              }
              goto LABEL_101;
            }
LABEL_103:
            (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v133, v101);
LABEL_104:
            uint64_t v229 = (uint64_t (*)(void))MEMORY[0x263F3F200];
            sub_24EA64CE8((uint64_t)v64, MEMORY[0x263F3F200]);
            sub_24EA64CE8(v63, v229);
            sub_24EA676D8();
            swift_allocError();
            char v80 = 7;
            break;
          }
          if (v194 != 7) {
            goto LABEL_104;
          }
LABEL_84:
          uint64_t v195 = v256;
          uint64_t v196 = sub_24EA64C80((uint64_t)v64, (uint64_t)v256, MEMORY[0x263F3F200]);
          uint64_t v197 = *v195;
          uint64_t v198 = v195[1];
          MEMORY[0x270FA5388](v196);
          *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
          *(&v230 - 1) = sub_24EA67750();
          uint64_t v199 = swift_getKeyPath();
          uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A70);
          uint64_t v201 = v258;
          v258[3] = v200;
          v201[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t v202 = swift_allocObject();
          *uint64_t v201 = v202;
          uint64_t v203 = v248;
          *(void *)(v202 + 16) = v199;
          *(void *)(v202 + 24) = v203;
          uint64_t v204 = v250;
          *(void *)(v202 + 32) = v249;
          *(void *)(v202 + 40) = v204;
          *(void *)(v202 + 48) = v254;
          *(unsigned char *)(v202 + 56) = v251;
          uint64_t v205 = v255;
          *(void *)(v202 + 64) = v252;
          *(void *)(v202 + 72) = v205;
          *(void *)(v202 + 80) = v197;
          *(void *)(v202 + 88) = v198;
          goto LABEL_85;
        }
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v247, v101);
LABEL_61:
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v167 = v257;
          sub_24EA64C80((uint64_t)v64, v257, MEMORY[0x263F3F200]);
          uint64_t v168 = sub_24EA940C0();
          uint64_t v169 = *(void *)(v168 - 8);
          int v170 = (*(uint64_t (**)(uint64_t, uint64_t))(v169 + 88))(v167, v168);
          if (v170 == *MEMORY[0x263F3F220]
            || v170 == *MEMORY[0x263F3F218]
            || v170 == *MEMORY[0x263F3F230]
            || v170 == *MEMORY[0x263F3F238]
            || v170 == *MEMORY[0x263F3F228])
          {
            goto LABEL_104;
          }
          (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v257, v168);
        }
        int v171 = 1 << swift_getEnumCaseMultiPayload();
        if ((v171 & 0x2B) != 0) {
          goto LABEL_71;
        }
        if ((v171 & 0xC4) != 0) {
          goto LABEL_70;
        }
        int v172 = 1 << swift_getEnumCaseMultiPayload();
        if ((v172 & 0x2B) != 0)
        {
          uint64_t v64 = (uint64_t *)v63;
        }
        else
        {
          if ((v172 & 0xC4) == 0)
          {
            sub_24EA676D8();
            swift_allocError();
            *uint64_t v207 = 10;
            swift_willThrow();
            return (void *)sub_24EA21258(v63, &qword_269929A30);
          }
          uint64_t v64 = (uint64_t *)v63;
LABEL_70:
          swift_bridgeObjectRelease();
        }
LABEL_71:
        sub_24EA64CE8((uint64_t)v64, MEMORY[0x263F3F200]);
        sub_24EA676D8();
        swift_allocError();
        char v80 = 2;
        break;
      case 5:
        uint64_t v116 = v243;
        sub_24EA64C80(v63, (uint64_t)v243, MEMORY[0x263F3F200]);
        char v117 = *v116;
        int v118 = swift_getEnumCaseMultiPayload();
        if (v118 != 4)
        {
          if (v118 != 5) {
            goto LABEL_61;
          }
          uint64_t v119 = v256;
          sub_24EA64C80((uint64_t)v64, (uint64_t)v256, MEMORY[0x263F3F200]);
          LOBYTE(v119) = *(unsigned char *)v119;
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A50);
          unint64_t v121 = v258;
          v258[3] = v120;
          v121[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          *(unsigned char *)unint64_t v121 = v117;
          *((unsigned char *)v121 + 1) = (_BYTE)v119;
          goto LABEL_86;
        }
        uint64_t v84 = v238;
        sub_24EA64C80((uint64_t)v64, v238, MEMORY[0x263F3F200]);
        uint64_t v85 = sub_24EA940C0();
        uint64_t v86 = *(void *)(v85 - 8);
        uint64_t v148 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 88))(v84, v85);
        if (v148 != *MEMORY[0x263F3F238])
        {
LABEL_49:
          (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v84, v85);
          goto LABEL_61;
        }
        MEMORY[0x270FA5388](v148);
        *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
        *(&v230 - 1) = sub_24EA67750();
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A48);
        uint64_t v150 = v258;
        v258[3] = v149;
        v150[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
        uint64_t v78 = swift_allocObject();
        *uint64_t v150 = v78;
        *(unsigned char *)(v78 + 16) = v117;
LABEL_45:
        *(void *)(v78 + 24) = KeyPath;
        goto LABEL_46;
      case 6:
        unint64_t v122 = v246;
        sub_24EA64C80(v63, (uint64_t)v246, MEMORY[0x263F3F200]);
        uint64_t v92 = v122[1];
        if (swift_getEnumCaseMultiPayload() != 6) {
          goto LABEL_30;
        }
        uint64_t v93 = *v122;
        uint64_t v123 = *v64;
        uint64_t v124 = v64[1];
        goto LABEL_29;
      case 7:
        uint64_t v125 = v245;
        sub_24EA64C80(v63, (uint64_t)v245, MEMORY[0x263F3F200]);
        uint64_t v93 = *v125;
        uint64_t v92 = v125[1];
        int v126 = swift_getEnumCaseMultiPayload();
        if (v126 != 4)
        {
          if (v126 != 7)
          {
LABEL_30:
            swift_bridgeObjectRelease();
            goto LABEL_61;
          }
LABEL_28:
          uint64_t v127 = v256;
          sub_24EA64C80((uint64_t)v64, (uint64_t)v256, MEMORY[0x263F3F200]);
          uint64_t v123 = *v127;
          uint64_t v124 = v127[1];
          sub_24EA64CE8((uint64_t)v64, MEMORY[0x263F3F200]);
LABEL_29:
          sub_24EA64CE8(v63, MEMORY[0x263F3F200]);
          uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A40);
          unsigned int v129 = v258;
          v258[3] = v128;
          v129[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t result = (void *)swift_allocObject();
          uint64_t *v129 = (uint64_t)result;
          result[2] = v93;
          result[3] = v92;
          result[4] = v123;
          result[5] = v124;
          return result;
        }
        sub_24EA64C80((uint64_t)v64, v67, MEMORY[0x263F3F200]);
        uint64_t v95 = sub_24EA940C0();
        uint64_t v96 = *(void *)(v95 - 8);
        uint64_t v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 88))(v67, v95);
        if (v97 == *MEMORY[0x263F3F228])
        {
LABEL_48:
          MEMORY[0x270FA5388](v97);
          *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
          *(&v230 - 1) = sub_24EA67750();
          uint64_t v154 = swift_getKeyPath();
          uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A38);
          uint64_t v156 = v258;
          v258[3] = v155;
          v156[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t v157 = swift_allocObject();
          *uint64_t v156 = v157;
          *(void *)(v157 + 16) = v93;
          *(void *)(v157 + 24) = v92;
          uint64_t v158 = v248;
          *(void *)(v157 + 32) = v154;
          *(void *)(v157 + 40) = v158;
          uint64_t v159 = v250;
          *(void *)(v157 + 48) = v249;
          *(void *)(v157 + 56) = v159;
          *(void *)(v157 + 64) = v254;
          *(unsigned char *)(v157 + 72) = v251;
          uint64_t v160 = v255;
          *(void *)(v157 + 80) = v252;
          *(void *)(v157 + 88) = v160;
          goto LABEL_85;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v67, v95);
        goto LABEL_61;
      default:
        uint64_t v68 = v240;
        sub_24EA64C80(v63, (uint64_t)v240, MEMORY[0x263F3F200]);
        char v69 = *v68;
        int v70 = swift_getEnumCaseMultiPayload();
        if (!v70)
        {
          uint64_t v143 = v256;
          sub_24EA64C80((uint64_t)v64, (uint64_t)v256, MEMORY[0x263F3F200]);
          LOBYTE(v143) = *(unsigned char *)v143;
          uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A98);
          uint64_t v145 = v258;
          v258[3] = v144;
          v145[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          *(unsigned char *)uint64_t v145 = v69;
          *((unsigned char *)v145 + 1) = (_BYTE)v143;
          goto LABEL_86;
        }
        if (v70 != 4) {
          goto LABEL_61;
        }
        uint64_t v71 = v236;
        sub_24EA64C80((uint64_t)v64, v236, MEMORY[0x263F3F200]);
        uint64_t v72 = sub_24EA940C0();
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v73 + 88))(v71, v72) != *MEMORY[0x263F3F220])
        {
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
          goto LABEL_61;
        }
        uint64_t v74 = sub_24EA93FC0();
        MEMORY[0x270FA5388](v74);
        *(&v230 - 2) = (uint64_t)&type metadata for ArtworkPredicateInput;
        *(&v230 - 1) = sub_24EA67750();
        uint64_t v75 = swift_getKeyPath();
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A60);
        char v77 = v258;
        v258[3] = v76;
        v77[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
        uint64_t v78 = swift_allocObject();
        *char v77 = v78;
        *(void *)(v78 + 16) = v74;
        *(void *)(v78 + 24) = v75;
LABEL_46:
        uint64_t v151 = v249;
        *(void *)(v78 + 32) = v248;
        *(void *)(v78 + 40) = v151;
        uint64_t v152 = v254;
        *(void *)(v78 + 48) = v250;
        *(void *)(v78 + 56) = v152;
        *(unsigned char *)(v78 + 64) = v251;
        uint64_t v153 = v255;
        *(void *)(v78 + 72) = v252;
        *(void *)(v78 + 80) = v153;
        goto LABEL_85;
    }
  }
  else
  {
    sub_24EA676D8();
    swift_allocError();
    char v80 = 8;
  }
  *uint64_t v79 = v80;
  return (void *)swift_willThrow();
}

unint64_t sub_24EA62BB8(double a1, double a2)
{
  sub_24EA94B70();
  sub_24EA34314();
  uint64_t v4 = sub_24EA94BB0();
  return sub_24EA63030(v4, a1, a2);
}

unint64_t sub_24EA62C2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24EA93DE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v22 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EA93EB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  sub_24EA94B70();
  sub_24EA1E564(a1, (uint64_t)v16, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    sub_24EA94B90();
    sub_24EA658F8(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v17 = type metadata accessor for ImageAsset();
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(a1 + *(int *)(v17 + 28), (uint64_t)v9, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    uint64_t v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v22, v9, v4);
    sub_24EA94B90();
    sub_24EA658F8(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
  }
  uint64_t v19 = sub_24EA94BB0();
  return sub_24EA630A4(a1, v19);
}

unint64_t sub_24EA63030(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = (double *)(*(void *)(v3 + 48) + 16 * result);
      double v8 = v7[1];
      BOOL v9 = *v7 == a2;
      if (v8 == a3 && v9) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_24EA630A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ImageAsset() - 8;
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_24EA64C80(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      BOOL v13 = _s12FitnessAsset05ImageB0V2eeoiySbAC_ACtFZ_0((uint64_t)v8, a1);
      sub_24EA64CE8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

void (*sub_24EA63204(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for ImageAsset();
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24EA64C80(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  v4[9] = sub_24EA640D4(v4);
  v4[10] = sub_24EA63F54(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_24EA632E4;
}

void sub_24EA632E4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  sub_24EA64CE8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  v2(v1, 0);
  free(v3);
  free(v1);
}

unint64_t sub_24EA63374(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24EA948A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24EA94B70();
        sub_24EA94BA0();
        sub_24EA94BA0();
        unint64_t result = sub_24EA94BB0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (_OWORD *)(v10 + 16 * v3);
        uint64_t v12 = (_OWORD *)(v10 + 16 * v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          _OWORD *v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70) - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_24EA63590(unint64_t a1, uint64_t a2)
{
  uint64_t v51 = sub_24EA93DE0();
  int64_t v54 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EA93EB0();
  uint64_t v47 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v46);
  int64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a2 + 64;
  uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v18 = (a1 + 1) & ~v17;
  if (((1 << v18) & *(void *)(a2 + 64 + 8 * (v18 >> 6))) != 0)
  {
    uint64_t v52 = ~v17;
    uint64_t v53 = v13;
    uint64_t v19 = sub_24EA948A0();
    uint64_t v50 = a2 + 64;
    if ((*(void *)(v16 + 8 * (v18 >> 6)) & (1 << v18)) != 0)
    {
      unint64_t v49 = (v19 + 1) & v52;
      uint64_t v20 = *(void *)(v53 + 72);
      uint64_t v48 = v47 + 6;
      uint64_t v43 = (void (**)(char *, char *, uint64_t))(v47 + 4);
      uint64_t v42 = (void (**)(char *, uint64_t))(v47 + 1);
      uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      uint64_t v41 = (void (**)(char *, char *, uint64_t))(v54 + 32);
      uint64_t v40 = (void (**)(char *, uint64_t))(v54 + 8);
      uint64_t v21 = v46;
      uint64_t v53 = v20;
      while (1)
      {
        uint64_t v22 = *(void *)(a2 + 48);
        int64_t v54 = v20 * v18;
        sub_24EA64C80(v22 + v20 * v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        sub_24EA94B70();
        sub_24EA1E564((uint64_t)v15, (uint64_t)v12, &qword_26B1CFD40);
        if ((*v48)(v12, 1, v8) == 1)
        {
          sub_24EA94B90();
        }
        else
        {
          BOOL v23 = v44;
          (*v43)(v44, v12, v8);
          sub_24EA94B90();
          sub_24EA658F8(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
          sub_24EA94580();
          (*v42)(v23, v8);
        }
        sub_24EA94610();
        sub_24EA94610();
        swift_bridgeObjectRelease();
        sub_24EA1E564((uint64_t)&v15[*(int *)(v21 + 28)], (uint64_t)v7, &qword_26B1CF9E8);
        uint64_t v24 = v51;
        if ((*v47)(v7, 1, v51) == 1)
        {
          sub_24EA94B90();
        }
        else
        {
          uint64_t v25 = v45;
          (*v41)(v45, v7, v24);
          sub_24EA94B90();
          sub_24EA658F8(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
          sub_24EA94580();
          uint64_t v21 = v46;
          (*v40)(v25, v24);
        }
        uint64_t v26 = v52;
        uint64_t v27 = sub_24EA94BB0();
        sub_24EA64CE8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        unint64_t v28 = v27 & v26;
        if ((uint64_t)a1 >= (uint64_t)v49)
        {
          uint64_t v29 = v50;
          uint64_t v20 = v53;
          if (v28 < v49) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v29 = v50;
          uint64_t v20 = v53;
          if (v28 >= v49) {
            goto LABEL_17;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v28)
        {
LABEL_17:
          if ((uint64_t)(v20 * a1) < v54 || *(void *)(a2 + 48) + v20 * a1 >= *(void *)(a2 + 48) + v54 + v20)
          {
            swift_arrayInitWithTakeFrontToBack();
LABEL_22:
            uint64_t v20 = v53;
          }
          else if (v20 * a1 != v54)
          {
            swift_arrayInitWithTakeBackToFront();
            goto LABEL_22;
          }
          uint64_t v30 = *(void *)(a2 + 56);
          uint64_t v31 = (void *)(v30 + 8 * a1);
          uint64_t v32 = (void *)(v30 + 8 * v18);
          if (a1 != v18 || (a1 = v18, v31 >= v32 + 1))
          {
            void *v31 = *v32;
            a1 = v18;
          }
        }
LABEL_5:
        unint64_t v18 = (v18 + 1) & v26;
        if (((*(void *)(v29 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          goto LABEL_28;
        }
      }
    }
    uint64_t v29 = v50;
LABEL_28:
    uint64_t v33 = (uint64_t *)(v29 + 8 * (a1 >> 6));
    uint64_t v35 = *v33;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v33 = (uint64_t *)(v16 + 8 * (a1 >> 6));
    uint64_t v34 = *v33;
    uint64_t v35 = (-1 << a1) - 1;
  }
  uint64_t *v33 = v34 & v35;
  uint64_t v36 = *(void *)(a2 + 16);
  BOOL v37 = __OFSUB__(v36, 1);
  uint64_t v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v38;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_24EA63C7C(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24EA62BB8(a3, a4);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a2 & 1) == 0)
  {
    if (v17 >= v15 && (a2 & 1) == 0)
    {
      sub_24EA8B424();
      goto LABEL_7;
    }
    sub_24EA8A440(v15, a2 & 1);
    unint64_t v22 = sub_24EA62BB8(a3, a4);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CGSize();
    uint64_t result = sub_24EA94B00();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19
        + *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70) - 8) + 72) * v12;
    return sub_24EA67538(a1, v20);
  }
LABEL_13:
  return sub_24EA8B2C4(v12, a1, v18, a3, a4);
}

uint64_t sub_24EA63DD4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_24EA62C2C(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_24EA8B694();
    goto LABEL_7;
  }
  sub_24EA8A7E8(v16, a3 & 1);
  unint64_t v22 = sub_24EA62C2C(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_24EA94B00();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24EA64C80(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  return sub_24EA8B370(v13, (uint64_t)v10, a1, v19);
}

void (*sub_24EA63F54(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_24EA62C2C(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_24EA64084;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_24EA8B694();
      goto LABEL_7;
    }
    sub_24EA8A7E8(v14, a3 & 1);
    unint64_t v18 = sub_24EA62C2C(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for ImageAsset();
  uint64_t result = (void (*)(uint64_t **))sub_24EA94B00();
  __break(1u);
  return result;
}

void sub_24EA64084(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_24EA64110(*a1, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_24EA640D4(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_24EA64104;
}

uint64_t sub_24EA64104(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_24EA64110(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  if (v13)
  {
    uint64_t v14 = (void *)*a3;
    if (a2)
    {
      *(void *)(v14[7] + 8 * a4) = v13;
    }
    else
    {
      sub_24EA64C80(a5, (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA8B370(a4, (uint64_t)v12, v13, v14);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_24EA63590(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_24EA64250(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v38 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EA93E70();
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DynamicImageAssetFeature.TaskIdentifier(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v15 = (char *)&v38 - v14;
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929990);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v21[*(int *)(v22 + 56)];
  sub_24EA64C80(v40, (uint64_t)v21, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
  sub_24EA64C80(v41, v23, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v26 = v39;
    sub_24EA64C80((uint64_t)v21, (uint64_t)v18, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v9, v23, v7);
      char v25 = sub_24EA93E50();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v26 + 8);
      v36(v9, v7);
      v36(v18, v7);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v7);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24EA64C80((uint64_t)v21, (uint64_t)v15, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_24EA64D48(v23, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      char v25 = _s12FitnessAsset31DynamicArtworkLayoutEnvironmentV2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v6);
      sub_24EA64CE8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
      sub_24EA64CE8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
LABEL_18:
      sub_24EA64CE8((uint64_t)v21, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
      return v25 & 1;
    }
    uint64_t v34 = type metadata accessor for DynamicArtworkLayoutEnvironment;
    uint64_t v35 = (uint64_t)v15;
    goto LABEL_14;
  }
  sub_24EA64C80((uint64_t)v21, (uint64_t)v12, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
  uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78) + 48);
  double v29 = *(double *)&v12[v27];
  double v28 = *(double *)&v12[v27 + 8];
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v34 = type metadata accessor for ImageAsset;
    uint64_t v35 = (uint64_t)v12;
LABEL_14:
    sub_24EA64CE8(v35, (uint64_t (*)(void))v34);
LABEL_15:
    sub_24EA21258((uint64_t)v21, &qword_269929990);
    goto LABEL_16;
  }
  double v31 = *(double *)(v23 + v27);
  double v30 = *(double *)(v23 + v27 + 8);
  uint64_t v32 = v38;
  sub_24EA64D48(v23, v38, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  char v33 = static ImageAsset.== infix(_:_:)(v12, v32);
  sub_24EA64CE8(v32, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  sub_24EA64CE8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  if (v33)
  {
    char v25 = v28 == v30 && v29 == v31;
    goto LABEL_18;
  }
  sub_24EA64CE8((uint64_t)v21, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
LABEL_16:
  char v25 = 0;
  return v25 & 1;
}

uint64_t _s12FitnessAsset012DynamicImageB7FeatureV7dispose10localState06sharedH0y8DataFlow05EmptyH0V_AA0cdbH0VztF_0(int64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageAsset();
  uint64_t v35 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = *(void *)(a1 + *(int *)(type metadata accessor for DynamicImageAssetState() + 20));
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v33 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  int64_t v32 = v34 - 1;
  uint64_t v36 = v11;
  int64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v19 = v18 | (v17 << 6);
LABEL_5:
  uint64_t v20 = v36;
  sub_24EA64C80(*(void *)(v36 + 48) + *(void *)(v35 + 72) * v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  uint64_t v21 = *(void *)(v20 + 56);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B8);
  *(void *)&v7[*(int *)(v22 + 48)] = *(void *)(v21 + 8 * v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 0, 1, v22);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24EA1E61C((uint64_t)v7, (uint64_t)v10, &qword_2699291B0);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v10, 1, v26) == 1) {
      return swift_release();
    }
    uint64_t v27 = *(void *)&v10[*(int *)(v26 + 48)];
    uint64_t v28 = sub_24EA64D48((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    MEMORY[0x270FA5388](v28);
    *(&v32 - 2) = v38;
    uint64_t v29 = sub_24EA8C104(v27, (uint64_t (*)(char *, double, double))sub_24EA67AA4, (uint64_t)(&v32 - 4));
    uint64_t v30 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v30);
    *(&v32 - 2) = v37;
    *(&v32 - 1) = (int64_t)v4;
    sub_24EA54D94((uint64_t (*)(long long *))sub_24EA67AAC, (uint64_t)(&v32 - 4), v29);
    swift_release();
    uint64_t result = sub_24EA64CE8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    if (v15) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v23 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v23 < v34)
    {
      unint64_t v24 = *(void *)(v33 + 8 * v23);
      if (v24) {
        goto LABEL_9;
      }
      v17 += 2;
      if (v23 + 1 >= v34)
      {
        int64_t v17 = v23;
        goto LABEL_14;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v17);
      if (v24)
      {
        ++v23;
LABEL_9:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
        int64_t v17 = v23;
        goto LABEL_5;
      }
      if (v23 + 2 < v34) {
        break;
      }
    }
LABEL_14:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699291B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
    unint64_t v15 = 0;
  }
  unint64_t v24 = *(void *)(v33 + 8 * (v23 + 2));
  if (v24)
  {
    v23 += 2;
    goto LABEL_9;
  }
  int64_t v31 = v23 + 3;
  if (v23 + 3 >= v34)
  {
    int64_t v17 = v23 + 2;
    goto LABEL_14;
  }
  unint64_t v24 = *(void *)(v33 + 8 * v31);
  if (v24)
  {
    v23 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v23 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v23 >= v34)
    {
      int64_t v17 = v32;
      goto LABEL_14;
    }
    unint64_t v24 = *(void *)(v33 + 8 * v23);
    ++v31;
    if (v24) {
      goto LABEL_9;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DynamicImageAssetFeature.TaskIdentifier(uint64_t a1)
{
  return sub_24EA64C48(a1, (uint64_t *)&unk_269929978);
}

uint64_t sub_24EA64C48(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EA64C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA64CE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EA64D48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA64DB4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ImageAsset() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  double v8 = *(double *)(v1 + v6);
  double v9 = *(double *)(v1 + v6 + 8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24EA2C5B8;
  return sub_24EA5F198(a1, v7, v8, v9);
}

uint64_t sub_24EA64ED4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ImageAsset() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  double v8 = *(double *)(v1 + v6);
  double v9 = *(double *)(v1 + v6 + 8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24EA2C0C8;
  return sub_24EA5EAA0(a1, v7, v8, v9);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = type metadata accessor for ImageAsset();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_24EA93EB0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 28);
  uint64_t v8 = sub_24EA93DE0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_24EA651B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ImageAsset() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  double v8 = *(double *)(v1 + v6);
  double v9 = *(double *)(v1 + v6 + 8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24EA2C5B8;
  return sub_24EA5E700(a1, v7, v8, v9);
}

unint64_t sub_24EA652CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299C0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (double *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF00);
    uint64_t v7 = (void *)sub_24EA949C0();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_24EA1E564(v9, (uint64_t)v5, &qword_2699299C0);
      double v11 = *v5;
      double v12 = v5[1];
      unint64_t result = sub_24EA62BB8(*v5, v12);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = (double *)(v7[6] + 16 * result);
      *uint64_t v16 = v11;
      v16[1] = v12;
      uint64_t v17 = v7[7];
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
      unint64_t result = sub_24EA1E61C(v8, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v15, &qword_26B1CFC70);
      uint64_t v19 = v7[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_10;
      }
      v7[2] = v21;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_24EA65498()
{
  uint64_t v1 = type metadata accessor for ImageAsset();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v17 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(type metadata accessor for DynamicImageAssetFeature(0) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = sub_24EA93EB0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v3, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v3, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 28);
  uint64_t v10 = sub_24EA93DE0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  unint64_t v12 = (((((v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5;
  uint64_t v13 = v12 + v6;
  uint64_t v14 = v0 + v12;
  uint64_t v15 = sub_24EA93E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v13, v2 | v5 | 7);
}

uint64_t sub_24EA65738(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ImageAsset() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for DynamicImageAssetFeature(0) - 8);
  uint64_t v9 = v1 + v5;
  double v10 = *(double *)(v1 + v6);
  double v11 = *(double *)(v1 + v6 + 8);
  double v12 = *(double *)(v1 + v7);
  uint64_t v13 = v1 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_24EA2C5B8;
  return sub_24EA575B8(a1, v9, v13, v10, v11, v12);
}

uint64_t sub_24EA658B0()
{
  return sub_24EA658F8(&qword_269929968, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetAction);
}

uint64_t sub_24EA658F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA65940()
{
  return sub_24EA658F8(&qword_269929970, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetAction);
}

uint64_t sub_24EA65988()
{
  return sub_24EA658F8(&qword_269929820, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetState);
}

uint64_t *initializeBufferWithCopyOfBuffer for DynamicImageAssetFeature(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_24EA93E70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)v4 + v8;
    double v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
    uint64_t v11 = *((void *)v10 + 5);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
    *((void *)v9 + 5) = v11;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for DynamicImageAssetFeature(uint64_t a1)
{
  uint64_t v2 = sub_24EA93E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DynamicImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 40);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(void *)(v8 + 40) = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DynamicImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for DynamicImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  _OWORD *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t assignWithTake for DynamicImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + v7) = *v9;
  swift_release();
  *(_OWORD *)(v8 + 16) = v9[1];
  swift_release();
  *(_OWORD *)(v8 + 32) = v9[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA65E3C);
}

uint64_t sub_24EA65E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93E70();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DynamicImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA65F10);
}

uint64_t sub_24EA65F10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24EA93E70();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24EA65FCC()
{
  uint64_t result = sub_24EA93E70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24EA66060(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = sub_24EA93EB0();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(a1, a2, v14);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      uint64_t v18 = (int *)type metadata accessor for ImageAsset();
      uint64_t v19 = v18[5];
      BOOL v20 = (uint64_t *)((char *)a1 + v19);
      uint64_t v21 = (uint64_t *)((char *)a2 + v19);
      uint64_t v22 = v21[1];
      *BOOL v20 = *v21;
      v20[1] = v22;
      *((unsigned char *)a1 + v18[6]) = *((unsigned char *)a2 + v18[6]);
      uint64_t v23 = v18[7];
      unint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_24EA93DE0();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)((char *)a1 + *(int *)(v30 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v30 + 48));
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      unint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24EA93FA0();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(v9, v10, v11);
      *((unsigned char *)a1 + v7[7]) = *((unsigned char *)a2 + v7[7]);
      v12((char *)a1 + v7[8], (char *)a2 + v7[8], v11);
    }
    else
    {
      uint64_t v17 = sub_24EA93E70();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EA6640C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 2)
  {
    if (result == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicArtworkLayoutEnvironment();
      uint64_t v13 = a1 + *(int *)(v12 + 24);
      uint64_t v14 = sub_24EA93FA0();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v16)((void *)(v14 - 8), v13, v14);
      uint64_t v6 = a1 + *(int *)(v12 + 32);
      uint64_t v5 = v14;
      uint64_t v4 = v16;
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_24EA93E70();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = a1;
    }
    goto LABEL_11;
  }
  uint64_t v7 = sub_24EA93EB0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  }
  uint64_t v9 = type metadata accessor for ImageAsset();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + *(int *)(v9 + 28);
  uint64_t v11 = sub_24EA93DE0();
  uint64_t v15 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    uint64_t v6 = v10;
    uint64_t v5 = v11;
LABEL_11:
    return v4(v6, v5);
  }
  return result;
}

_WORD *sub_24EA66634(_WORD *a1, _WORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = sub_24EA93EB0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_WORD *, _WORD *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    uint64_t v15 = (int *)type metadata accessor for ImageAsset();
    uint64_t v16 = v15[5];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *((unsigned char *)a1 + v15[6]) = *((unsigned char *)a2 + v15[6]);
    uint64_t v20 = v15[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_24EA93DE0();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
    *(_OWORD *)((char *)a1 + *(int *)(v27 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v27 + 48));
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v5 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
    uint64_t v6 = v5[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24EA93FA0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    v10(v7, v8, v9);
    *((unsigned char *)a1 + v5[7]) = *((unsigned char *)a2 + v5[7]);
    v10((char *)a1 + v5[8], (char *)a2 + v5[8], v9);
  }
  else
  {
    uint64_t v14 = sub_24EA93E70();
    (*(void (**)(_WORD *, _WORD *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *sub_24EA66990(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_24EA64CE8((uint64_t)a1, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_24EA93EB0();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      uint64_t v15 = (int *)type metadata accessor for ImageAsset();
      uint64_t v16 = v15[5];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      a1[v15[6]] = a2[v15[6]];
      uint64_t v19 = v15[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_24EA93DE0();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      if (v24(v21, 1, v22))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)&a1[*(int *)(v26 + 48)] = *(_OWORD *)&a2[*(int *)(v26 + 48)];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v5 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
      uint64_t v6 = v5[6];
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_24EA93FA0();
      uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      a1[v5[7]] = a2[v5[7]];
      v10(&a1[v5[8]], &a2[v5[8]], v9);
    }
    else
    {
      uint64_t v14 = sub_24EA93E70();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *sub_24EA66D20(_WORD *a1, _WORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = sub_24EA93EB0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_WORD *, _WORD *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    uint64_t v15 = (int *)type metadata accessor for ImageAsset();
    *(_OWORD *)((char *)a1 + v15[5]) = *(_OWORD *)((char *)a2 + v15[5]);
    *((unsigned char *)a1 + v15[6]) = *((unsigned char *)a2 + v15[6]);
    uint64_t v16 = v15[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_24EA93DE0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
    *(_OWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 48));
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v5 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
    uint64_t v6 = v5[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24EA93FA0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(v7, v8, v9);
    *((unsigned char *)a1 + v5[7]) = *((unsigned char *)a2 + v5[7]);
    v10((char *)a1 + v5[8], (char *)a2 + v5[8], v9);
  }
  else
  {
    uint64_t v14 = sub_24EA93E70();
    (*(void (**)(_WORD *, _WORD *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_WORD *sub_24EA6706C(_WORD *a1, _WORD *a2)
{
  if (a1 != a2)
  {
    sub_24EA64CE8((uint64_t)a1, type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_24EA93EB0();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_WORD *, _WORD *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      uint64_t v15 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)((char *)a1 + v15[5]) = *(_OWORD *)((char *)a2 + v15[5]);
      *((unsigned char *)a1 + v15[6]) = *((unsigned char *)a2 + v15[6]);
      uint64_t v16 = v15[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_24EA93DE0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 48));
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v5 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
      uint64_t v6 = v5[6];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_24EA93FA0();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(v7, v8, v9);
      *((unsigned char *)a1 + v5[7]) = *((unsigned char *)a2 + v5[7]);
      v10((char *)a1 + v5[8], (char *)a2 + v5[8], v9);
    }
    else
    {
      uint64_t v14 = sub_24EA93E70();
      (*(void (**)(_WORD *, _WORD *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EA673DC()
{
  uint64_t result = sub_24EA93E70();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for DynamicArtworkLayoutEnvironment();
    if (v2 <= 0x3F)
    {
      uint64_t v6 = *(void *)(result - 8) + 64;
      uint64_t result = type metadata accessor for ImageAsset();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v7 = &v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_24EA674F0()
{
  return sub_24EA658F8(&qword_269929988, (void (*)(uint64_t))type metadata accessor for DynamicImageAssetFeature.TaskIdentifier);
}

uint64_t sub_24EA67538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EA675A0()
{
  unint64_t result = qword_269929998;
  if (!qword_269929998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929998);
  }
  return result;
}

unint64_t sub_24EA675F4()
{
  unint64_t result = qword_2699299B8;
  if (!qword_2699299B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699299B8);
  }
  return result;
}

uint64_t sub_24EA6764C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24EA67688(uint64_t a1)
{
  return sub_24EA67AD8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_24EA67698()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return MEMORY[0x270FA0238](v0, 97, 7);
}

unint64_t sub_24EA676D8()
{
  unint64_t result = qword_2699299F0;
  if (!qword_2699299F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699299F0);
  }
  return result;
}

uint64_t sub_24EA6772C()
{
  return objectdestroy_39Tm(49);
}

uint64_t sub_24EA67738()
{
  return 16;
}

__n128 sub_24EA67744(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_24EA67750()
{
  unint64_t result = qword_269929A08;
  if (!qword_269929A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929A08);
  }
  return result;
}

uint64_t sub_24EA677A4()
{
  return objectdestroy_42Tm(89);
}

uint64_t sub_24EA677AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EA677E4()
{
  return objectdestroy_45Tm(145);
}

uint64_t sub_24EA677EC()
{
  return objectdestroy_48Tm(89);
}

uint64_t sub_24EA677F8()
{
  return 16;
}

__n128 sub_24EA67804(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA67814()
{
  return 16;
}

__n128 sub_24EA67820(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA6782C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_24EA6787C()
{
  return objectdestroy_39Tm(48);
}

uint64_t objectdestroy_39Tm(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24EA678D4()
{
  return 16;
}

__n128 sub_24EA678E0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA678EC()
{
  return objectdestroy_42Tm(88);
}

uint64_t sub_24EA678F8()
{
  return 16;
}

__n128 sub_24EA67904(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA67910()
{
  return objectdestroy_42Tm(88);
}

uint64_t objectdestroy_42Tm(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24EA6796C()
{
  return objectdestroy_45Tm(144);
}

uint64_t sub_24EA67974()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_24EA679C4()
{
  return objectdestroy_45Tm(144);
}

uint64_t sub_24EA679CC()
{
  return objectdestroy_48Tm(81);
}

uint64_t sub_24EA679D4()
{
  return objectdestroy_45Tm(144);
}

uint64_t objectdestroy_45Tm(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24EA67A48()
{
  return objectdestroy_48Tm(88);
}

uint64_t objectdestroy_48Tm(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24EA67AA4(uint64_t a1)
{
  return sub_24EA54748(a1, *(void *)(v1 + 16));
}

uint64_t sub_24EA67AAC(double *a1)
{
  return sub_24EA54840(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24EA67AD8(uint64_t a1, uint64_t a2, unint64_t a3, char a4, double a5)
{
  uint64_t v27 = a1;
  unint64_t v28 = a3;
  int v29 = a4 & 1;
  uint64_t v31 = sub_24EA94540();
  uint64_t v34 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24EA94570();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEA8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = sub_24EA94550();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA67F18();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F068], v14);
  uint64_t v26 = sub_24EA947E0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v11);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = swift_allocObject();
  unint64_t v20 = v28;
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v18, (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  *(unsigned char *)(v19 + v18 + v13) = v29;
  *(double *)(((v18 + v13) & 0xFFFFFFFFFFFFFFF8) + v19 + 8) = a5;
  aBlock[4] = sub_24EA681BC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24EA68254;
  aBlock[3] = &block_descriptor_0;
  uint64_t v21 = _Block_copy(aBlock);
  sub_24EA444A4(a2, v20);
  sub_24EA94560();
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_24EA682B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE98);
  sub_24EA68308();
  uint64_t v23 = v30;
  uint64_t v22 = v31;
  sub_24EA94890();
  uint64_t v24 = (void *)v26;
  MEMORY[0x2533478D0](0, v10, v23, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
  return swift_release();
}

unint64_t sub_24EA67F18()
{
  unint64_t result = qword_26B1CFEB0;
  if (!qword_26B1CFEB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B1CFEB0);
  }
  return result;
}

uint64_t sub_24EA67F58(uint64_t a1, unint64_t a2, double a3)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 != a1 >> 32) {
        goto LABEL_3;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(a1 + 16) == *(void *)(a1 + 24)) {
        goto LABEL_8;
      }
      goto LABEL_3;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((a2 & 0xFF000000000000) != 0)
      {
LABEL_3:
        id v6 = objc_allocWithZone(MEMORY[0x263F827E8]);
        sub_24EA444A4(a1, a2);
        uint64_t v7 = (void *)sub_24EA93DF0();
        id v8 = objc_msgSend(v6, sel_initWithData_scale_, v7, a3);
        sub_24EA4444C(a1, a2);

        if (v8)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEA8);
          return sub_24EA946F0();
        }
        sub_24EA675F4();
        swift_allocError();
        char v11 = 4;
      }
      else
      {
LABEL_8:
        sub_24EA675F4();
        swift_allocError();
        char v11 = 3;
      }
      *uint64_t v10 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEA8);
      return sub_24EA946E0();
  }
}

uint64_t sub_24EA680E4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  sub_24EA4444C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24EA681BC()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEA8) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = *(void *)(v0 + 24);
  double v4 = *(double *)(((((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                   + *(void *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8)
                 + v0
                 + 8);
  return sub_24EA67F58(v2, v3, v4);
}

uint64_t sub_24EA68254(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_24EA682B0()
{
  unint64_t result = qword_26B1CFE88;
  if (!qword_26B1CFE88)
  {
    sub_24EA94540();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFE88);
  }
  return result;
}

unint64_t sub_24EA68308()
{
  unint64_t result = qword_26B1CFEA0;
  if (!qword_26B1CFEA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFE98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFEA0);
  }
  return result;
}

BOOL static ImageAssetLoadError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_24EA6837C()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_24EA683BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA691E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA683E4(uint64_t a1)
{
  unint64_t v2 = sub_24EA687F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA68420(uint64_t a1)
{
  unint64_t v2 = sub_24EA687F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA6845C(uint64_t a1)
{
  unint64_t v2 = sub_24EA68898();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA68498(uint64_t a1)
{
  unint64_t v2 = sub_24EA68898();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA684D4(uint64_t a1)
{
  unint64_t v2 = sub_24EA68844();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA68510(uint64_t a1)
{
  unint64_t v2 = sub_24EA68844();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAssetLoadError.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929AA0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929AA8);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929AB0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA687F0();
  sub_24EA94C00();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24EA68844();
    uint64_t v14 = v18;
    sub_24EA94A70();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24EA68898();
    sub_24EA94A70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_24EA687F0()
{
  unint64_t result = qword_269929AB8;
  if (!qword_269929AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929AB8);
  }
  return result;
}

unint64_t sub_24EA68844()
{
  unint64_t result = qword_269929AC0;
  if (!qword_269929AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929AC0);
  }
  return result;
}

unint64_t sub_24EA68898()
{
  unint64_t result = qword_269929AC8;
  if (!qword_269929AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929AC8);
  }
  return result;
}

uint64_t ImageAssetLoadError.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929AD0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929AD8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929AE0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA687F0();
  char v11 = v32;
  sub_24EA94BF0();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_24EA94A50();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_24EA94910();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269928F08);
    *char v22 = &type metadata for ImageAssetLoadError;
    sub_24EA94A00();
    sub_24EA94900();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24EA68844();
    unint64_t v18 = v14;
    sub_24EA949F0();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24EA68898();
    sub_24EA949F0();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24EA68D44@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ImageAssetLoadError.init(from:)(a1, a2);
}

uint64_t sub_24EA68D5C(void *a1)
{
  return ImageAssetLoadError.encode(to:)(a1);
}

uint64_t ImageAssetLoadError.hash(into:)()
{
  return sub_24EA94B80();
}

uint64_t ImageAssetLoadError.hashValue.getter()
{
  return sub_24EA94BB0();
}

unint64_t sub_24EA68DEC()
{
  unint64_t result = qword_26B1CFBE0[0];
  if (!qword_26B1CFBE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1CFBE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAssetLoadError()
{
  return &type metadata for ImageAssetLoadError;
}

unsigned char *_s12FitnessAsset19ImageAssetLoadErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA68F20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAssetLoadError.CodingKeys()
{
  return &type metadata for ImageAssetLoadError.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAssetLoadError.ImageLoadingFailureCodingKeys()
{
  return &type metadata for ImageAssetLoadError.ImageLoadingFailureCodingKeys;
}

ValueMetadata *type metadata accessor for ImageAssetLoadError.InvalidRemoteURLCodingKeys()
{
  return &type metadata for ImageAssetLoadError.InvalidRemoteURLCodingKeys;
}

unint64_t sub_24EA68F7C()
{
  unint64_t result = qword_269929AE8;
  if (!qword_269929AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929AE8);
  }
  return result;
}

unint64_t sub_24EA68FD4()
{
  unint64_t result = qword_269929AF0;
  if (!qword_269929AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929AF0);
  }
  return result;
}

unint64_t sub_24EA6902C()
{
  unint64_t result = qword_269929AF8;
  if (!qword_269929AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929AF8);
  }
  return result;
}

unint64_t sub_24EA69084()
{
  unint64_t result = qword_269929B00;
  if (!qword_269929B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929B00);
  }
  return result;
}

unint64_t sub_24EA690DC()
{
  unint64_t result = qword_269929B08;
  if (!qword_269929B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929B08);
  }
  return result;
}

unint64_t sub_24EA69134()
{
  unint64_t result = qword_269929B10;
  if (!qword_269929B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929B10);
  }
  return result;
}

unint64_t sub_24EA6918C()
{
  unint64_t result = qword_269929B18;
  if (!qword_269929B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929B18);
  }
  return result;
}

uint64_t sub_24EA691E0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024EA9AC30 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EA9AC50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t DynamicPredicateDescriptor.makePredicateExpression<A>(using:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  char v33 = a5;
  uint64_t v34 = a1;
  uint64_t v6 = sub_24EA94110();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EA94140();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24EA94180();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24EA94030();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v28 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v28, v12);
      DynamicPredicateComparisonDescriptor.makePredicateExpression<A>(using:)(v34, v35, v33);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      break;
    case 2uLL:
      uint64_t v22 = swift_projectBox();
      uint64_t v24 = v29;
      uint64_t v23 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v11, v22, v30);
      DynamicPredicateEqualityDescriptor.makePredicateExpression<A>(using:)(v34, v35, v36, v33);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v23);
      break;
    case 3uLL:
      uint64_t v25 = swift_projectBox();
      uint64_t v27 = v31;
      uint64_t v26 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v8, v25, v32);
      DynamicPredicateLogicalDescriptor.makePredicateExpression<A>(using:)(v34, v35, v36);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v8, v26);
      break;
    default:
      uint64_t v20 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v20, v16);
      DynamicPredicateBooleanValue.makePredicateExpression<A>(using:)((uint64_t)v33);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      break;
  }
  return result;
}

uint64_t sub_24EA69694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return DynamicPredicateDescriptor.makePredicateExpression<A>(using:)(a1, *v4, a2, a3, a4);
}

FitnessAsset::FileType_optional __swiftcall FileType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_24EA949E0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FileType.rawValue.getter()
{
  if (*v0) {
    return 6778986;
  }
  else {
    return 6778480;
  }
}

uint64_t sub_24EA6973C(char *a1, char *a2)
{
  return sub_24EA6BF5C(*a1, *a2);
}

FitnessAsset::FileType_optional sub_24EA69748(Swift::String *a1)
{
  return FileType.init(rawValue:)(*a1);
}

uint64_t sub_24EA69754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FileType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24EA6977C()
{
  return sub_24EA94660();
}

uint64_t sub_24EA697DC()
{
  return sub_24EA94650();
}

unint64_t sub_24EA69830()
{
  unint64_t result = qword_269929B20;
  if (!qword_269929B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929B20);
  }
  return result;
}

uint64_t sub_24EA69884()
{
  return sub_24EA6C1D0();
}

uint64_t sub_24EA6988C()
{
  return sub_24EA34200();
}

uint64_t sub_24EA69894()
{
  return sub_24EA6C3F8();
}

unsigned char *storeEnumTagSinglePayload for FileType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA69968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileType()
{
  return &type metadata for FileType;
}

unint64_t sub_24EA699A0()
{
  unint64_t result = qword_26B1CFD10;
  if (!qword_26B1CFD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFD10);
  }
  return result;
}

uint64_t static ArtworkPredicate.makeLogicalOperation(lhs:rhs:logicalOperator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v6 = a3 & 1;
  sub_24EA472A8(a1, a4);
  uint64_t result = sub_24EA472A8(a2, a4 + 40);
  *(unsigned char *)(a4 + 80) = v6;
  return result;
}

uint64_t static ArtworkPredicate.makeComparison<A, B>(lhs:rhs:comparisonOperator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v21 = a5;
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = *v17;
  (*(void (**)(char *, __n128))(v19 + 16))(v16, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, a4);
  char v22 = v18;
  return sub_24EA6A3A0((uint64_t)v16, (uint64_t)v12, &v22, a3, a4, a6);
}

uint64_t static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v16 + 16))(v15, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return sub_24EA6D3B8((uint64_t)v15, (uint64_t)v11, a3, a4, a5);
}

uint64_t static ArtworkPredicate.makeKeyPath<A, B>(root:keyPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  __n128 v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
  ArtworkPredicateKeyPath.init(root:keyPath:)((uint64_t)v9, a2, a3, a4);
  return swift_retain();
}

ValueMetadata *type metadata accessor for ArtworkPredicate()
{
  return &type metadata for ArtworkPredicate;
}

FitnessAsset::LogicalOperator_optional __swiftcall LogicalOperator.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_24EA949E0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = FitnessAsset_LogicalOperator_or;
  }
  else {
    v2.value = FitnessAsset_LogicalOperator_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t LogicalOperator.rawValue.getter(char a1)
{
  if (a1) {
    return 29295;
  }
  else {
    return 6581857;
  }
}

uint64_t sub_24EA69F10(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = LogicalOperator.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == LogicalOperator.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EA94AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EA69F9C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_24EA949E0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_24EA69FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LogicalOperator.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24EA6A028()
{
  return sub_24EA94660();
}

uint64_t sub_24EA6A088()
{
  return sub_24EA94650();
}

unint64_t sub_24EA6A0DC()
{
  unint64_t result = qword_269929B28;
  if (!qword_269929B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929B28);
  }
  return result;
}

uint64_t sub_24EA6A130()
{
  char v1 = *v0;
  sub_24EA94B70();
  LogicalOperator.rawValue.getter(v1);
  sub_24EA94610();
  swift_bridgeObjectRelease();
  return sub_24EA94BB0();
}

uint64_t sub_24EA6A194()
{
  LogicalOperator.rawValue.getter(*v0);
  sub_24EA94610();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EA6A1E8()
{
  char v1 = *v0;
  sub_24EA94B70();
  LogicalOperator.rawValue.getter(v1);
  sub_24EA94610();
  swift_bridgeObjectRelease();
  return sub_24EA94BB0();
}

unsigned char *storeEnumTagSinglePayload for LogicalOperator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA6A314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogicalOperator()
{
  return &type metadata for LogicalOperator;
}

unint64_t sub_24EA6A34C()
{
  unint64_t result = qword_269929B30[0];
  if (!qword_269929B30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269929B30);
  }
  return result;
}

uint64_t sub_24EA6A3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = *a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a6, a1, a4);
  uint64_t v10 = type metadata accessor for ArtworkPredicateComparison();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + *(int *)(v10 + 60), a2, a5);
  *(unsigned char *)(a6 + *(int *)(v10 + 64)) = v9;
  return result;
}

uint64_t ArtworkPredicateComparison.lhs.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ArtworkPredicateComparison.rhs.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

uint64_t ArtworkPredicateComparison.comparisonOperator.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 64));
  return result;
}

Swift::Bool __swiftcall ArtworkPredicateComparison.evaluate()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - v11;
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 16))(v4, v3, v10);
  (*(void (**)(void))(*(void *)(v2 + 40) + 16))(*(void *)(v2 + 24));
  switch(*(unsigned char *)(v1 + *(int *)(v2 + 64)))
  {
    case 1:
      char v13 = sub_24EA945B0();
      break;
    case 2:
      char v13 = sub_24EA945A0();
      break;
    case 3:
      char v13 = sub_24EA945C0();
      break;
    default:
      char v13 = sub_24EA94590();
      break;
  }
  char v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v8, AssociatedTypeWitness);
  v15(v12, AssociatedTypeWitness);
  return v14 & 1;
}

BOOL sub_24EA6A728@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = ArtworkPredicateComparison.evaluate()();
  *a1 = result;
  return result;
}

uint64_t sub_24EA6A754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_24EA6A75C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24EA6A834(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64);
  unint64_t v12 = v11 + ((v6 + v9) & ~v9) + 1;
  uint64_t v13 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    *(unsigned char *)((((unint64_t)v4 + v10) & v17) + v11) = *(unsigned char *)(v18 + v11);
  }
  return v4;
}

uint64_t sub_24EA6A9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_24EA6AA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 48) + v12) = *(unsigned char *)(*(void *)(v9 + 48) + v13);
  return a1;
}

uint64_t sub_24EA6AB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 40) + v12) = *(unsigned char *)(*(void *)(v9 + 40) + v13);
  return a1;
}

uint64_t sub_24EA6ABC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 32) + v12) = *(unsigned char *)(*(void *)(v9 + 32) + v13);
  return a1;
}

uint64_t sub_24EA6AC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 24) + v12) = *(unsigned char *)(*(void *)(v9 + 24) + v13);
  return a1;
}

uint64_t sub_24EA6AD40(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v7 + 64);
  if (v8 <= v6) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  if (v11 <= 0xFC) {
    unsigned int v11 = 252;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_27;
  }
  uint64_t v14 = v10 + (v12 & ~v9) + 1;
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_27:
      if (v6 == v11) {
        return (*(uint64_t (**)(void))(v5 + 48))();
      }
      unint64_t v22 = ((unint64_t)a1 + v12) & ~v9;
      if (v8 == v11) {
        return (*(uint64_t (**)(unint64_t))(v7 + 48))(v22);
      }
      unsigned int v23 = *(unsigned __int8 *)(v22 + v10);
      if (v23 >= 4) {
        return v23 - 3;
      }
      else {
        return 0;
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_27;
  }
LABEL_17:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v10 + (v12 & ~v9) == -1)
  {
    int v21 = 0;
  }
  else
  {
    if (v14 <= 3) {
      int v20 = v10 + (v12 & ~v9) + 1;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v11 + (v21 | v19) + 1;
}

void sub_24EA6AF58(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v8 + 64);
  if (v9 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  if (v12 <= 0xFC) {
    unsigned int v12 = 252;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v10;
  size_t v14 = v11 + (v13 & ~v10) + 1;
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v11 + (v13 & ~v10) != -1)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_45;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x24EA6B248);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v7 == v12)
        {
          unint64_t v22 = *(void (**)(void))(v6 + 56);
          v22();
        }
        else
        {
          unint64_t v23 = (unint64_t)&a1[v13] & ~v10;
          if (v9 == v12)
          {
            uint64_t v24 = *(void (**)(unint64_t))(v8 + 56);
            v24(v23);
          }
          else
          {
            *(unsigned char *)(v23 + v11) = a2 + 3;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ArtworkPredicateComparison()
{
  return swift_getGenericMetadata();
}

uint64_t ArtworkPredicateKeyPath.init(root:keyPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ArtworkPredicateKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(&a4[*(int *)(v8 + 44)], a1, a3);
  *(void *)a4 = a2;
  return result;
}

uint64_t type metadata accessor for ArtworkPredicateKeyPath()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ArtworkPredicateKeyPath.keyPath.getter()
{
  return swift_retain();
}

uint64_t ArtworkPredicateKeyPath.root.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t ArtworkPredicateKeyPath.evaluate()(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unsigned int v7 = (char *)&v9 - v6;
  (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 16))(v2, v1, v5);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, AssociatedTypeWitness);
}

uint64_t sub_24EA6B490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_24EA6B498()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24EA6B534(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_24EA6B638(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_24EA6B6AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_retain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_24EA6B73C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_24EA6B7CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_24EA6B83C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_24EA6B8C4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_24EA6BA64(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x24EA6BCC0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          unsigned int v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

BOOL static ArtworkPredicateError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArtworkPredicateError.hash(into:)()
{
  return sub_24EA94B80();
}

uint64_t ArtworkPredicateError.hashValue.getter()
{
  return sub_24EA94BB0();
}

unint64_t sub_24EA6BD74()
{
  unint64_t result = qword_269929C38;
  if (!qword_269929C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929C38);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ArtworkPredicateError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArtworkPredicateError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA6BF24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkPredicateError()
{
  return &type metadata for ArtworkPredicateError;
}

uint64_t sub_24EA6BF5C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 6778986;
  }
  else {
    uint64_t v2 = 6778480;
  }
  if (a2) {
    uint64_t v3 = 6778986;
  }
  else {
    uint64_t v3 = 6778480;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_24EA94AE0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_24EA6BFC8(char a1, char a2)
{
  if (*(void *)&aPhone_2[8 * a1] == *(void *)&aPhone_2[8 * a2] && qword_24EA98C18[a1] == qword_24EA98C18[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24EA94AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_24EA6C050(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x800000024EA9A820;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000012;
  switch(v4)
  {
    case 1:
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      goto LABEL_5;
    case 3:
      unint64_t v3 = 0xEF6C61757145724FLL;
LABEL_5:
      unint64_t v5 = 0x6E6168547373656CLL;
      break;
    default:
      unint64_t v3 = 0xEB000000006E6168;
      unint64_t v5 = 0x5472657461657267;
      break;
  }
  unint64_t v6 = 0x800000024EA9A820;
  switch(a2)
  {
    case 1:
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      goto LABEL_10;
    case 3:
      unint64_t v6 = 0xEF6C61757145724FLL;
LABEL_10:
      unint64_t v2 = 0x6E6168547373656CLL;
      break;
    default:
      unint64_t v6 = 0xEB000000006E6168;
      unint64_t v2 = 0x5472657461657267;
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24EA94AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_24EA6C1D0()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA6C234()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA6C318()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA6C3F8()
{
  return sub_24EA94BB0();
}

FitnessAsset::ComparisonOperator_optional __swiftcall ComparisonOperator.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_24EA949E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t ComparisonOperator.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
    case 3:
      unint64_t result = 0x6E6168547373656CLL;
      break;
    default:
      unint64_t result = 0x5472657461657267;
      break;
  }
  return result;
}

uint64_t sub_24EA6C54C(unsigned __int8 *a1, char *a2)
{
  return sub_24EA6C050(*a1, *a2);
}

FitnessAsset::ComparisonOperator_optional sub_24EA6C558(Swift::String *a1)
{
  return ComparisonOperator.init(rawValue:)(*a1);
}

unint64_t sub_24EA6C564@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ComparisonOperator.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24EA6C58C()
{
  return sub_24EA94660();
}

uint64_t sub_24EA6C5EC()
{
  return sub_24EA94650();
}

unint64_t sub_24EA6C640()
{
  unint64_t result = qword_269929C40;
  if (!qword_269929C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929C40);
  }
  return result;
}

uint64_t sub_24EA6C694()
{
  return sub_24EA6C234();
}

uint64_t sub_24EA6C69C()
{
  return sub_24EA34244();
}

uint64_t sub_24EA6C6A4()
{
  return sub_24EA6C318();
}

unsigned char *storeEnumTagSinglePayload for ComparisonOperator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA6C778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonOperator()
{
  return &type metadata for ComparisonOperator;
}

unint64_t sub_24EA6C7B0()
{
  unint64_t result = qword_269929C48[0];
  if (!qword_269929C48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269929C48);
  }
  return result;
}

uint64_t ArtworkPredicateValue.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t _s12FitnessAsset21ArtworkPredicateValueV5valuexvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_24EA6C87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_24EA6C884()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24EA6C914(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_24EA6C9CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24EA6C9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24EA6CA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24EA6CA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24EA6CAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24EA6CB38(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_24EA6CC94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24EA6CEACLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for ArtworkPredicateValue()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of ArtworkPredicateExpression.evaluate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArtworkPredicateInputProtocol.dynamicTypeSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ArtworkPredicateInputProtocol.gridSizeClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ArtworkPredicateInputProtocol.horizontalSizeClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ArtworkPredicateInputProtocol.platform.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ArtworkPredicateInputProtocol.verticalSizeClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ArtworkPredicateExpressible.makePredicateExpression<A>(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t ArtworkPredicateLogicalOperation.lhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA472A8(v1, a1);
}

uint64_t ArtworkPredicateLogicalOperation.rhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24EA472A8(v1 + 40, a1);
}

uint64_t ArtworkPredicateLogicalOperation.logicalOperator.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

Swift::Bool __swiftcall ArtworkPredicateLogicalOperation.evaluate()()
{
  uint64_t v1 = (void *)v0;
  char v2 = *(unsigned char *)(v0 + 80);
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  if ((v2 & 1) == 0)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 16))(&v15, v3, v4);
    int v7 = v15;
    sub_24EA6D0C0((uint64_t)v1, (uint64_t)v11 + 1);
    if (v7 != 1)
    {
      char v6 = 0;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 16))(&v15, v3, v4);
  char v5 = v15;
  sub_24EA6D0C0((uint64_t)v1, (uint64_t)v11 + 1);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    uint64_t v8 = v13;
    uint64_t v9 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 16))(v11, v8, v9);
    char v6 = v11[0];
    goto LABEL_7;
  }
  char v6 = 1;
LABEL_7:
  sub_24EA6D0F8((uint64_t)v11 + 1);
  return v6;
}

uint64_t sub_24EA6D0C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24EA6D0F8(uint64_t a1)
{
  return a1;
}

BOOL sub_24EA6D128@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = ArtworkPredicateLogicalOperation.evaluate()();
  *a1 = result;
  return result;
}

uint64_t destroy for ArtworkPredicateLogicalOperation(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for ArtworkPredicateLogicalOperation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for ArtworkPredicateLogicalOperation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ArtworkPredicateLogicalOperation(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkPredicateLogicalOperation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkPredicateLogicalOperation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkPredicateLogicalOperation()
{
  return &type metadata for ArtworkPredicateLogicalOperation;
}

uint64_t sub_24EA6D3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for ArtworkPredicateEquality();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 60), a2, a4);
}

uint64_t ArtworkPredicateEquality.lhs.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ArtworkPredicateEquality.rhs.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

Swift::Bool __swiftcall ArtworkPredicateEquality.evaluate()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  int v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x270FA5388](v8);
  int v11 = (char *)&v15 - v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 16))(v3, v2, v9);
  (*(void (**)(void))(*(void *)(v1 + 40) + 16))(*(void *)(v1 + 24));
  char v12 = sub_24EA945D0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, AssociatedTypeWitness);
  v13(v11, AssociatedTypeWitness);
  return v12 & 1;
}

BOOL sub_24EA6D684@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = ArtworkPredicateEquality.evaluate()();
  *a1 = result;
  return result;
}

uint64_t sub_24EA6D6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24EA6D6B8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24EA6D788(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_24EA6D8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24EA6D98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24EA6DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24EA6DADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_24EA6DB84(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_24EA6DD7C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x24EA6E048);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          unint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ArtworkPredicateEquality()
{
  return swift_getGenericMetadata();
}

void __swiftcall ArtworkPredicateInput.init(dynamicTypeSize:gridSizeClass:horizontalSizeClass:platform:verticalSizeClass:)(FitnessAsset::ArtworkPredicateInput *__return_ptr retstr, Swift::Int dynamicTypeSize, Swift::Int gridSizeClass, Swift::String horizontalSizeClass, FitnessAsset::AssetPlatform platform, Swift::String verticalSizeClass)
{
  retstr->dynamicTypeSize = dynamicTypeSize;
  retstr->gridSizeClass = gridSizeClass;
  retstr->horizontalSizeClass = horizontalSizeClass;
  retstr->platform = platform;
  retstr->verticalSizeClass = verticalSizeClass;
}

uint64_t ArtworkPredicateInput.dynamicTypeSize.getter()
{
  return *(void *)v0;
}

uint64_t ArtworkPredicateInput.gridSizeClass.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ArtworkPredicateInput.horizontalSizeClass.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkPredicateInput.platform.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ArtworkPredicateInput.verticalSizeClass.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_24EA6E114(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657A695364697267;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0x5463696D616E7964;
      break;
  }
  return result;
}

unint64_t sub_24EA6E1E8()
{
  return sub_24EA6E114(*v0);
}

uint64_t sub_24EA6E1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA6F284(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA6E218(uint64_t a1)
{
  unint64_t v2 = sub_24EA6E534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA6E254(uint64_t a1)
{
  unint64_t v2 = sub_24EA6E534();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA6E290()
{
  return *(void *)v0;
}

uint64_t sub_24EA6E298()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_24EA6E2A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24EA6E2D0()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_24EA6E2D8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArtworkPredicateInput.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929D50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v16 = v8;
  uint64_t v14 = *(void *)(v1 + 24);
  int v13 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  v12[0] = *(void *)(v1 + 48);
  v12[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA6E534();
  sub_24EA94C00();
  char v22 = 0;
  sub_24EA94AA0();
  if (!v2)
  {
    char v10 = v13;
    char v21 = 1;
    sub_24EA94AA0();
    char v20 = 2;
    sub_24EA94A90();
    char v19 = v10;
    char v18 = 3;
    sub_24EA6E588();
    sub_24EA94AB0();
    char v17 = 4;
    sub_24EA94A90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EA6E534()
{
  unint64_t result = qword_269929D58;
  if (!qword_269929D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D58);
  }
  return result;
}

unint64_t sub_24EA6E588()
{
  unint64_t result = qword_269929D60;
  if (!qword_269929D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D60);
  }
  return result;
}

uint64_t ArtworkPredicateInput.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929D68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA6E534();
  sub_24EA94BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_24EA94A30();
  char v28 = 1;
  uint64_t v10 = sub_24EA94A30();
  char v27 = 2;
  uint64_t v11 = sub_24EA94A20();
  uint64_t v13 = v12;
  uint64_t v22 = v11;
  char v25 = 3;
  sub_24EA6E894();
  swift_bridgeObjectRetain();
  uint64_t v23 = v13;
  sub_24EA94A40();
  int v21 = v26;
  char v24 = 4;
  uint64_t v14 = sub_24EA94A20();
  uint64_t v17 = v16;
  char v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v14;
  v18(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  uint64_t v19 = v23;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v17;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24EA6E894()
{
  unint64_t result = qword_269929D70;
  if (!qword_269929D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D70);
  }
  return result;
}

uint64_t sub_24EA6E8E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkPredicateInput.init(from:)(a1, a2);
}

uint64_t sub_24EA6E900(void *a1)
{
  return ArtworkPredicateInput.encode(to:)(a1);
}

uint64_t ArtworkPredicateInput.hash(into:)()
{
  sub_24EA94B80();
  sub_24EA94B80();
  swift_bridgeObjectRetain();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EA94610();
  return swift_bridgeObjectRelease();
}

uint64_t ArtworkPredicateInput.hashValue.getter()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA6EAE0()
{
  return sub_24EA94BB0();
}

uint64_t _s12FitnessAsset21ArtworkPredicateInputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    char v4 = *(unsigned char *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    char v7 = *(unsigned char *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
      goto LABEL_6;
    }
    char v10 = sub_24EA94AE0();
    uint64_t result = 0;
    if (v10)
    {
LABEL_6:
      if (sub_24EA6BFC8(v4, v7))
      {
        if (v5 == v8 && v6 == v9)
        {
          return 1;
        }
        else
        {
          return sub_24EA94AE0();
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_24EA6ECC0(void *a1)
{
  a1[1] = sub_24EA6ECF8();
  a1[2] = sub_24EA6ED4C();
  unint64_t result = sub_24EA6EDA0();
  a1[3] = result;
  return result;
}

unint64_t sub_24EA6ECF8()
{
  unint64_t result = qword_269929D78;
  if (!qword_269929D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D78);
  }
  return result;
}

unint64_t sub_24EA6ED4C()
{
  unint64_t result = qword_269929D80;
  if (!qword_269929D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D80);
  }
  return result;
}

unint64_t sub_24EA6EDA0()
{
  unint64_t result = qword_269929D88;
  if (!qword_269929D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D88);
  }
  return result;
}

unint64_t sub_24EA6EDF8()
{
  unint64_t result = qword_269929D90;
  if (!qword_269929D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D90);
  }
  return result;
}

uint64_t destroy for ArtworkPredicateInput()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArtworkPredicateInput(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArtworkPredicateInput(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ArtworkPredicateInput(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkPredicateInput(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkPredicateInput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkPredicateInput()
{
  return &type metadata for ArtworkPredicateInput;
}

unsigned char *storeEnumTagSinglePayload for ArtworkPredicateInput.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA6F144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkPredicateInput.CodingKeys()
{
  return &type metadata for ArtworkPredicateInput.CodingKeys;
}

unint64_t sub_24EA6F180()
{
  unint64_t result = qword_269929D98;
  if (!qword_269929D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929D98);
  }
  return result;
}

unint64_t sub_24EA6F1D8()
{
  unint64_t result = qword_269929DA0;
  if (!qword_269929DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929DA0);
  }
  return result;
}

unint64_t sub_24EA6F230()
{
  unint64_t result = qword_269929DA8;
  if (!qword_269929DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929DA8);
  }
  return result;
}

uint64_t sub_24EA6F284(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x5463696D616E7964 && a2 == 0xEF657A6953657079;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A695364697267 && a2 == 0xED00007373616C43 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EA9AC70 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024EA9AC90)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t MonogramLoadState.hash(into:)()
{
  uint64_t v1 = sub_24EA93E40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for MonogramLoadState();
  MEMORY[0x270FA5388](State - 8);
  char v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA3CAC4(v0, (uint64_t)v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 2, v11)) {
    return sub_24EA94B80();
  }
  uint64_t v12 = &v10[*(int *)(v11 + 48)];
  sub_24EA3AB28((uint64_t)v10, (uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v12, v1);
  sub_24EA94B80();
  sub_24EA72830(&qword_269929DB0, (void (*)(uint64_t))type metadata accessor for Monogram);
  sub_24EA70D94();
  sub_24EA94BD0();
  sub_24EA72830(qword_269928F20, MEMORY[0x263F07490]);
  sub_24EA94580();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_24EA21258((uint64_t)v7, &qword_26B1CFF70);
}

uint64_t sub_24EA6F774(char a1)
{
  return *(void *)&aIdle_1[8 * a1];
}

uint64_t sub_24EA6F794(char a1)
{
  if (a1) {
    return 0x637465467473616CLL;
  }
  else {
    return 12383;
  }
}

uint64_t sub_24EA6F7C8()
{
  return sub_24EA6F774(*v0);
}

uint64_t sub_24EA6F7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA72614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA6F7F8(uint64_t a1)
{
  unint64_t v2 = sub_24EA70DE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA6F834(uint64_t a1)
{
  unint64_t v2 = sub_24EA70DE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA6F870()
{
  return sub_24EA6F794(*v0);
}

uint64_t sub_24EA6F878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA7274C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA6F8A0(uint64_t a1)
{
  unint64_t v2 = sub_24EA70E3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA6F8DC(uint64_t a1)
{
  unint64_t v2 = sub_24EA70E3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA6F918(uint64_t a1)
{
  unint64_t v2 = sub_24EA70E90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA6F954(uint64_t a1)
{
  unint64_t v2 = sub_24EA70E90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA6F990(uint64_t a1)
{
  unint64_t v2 = sub_24EA70EE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA6F9CC(uint64_t a1)
{
  unint64_t v2 = sub_24EA70EE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MonogramLoadState.encode(to:)(void *a1)
{
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929DC0);
  uint64_t v31 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v34 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24EA93E40();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  int64_t v38 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  MEMORY[0x270FA5388](v32);
  uint64_t v37 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929DC8);
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929DD0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for MonogramLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929DD8);
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA70DE8();
  sub_24EA94C00();
  sub_24EA3CAC4(v42, (uint64_t)v13);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v13, 2, v17);
  if (v18)
  {
    if (v18 == 1)
    {
      char v43 = 0;
      sub_24EA70EE4();
      uint64_t v19 = v40;
      sub_24EA94A70();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    }
    else
    {
      char v44 = 1;
      sub_24EA70E90();
      uint64_t v19 = v40;
      sub_24EA94A70();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v16, v19);
  }
  else
  {
    uint64_t v20 = v31;
    int v21 = &v13[*(int *)(v17 + 48)];
    sub_24EA3AB28((uint64_t)v13, v37);
    uint64_t v22 = v33;
    uint64_t v23 = v35;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v38, v21, v35);
    char v47 = 2;
    sub_24EA70E3C();
    char v24 = v34;
    uint64_t v25 = v40;
    sub_24EA94A70();
    char v46 = 0;
    sub_24EA70F38(&qword_269929468);
    uint64_t v26 = v36;
    uint64_t v27 = v41;
    sub_24EA94AB0();
    if (!v27)
    {
      char v45 = 1;
      sub_24EA72830(&qword_269928F00, MEMORY[0x263F07490]);
      sub_24EA94AB0();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v26);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v38, v23);
    sub_24EA21258(v37, &qword_26B1CFF70);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v16, v25);
  }
}

uint64_t MonogramLoadState.hashValue.getter()
{
  return sub_24EA94BB0();
}

uint64_t MonogramLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929E00);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929E08);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929E10);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  uint64_t v43 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929E18);
  uint64_t v49 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for MonogramLoadState();
  MEMORY[0x270FA5388](State);
  int v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  int v21 = (char *)&v40 - v20;
  uint64_t v22 = a1[3];
  uint64_t v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_24EA70DE8();
  uint64_t v23 = v53;
  sub_24EA94BF0();
  if (v23) {
    goto LABEL_9;
  }
  uint64_t v24 = State;
  uint64_t v41 = v18;
  uint64_t v25 = v50;
  uint64_t v26 = v51;
  uint64_t v27 = sub_24EA94A50();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v53 = v27;
    uint64_t v29 = sub_24EA94910();
    swift_allocError();
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269928F08);
    uint64_t *v31 = v24;
    sub_24EA94A00();
    sub_24EA94900();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v13);
LABEL_9:
    uint64_t v34 = (uint64_t)v52;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  uint64_t v28 = v49;
  if (*(unsigned char *)(v27 + 32))
  {
    if (*(unsigned char *)(v27 + 32) == 1)
    {
      char v55 = 1;
      sub_24EA70E90();
      sub_24EA949F0();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v13);
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v21, 2, 2, v36);
    }
    else
    {
      uint64_t v53 = v27;
      char v58 = 2;
      sub_24EA70E3C();
      sub_24EA949F0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
      char v57 = 0;
      sub_24EA70F38(&qword_2699294B8);
      uint64_t v32 = v46;
      uint64_t v33 = v26;
      sub_24EA94A40();
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
      uint64_t v39 = (uint64_t)v41;
      sub_24EA93E40();
      uint64_t v50 = (char *)v13;
      char v56 = 1;
      sub_24EA72830(&qword_269928F18, MEMORY[0x263F07490]);
      sub_24EA94A40();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v28 + 8))(v15, v50);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v45 - 8) + 56))(v39, 0, 2);
      sub_24EA71018(v39, (uint64_t)v21);
    }
  }
  else
  {
    char v54 = 0;
    sub_24EA70EE4();
    sub_24EA949F0();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v13);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v21, 1, 2, v37);
  }
  uint64_t v38 = (uint64_t)v52;
  sub_24EA71018((uint64_t)v21, v48);
  uint64_t v34 = v38;
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

uint64_t sub_24EA70818@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MonogramLoadState.init(from:)(a1, a2);
}

uint64_t sub_24EA70830(void *a1)
{
  return MonogramLoadState.encode(to:)(a1);
}

uint64_t sub_24EA70848()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA7088C()
{
  return sub_24EA94BB0();
}

uint64_t _s12FitnessAsset13MonogramStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA93E40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v45 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for MonogramLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC98);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (uint64_t)&v19[*(int *)(v20 + 56)];
  sub_24EA3CAC4(a1, (uint64_t)v19);
  sub_24EA3CAC4(a2, v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  int v24 = v23(v19, 2, v22);
  if (!v24)
  {
    uint64_t v41 = v13;
    uint64_t v42 = v7;
    uint64_t v43 = v10;
    uint64_t v25 = v45;
    sub_24EA3CAC4((uint64_t)v19, (uint64_t)v16);
    uint64_t v26 = *(int *)(v22 + 48);
    uint64_t v27 = &v16[v26];
    if (!v23((char *)v21, 2, v22))
    {
      uint64_t v30 = (char *)(v21 + v26);
      uint64_t v31 = (uint64_t)v41;
      sub_24EA3AB28(v21, (uint64_t)v41);
      uint64_t v32 = v25;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      uint64_t v34 = v44;
      v33(v43, v27, v44);
      uint64_t v35 = v42;
      v33(v42, v30, v34);
      uint64_t v36 = v32;
      type metadata accessor for Monogram();
      sub_24EA72830(&qword_269929E78, (void (*)(uint64_t))type metadata accessor for Monogram);
      sub_24EA3F310();
      sub_24EA2BD9C();
      uint64_t v37 = v43;
      LOBYTE(v30) = sub_24EA94BE0();
      sub_24EA21258((uint64_t)v16, &qword_26B1CFF70);
      if (v30)
      {
        char v28 = sub_24EA93E20();
        uint64_t v38 = *(void (**)(char *, uint64_t))(v36 + 8);
        v38(v35, v34);
        v38(v37, v34);
        sub_24EA21258(v31, &qword_26B1CFF70);
        sub_24EA72878((uint64_t)v19);
        return v28 & 1;
      }
      uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
      v39(v35, v34);
      v39(v37, v34);
      sub_24EA21258(v31, &qword_26B1CFF70);
      sub_24EA72878((uint64_t)v19);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(&v16[v26], v44);
    sub_24EA21258((uint64_t)v16, &qword_26B1CFF70);
    goto LABEL_9;
  }
  if (v24 != 1)
  {
    if (v23((char *)v21, 2, v22) == 2) {
      goto LABEL_8;
    }
LABEL_9:
    sub_24EA21258((uint64_t)v19, &qword_26B1CFC98);
LABEL_10:
    char v28 = 0;
    return v28 & 1;
  }
  if (v23((char *)v21, 2, v22) != 1) {
    goto LABEL_9;
  }
LABEL_8:
  sub_24EA72878((uint64_t)v19);
  char v28 = 1;
  return v28 & 1;
}

uint64_t type metadata accessor for MonogramLoadState()
{
  uint64_t result = qword_26B1CF2E0;
  if (!qword_26B1CF2E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EA70D94()
{
  unint64_t result = qword_269929DB8;
  if (!qword_269929DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929DB8);
  }
  return result;
}

unint64_t sub_24EA70DE8()
{
  unint64_t result = qword_269929DE0;
  if (!qword_269929DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929DE0);
  }
  return result;
}

unint64_t sub_24EA70E3C()
{
  unint64_t result = qword_269929DE8;
  if (!qword_269929DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929DE8);
  }
  return result;
}

unint64_t sub_24EA70E90()
{
  unint64_t result = qword_269929DF0;
  if (!qword_269929DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929DF0);
  }
  return result;
}

unint64_t sub_24EA70EE4()
{
  unint64_t result = qword_269929DF8;
  if (!qword_269929DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929DF8);
  }
  return result;
}

uint64_t sub_24EA70F38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFF70);
    sub_24EA72830(&qword_269929470, (void (*)(uint64_t))type metadata accessor for Monogram);
    sub_24EA72830(&qword_269929478, (void (*)(uint64_t))type metadata accessor for Monogram);
    sub_24EA3AC28();
    sub_24EA3AC7C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA71018(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for MonogramLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t sub_24EA7107C()
{
  return sub_24EA72830(&qword_269929E20, (void (*)(uint64_t))type metadata accessor for MonogramLoadState);
}

uint64_t *initializeBufferWithCopyOfBuffer for MonogramLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v21 = (char *)a1 + v12;
        uint64_t v13 = (char *)a2 + v12;
        uint64_t v14 = sub_24EA93DA0();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v21, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v16 = *(int *)(v7 + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_24EA93E40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

void *initializeWithCopy for MonogramLoadState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v19 = (char *)a1 + v10;
      uint64_t v11 = (char *)a2 + v10;
      uint64_t v12 = sub_24EA93DA0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v19, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v14 = *(int *)(v6 + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_24EA93E40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for MonogramLoadState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v13 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v31 = (char *)a1 + v13;
        uint64_t v14 = (char *)a2 + v13;
        uint64_t v15 = sub_24EA93DA0();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v31, v14, v15);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v17 = *(int *)(v6 + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_24EA93E40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_24EA21258((uint64_t)a1, (uint64_t *)&unk_26B1CFF80);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_24EA21258((uint64_t)a1, &qword_26B1CFF70);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v21 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_24EA93DA0();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v26 = *(int *)(v6 + 48);
  uint64_t v27 = (char *)a1 + v26;
  char v28 = (char *)a2 + v26;
  uint64_t v29 = sub_24EA93E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

_OWORD *initializeWithTake for MonogramLoadState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for Monogram() + 20);
      int v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_24EA93DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v13 = *(int *)(v6 + 48);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_24EA93E40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

_OWORD *assignWithTake for MonogramLoadState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v13 = *(int *)(type metadata accessor for Monogram() + 20);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_24EA93DA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v17 = *(int *)(v6 + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_24EA93E40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_24EA21258((uint64_t)a1, (uint64_t *)&unk_26B1CFF80);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_24EA21258((uint64_t)a1, &qword_26B1CFF70);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF70);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v21 = *(int *)(type metadata accessor for Monogram() + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_24EA93DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v25 = *(int *)(v6 + 48);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_24EA93E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonogramLoadState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA71DC8);
}

uint64_t sub_24EA71DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MonogramLoadState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA71E4C);
}

uint64_t sub_24EA71E4C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_24EA71ED4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_24EA71F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1CFF80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

void sub_24EA71FB4()
{
  sub_24EA3C2E4();
  if (v0 <= 0x3F)
  {
    sub_24EA93E40();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MonogramLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA72148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramLoadState.CodingKeys()
{
  return &type metadata for MonogramLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for MonogramLoadState.IdleCodingKeys()
{
  return &type metadata for MonogramLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for MonogramLoadState.FetchingCodingKeys()
{
  return &type metadata for MonogramLoadState.FetchingCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MonogramLoadState.FetchedCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA7226CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonogramLoadState.FetchedCodingKeys()
{
  return &type metadata for MonogramLoadState.FetchedCodingKeys;
}

unint64_t sub_24EA722A8()
{
  unint64_t result = qword_269929E28;
  if (!qword_269929E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E28);
  }
  return result;
}

unint64_t sub_24EA72300()
{
  unint64_t result = qword_269929E30;
  if (!qword_269929E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E30);
  }
  return result;
}

unint64_t sub_24EA72358()
{
  unint64_t result = qword_269929E38;
  if (!qword_269929E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E38);
  }
  return result;
}

unint64_t sub_24EA723B0()
{
  unint64_t result = qword_269929E40;
  if (!qword_269929E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E40);
  }
  return result;
}

unint64_t sub_24EA72408()
{
  unint64_t result = qword_269929E48;
  if (!qword_269929E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E48);
  }
  return result;
}

unint64_t sub_24EA72460()
{
  unint64_t result = qword_269929E50;
  if (!qword_269929E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E50);
  }
  return result;
}

unint64_t sub_24EA724B8()
{
  unint64_t result = qword_269929E58;
  if (!qword_269929E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E58);
  }
  return result;
}

unint64_t sub_24EA72510()
{
  unint64_t result = qword_269929E60;
  if (!qword_269929E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E60);
  }
  return result;
}

unint64_t sub_24EA72568()
{
  unint64_t result = qword_269929E68;
  if (!qword_269929E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E68);
  }
  return result;
}

unint64_t sub_24EA725C0()
{
  unint64_t result = qword_269929E70;
  if (!qword_269929E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E70);
  }
  return result;
}

uint64_t sub_24EA72614(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EA7274C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x637465467473616CLL && a2 == 0xEB00000000646568)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EA72830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA72878(uint64_t a1)
{
  uint64_t State = type metadata accessor for MonogramLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(State - 8) + 8))(a1, State);
  return a1;
}

uint64_t sub_24EA728D4@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24EA93DE0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ImageAsset();
  sub_24EA72DC8(v4 + *(int *)(v16 + 28), (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_24EA72E30((uint64_t)v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, 1, 1, v12);
  }
  uint64_t v44 = v4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t v49 = sub_24EA93DC0();
  uint64_t v50 = v17;
  sub_24EA46560();
  uint64_t v18 = sub_24EA94860();
  uint64_t v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, 1, 1, v12);
  }
  uint64_t v49 = v18;
  uint64_t v50 = v20;
  uint64_t v47 = 8222587;
  unint64_t v48 = 0xE300000000000000;
  double v22 = a2 * a4;
  if ((~COERCE__INT64(a2 * a4) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v43 = a1;
  uint64_t v45 = (uint64_t)v22;
  uint64_t v45 = sub_24EA94AD0();
  unint64_t v46 = v23;
  uint64_t v24 = sub_24EA94850();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v49 = v24;
  uint64_t v50 = v26;
  uint64_t v47 = 8218747;
  unint64_t v48 = 0xE300000000000000;
  double v27 = a3 * a4;
  if ((~COERCE__INT64(a3 * a4) & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v45 = (uint64_t)v27;
  uint64_t v45 = sub_24EA94AD0();
  unint64_t v46 = v28;
  uint64_t v29 = sub_24EA94850();
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v29;
  uint64_t v50 = v31;
  uint64_t v47 = 8217467;
  unint64_t v48 = 0xE300000000000000;
  uint64_t v32 = *(int *)(v16 + 20);
  uint64_t v42 = v16;
  uint64_t v33 = v44;
  uint64_t v34 = (uint64_t *)(v44 + v32);
  uint64_t v36 = *v34;
  unint64_t v35 = v34[1];
  uint64_t v45 = v36;
  unint64_t v46 = v35;
  uint64_t v37 = sub_24EA94850();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  uint64_t v49 = v37;
  uint64_t v50 = v39;
  uint64_t v47 = 8218235;
  unint64_t v48 = 0xE300000000000000;
  if (*(unsigned char *)(v33 + *(int *)(v42 + 24))) {
    uint64_t v40 = 6778986;
  }
  else {
    uint64_t v40 = 6778480;
  }
  uint64_t v45 = v40;
  unint64_t v46 = 0xE300000000000000;
  sub_24EA94850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24EA93DD0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_24EA72DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA72E30(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24EA72E90(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x616D496863746566;
      break;
    case 3:
      unint64_t result = 0x646564616F6CLL;
      break;
    case 4:
      unint64_t result = 0x6570704177656976;
      break;
    case 5:
      unint64_t result = 0x657A695377656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EA72F84(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 0x726F727265;
  }
}

uint64_t sub_24EA72FB8(uint64_t a1)
{
  unint64_t v2 = sub_24EA741E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA72FF4(uint64_t a1)
{
  unint64_t v2 = sub_24EA741E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EA73030()
{
  return sub_24EA72E90(*v0);
}

uint64_t sub_24EA73038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA788F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EA73060(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24EA7306C(uint64_t a1)
{
  unint64_t v2 = sub_24EA73F8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA730A8(uint64_t a1)
{
  unint64_t v2 = sub_24EA73F8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA730E4(uint64_t a1)
{
  unint64_t v2 = sub_24EA74140();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA73120(uint64_t a1)
{
  unint64_t v2 = sub_24EA74140();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA7315C()
{
  return sub_24EA72F84(*v0);
}

uint64_t sub_24EA73164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA78B90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA7318C(uint64_t a1)
{
  unint64_t v2 = sub_24EA74194();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA731C8(uint64_t a1)
{
  unint64_t v2 = sub_24EA74194();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA73204(uint64_t a1)
{
  unint64_t v2 = sub_24EA740EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA73240(uint64_t a1)
{
  unint64_t v2 = sub_24EA740EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA7327C(uint64_t a1)
{
  unint64_t v2 = sub_24EA74098();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA732B8(uint64_t a1)
{
  unint64_t v2 = sub_24EA74098();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EA732F4(uint64_t a1)
{
  unint64_t v2 = sub_24EA74044();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA73330(uint64_t a1)
{
  unint64_t v2 = sub_24EA74044();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAssetAction.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF48);
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v72 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF40);
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v67 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF38);
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v74 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v64);
  uint64_t v73 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF18);
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  MEMORY[0x270FA5388](v9);
  int v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v61);
  uint64_t v66 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF28);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF20);
  uint64_t v60 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF30);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v81 = v20;
  uint64_t v82 = v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA73F8C();
  char v80 = v23;
  sub_24EA94C00();
  sub_24EA73FE0(v83, (uint64_t)v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v29 = *v19;
      uint64_t v30 = *((void *)v19 + 1);
      uint64_t v31 = *((void *)v19 + 2);
      LOBYTE(v84) = 1;
      sub_24EA74194();
      uint64_t v33 = v80;
      uint64_t v32 = v81;
      sub_24EA94A70();
      LOBYTE(v84) = v29;
      char v86 = 0;
      sub_24EA31514();
      uint64_t v34 = v63;
      uint64_t v35 = v79;
      sub_24EA94AB0();
      if (!v35)
      {
        uint64_t v84 = v30;
        uint64_t v85 = v31;
        char v86 = 1;
        type metadata accessor for CGSize();
        sub_24EA762BC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v13, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v33, v32);
    case 2u:
      uint64_t v36 = &v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48)];
      uint64_t v37 = *(void *)v36;
      uint64_t v38 = *((void *)v36 + 1);
      uint64_t v39 = v66;
      sub_24EA752D8((uint64_t)v19, v66, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      LOBYTE(v84) = 2;
      sub_24EA74140();
      uint64_t v40 = v65;
      uint64_t v42 = v80;
      uint64_t v41 = v81;
      sub_24EA94A70();
      LOBYTE(v84) = 0;
      sub_24EA762BC(&qword_26B1CFA98, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v43 = v69;
      uint64_t v44 = v79;
      sub_24EA94AB0();
      if (!v44)
      {
        uint64_t v84 = v37;
        uint64_t v85 = v38;
        char v86 = 1;
        type metadata accessor for CGSize();
        sub_24EA762BC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v43);
      sub_24EA77344(v39, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      goto LABEL_15;
    case 3u:
      uint64_t v45 = &v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48)];
      uint64_t v46 = *(void *)v45;
      uint64_t v47 = *((void *)v45 + 1);
      uint64_t v48 = v73;
      sub_24EA752D8((uint64_t)v19, v73, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      LOBYTE(v84) = 3;
      sub_24EA740EC();
      uint64_t v49 = v74;
      uint64_t v42 = v80;
      uint64_t v41 = v81;
      sub_24EA94A70();
      LOBYTE(v84) = 0;
      sub_24EA762BC(&qword_26B1CFA58, (void (*)(uint64_t))type metadata accessor for FetchedImageAsset);
      uint64_t v51 = v78;
      uint64_t v50 = v79;
      sub_24EA94AB0();
      if (!v50)
      {
        uint64_t v84 = v46;
        uint64_t v85 = v47;
        char v86 = 1;
        type metadata accessor for CGSize();
        sub_24EA762BC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EA94AB0();
      }
      (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v51);
      sub_24EA77344(v48, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      goto LABEL_15;
    case 4u:
      uint64_t v52 = *(void *)v19;
      uint64_t v53 = *((void *)v19 + 1);
      LOBYTE(v84) = 4;
      sub_24EA74098();
      char v54 = v67;
      uint64_t v42 = v80;
      uint64_t v41 = v81;
      sub_24EA94A70();
      uint64_t v84 = v52;
      uint64_t v85 = v53;
      type metadata accessor for CGSize();
      sub_24EA762BC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v55 = v71;
      sub_24EA94AB0();
      uint64_t v56 = v70;
      goto LABEL_14;
    case 5u:
      uint64_t v57 = *(void *)v19;
      uint64_t v58 = *((void *)v19 + 1);
      LOBYTE(v84) = 5;
      sub_24EA74044();
      char v54 = v72;
      uint64_t v42 = v80;
      uint64_t v41 = v81;
      sub_24EA94A70();
      uint64_t v84 = v57;
      uint64_t v85 = v58;
      type metadata accessor for CGSize();
      sub_24EA762BC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v55 = v76;
      sub_24EA94AB0();
      uint64_t v56 = v75;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v55);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v42, v41);
      break;
    default:
      uint64_t v24 = *(void *)v19;
      uint64_t v25 = *((void *)v19 + 1);
      LOBYTE(v84) = 0;
      sub_24EA741E8();
      double v27 = v80;
      uint64_t v26 = v81;
      sub_24EA94A70();
      uint64_t v84 = v24;
      uint64_t v85 = v25;
      type metadata accessor for CGSize();
      sub_24EA762BC(&qword_26B1CFEC8, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94AB0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v14);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v27, v26);
      break;
  }
  return result;
}

uint64_t type metadata accessor for ImageAssetAction()
{
  uint64_t result = qword_26B1CFB90;
  if (!qword_26B1CFB90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EA73F8C()
{
  unint64_t result = qword_26B1CFB28;
  if (!qword_26B1CFB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB28);
  }
  return result;
}

uint64_t sub_24EA73FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageAssetAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EA74044()
{
  unint64_t result = qword_269929E80;
  if (!qword_269929E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E80);
  }
  return result;
}

unint64_t sub_24EA74098()
{
  unint64_t result = qword_26B1CFB58;
  if (!qword_26B1CFB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB58);
  }
  return result;
}

unint64_t sub_24EA740EC()
{
  unint64_t result = qword_26B1CFB40;
  if (!qword_26B1CFB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB40);
  }
  return result;
}

unint64_t sub_24EA74140()
{
  unint64_t result = qword_26B1CFAF0;
  if (!qword_26B1CFAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFAF0);
  }
  return result;
}

unint64_t sub_24EA74194()
{
  unint64_t result = qword_269929E88;
  if (!qword_269929E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E88);
  }
  return result;
}

unint64_t sub_24EA741E8()
{
  unint64_t result = qword_269929E90;
  if (!qword_269929E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929E90);
  }
  return result;
}

uint64_t ImageAssetAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929E98);
  uint64_t v88 = *(void *)(v3 - 8);
  uint64_t v89 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v93 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929EA0);
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v100 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929EA8);
  uint64_t v99 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v95 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929EB0);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  int v94 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929EB8);
  uint64_t v80 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v92 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929EC0);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v91 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929EC8);
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v97 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v101);
  uint64_t v79 = (_OWORD *)((char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v78 = (_OWORD *)((char *)&v72 - v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v72 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v72 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v72 - v23;
  MEMORY[0x270FA5388](v25);
  double v27 = (char *)&v72 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v72 - v29;
  uint64_t v31 = a1[3];
  uint64_t v102 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_24EA73F8C();
  uint64_t v32 = v103;
  sub_24EA94BF0();
  if (v32)
  {
LABEL_18:
    uint64_t v62 = (uint64_t)v102;
    return __swift_destroy_boxed_opaque_existential_1(v62);
  }
  uint64_t v74 = v27;
  uint64_t v73 = v24;
  uint64_t v77 = v21;
  uint64_t v75 = v18;
  uint64_t v33 = v100;
  uint64_t v34 = v101;
  uint64_t v103 = 0;
  uint64_t v36 = v98;
  uint64_t v35 = v99;
  uint64_t v76 = v30;
  uint64_t v37 = v97;
  uint64_t v38 = sub_24EA94A50();
  if (*(void *)(v38 + 16) != 1)
  {
    uint64_t v43 = sub_24EA94910();
    swift_allocError();
    uint64_t v44 = v12;
    uint64_t v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269928F08);
    uint64_t *v46 = v34;
    sub_24EA94A00();
    sub_24EA94900();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v46, *MEMORY[0x263F8DCB0], v43);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v44, v37);
    goto LABEL_18;
  }
  switch(*(unsigned char *)(v38 + 32))
  {
    case 1:
      LOBYTE(v104) = 1;
      sub_24EA74194();
      uint64_t v47 = v92;
      uint64_t v48 = v103;
      sub_24EA949F0();
      if (v48) {
        goto LABEL_17;
      }
      LOBYTE(v104) = 0;
      sub_24EA330AC();
      uint64_t v49 = v36;
      sub_24EA94A40();
      uint64_t v64 = v12;
      char v65 = v106;
      type metadata accessor for CGSize();
      char v105 = 1;
      sub_24EA762BC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      uint64_t v103 = 0;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v47, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v37);
      uint64_t v42 = v73;
      *uint64_t v73 = v65;
      *(_OWORD *)((char *)v42 + 8) = v104;
      goto LABEL_23;
    case 2:
      LOBYTE(v104) = 2;
      sub_24EA74140();
      uint64_t v50 = v94;
      uint64_t v51 = v103;
      sub_24EA949F0();
      if (v51) {
        goto LABEL_17;
      }
      type metadata accessor for ImageAsset();
      LOBYTE(v104) = 0;
      sub_24EA762BC(&qword_269929190, (void (*)(uint64_t))type metadata accessor for ImageAsset);
      uint64_t v52 = v86;
      sub_24EA94A40();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      type metadata accessor for CGSize();
      LOBYTE(v104) = 1;
      sub_24EA762BC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EA94A40();
      uint64_t v66 = v96;
      uint64_t v103 = 0;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v37);
      uint64_t v42 = v77;
      goto LABEL_23;
    case 3:
      uint64_t v53 = v35;
      LOBYTE(v104) = 3;
      sub_24EA740EC();
      uint64_t v54 = v103;
      sub_24EA949F0();
      if (v54) {
        goto LABEL_17;
      }
      type metadata accessor for FetchedImageAsset();
      LOBYTE(v104) = 0;
      sub_24EA762BC(&qword_269929328, (void (*)(uint64_t))type metadata accessor for FetchedImageAsset);
      uint64_t v55 = (uint64_t)v75;
      uint64_t v56 = v87;
      sub_24EA94A40();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      uint64_t v103 = 0;
      type metadata accessor for CGSize();
      LOBYTE(v104) = 1;
      sub_24EA762BC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v67 = v103;
      sub_24EA94A40();
      uint64_t v68 = v96;
      uint64_t v103 = v67;
      if (v67)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v95, v56);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v37);
        sub_24EA77344(v55, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
        uint64_t v62 = (uint64_t)v102;
        return __swift_destroy_boxed_opaque_existential_1(v62);
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v95, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v37);
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = v55;
      goto LABEL_24;
    case 4:
      LOBYTE(v104) = 4;
      sub_24EA74098();
      uint64_t v57 = v103;
      sub_24EA949F0();
      if (v57) {
        goto LABEL_17;
      }
      type metadata accessor for CGSize();
      sub_24EA762BC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v58 = v84;
      sub_24EA94A40();
      uint64_t v103 = 0;
      (*(void (**)(char *, uint64_t))(v83 + 8))(v33, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v12, v37);
      uint64_t v42 = v78;
      *uint64_t v78 = v104;
      goto LABEL_23;
    case 5:
      LOBYTE(v104) = 5;
      sub_24EA74044();
      uint64_t v59 = v93;
      uint64_t v60 = v103;
      sub_24EA949F0();
      if (v60) {
        goto LABEL_17;
      }
      type metadata accessor for CGSize();
      sub_24EA762BC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v61 = v89;
      sub_24EA94A40();
      uint64_t v103 = 0;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v12, v37);
      uint64_t v42 = v79;
      *uint64_t v79 = v104;
      goto LABEL_23;
    default:
      LOBYTE(v104) = 0;
      sub_24EA741E8();
      uint64_t v39 = v91;
      uint64_t v40 = v103;
      sub_24EA949F0();
      if (v40)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v96 + 8))(v12, v37);
        goto LABEL_18;
      }
      type metadata accessor for CGSize();
      sub_24EA762BC(&qword_269929178, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v41 = v82;
      sub_24EA94A40();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v39, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v12, v37);
      uint64_t v103 = 0;
      uint64_t v42 = v74;
      *uint64_t v74 = v104;
LABEL_23:
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = (uint64_t)v42;
LABEL_24:
      uint64_t v70 = (uint64_t)v76;
      sub_24EA752D8(v69, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
      uint64_t v71 = (uint64_t)v102;
      sub_24EA752D8(v70, v90, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v71);
      break;
  }
  return result;
}

uint64_t sub_24EA752D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA75340@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageAssetAction.init(from:)(a1, a2);
}

uint64_t sub_24EA75358(void *a1)
{
  return ImageAssetAction.encode(to:)(a1);
}

uint64_t ImageAssetAction.hash(into:)(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v39 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = (uint64_t)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24EA93DE0();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v38 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = sub_24EA93EB0();
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA73FE0(v1, (uint64_t)v24);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EA94B80();
      goto LABEL_7;
    case 2u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      sub_24EA752D8((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA94B80();
      sub_24EA1E564((uint64_t)v21, (uint64_t)v18, &qword_26B1CFD40);
      uint64_t v25 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v18, 1, v10) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v12, v18, v10);
        sub_24EA94B90();
        sub_24EA762BC(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
      }
      sub_24EA94610();
      sub_24EA94610();
      swift_bridgeObjectRelease();
      sub_24EA1E564((uint64_t)&v21[*(int *)(v19 + 28)], (uint64_t)v9, &qword_26B1CF9E8);
      uint64_t v30 = v43;
      uint64_t v29 = v44;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v9, 1, v44) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v34 = v41;
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v41, v9, v29);
        sub_24EA94B90();
        sub_24EA762BC(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v29);
      }
      sub_24EA34314();
      uint64_t v35 = type metadata accessor for ImageAsset;
      uint64_t v36 = (uint64_t)v21;
      goto LABEL_18;
    case 3u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      uint64_t v26 = v40;
      sub_24EA752D8((uint64_t)v24, v40, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      sub_24EA94B80();
      sub_24EA1E564(v26, (uint64_t)v15, &qword_26B1CFD40);
      uint64_t v27 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v15, 1, v10) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v12, v15, v10);
        sub_24EA94B90();
        sub_24EA762BC(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v10);
      }
      sub_24EA94610();
      sub_24EA94610();
      swift_bridgeObjectRelease();
      uint64_t v31 = v38;
      sub_24EA1E564(v26 + *(int *)(v19 + 28), v38, &qword_26B1CF9E8);
      uint64_t v33 = v43;
      uint64_t v32 = v44;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v31, 1, v44) == 1)
      {
        sub_24EA94B90();
      }
      else
      {
        uint64_t v37 = v41;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v41, v31, v32);
        sub_24EA94B90();
        sub_24EA762BC(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
        sub_24EA94580();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v32);
      }
      sub_24EA34314();
      sub_24EA34314();
      uint64_t v35 = type metadata accessor for FetchedImageAsset;
      uint64_t v36 = v26;
LABEL_18:
      uint64_t result = sub_24EA77344(v36, (uint64_t (*)(void))v35);
      break;
    default:
LABEL_7:
      sub_24EA94B80();
      uint64_t result = sub_24EA34314();
      break;
  }
  return result;
}

uint64_t ImageAssetAction.hashValue.getter()
{
  sub_24EA94B70();
  ImageAssetAction.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA75C74()
{
  sub_24EA94B70();
  ImageAssetAction.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA75CB8()
{
  sub_24EA94B70();
  ImageAssetAction.hash(into:)((uint64_t)v1);
  return sub_24EA94BB0();
}

BOOL _s12FitnessAsset05ImageB6ActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v53 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v53);
  uint64_t v54 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (double *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (double *)((char *)&v53 - v10);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v53 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v53 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (double *)((char *)&v53 - v19);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (double *)((char *)&v53 - v22);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F10);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (double *)&v26[*(int *)(v27 + 56)];
  sub_24EA73FE0(a1, (uint64_t)v26);
  sub_24EA73FE0(v56, (uint64_t)v28);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24EA73FE0((uint64_t)v26, (uint64_t)v20);
      double v39 = v20[1];
      double v38 = v20[2];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_26;
      }
      if (*(unsigned __int8 *)v20 != *(unsigned __int8 *)v28) {
        goto LABEL_19;
      }
      BOOL v40 = v39 == v28[1];
      BOOL v41 = v38 == v28[2];
      goto LABEL_30;
    case 2u:
      sub_24EA73FE0((uint64_t)v26, (uint64_t)v17);
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48);
      double v33 = *(double *)&v17[v31];
      double v32 = *(double *)&v17[v31 + 8];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v49 = type metadata accessor for ImageAsset;
        uint64_t v50 = (uint64_t)v17;
        goto LABEL_25;
      }
      double v35 = *(double *)((char *)v28 + v31);
      double v34 = *(double *)((char *)v28 + v31 + 8);
      uint64_t v36 = v55;
      sub_24EA752D8((uint64_t)v28, v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      char v37 = static ImageAsset.== infix(_:_:)(v17, v36);
      sub_24EA77344(v36, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA77344((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      if ((v37 & 1) == 0) {
        goto LABEL_19;
      }
      goto LABEL_29;
    case 3u:
      sub_24EA73FE0((uint64_t)v26, (uint64_t)v14);
      uint64_t v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48);
      double v33 = *(double *)&v14[v42];
      double v32 = *(double *)&v14[v42 + 8];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        uint64_t v49 = type metadata accessor for FetchedImageAsset;
        uint64_t v50 = (uint64_t)v14;
LABEL_25:
        sub_24EA77344(v50, (uint64_t (*)(void))v49);
LABEL_26:
        sub_24EA78C64((uint64_t)v26);
        return 0;
      }
      double v35 = *(double *)((char *)v28 + v42);
      double v34 = *(double *)((char *)v28 + v42 + 8);
      uint64_t v43 = v54;
      sub_24EA752D8((uint64_t)v28, v54, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      if ((static ImageAsset.== infix(_:_:)(v14, v43) & 1) == 0
        || ((uint64_t v44 = *(int *)(v53 + 20),
             double v45 = *(double *)&v14[v44],
             double v46 = *(double *)&v14[v44 + 8],
             uint64_t v47 = (double *)(v43 + v44),
             v45 == *v47)
          ? (BOOL v48 = v46 == v47[1])
          : (BOOL v48 = 0),
            !v48))
      {
        sub_24EA77344(v43, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
        sub_24EA77344((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
LABEL_19:
        sub_24EA77344((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
        return 0;
      }
      sub_24EA77344(v43, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      sub_24EA77344((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
LABEL_29:
      BOOL v40 = v33 == v35;
      BOOL v41 = v32 == v34;
LABEL_30:
      BOOL v51 = v41 && v40;
      sub_24EA77344((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
      return v51;
    case 4u:
      sub_24EA73FE0((uint64_t)v26, (uint64_t)v11);
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_26;
      }
      double v30 = *v11;
      double v29 = v11[1];
      goto LABEL_22;
    case 5u:
      sub_24EA73FE0((uint64_t)v26, (uint64_t)v8);
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_26;
      }
      double v30 = *v8;
      double v29 = v8[1];
      goto LABEL_22;
    default:
      sub_24EA73FE0((uint64_t)v26, (uint64_t)v23);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_26;
      }
      double v30 = *v23;
      double v29 = v23[1];
LABEL_22:
      BOOL v40 = v30 == *v28;
      BOOL v41 = v29 == v28[1];
      goto LABEL_30;
  }
}

uint64_t sub_24EA76274()
{
  return sub_24EA762BC(&qword_269929ED0, (void (*)(uint64_t))type metadata accessor for ImageAssetAction);
}

uint64_t sub_24EA762BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageAssetAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v12 = sub_24EA93EB0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      uint64_t v27 = (int *)type metadata accessor for ImageAsset();
      uint64_t v28 = v27[5];
      double v29 = (uint64_t *)((char *)a1 + v28);
      double v30 = (uint64_t *)((char *)a2 + v28);
      uint64_t v31 = v30[1];
      void *v29 = *v30;
      v29[1] = v31;
      *((unsigned char *)a1 + v27[6]) = *((unsigned char *)a2 + v27[6]);
      uint64_t v32 = v27[7];
      double v33 = (char *)a1 + v32;
      double v34 = (char *)a2 + v32;
      uint64_t v35 = sub_24EA93DE0();
      uint64_t v36 = *(void *)(v35 - 8);
      char v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      if (v37(v34, 1, v35))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      uint64_t v40 = type metadata accessor for FetchedImageAsset();
      *(_OWORD *)((char *)a1 + *(int *)(v40 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v40 + 20));
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      *(_OWORD *)((char *)a1 + *(int *)(v41 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v41 + 48));
      goto LABEL_20;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_24EA93EB0();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v15 = (int *)type metadata accessor for ImageAsset();
      uint64_t v16 = v15[5];
      uint64_t v17 = (uint64_t *)((char *)a1 + v16);
      uint64_t v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      *((unsigned char *)a1 + v15[6]) = *((unsigned char *)a2 + v15[6]);
      uint64_t v20 = v15[7];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_24EA93DE0();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      *(_OWORD *)((char *)a1 + *(int *)(v39 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v39 + 48));
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for ImageAssetAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3 || result == 2)
  {
    uint64_t v3 = sub_24EA93EB0();
    uint64_t v4 = *(void *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    }
    uint64_t v5 = type metadata accessor for ImageAsset();
    swift_bridgeObjectRelease();
    uint64_t v6 = a1 + *(int *)(v5 + 28);
    uint64_t v7 = sub_24EA93DE0();
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7);
    if (!result)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
      return v8(v6, v7);
    }
  }
  return result;
}

char *initializeWithCopy for ImageAssetAction(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v10 = sub_24EA93EB0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    uint64_t v25 = (int *)type metadata accessor for ImageAsset();
    uint64_t v26 = v25[5];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    a1[v25[6]] = a2[v25[6]];
    uint64_t v30 = v25[7];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = &a2[v30];
    uint64_t v33 = sub_24EA93DE0();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    if (v35(v32, 1, v33))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    uint64_t v38 = type metadata accessor for FetchedImageAsset();
    *(_OWORD *)&a1[*(int *)(v38 + 20)] = *(_OWORD *)&a2[*(int *)(v38 + 20)];
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
    *(_OWORD *)&a1[*(int *)(v39 + 48)] = *(_OWORD *)&a2[*(int *)(v39 + 48)];
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_24EA93EB0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v13 = (int *)type metadata accessor for ImageAsset();
    uint64_t v14 = v13[5];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    a1[v13[6]] = a2[v13[6]];
    uint64_t v18 = v13[7];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_24EA93DE0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
    *(_OWORD *)&a1[*(int *)(v37 + 48)] = *(_OWORD *)&a2[*(int *)(v37 + 48)];
LABEL_18:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for ImageAssetAction(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EA77344((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v10 = sub_24EA93EB0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v24 = (int *)type metadata accessor for ImageAsset();
      uint64_t v25 = v24[5];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      *((void *)v26 + 1) = *((void *)v27 + 1);
      a1[v24[6]] = a2[v24[6]];
      uint64_t v28 = v24[7];
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      uint64_t v31 = sub_24EA93DE0();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      uint64_t v36 = type metadata accessor for FetchedImageAsset();
      *(_OWORD *)&a1[*(int *)(v36 + 20)] = *(_OWORD *)&a2[*(int *)(v36 + 20)];
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      *(_OWORD *)&a1[*(int *)(v37 + 48)] = *(_OWORD *)&a2[*(int *)(v37 + 48)];
      goto LABEL_19;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_24EA93EB0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v13 = (int *)type metadata accessor for ImageAsset();
      uint64_t v14 = v13[5];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = *((void *)v16 + 1);
      a1[v13[6]] = a2[v13[6]];
      uint64_t v17 = v13[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_24EA93DE0();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      *(_OWORD *)&a1[*(int *)(v35 + 48)] = *(_OWORD *)&a2[*(int *)(v35 + 48)];
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24EA77344(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for ImageAssetAction(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v10 = sub_24EA93EB0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    uint64_t v20 = (int *)type metadata accessor for ImageAsset();
    *(_OWORD *)&a1[v20[5]] = *(_OWORD *)&a2[v20[5]];
    a1[v20[6]] = a2[v20[6]];
    uint64_t v21 = v20[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_24EA93DE0();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v28 = type metadata accessor for FetchedImageAsset();
    *(_OWORD *)&a1[*(int *)(v28 + 20)] = *(_OWORD *)&a2[*(int *)(v28 + 20)];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
    *(_OWORD *)&a1[*(int *)(v29 + 48)] = *(_OWORD *)&a2[*(int *)(v29 + 48)];
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_24EA93EB0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v13 = (int *)type metadata accessor for ImageAsset();
    *(_OWORD *)&a1[v13[5]] = *(_OWORD *)&a2[v13[5]];
    a1[v13[6]] = a2[v13[6]];
    uint64_t v14 = v13[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_24EA93DE0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
    *(_OWORD *)&a1[*(int *)(v27 + 48)] = *(_OWORD *)&a2[*(int *)(v27 + 48)];
LABEL_18:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for ImageAssetAction(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EA77344((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v10 = sub_24EA93EB0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v20 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)&a1[v20[5]] = *(_OWORD *)&a2[v20[5]];
      a1[v20[6]] = a2[v20[6]];
      uint64_t v21 = v20[7];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = sub_24EA93DE0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      uint64_t v28 = type metadata accessor for FetchedImageAsset();
      *(_OWORD *)&a1[*(int *)(v28 + 20)] = *(_OWORD *)&a2[*(int *)(v28 + 20)];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38);
      *(_OWORD *)&a1[*(int *)(v29 + 48)] = *(_OWORD *)&a2[*(int *)(v29 + 48)];
      goto LABEL_19;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_24EA93EB0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v13 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)&a1[v13[5]] = *(_OWORD *)&a2[v13[5]];
      a1[v13[6]] = a2[v13[6]];
      uint64_t v14 = v13[7];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_24EA93DE0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0);
      *(_OWORD *)&a1[*(int *)(v27 + 48)] = *(_OWORD *)&a2[*(int *)(v27 + 48)];
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24EA77CF8()
{
  uint64_t v5 = &unk_24EA995D8;
  uint64_t v6 = &unk_24EA995F0;
  uint64_t result = type metadata accessor for ImageAsset();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v4;
    uint64_t result = type metadata accessor for FetchedImageAsset();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v8 = &v3;
      uint64_t v9 = &unk_24EA995D8;
      uint64_t v10 = &unk_24EA995D8;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ImageAssetAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ImageAssetAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA77F60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAssetAction.CodingKeys()
{
  return &type metadata for ImageAssetAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAssetAction.CachedImageAssetLoadFailedCodingKeys()
{
  return &type metadata for ImageAssetAction.CachedImageAssetLoadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for ImageAssetAction.ImageAssetLoadFailedCodingKeys()
{
  return &type metadata for ImageAssetAction.ImageAssetLoadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for ImageAssetAction.FetchImageAssetCodingKeys()
{
  return &type metadata for ImageAssetAction.FetchImageAssetCodingKeys;
}

unsigned char *_s12FitnessAsset16ImageAssetActionO30ImageAssetLoadFailedCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA780A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAssetAction.LoadedCodingKeys()
{
  return &type metadata for ImageAssetAction.LoadedCodingKeys;
}

ValueMetadata *type metadata accessor for ImageAssetAction.ViewAppearedCodingKeys()
{
  return &type metadata for ImageAssetAction.ViewAppearedCodingKeys;
}

unsigned char *_s12FitnessAsset16ImageAssetActionO36CachedImageAssetLoadFailedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EA78184);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAssetAction.ViewSizeChangedCodingKeys()
{
  return &type metadata for ImageAssetAction.ViewSizeChangedCodingKeys;
}

unint64_t sub_24EA781C0()
{
  unint64_t result = qword_269929ED8;
  if (!qword_269929ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929ED8);
  }
  return result;
}

unint64_t sub_24EA78218()
{
  unint64_t result = qword_269929EE0;
  if (!qword_269929EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929EE0);
  }
  return result;
}

unint64_t sub_24EA78270()
{
  unint64_t result = qword_269929EE8;
  if (!qword_269929EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929EE8);
  }
  return result;
}

unint64_t sub_24EA782C8()
{
  unint64_t result = qword_269929EF0;
  if (!qword_269929EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929EF0);
  }
  return result;
}

unint64_t sub_24EA78320()
{
  unint64_t result = qword_269929EF8;
  if (!qword_269929EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929EF8);
  }
  return result;
}

unint64_t sub_24EA78378()
{
  unint64_t result = qword_269929F00;
  if (!qword_269929F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929F00);
  }
  return result;
}

unint64_t sub_24EA783D0()
{
  unint64_t result = qword_269929F08;
  if (!qword_269929F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929F08);
  }
  return result;
}

unint64_t sub_24EA78428()
{
  unint64_t result = qword_26B1CFB10;
  if (!qword_26B1CFB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB10);
  }
  return result;
}

unint64_t sub_24EA78480()
{
  unint64_t result = qword_26B1CFB08;
  if (!qword_26B1CFB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB08);
  }
  return result;
}

unint64_t sub_24EA784D8()
{
  unint64_t result = qword_26B1CFB20;
  if (!qword_26B1CFB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB20);
  }
  return result;
}

unint64_t sub_24EA78530()
{
  unint64_t result = qword_26B1CFB18;
  if (!qword_26B1CFB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB18);
  }
  return result;
}

unint64_t sub_24EA78588()
{
  unint64_t result = qword_26B1CFB00;
  if (!qword_26B1CFB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB00);
  }
  return result;
}

unint64_t sub_24EA785E0()
{
  unint64_t result = qword_26B1CFAF8;
  if (!qword_26B1CFAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFAF8);
  }
  return result;
}

unint64_t sub_24EA78638()
{
  unint64_t result = qword_26B1CFB50;
  if (!qword_26B1CFB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB50);
  }
  return result;
}

unint64_t sub_24EA78690()
{
  unint64_t result = qword_26B1CFB48;
  if (!qword_26B1CFB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB48);
  }
  return result;
}

unint64_t sub_24EA786E8()
{
  unint64_t result = qword_26B1CFB68;
  if (!qword_26B1CFB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB68);
  }
  return result;
}

unint64_t sub_24EA78740()
{
  unint64_t result = qword_26B1CFB60;
  if (!qword_26B1CFB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB60);
  }
  return result;
}

unint64_t sub_24EA78798()
{
  unint64_t result = qword_26B1CFB78;
  if (!qword_26B1CFB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB78);
  }
  return result;
}

unint64_t sub_24EA787F0()
{
  unint64_t result = qword_26B1CFB70;
  if (!qword_26B1CFB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB70);
  }
  return result;
}

unint64_t sub_24EA78848()
{
  unint64_t result = qword_26B1CFB38;
  if (!qword_26B1CFB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB38);
  }
  return result;
}

unint64_t sub_24EA788A0()
{
  unint64_t result = qword_26B1CFB30;
  if (!qword_26B1CFB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1CFB30);
  }
  return result;
}

uint64_t sub_24EA788F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x800000024EA9A900 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EA9A920 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616D496863746566 && a2 == 0xEF74657373416567 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657A695377656976 && a2 == 0xEF6465676E616843)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24EA78B90(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EA78C64(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DynamicImageAssetView.init(store:placeholderImage:platform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  *a5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (int *)type metadata accessor for DynamicImageAssetView();
  uint64_t v11 = (uint64_t *)((char *)a5 + v10[5]);
  uint64_t *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (uint64_t *)((char *)a5 + v10[6]);
  *uint64_t v12 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  uint64_t v14 = (char *)a5 + v10[7];
  *(void *)uint64_t v14 = sub_24EA2C65C;
  *((void *)v14 + 1) = result;
  v14[16] = 0;
  *(uint64_t *)((char *)a5 + v10[8]) = a3;
  *((unsigned char *)a5 + v10[9]) = a4;
  return result;
}

void sub_24EA78DF4(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EA944C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v1 + *(int *)(type metadata accessor for DynamicImageAssetView() + 32));
  if (!v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
    sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
    sub_24EA941E0();
    swift_getKeyPath();
    sub_24EA94520();
    swift_release();
    swift_release();
    uint64_t v16 = type metadata accessor for ImageAsset();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16) == 1)
    {
      uint64_t v17 = &qword_26B1CFAB8;
      uint64_t v18 = (uint64_t)v5;
    }
    else
    {
      sub_24EA1E564((uint64_t)v5, (uint64_t)v8, &qword_26B1CFD40);
      sub_24EA7FE00((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v19 = sub_24EA93EB0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v19) != 1)
      {
        id v21 = (id)sub_24EA93EA0();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
        goto LABEL_9;
      }
      uint64_t v17 = &qword_26B1CFD40;
      uint64_t v18 = (uint64_t)v8;
    }
    sub_24EA21258(v18, v17);
    id v21 = objc_msgSend(self, sel_tertiarySystemFillColor);
LABEL_9:
    uint64_t v23 = MEMORY[0x253347590](v21);
    char v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDA8);
    sub_24EA2EB88();
    sub_24EA943D0();
    goto LABEL_10;
  }
  id v14 = v13;
  sub_24EA944A0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B4B8], v9);
  uint64_t v15 = sub_24EA944D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v23 = v15;
  char v24 = 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDA8);
  sub_24EA2EB88();
  sub_24EA943D0();
  swift_release();

LABEL_10:
  char v22 = v26;
  *(void *)a1 = v25;
  *(unsigned char *)(a1 + 8) = v22;
}

uint64_t DynamicImageAssetView.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DynamicImageAssetView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_24EA8027C(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_24EA7FA44((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
  *a1 = sub_24EA7D1AC;
  a1[1] = v7;
  return result;
}

uint64_t sub_24EA79368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v101 = a3;
  uint64_t v99 = sub_24EA94240();
  uint64_t v100 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v98 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
  MEMORY[0x270FA5388](v110);
  uint64_t v90 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_24EA94200();
  uint64_t v7 = *(void *)(v107 - 8);
  uint64_t v112 = *(uint64_t (**)())(v7 + 64);
  MEMORY[0x270FA5388](v107);
  char v106 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DynamicImageAssetView();
  uint64_t v104 = *(void *)(v9 - 8);
  uint64_t v87 = *(void *)(v104 + 64);
  uint64_t v86 = v9 - 8;
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v114 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  MEMORY[0x270FA5388](v105);
  uint64_t v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v85 = (unint64_t)v15;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F48);
  uint64_t v89 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v109 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F50);
  uint64_t v92 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v108 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F58);
  uint64_t v95 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v111 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F60);
  uint64_t v97 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v93 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = a1;
  sub_24EA941F0();
  sub_24EA94800();
  double v21 = v20;
  double v23 = v22;
  sub_24EA7A070(a2, a1, &v117, v20, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
  sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  uint64_t v113 = a2;
  sub_24EA7B150((uint64_t)v13, v115, (uint64_t)v15, v21, v23);
  swift_bridgeObjectRelease();
  sub_24EA21258((uint64_t)v13, &qword_26B1CFAB8);
  uint64_t v24 = a2;
  uint64_t v25 = v114;
  uint64_t v102 = type metadata accessor for DynamicImageAssetView;
  sub_24EA8027C(v24, v114, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
  uint64_t v27 = v106;
  uint64_t v26 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v106, v103, v107);
  uint64_t v28 = *(unsigned __int8 *)(v104 + 80);
  uint64_t v29 = ((v28 + 16) & ~v28) + v87;
  uint64_t v30 = (v28 + 16) & ~v28;
  uint64_t v103 = v30;
  uint64_t v104 = v28 | 7;
  uint64_t v31 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v87 = v29;
  uint64_t v32 = (v29 + v31) & ~v31;
  unint64_t v33 = ((unint64_t)v112 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  uint64_t v112 = type metadata accessor for DynamicImageAssetView;
  sub_24EA7FA44(v25, v34 + v30, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v34 + v32, v27, v26);
  uint64_t v35 = (double *)(v34 + v33);
  *uint64_t v35 = v21;
  v35[1] = v23;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE40);
  unint64_t v36 = sub_24EA2E974();
  uint64_t v37 = sub_24EA2F2A8(&qword_26B1CFC68, &qword_26B1CFC70);
  uint64_t v38 = v85;
  unint64_t v39 = v105;
  sub_24EA94480();
  swift_release();
  sub_24EA21258(v38, &qword_26B1CFC70);
  sub_24EA2EE58(v117, v118, v119, v120, v121, v122, v123, v124);
  uint64_t v40 = v113;
  uint64_t v41 = v90;
  sub_24EA7F278(v90);
  uint64_t v42 = v40;
  uint64_t v43 = v114;
  sub_24EA8027C(v42, v114, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
  char v106 = (char *)((v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v107 = (uint64_t)(v106 + 16);
  uint64_t v44 = v106;
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v103;
  sub_24EA7FA44(v43, v45 + v103, (uint64_t (*)(void))v112);
  uint64_t v47 = (double *)&v44[v45];
  *uint64_t v47 = v21;
  v47[1] = v23;
  uint64_t v117 = v84;
  unint64_t v118 = v39;
  uint64_t v119 = v36;
  uint64_t v120 = v37;
  uint64_t v105 = MEMORY[0x263F1B260];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v85 = sub_24EA7F524();
  uint64_t v49 = v109;
  uint64_t v50 = v88;
  unint64_t v51 = v110;
  sub_24EA94480();
  swift_release();
  uint64_t v52 = v41;
  sub_24EA21258(v41, &qword_26B1CFE10);
  uint64_t v53 = v50;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v50);
  uint64_t v54 = v113;
  sub_24EA7F278(v52);
  uint64_t v55 = v54;
  uint64_t v56 = v114;
  uint64_t v57 = v102;
  sub_24EA8027C(v55, v114, (uint64_t (*)(void))v102);
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v56;
  uint64_t v60 = v112;
  sub_24EA7FA44(v59, v58 + v46, (uint64_t (*)(void))v112);
  uint64_t v61 = (double *)&v106[v58];
  *uint64_t v61 = v21;
  v61[1] = v23;
  uint64_t v117 = v53;
  unint64_t v118 = v51;
  uint64_t v62 = v85;
  uint64_t v119 = OpaqueTypeConformance2;
  uint64_t v120 = v85;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  uint64_t v64 = v91;
  char v65 = v108;
  sub_24EA94480();
  swift_release();
  sub_24EA21258(v52, &qword_26B1CFE10);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v65, v64);
  uint64_t v66 = v98;
  uint64_t v67 = v113;
  sub_24EA7EFB8(v98);
  uint64_t v68 = v67;
  uint64_t v69 = v114;
  sub_24EA8027C(v68, v114, (uint64_t (*)(void))v57);
  uint64_t v70 = swift_allocObject();
  uint64_t v71 = v70 + v46;
  uint64_t v72 = v69;
  sub_24EA7FA44(v69, v71, (uint64_t (*)(void))v60);
  uint64_t v73 = (double *)&v106[v70];
  *uint64_t v73 = v21;
  v73[1] = v23;
  uint64_t v117 = v64;
  unint64_t v118 = v110;
  uint64_t v119 = v63;
  uint64_t v120 = v62;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v75 = sub_24EA7F9FC(&qword_269929F88, MEMORY[0x263F18D80]);
  uint64_t v76 = v93;
  uint64_t v77 = v94;
  unint64_t v78 = v99;
  uint64_t v79 = v111;
  sub_24EA94480();
  swift_release();
  (*(void (**)(uint64_t, unint64_t))(v100 + 8))(v66, v78);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v79, v77);
  uint64_t v115 = *(void *)&v21;
  double v116 = v23;
  sub_24EA8027C(v113, v72, (uint64_t (*)(void))v102);
  uint64_t v80 = swift_allocObject();
  sub_24EA7FA44(v72, v80 + v103, (uint64_t (*)(void))v112);
  type metadata accessor for CGSize();
  uint64_t v117 = v77;
  unint64_t v118 = v78;
  uint64_t v119 = v74;
  uint64_t v120 = v75;
  swift_getOpaqueTypeConformance2();
  sub_24EA7F9FC((unint64_t *)&qword_26B1CFED0, (void (*)(uint64_t))type metadata accessor for CGSize);
  uint64_t v81 = v96;
  sub_24EA94480();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v76, v81);
}

uint64_t sub_24EA7A070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v107 = a2;
  *(void *)&long long v112 = a1;
  uint64_t v114 = a3;
  uint64_t v7 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v102 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v101 = (char *)&v92 - v10;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
  MEMORY[0x270FA5388](v104);
  uint64_t v106 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v111 = (uint64_t)&v92 - v13;
  uint64_t v97 = sub_24EA944C0();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_24EA94200();
  uint64_t v103 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v99 = v15;
  uint64_t v100 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DynamicImageAssetView();
  uint64_t v108 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v109 = v17;
  *(void *)&long long v110 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v18 - 8);
  double v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  MEMORY[0x270FA5388](v113);
  double v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v92 - v24;
  uint64_t v98 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
  sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  uint64_t v26 = v22;
  swift_release();
  uint64_t v27 = v112;
  uint64_t v28 = (uint64_t)v25;
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  sub_24EA7B150((uint64_t)v20, v119, (uint64_t)v25, a4, a5);
  swift_bridgeObjectRelease();
  sub_24EA21258((uint64_t)v20, &qword_26B1CFAB8);
  sub_24EA1E564((uint64_t)v25, (uint64_t)v22, &qword_26B1CFC70);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v30 = *(void **)(v27 + *(int *)(v98 + 32));
      uint64_t v94 = v25;
      uint64_t v93 = v22;
      if (v30)
      {
        id v31 = v30;
        sub_24EA944A0();
        uint64_t v32 = v96;
        unint64_t v33 = v95;
        uint64_t v34 = v97;
        (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, *MEMORY[0x263F1B4B8], v97);
        uint64_t v35 = sub_24EA944D0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
        *(void *)uint64_t v115 = v35;
        *(_WORD *)&v115[8] = 0;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
        sub_24EA2EB60();
        sub_24EA943D0();
        swift_release();
      }
      else
      {
        sub_24EA78DF4((uint64_t)&v119);
        *(void *)uint64_t v115 = v119;
        v115[8] = BYTE8(v119);
        v115[9] = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
        sub_24EA2EB60();
        sub_24EA943D0();
      }
      uint64_t v72 = 256;
      if (!BYTE9(v119)) {
        uint64_t v72 = 0;
      }
      *(void *)uint64_t v115 = v119;
      *(void *)&v115[8] = v72 | BYTE8(v119);
      *(_OWORD *)&v115[16] = 0u;
      long long v116 = 0u;
      LOBYTE(v117) = 1;
      *(void *)&long long v113 = v119;
      LODWORD(v112) = BYTE8(v119);
      LODWORD(v111) = BYTE9(v119);
      sub_24EA2F428(v119, BYTE8(v119), SBYTE9(v119));
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDD8);
      sub_24EA2EAE4();
      sub_24EA2EC7C();
      sub_24EA943D0();
      unint64_t v74 = *((void *)&v119 + 1);
      uint64_t v73 = v119;
      uint64_t v76 = *((void *)&v120 + 1);
      uint64_t v75 = v120;
      uint64_t v78 = *((void *)&v121 + 1);
      uint64_t v77 = v121;
      char v79 = v122;
      *(_OWORD *)uint64_t v115 = v119;
      *(_OWORD *)&v115[16] = v120;
      long long v116 = v121;
      __int16 v117 = v122;
      char v118 = 0;
      sub_24EA2F43C(v119, *((unint64_t *)&v119 + 1), v120, *((uint64_t *)&v120 + 1), v121, *((uint64_t *)&v121 + 1), v122, (void (*)(uint64_t, unint64_t))j__swift_retain, (void (*)(uint64_t, uint64_t))sub_24EA2F4F4, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_24EA2F428);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE08);
      sub_24EA2EA20();
      sub_24EA2ED24();
      sub_24EA943D0();
      sub_24EA2EEE4(v113, v112, v111);
      sub_24EA2F43C(v73, v74, v75, v76, v77, v78, v79, (void (*)(uint64_t, unint64_t))j__swift_release, (void (*)(uint64_t, uint64_t))sub_24EA2EED4, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_24EA2EEE4);
      uint64_t v53 = *((void *)&v119 + 1);
      uint64_t v52 = v119;
      uint64_t v55 = *((void *)&v120 + 1);
      uint64_t v54 = v120;
      uint64_t v57 = *((void *)&v121 + 1);
      uint64_t v56 = v121;
      __int16 v58 = v122;
      char v59 = v123;
      sub_24EA21258((uint64_t)v94, &qword_26B1CFC70);
      uint64_t v80 = sub_24EA93E70();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v80 - 8) + 8))(v93, v80);
    }
    else
    {
      sub_24EA78DF4((uint64_t)&v119);
      uint64_t v43 = v119;
      uint64_t v44 = BYTE8(v119);
      uint64_t v45 = v110;
      sub_24EA8027C(v27, v110, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
      uint64_t v46 = v103;
      uint64_t v47 = v100;
      uint64_t v48 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v100, v107, v105);
      unint64_t v49 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
      unint64_t v50 = (v109 + *(unsigned __int8 *)(v46 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v51 = swift_allocObject();
      *(double *)(v51 + 16) = a4;
      *(double *)(v51 + 24) = a5;
      sub_24EA7FA44(v45, v51 + v49, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
      (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v51 + v50, v47, v48);
      *(void *)uint64_t v115 = v43;
      *(void *)&v115[8] = v44;
      *(void *)&v115[16] = sub_24EA801AC;
      *(void *)&v115[24] = v51;
      long long v116 = 0uLL;
      LOBYTE(v117) = 0;
      j__swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDD8);
      sub_24EA2EAE4();
      sub_24EA2EC7C();
      sub_24EA943D0();
      *(_OWORD *)uint64_t v115 = v119;
      *(_OWORD *)&v115[16] = v120;
      long long v116 = v121;
      __int16 v117 = v122;
      char v118 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE08);
      sub_24EA2EA20();
      sub_24EA2ED24();
      sub_24EA943D0();
      j__swift_release();
      swift_release();
      uint64_t v53 = *((void *)&v119 + 1);
      uint64_t v52 = v119;
      uint64_t v55 = *((void *)&v120 + 1);
      uint64_t v54 = v120;
      uint64_t v57 = *((void *)&v121 + 1);
      uint64_t v56 = v121;
      __int16 v58 = v122;
      char v59 = v123;
      uint64_t result = sub_24EA21258(v28, &qword_26B1CFC70);
    }
  }
  else
  {
    uint64_t v36 = (uint64_t)v102;
    uint64_t v37 = (uint64_t)v101;
    uint64_t v38 = v111;
    sub_24EA1E61C((uint64_t)v22, v111, &qword_26B1CFF60);
    uint64_t v39 = v38;
    uint64_t v40 = v106;
    sub_24EA1E564(v39, v106, &qword_26B1CFF60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_24EA78DF4((uint64_t)&v119);
      *(void *)uint64_t v115 = v119;
      *(void *)&v115[8] = BYTE8(v119);
      *(_OWORD *)&v115[16] = 0u;
      long long v116 = 0u;
      __int16 v117 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
      sub_24EA2ED60();
      sub_24EA2EB60();
      sub_24EA943D0();
      long long v113 = v119;
      long long v112 = v120;
      long long v110 = v121;
      __int16 v41 = v122;
      int v42 = HIBYTE(v122);
    }
    else
    {
      sub_24EA7FA44(v40, v37, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      if (qword_269928ED0 != -1) {
        swift_once();
      }
      uint64_t v61 = (void *)qword_269931C60;
      sub_24EA8027C(v37, v36, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      id v62 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD60));
      id v63 = v61;
      uint64_t v64 = (void *)sub_24EA93FF0();
      id v65 = objc_msgSend(v63, sel_objectForKey_, v64);

      if (v65)
      {
        uint64_t v66 = sub_24EA942E0();
        id v67 = v65;
        sub_24EA944A0();
        uint64_t v68 = v96;
        uint64_t v69 = v95;
        uint64_t v70 = v97;
        (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, *MEMORY[0x263F1B4B8], v97);
        uint64_t v71 = sub_24EA944D0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
        *(void *)uint64_t v115 = v66;
        *(_OWORD *)&v115[8] = xmmword_24EA95D20;
        long long v116 = 0uLL;
        *(void *)&v115[24] = v71;
        LOBYTE(v117) = 0;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE50);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
        sub_24EA2F2A8(&qword_26B1CFE48, &qword_26B1CFE50);
        sub_24EA2EAE4();
        sub_24EA943D0();
        swift_release();
      }
      else
      {
        sub_24EA78DF4((uint64_t)&v119);
        uint64_t v81 = v119;
        uint64_t v82 = BYTE8(v119);
        uint64_t v83 = v110;
        sub_24EA8027C(v27, v110, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
        unint64_t v84 = (*(unsigned __int8 *)(v108 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
        unint64_t v85 = (v109 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v86 = swift_allocObject();
        sub_24EA7FA44(v83, v86 + v84, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
        uint64_t v87 = (double *)(v86 + v85);
        *uint64_t v87 = a4;
        v87[1] = a5;
        *(void *)uint64_t v115 = v81;
        *(void *)&v115[8] = v82;
        *(void *)&v115[16] = sub_24EA7FD70;
        *(void *)&v115[24] = v86;
        long long v116 = 0uLL;
        LOBYTE(v117) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE50);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD98);
        sub_24EA2F2A8(&qword_26B1CFE48, &qword_26B1CFE50);
        sub_24EA2EAE4();
        sub_24EA943D0();
      }
      *(_OWORD *)uint64_t v115 = v119;
      *(_OWORD *)&v115[16] = v120;
      long long v116 = v121;
      __int16 v117 = v122;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDC8);
      sub_24EA2ED60();
      sub_24EA2EB60();
      sub_24EA943D0();
      long long v113 = v119;
      long long v112 = v120;
      long long v110 = v121;
      __int16 v41 = v122;
      int v42 = HIBYTE(v122);
      sub_24EA7FE00(v37, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    }
    uint64_t v88 = &v26[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68) + 48)];
    if (v42) {
      __int16 v89 = 256;
    }
    else {
      __int16 v89 = 0;
    }
    *(_OWORD *)uint64_t v115 = v113;
    *(_OWORD *)&v115[16] = v112;
    long long v116 = v110;
    __int16 v117 = v89 | v41;
    char v118 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFDB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE08);
    sub_24EA2EA20();
    sub_24EA2ED24();
    sub_24EA943D0();
    uint64_t v53 = *((void *)&v119 + 1);
    uint64_t v52 = v119;
    uint64_t v55 = *((void *)&v120 + 1);
    uint64_t v54 = v120;
    uint64_t v57 = *((void *)&v121 + 1);
    uint64_t v56 = v121;
    __int16 v58 = v122;
    char v59 = v123;
    sub_24EA21258(v111, &qword_26B1CFF60);
    sub_24EA21258(v28, &qword_26B1CFC70);
    uint64_t v90 = sub_24EA93E40();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v90 - 8) + 8))(v88, v90);
  }
  uint64_t v91 = v114;
  *uint64_t v114 = v52;
  v91[1] = v53;
  v91[2] = v54;
  v91[3] = v55;
  v91[4] = v56;
  v91[5] = v57;
  *((_WORD *)v91 + 24) = v58;
  *((unsigned char *)v91 + 50) = v59;
  return result;
}

uint64_t sub_24EA7B150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ImageAsset();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(a1, (uint64_t)v15, &qword_26B1CFAB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_24EA21258((uint64_t)v15, &qword_26B1CFAB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
    return swift_storeEnumTagMultiPayload();
  }
  sub_24EA7FA44((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  if (!*(void *)(a2 + 16) || (unint64_t v21 = sub_24EA62C2C((uint64_t)v19), (v22 & 1) == 0))
  {
    sub_24EA7FE00((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 1, 1, v30);
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
    swift_storeEnumTagMultiPayload();
    return sub_24EA21258((uint64_t)v12, &qword_26B1CFC78);
  }
  uint64_t v23 = *(void *)(*(void *)(a2 + 56) + 8 * v21);
  if (*(void *)(v23 + 16) && (unint64_t v24 = sub_24EA62BB8(a4, a5), (v25 & 1) != 0))
  {
    unint64_t v26 = v24;
    uint64_t v27 = *(void *)(v23 + 56);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
    uint64_t v29 = *(void *)(v28 - 8);
    sub_24EA1E564(v27 + *(void *)(v29 + 72) * v26, (uint64_t)v12, &qword_26B1CFC70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v12, 0, 1, v28);
  }
  else
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v12, 1, 1, v31);
  }
  sub_24EA7FE00((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v12, 1, v32) == 1) {
    goto LABEL_9;
  }
  return sub_24EA1E61C((uint64_t)v12, a3, &qword_26B1CFC70);
}

uint64_t sub_24EA7B550(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24EA94240();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24EA94810();
  if (result)
  {
    uint64_t v18 = type metadata accessor for DynamicImageAssetView();
    v24[0] = a2;
    v24[1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
    sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
    sub_24EA941E0();
    uint64_t v19 = (double *)&v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48)];
    sub_24EA7EFB8((uint64_t)v13);
    char v20 = sub_24EA93EE0();
    sub_24EA7F278((uint64_t)v10);
    uint64_t v21 = type metadata accessor for DynamicArtworkLayoutEnvironment();
    sub_24EA93FB0();
    char v22 = *(unsigned char *)(a1 + *(int *)(v18 + 36));
    sub_24EA7F278((uint64_t)v10);
    sub_24EA93FB0();
    uint64_t v23 = sub_24EA941F0();
    *uint64_t v16 = v20;
    v16[1] = MEMORY[0x253346F90](v23);
    v16[*(int *)(v21 + 28)] = v22;
    *uint64_t v19 = a3;
    v19[1] = a4;
    swift_storeEnumTagMultiPayload();
    sub_24EA94530();
    swift_release();
    return sub_24EA7FE00((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  }
  return result;
}

uint64_t sub_24EA7B7E8(double a1, double a2)
{
  uint64_t v18 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = (uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ImageAsset();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v17 = (uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicImageAssetView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
  sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_24EA21258((uint64_t)v7, &qword_26B1CFAB8);
  }
  uint64_t v12 = v17;
  sub_24EA7FA44((uint64_t)v7, v17, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  sub_24EA941E0();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
  uint64_t v14 = v19;
  uint64_t v15 = (double *)(v19 + *(int *)(v13 + 48));
  sub_24EA8027C(v12, v19, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  *uint64_t v15 = a1;
  v15[1] = a2;
  swift_storeEnumTagMultiPayload();
  sub_24EA94530();
  swift_release();
  sub_24EA7FE00(v14, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  return sub_24EA7FE00(v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
}

uint64_t sub_24EA7BAF8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24EA94240();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  MEMORY[0x270FA5388](v20);
  char v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(a4, (uint64_t)v22, &qword_26B1CFC70);
  LODWORD(a4) = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_24EA21258((uint64_t)v22, &qword_26B1CFC70);
  if (a4 == 2)
  {
    uint64_t v24 = type metadata accessor for DynamicImageAssetView();
    v30[0] = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
    v30[1] = v17;
    sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
    sub_24EA941E0();
    char v25 = (double *)&v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269929280) + 48)];
    sub_24EA7EFB8((uint64_t)v16);
    char v26 = sub_24EA93EE0();
    sub_24EA7F278((uint64_t)v13);
    uint64_t v27 = type metadata accessor for DynamicArtworkLayoutEnvironment();
    sub_24EA93FB0();
    char v28 = *(unsigned char *)(a5 + *(int *)(v24 + 36));
    sub_24EA7F278((uint64_t)v13);
    sub_24EA93FB0();
    uint64_t v29 = sub_24EA941F0();
    *uint64_t v19 = v26;
    v19[1] = MEMORY[0x253346F90](v29);
    v19[*(int *)(v27 + 28)] = v28;
    *char v25 = a1;
    v25[1] = a2;
    swift_storeEnumTagMultiPayload();
    sub_24EA94530();
    swift_release();
    return sub_24EA7FE00((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  }
  return result;
}

uint64_t sub_24EA7BE10(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v34 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929848);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v35 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v33 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v38 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v37 = (uint64_t)&v33 - v22;
  type metadata accessor for DynamicImageAssetView();
  uint64_t v36 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
  sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    return sub_24EA21258((uint64_t)v17, &qword_2699297C8);
  }
  uint64_t v24 = v37;
  sub_24EA7FA44((uint64_t)v17, v37, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  sub_24EA7F278(v34);
  uint64_t v25 = (uint64_t)v33;
  sub_24EA93FB0();
  uint64_t v26 = sub_24EA93FA0();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 0, 1, v26);
  uint64_t v28 = (uint64_t)v35;
  v27((uint64_t)v35, 1, 1, v26);
  uint64_t v29 = v38;
  sub_24EA4C4C8(13, v25, 4, v28, 0.0, 1, v38);
  sub_24EA21258(v28, &qword_269929848);
  sub_24EA21258(v25, &qword_269929848);
  sub_24EA941E0();
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
  uint64_t v31 = v40;
  uint64_t v32 = (double *)(v40 + *(int *)(v30 + 48));
  sub_24EA8027C((uint64_t)v29, v40, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  *uint64_t v32 = a1;
  v32[1] = a2;
  swift_storeEnumTagMultiPayload();
  sub_24EA94530();
  swift_release();
  sub_24EA7FE00(v31, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  sub_24EA7FE00((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  return sub_24EA7FE00(v24, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
}

uint64_t sub_24EA7C2E8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v42 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v42);
  uint64_t v43 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v37 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929848);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v35 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v38 = (char *)&v34 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v40 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v39 = (uint64_t)&v34 - v22;
  type metadata accessor for DynamicImageAssetView();
  uint64_t v41 = a5;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
  sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
  uint64_t v36 = v23;
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    return sub_24EA21258((uint64_t)v17, &qword_2699297C8);
  }
  uint64_t v25 = v39;
  sub_24EA7FA44((uint64_t)v17, v39, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  uint64_t v26 = sub_24EA93FA0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = (uint64_t)v38;
  v27(v38, 1, 1, v26);
  sub_24EA7F278(v37);
  uint64_t v29 = (uint64_t)v35;
  sub_24EA93FB0();
  v27((char *)v29, 0, 1, v26);
  uint64_t v30 = v40;
  sub_24EA4C4C8(13, v28, 4, v29, 0.0, 1, v40);
  sub_24EA21258(v29, &qword_269929848);
  sub_24EA21258(v28, &qword_269929848);
  sub_24EA941E0();
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
  uint64_t v32 = v43;
  uint64_t v33 = (double *)(v43 + *(int *)(v31 + 48));
  sub_24EA8027C((uint64_t)v30, v43, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  double *v33 = a1;
  v33[1] = a2;
  swift_storeEnumTagMultiPayload();
  sub_24EA94530();
  swift_release();
  sub_24EA7FE00(v32, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  sub_24EA7FE00((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  return sub_24EA7FE00(v25, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
}

uint64_t sub_24EA7C7C4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929848);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v38 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v36 = (char *)v35 - v12;
  uint64_t v13 = sub_24EA94240();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699297C8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v37 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v41 = (uint64_t)v35 - v23;
  type metadata accessor for DynamicImageAssetView();
  v35[1] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
  sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
  sub_24EA941E0();
  swift_getKeyPath();
  sub_24EA94520();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    return sub_24EA21258((uint64_t)v18, &qword_2699297C8);
  }
  sub_24EA7FA44((uint64_t)v18, v41, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  sub_24EA7EFB8((uint64_t)v15);
  int v25 = sub_24EA93EE0();
  uint64_t v26 = sub_24EA93FA0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = (uint64_t)v36;
  v27(v36, 1, 1, v26);
  uint64_t v29 = (uint64_t)v38;
  v27(v38, 1, 1, v26);
  uint64_t v30 = v37;
  uint64_t v31 = v41;
  sub_24EA4C4C8(v25, v28, 4, v29, 0.0, 1, v37);
  sub_24EA21258(v29, &qword_269929848);
  sub_24EA21258(v28, &qword_269929848);
  sub_24EA941E0();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929280);
  uint64_t v33 = v40;
  uint64_t v34 = (double *)(v40 + *(int *)(v32 + 48));
  sub_24EA8027C((uint64_t)v30, v40, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  *uint64_t v34 = a1;
  v34[1] = a2;
  swift_storeEnumTagMultiPayload();
  sub_24EA94530();
  swift_release();
  sub_24EA7FE00(v33, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  sub_24EA7FE00((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
  return sub_24EA7FE00(v31, (uint64_t (*)(void))type metadata accessor for DynamicArtworkLayoutEnvironment);
}

uint64_t sub_24EA7CC84(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for DynamicImageAssetAction();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t result = sub_24EA94810();
  if (result)
  {
    type metadata accessor for DynamicImageAssetView();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F68);
    sub_24EA2F2A8(&qword_269929F70, &qword_269929F68);
    sub_24EA941E0();
    *uint64_t v5 = v6;
    v5[1] = v7;
    swift_storeEnumTagMultiPayload();
    sub_24EA94530();
    swift_release();
    return sub_24EA7FE00((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetAction);
  }
  return result;
}

uint64_t sub_24EA7CDDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_24EA8027C(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_24EA7FA44((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for DynamicImageAssetView);
  *a2 = sub_24EA7D1AC;
  a2[1] = v7;
  return result;
}

uint64_t sub_24EA7CEF0()
{
  return sub_24EA94260();
}

uint64_t sub_24EA7CF14(uint64_t a1)
{
  uint64_t v2 = sub_24EA94240();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_24EA94270();
}

uint64_t type metadata accessor for DynamicImageAssetView()
{
  uint64_t result = qword_26B1CFA08;
  if (!qword_26B1CFA08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EA7D02C()
{
  return sub_24EA94290();
}

uint64_t sub_24EA7D050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24EA7D0A0(a1, a2, a3, a4, MEMORY[0x263F19448]);
}

uint64_t sub_24EA7D07C()
{
  return sub_24EA94280();
}

uint64_t sub_24EA7D0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(a1, (uint64_t)v9, &qword_26B1CFE10);
  return a5(v9);
}

uint64_t sub_24EA7D144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24EA7D0A0(a1, a2, a3, a4, MEMORY[0x263F193D0]);
}

uint64_t sub_24EA7D170()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EA7D1B0()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for DynamicImageAssetView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24EA94240();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_24EA943F0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_24EA943F0();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[7];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(void *)v23;
    uint64_t v25 = *((void *)v23 + 1);
    char v26 = v23[16];
    sub_24EA2D278();
    *(void *)uint64_t v22 = v24;
    *((void *)v22 + 1) = v25;
    v22[16] = v26;
    uint64_t v27 = a3[8];
    uint64_t v28 = a3[9];
    uint64_t v29 = *(void **)((char *)a2 + v27);
    *(void *)((char *)a1 + v27) = v29;
    *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
    id v30 = v29;
  }
  return a1;
}

void destroy for DynamicImageAssetView(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24EA94240();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24EA943F0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[6];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_24EA943F0();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  sub_24EA2D26C();
  uint64_t v11 = *(void **)(a1 + a2[8]);
}

void *initializeWithCopy for DynamicImageAssetView(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24EA94240();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_24EA943F0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_24EA943F0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  char v24 = v21[16];
  sub_24EA2D278();
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 1) = v23;
  v20[16] = v24;
  uint64_t v25 = a3[8];
  uint64_t v26 = a3[9];
  uint64_t v27 = *(void **)((char *)a2 + v25);
  *(void *)((char *)a1 + v25) = v27;
  *((unsigned char *)a1 + v26) = *((unsigned char *)a2 + v26);
  id v28 = v27;
  return a1;
}

void *assignWithCopy for DynamicImageAssetView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_24EA21258((uint64_t)a1, &qword_269929F18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24EA94240();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_24EA21258((uint64_t)a1 + v7, &qword_269929F20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24EA943F0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    sub_24EA21258((uint64_t)a1 + v13, &qword_269929F20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_24EA943F0();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  char v24 = v21[16];
  sub_24EA2D278();
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 1) = v23;
  v20[16] = v24;
  sub_24EA2D26C();
  uint64_t v25 = a3[8];
  uint64_t v26 = *(void **)((char *)a1 + v25);
  uint64_t v27 = *(void **)((char *)a2 + v25);
  *(void *)((char *)a1 + v25) = v27;
  id v28 = v27;

  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

char *initializeWithTake for DynamicImageAssetView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_24EA94240();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_24EA943F0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_24EA943F0();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v21];
  char v24 = &a2[v21];
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  v23[16] = v24[16];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *assignWithTake for DynamicImageAssetView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_24EA21258((uint64_t)a1, &qword_269929F18);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24EA94240();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_24EA21258((uint64_t)&a1[v8], &qword_269929F20);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_24EA943F0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_24EA21258((uint64_t)&a1[v15], &qword_269929F20);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_24EA943F0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE10);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v17, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  char v24 = &a2[v22];
  char v25 = v24[16];
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  v23[16] = v25;
  sub_24EA2D26C();
  uint64_t v26 = a3[8];
  uint64_t v27 = *(void **)&a1[v26];
  *(void *)&a1[v26] = *(void *)&a2[v26];

  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicImageAssetView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA7E69C);
}

uint64_t sub_24EA7E69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F28);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F30);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicImageAssetView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA7E7D8);
}

uint64_t sub_24EA7E7D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F28);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F30);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24EA7E8F0()
{
  sub_24EA7E9D8();
  if (v0 <= 0x3F)
  {
    sub_24EA7EA30();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24EA7E9D8()
{
  if (!qword_26B1CFD70)
  {
    sub_24EA94240();
    unint64_t v0 = sub_24EA941D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1CFD70);
    }
  }
}

void sub_24EA7EA30()
{
  if (!qword_26B1CFD78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFE10);
    unint64_t v0 = sub_24EA941D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1CFD78);
    }
  }
}

uint64_t sub_24EA7EA8C()
{
  return sub_24EA2F2A8(&qword_269929F38, &qword_269929F40);
}

uint64_t sub_24EA7EACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DynamicImageAssetView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_24EA79368(a1, v6, a2);
}

uint64_t sub_24EA7EB4C()
{
  uint64_t v1 = (int *)type metadata accessor for DynamicImageAssetView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v17 = sub_24EA94200();
  uint64_t v3 = *(void *)(v17 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v5 = v0 + ((v2 + 16) & ~v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24EA94240();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + ((v2 + 16) & ~v2), v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24EA943F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[6];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_24EA943F0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = (((v2 + 16) & ~v2) + v16 + v4) & ~v4;
  sub_24EA2D26C();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v13, v17);
  return MEMORY[0x270FA0238](v0, ((v15 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v4 | 7);
}

uint64_t sub_24EA7EEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for DynamicImageAssetView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_24EA94200() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v2 + v9;
  uint64_t v11 = (double *)(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  double v12 = *v11;
  double v13 = v11[1];
  return sub_24EA7BAF8(v12, v13, a1, a2, v2 + v6, v10);
}

uint64_t sub_24EA7EFB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24EA942D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v2, (uint64_t)v10, &qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_24EA94240();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_24EA947C0();
    uint64_t v14 = sub_24EA94400();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v19[2] = sub_24EA81BE0(0x5463696D616E7944, 0xEF657A6953657079, &v20);
      sub_24EA94830();
      _os_log_impl(&dword_24EA1C000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253348310](v18, -1, -1);
      MEMORY[0x253348310](v16, -1, -1);
    }

    sub_24EA942C0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_24EA7F278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24EA942D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA1E564(v2, (uint64_t)v10, &qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_24EA1E61C((uint64_t)v10, a1, &qword_26B1CFE10);
  }
  os_log_type_t v12 = sub_24EA947C0();
  os_log_type_t v13 = sub_24EA94400();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    v18[2] = sub_24EA81BE0(0xD000000000000020, 0x800000024EA9ACB0, &v19);
    sub_24EA94830();
    _os_log_impl(&dword_24EA1C000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253348310](v17, -1, -1);
    MEMORY[0x253348310](v15, -1, -1);
  }

  sub_24EA942C0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24EA7F50C(uint64_t a1, uint64_t a2)
{
  return sub_24EA7F600(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128, __n128))sub_24EA7BE10);
}

unint64_t sub_24EA7F524()
{
  unint64_t result = qword_269929F78;
  if (!qword_269929F78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1CFE10);
    sub_24EA7F9FC(&qword_269929F80, MEMORY[0x263F19F18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929F78);
  }
  return result;
}

uint64_t sub_24EA7F5CC(uint64_t a1, uint64_t a2)
{
  return sub_24EA7F600(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128, __n128))sub_24EA7C2E8);
}

uint64_t sub_24EA7F5E8(uint64_t a1, uint64_t a2)
{
  return sub_24EA7F600(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128, __n128))sub_24EA7C7C4);
}

uint64_t sub_24EA7F600(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, __n128, __n128))
{
  uint64_t v6 = *(void *)(type metadata accessor for DynamicImageAssetView() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v3 + v7;
  uint64_t v9 = (unint64_t *)(v3 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10.n128_u64[0] = *v9;
  v11.n128_u64[0] = v9[1];
  return a3(a1, a2, v8, v10, v11);
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v1 = (int *)type metadata accessor for DynamicImageAssetView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24EA94240();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24EA943F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[6];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_24EA943F0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }
  sub_24EA2D26C();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24EA7F97C(uint64_t a1, uint64_t *a2)
{
  type metadata accessor for DynamicImageAssetView();
  return sub_24EA7CC84(a1, a2);
}

uint64_t sub_24EA7F9FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA7FA44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v1 = (int *)type metadata accessor for DynamicImageAssetView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24EA94240();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24EA943F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[6];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_24EA943F0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }
  sub_24EA2D26C();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_24EA7FD70()
{
  uint64_t v1 = *(void *)(type metadata accessor for DynamicImageAssetView() - 8);
  uint64_t v2 = (double *)(v0
                + ((*(void *)(v1 + 64)
                  + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                  + 7) & 0xFFFFFFFFFFFFFFF8));
  double v3 = *v2;
  double v4 = v2[1];
  return sub_24EA7B7E8(v3, v4);
}

uint64_t sub_24EA7FE00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EA7FE60()
{
  uint64_t v1 = (int *)type metadata accessor for DynamicImageAssetView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v18 = sub_24EA94200();
  uint64_t v3 = *(void *)(v18 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = *(void *)(v3 + 64);
  uint64_t v5 = v0 + ((v2 + 32) & ~v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24EA94240();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + ((v2 + 32) & ~v2), v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24EA943F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[6];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_24EA943F0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v2 | v4 | 7;
  uint64_t v14 = (((v2 + 32) & ~v2) + v17 + v4) & ~v4;
  sub_24EA2D26C();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v14, v18);
  return MEMORY[0x270FA0238](v0, v14 + v16, v13);
}

uint64_t sub_24EA801AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for DynamicImageAssetView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_24EA94200() - 8);
  double v5 = *(double *)(v0 + 16);
  double v6 = *(double *)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_24EA7B550(v0 + v2, v7, v5, v6);
}

uint64_t sub_24EA8027C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t DynamicPredicateComparisonDescriptor.makePredicateExpression<A>(using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v173 = a1;
  int v194 = a3;
  uint64_t v174 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v175 = (char *)&v169 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v5[1];
  unint64_t v6 = v5[2];
  uint64_t v180 = v5;
  unint64_t v8 = v5[3];
  uint64_t v179 = v9;
  uint64_t v201 = v9;
  uint64_t v202 = v7;
  uint64_t v176 = v7;
  unint64_t v177 = v6;
  unint64_t v203 = v6;
  unint64_t v204 = v8;
  unint64_t v178 = v8;
  uint64_t v10 = type metadata accessor for ArtworkPredicateValue();
  MEMORY[0x270FA5388](v10);
  uint64_t v181 = (uint64_t)&v169 - v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v183 = v10;
  uint64_t v182 = WitnessTable;
  uint64_t v185 = type metadata accessor for ArtworkPredicateKeyPath();
  uint64_t v186 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  uint64_t v184 = (char *)&v169 - v13;
  uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299E8);
  MEMORY[0x270FA5388](v196);
  uint64_t v198 = (uint64_t)&v169 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_24EA940A0();
  uint64_t v15 = *(void *)(v200 - 8);
  MEMORY[0x270FA5388](v200);
  uint64_t v17 = (char *)&v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v169 - v19;
  uint64_t v195 = sub_24EA940B0();
  MEMORY[0x270FA5388](v195);
  uint64_t v193 = (uint64_t)&v169 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v192 = (uint64_t *)((char *)&v169 - v23);
  MEMORY[0x270FA5388](v24);
  uint64_t v191 = (uint64_t *)((char *)&v169 - v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v197 = (char *)&v169 - v27;
  MEMORY[0x270FA5388](v28);
  v189 = (uint64_t *)((char *)&v169 - v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v170 = (uint64_t)&v169 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v171 = (uint64_t)&v169 - v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v190 = (uint64_t)&v169 - v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v172 = (uint64_t)&v169 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v188 = (char *)&v169 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v169 - v41;
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v169 - v44;
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v169 - v47;
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (char *)&v169 - v50;
  sub_24EA94160();
  sub_24EA94080();
  uint64_t v187 = (uint64_t *)v51;
  sub_24EA818B8((uint64_t)v51);
  uint64_t v199 = v3;
  sub_24EA94170();
  sub_24EA94080();
  sub_24EA818B8((uint64_t)v48);
  char v52 = sub_24EA94090();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v54 = v200;
  v53(v17, v200);
  v53(v20, v54);
  if ((v52 & 1) == 0)
  {
    sub_24EA676D8();
    swift_allocError();
    char v67 = 6;
LABEL_63:
    *uint64_t v66 = v67;
    return swift_willThrow();
  }
  int v55 = sub_24EA94150();
  sub_24EA94160();
  sub_24EA94170();
  uint64_t v56 = v198;
  uint64_t v57 = (uint64_t *)(v198 + *(int *)(v196 + 48));
  sub_24EA81914((uint64_t)v45, v198);
  sub_24EA81914((uint64_t)v42, (uint64_t)v57);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v59 = (uint64_t)v197;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v68 = v189;
      sub_24EA81978(v56, (uint64_t)v189);
      uint64_t v69 = *v68;
      int v70 = swift_getEnumCaseMultiPayload();
      if (v70 == 1)
      {
        os_log_type_t v136 = v187;
        sub_24EA81978((uint64_t)v57, (uint64_t)v187);
        uint64_t v79 = *v136;
        sub_24EA818B8((uint64_t)v57);
        goto LABEL_32;
      }
      if (v70 != 3) {
        goto LABEL_42;
      }
      sub_24EA81978((uint64_t)v57, v59);
      uint64_t v71 = sub_24EA940D0();
      uint64_t v72 = *(void *)(v71 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v72 + 88))(v59, v71) == *MEMORY[0x263F3F240])
      {
        uint64_t v207 = v69;
        uint64_t v73 = (uint64_t)v175;
        uint64_t v74 = v179;
        (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v175, v173, v179);
        uint64_t v75 = v181;
        uint64_t v76 = ArtworkPredicateValue.init(value:)(v73, v74, v181);
        MEMORY[0x270FA5388](v76);
        uint64_t v77 = v180;
        *(&v169 - 2) = v74;
        *(&v169 - 1) = (uint64_t)v77;
        goto LABEL_27;
      }
      goto LABEL_33;
    case 2:
      uint64_t v78 = v191;
      sub_24EA81978(v56, (uint64_t)v191);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_42;
      }
      uint64_t v69 = *v78;
      uint64_t v79 = *v57;
LABEL_32:
      sub_24EA818B8(v56);
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A00);
      uint64_t v137 = v194;
      v194[3] = result;
      v137[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
      *uint64_t v137 = v69;
      v137[1] = v79;
      *((unsigned char *)v137 + 16) = v55;
      return result;
    case 3:
      LODWORD(v200) = v55;
      uint64_t v59 = v190;
      sub_24EA81978(v56, v190);
      uint64_t v71 = sub_24EA940D0();
      uint64_t v72 = *(void *)(v71 - 8);
      uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t))(v72 + 88);
      int v81 = v80(v59, v71);
      int v82 = v81;
      if (v81 == *MEMORY[0x263F3F248])
      {
        int v83 = swift_getEnumCaseMultiPayload();
        if (v83 != 3)
        {
          if (v83) {
            goto LABEL_62;
          }
          sub_24EA81978((uint64_t)v57, (uint64_t)v187);
          uint64_t v84 = (uint64_t)v175;
          uint64_t v85 = v179;
          (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v175, v173, v179);
          uint64_t v86 = v181;
          uint64_t v87 = ArtworkPredicateValue.init(value:)(v84, v85, v181);
          MEMORY[0x270FA5388](v87);
          uint64_t v88 = v180;
          *(&v169 - 2) = v85;
          *(&v169 - 1) = (uint64_t)v88;
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v90 = v184;
          ArtworkPredicateKeyPath.init(root:keyPath:)(v86, KeyPath, v183, v184);
          uint64_t v207 = sub_24EA93FC0();
LABEL_23:
          char v206 = v200;
          uint64_t v108 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929F90);
          uint64_t v109 = v185;
          uint64_t v110 = swift_getWitnessTable();
          unint64_t v111 = sub_24EA81B6C();
          uint64_t v201 = v109;
          uint64_t v202 = v108;
          unint64_t v203 = v110;
          unint64_t v204 = v111;
          uint64_t v112 = MEMORY[0x263F8D6E0];
          uint64_t v205 = MEMORY[0x263F8D6E0];
          uint64_t v113 = type metadata accessor for ArtworkPredicateComparison();
          uint64_t v114 = v194;
          v194[3] = v113;
          v114[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v114);
          long long v116 = &v207;
          __int16 v117 = boxed_opaque_existential_1;
          char v118 = (uint64_t *)v90;
          uint64_t v119 = v109;
          uint64_t v120 = v108;
          goto LABEL_28;
        }
        uint64_t v138 = v171;
        sub_24EA81978((uint64_t)v57, v171);
        if (v80(v138, v71) == v82)
        {
          if (qword_269928EC8 != -1) {
            swift_once();
          }
          uint64_t v139 = sub_24EA941C0();
          __swift_project_value_buffer(v139, (uint64_t)qword_269931C48);
          uint64_t v140 = sub_24EA941A0();
          os_log_type_t v141 = sub_24EA947B0();
          if (os_log_type_enabled(v140, v141))
          {
            uint64_t v142 = (uint8_t *)swift_slowAlloc();
            uint64_t v143 = swift_slowAlloc();
            uint64_t v201 = v143;
            *(_DWORD *)uint64_t v142 = 136315138;
            uint64_t v207 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v201);
            sub_24EA94830();
            _os_log_impl(&dword_24EA1C000, v140, v141, "%s", v142, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x253348310](v143, -1, -1);
            MEMORY[0x253348310](v142, -1, -1);
          }
          goto LABEL_60;
        }
        goto LABEL_61;
      }
      if (v81 != *MEMORY[0x263F3F240])
      {
LABEL_33:
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v59, v71);
LABEL_42:
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v144 = v193;
          sub_24EA81978((uint64_t)v57, v193);
          uint64_t v145 = sub_24EA940D0();
          uint64_t v146 = *(void *)(v145 - 8);
          int v147 = (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 88))(v144, v145);
          if (v147 == *MEMORY[0x263F3F248] || v147 == *MEMORY[0x263F3F240]) {
            goto LABEL_62;
          }
          (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v144, v145);
        }
        unsigned int v148 = swift_getEnumCaseMultiPayload();
        if (v148 >= 3)
        {
          if (v148 == 3)
          {
            unsigned int v149 = swift_getEnumCaseMultiPayload();
            if (v149 < 3)
            {
              uint64_t v57 = (uint64_t *)v56;
              goto LABEL_51;
            }
            if (v149 == 3)
            {
              sub_24EA676D8();
              swift_allocError();
              *uint64_t v150 = 10;
              swift_willThrow();
              return sub_24EA819DC(v56);
            }
            uint64_t v57 = (uint64_t *)v56;
          }
          swift_bridgeObjectRelease();
        }
LABEL_51:
        sub_24EA818B8((uint64_t)v57);
        sub_24EA676D8();
        swift_allocError();
        char v67 = 2;
        goto LABEL_63;
      }
      int v99 = swift_getEnumCaseMultiPayload();
      if (v99 != 3)
      {
        if (v99 != 1) {
          goto LABEL_62;
        }
        uint64_t v100 = v187;
        sub_24EA81978((uint64_t)v57, (uint64_t)v187);
        uint64_t v101 = *v100;
        uint64_t v102 = (uint64_t)v175;
        uint64_t v103 = v179;
        (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v175, v173, v179);
        uint64_t v104 = v181;
        uint64_t v105 = ArtworkPredicateValue.init(value:)(v102, v103, v181);
        MEMORY[0x270FA5388](v105);
        uint64_t v106 = v180;
        *(&v169 - 2) = v103;
        *(&v169 - 1) = (uint64_t)v106;
        uint64_t v107 = swift_getKeyPath();
        uint64_t v90 = v184;
        ArtworkPredicateKeyPath.init(root:keyPath:)(v104, v107, v183, v184);
        uint64_t v207 = v101;
        goto LABEL_23;
      }
      uint64_t v138 = v170;
      sub_24EA81978((uint64_t)v57, v170);
      if (v80(v138, v71) != v82)
      {
LABEL_61:
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v138, v71);
LABEL_62:
        sub_24EA818B8((uint64_t)v57);
        sub_24EA818B8(v56);
        sub_24EA676D8();
        swift_allocError();
        char v67 = 5;
        goto LABEL_63;
      }
      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v151 = sub_24EA941C0();
      __swift_project_value_buffer(v151, (uint64_t)qword_269931C48);
      uint64_t v140 = sub_24EA941A0();
      os_log_type_t v152 = sub_24EA947B0();
      if (os_log_type_enabled(v140, v152))
      {
        uint64_t v153 = (uint8_t *)swift_slowAlloc();
        uint64_t v154 = swift_slowAlloc();
        uint64_t v201 = v154;
        *(_DWORD *)uint64_t v153 = 136315138;
        uint64_t v207 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v201);
        sub_24EA94830();
        _os_log_impl(&dword_24EA1C000, v140, v152, "%s", v153, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x253348310](v154, -1, -1);
        MEMORY[0x253348310](v153, -1, -1);
      }
LABEL_60:

      char v155 = v200;
      uint64_t v156 = (uint64_t)v175;
      uint64_t v157 = v179;
      (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v175, v173, v179);
      uint64_t v158 = v181;
      uint64_t v159 = ArtworkPredicateValue.init(value:)(v156, v157, v181);
      MEMORY[0x270FA5388](v159);
      uint64_t v160 = v180;
      *(&v169 - 2) = v157;
      *(&v169 - 1) = (uint64_t)v160;
      uint64_t v161 = swift_getKeyPath();
      uint64_t v162 = v184;
      ArtworkPredicateKeyPath.init(root:keyPath:)(v158, v161, v183, v184);
      LOBYTE(v207) = v155;
      uint64_t v163 = v185;
      uint64_t v164 = swift_getWitnessTable();
      uint64_t v201 = v163;
      uint64_t v202 = v163;
      unint64_t v203 = v164;
      unint64_t v204 = v164;
      uint64_t v165 = MEMORY[0x263F8D6E0];
      uint64_t v205 = MEMORY[0x263F8D6E0];
      uint64_t v166 = type metadata accessor for ArtworkPredicateComparison();
      uint64_t v167 = v194;
      v194[3] = v166;
      v167[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
      uint64_t v168 = __swift_allocate_boxed_opaque_existential_1(v167);
      static ArtworkPredicate.makeComparison<A, B>(lhs:rhs:comparisonOperator:)((uint64_t)v162, (uint64_t)v162, v163, v163, v165, (uint64_t)v168);
      (*(void (**)(char *, uint64_t))(v186 + 8))(v162, v163);
LABEL_29:
      sub_24EA818B8((uint64_t)v57);
      return sub_24EA818B8(v56);
    case 4:
      uint64_t v91 = v192;
      sub_24EA81978(v56, (uint64_t)v192);
      uint64_t v92 = v91[1];
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v93 = *v91;
        uint64_t v94 = *v57;
        uint64_t v95 = v57[1];
        uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299F8);
        uint64_t v97 = v194;
        v194[3] = v96;
        v97[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
        uint64_t v98 = swift_allocObject();
        *uint64_t v97 = v98;
        *(void *)(v98 + 16) = v93;
        *(void *)(v98 + 24) = v92;
        *(void *)(v98 + 32) = v94;
        *(void *)(v98 + 40) = v95;
        *(unsigned char *)(v98 + 48) = v55;
        return sub_24EA818B8(v56);
      }
      swift_bridgeObjectRelease();
      goto LABEL_42;
    default:
      uint64_t v60 = v188;
      sub_24EA81978(v56, (uint64_t)v188);
      char v61 = *v60;
      int v62 = swift_getEnumCaseMultiPayload();
      if (v62 == 3)
      {
        uint64_t v121 = v172;
        sub_24EA81978((uint64_t)v57, v172);
        uint64_t v122 = sub_24EA940D0();
        uint64_t v123 = *(void *)(v122 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v123 + 88))(v121, v122) != *MEMORY[0x263F3F248])
        {
          (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v121, v122);
          goto LABEL_42;
        }
        uint64_t v207 = sub_24EA93FC0();
        uint64_t v124 = (uint64_t)v175;
        uint64_t v125 = v179;
        (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v175, v173, v179);
        uint64_t v75 = v181;
        uint64_t v126 = ArtworkPredicateValue.init(value:)(v124, v125, v181);
        MEMORY[0x270FA5388](v126);
        uint64_t v127 = v180;
        *(&v169 - 2) = v125;
        *(&v169 - 1) = (uint64_t)v127;
LABEL_27:
        uint64_t v128 = swift_getKeyPath();
        char v129 = v55;
        uint64_t v90 = v184;
        ArtworkPredicateKeyPath.init(root:keyPath:)(v75, v128, v183, v184);
        char v206 = v129;
        uint64_t v130 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929F90);
        unint64_t v131 = sub_24EA81B6C();
        uint64_t v109 = v185;
        uint64_t v132 = swift_getWitnessTable();
        uint64_t v201 = v130;
        uint64_t v202 = v109;
        unint64_t v203 = v131;
        unint64_t v204 = v132;
        uint64_t v112 = MEMORY[0x263F8D6E0];
        uint64_t v205 = MEMORY[0x263F8D6E0];
        uint64_t v133 = type metadata accessor for ArtworkPredicateComparison();
        uint64_t v134 = v194;
        v194[3] = v133;
        v134[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
        __int16 v117 = __swift_allocate_boxed_opaque_existential_1(v134);
        char v118 = &v207;
        long long v116 = (uint64_t *)v90;
        uint64_t v119 = v130;
        uint64_t v120 = v109;
LABEL_28:
        static ArtworkPredicate.makeComparison<A, B>(lhs:rhs:comparisonOperator:)((uint64_t)v118, (uint64_t)v116, v119, v120, v112, (uint64_t)v117);
        (*(void (**)(char *, uint64_t))(v186 + 8))(v90, v109);
      }
      else
      {
        if (v62) {
          goto LABEL_42;
        }
        id v63 = v187;
        sub_24EA81978((uint64_t)v57, (uint64_t)v187);
        LOBYTE(v63) = *(unsigned char *)v63;
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A28);
        id v65 = v194;
        v194[3] = v64;
        v65[4] = (uint64_t)&protocol witness table for ArtworkPredicateComparison<A, B>;
        *(unsigned char *)id v65 = v61;
        *((unsigned char *)v65 + 1) = (_BYTE)v63;
        *((unsigned char *)v65 + 2) = v55;
      }
      goto LABEL_29;
  }
}

uint64_t sub_24EA818B8(uint64_t a1)
{
  uint64_t v2 = sub_24EA940B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA81914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA940B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA81978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA940B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA819DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699299E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA81A3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_24EA81A7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 32))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_24EA81AC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 40))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_24EA81B0C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 40))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_24EA81B54()
{
  return 16;
}

__n128 sub_24EA81B60(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_24EA81B6C()
{
  unint64_t result = qword_269929F98;
  if (!qword_269929F98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929F90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929F98);
  }
  return result;
}

uint64_t sub_24EA81BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return DynamicPredicateComparisonDescriptor.makePredicateExpression<A>(using:)(a1, a2, a3);
}

uint64_t sub_24EA81BE0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24EA81D14(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24EA81ED0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24EA81ED0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24EA81CB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 32))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_24EA81CFC()
{
  return 16;
}

__n128 sub_24EA81D08(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA81D14(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24EA94840();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24EA81F2C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24EA94920();
  if (!v8)
  {
    sub_24EA94980();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24EA949D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24EA81ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24EA81F2C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24EA81FC4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24EA821A4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24EA821A4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24EA81FC4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24EA8213C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24EA948E0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24EA94980();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24EA94630();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24EA949D0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24EA94980();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24EA8213C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929FA0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24EA821A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269929FA0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24EA949D0();
  __break(1u);
  return result;
}

uint64_t sub_24EA822F4(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v51 = (char *)a2;
  uint64_t v2 = sub_24EA93E70();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24EA93E40();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC88);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_24EA1E564(v50, (uint64_t)v22, &qword_26B1CFC70);
  sub_24EA1E564((uint64_t)v51, v23, &qword_26B1CFC70);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v51 = v7;
    uint64_t v30 = v47;
    sub_24EA1E564((uint64_t)v22, (uint64_t)v18, &qword_26B1CFC70);
    uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68) + 48);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v34 = (uint64_t)v12;
      sub_24EA1E61C(v23, (uint64_t)v12, &qword_26B1CFF60);
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      uint64_t v45 = v9;
      uint64_t v36 = v9;
      uint64_t v37 = v4;
      v35(v36, &v18[v31], v4);
      uint64_t v38 = (uint64_t)v51;
      v35(v51, (char *)(v23 + v31), v37);
      type metadata accessor for FetchedImageAsset();
      sub_24EA8CB04(&qword_26B1CFA60, (void (*)(uint64_t))type metadata accessor for FetchedImageAsset);
      sub_24EA68DEC();
      sub_24EA675A0();
      uint64_t v39 = v45;
      char v40 = sub_24EA94BE0();
      sub_24EA21258((uint64_t)v18, &qword_26B1CFF60);
      if (v40)
      {
        char v28 = sub_24EA93E20();
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v41(v38, v37);
        v41((uint64_t)v39, v37);
        sub_24EA21258(v34, &qword_26B1CFF60);
      }
      else
      {
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v42(v38, v37);
        v42((uint64_t)v39, v37);
        sub_24EA21258(v34, &qword_26B1CFF60);
        char v28 = 0;
      }
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(&v18[v31], v4);
    sub_24EA21258((uint64_t)v18, &qword_26B1CFF60);
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24EA1E564((uint64_t)v22, (uint64_t)v16, &qword_26B1CFC70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v48;
      uint64_t v25 = v49;
      uint64_t v27 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v46, v23, v49);
      char v28 = sub_24EA93E50();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
      v29(v27, v25);
      v29(v16, v25);
LABEL_18:
      uint64_t v33 = &qword_26B1CFC70;
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
LABEL_14:
    char v28 = 0;
    uint64_t v33 = &qword_26B1CFC88;
    goto LABEL_19;
  }
  int v32 = swift_getEnumCaseMultiPayload();
  if (v32 == 2) {
    uint64_t v33 = &qword_26B1CFC70;
  }
  else {
    uint64_t v33 = &qword_26B1CFC88;
  }
  if (v32 == 2) {
    char v28 = -1;
  }
  else {
    char v28 = 0;
  }
LABEL_19:
  sub_24EA21258((uint64_t)v22, v33);
  return v28 & 1;
}

uint64_t sub_24EA82870(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v41 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v44 = a1;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v14 << 6);
    }
    else
    {
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_38;
      }
      if (v17 >= v41) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v40 + 8 * v17);
      ++v14;
      if (!v18)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v41) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v40 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 2;
          if (v17 + 2 >= v41) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v40 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 3;
            if (v17 + 3 >= v41) {
              return swift_release();
            }
            unint64_t v18 = *(void *)(v40 + 8 * v14);
            if (!v18)
            {
              int64_t v19 = v17 + 4;
              if (v19 >= v41) {
                return swift_release();
              }
              unint64_t v18 = *(void *)(v40 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v41) {
                    return swift_release();
                  }
                  unint64_t v18 = *(void *)(v40 + 8 * v14);
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
      }
LABEL_23:
      unint64_t v13 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    }
    uint64_t v20 = (double *)(*(void *)(v44 + 48) + 16 * v16);
    double v21 = *v20;
    double v22 = v20[1];
    swift_storeEnumTagMultiPayload();
    sub_24EA1E61C((uint64_t)v9, (uint64_t)v6, &qword_26B1CFC70);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = (void *)*a2;
    uint64_t v24 = v45;
    *a2 = 0x8000000000000000;
    unint64_t v26 = sub_24EA62BB8(v21, v22);
    uint64_t v27 = v24[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (v24[3] >= v29)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v33 = v45;
        if (v25) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_24EA8B424();
        uint64_t v33 = v45;
        if (v30) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_24EA8A440(v29, isUniquelyReferenced_nonNull_native);
      unint64_t v31 = sub_24EA62BB8(v21, v22);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_40;
      }
      unint64_t v26 = v31;
      uint64_t v33 = v45;
      if (v30)
      {
LABEL_4:
        sub_24EA67538((uint64_t)v6, v33[7] + *(void *)(v42 + 72) * v26);
        goto LABEL_5;
      }
    }
    v33[(v26 >> 6) + 8] |= 1 << v26;
    uint64_t v34 = (double *)(v33[6] + 16 * v26);
    *uint64_t v34 = v21;
    v34[1] = v22;
    sub_24EA1E61C((uint64_t)v6, v33[7] + *(void *)(v42 + 72) * v26, &qword_26B1CFC70);
    uint64_t v35 = v33[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_37;
    }
    v33[2] = v37;
LABEL_5:
    *a2 = v33;
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  type metadata accessor for CGSize();
  uint64_t result = sub_24EA94B00();
  __break(1u);
  return result;
}

uint64_t sub_24EA82C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24EA8B91C(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = sub_24EA93DE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_24EA8B9BC(result, v5, a1, a2);
    uint64_t v12 = sub_24EA93DE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t sub_24EA82D08(uint64_t a1)
{
  uint64_t v37 = a1;
  uint64_t v34 = sub_24EA93DE0();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  BOOL v36 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24EA93EB0();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  char v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24EA93E70();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ImageAssetFeature.TaskIdentifier(0);
  MEMORY[0x270FA5388](v17);
  int64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA8C29C((uint64_t)v38, (uint64_t)v19, type metadata accessor for ImageAssetFeature.TaskIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
    sub_24EA8C63C((uint64_t)v19, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    sub_24EA94B80();
    sub_24EA1E564((uint64_t)v12, (uint64_t)v9, &qword_26B1CFD40);
    uint64_t v20 = v33;
    int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v9, 1, v35);
    uint64_t v22 = v34;
    uint64_t v23 = v32;
    uint64_t v24 = v36;
    if (v21 == 1)
    {
      sub_24EA94B90();
    }
    else
    {
      unint64_t v26 = v6;
      uint64_t v27 = v6;
      uint64_t v28 = v35;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v9, v35);
      sub_24EA94B90();
      sub_24EA8CB04(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
      sub_24EA94580();
      uint64_t v29 = v26;
      uint64_t v24 = v36;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v29, v28);
    }
    sub_24EA94610();
    sub_24EA94610();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v38;
    sub_24EA1E564((uint64_t)&v12[*(int *)(v10 + 28)], (uint64_t)v38, &qword_26B1CF9E8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v30, 1, v22) == 1)
    {
      sub_24EA94B90();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v24, v30, v22);
      sub_24EA94B90();
      sub_24EA8CB04(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
      sub_24EA94580();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
    }
    sub_24EA34314();
    return sub_24EA8C5DC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    sub_24EA94B80();
    sub_24EA8CB04(&qword_26B1CFA00, MEMORY[0x263F07508]);
    sub_24EA94580();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_24EA83340()
{
  sub_24EA94B70();
  sub_24EA82D08((uint64_t)v1);
  return sub_24EA94BB0();
}

uint64_t sub_24EA83384()
{
  sub_24EA94B70();
  sub_24EA82D08((uint64_t)v1);
  return sub_24EA94BB0();
}

void sub_24EA833C4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  objc_msgSend(v0, sel_setCountLimit_, 0);
  objc_msgSend(v0, sel_baf_setEvictsObjectsWhenApplicationEntersBackground_, 0);

  qword_26B1D1F10 = (uint64_t)v0;
}

__n128 ImageAssetFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24EA93E60();
  uint64_t v4 = a2 + *(int *)(type metadata accessor for ImageAssetFeature(0) + 20);
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v5;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v4 + 32) = result;
  return result;
}

uint64_t type metadata accessor for ImageAssetFeature(uint64_t a1)
{
  return sub_24EA64C48(a1, (uint64_t *)&unk_26B1CFBD0);
}

uint64_t ImageAssetFeature.dispose(localState:sharedState:)(void *a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_24EA8C104(v2, (uint64_t (*)(char *, double, double))sub_24EA83610, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  sub_24EA82870(v3, a1);
  return swift_release();
}

uint64_t sub_24EA83518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EA93E70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a2, v7);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a2) = sub_24EA822F4(a1, (uint64_t)v6);
  sub_24EA21258((uint64_t)v6, &qword_26B1CFC70);
  return a2 & 1;
}

uint64_t sub_24EA83610(uint64_t a1)
{
  return sub_24EA83518(a1, *(void *)(v1 + 16));
}

uint64_t ImageAssetFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, char *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v173 = a2;
  uint64_t v174 = (char *)a4;
  uint64_t v168 = a3;
  uint64_t v154 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAB8);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FetchedImageAsset();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v155 = (uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImageAssetFeature(0);
  uint64_t v149 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v150 = v10;
  uint64_t v151 = (uint64_t)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = type metadata accessor for ImageAssetFeature.TaskIdentifier(0);
  MEMORY[0x270FA5388](v159);
  uint64_t v153 = (char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v158 = (uint64_t)&v146 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v148 = (uint64_t)&v146 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE68);
  uint64_t v160 = *(void *)(v16 - 8);
  uint64_t v161 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v156 = (char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v157 = (char *)&v146 - v19;
  uint64_t v20 = type metadata accessor for ImageAsset();
  uint64_t v167 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v167 + 64);
  MEMORY[0x270FA5388](v20);
  uint64_t v152 = (uint64_t)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v166 = (uint64_t)&v146 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v147 = (uint64_t)&v146 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v169 = (uint64_t)&v146 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC78);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v163 = (char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v170 = *(void *)(v30 - 8);
  uint64_t v171 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v146 - v34;
  MEMORY[0x270FA5388](v36);
  uint64_t v162 = (uint64_t)&v146 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v146 - v39;
  uint64_t v41 = sub_24EA93E70();
  uint64_t v164 = *(void *)(v41 - 8);
  uint64_t v165 = v41;
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v146 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for ImageAssetAction();
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = (double *)((char *)&v146 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (double *)((char *)&v146 - v48);
  sub_24EA8C29C((uint64_t)v174, (uint64_t)&v146 - v48, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v64 = *(void *)v173;
      if (*(void *)(*(void *)v173 + 16))
      {
        char v65 = *(unsigned char *)v49;
        double v66 = v49[1];
        double v67 = v49[2];
        uint64_t result = sub_24EA62BB8(v66, v67);
        if (v68)
        {
          uint64_t v69 = v170;
          sub_24EA1E564(*(void *)(v64 + 56) + *(void *)(v170 + 72) * result, (uint64_t)v40, &qword_26B1CFC70);
          uint64_t v70 = v171;
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            int v55 = &qword_26B1CFC70;
            uint64_t v56 = (uint64_t)v40;
            return sub_24EA21258(v56, v55);
          }
          uint64_t v71 = v164;
          uint64_t v72 = v165;
          (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v43, v40, v165);
          if (sub_24EA93E50())
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68);
            uint64_t v73 = v163;
            unsigned char *v163 = v65;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
            swift_storeEnumTagMultiPayload();
            sub_24EA93E30();
            swift_storeEnumTagMultiPayload();
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v69 + 56))(v73, 0, 1, v70);
            sub_24EA54B34((uint64_t)v73, v66, v67);
          }
          return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v43, v72);
        }
      }
      return result;
    case 2:
      uint64_t v74 = (double *)((char *)v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48));
      double v75 = *v74;
      double v76 = v74[1];
      sub_24EA8C63C((uint64_t)v49, v169, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v77 = v173;
      uint64_t v78 = *(void *)v173;
      if (*(void *)(*(void *)v173 + 16) && (unint64_t v79 = sub_24EA62BB8(v75, v76), (v80 & 1) != 0))
      {
        uint64_t v81 = v170;
        sub_24EA1E564(*(void *)(v78 + 56) + *(void *)(v170 + 72) * v79, (uint64_t)v35, &qword_26B1CFC70);
        uint64_t v82 = v162;
        sub_24EA1E61C((uint64_t)v35, v162, &qword_26B1CFC70);
        uint64_t v83 = v171;
        if ((sub_24EA536F0() & 1) == 0)
        {
LABEL_15:
          uint64_t v84 = v82;
LABEL_32:
          sub_24EA21258(v84, &qword_26B1CFC70);
          int v62 = type metadata accessor for ImageAsset;
          uint64_t v63 = v169;
          return sub_24EA8C5DC(v63, (uint64_t (*)(void))v62);
        }
      }
      else
      {
        uint64_t v82 = v162;
        uint64_t v83 = v171;
        swift_storeEnumTagMultiPayload();
        uint64_t v81 = v170;
        if ((sub_24EA536F0() & 1) == 0) {
          goto LABEL_15;
        }
      }
      uint64_t v116 = *((void *)v77 + 1);
      __int16 v117 = v163;
      uint64_t v118 = v172;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v164 + 16))(v163, v172, v165);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v81 + 56))(v117, 0, 1, v83);
      sub_24EA54B34((uint64_t)v117, v75, v76);
      uint64_t v119 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
      uint64_t v120 = v157;
      uint64_t v174 = &v157[v119[16]];
      uint64_t v121 = &v157[v119[20]];
      uint64_t v173 = &v157[v119[24]];
      uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      uint64_t v123 = v148;
      uint64_t v124 = (double *)(v148 + *(int *)(v122 + 48));
      uint64_t v125 = v169;
      sub_24EA8C29C(v169, v148, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      *uint64_t v124 = v75;
      v124[1] = v76;
      swift_storeEnumTagMultiPayload();
      sub_24EA8C29C(v123, v158, type metadata accessor for ImageAssetFeature.TaskIdentifier);
      sub_24EA8CB04(&qword_26B1CFBA8, (void (*)(uint64_t))type metadata accessor for ImageAssetFeature.TaskIdentifier);
      sub_24EA948C0();
      sub_24EA8C5DC(v123, type metadata accessor for ImageAssetFeature.TaskIdentifier);
      sub_24EA94740();
      uint64_t v126 = *MEMORY[0x263F39570];
      uint64_t v127 = sub_24EA94500();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 104))(v121, v126, v127);
      uint64_t v128 = v147;
      sub_24EA8C29C(v125, v147, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v129 = v118;
      uint64_t v130 = v151;
      sub_24EA8C29C(v129, v151, type metadata accessor for ImageAssetFeature);
      unint64_t v131 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
      unint64_t v132 = (v21 + v131 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v133 = (v132 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v134 = (*(unsigned __int8 *)(v149 + 80) + v133 + 8) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
      uint64_t v135 = swift_allocObject();
      sub_24EA8C63C(v128, v135 + v131, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      os_log_type_t v136 = (double *)(v135 + v132);
      double *v136 = v75;
      v136[1] = v76;
      *(void *)(v135 + v133) = v116;
      sub_24EA8C63C(v130, v135 + v134, type metadata accessor for ImageAssetFeature);
      uint64_t v137 = v173;
      *(void *)uint64_t v173 = &unk_269929FC0;
      *((void *)v137 + 1) = v135;
      uint64_t v138 = *MEMORY[0x263F39588];
      uint64_t v139 = sub_24EA94510();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v139 - 8) + 104))(v174, v138, v139);
      uint64_t v141 = v160;
      uint64_t v140 = v161;
      (*(void (**)(char *, void, uint64_t))(v160 + 104))(v120, *MEMORY[0x263F39530], v161);
      uint64_t v142 = v168;
      unint64_t v143 = *v168;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v143 = sub_24EA437D0(0, *(void *)(v143 + 16) + 1, 1, v143);
      }
      unint64_t v145 = *(void *)(v143 + 16);
      unint64_t v144 = *(void *)(v143 + 24);
      if (v145 >= v144 >> 1) {
        unint64_t v143 = sub_24EA437D0(v144 > 1, v145 + 1, 1, v143);
      }
      *(void *)(v143 + 16) = v145 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v141 + 32))(v143+ ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80))+ *(void *)(v141 + 72) * v145, v157, v140);
      *uint64_t v142 = v143;
      uint64_t v84 = v162;
      goto LABEL_32;
    case 3:
      uint64_t v85 = (double *)((char *)v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48));
      double v86 = *v85;
      double v87 = v85[1];
      uint64_t v88 = v155;
      sub_24EA8C63C((uint64_t)v49, v155, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      uint64_t v89 = *(void *)v173;
      if (!*(void *)(*(void *)v173 + 16)) {
        goto LABEL_20;
      }
      unint64_t v90 = sub_24EA62BB8(v86, v87);
      if ((v91 & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v92 = v170;
      sub_24EA1E564(*(void *)(v89 + 56) + *(void *)(v170 + 72) * v90, (uint64_t)v32, &qword_26B1CFC70);
      uint64_t v93 = v171;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_24EA8C5DC(v88, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
        int v55 = &qword_26B1CFC70;
        uint64_t v56 = (uint64_t)v32;
        return sub_24EA21258(v56, v55);
      }
      (*(void (**)(char *, uint64_t))(v164 + 8))(v32, v165);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF68);
      uint64_t v94 = v163;
      sub_24EA8C29C(v88, (uint64_t)v163, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF60);
      swift_storeEnumTagMultiPayload();
      sub_24EA93E30();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v92 + 56))(v94, 0, 1, v93);
      sub_24EA54B34((uint64_t)v94, v86, v87);
LABEL_20:
      int v62 = type metadata accessor for FetchedImageAsset;
      uint64_t v63 = v88;
      return sub_24EA8C5DC(v63, (uint64_t (*)(void))v62);
    case 4:
    case 5:
      uint64_t v52 = *(void *)v49;
      uint64_t v51 = *((void *)v49 + 1);
      uint64_t v53 = type metadata accessor for ImageAssetState();
      sub_24EA1E564((uint64_t)&v173[*(int *)(v53 + 24)], (uint64_t)v6, &qword_26B1CFAB8);
      uint64_t v54 = v167;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v6, 1, v20) == 1)
      {
        int v55 = &qword_26B1CFAB8;
        uint64_t v56 = (uint64_t)v6;
        return sub_24EA21258(v56, v55);
      }
      else
      {
        uint64_t v95 = v166;
        sub_24EA8C63C((uint64_t)v6, v166, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v96 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFEE8);
        uint64_t v97 = v156;
        uint64_t v174 = &v156[v96[12]];
        uint64_t v98 = &v156[v96[16]];
        uint64_t v173 = &v156[v96[20]];
        int v99 = &v156[v96[24]];
        uint64_t v100 = (uint64_t)v153;
        (*(void (**)(char *, uint64_t, uint64_t))(v164 + 16))(v153, v172, v165);
        swift_storeEnumTagMultiPayload();
        sub_24EA8C29C(v100, v158, type metadata accessor for ImageAssetFeature.TaskIdentifier);
        sub_24EA8CB04(&qword_26B1CFBA8, (void (*)(uint64_t))type metadata accessor for ImageAssetFeature.TaskIdentifier);
        sub_24EA948C0();
        sub_24EA8C5DC(v100, type metadata accessor for ImageAssetFeature.TaskIdentifier);
        uint64_t v101 = *MEMORY[0x263F39590];
        uint64_t v102 = sub_24EA94510();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 104))(v98, v101, v102);
        uint64_t v103 = *MEMORY[0x263F39570];
        uint64_t v104 = sub_24EA94500();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 104))(v173, v103, v104);
        uint64_t v105 = v95;
        uint64_t v106 = v152;
        sub_24EA8C29C(v105, v152, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        unint64_t v107 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
        uint64_t v108 = swift_allocObject();
        sub_24EA8C63C(v106, v108 + v107, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v109 = (void *)(v108 + ((v21 + v107 + 7) & 0xFFFFFFFFFFFFFFF8));
        *uint64_t v109 = v52;
        v109[1] = v51;
        *(void *)int v99 = &unk_269929FB0;
        *((void *)v99 + 1) = v108;
        sub_24EA94740();
        uint64_t v111 = v160;
        uint64_t v110 = v161;
        (*(void (**)(char *, void, uint64_t))(v160 + 104))(v97, *MEMORY[0x263F39530], v161);
        uint64_t v112 = v168;
        unint64_t v113 = *v168;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v113 = sub_24EA437D0(0, *(void *)(v113 + 16) + 1, 1, v113);
        }
        unint64_t v115 = *(void *)(v113 + 16);
        unint64_t v114 = *(void *)(v113 + 24);
        if (v115 >= v114 >> 1) {
          unint64_t v113 = sub_24EA437D0(v114 > 1, v115 + 1, 1, v113);
        }
        *(void *)(v113 + 16) = v115 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v111 + 32))(v113+ ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))+ *(void *)(v111 + 72) * v115, v97, v110);
        *uint64_t v112 = v113;
        int v62 = type metadata accessor for ImageAsset;
        uint64_t v63 = v166;
        return sub_24EA8C5DC(v63, (uint64_t (*)(void))v62);
      }
    default:
      double v57 = *v49;
      double v58 = v49[1];
      uint64_t v59 = v163;
      uint64_t v60 = v171;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v170 + 56))(v59, 0, 1, v60);
      char v61 = v173;
      sub_24EA54B34((uint64_t)v59, v57, v58);
      double *v46 = v57;
      v46[1] = v58;
      swift_storeEnumTagMultiPayload();
      ImageAssetFeature.reduce(localState:sharedState:sideEffects:action:)(v154, v61, v168, v46);
      int v62 = type metadata accessor for ImageAssetAction;
      uint64_t v63 = (uint64_t)v46;
      return sub_24EA8C5DC(v63, (uint64_t (*)(void))v62);
  }
}

uint64_t sub_24EA84858(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  *(void *)(v6 + 184) = a3;
  *(double *)(v6 + 168) = a5;
  *(double *)(v6 + 176) = a6;
  *(double *)(v6 + 160) = a4;
  *(void *)(v6 + 144) = a1;
  *(void *)(v6 + 152) = a2;
  uint64_t v7 = sub_24EA94700();
  *(void *)(v6 + 192) = v7;
  *(void *)(v6 + 200) = *(void *)(v7 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  *(void *)(v6 + 216) = type metadata accessor for ImageAsset();
  *(void *)(v6 + 224) = swift_task_alloc();
  *(void *)(v6 + 232) = swift_task_alloc();
  *(void *)(v6 + 240) = swift_task_alloc();
  *(void *)(v6 + 248) = type metadata accessor for ImageAssetAction();
  *(void *)(v6 + 256) = swift_task_alloc();
  *(void *)(v6 + 264) = type metadata accessor for FetchedImageAsset();
  *(void *)(v6 + 272) = swift_task_alloc();
  *(void *)(v6 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  *(void *)(v6 + 288) = swift_task_alloc();
  *(void *)(v6 + 296) = swift_task_alloc();
  uint64_t v8 = sub_24EA93DE0();
  *(void *)(v6 + 304) = v8;
  *(void *)(v6 + 312) = *(void *)(v8 - 8);
  *(void *)(v6 + 320) = swift_task_alloc();
  *(void *)(v6 + 328) = swift_task_alloc();
  *(void *)(v6 + 336) = swift_task_alloc();
  sub_24EA94730();
  *(void *)(v6 + 344) = sub_24EA94720();
  uint64_t v10 = sub_24EA946D0();
  *(void *)(v6 + 352) = v10;
  *(void *)(v6 + 360) = v9;
  return MEMORY[0x270FA2498](sub_24EA84ACC, v10, v9);
}

uint64_t sub_24EA84ACC()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  sub_24EA728D4(v3, *(double *)(v0 + 160), *(double *)(v0 + 168), *(double *)(v0 + 176));
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 368) = v4;
  *(void *)(v0 + 376) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 296);
    swift_release();
    sub_24EA21258(v5, &qword_26B1CF9E8);
    sub_24EA675A0();
    swift_allocError();
    unsigned char *v6 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v10 = *(void *)(v0 + 304);
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v12 = *(void *)(v0 + 296);
    uint64_t v13 = *(void *)(v0 + 184);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
    *(void *)(v0 + 384) = v14;
    *(void *)(v0 + 392) = (v11 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v14(v9, v12, v10);
    uint64_t v15 = *(int *)(type metadata accessor for ImageAssetFeature(0) + 20);
    *(_DWORD *)(v0 + 624) = v15;
    uint64_t v18 = (uint64_t (*)(uint64_t))(*(void *)(v13 + v15) + **(int **)(v13 + v15));
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_24EA84D58;
    uint64_t v17 = *(void *)(v0 + 336);
    return v18(v17);
  }
}

uint64_t sub_24EA84D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[51] = a1;
  v5[52] = a2;
  v5[53] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[45];
  uint64_t v7 = v4[44];
  if (v2) {
    uint64_t v8 = sub_24EA88D8C;
  }
  else {
    uint64_t v8 = sub_24EA84EA0;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24EA84EA0()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void **)(v0 + 424);
  sub_24EA94770();
  if (v1)
  {
    sub_24EA4444C(*(void *)(v0 + 408), *(void *)(v0 + 416));
    *(void *)(v0 + 472) = v1;
    *(void *)(v0 + 128) = v1;
    id v2 = v1;
    *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
    sub_24EA6764C(0, &qword_2699299A0);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v3 = *(void **)(v0 + 96);
    *(void *)(v0 + 488) = v3;
    id v4 = objc_msgSend(v3, sel_domain);
    uint64_t v5 = sub_24EA945F0();
    uint64_t v7 = v6;

    if (v5 == sub_24EA945F0() && v7 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v10 = sub_24EA94AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {

LABEL_9:
        *(void *)(v0 + 48) = v1;
        id v11 = v1;
        if (swift_dynamicCast())
        {
          swift_release();

          if (qword_269928EC8 != -1) {
            swift_once();
          }
          uint64_t v12 = *(void *)(v0 + 224);
          uint64_t v13 = *(void *)(v0 + 152);
          uint64_t v14 = sub_24EA941C0();
          __swift_project_value_buffer(v14, (uint64_t)qword_269931C48);
          sub_24EA8C29C(v13, v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
          uint64_t v15 = sub_24EA941A0();
          os_log_type_t v16 = sub_24EA947B0();
          BOOL v17 = os_log_type_enabled(v15, v16);
          uint64_t v18 = *(void *)(v0 + 336);
          uint64_t v19 = *(void *)(v0 + 304);
          uint64_t v20 = *(void *)(v0 + 312);
          if (v17)
          {
            uint64_t v84 = *(void *)(v0 + 336);
            uint64_t v22 = *(void *)(v0 + 224);
            uint64_t v21 = *(void *)(v0 + 232);
            uint64_t v24 = *(void *)(v0 + 160);
            uint64_t v23 = *(void *)(v0 + 168);
            uint64_t v25 = swift_slowAlloc();
            uint64_t type = swift_slowAlloc();
            v88[0] = type;
            *(_DWORD *)uint64_t v25 = 136315394;
            sub_24EA8C29C(v22, v21, (uint64_t (*)(void))type metadata accessor for ImageAsset);
            uint64_t v26 = sub_24EA94600();
            *(void *)(v0 + 88) = sub_24EA81BE0(v26, v27, v88);
            sub_24EA94830();
            swift_bridgeObjectRelease();
            sub_24EA8C5DC(v22, (uint64_t (*)(void))type metadata accessor for ImageAsset);
            *(_WORD *)(v25 + 12) = 2080;
            *(void *)(v0 + 32) = v24;
            *(void *)(v0 + 40) = v23;
            type metadata accessor for CGSize();
            uint64_t v28 = sub_24EA94600();
            *(void *)(v0 + 104) = sub_24EA81BE0(v28, v29, v88);
            sub_24EA94830();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24EA1C000, v15, v16, "Fetching %s for %s cancelled", (uint8_t *)v25, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x253348310](type, -1, -1);
            MEMORY[0x253348310](v25, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v84, v19);
          }
          else
          {
            uint64_t v74 = *(void *)(v0 + 224);

            sub_24EA8C5DC(v74, (uint64_t (*)(void))type metadata accessor for ImageAsset);
            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
          }
          (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          double v75 = *(uint64_t (**)(void))(v0 + 8);
          return v75();
        }
        else
        {

          if (qword_269928EC8 != -1) {
            swift_once();
          }
          uint64_t v30 = *(void *)(v0 + 336);
          uint64_t v32 = *(void *)(v0 + 312);
          uint64_t v31 = *(void *)(v0 + 320);
          uint64_t v33 = *(void *)(v0 + 304);
          uint64_t v34 = sub_24EA941C0();
          __swift_project_value_buffer(v34, (uint64_t)qword_269931C48);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
          id v35 = v1;
          id v36 = v1;
          uint64_t v37 = sub_24EA941A0();
          os_log_type_t v38 = sub_24EA947B0();
          BOOL v39 = os_log_type_enabled(v37, v38);
          uint64_t v41 = *(void *)(v0 + 312);
          uint64_t v40 = *(void *)(v0 + 320);
          uint64_t v42 = *(void *)(v0 + 304);
          if (v39)
          {
            os_log_t log = v37;
            uint64_t v43 = swift_slowAlloc();
            uint64_t v82 = (void *)swift_slowAlloc();
            uint64_t v85 = swift_slowAlloc();
            v88[0] = v85;
            *(_DWORD *)uint64_t v43 = 136446466;
            sub_24EA8CB04(&qword_2699299B0, MEMORY[0x263F06EA8]);
            uint64_t v44 = sub_24EA94AD0();
            os_log_type_t typea = v38;
            *(void *)(v0 + 72) = sub_24EA81BE0(v44, v45, v88);
            sub_24EA94830();
            swift_bridgeObjectRelease();
            uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
            v46(v40, v42);
            *(_WORD *)(v43 + 12) = 2114;
            id v47 = v1;
            uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v0 + 80) = v48;
            sub_24EA94830();
            *uint64_t v82 = v48;

            _os_log_impl(&dword_24EA1C000, log, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v43, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
            swift_arrayDestroy();
            MEMORY[0x253348310](v82, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253348310](v85, -1, -1);
            MEMORY[0x253348310](v43, -1, -1);
          }
          else
          {
            uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
            v46(*(void *)(v0 + 320), *(void *)(v0 + 304));
          }
          *(void *)(v0 + 592) = v46;
          uint64_t v76 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
          double v87 = (uint64_t (*)(uint64_t))(*(void *)(v76 + 32) + **(int **)(v76 + 32));
          uint64_t v77 = (void *)swift_task_alloc();
          *(void *)(v0 + 600) = v77;
          *uint64_t v77 = v0;
          v77[1] = sub_24EA88844;
          uint64_t v78 = *(void *)(v0 + 336);
          return v87(v78);
        }
      }
    }

    if (qword_269928EC8 != -1) {
      swift_once();
    }
    uint64_t v49 = *(void *)(v0 + 240);
    uint64_t v50 = *(void *)(v0 + 152);
    uint64_t v51 = sub_24EA941C0();
    __swift_project_value_buffer(v51, (uint64_t)qword_269931C48);
    sub_24EA8C29C(v50, v49, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v52 = sub_24EA941A0();
    os_log_type_t v53 = sub_24EA947B0();
    BOOL v54 = os_log_type_enabled(v52, v53);
    uint64_t v55 = *(void *)(v0 + 240);
    if (v54)
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v58 = *(void *)(v0 + 160);
      uint64_t v57 = *(void *)(v0 + 168);
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      v88[0] = v60;
      *(_DWORD *)uint64_t v59 = 136315394;
      sub_24EA8C29C(v55, v56, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v61 = sub_24EA94600();
      *(void *)(v0 + 120) = sub_24EA81BE0(v61, v62, v88);
      sub_24EA94830();
      swift_bridgeObjectRelease();
      sub_24EA8C5DC(v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      *(_WORD *)(v59 + 12) = 2080;
      *(void *)(v0 + 16) = v58;
      *(void *)(v0 + 24) = v57;
      type metadata accessor for CGSize();
      uint64_t v63 = sub_24EA94600();
      *(void *)(v0 + 136) = sub_24EA81BE0(v63, v64, v88);
      sub_24EA94830();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EA1C000, v52, v53, "Fetching fallback for %s with %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x253348310](v60, -1, -1);
      MEMORY[0x253348310](v59, -1, -1);
    }
    else
    {
      sub_24EA8C5DC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
    }

    char v65 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
    sub_24EA94800();
    unint64_t v67 = v66;
    unint64_t v69 = v68;
    double v86 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v65 + *v65);
    uint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v70;
    *uint64_t v70 = v0;
    v70[1] = sub_24EA8789C;
    uint64_t v71 = *(void *)(v0 + 152);
    v72.n128_u64[0] = v67;
    v73.n128_u64[0] = v69;
    return v86(v71, v72, v73);
  }
  else
  {
    *(unsigned char *)(v0 + 629) = *(unsigned char *)(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 216) + 24));
    return MEMORY[0x270FA2498](sub_24EA85A74, 0, 0);
  }
}

uint64_t sub_24EA85A74()
{
  char v1 = *(unsigned char *)(v0 + 629);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 432) = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(unsigned char *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v6;
  uint64_t v7 = sub_24EA6764C(0, (unint64_t *)&qword_26B1CFEE0);
  void *v6 = v0;
  v6[1] = sub_24EA85B9C;
  return MEMORY[0x270FA2360](v0 + 64, 0, 0, 0xD000000000000021, 0x800000024EA9AB80, sub_24EA67648, v5, v7);
}

uint64_t sub_24EA85B9C()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24EA86A24;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24EA85CB8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24EA85CB8()
{
  v0[57] = v0[8];
  return MEMORY[0x270FA2498](sub_24EA85CD8, v0[44], v0[45]);
}

uint64_t sub_24EA85CD8()
{
  uint64_t v107 = v0;
  uint64_t v1 = *(void **)(v0 + 448);
  sub_24EA94770();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 408);
    unint64_t v2 = *(void *)(v0 + 416);

    sub_24EA4444C(v3, v2);
    *(void *)(v0 + 472) = v1;
    *(void *)(v0 + 128) = v1;
    id v4 = v1;
    *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
    sub_24EA6764C(0, &qword_2699299A0);
    if (swift_dynamicCast())
    {
      uint64_t v5 = *(void **)(v0 + 96);
      *(void *)(v0 + 488) = v5;
      id v6 = objc_msgSend(v5, sel_domain);
      uint64_t v7 = sub_24EA945F0();
      uint64_t v9 = v8;

      if (v7 == sub_24EA945F0() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
LABEL_12:

        if (qword_269928EC8 != -1) {
          swift_once();
        }
        uint64_t v29 = *(void *)(v0 + 240);
        uint64_t v30 = *(void *)(v0 + 152);
        uint64_t v31 = sub_24EA941C0();
        __swift_project_value_buffer(v31, (uint64_t)qword_269931C48);
        sub_24EA8C29C(v30, v29, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v32 = sub_24EA941A0();
        os_log_type_t v33 = sub_24EA947B0();
        BOOL v34 = os_log_type_enabled(v32, v33);
        uint64_t v35 = *(void *)(v0 + 240);
        if (v34)
        {
          uint64_t v36 = *(void *)(v0 + 232);
          uint64_t v38 = *(void *)(v0 + 160);
          uint64_t v37 = *(void *)(v0 + 168);
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          v106[0] = v40;
          *(_DWORD *)uint64_t v39 = 136315394;
          sub_24EA8C29C(v35, v36, (uint64_t (*)(void))type metadata accessor for ImageAsset);
          uint64_t v41 = sub_24EA94600();
          *(void *)(v0 + 120) = sub_24EA81BE0(v41, v42, v106);
          sub_24EA94830();
          swift_bridgeObjectRelease();
          sub_24EA8C5DC(v35, (uint64_t (*)(void))type metadata accessor for ImageAsset);
          *(_WORD *)(v39 + 12) = 2080;
          *(void *)(v0 + 16) = v38;
          *(void *)(v0 + 24) = v37;
          type metadata accessor for CGSize();
          uint64_t v43 = sub_24EA94600();
          *(void *)(v0 + 136) = sub_24EA81BE0(v43, v44, v106);
          sub_24EA94830();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24EA1C000, v32, v33, "Fetching fallback for %s with %s", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x253348310](v40, -1, -1);
          MEMORY[0x253348310](v39, -1, -1);
        }
        else
        {
          sub_24EA8C5DC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
        }

        unint64_t v45 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
        sub_24EA94800();
        unint64_t v47 = v46;
        unint64_t v49 = v48;
        uint64_t v104 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v45 + *v45);
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 496) = v50;
        void *v50 = v0;
        v50[1] = sub_24EA8789C;
        uint64_t v51 = *(void *)(v0 + 152);
        v52.n128_u64[0] = v47;
        v53.n128_u64[0] = v49;
        return v104(v51, v52, v53);
      }
      char v28 = sub_24EA94AE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_12;
      }
    }
    *(void *)(v0 + 48) = v1;
    id v54 = v1;
    if (swift_dynamicCast())
    {
      swift_release();

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 224);
      uint64_t v56 = *(void *)(v0 + 152);
      uint64_t v57 = sub_24EA941C0();
      __swift_project_value_buffer(v57, (uint64_t)qword_269931C48);
      sub_24EA8C29C(v56, v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v58 = sub_24EA941A0();
      os_log_type_t v59 = sub_24EA947B0();
      BOOL v60 = os_log_type_enabled(v58, v59);
      uint64_t v61 = *(void *)(v0 + 336);
      uint64_t v62 = *(void *)(v0 + 304);
      uint64_t v63 = *(void *)(v0 + 312);
      if (v60)
      {
        uint64_t v102 = *(void *)(v0 + 336);
        uint64_t v65 = *(void *)(v0 + 224);
        uint64_t v64 = *(void *)(v0 + 232);
        uint64_t v67 = *(void *)(v0 + 160);
        uint64_t v66 = *(void *)(v0 + 168);
        uint64_t v68 = swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        v106[0] = type;
        *(_DWORD *)uint64_t v68 = 136315394;
        sub_24EA8C29C(v65, v64, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v69 = sub_24EA94600();
        *(void *)(v0 + 88) = sub_24EA81BE0(v69, v70, v106);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        sub_24EA8C5DC(v65, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        *(_WORD *)(v68 + 12) = 2080;
        *(void *)(v0 + 32) = v67;
        *(void *)(v0 + 40) = v66;
        type metadata accessor for CGSize();
        uint64_t v71 = sub_24EA94600();
        *(void *)(v0 + 104) = sub_24EA81BE0(v71, v72, v106);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24EA1C000, v58, v59, "Fetching %s for %s cancelled", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253348310](type, -1, -1);
        MEMORY[0x253348310](v68, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v102, v62);
      }
      else
      {
        uint64_t v92 = *(void *)(v0 + 224);

        sub_24EA8C5DC(v92, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
      }
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v93 = *(uint64_t (**)(void))(v0 + 8);
      return v93();
    }
    else
    {

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v73 = *(void *)(v0 + 336);
      uint64_t v75 = *(void *)(v0 + 312);
      uint64_t v74 = *(void *)(v0 + 320);
      uint64_t v76 = *(void *)(v0 + 304);
      uint64_t v77 = sub_24EA941C0();
      __swift_project_value_buffer(v77, (uint64_t)qword_269931C48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v74, v73, v76);
      id v78 = v1;
      id v79 = v1;
      char v80 = sub_24EA941A0();
      os_log_type_t v81 = sub_24EA947B0();
      BOOL v82 = os_log_type_enabled(v80, v81);
      uint64_t v84 = *(void *)(v0 + 312);
      uint64_t v83 = *(void *)(v0 + 320);
      uint64_t v85 = *(void *)(v0 + 304);
      if (v82)
      {
        os_log_t log = v80;
        uint64_t v86 = swift_slowAlloc();
        uint64_t v100 = (void *)swift_slowAlloc();
        uint64_t v103 = swift_slowAlloc();
        v106[0] = v103;
        *(_DWORD *)uint64_t v86 = 136446466;
        sub_24EA8CB04(&qword_2699299B0, MEMORY[0x263F06EA8]);
        uint64_t v87 = sub_24EA94AD0();
        os_log_type_t typea = v81;
        *(void *)(v0 + 72) = sub_24EA81BE0(v87, v88, v106);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v89(v83, v85);
        *(_WORD *)(v86 + 12) = 2114;
        id v90 = v1;
        uint64_t v91 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 80) = v91;
        sub_24EA94830();
        *uint64_t v100 = v91;

        _os_log_impl(&dword_24EA1C000, log, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v86, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
        swift_arrayDestroy();
        MEMORY[0x253348310](v100, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253348310](v103, -1, -1);
        MEMORY[0x253348310](v86, -1, -1);
      }
      else
      {
        uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v89(*(void *)(v0 + 320), *(void *)(v0 + 304));
      }
      *(void *)(v0 + 592) = v89;
      uint64_t v94 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
      uint64_t v105 = (uint64_t (*)(uint64_t))(*(void *)(v94 + 32) + **(int **)(v94 + 32));
      uint64_t v95 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v95;
      *uint64_t v95 = v0;
      v95[1] = sub_24EA88844;
      uint64_t v96 = *(void *)(v0 + 336);
      return v105(v96);
    }
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 264);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 168);
    sub_24EA8C29C(*(void *)(v0 + 152), v11, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v15 = (void *)(v11 + *(int *)(v12 + 20));
    *uint64_t v15 = v14;
    v15[1] = v13;
    if (qword_26B1CFBA0 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void *)(v0 + 456);
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 256);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 168);
    uint64_t v21 = (void *)qword_26B1D1F10;
    sub_24EA8C29C(v17, *(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD60));
    id v22 = v21;
    uint64_t v23 = (void *)sub_24EA93FF0();
    objc_msgSend(v22, sel_setObject_forKey_, v16, v23);

    uint64_t v24 = (void *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48));
    sub_24EA8C29C(v17, v18, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    *uint64_t v24 = v20;
    v24[1] = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v25;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE70);
    *uint64_t v25 = v0;
    v25[1] = sub_24EA875EC;
    uint64_t v27 = *(void *)(v0 + 256);
    return MEMORY[0x270F252C8](v27, v26);
  }
}

uint64_t sub_24EA86A24()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  return MEMORY[0x270FA2498](sub_24EA86A88, v1, v2);
}

uint64_t sub_24EA86A88()
{
  uint64_t v88 = v0;
  sub_24EA4444C(*(void *)(v0 + 408), *(void *)(v0 + 416));
  uint64_t v1 = *(void **)(v0 + 448);
  *(void *)(v0 + 128) = v1;
  *(void *)(v0 + 472) = v1;
  id v2 = v1;
  *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
  sub_24EA6764C(0, &qword_2699299A0);
  if (!swift_dynamicCast())
  {
LABEL_8:

    *(void *)(v0 + 48) = v1;
    id v11 = v1;
    if (swift_dynamicCast())
    {
      swift_release();

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v12 = *(void *)(v0 + 224);
      uint64_t v13 = *(void *)(v0 + 152);
      uint64_t v14 = sub_24EA941C0();
      __swift_project_value_buffer(v14, (uint64_t)qword_269931C48);
      sub_24EA8C29C(v13, v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v15 = sub_24EA941A0();
      os_log_type_t v16 = sub_24EA947B0();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 336);
      uint64_t v19 = *(void *)(v0 + 304);
      uint64_t v20 = *(void *)(v0 + 312);
      if (v17)
      {
        os_log_t log = *(os_log_t *)(v0 + 304);
        uint64_t v22 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 232);
        uint64_t v24 = *(void *)(v0 + 160);
        uint64_t v23 = *(void *)(v0 + 168);
        uint64_t v25 = swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        uint64_t v87 = type;
        *(_DWORD *)uint64_t v25 = 136315394;
        sub_24EA8C29C(v22, v21, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v26 = sub_24EA94600();
        *(void *)(v0 + 88) = sub_24EA81BE0(v26, v27, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        sub_24EA8C5DC(v22, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        *(_WORD *)(v25 + 12) = 2080;
        *(void *)(v0 + 32) = v24;
        *(void *)(v0 + 40) = v23;
        type metadata accessor for CGSize();
        uint64_t v28 = sub_24EA94600();
        *(void *)(v0 + 104) = sub_24EA81BE0(v28, v29, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24EA1C000, v15, v16, "Fetching %s for %s cancelled", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253348310](type, -1, -1);
        MEMORY[0x253348310](v25, -1, -1);

        (*(void (**)(uint64_t, os_log_t))(v20 + 8))(v18, log);
      }
      else
      {
        uint64_t v75 = *(void *)(v0 + 224);

        sub_24EA8C5DC(v75, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
      return v76();
    }
    else
    {

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v30 = *(void *)(v0 + 336);
      uint64_t v32 = *(void *)(v0 + 312);
      uint64_t v31 = *(void *)(v0 + 320);
      uint64_t v33 = *(void *)(v0 + 304);
      uint64_t v34 = sub_24EA941C0();
      __swift_project_value_buffer(v34, (uint64_t)qword_269931C48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
      id v35 = v1;
      id v36 = v1;
      uint64_t v37 = sub_24EA941A0();
      os_log_type_t v38 = sub_24EA947B0();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v41 = *(void *)(v0 + 312);
      uint64_t v40 = *(void *)(v0 + 320);
      uint64_t v42 = *(void *)(v0 + 304);
      if (v39)
      {
        uint64_t v43 = swift_slowAlloc();
        BOOL v82 = (void *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v87 = v83;
        *(_DWORD *)uint64_t v43 = 136446466;
        sub_24EA8CB04(&qword_2699299B0, MEMORY[0x263F06EA8]);
        uint64_t v44 = sub_24EA94AD0();
        os_log_type_t typea = v38;
        *(void *)(v0 + 72) = sub_24EA81BE0(v44, v45, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(v40, v42);
        *(_WORD *)(v43 + 12) = 2114;
        id v47 = v1;
        uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 80) = v48;
        sub_24EA94830();
        *BOOL v82 = v48;

        _os_log_impl(&dword_24EA1C000, v37, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
        swift_arrayDestroy();
        MEMORY[0x253348310](v82, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253348310](v83, -1, -1);
        MEMORY[0x253348310](v43, -1, -1);
      }
      else
      {
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(*(void *)(v0 + 320), *(void *)(v0 + 304));
      }
      *(void *)(v0 + 592) = v46;
      uint64_t v77 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
      uint64_t v86 = (uint64_t (*)(uint64_t))(*(void *)(v77 + 32) + **(int **)(v77 + 32));
      id v78 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v78;
      *id v78 = v0;
      v78[1] = sub_24EA88844;
      uint64_t v79 = *(void *)(v0 + 336);
      return v86(v79);
    }
  }
  uint64_t v3 = *(void **)(v0 + 96);
  *(void *)(v0 + 488) = v3;
  id v4 = objc_msgSend(v3, sel_domain);
  uint64_t v5 = sub_24EA945F0();
  uint64_t v7 = v6;

  if (v5 == sub_24EA945F0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {

      goto LABEL_8;
    }
  }

  if (qword_269928EC8 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)(v0 + 240);
  uint64_t v50 = *(void *)(v0 + 152);
  uint64_t v51 = sub_24EA941C0();
  __swift_project_value_buffer(v51, (uint64_t)qword_269931C48);
  sub_24EA8C29C(v50, v49, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  __n128 v52 = sub_24EA941A0();
  os_log_type_t v53 = sub_24EA947B0();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v55 = *(void *)(v0 + 240);
  if (v54)
  {
    uint64_t v56 = *(void *)(v0 + 232);
    uint64_t v58 = *(void *)(v0 + 160);
    uint64_t v57 = *(void *)(v0 + 168);
    uint64_t v59 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v87 = v60;
    *(_DWORD *)uint64_t v59 = 136315394;
    sub_24EA8C29C(v55, v56, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v61 = sub_24EA94600();
    *(void *)(v0 + 120) = sub_24EA81BE0(v61, v62, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    sub_24EA8C5DC(v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    *(_WORD *)(v59 + 12) = 2080;
    *(void *)(v0 + 16) = v58;
    *(void *)(v0 + 24) = v57;
    type metadata accessor for CGSize();
    uint64_t v63 = sub_24EA94600();
    *(void *)(v0 + 136) = sub_24EA81BE0(v63, v64, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EA1C000, v52, v53, "Fetching fallback for %s with %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253348310](v60, -1, -1);
    MEMORY[0x253348310](v59, -1, -1);
  }
  else
  {
    sub_24EA8C5DC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
  }

  uint64_t v65 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
  sub_24EA94800();
  unint64_t v67 = v66;
  unint64_t v69 = v68;
  uint64_t v85 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v65 + *v65);
  unint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v70;
  *unint64_t v70 = v0;
  v70[1] = sub_24EA8789C;
  uint64_t v71 = *(void *)(v0 + 152);
  v72.n128_u64[0] = v67;
  v73.n128_u64[0] = v69;
  return v85(v71, v72, v73);
}

uint64_t sub_24EA875EC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA8C5DC(v2, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA87744, v4, v3);
}

uint64_t sub_24EA87744()
{
  uint64_t v1 = (void *)v0[57];
  uint64_t v2 = v0[51];
  unint64_t v3 = v0[52];
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[38];
  uint64_t v6 = v0[39];
  uint64_t v7 = v0[35];
  swift_release();

  sub_24EA4444C(v2, v3);
  sub_24EA8C5DC(v7, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_24EA8789C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 504) = a1;
  *(void *)(v4 + 512) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 360);
  uint64_t v6 = *(void *)(v3 + 352);
  if (v1) {
    uint64_t v7 = sub_24EA5C9D0;
  }
  else {
    uint64_t v7 = sub_24EA879E0;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_24EA879E0()
{
  uint64_t v1 = *(void *)(v0 + 512);
  sub_24EA94770();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 488);
    (*(void (**)(void, void))(*(void *)(v0 + 312) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 304));
    swift_release();
    swift_bridgeObjectRelease();

LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 288);
  sub_24EA82C24(*(void *)(v0 + 504), v5);
  swift_bridgeObjectRelease();
  int v6 = v3(v5, 1, v4);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 288);
  if (v6 == 1)
  {
    uint64_t v9 = *(void **)(v0 + 488);
    uint64_t v10 = *(void *)(v0 + 336);
    uint64_t v11 = *(void *)(v0 + 312);
    swift_release();
    sub_24EA21258(v8, &qword_26B1CF9E8);
    sub_24EA675F4();
    swift_allocError();
    *uint64_t v12 = 2;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v7);
    goto LABEL_5;
  }
  uint64_t v15 = (void *)(*(void *)(v0 + 184) + *(int *)(v0 + 624));
  (*(void (**)(void, void, void))(v0 + 384))(*(void *)(v0 + 328), *(void *)(v0 + 288), *(void *)(v0 + 304));
  uint64_t v18 = (uint64_t (*)(uint64_t))(*v15 + *(int *)*v15);
  os_log_type_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v16;
  *os_log_type_t v16 = v0;
  v16[1] = sub_24EA87CB0;
  uint64_t v17 = *(void *)(v0 + 328);
  return v18(v17);
}

uint64_t sub_24EA87CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[66] = a1;
  v5[67] = a2;
  v5[68] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[45];
  uint64_t v7 = v4[44];
  if (v2) {
    uint64_t v8 = sub_24EA5CB08;
  }
  else {
    uint64_t v8 = sub_24EA87DFC;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24EA87DFC()
{
  uint64_t v1 = *(void *)(v0 + 544);
  sub_24EA94770();
  if (v1)
  {
    unint64_t v2 = *(void *)(v0 + 536);
    uint64_t v3 = *(void *)(v0 + 528);
    uint64_t v4 = *(void **)(v0 + 488);
    uint64_t v5 = *(void *)(v0 + 336);
    uint64_t v6 = *(void *)(v0 + 328);
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 312);
    swift_release();

    sub_24EA4444C(v3, v2);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v6, v7);
    v9(v5, v7);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    *(unsigned char *)(v0 + 630) = *(unsigned char *)(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 216) + 24));
    return MEMORY[0x270FA2498](sub_24EA87FC4, 0, 0);
  }
}

uint64_t sub_24EA87FC4()
{
  char v1 = *(unsigned char *)(v0 + 630);
  uint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 528);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 552) = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(unsigned char *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v6;
  uint64_t v7 = sub_24EA6764C(0, (unint64_t *)&qword_26B1CFEE0);
  void *v6 = v0;
  v6[1] = sub_24EA880F0;
  return MEMORY[0x270FA2360](v0 + 112, 0, 0, 0xD000000000000021, 0x800000024EA9AB80, sub_24EA67648, v5, v7);
}

uint64_t sub_24EA880F0()
{
  *(void *)(*(void *)v1 + 568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24EA5B2C8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24EA8820C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24EA8820C()
{
  v0[72] = v0[14];
  return MEMORY[0x270FA2498](sub_24EA8822C, v0[44], v0[45]);
}

uint64_t sub_24EA8822C()
{
  uint64_t v1 = *(void *)(v0 + 568);
  sub_24EA94770();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 576);
    unint64_t v3 = *(void *)(v0 + 536);
    uint64_t v4 = *(void *)(v0 + 528);
    uint64_t v5 = *(void **)(v0 + 488);
    uint64_t v6 = *(void *)(v0 + 336);
    uint64_t v7 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 304);
    uint64_t v9 = *(void *)(v0 + 312);
    swift_release();

    sub_24EA4444C(v4, v3);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v6, v8);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 280);
    uint64_t v14 = *(void *)(v0 + 264);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 168);
    sub_24EA8C29C(*(void *)(v0 + 152), v13, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v17 = (void *)(v13 + *(int *)(v14 + 20));
    *uint64_t v17 = v16;
    v17[1] = v15;
    if (qword_26B1CFBA0 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)(v0 + 576);
    uint64_t v19 = *(void *)(v0 + 280);
    uint64_t v20 = *(void *)(v0 + 256);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 168);
    uint64_t v23 = (void *)qword_26B1D1F10;
    sub_24EA8C29C(v19, *(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    id v24 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD60));
    id v25 = v23;
    uint64_t v26 = (void *)sub_24EA93FF0();
    objc_msgSend(v25, sel_setObject_forKey_, v18, v26);

    unint64_t v27 = (void *)(v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA38) + 48));
    sub_24EA8C29C(v19, v20, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
    *unint64_t v27 = v22;
    v27[1] = v21;
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v28;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE70);
    *uint64_t v28 = v0;
    v28[1] = sub_24EA88568;
    uint64_t v30 = *(void *)(v0 + 256);
    return MEMORY[0x270F252C8](v30, v29);
  }
}

uint64_t sub_24EA88568()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA8C5DC(v2, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA886C0, v4, v3);
}

uint64_t sub_24EA886C0()
{
  uint64_t v1 = *(void **)(v0 + 576);
  unint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 528);
  uint64_t v4 = *(void **)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 280);
  swift_release();

  sub_24EA4444C(v3, v2);
  sub_24EA8C5DC(v9, (uint64_t (*)(void))type metadata accessor for FetchedImageAsset);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v10(v6, v7);
  v10(v5, v7);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24EA88844()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_24EA8DF00;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_24EA88968;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24EA88968()
{
  uint64_t v1 = *(void **)(v0 + 472);
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 168);
  if (v3)
  {
    *(unsigned char *)uint64_t v4 = *(unsigned char *)(v0 + 628);
    *(void *)(v4 + 8) = v6;
    *(void *)(v4 + 16) = v5;
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE70);
    *uint64_t v7 = v0;
    uint64_t v9 = sub_24EA88C34;
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(void *)(v4 + 8) = v6;
    *(void *)(v4 + 16) = v5;
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE70);
    *uint64_t v7 = v0;
    uint64_t v9 = sub_24EA88ADC;
  }
  v7[1] = v9;
  uint64_t v10 = *(void *)(v0 + 256);
  return MEMORY[0x270F252C8](v10, v8);
}

uint64_t sub_24EA88ADC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA8C5DC(v2, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA5BBEC, v4, v3);
}

uint64_t sub_24EA88C34()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 256);
  swift_task_dealloc();
  sub_24EA8C5DC(v2, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 352);
  return MEMORY[0x270FA2498](sub_24EA67AD4, v4, v3);
}

uint64_t sub_24EA88D8C()
{
  uint64_t v88 = v0;
  uint64_t v1 = *(void **)(v0 + 424);
  *(void *)(v0 + 128) = v1;
  *(void *)(v0 + 472) = v1;
  id v2 = v1;
  *(void *)(v0 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B0);
  sub_24EA6764C(0, &qword_2699299A0);
  if (!swift_dynamicCast())
  {
LABEL_8:

    *(void *)(v0 + 48) = v1;
    id v11 = v1;
    if (swift_dynamicCast())
    {
      swift_release();

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v12 = *(void *)(v0 + 224);
      uint64_t v13 = *(void *)(v0 + 152);
      uint64_t v14 = sub_24EA941C0();
      __swift_project_value_buffer(v14, (uint64_t)qword_269931C48);
      sub_24EA8C29C(v13, v12, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      uint64_t v15 = sub_24EA941A0();
      os_log_type_t v16 = sub_24EA947B0();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 336);
      uint64_t v19 = *(void *)(v0 + 304);
      uint64_t v20 = *(void *)(v0 + 312);
      if (v17)
      {
        os_log_t log = *(os_log_t *)(v0 + 304);
        uint64_t v22 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 232);
        uint64_t v24 = *(void *)(v0 + 160);
        uint64_t v23 = *(void *)(v0 + 168);
        uint64_t v25 = swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        uint64_t v87 = type;
        *(_DWORD *)uint64_t v25 = 136315394;
        sub_24EA8C29C(v22, v21, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v26 = sub_24EA94600();
        *(void *)(v0 + 88) = sub_24EA81BE0(v26, v27, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        sub_24EA8C5DC(v22, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        *(_WORD *)(v25 + 12) = 2080;
        *(void *)(v0 + 32) = v24;
        *(void *)(v0 + 40) = v23;
        type metadata accessor for CGSize();
        uint64_t v28 = sub_24EA94600();
        *(void *)(v0 + 104) = sub_24EA81BE0(v28, v29, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24EA1C000, v15, v16, "Fetching %s for %s cancelled", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253348310](type, -1, -1);
        MEMORY[0x253348310](v25, -1, -1);

        (*(void (**)(uint64_t, os_log_t))(v20 + 8))(v18, log);
      }
      else
      {
        uint64_t v75 = *(void *)(v0 + 224);

        sub_24EA8C5DC(v75, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
      return v76();
    }
    else
    {

      if (qword_269928EC8 != -1) {
        swift_once();
      }
      uint64_t v30 = *(void *)(v0 + 336);
      uint64_t v32 = *(void *)(v0 + 312);
      uint64_t v31 = *(void *)(v0 + 320);
      uint64_t v33 = *(void *)(v0 + 304);
      uint64_t v34 = sub_24EA941C0();
      __swift_project_value_buffer(v34, (uint64_t)qword_269931C48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
      id v35 = v1;
      id v36 = v1;
      uint64_t v37 = sub_24EA941A0();
      os_log_type_t v38 = sub_24EA947B0();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v41 = *(void *)(v0 + 312);
      uint64_t v40 = *(void *)(v0 + 320);
      uint64_t v42 = *(void *)(v0 + 304);
      if (v39)
      {
        uint64_t v43 = swift_slowAlloc();
        BOOL v82 = (void *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v87 = v83;
        *(_DWORD *)uint64_t v43 = 136446466;
        sub_24EA8CB04(&qword_2699299B0, MEMORY[0x263F06EA8]);
        uint64_t v44 = sub_24EA94AD0();
        os_log_type_t typea = v38;
        *(void *)(v0 + 72) = sub_24EA81BE0(v44, v45, &v87);
        sub_24EA94830();
        swift_bridgeObjectRelease();
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(v40, v42);
        *(_WORD *)(v43 + 12) = 2114;
        id v47 = v1;
        uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 80) = v48;
        sub_24EA94830();
        *BOOL v82 = v48;

        _os_log_impl(&dword_24EA1C000, v37, typea, "unable to fetch %{public}s: %{public}@", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699296B8);
        swift_arrayDestroy();
        MEMORY[0x253348310](v82, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253348310](v83, -1, -1);
        MEMORY[0x253348310](v43, -1, -1);
      }
      else
      {
        unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(*(void *)(v0 + 320), *(void *)(v0 + 304));
      }
      *(void *)(v0 + 592) = v46;
      uint64_t v77 = *(void *)(v0 + 184) + *(int *)(v0 + 624);
      uint64_t v86 = (uint64_t (*)(uint64_t))(*(void *)(v77 + 32) + **(int **)(v77 + 32));
      id v78 = (void *)swift_task_alloc();
      *(void *)(v0 + 600) = v78;
      *id v78 = v0;
      v78[1] = sub_24EA88844;
      uint64_t v79 = *(void *)(v0 + 336);
      return v86(v79);
    }
  }
  uint64_t v3 = *(void **)(v0 + 96);
  *(void *)(v0 + 488) = v3;
  id v4 = objc_msgSend(v3, sel_domain);
  uint64_t v5 = sub_24EA945F0();
  uint64_t v7 = v6;

  if (v5 == sub_24EA945F0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {

      goto LABEL_8;
    }
  }

  if (qword_269928EC8 != -1) {
    swift_once();
  }
  uint64_t v49 = *(void *)(v0 + 240);
  uint64_t v50 = *(void *)(v0 + 152);
  uint64_t v51 = sub_24EA941C0();
  __swift_project_value_buffer(v51, (uint64_t)qword_269931C48);
  sub_24EA8C29C(v50, v49, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  __n128 v52 = sub_24EA941A0();
  os_log_type_t v53 = sub_24EA947B0();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v55 = *(void *)(v0 + 240);
  if (v54)
  {
    uint64_t v56 = *(void *)(v0 + 232);
    uint64_t v58 = *(void *)(v0 + 160);
    uint64_t v57 = *(void *)(v0 + 168);
    uint64_t v59 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v87 = v60;
    *(_DWORD *)uint64_t v59 = 136315394;
    sub_24EA8C29C(v55, v56, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v61 = sub_24EA94600();
    *(void *)(v0 + 120) = sub_24EA81BE0(v61, v62, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    sub_24EA8C5DC(v55, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    *(_WORD *)(v59 + 12) = 2080;
    *(void *)(v0 + 16) = v58;
    *(void *)(v0 + 24) = v57;
    type metadata accessor for CGSize();
    uint64_t v63 = sub_24EA94600();
    *(void *)(v0 + 136) = sub_24EA81BE0(v63, v64, &v87);
    sub_24EA94830();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EA1C000, v52, v53, "Fetching fallback for %s with %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253348310](v60, -1, -1);
    MEMORY[0x253348310](v59, -1, -1);
  }
  else
  {
    sub_24EA8C5DC(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for ImageAsset);
  }

  uint64_t v65 = *(int **)(*(void *)(v0 + 184) + *(int *)(v0 + 624) + 16);
  sub_24EA94800();
  unint64_t v67 = v66;
  unint64_t v69 = v68;
  uint64_t v85 = (uint64_t (*)(uint64_t, __n128, __n128))((char *)v65 + *v65);
  unint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v70;
  *unint64_t v70 = v0;
  v70[1] = sub_24EA8789C;
  uint64_t v71 = *(void *)(v0 + 152);
  v72.n128_u64[0] = v67;
  v73.n128_u64[0] = v69;
  return v85(v71, v72, v73);
}

uint64_t sub_24EA898E8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(double *)(v4 + 32) = a3;
  *(double *)(v4 + 40) = a4;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 48) = type metadata accessor for ImageAssetAction();
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = sub_24EA94950();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  sub_24EA94730();
  *(void *)(v4 + 88) = sub_24EA94720();
  uint64_t v7 = sub_24EA946D0();
  *(void *)(v4 + 96) = v7;
  *(void *)(v4 + 104) = v6;
  return MEMORY[0x270FA2498](sub_24EA89A10, v7, v6);
}

uint64_t sub_24EA89A10()
{
  uint64_t v1 = sub_24EA94C10();
  uint64_t v3 = v2;
  sub_24EA94940();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269929FC8 + dword_269929FC8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24EA89AF0;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24EA89AF0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 104);
  uint64_t v7 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v8 = sub_24EA5F120;
  }
  else {
    uint64_t v8 = sub_24EA89C88;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24EA89C88()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = (void *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFAD0) + 48));
  sub_24EA8C29C(v4, v1, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  *uint64_t v5 = v3;
  v5[1] = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[16] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFE70);
  void *v6 = v0;
  v6[1] = sub_24EA89D98;
  uint64_t v8 = v0[7];
  return MEMORY[0x270F252C8](v8, v7);
}

uint64_t sub_24EA89D98()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  swift_task_dealloc();
  sub_24EA8C5DC(v2, (uint64_t (*)(void))type metadata accessor for ImageAssetAction);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 96);
  return MEMORY[0x270FA2498](sub_24EA5F0A8, v4, v3);
}

uint64_t sub_24EA89EF0(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_24EA8C104(v3, (uint64_t (*)(char *, double, double))sub_24EA8DF04, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  sub_24EA82870(v4, a2);
  return swift_release();
}

uint64_t sub_24EA89F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_24EA94930();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_24EA8A078, 0, 0);
}

uint64_t sub_24EA8A078()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_24EA94950();
  uint64_t v5 = sub_24EA8CB04(&qword_26B1CFEF8, MEMORY[0x263F8F710]);
  sub_24EA94B10();
  sub_24EA8CB04(&qword_26B1CFEF0, MEMORY[0x263F8F6D8]);
  sub_24EA94960();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24EA8A218;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_24EA8A218()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24EA8A3D4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_24EA8A3D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EA8A440(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF00);
  int v39 = a2;
  uint64_t result = sub_24EA949B0();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    id v35 = v2;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v36 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v20 >= v36) {
          goto LABEL_34;
        }
        unint64_t v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v21 = v37[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v37 = -1 << v33;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v21 = v37[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(void *)(v8 + 56);
      long long v40 = *(_OWORD *)(*(void *)(v8 + 48) + 16 * v19);
      uint64_t v24 = *(void *)(v38 + 72);
      uint64_t v25 = v23 + v24 * v19;
      if (v39) {
        sub_24EA1E61C(v25, (uint64_t)v7, &qword_26B1CFC70);
      }
      else {
        sub_24EA1E564(v25, (uint64_t)v7, &qword_26B1CFC70);
      }
      sub_24EA94B70();
      sub_24EA94BA0();
      sub_24EA94BA0();
      uint64_t result = sub_24EA94BB0();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(void *)(v10 + 48) + 16 * v17) = v40;
      uint64_t result = sub_24EA1E61C((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, &qword_26B1CFC70);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_24EA8A7E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ImageAsset();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929FD0);
  uint64_t v10 = (void *)sub_24EA949B0();
  if (*(void *)(v9 + 16))
  {
    unint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              uint64_t v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_24EA8C63C(v24, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_24EA8C29C(v24, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ImageAsset);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_24EA8AAA8((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_24EA8AAA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v24 = a2;
  uint64_t v5 = sub_24EA93DE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24EA93EB0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
  MEMORY[0x270FA5388](v15 - 8);
  int64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EA94B70();
  sub_24EA1E564(a1, (uint64_t)v17, &qword_26B1CFD40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    sub_24EA94B90();
    sub_24EA8CB04(&qword_26B1CFD30, MEMORY[0x263F3E0F0]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v18 = type metadata accessor for ImageAsset();
  sub_24EA94610();
  sub_24EA94610();
  swift_bridgeObjectRelease();
  sub_24EA1E564(a1 + *(int *)(v18 + 28), (uint64_t)v10, &qword_26B1CF9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
  {
    sub_24EA94B90();
  }
  else
  {
    unint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v23, v10, v5);
    sub_24EA94B90();
    sub_24EA8CB04(&qword_26B1CF9D8, MEMORY[0x263F06EA8]);
    sub_24EA94580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  sub_24EA94BB0();
  unint64_t v20 = sub_24EA948B0();
  *(void *)((char *)a3 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
  uint64_t result = sub_24EA8C63C(a1, a3[6] + *(void *)(*(void *)(v18 - 8) + 72) * v20, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  *(void *)(a3[7] + 8 * v20) = v24;
  ++a3[2];
  return result;
}

uint64_t sub_24EA8AF28(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v38 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v40 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - v10;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF00);
  uint64_t result = sub_24EA949C0();
  uint64_t v13 = result;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *v38;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 64;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v37) {
        return v13;
      }
      unint64_t v20 = v38[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v37) {
          return v13;
        }
        unint64_t v20 = v38[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v37) {
            return v13;
          }
          unint64_t v20 = v38[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v37) {
              return v13;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v15 >= v37) {
                  return v13;
                }
                unint64_t v20 = v38[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = (uint64_t *)(a4[6] + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(v39 + 72);
    sub_24EA1E564(a4[7] + v25 * v18, (uint64_t)v11, &qword_26B1CFC70);
    sub_24EA1E61C((uint64_t)v11, v40, &qword_26B1CFC70);
    sub_24EA94B70();
    sub_24EA94BA0();
    sub_24EA94BA0();
    uint64_t result = sub_24EA94BB0();
    uint64_t v26 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = (void *)(*(void *)(v13 + 48) + 16 * v29);
    *uint64_t v34 = v24;
    v34[1] = v23;
    uint64_t result = sub_24EA1E61C(v40, *(void *)(v13 + 56) + v29 * v25, &qword_26B1CFC70);
    ++*(void *)(v13 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      return v13;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24EA8B2C4(unint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (double *)(a3[6] + 16 * a1);
  double *v8 = a4;
  v8[1] = a5;
  uint64_t v9 = a3[7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t result = sub_24EA1E61C(a2, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, &qword_26B1CFC70);
  uint64_t v12 = a3[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a3[2] = v14;
  }
  return result;
}

uint64_t sub_24EA8B370(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for ImageAsset();
  uint64_t result = sub_24EA8C63C(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for ImageAsset);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_24EA8B424()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFF00);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24EA949A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 16 * v17;
    unint64_t v19 = *(void *)(v25 + 72) * v17;
    uint64_t v20 = *(void *)(v5 + 56) + v19;
    long long v26 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v17);
    sub_24EA1E564(v20, (uint64_t)v4, &qword_26B1CFC70);
    *(_OWORD *)(*(void *)(v7 + 48) + v18) = v26;
    uint64_t result = (void *)sub_24EA1E61C((uint64_t)v4, *(void *)(v7 + 56) + v19, &qword_26B1CFC70);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24EA8B694()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ImageAsset();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269929FD0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24EA949A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_24EA8C29C(*(void *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_24EA8C63C((uint64_t)v4, *(void *)(v7 + 48) + v18, (uint64_t (*)(void))type metadata accessor for ImageAsset);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24EA8B91C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24EA8B9BC@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = sub_24EA93DE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v6 + *(void *)(v8 + 72) * v4;
  return v9(a4, v10, v7);
}

uint64_t sub_24EA8BA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = type metadata accessor for ImageAsset();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EA93E70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImageAssetFeature.TaskIdentifier(0);
  MEMORY[0x270FA5388](v9);
  int64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFBC8);
  MEMORY[0x270FA5388](v15 - 8);
  unint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v17[*(int *)(v18 + 56)];
  sub_24EA8C29C(v29, (uint64_t)v17, type metadata accessor for ImageAssetFeature.TaskIdentifier);
  sub_24EA8C29C(v30, v19, type metadata accessor for ImageAssetFeature.TaskIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24EA8C29C((uint64_t)v17, (uint64_t)v11, type metadata accessor for ImageAssetFeature.TaskIdentifier);
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78) + 48);
    double v22 = *(double *)&v11[v20];
    double v21 = *(double *)&v11[v20 + 8];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      double v24 = *(double *)(v19 + v20);
      double v23 = *(double *)(v19 + v20 + 8);
      sub_24EA8C63C(v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      char v25 = static ImageAsset.== infix(_:_:)(v11, v4);
      sub_24EA8C5DC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      sub_24EA8C5DC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ImageAsset);
      if (v25)
      {
        char v26 = v21 == v23 && v22 == v24;
        goto LABEL_12;
      }
      sub_24EA8C5DC((uint64_t)v17, type metadata accessor for ImageAssetFeature.TaskIdentifier);
LABEL_14:
      char v26 = 0;
      return v26 & 1;
    }
    sub_24EA8C5DC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ImageAsset);
LABEL_10:
    sub_24EA21258((uint64_t)v17, &qword_26B1CFBC8);
    goto LABEL_14;
  }
  sub_24EA8C29C((uint64_t)v17, (uint64_t)v14, type metadata accessor for ImageAssetFeature.TaskIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v19, v5);
  char v26 = sub_24EA93E50();
  unint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v8, v5);
  v27(v14, v5);
LABEL_12:
  sub_24EA8C5DC((uint64_t)v17, type metadata accessor for ImageAssetFeature.TaskIdentifier);
  return v26 & 1;
}

void sub_24EA8BE7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, double, double))
{
  uint64_t v24 = a2;
  uint64_t v29 = a4;
  char v25 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFC70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v26 = 0;
  uint64_t v27 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v28) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v27 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v27 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_5:
    uint64_t v16 = (double *)(*(void *)(a3 + 48) + 16 * v15);
    double v17 = *v16;
    double v18 = v16[1];
    sub_24EA1E564(*(void *)(a3 + 56) + *(void *)(v6 + 72) * v15, (uint64_t)v8, &qword_26B1CFC70);
    char v19 = v29(v8, v17, v18);
    sub_24EA21258((uint64_t)v8, &qword_26B1CFC70);
    if (v19)
    {
      *(unint64_t *)((char *)v25 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_24:
        sub_24EA8AF28(v25, v24, v26, (void *)a3);
        return;
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v28) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_24EA8C104(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, double, double), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_24EA8BE7C((void *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_24EA8BE7C((unint64_t *)v11, v8, v6, a2);
    a3 = v12;
    MEMORY[0x253348310](v11, -1, -1);
  }
  return a3;
}

uint64_t type metadata accessor for ImageAssetFeature.TaskIdentifier(uint64_t a1)
{
  return sub_24EA64C48(a1, (uint64_t *)&unk_26B1CFBB8);
}

uint64_t sub_24EA8C29C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA8C304()
{
  uint64_t v1 = type metadata accessor for ImageAsset();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_24EA93EB0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 28);
  uint64_t v8 = sub_24EA93DE0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_24EA8C4C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ImageAsset() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  double v8 = *(double *)(v1 + v6);
  double v9 = *(double *)(v1 + v6 + 8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24EA2C0C8;
  return sub_24EA898E8(a1, v7, v8, v9);
}

uint64_t sub_24EA8C5DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EA8C63C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EA8C6A4()
{
  uint64_t v1 = type metadata accessor for ImageAsset();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v17 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(type metadata accessor for ImageAssetFeature(0) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = sub_24EA93EB0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v3, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v3, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 28);
  uint64_t v10 = sub_24EA93DE0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  unint64_t v12 = (((((v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5;
  uint64_t v13 = v12 + v6;
  uint64_t v14 = v0 + v12;
  uint64_t v15 = sub_24EA93E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v13, v2 | v5 | 7);
}

uint64_t sub_24EA8C944(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ImageAsset() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for ImageAssetFeature(0) - 8);
  uint64_t v9 = v1 + v5;
  double v10 = *(double *)(v1 + v6);
  double v11 = *(double *)(v1 + v6 + 8);
  double v12 = *(double *)(v1 + v7);
  uint64_t v13 = v1 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_24EA2C5B8;
  return sub_24EA84858(a1, v9, v13, v10, v11, v12);
}

uint64_t sub_24EA8CABC()
{
  return sub_24EA8CB04(&qword_26B1CFB88, (void (*)(uint64_t))type metadata accessor for ImageAssetAction);
}

uint64_t sub_24EA8CB04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA8CB4C()
{
  return sub_24EA8CB04(&qword_26B1CFB80, (void (*)(uint64_t))type metadata accessor for ImageAssetAction);
}

uint64_t sub_24EA8CB94()
{
  return sub_24EA8CB04(&qword_26B1CFAD8, (void (*)(uint64_t))type metadata accessor for ImageAssetState);
}

uint64_t getEnumTagSinglePayload for ImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA8CBF0);
}

uint64_t sub_24EA8CBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93E70();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ImageAssetFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA8CCC4);
}

uint64_t sub_24EA8CCC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24EA93E70();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24EA8CD80()
{
  uint64_t result = sub_24EA93E70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24EA8CE14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24EA93EB0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      double v11 = (int *)type metadata accessor for ImageAsset();
      uint64_t v12 = v11[5];
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v15;
      *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v16 = v11[7];
      uint64_t v17 = (char *)a1 + v16;
      double v18 = (char *)a2 + v16;
      uint64_t v19 = sub_24EA93DE0();
      uint64_t v20 = *(void *)(v19 - 8);
      unint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      if (v21(v18, 1, v19))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)((char *)a1 + *(int *)(v23 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v23 + 48));
    }
    else
    {
      uint64_t v10 = sub_24EA93E70();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EA8D120(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v8 = sub_24EA93E70();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    uint64_t v10 = v8;
    uint64_t v11 = a1;
LABEL_8:
    return v9(v11, v10);
  }
  uint64_t v2 = sub_24EA93EB0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  uint64_t v4 = type metadata accessor for ImageAsset();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(v4 + 28);
  uint64_t v6 = sub_24EA93DE0();
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    uint64_t v11 = v5;
    uint64_t v10 = v6;
    goto LABEL_8;
  }
  return result;
}

char *sub_24EA8D2D0(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24EA93EB0();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
    uint64_t v8 = (int *)type metadata accessor for ImageAsset();
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    a1[v8[6]] = a2[v8[6]];
    uint64_t v13 = v8[7];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_24EA93DE0();
    uint64_t v17 = *(void *)(v16 - 8);
    double v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
    *(_OWORD *)&a1[*(int *)(v20 + 48)] = *(_OWORD *)&a2[*(int *)(v20 + 48)];
  }
  else
  {
    uint64_t v7 = sub_24EA93E70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_24EA8D58C(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_24EA8C5DC((uint64_t)a1, type metadata accessor for ImageAssetFeature.TaskIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_24EA93EB0();
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      uint64_t v8 = (int *)type metadata accessor for ImageAsset();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = *((void *)v11 + 1);
      a1[v8[6]] = a2[v8[6]];
      uint64_t v12 = v8[7];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_24EA93DE0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)&a1[*(int *)(v19 + 48)] = *(_OWORD *)&a2[*(int *)(v19 + 48)];
    }
    else
    {
      uint64_t v7 = sub_24EA93E70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_24EA8D874(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24EA93EB0();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
    uint64_t v8 = (int *)type metadata accessor for ImageAsset();
    *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
    a1[v8[6]] = a2[v8[6]];
    uint64_t v9 = v8[7];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_24EA93DE0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
    *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
  }
  else
  {
    uint64_t v7 = sub_24EA93E70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_24EA8DB18(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_24EA8C5DC((uint64_t)a1, type metadata accessor for ImageAssetFeature.TaskIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_24EA93EB0();
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFD40);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      uint64_t v8 = (int *)type metadata accessor for ImageAsset();
      *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
      a1[v8[6]] = a2[v8[6]];
      uint64_t v9 = v8[7];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_24EA93DE0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CF9E8);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1CFA78);
      *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
    }
    else
    {
      uint64_t v7 = sub_24EA93E70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EA8DDE0()
{
  uint64_t result = sub_24EA93E70();
  if (v1 <= 0x3F)
  {
    long long v3[4] = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for ImageAsset();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_24EA8DEB8()
{
  return sub_24EA8CB04(&qword_26B1CFBB0, (void (*)(uint64_t))type metadata accessor for ImageAssetFeature.TaskIdentifier);
}

uint64_t Monogram.hash(into:)()
{
  return sub_24EA94580();
}

uint64_t type metadata accessor for Monogram()
{
  uint64_t result = qword_26B1CFD18;
  if (!qword_26B1CFD18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static Monogram.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_24EA94AE0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for Monogram() + 20);
  return MEMORY[0x270EEF408]((char *)a1 + v5, (char *)a2 + v5);
}

uint64_t sub_24EA8E07C(char a1)
{
  if (a1) {
    return 0x706D6F43656D616ELL;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_24EA8E0C4()
{
  return sub_24EA8E07C(*v0);
}

uint64_t sub_24EA8E0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EA8F338(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EA8E0F4(uint64_t a1)
{
  unint64_t v2 = sub_24EA8E324();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA8E130(uint64_t a1)
{
  unint64_t v2 = sub_24EA8E324();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Monogram.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929FE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA8E324();
  sub_24EA94C00();
  v8[15] = 0;
  sub_24EA94A90();
  if (!v1)
  {
    type metadata accessor for Monogram();
    v8[14] = 1;
    sub_24EA93DA0();
    sub_24EA8EAAC(&qword_269929FF0, MEMORY[0x263F06A30]);
    sub_24EA94AB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EA8E324()
{
  unint64_t result = qword_269929FE8;
  if (!qword_269929FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269929FE8);
  }
  return result;
}

uint64_t Monogram.hashValue.getter()
{
  return sub_24EA94BB0();
}

uint64_t Monogram.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_24EA93DA0();
  uint64_t v21 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929FF8);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Monogram();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA8E324();
  sub_24EA94BF0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = v8;
  uint64_t v20 = v5;
  uint64_t v12 = v23;
  uint64_t v11 = v24;
  char v27 = 0;
  uint64_t v13 = v25;
  uint64_t v14 = (uint64_t)v10;
  *uint64_t v10 = sub_24EA94A20();
  v10[1] = v15;
  char v26 = 1;
  sub_24EA8EAAC(&qword_26992A000, MEMORY[0x263F06A30]);
  uint64_t v16 = v20;
  sub_24EA94A40();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14 + *(int *)(v19 + 20), v16, v11);
  sub_24EA8E9A4(v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EA8EA08(v14);
}

uint64_t sub_24EA8E748@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Monogram.init(from:)(a1, a2);
}

uint64_t sub_24EA8E760(void *a1)
{
  return Monogram.encode(to:)(a1);
}

uint64_t sub_24EA8E778()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA8E838()
{
  return sub_24EA94580();
}

uint64_t sub_24EA8E8E8()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA8E9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Monogram();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA8EA08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Monogram();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA8EA64()
{
  return sub_24EA8EAAC(&qword_269929E78, (void (*)(uint64_t))type metadata accessor for Monogram);
}

uint64_t sub_24EA8EAAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EA8EAF4(void *a1, void *a2, uint64_t a3)
{
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_24EA94AE0() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(a3 + 20);
  return MEMORY[0x270EEF408]((char *)a1 + v7, (char *)a2 + v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for Monogram(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24EA93DA0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for Monogram(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24EA93DA0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for Monogram(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24EA93DA0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for Monogram(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EA93DA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for Monogram(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24EA93DA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for Monogram(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24EA93DA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Monogram(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA8EF28);
}

uint64_t sub_24EA8EF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EA93DA0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Monogram(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA8EFEC);
}

uint64_t sub_24EA8EFEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EA93DA0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EA8F094()
{
  uint64_t result = sub_24EA93DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Monogram.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA8F1F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Monogram.CodingKeys()
{
  return &type metadata for Monogram.CodingKeys;
}

unint64_t sub_24EA8F234()
{
  unint64_t result = qword_26992A008;
  if (!qword_26992A008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A008);
  }
  return result;
}

unint64_t sub_24EA8F28C()
{
  unint64_t result = qword_26992A010;
  if (!qword_26992A010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A010);
  }
  return result;
}

unint64_t sub_24EA8F2E4()
{
  unint64_t result = qword_26992A018;
  if (!qword_26992A018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A018);
  }
  return result;
}

uint64_t sub_24EA8F338(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_24EA94AE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x706D6F43656D616ELL && a2 == 0xEE0073746E656E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t DynamicArtworkLayoutEnvironment.init(dynamicTypeSize:horizontalSizeClass:platform:verticalSizeClass:viewWidth:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  *a5 = a1;
  a5[1] = MEMORY[0x253346F90]();
  uint64_t v9 = (int *)type metadata accessor for DynamicArtworkLayoutEnvironment();
  uint64_t v10 = &a5[v9[6]];
  uint64_t v11 = sub_24EA93FA0();
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  ((void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t))v14)((void *)(v11 - 8), v10, a2, v11);
  a5[v9[7]] = a3;
  uint64_t v12 = &a5[v9[8]];
  return v14(v12, a4, v11);
}

uint64_t DynamicArtworkLayoutEnvironment.dynamicTypeSize.getter()
{
  return *v0;
}

uint64_t DynamicArtworkLayoutEnvironment.gridSizeClass.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t DynamicArtworkLayoutEnvironment.horizontalSizeClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DynamicArtworkLayoutEnvironment() + 24);
  uint64_t v4 = sub_24EA93FA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DynamicArtworkLayoutEnvironment.platform.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DynamicArtworkLayoutEnvironment() + 28));
}

uint64_t DynamicArtworkLayoutEnvironment.verticalSizeClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DynamicArtworkLayoutEnvironment() + 32);
  uint64_t v4 = sub_24EA93FA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unint64_t sub_24EA8F654(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657A695364697267;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0x5463696D616E7964;
      break;
  }
  return result;
}

unint64_t sub_24EA8F728()
{
  return sub_24EA8F654(*v0);
}

uint64_t sub_24EA8F730(uint64_t a1)
{
  unint64_t v2 = sub_24EA902E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EA8F76C(uint64_t a1)
{
  unint64_t v2 = sub_24EA902E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicArtworkLayoutEnvironment.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26992A020);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA902E8();
  sub_24EA94C00();
  char v19 = *v3;
  char v18 = 0;
  sub_24EA9033C();
  sub_24EA94AB0();
  if (!v2)
  {
    char v17 = v3[1];
    char v16 = 1;
    sub_24EA90390();
    sub_24EA94AB0();
    uint64_t v9 = type metadata accessor for DynamicArtworkLayoutEnvironment();
    char v15 = 2;
    sub_24EA93FA0();
    sub_24EA90DE4(&qword_26992A040, MEMORY[0x263F3E1D8]);
    sub_24EA94AB0();
    char v14 = v3[*(int *)(v9 + 28)];
    char v13 = 3;
    sub_24EA6E588();
    sub_24EA94AB0();
    char v12 = 4;
    sub_24EA94AB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DynamicArtworkLayoutEnvironment.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v28 = sub_24EA93FA0();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26992A048);
  uint64_t v27 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EA902E8();
  uint64_t v29 = v9;
  char v13 = v31;
  sub_24EA94BF0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v14 = v7;
  unint64_t v31 = (int *)v10;
  uint64_t v24 = v4;
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  char v38 = 0;
  sub_24EA903E4();
  sub_24EA94A40();
  *char v12 = v39;
  char v36 = 1;
  sub_24EA90438();
  sub_24EA94A40();
  uint64_t v23 = v12;
  v12[1] = v37;
  char v35 = 2;
  char v17 = v14;
  uint64_t v18 = sub_24EA90DE4(&qword_26992A060, MEMORY[0x263F3E1D8]);
  sub_24EA94A40();
  uint64_t v22 = v18;
  char v19 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v19(&v23[v31[6]], v17, v16);
  char v33 = 3;
  sub_24EA6E894();
  sub_24EA94A40();
  v23[v31[7]] = v34;
  char v32 = 4;
  sub_24EA94A40();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v29, v30);
  uint64_t v20 = (uint64_t)v23;
  v19(&v23[v31[8]], v24, v16);
  sub_24EA4C934(v20, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24EA4C998(v20);
}

uint64_t sub_24EA8FEB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicArtworkLayoutEnvironment.init(from:)(a1, a2);
}

uint64_t sub_24EA8FEC8(void *a1)
{
  return DynamicArtworkLayoutEnvironment.encode(to:)(a1);
}

uint64_t DynamicArtworkLayoutEnvironment.hash(into:)()
{
  return sub_24EA94580();
}

uint64_t DynamicArtworkLayoutEnvironment.hashValue.getter()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA90030()
{
  return sub_24EA94BB0();
}

uint64_t sub_24EA90074()
{
  return sub_24EA94BB0();
}

uint64_t _s12FitnessAsset31DynamicArtworkLayoutEnvironmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_24EA93EC0() & 1) == 0) {
    goto LABEL_11;
  }
  sub_24EA93E80();
  double v5 = v4;
  sub_24EA93E80();
  if (v5 != v6) {
    goto LABEL_11;
  }
  uint64_t v7 = type metadata accessor for DynamicArtworkLayoutEnvironment();
  sub_24EA93FA0();
  sub_24EA90DE4(&qword_26992A090, MEMORY[0x263F3E1D8]);
  sub_24EA94640();
  sub_24EA94640();
  if (v13 == v11 && v14 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_24EA94AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = 0;
    if ((v8 & 1) == 0) {
      return v9 & 1;
    }
  }
  if ((sub_24EA6BFC8(*(unsigned char *)(a1 + *(int *)(v7 + 28)), *(unsigned char *)(a2 + *(int *)(v7 + 28))) & 1) == 0)
  {
LABEL_11:
    char v9 = 0;
    return v9 & 1;
  }
  sub_24EA94640();
  sub_24EA94640();
  if (v13 == v11 && v14 == v12) {
    char v9 = 1;
  }
  else {
    char v9 = sub_24EA94AE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t type metadata accessor for DynamicArtworkLayoutEnvironment()
{
  uint64_t result = qword_26B1CFCA0;
  if (!qword_26B1CFCA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EA902E8()
{
  unint64_t result = qword_26992A028;
  if (!qword_26992A028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A028);
  }
  return result;
}

unint64_t sub_24EA9033C()
{
  unint64_t result = qword_26992A030;
  if (!qword_26992A030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A030);
  }
  return result;
}

unint64_t sub_24EA90390()
{
  unint64_t result = qword_26992A038;
  if (!qword_26992A038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A038);
  }
  return result;
}

unint64_t sub_24EA903E4()
{
  unint64_t result = qword_26992A050;
  if (!qword_26992A050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A050);
  }
  return result;
}

unint64_t sub_24EA90438()
{
  unint64_t result = qword_26992A058;
  if (!qword_26992A058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A058);
  }
  return result;
}

uint64_t sub_24EA9048C()
{
  return sub_24EA90DE4(&qword_26992A070, (void (*)(uint64_t))type metadata accessor for DynamicArtworkLayoutEnvironment);
}

void *initializeBufferWithCopyOfBuffer for DynamicArtworkLayoutEnvironment(_WORD *a1, void *a2, int *a3)
{
  double v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *double v4 = *a2;
    double v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    char v8 = (char *)a1 + v7;
    char v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24EA93FA0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    v11((char *)v4 + v12, (char *)a2 + v12, v10);
  }
  return v4;
}

uint64_t destroy for DynamicArtworkLayoutEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24EA93FA0();
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  return v8(v6, v5);
}

_WORD *initializeWithCopy for DynamicArtworkLayoutEnvironment(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EA93FA0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  v10((char *)a1 + v11, (char *)a2 + v11, v9);
  return a1;
}

unsigned char *assignWithCopy for DynamicArtworkLayoutEnvironment(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_24EA93FA0();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  a1[a3[7]] = a2[a3[7]];
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  return a1;
}

_WORD *initializeWithTake for DynamicArtworkLayoutEnvironment(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EA93FA0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  v10((char *)a1 + v11, (char *)a2 + v11, v9);
  return a1;
}

_WORD *assignWithTake for DynamicArtworkLayoutEnvironment(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EA93FA0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  v10((char *)a1 + v11, (char *)a2 + v11, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicArtworkLayoutEnvironment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EA90998);
}

uint64_t sub_24EA90998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EA93FA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 4) {
      return v12 - 3;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for DynamicArtworkLayoutEnvironment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EA90A6C);
}

uint64_t sub_24EA90A6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24EA93FA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 3;
  }
  return result;
}

uint64_t sub_24EA90B2C()
{
  uint64_t result = sub_24EA93FA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DynamicArtworkLayoutEnvironment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA90CA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicArtworkLayoutEnvironment.CodingKeys()
{
  return &type metadata for DynamicArtworkLayoutEnvironment.CodingKeys;
}

unint64_t sub_24EA90CE0()
{
  unint64_t result = qword_26992A078;
  if (!qword_26992A078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A078);
  }
  return result;
}

unint64_t sub_24EA90D38()
{
  unint64_t result = qword_26992A080;
  if (!qword_26992A080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A080);
  }
  return result;
}

unint64_t sub_24EA90D90()
{
  unint64_t result = qword_26992A088;
  if (!qword_26992A088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A088);
  }
  return result;
}

uint64_t sub_24EA90DE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *DynamicPredicateEqualityDescriptor.makePredicateExpression<A>(using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v336 = a1;
  v347 = a4;
  uint64_t v6 = a3[1];
  uint64_t v5 = a3[2];
  uint64_t v341 = a3;
  uint64_t v7 = a3[3];
  uint64_t v352 = a2;
  uint64_t v353 = v6;
  uint64_t v337 = v6;
  uint64_t v338 = v5;
  uint64_t v354 = v5;
  uint64_t v355 = v7;
  uint64_t v339 = v7;
  uint64_t v8 = type metadata accessor for ArtworkPredicateValue();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v315 = type metadata accessor for ArtworkPredicateKeyPath();
  uint64_t v314 = *(void *)(v315 - 8);
  MEMORY[0x270FA5388](v315);
  uint64_t v313 = (char *)&v307 - v10;
  uint64_t v321 = type metadata accessor for ArtworkPredicateKeyPath();
  uint64_t v322 = *(void *)(v321 - 8);
  MEMORY[0x270FA5388](v321);
  v320 = (char *)&v307 - v11;
  uint64_t v340 = a2;
  uint64_t v334 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v335 = (char *)&v307 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v342 = (uint64_t)&v307 - v15;
  uint64_t v343 = v8;
  uint64_t v344 = WitnessTable;
  uint64_t v324 = type metadata accessor for ArtworkPredicateKeyPath();
  uint64_t v325 = *(void *)(v324 - 8);
  MEMORY[0x270FA5388](v324);
  uint64_t v323 = (char *)&v307 - v16;
  uint64_t v349 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A30);
  MEMORY[0x270FA5388](v349);
  uint64_t v350 = (uint64_t)&v307 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v359 = sub_24EA94060();
  uint64_t v18 = *(void *)(v359 - 8);
  MEMORY[0x270FA5388](v359);
  uint64_t v20 = (char *)&v307 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v307 - v22;
  uint64_t v348 = sub_24EA94070();
  MEMORY[0x270FA5388](v348);
  uint64_t v345 = (uint64_t)&v307 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v351 = (char *)&v307 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v331 = (uint64_t *)((char *)&v307 - v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v332 = (uint64_t *)((char *)&v307 - v30);
  MEMORY[0x270FA5388](v31);
  uint64_t v319 = (uint64_t)&v307 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v329 = (char *)&v307 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v330 = (uint64_t *)((char *)&v307 - v36);
  MEMORY[0x270FA5388](v37);
  uint64_t v318 = (uint64_t)&v307 - v38;
  MEMORY[0x270FA5388](v39);
  uint64_t v328 = (uint64_t *)((char *)&v307 - v40);
  MEMORY[0x270FA5388](v41);
  uint64_t v317 = (uint64_t)&v307 - v42;
  MEMORY[0x270FA5388](v43);
  uint64_t v327 = (uint64_t *)((char *)&v307 - v44);
  MEMORY[0x270FA5388](v45);
  uint64_t v308 = (uint64_t)&v307 - v46;
  MEMORY[0x270FA5388](v47);
  uint64_t v310 = (uint64_t)&v307 - v48;
  MEMORY[0x270FA5388](v49);
  v309 = (char *)&v307 - v50;
  MEMORY[0x270FA5388](v51);
  uint64_t v311 = (uint64_t)&v307 - v52;
  MEMORY[0x270FA5388](v53);
  uint64_t v312 = (uint64_t)&v307 - v54;
  MEMORY[0x270FA5388](v55);
  uint64_t v333 = (uint64_t)&v307 - v56;
  MEMORY[0x270FA5388](v57);
  uint64_t v316 = (uint64_t)&v307 - v58;
  MEMORY[0x270FA5388](v59);
  uint64_t v326 = (char *)&v307 - v60;
  MEMORY[0x270FA5388](v61);
  uint64_t v63 = (char *)&v307 - v62;
  MEMORY[0x270FA5388](v64);
  unint64_t v66 = (char *)&v307 - v65;
  MEMORY[0x270FA5388](v67);
  unint64_t v69 = (char *)&v307 - v68;
  MEMORY[0x270FA5388](v70);
  __n128 v72 = (char *)&v307 - v71;
  sub_24EA94120();
  sub_24EA94040();
  v346 = (uint64_t *)v72;
  sub_24EA93710((uint64_t)v72);
  sub_24EA94130();
  sub_24EA94040();
  sub_24EA93710((uint64_t)v69);
  LOBYTE(v8) = sub_24EA94050();
  __n128 v73 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v74 = v359;
  v73(v20, v359);
  v73(v23, v74);
  if (v8)
  {
    sub_24EA94120();
    sub_24EA94130();
    uint64_t v75 = v350;
    uint64_t v76 = (uint64_t *)(v350 + *(int *)(v349 + 48));
    sub_24EA9376C((uint64_t)v66, v350);
    sub_24EA9376C((uint64_t)v63, (uint64_t)v76);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v78 = (uint64_t)v351;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v87 = v327;
        sub_24EA937D0(v75, (uint64_t)v327);
        uint64_t v88 = *v87;
        int v89 = swift_getEnumCaseMultiPayload();
        if (v89 == 1)
        {
          uint64_t v176 = v346;
          sub_24EA937D0((uint64_t)v76, (uint64_t)v346);
          uint64_t v105 = *v176;
          sub_24EA93710((uint64_t)v76);
          goto LABEL_39;
        }
        if (v89 != 4) {
          goto LABEL_57;
        }
        uint64_t v90 = v317;
        sub_24EA937D0((uint64_t)v76, v317);
        uint64_t v91 = sub_24EA940C0();
        uint64_t v92 = *(void *)(v91 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v92 + 88))(v90, v91) == *MEMORY[0x263F3F218])
        {
          uint64_t v357 = v88;
          uint64_t v93 = (uint64_t)v335;
          uint64_t v94 = v340;
          (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
          uint64_t v95 = v342;
          uint64_t v96 = ArtworkPredicateValue.init(value:)(v93, v94, v342);
          MEMORY[0x270FA5388](v96);
          uint64_t v97 = v341;
          *(&v307 - 2) = v94;
          *(&v307 - 1) = (uint64_t)v97;
          goto LABEL_36;
        }
        goto LABEL_48;
      case 2:
        uint64_t v98 = v328;
        sub_24EA937D0(v75, (uint64_t)v328);
        uint64_t v100 = *v98;
        uint64_t v99 = v98[1];
        int v101 = swift_getEnumCaseMultiPayload();
        if (v101 == 2) {
          goto LABEL_27;
        }
        if (v101 != 4) {
          goto LABEL_29;
        }
        uint64_t v78 = v318;
        sub_24EA937D0((uint64_t)v76, v318);
        uint64_t v102 = sub_24EA940C0();
        uint64_t v103 = *(void *)(v102 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v103 + 88))(v78, v102) == *MEMORY[0x263F3F230]) {
          goto LABEL_45;
        }
        goto LABEL_50;
      case 3:
        uint64_t v104 = v330;
        sub_24EA937D0(v75, (uint64_t)v330);
        if (swift_getEnumCaseMultiPayload() != 3) {
          goto LABEL_57;
        }
        uint64_t v88 = *v104;
        uint64_t v105 = *v76;
LABEL_39:
        sub_24EA93710(v75);
        uint64_t result = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_269929A58);
        unint64_t v177 = v347;
        v347[3] = (uint64_t)result;
        v177[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
        *unint64_t v177 = v88;
        v177[1] = v105;
        return result;
      case 4:
        uint64_t v106 = v333;
        sub_24EA937D0(v75, v333);
        uint64_t v91 = sub_24EA940C0();
        uint64_t v107 = *(void *)(v91 - 8);
        uint64_t v108 = *(uint64_t (**)(uint64_t, uint64_t))(v107 + 88);
        int v109 = v108(v106, v91);
        if (v109 == *MEMORY[0x263F3F220])
        {
          if (swift_getEnumCaseMultiPayload()) {
            goto LABEL_108;
          }
          uint64_t v110 = (uint64_t)v335;
          uint64_t v111 = v340;
          (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
          uint64_t v112 = v342;
          uint64_t v113 = ArtworkPredicateValue.init(value:)(v110, v111, v342);
          MEMORY[0x270FA5388](v113);
          unint64_t v114 = v341;
          *(&v307 - 2) = v111;
          *(&v307 - 1) = (uint64_t)v114;
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v116 = v323;
          ArtworkPredicateKeyPath.init(root:keyPath:)(v112, KeyPath, v343, v323);
          uint64_t v357 = sub_24EA93FC0();
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929F90);
          uint64_t v118 = v324;
          uint64_t v119 = swift_getWitnessTable();
          uint64_t v120 = sub_24EA93AE8((unint64_t *)&qword_269929F98, &qword_269929F90);
          uint64_t v352 = v118;
          uint64_t v353 = v117;
          uint64_t v354 = v119;
          uint64_t v355 = v120;
          unint64_t v356 = MEMORY[0x263F8D6E8];
          uint64_t v121 = type metadata accessor for ArtworkPredicateEquality();
          uint64_t v122 = v347;
          v347[3] = v121;
          v122[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v122);
          static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)v116, (uint64_t)&v357, v118, v117, (uint64_t)boxed_opaque_existential_1);
          (*(void (**)(char *, uint64_t))(v325 + 8))(v116, v118);
          return (void *)sub_24EA93710(v75);
        }
        int v139 = v109;
        if (v109 == *MEMORY[0x263F3F218])
        {
          int v140 = swift_getEnumCaseMultiPayload();
          if (v140 != 4)
          {
            if (v140 != 1) {
              goto LABEL_108;
            }
            uint64_t v141 = v346;
            sub_24EA937D0((uint64_t)v76, (uint64_t)v346);
            uint64_t v142 = *v141;
            uint64_t v143 = (uint64_t)v335;
            uint64_t v144 = v340;
            (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
            uint64_t v145 = v342;
            uint64_t v146 = ArtworkPredicateValue.init(value:)(v143, v144, v342);
            MEMORY[0x270FA5388](v146);
            uint64_t v147 = v341;
            *(&v307 - 2) = v144;
            *(&v307 - 1) = (uint64_t)v147;
            uint64_t v148 = swift_getKeyPath();
            uint64_t v149 = v323;
            ArtworkPredicateKeyPath.init(root:keyPath:)(v145, v148, v343, v323);
            uint64_t v357 = v142;
            uint64_t v150 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929F90);
            uint64_t v151 = v324;
            uint64_t v152 = swift_getWitnessTable();
            uint64_t v153 = sub_24EA93AE8((unint64_t *)&qword_269929F98, &qword_269929F90);
            uint64_t v352 = v151;
            uint64_t v353 = v150;
            uint64_t v354 = v152;
            uint64_t v355 = v153;
            unint64_t v356 = MEMORY[0x263F8D6E8];
            uint64_t v154 = type metadata accessor for ArtworkPredicateEquality();
            uint64_t v155 = v347;
            v347[3] = v154;
            v155[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            uint64_t v156 = __swift_allocate_boxed_opaque_existential_1(v155);
            uint64_t v157 = &v357;
            uint64_t v158 = v156;
            uint64_t v159 = (uint64_t *)v149;
            uint64_t v160 = v151;
            uint64_t v161 = v150;
LABEL_37:
            static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)v159, (uint64_t)v157, v160, v161, (uint64_t)v158);
            uint64_t v175 = (uint64_t *)&v356;
            goto LABEL_43;
          }
          uint64_t v234 = v312;
          sub_24EA937D0((uint64_t)v76, v312);
          if (v108(v234, v91) == v139)
          {
            if (qword_269928EC8 != -1) {
              swift_once();
            }
            uint64_t v235 = sub_24EA941C0();
            __swift_project_value_buffer(v235, (uint64_t)qword_269931C48);
            uint64_t v236 = sub_24EA941A0();
            os_log_type_t v237 = sub_24EA947B0();
            if (os_log_type_enabled(v236, v237))
            {
              uint64_t v238 = (uint8_t *)swift_slowAlloc();
              uint64_t v239 = swift_slowAlloc();
              uint64_t v352 = v239;
              *(_DWORD *)uint64_t v238 = 136315138;
              uint64_t v357 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v352);
              sub_24EA94830();
              _os_log_impl(&dword_24EA1C000, v236, v237, "%s", v238, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x253348310](v239, -1, -1);
              MEMORY[0x253348310](v238, -1, -1);
            }

            uint64_t v240 = (uint64_t)v335;
            uint64_t v241 = v340;
            (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
            uint64_t v242 = v342;
            uint64_t v243 = ArtworkPredicateValue.init(value:)(v240, v241, v342);
            MEMORY[0x270FA5388](v243);
            v244 = v341;
            *(&v307 - 2) = v241;
            *(&v307 - 1) = (uint64_t)v244;
            uint64_t v245 = swift_getKeyPath();
            long long v246 = v323;
            ArtworkPredicateKeyPath.init(root:keyPath:)(v242, v245, v343, v323);
            uint64_t v247 = v324;
            uint64_t v248 = swift_getWitnessTable();
            uint64_t v352 = v247;
            uint64_t v353 = v247;
            uint64_t v354 = v248;
            uint64_t v355 = v248;
            unint64_t v356 = MEMORY[0x263F8D6E8];
            uint64_t v249 = type metadata accessor for ArtworkPredicateEquality();
            uint64_t v250 = v347;
            v347[3] = v249;
            v250[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            int v251 = __swift_allocate_boxed_opaque_existential_1(v250);
            static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)v246, (uint64_t)v246, v247, v247, (uint64_t)v251);
            uint64_t v252 = (uint64_t *)&v356;
            goto LABEL_106;
          }
          goto LABEL_107;
        }
        if (v109 == *MEMORY[0x263F3F230])
        {
          int v212 = swift_getEnumCaseMultiPayload();
          if (v212 != 4)
          {
            if (v212 != 2) {
              goto LABEL_108;
            }
LABEL_85:
            uint64_t v254 = v346;
            sub_24EA937D0((uint64_t)v76, (uint64_t)v346);
            uint64_t v256 = *v254;
            uint64_t v255 = v254[1];
            uint64_t v257 = (uint64_t)v335;
            uint64_t v258 = v340;
            (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
            uint64_t v259 = v342;
            uint64_t v260 = ArtworkPredicateValue.init(value:)(v257, v258, v342);
            MEMORY[0x270FA5388](v260);
            uint64_t v261 = v341;
            *(&v307 - 2) = v258;
            *(&v307 - 1) = (uint64_t)v261;
            uint64_t v262 = swift_getKeyPath();
            uint64_t v263 = v320;
            ArtworkPredicateKeyPath.init(root:keyPath:)(v259, v262, v343, v320);
            uint64_t v357 = v256;
            uint64_t v358 = v255;
            uint64_t v264 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26992A098);
            uint64_t v265 = v321;
            uint64_t v266 = swift_getWitnessTable();
            uint64_t v267 = sub_24EA93AE8(&qword_26992A0A0, &qword_26992A098);
            uint64_t v352 = v265;
            uint64_t v353 = v264;
            uint64_t v354 = v266;
            uint64_t v355 = v267;
            unint64_t v356 = MEMORY[0x263F8D338];
            uint64_t v268 = type metadata accessor for ArtworkPredicateEquality();
            unint64_t v269 = v347;
            v347[3] = v268;
            v269[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            uint64_t v270 = __swift_allocate_boxed_opaque_existential_1(v269);
            static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)v263, (uint64_t)&v357, v265, v264, (uint64_t)v270);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v322 + 8))(v263, v265);
            goto LABEL_46;
          }
          uint64_t v234 = v311;
          sub_24EA937D0((uint64_t)v76, v311);
          if (v108(v234, v91) == v139)
          {
            if (qword_269928EC8 != -1) {
              swift_once();
            }
            uint64_t v271 = sub_24EA941C0();
            __swift_project_value_buffer(v271, (uint64_t)qword_269931C48);
            v272 = sub_24EA941A0();
            os_log_type_t v273 = sub_24EA947B0();
            if (os_log_type_enabled(v272, v273))
            {
              uint64_t v274 = (uint8_t *)swift_slowAlloc();
              uint64_t v275 = swift_slowAlloc();
              uint64_t v352 = v275;
              *(_DWORD *)uint64_t v274 = 136315138;
              uint64_t v357 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v352);
              sub_24EA94830();
              _os_log_impl(&dword_24EA1C000, v272, v273, "%s", v274, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x253348310](v275, -1, -1);
              MEMORY[0x253348310](v274, -1, -1);
            }
LABEL_105:

            uint64_t v297 = (uint64_t)v335;
            uint64_t v298 = v340;
            (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
            uint64_t v299 = v342;
            uint64_t v300 = ArtworkPredicateValue.init(value:)(v297, v298, v342);
            MEMORY[0x270FA5388](v300);
            v301 = v341;
            *(&v307 - 2) = v298;
            *(&v307 - 1) = (uint64_t)v301;
            uint64_t v302 = swift_getKeyPath();
            long long v246 = v320;
            ArtworkPredicateKeyPath.init(root:keyPath:)(v299, v302, v343, v320);
            uint64_t v247 = v321;
            uint64_t v303 = swift_getWitnessTable();
            uint64_t v352 = v247;
            uint64_t v353 = v247;
            uint64_t v354 = v303;
            uint64_t v355 = v303;
            unint64_t v356 = MEMORY[0x263F8D338];
            uint64_t v304 = type metadata accessor for ArtworkPredicateEquality();
            uint64_t v305 = v347;
            v347[3] = v304;
            v305[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            uint64_t v306 = __swift_allocate_boxed_opaque_existential_1(v305);
            static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)v246, (uint64_t)v246, v247, v247, (uint64_t)v306);
            uint64_t v252 = &v353;
LABEL_106:
            (*(void (**)(char *, uint64_t))(*(v252 - 32) + 8))(v246, v247);
            goto LABEL_46;
          }
          goto LABEL_107;
        }
        if (v109 == *MEMORY[0x263F3F238])
        {
          int v219 = swift_getEnumCaseMultiPayload();
          if (v219 != 4)
          {
            if (v219 != 5) {
              goto LABEL_108;
            }
            uint64_t v220 = v309;
            sub_24EA937D0((uint64_t)v76, (uint64_t)v309);
            LOBYTE(v220) = *v220;
            uint64_t v221 = (uint64_t)v335;
            uint64_t v222 = v340;
            (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
            uint64_t v223 = v342;
            uint64_t v224 = ArtworkPredicateValue.init(value:)(v221, v222, v342);
            MEMORY[0x270FA5388](v224);
            uint64_t v225 = v341;
            *(&v307 - 2) = v222;
            *(&v307 - 1) = (uint64_t)v225;
            uint64_t v226 = swift_getKeyPath();
            uint64_t v149 = v313;
            ArtworkPredicateKeyPath.init(root:keyPath:)(v223, v226, v343, v313);
            LOBYTE(v357) = (_BYTE)v220;
            uint64_t v227 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26992A0A8);
            uint64_t v151 = v315;
            uint64_t v228 = swift_getWitnessTable();
            uint64_t v229 = sub_24EA93AE8(&qword_26992A0B0, &qword_26992A0A8);
            unint64_t v230 = sub_24EA53544();
            uint64_t v352 = v151;
            uint64_t v353 = v227;
            uint64_t v354 = v228;
            uint64_t v355 = v229;
            unint64_t v356 = v230;
            uint64_t v231 = type metadata accessor for ArtworkPredicateEquality();
            unint64_t v232 = v347;
            v347[3] = v231;
            v232[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            uint64_t v233 = __swift_allocate_boxed_opaque_existential_1(v232);
            uint64_t v192 = &v357;
            uint64_t v190 = v233;
            uint64_t v191 = (uint64_t *)v149;
            uint64_t v193 = v151;
            uint64_t v194 = v227;
LABEL_42:
            static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)v191, (uint64_t)v192, v193, v194, (uint64_t)v190);
            uint64_t v175 = (uint64_t *)&v346;
LABEL_43:
            (*(void (**)(char *, uint64_t))(*(v175 - 32) + 8))(v149, v151);
LABEL_46:
            sub_24EA93710((uint64_t)v76);
            return (void *)sub_24EA93710(v75);
          }
          uint64_t v234 = v310;
          sub_24EA937D0((uint64_t)v76, v310);
          if (v108(v234, v91) == v139)
          {
            if (qword_269928EC8 != -1) {
              swift_once();
            }
            uint64_t v277 = sub_24EA941C0();
            __swift_project_value_buffer(v277, (uint64_t)qword_269931C48);
            v278 = sub_24EA941A0();
            os_log_type_t v279 = sub_24EA947B0();
            if (os_log_type_enabled(v278, v279))
            {
              uint64_t v280 = (uint8_t *)swift_slowAlloc();
              uint64_t v281 = swift_slowAlloc();
              uint64_t v352 = v281;
              *(_DWORD *)uint64_t v280 = 136315138;
              uint64_t v357 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v352);
              sub_24EA94830();
              _os_log_impl(&dword_24EA1C000, v278, v279, "%s", v280, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x253348310](v281, -1, -1);
              MEMORY[0x253348310](v280, -1, -1);
            }

            uint64_t v282 = (uint64_t)v335;
            uint64_t v283 = v340;
            (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
            uint64_t v284 = v342;
            uint64_t v285 = ArtworkPredicateValue.init(value:)(v282, v283, v342);
            MEMORY[0x270FA5388](v285);
            uint64_t v286 = v341;
            *(&v307 - 2) = v283;
            *(&v307 - 1) = (uint64_t)v286;
            uint64_t v287 = swift_getKeyPath();
            long long v246 = v313;
            ArtworkPredicateKeyPath.init(root:keyPath:)(v284, v287, v343, v313);
            uint64_t v247 = v315;
            uint64_t v288 = swift_getWitnessTable();
            unint64_t v289 = sub_24EA53544();
            uint64_t v352 = v247;
            uint64_t v353 = v247;
            uint64_t v354 = v288;
            uint64_t v355 = v288;
            unint64_t v356 = v289;
            uint64_t v290 = type metadata accessor for ArtworkPredicateEquality();
            unint64_t v291 = v347;
            v347[3] = v290;
            v291[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
            unint64_t v292 = __swift_allocate_boxed_opaque_existential_1(v291);
            static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)v246, (uint64_t)v246, v247, v247, (uint64_t)v292);
            uint64_t v252 = (uint64_t *)&v346;
            goto LABEL_106;
          }
          goto LABEL_107;
        }
        if (v109 == *MEMORY[0x263F3F228])
        {
          int v253 = swift_getEnumCaseMultiPayload();
          if (v253 != 4)
          {
            if (v253 != 7) {
              goto LABEL_108;
            }
            goto LABEL_85;
          }
          uint64_t v234 = v308;
          sub_24EA937D0((uint64_t)v76, v308);
          if (v108(v234, v91) == v139)
          {
            if (qword_269928EC8 != -1) {
              swift_once();
            }
            uint64_t v293 = sub_24EA941C0();
            __swift_project_value_buffer(v293, (uint64_t)qword_269931C48);
            v272 = sub_24EA941A0();
            os_log_type_t v294 = sub_24EA947B0();
            if (os_log_type_enabled(v272, v294))
            {
              v295 = (uint8_t *)swift_slowAlloc();
              uint64_t v296 = swift_slowAlloc();
              uint64_t v352 = v296;
              *(_DWORD *)v295 = 136315138;
              uint64_t v357 = sub_24EA81BE0(0xD00000000000006BLL, 0x800000024EA9ABB0, &v352);
              sub_24EA94830();
              _os_log_impl(&dword_24EA1C000, v272, v294, "%s", v295, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x253348310](v296, -1, -1);
              MEMORY[0x253348310](v295, -1, -1);
            }
            goto LABEL_105;
          }
LABEL_107:
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v234, v91);
LABEL_108:
          sub_24EA93710((uint64_t)v76);
          sub_24EA93710(v75);
          sub_24EA676D8();
          swift_allocError();
          char v86 = 7;
          break;
        }
        uint64_t v209 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
        uint64_t v210 = v333;
LABEL_49:
        uint64_t v211 = v91;
LABEL_56:
        v209(v210, v211);
LABEL_57:
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v213 = v345;
          sub_24EA937D0((uint64_t)v76, v345);
          uint64_t v214 = sub_24EA940C0();
          uint64_t v215 = *(void *)(v214 - 8);
          int v216 = (*(uint64_t (**)(uint64_t, uint64_t))(v215 + 88))(v213, v214);
          if (v216 == *MEMORY[0x263F3F220]
            || v216 == *MEMORY[0x263F3F218]
            || v216 == *MEMORY[0x263F3F230]
            || v216 == *MEMORY[0x263F3F238]
            || v216 == *MEMORY[0x263F3F228])
          {
            goto LABEL_108;
          }
          (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v213, v214);
        }
        int v217 = 1 << swift_getEnumCaseMultiPayload();
        if ((v217 & 0x2B) != 0) {
          goto LABEL_67;
        }
        if ((v217 & 0xC4) != 0) {
          goto LABEL_66;
        }
        int v218 = 1 << swift_getEnumCaseMultiPayload();
        if ((v218 & 0x2B) != 0)
        {
          uint64_t v76 = (uint64_t *)v75;
        }
        else
        {
          if ((v218 & 0xC4) == 0)
          {
            sub_24EA676D8();
            swift_allocError();
            unsigned char *v276 = 10;
            swift_willThrow();
            return (void *)sub_24EA93834(v75);
          }
          uint64_t v76 = (uint64_t *)v75;
LABEL_66:
          swift_bridgeObjectRelease();
        }
LABEL_67:
        sub_24EA93710((uint64_t)v76);
        sub_24EA676D8();
        swift_allocError();
        char v86 = 2;
        break;
      case 5:
        uint64_t v124 = v329;
        sub_24EA937D0(v75, (uint64_t)v329);
        char v125 = *v124;
        int v126 = swift_getEnumCaseMultiPayload();
        if (v126 != 4)
        {
          if (v126 != 5) {
            goto LABEL_57;
          }
          uint64_t v127 = v346;
          sub_24EA937D0((uint64_t)v76, (uint64_t)v346);
          LOBYTE(v127) = *(unsigned char *)v127;
          uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A50);
          uint64_t v129 = v347;
          v347[3] = v128;
          v129[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          *(unsigned char *)uint64_t v129 = v125;
          *((unsigned char *)v129 + 1) = (_BYTE)v127;
          goto LABEL_46;
        }
        uint64_t v90 = v319;
        sub_24EA937D0((uint64_t)v76, v319);
        uint64_t v91 = sub_24EA940C0();
        uint64_t v92 = *(void *)(v91 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v92 + 88))(v90, v91) == *MEMORY[0x263F3F238])
        {
          LOBYTE(v357) = v125;
          uint64_t v178 = (uint64_t)v335;
          uint64_t v179 = v340;
          (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
          uint64_t v180 = v342;
          uint64_t v181 = ArtworkPredicateValue.init(value:)(v178, v179, v342);
          MEMORY[0x270FA5388](v181);
          uint64_t v182 = v341;
          *(&v307 - 2) = v179;
          *(&v307 - 1) = (uint64_t)v182;
          uint64_t v183 = swift_getKeyPath();
          uint64_t v149 = v313;
          ArtworkPredicateKeyPath.init(root:keyPath:)(v180, v183, v343, v313);
          uint64_t v184 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26992A0A8);
          uint64_t v185 = sub_24EA93AE8(&qword_26992A0B0, &qword_26992A0A8);
          uint64_t v151 = v315;
          uint64_t v186 = swift_getWitnessTable();
          unint64_t v187 = sub_24EA53544();
          uint64_t v352 = v184;
          uint64_t v353 = v151;
          uint64_t v354 = v185;
          uint64_t v355 = v186;
          unint64_t v356 = v187;
          uint64_t v188 = type metadata accessor for ArtworkPredicateEquality();
          v189 = v347;
          v347[3] = v188;
          v189[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t v190 = __swift_allocate_boxed_opaque_existential_1(v189);
          uint64_t v191 = &v357;
          uint64_t v192 = (uint64_t *)v149;
          uint64_t v193 = v184;
          uint64_t v194 = v151;
          goto LABEL_42;
        }
LABEL_48:
        uint64_t v209 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
        uint64_t v210 = v90;
        goto LABEL_49;
      case 6:
        uint64_t v130 = v332;
        sub_24EA937D0(v75, (uint64_t)v332);
        uint64_t v99 = v130[1];
        if (swift_getEnumCaseMultiPayload() != 6) {
          goto LABEL_29;
        }
        uint64_t v100 = *v130;
        uint64_t v131 = *v76;
        uint64_t v132 = v76[1];
        goto LABEL_28;
      case 7:
        unint64_t v133 = v331;
        sub_24EA937D0(v75, (uint64_t)v331);
        uint64_t v100 = *v133;
        uint64_t v99 = v133[1];
        int v134 = swift_getEnumCaseMultiPayload();
        if (v134 != 4)
        {
          if (v134 != 7)
          {
LABEL_29:
            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
LABEL_27:
          uint64_t v135 = v346;
          sub_24EA937D0((uint64_t)v76, (uint64_t)v346);
          uint64_t v131 = *v135;
          uint64_t v132 = v135[1];
          sub_24EA93710((uint64_t)v76);
LABEL_28:
          sub_24EA93710(v75);
          uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A40);
          uint64_t v137 = v347;
          v347[3] = v136;
          v137[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t result = (void *)swift_allocObject();
          *uint64_t v137 = (uint64_t)result;
          result[2] = v100;
          result[3] = v99;
          result[4] = v131;
          result[5] = v132;
          return result;
        }
        sub_24EA937D0((uint64_t)v76, v78);
        uint64_t v102 = sub_24EA940C0();
        uint64_t v103 = *(void *)(v102 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v103 + 88))(v78, v102) == *MEMORY[0x263F3F228])
        {
LABEL_45:
          uint64_t v357 = v100;
          uint64_t v358 = v99;
          uint64_t v195 = (uint64_t)v335;
          uint64_t v196 = v340;
          (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
          uint64_t v197 = v342;
          uint64_t v198 = ArtworkPredicateValue.init(value:)(v195, v196, v342);
          MEMORY[0x270FA5388](v198);
          uint64_t v199 = v341;
          *(&v307 - 2) = v196;
          *(&v307 - 1) = (uint64_t)v199;
          uint64_t v200 = swift_getKeyPath();
          uint64_t v201 = v320;
          ArtworkPredicateKeyPath.init(root:keyPath:)(v197, v200, v343, v320);
          uint64_t v202 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26992A098);
          uint64_t v203 = sub_24EA93AE8(&qword_26992A0A0, &qword_26992A098);
          uint64_t v204 = v321;
          uint64_t v205 = swift_getWitnessTable();
          uint64_t v352 = v202;
          uint64_t v353 = v204;
          uint64_t v354 = v203;
          uint64_t v355 = v205;
          unint64_t v356 = MEMORY[0x263F8D338];
          uint64_t v206 = type metadata accessor for ArtworkPredicateEquality();
          uint64_t v207 = v347;
          v347[3] = v206;
          v207[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          uint64_t v208 = __swift_allocate_boxed_opaque_existential_1(v207);
          static ArtworkPredicate.makeEquality<A, B>(lhs:rhs:)((uint64_t)&v357, (uint64_t)v201, v202, v204, (uint64_t)v208);
          (*(void (**)(char *, uint64_t))(v322 + 8))(v201, v204);
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v78, v102);
        goto LABEL_57;
      default:
        uint64_t v79 = v326;
        sub_24EA937D0(v75, (uint64_t)v326);
        char v80 = *v79;
        int v81 = swift_getEnumCaseMultiPayload();
        if (v81 != 4)
        {
          if (v81) {
            goto LABEL_57;
          }
          BOOL v82 = v346;
          sub_24EA937D0((uint64_t)v76, (uint64_t)v346);
          LOBYTE(v82) = *(unsigned char *)v82;
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A98);
          uint64_t v84 = v347;
          v347[3] = v83;
          v84[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
          *(unsigned char *)uint64_t v84 = v80;
          *((unsigned char *)v84 + 1) = (_BYTE)v82;
          goto LABEL_46;
        }
        uint64_t v162 = v316;
        sub_24EA937D0((uint64_t)v76, v316);
        uint64_t v163 = sub_24EA940C0();
        uint64_t v164 = *(void *)(v163 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v164 + 88))(v162, v163) != *MEMORY[0x263F3F220])
        {
          uint64_t v209 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
          uint64_t v210 = v162;
          uint64_t v211 = v163;
          goto LABEL_56;
        }
        uint64_t v357 = sub_24EA93FC0();
        uint64_t v165 = (uint64_t)v335;
        uint64_t v166 = v340;
        (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v335, v336, v340);
        uint64_t v95 = v342;
        uint64_t v167 = ArtworkPredicateValue.init(value:)(v165, v166, v342);
        MEMORY[0x270FA5388](v167);
        uint64_t v168 = v341;
        *(&v307 - 2) = v166;
        *(&v307 - 1) = (uint64_t)v168;
LABEL_36:
        uint64_t v169 = swift_getKeyPath();
        uint64_t v149 = v323;
        ArtworkPredicateKeyPath.init(root:keyPath:)(v95, v169, v343, v323);
        uint64_t v170 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269929F90);
        uint64_t v171 = sub_24EA93AE8((unint64_t *)&qword_269929F98, &qword_269929F90);
        uint64_t v151 = v324;
        uint64_t v172 = swift_getWitnessTable();
        uint64_t v352 = v170;
        uint64_t v353 = v151;
        uint64_t v354 = v171;
        uint64_t v355 = v172;
        unint64_t v356 = MEMORY[0x263F8D6E8];
        uint64_t v173 = type metadata accessor for ArtworkPredicateEquality();
        uint64_t v174 = v347;
        v347[3] = v173;
        v174[4] = (uint64_t)&protocol witness table for ArtworkPredicateEquality<A, B>;
        uint64_t v158 = __swift_allocate_boxed_opaque_existential_1(v174);
        uint64_t v159 = &v357;
        uint64_t v157 = (uint64_t *)v149;
        uint64_t v160 = v170;
        uint64_t v161 = v151;
        goto LABEL_37;
    }
  }
  else
  {
    sub_24EA676D8();
    swift_allocError();
    char v86 = 8;
  }
  *uint64_t v85 = v86;
  return (void *)swift_willThrow();
}

uint64_t sub_24EA93710(uint64_t a1)
{
  uint64_t v2 = sub_24EA94070();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA9376C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA94070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA937D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EA94070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EA93834(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269929A30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EA93894@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 48))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24EA938DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 56))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_24EA93924@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 64))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24EA9396C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 64))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24EA939B4()
{
  return 16;
}

__n128 sub_24EA939C0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA939CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24EA93A0C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 56))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_24EA93A54()
{
  return 16;
}

__n128 sub_24EA93A60(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA93A6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 48))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24EA93AB4()
{
  return 16;
}

__n128 sub_24EA93AC0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA93AD0()
{
  return 16;
}

__n128 sub_24EA93ADC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24EA93AE8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_24EA93B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return DynamicPredicateEqualityDescriptor.makePredicateExpression<A>(using:)(a1, a2, a3, a4);
}

uint64_t sub_24EA93B54()
{
  return 16;
}

__n128 sub_24EA93B60(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

BOOL static AssetError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AssetError.hash(into:)()
{
  return sub_24EA94B80();
}

uint64_t AssetError.hashValue.getter()
{
  return sub_24EA94BB0();
}

unint64_t sub_24EA93BF8()
{
  unint64_t result = qword_26992A0B8;
  if (!qword_26992A0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26992A0B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EA93D18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetError()
{
  return &type metadata for AssetError;
}

uint64_t sub_24EA93D60()
{
  return MEMORY[0x270EEF3D0]();
}

uint64_t sub_24EA93D70()
{
  return MEMORY[0x270EEF3D8]();
}

uint64_t sub_24EA93D90()
{
  return MEMORY[0x270EEF448]();
}

uint64_t sub_24EA93DA0()
{
  return MEMORY[0x270EEF460]();
}

uint64_t sub_24EA93DB0()
{
  return MEMORY[0x270EEF470]();
}

uint64_t sub_24EA93DC0()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_24EA93DD0()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24EA93DE0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24EA93DF0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24EA93E00()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24EA93E10()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_24EA93E20()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_24EA93E30()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24EA93E40()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24EA93E50()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24EA93E60()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24EA93E70()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24EA93E80()
{
  return MEMORY[0x270F2B288]();
}

uint64_t sub_24EA93E90()
{
  return MEMORY[0x270F2B290]();
}

uint64_t sub_24EA93EA0()
{
  return MEMORY[0x270F2B2D8]();
}

uint64_t sub_24EA93EB0()
{
  return MEMORY[0x270F2B2F8]();
}

uint64_t sub_24EA93EC0()
{
  return MEMORY[0x270F2B300]();
}

uint64_t sub_24EA93ED0()
{
  return MEMORY[0x270F2B308]();
}

uint64_t sub_24EA93EE0()
{
  return MEMORY[0x270F2B310]();
}

uint64_t sub_24EA93EF0()
{
  return MEMORY[0x270F2B318]();
}

uint64_t sub_24EA93F00()
{
  return MEMORY[0x270F2B328]();
}

uint64_t sub_24EA93F10()
{
  return MEMORY[0x270F2B330]();
}

uint64_t sub_24EA93F20()
{
  return MEMORY[0x270F2B3D0]();
}

uint64_t sub_24EA93F30()
{
  return MEMORY[0x270F2B3E0]();
}

uint64_t sub_24EA93F40()
{
  return MEMORY[0x270F2B3E8]();
}

uint64_t sub_24EA93F50()
{
  return MEMORY[0x270F2B3F0]();
}

uint64_t sub_24EA93F60()
{
  return MEMORY[0x270F2B400]();
}

uint64_t sub_24EA93F70()
{
  return MEMORY[0x270F2B408]();
}

uint64_t sub_24EA93F80()
{
  return MEMORY[0x270F2B418]();
}

uint64_t sub_24EA93F90()
{
  return MEMORY[0x270F2B420]();
}

uint64_t sub_24EA93FA0()
{
  return MEMORY[0x270F2B428]();
}

uint64_t sub_24EA93FB0()
{
  return MEMORY[0x270F2B430]();
}

uint64_t sub_24EA93FC0()
{
  return MEMORY[0x270F2CCC8]();
}

uint64_t sub_24EA93FD0()
{
  return MEMORY[0x270F2CCE8]();
}

uint64_t sub_24EA93FE0()
{
  return MEMORY[0x270F2CCF0]();
}

uint64_t sub_24EA93FF0()
{
  return MEMORY[0x270F2CCF8]();
}

uint64_t sub_24EA94000()
{
  return MEMORY[0x270F2CD00]();
}

uint64_t sub_24EA94010()
{
  return MEMORY[0x270F2CD08]();
}

uint64_t sub_24EA94020()
{
  return MEMORY[0x270F2CDA0]();
}

uint64_t sub_24EA94030()
{
  return MEMORY[0x270F2CDA8]();
}

uint64_t sub_24EA94040()
{
  return MEMORY[0x270F2CDB8]();
}

uint64_t sub_24EA94050()
{
  return MEMORY[0x270F2CDC0]();
}

uint64_t sub_24EA94060()
{
  return MEMORY[0x270F2CDC8]();
}

uint64_t sub_24EA94070()
{
  return MEMORY[0x270F2CDD0]();
}

uint64_t sub_24EA94080()
{
  return MEMORY[0x270F2CDD8]();
}

uint64_t sub_24EA94090()
{
  return MEMORY[0x270F2CDE0]();
}

uint64_t sub_24EA940A0()
{
  return MEMORY[0x270F2CDE8]();
}

uint64_t sub_24EA940B0()
{
  return MEMORY[0x270F2CDF0]();
}

uint64_t sub_24EA940C0()
{
  return MEMORY[0x270F2CE10]();
}

uint64_t sub_24EA940D0()
{
  return MEMORY[0x270F2CE18]();
}

uint64_t sub_24EA940E0()
{
  return MEMORY[0x270F2CE20]();
}

uint64_t sub_24EA940F0()
{
  return MEMORY[0x270F2CE30]();
}

uint64_t sub_24EA94100()
{
  return MEMORY[0x270F2CE38]();
}

uint64_t sub_24EA94110()
{
  return MEMORY[0x270F2CE40]();
}

uint64_t sub_24EA94120()
{
  return MEMORY[0x270F2CE50]();
}

uint64_t sub_24EA94130()
{
  return MEMORY[0x270F2CE58]();
}

uint64_t sub_24EA94140()
{
  return MEMORY[0x270F2CE60]();
}

uint64_t sub_24EA94150()
{
  return MEMORY[0x270F2CE70]();
}

uint64_t sub_24EA94160()
{
  return MEMORY[0x270F2CE78]();
}

uint64_t sub_24EA94170()
{
  return MEMORY[0x270F2CE80]();
}

uint64_t sub_24EA94180()
{
  return MEMORY[0x270F2CE88]();
}

uint64_t sub_24EA94190()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_24EA941A0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24EA941B0()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24EA941C0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24EA941D0()
{
  return MEMORY[0x270EFEFD0]();
}

uint64_t sub_24EA941E0()
{
  return MEMORY[0x270EFF108]();
}

uint64_t sub_24EA941F0()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_24EA94200()
{
  return MEMORY[0x270EFF6F8]();
}

uint64_t sub_24EA94210()
{
  return MEMORY[0x270EFFCB0]();
}

uint64_t sub_24EA94220()
{
  return MEMORY[0x270EFFCD8]();
}

uint64_t sub_24EA94230()
{
  return MEMORY[0x270EFFCF8]();
}

uint64_t sub_24EA94240()
{
  return MEMORY[0x270EFFEE0]();
}

uint64_t sub_24EA94250()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_24EA94260()
{
  return MEMORY[0x270F00A00]();
}

uint64_t sub_24EA94270()
{
  return MEMORY[0x270F00A18]();
}

uint64_t sub_24EA94280()
{
  return MEMORY[0x270F00B18]();
}

uint64_t sub_24EA94290()
{
  return MEMORY[0x270F00BC8]();
}

uint64_t sub_24EA942A0()
{
  return MEMORY[0x270F00BE0]();
}

uint64_t sub_24EA942B0()
{
  return MEMORY[0x270F00BE8]();
}

uint64_t sub_24EA942C0()
{
  return MEMORY[0x270F00ED8]();
}

uint64_t sub_24EA942D0()
{
  return MEMORY[0x270F00EE0]();
}

uint64_t sub_24EA942E0()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_24EA942F0()
{
  return MEMORY[0x270F01608]();
}

uint64_t sub_24EA94300()
{
  return MEMORY[0x270F01610]();
}

uint64_t sub_24EA94310()
{
  return MEMORY[0x270F016E0]();
}

uint64_t sub_24EA94320()
{
  return MEMORY[0x270F016F8]();
}

uint64_t sub_24EA94330()
{
  return MEMORY[0x270F01708]();
}

uint64_t sub_24EA94350()
{
  return MEMORY[0x270F01728]();
}

uint64_t sub_24EA94360()
{
  return MEMORY[0x270F01738]();
}

uint64_t sub_24EA94370()
{
  return MEMORY[0x270F01748]();
}

uint64_t sub_24EA94380()
{
  return MEMORY[0x270F01758]();
}

uint64_t sub_24EA94390()
{
  return MEMORY[0x270F01768]();
}

uint64_t sub_24EA943A0()
{
  return MEMORY[0x270F01778]();
}

uint64_t sub_24EA943C0()
{
  return MEMORY[0x270F01790]();
}

uint64_t sub_24EA943D0()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_24EA943E0()
{
  return MEMORY[0x270F01D20]();
}

uint64_t sub_24EA943F0()
{
  return MEMORY[0x270F01E68]();
}

uint64_t sub_24EA94400()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_24EA94410()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_24EA94420()
{
  return MEMORY[0x270F030A8]();
}

uint64_t sub_24EA94430()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_24EA94440()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_24EA94450()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_24EA94460()
{
  return MEMORY[0x270F036A8]();
}

uint64_t sub_24EA94470()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_24EA94480()
{
  return MEMORY[0x270F04188]();
}

uint64_t sub_24EA94490()
{
  return MEMORY[0x270F045A8]();
}

uint64_t sub_24EA944A0()
{
  return MEMORY[0x270F04630]();
}

uint64_t sub_24EA944B0()
{
  return MEMORY[0x270F04650]();
}

uint64_t sub_24EA944C0()
{
  return MEMORY[0x270F04690]();
}

uint64_t sub_24EA944D0()
{
  return MEMORY[0x270F04718]();
}

uint64_t sub_24EA944E0()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_24EA94500()
{
  return MEMORY[0x270F25398]();
}

uint64_t sub_24EA94510()
{
  return MEMORY[0x270F253A0]();
}

uint64_t sub_24EA94520()
{
  return MEMORY[0x270F253B0]();
}

uint64_t sub_24EA94530()
{
  return MEMORY[0x270F253C0]();
}

uint64_t sub_24EA94540()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24EA94550()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_24EA94560()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24EA94570()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24EA94580()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24EA94590()
{
  return MEMORY[0x270F9D480]();
}

uint64_t sub_24EA945A0()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_24EA945B0()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_24EA945C0()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_24EA945D0()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24EA945E0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24EA945F0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24EA94600()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24EA94610()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24EA94620()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24EA94630()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24EA94640()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_24EA94650()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24EA94660()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24EA94670()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24EA94680()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24EA94690()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24EA946A0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24EA946B0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24EA946C0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24EA946D0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24EA946E0()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_24EA946F0()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_24EA94700()
{
  return MEMORY[0x270FA1E30]();
}

uint64_t sub_24EA94720()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_24EA94730()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_24EA94740()
{
  return MEMORY[0x270FA1EC0]();
}

uint64_t sub_24EA94750()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_24EA94770()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_24EA94780()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_24EA94790()
{
  return MEMORY[0x270F9E0E8]();
}

uint64_t sub_24EA947A0()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_24EA947B0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24EA947C0()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24EA947D0()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24EA947E0()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_24EA947F0()
{
  return MEMORY[0x270EF2078]();
}

uint64_t sub_24EA94800()
{
  return MEMORY[0x270F2B470]();
}

uint64_t sub_24EA94810()
{
  return MEMORY[0x270F2B478]();
}

uint64_t sub_24EA94820()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24EA94830()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24EA94840()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24EA94850()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_24EA94860()
{
  return MEMORY[0x270EF24E0]();
}

uint64_t sub_24EA94870()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_24EA94880()
{
  return MEMORY[0x270F9E718]();
}

uint64_t sub_24EA94890()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24EA948A0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24EA948B0()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_24EA948C0()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_24EA948D0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24EA948E0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24EA948F0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24EA94900()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24EA94910()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24EA94920()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24EA94930()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_24EA94940()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_24EA94950()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_24EA94960()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_24EA94970()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24EA94980()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24EA94990()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24EA949A0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24EA949B0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24EA949C0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24EA949D0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24EA949E0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24EA949F0()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24EA94A00()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24EA94A10()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24EA94A20()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24EA94A30()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_24EA94A40()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24EA94A50()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24EA94A60()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_24EA94A70()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24EA94A80()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_24EA94A90()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24EA94AA0()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_24EA94AB0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24EA94AC0()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_24EA94AD0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24EA94AE0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24EA94B00()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24EA94B10()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_24EA94B30()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24EA94B40()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24EA94B50()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24EA94B60()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24EA94B70()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24EA94B80()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24EA94B90()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24EA94BA0()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24EA94BB0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24EA94BC0()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_24EA94BD0()
{
  return MEMORY[0x270F9FD00]();
}

uint64_t sub_24EA94BE0()
{
  return MEMORY[0x270F9FD08]();
}

uint64_t sub_24EA94BF0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24EA94C00()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24EA94C10()
{
  return MEMORY[0x270F9FFE8]();
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x270EE6750](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}