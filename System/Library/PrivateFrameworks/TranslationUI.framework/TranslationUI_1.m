double (*TextModel.targetString.modify())(double, double)
{
  type metadata accessor for TextModel();
  return CGPointMake;
}

uint64_t TextModel.targetLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TextModel() + 36);
  uint64_t v4 = sub_1DB1EF6B0();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TextModel.targetLocale.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TextModel() + 36);
  uint64_t v4 = sub_1DB1EF6B0();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

double (*TextModel.targetLocale.modify())(double, double)
{
  return CGPointMake;
}

double TextModel.confidence.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TextModel() + 40));
}

uint64_t TextModel.confidence.setter(double a1)
{
  uint64_t result = type metadata accessor for TextModel();
  *(double *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

double (*TextModel.confidence.modify())(double, double)
{
  return CGPointMake;
}

void *TextModel.error.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for TextModel() + 44));
  id v2 = v1;
  return v1;
}

void TextModel.error.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TextModel() + 44);

  *(void *)(v1 + v3) = a1;
}

double (*TextModel.error.modify())(double, double)
{
  return CGPointMake;
}

uint64_t sub_1DB185D1C(char *a1, char *a2)
{
  return sub_1DB16111C(*a1, *a2);
}

uint64_t sub_1DB185D28()
{
  return sub_1DB1B6838();
}

uint64_t sub_1DB185D34()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB185E40()
{
  return sub_1DB1B6838();
}

uint64_t sub_1DB185E48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB18AC14();
  *a1 = result;
  return result;
}

void sub_1DB185E78(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7865646E69;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x656372756F73;
      goto LABEL_7;
    case 3:
      uint64_t v5 = 0x656372756F73;
      goto LABEL_9;
    case 4:
      uint64_t v4 = 0x746567726174;
LABEL_7:
      uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
      uint64_t v7 = 1735289202;
      goto LABEL_10;
    case 5:
      uint64_t v5 = 0x746567726174;
LABEL_9:
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL | 0x6F4C000000000000;
      uint64_t v7 = 1701601635;
LABEL_10:
      *a1 = v6;
      a1[1] = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 6:
      *a1 = 0x6E656469666E6F63;
      a1[1] = 0xEA00000000006563;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DB185F58()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      return 0x7865646E69;
    case 2:
      uint64_t v2 = 0x656372756F73;
      return v2 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
    case 3:
      uint64_t v3 = 0x656372756F73;
      goto LABEL_8;
    case 4:
      uint64_t v2 = 0x746567726174;
      return v2 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
    case 5:
      uint64_t v3 = 0x746567726174;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6F4C000000000000;
      break;
    case 6:
      uint64_t result = 0x6E656469666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB186030@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB18AC14();
  *a1 = result;
  return result;
}

void sub_1DB186058(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1DB186064(uint64_t a1)
{
  unint64_t v2 = sub_1DB188EF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1860A0(uint64_t a1)
{
  unint64_t v2 = sub_1DB188EF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TextModel.init(id:index:sourceString:sourceLocale:targetLocale:useWeightedIdentification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v39 = a5;
  uint64_t v40 = a7;
  uint64_t v38 = a6;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v16 - 8);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1DB1EF570();
  uint64_t v19 = *(void *)(v36 - 8);
  __n128 v20 = MEMORY[0x1F4188790](v36);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v19 + 16))(v22, a1, v20);
  sub_1DB11FF38(a5, (uint64_t)v18);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v35 = v12;
  v23(v15, a6, v12);
  v40 &= 1u;
  v24 = (int *)type metadata accessor for TextModel();
  uint64_t v25 = a8 + v24[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v25, 1, 1, v12);
  v26 = (void *)(a8 + v24[8]);
  void *v26 = 0;
  v26[1] = 0;
  uint64_t v27 = v24[11];
  *(void *)(a8 + v27) = 0;
  uint64_t v28 = v24[12];
  *(void *)(a8 + v28) = 0;
  v29 = v22;
  uint64_t v30 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a8, v29, v36);
  *(void *)(a8 + v24[5]) = v42;
  v31 = (void *)(a8 + v24[6]);
  uint64_t v32 = v44;
  void *v31 = v43;
  v31[1] = v32;
  sub_1DB106F4C((uint64_t)v18, v25);
  swift_bridgeObjectRelease();
  void *v26 = 0;
  v26[1] = 0;
  uint64_t v33 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a8 + v24[9], v37, v35);
  *(void *)(a8 + v24[10]) = 0;

  *(void *)(a8 + v27) = 0;
  *(void *)(a8 + v28) = v40;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v33);
  sub_1DB0E8BD4(v39, &qword_1EBA4E570);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v41, v30);
}

BOOL TextModel.isTranslatable.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for TextModel();
  if (*(void *)(v0 + v4[11])) {
    return 0;
  }
  uint64_t v6 = (uint64_t *)(v0 + v4[6]);
  uint64_t v8 = *v6;
  unint64_t v7 = v6[1];
  uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
  if (!((v7 & 0x2000000000000000) != 0 ? HIBYTE(v7) & 0xF : v9)) {
    return 0;
  }
  sub_1DB11FF38(v0 + v4[7], (uint64_t)v3);
  uint64_t v11 = sub_1DB1EF6B0();
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v3, 1, v11) != 1;
  sub_1DB0E8BD4((uint64_t)v3, &qword_1EBA4E570);
  return v5;
}

uint64_t TextModel.isTranslated.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for TextModel();
  if (*(void *)(v0 + v4[11])) {
    return 0;
  }
  uint64_t v6 = v4;
  unint64_t v7 = (uint64_t *)(v0 + v4[6]);
  uint64_t v9 = *v7;
  unint64_t v8 = v7[1];
  uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
  if (!((v8 & 0x2000000000000000) != 0 ? HIBYTE(v8) & 0xF : v10)) {
    return 0;
  }
  sub_1DB11FF38(v0 + v4[7], (uint64_t)v3);
  uint64_t v12 = sub_1DB1EF6B0();
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v3, 1, v12);
  sub_1DB0E8BD4((uint64_t)v3, &qword_1EBA4E570);
  if (v13 == 1) {
    return 0;
  }
  uint64_t v14 = (void *)(v0 + v6[8]);
  unint64_t v15 = v14[1];
  if (!v15) {
    return 0;
  }
  uint64_t v16 = *v14 & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0 ? HIBYTE(v15) & 0xF : v16) {
    return 1;
  }
  else {
    return 0;
  }
}

uint64_t TextModel.hash(into:)()
{
  sub_1DB1EF570();
  sub_1DB18B294(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  return sub_1DB1F11E0();
}

BOOL static TextModel.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextModel();
  return *(void *)(a1 + *(int *)(v4 + 20)) < *(void *)(a2 + *(int *)(v4 + 20));
}

BOOL static TextModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - v8;
  char v10 = sub_1DB1EF540();
  sub_1DB188E34(a1, (uint64_t)v9);
  sub_1DB188E34(a2, (uint64_t)v6);
  if (v10)
  {
    uint64_t v11 = *(void *)&v9[*(int *)(v4 + 20)];
    sub_1DB188E98((uint64_t)v9);
    uint64_t v12 = *(void *)&v6[*(int *)(v4 + 20)];
    sub_1DB188E98((uint64_t)v6);
    return v11 == v12;
  }
  else
  {
    sub_1DB188E98((uint64_t)v6);
    sub_1DB188E98((uint64_t)v9);
    return 0;
  }
}

uint64_t sub_1DB186830(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for TextModel();
  sub_1DB11FF38(v2 + *(int *)(v7 + 28), (uint64_t)v6);
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4E570);
    return 0;
  }
  sub_1DB1EF590();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v6, v8);
  sub_1DB1F1ED0();
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  sub_1DB1EF590();
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_1DB18AC60(*(void *)(v2 + *(int *)(v7 + 24)), *(void *)(v2 + *(int *)(v7 + 24) + 8));
    if (!v11)
    {
      sub_1DB1F1EA0();
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1DB1F1EA0();
  swift_bridgeObjectRetain();
  sub_1DB1F1360();
  swift_bridgeObjectRelease_n();
LABEL_9:
  long long v19 = v14;
  long long v20 = v15;
  uint64_t v21 = v16;
  long long v17 = *(_OWORD *)&v12[8];
  long long v18 = v13;
  return sub_1DB1F1EB0();
}

uint64_t sub_1DB186A78()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1DB1F1AB0();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0x646F6D2074786554;
  unint64_t v10 = 0xEF203A6469206C65;
  sub_1DB1EF570();
  sub_1DB18B294((unint64_t *)&qword_1EA903BD0, MEMORY[0x1E4F27990]);
  sub_1DB1F1D80();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  uint64_t v4 = type metadata accessor for TextModel();
  v8[1] = *(void *)(v0 + *(int *)(v4 + 20));
  sub_1DB1F1D80();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  sub_1DB11FF38(v0 + *(int *)(v4 + 28), (uint64_t)v3);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v3, &qword_1EBA4E570);
  }
  else
  {
    sub_1DB1EF590();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  sub_1DB1EF590();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t TextModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905448);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB188EF4();
  sub_1DB1F1EF0();
  char v15 = 0;
  sub_1DB1EF570();
  sub_1DB18B294(&qword_1EA903BE8, MEMORY[0x1E4F27990]);
  sub_1DB1F1D60();
  if (!v1)
  {
    type metadata accessor for TextModel();
    char v14 = 1;
    sub_1DB1F1D40();
    char v13 = 2;
    sub_1DB1F1D00();
    char v12 = 3;
    sub_1DB1EF6B0();
    sub_1DB18B294(&qword_1EA905458, MEMORY[0x1E4F27A78]);
    sub_1DB1F1CF0();
    char v11 = 4;
    sub_1DB1F1CE0();
    char v10 = 5;
    sub_1DB1F1D60();
    char v9 = 6;
    sub_1DB1F1D20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TextModel.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

void TextModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DB1EF570();
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905460);
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  char v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (int *)type metadata accessor for TextModel();
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v16[*(int *)(v17 + 28)];
  uint64_t v43 = v4;
  long long v19 = *(void (**)(__n128))(v4 + 56);
  uint64_t v51 = v18;
  uint64_t v48 = v3;
  v19(v14);
  long long v20 = &v16[v13[8]];
  *(void *)long long v20 = 0;
  *((void *)v20 + 1) = 0;
  v50 = v20;
  uint64_t v46 = v13[11];
  v47 = a1;
  *(void *)&v16[v46] = 0;
  uint64_t v21 = v13;
  *(void *)&v16[v13[12]] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB188EF4();
  v45 = v12;
  uint64_t v22 = v49;
  sub_1DB1F1EE0();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    sub_1DB0E8BD4(v51, &qword_1EBA4E570);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = (uint64_t)v8;
    char v58 = 0;
    sub_1DB18B294(&qword_1EA903BF8, MEMORY[0x1E4F27990]);
    v24 = v41;
    sub_1DB1F1CB0();
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v16, v24, v9);
    char v57 = 1;
    uint64_t v25 = sub_1DB1F1C90();
    uint64_t v26 = v48;
    *(void *)&v16[v13[5]] = v25;
    char v56 = 2;
    uint64_t v27 = sub_1DB1F1C60();
    uint64_t v28 = (uint64_t *)&v16[v13[6]];
    *uint64_t v28 = v27;
    v28[1] = v29;
    char v55 = 3;
    sub_1DB18B294(&qword_1EA905468, MEMORY[0x1E4F27A78]);
    sub_1DB1F1C50();
    sub_1DB106F4C(v23, v51);
    char v54 = 4;
    uint64_t v30 = sub_1DB1F1C40();
    uint64_t v32 = v31;
    uint64_t v33 = (uint64_t *)v50;
    swift_bridgeObjectRelease();
    *uint64_t v33 = v30;
    v33[1] = v32;
    char v53 = 5;
    v34 = v39;
    sub_1DB1F1CB0();
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v16[v21[9]], v34, v26);
    char v52 = 6;
    sub_1DB1F1C80();
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v44);
    *(void *)&v16[v21[10]] = v36;
    sub_1DB188E34((uint64_t)v16, v38);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    sub_1DB188E98((uint64_t)v16);
  }
}

uint64_t sub_1DB187770()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1877F8()
{
  sub_1DB1EF570();
  sub_1DB18B294(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  return sub_1DB1F11E0();
}

uint64_t sub_1DB18787C()
{
  return sub_1DB1F1EC0();
}

BOOL sub_1DB187900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a1 + *(int *)(a3 + 20)) < *(void *)(a2 + *(int *)(a3 + 20));
}

BOOL sub_1DB187918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a2 + *(int *)(a3 + 20)) >= *(void *)(a1 + *(int *)(a3 + 20));
}

BOOL sub_1DB187930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a1 + *(int *)(a3 + 20)) >= *(void *)(a2 + *(int *)(a3 + 20));
}

BOOL sub_1DB187948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a2 + *(int *)(a3 + 20)) < *(void *)(a1 + *(int *)(a3 + 20));
}

void sub_1DB187960(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1DB187978(void *a1)
{
  return TextModel.encode(to:)(a1);
}

BOOL sub_1DB187990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - v9;
  char v11 = sub_1DB1EF540();
  sub_1DB188E34(a1, (uint64_t)v10);
  sub_1DB188E34(a2, (uint64_t)v7);
  if (v11)
  {
    uint64_t v12 = *(void *)&v10[*(int *)(a3 + 20)];
    sub_1DB188E98((uint64_t)v10);
    uint64_t v13 = *(void *)&v7[*(int *)(a3 + 20)];
    sub_1DB188E98((uint64_t)v7);
    return v12 == v13;
  }
  else
  {
    sub_1DB188E98((uint64_t)v7);
    sub_1DB188E98((uint64_t)v10);
    return 0;
  }
}

uint64_t Array<A>.targetParagraph.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v8 = *(void *)(v3 + 72);
    v18[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1DB188E34(v7, (uint64_t)v5);
      char v11 = &v5[*(int *)(v2 + 32)];
      uint64_t v13 = *(void *)v11;
      uint64_t v12 = *((void *)v11 + 1);
      swift_bridgeObjectRetain();
      sub_1DB188E98((uint64_t)v5);
      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1DB188B30(0, v9[2] + 1, 1, v9);
        }
        unint64_t v15 = v9[2];
        unint64_t v14 = v9[3];
        if (v15 >= v14 >> 1) {
          uint64_t v9 = sub_1DB188B30((void *)(v14 > 1), v15 + 1, 1, v9);
        }
        v9[2] = v15 + 1;
        uint64_t v10 = &v9[2 * v15];
        v10[4] = v13;
        v10[5] = v12;
      }
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  }
  v18[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905438);
  sub_1DB0E3C44(&qword_1EA905440, &qword_1EA905438);
  uint64_t v16 = sub_1DB1F1210();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1DB187CA4(uint64_t a1)
{
  uint64_t v21 = type metadata accessor for TextModel();
  uint64_t v2 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1DB12EA74(0, v8, 0);
    unint64_t v20 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v10 = a1 + v20;
    uint64_t v11 = *(void *)(v2 + 72);
    uint64_t v9 = v22;
    do
    {
      sub_1DB188E34(v10, (uint64_t)v4);
      sub_1DB188E34((uint64_t)v4, (uint64_t)v7);
      uint64_t v12 = &v7[*(int *)(v21 + 24)];
      uint64_t v14 = *(void *)v12;
      uint64_t v13 = *((void *)v12 + 1);
      unint64_t v15 = &v7[*(int *)(v21 + 32)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)unint64_t v15 = v14;
      *((void *)v15 + 1) = v13;
      sub_1DB188E98((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12EA74(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v22;
      }
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DB12EA74(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v22;
      }
      *(void *)(v9 + 16) = v17 + 1;
      sub_1DB188F48((uint64_t)v7, v9 + v20 + v17 * v11);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1DB187E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DB188E34(a1, a3);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for TextModel() + 36);
  uint64_t v6 = sub_1DB1EF6B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(v5, a2, v6);
}

uint64_t Array<A>.updating(lines:useIndex:)(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v51 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t)&v37 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD60);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v44 = (uint64_t)&v37 - v19;
  uint64_t v38 = a1;
  uint64_t v20 = *(void *)(a1 + 16);
  if (a2)
  {
    if (v20)
    {
      unint64_t v21 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      uint64_t v22 = v38 + v21;
      uint64_t v10 = *(void *)(v18 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (1)
      {
        unint64_t v23 = *(void *)(v22 + *(int *)(v14 + 20));
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (result)
        {
          if ((v23 & 0x8000000000000000) != 0) {
            goto LABEL_10;
          }
        }
        else
        {
          uint64_t result = sub_1DB188FC0(a3);
          a3 = result;
          if ((v23 & 0x8000000000000000) != 0)
          {
LABEL_10:
            __break(1u);
            goto LABEL_11;
          }
        }
        if (v23 >= *(void *)(a3 + 16)) {
          break;
        }
        sub_1DB189018(v22, a3 + v21 + v23 * v10);
        v22 += v10;
        if (!--v20)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          return a3;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
  }
  else
  {
LABEL_11:
    if (v20)
    {
      unint64_t v45 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      uint64_t v43 = v38 + v45;
      uint64_t v53 = *(void *)(v18 + 72);
      uint64_t v42 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
      uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = 0;
      uint64_t v54 = v14;
      uint64_t v50 = v10;
      uint64_t v49 = v16;
      uint64_t v40 = v20;
      uint64_t v39 = v13;
      while (1)
      {
        uint64_t v26 = *(void *)(a3 + 16);
        uint64_t v48 = v43 + v53 * v25;
        if (v26)
        {
          uint64_t v46 = v25;
          uint64_t v27 = a3 + v45;
          uint64_t v52 = v43 + v53 * v25 + *(int *)(v14 + 28);
          unint64_t v47 = a3;
          swift_bridgeObjectRetain_n();
          do
          {
            sub_1DB188E34(v27, (uint64_t)v16);
            sub_1DB11FF38((uint64_t)&v16[*(int *)(v14 + 28)], v10);
            uint64_t v28 = sub_1DB1EF6B0();
            uint64_t v29 = *(void *)(v28 - 8);
            uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
            int v55 = v30(v10, 1, v28);
            if (v55 == 1)
            {
              sub_1DB0E8BD4(v10, &qword_1EBA4E570);
              uint64_t v31 = 0;
            }
            else
            {
              sub_1DB1EF590();
              (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v10, v28);
              sub_1DB1F1ED0();
              sub_1DB1F1360();
              swift_bridgeObjectRelease();
              sub_1DB1EF590();
              sub_1DB1F1360();
              swift_bridgeObjectRelease();
              sub_1DB1F1EA0();
              swift_bridgeObjectRetain();
              sub_1DB1F1360();
              swift_bridgeObjectRelease();
              long long v68 = v58;
              long long v69 = v59;
              uint64_t v70 = v60;
              long long v66 = v56;
              long long v67 = v57;
              uint64_t v31 = sub_1DB1F1EB0();
            }
            uint64_t v32 = v51;
            sub_1DB11FF38(v52, v51);
            if (v30(v32, 1, v28) == 1)
            {
              sub_1DB0E8BD4(v32, &qword_1EBA4E570);
              if (v55 == 1) {
                goto LABEL_25;
              }
            }
            else
            {
              sub_1DB1EF590();
              (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
              sub_1DB1F1ED0();
              sub_1DB1F1360();
              swift_bridgeObjectRelease();
              sub_1DB1EF590();
              sub_1DB1F1360();
              swift_bridgeObjectRelease();
              sub_1DB1F1EA0();
              swift_bridgeObjectRetain();
              sub_1DB1F1360();
              swift_bridgeObjectRelease();
              long long v63 = v58;
              long long v64 = v59;
              uint64_t v65 = v60;
              long long v61 = v56;
              long long v62 = v57;
              uint64_t v33 = sub_1DB1F1EB0();
              if (v55 != 1 && v31 == v33)
              {
LABEL_25:
                a3 = v47;
                swift_bridgeObjectRelease();
                unint64_t v16 = v49;
                uint64_t v13 = v39;
                sub_1DB188F48((uint64_t)v49, (uint64_t)v39);
                uint64_t v34 = 0;
                uint64_t v14 = v54;
                uint64_t v20 = v40;
                uint64_t v10 = v50;
                goto LABEL_28;
              }
            }
            unint64_t v16 = v49;
            sub_1DB188E98((uint64_t)v49);
            v27 += v53;
            --v26;
            uint64_t v14 = v54;
            uint64_t v10 = v50;
          }
          while (v26);
          a3 = v47;
          swift_bridgeObjectRelease();
          uint64_t v34 = 1;
          uint64_t v20 = v40;
          uint64_t v13 = v39;
LABEL_28:
          uint64_t v25 = v46;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = 1;
        }
        (*v42)(v13, v34, 1, v14);
        swift_bridgeObjectRelease();
        if ((*v41)(v13, 1, v14) == 1)
        {
          sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4DD60);
        }
        else
        {
          uint64_t v35 = v44;
          sub_1DB188F48((uint64_t)v13, v44);
          unint64_t v36 = *(void *)(v35 + *(int *)(v14 + 20));
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if (result)
          {
            if ((v36 & 0x8000000000000000) != 0) {
              goto LABEL_35;
            }
          }
          else
          {
            uint64_t result = sub_1DB188FC0(a3);
            a3 = result;
            if ((v36 & 0x8000000000000000) != 0)
            {
LABEL_35:
              __break(1u);
              goto LABEL_36;
            }
          }
          if (v36 >= *(void *)(a3 + 16)) {
            goto LABEL_40;
          }
          sub_1DB189018(v48, a3 + v45 + v36 * v53);
          sub_1DB188E98(v44);
        }
        if (++v25 == v20) {
          goto LABEL_36;
        }
      }
    }
  }
  swift_bridgeObjectRetain();
  return a3;
}

void *sub_1DB188720(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4D968);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DB18AB1C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB188848(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DB1888B0(a1, a2, a3, a4, &qword_1EA904A18, (uint64_t (*)(void))type metadata accessor for LanguageOption, (uint64_t (*)(void))type metadata accessor for LanguageOption);
}

uint64_t sub_1DB18887C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DB1888B0(a1, a2, a3, a4, &qword_1EA9054A8, type metadata accessor for SharedTranslations.Translation, type metadata accessor for SharedTranslations.Translation);
}

uint64_t sub_1DB1888B0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1DB1F1B80();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DB18B02C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1DB188B30(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E600);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DB18AF38(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB188C40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DB1888B0(a1, a2, a3, a4, &qword_1EBA4E4E0, (uint64_t (*)(void))type metadata accessor for TextModel, (uint64_t (*)(void))type metadata accessor for TextModel);
}

uint64_t sub_1DB188C74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DB1888B0(a1, a2, a3, a4, &qword_1EBA4E4D8, type metadata accessor for VisualTranslationModel, type metadata accessor for VisualTranslationModel);
}

void *sub_1DB188CA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905490);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DB18B188(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB188DB8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1DB1F13F0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E018B3D0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1DB188E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB188E98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DB188EF4()
{
  unint64_t result = qword_1EA905450;
  if (!qword_1EA905450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905450);
  }
  return result;
}

uint64_t sub_1DB188F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1DB188FAC(void *a1)
{
  return sub_1DB188720(0, a1[2], 0, a1);
}

uint64_t sub_1DB188FC0(unint64_t a1)
{
  return sub_1DB1888B0(0, *(void *)(a1 + 16), 0, a1, &qword_1EBA4E4E0, (uint64_t (*)(void))type metadata accessor for TextModel, (uint64_t (*)(void))type metadata accessor for TextModel);
}

uint64_t sub_1DB189018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB18907C()
{
  return sub_1DB18B294(&qword_1EA905470, (void (*)(uint64_t))type metadata accessor for TextModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for TextModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DB1EF570();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    unint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1DB1EF6B0();
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    unint64_t v22 = (uint64_t *)((char *)a1 + v20);
    unint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (char *)a1 + v21;
    uint64_t v26 = (char *)a2 + v21;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v27(v25, v26, v15);
    uint64_t v28 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v29 = *(void **)((char *)a2 + v28);
    id v30 = v29;
    *(uint64_t *)((char *)a1 + v28) = (uint64_t)v29;
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  }
  return a1;
}

void destroy for TextModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[7];
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1 + a2[9], v6);
  uint64_t v8 = *(void **)(a1 + a2[11]);
}

uint64_t initializeWithCopy for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  unint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_1DB1EF6B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v18);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a1 + v19;
  uint64_t v24 = a2 + v19;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, v14);
  uint64_t v26 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v27 = *(void **)(a2 + v26);
  id v28 = v27;
  *(void *)(a1 + v26) = v27;
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithCopy for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1 + a3[9], a2 + a3[9], v13);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v22 = a3[11];
  uint64_t v23 = *(void **)(a1 + v22);
  uint64_t v24 = *(void **)(a2 + v22);
  id v25 = v24;
  *(void *)(a1 + v22) = v24;

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  }
  else
  {
    uint64_t v14 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
    v14(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v14((void *)(a1 + v15), (const void *)(a2 + v15), v11);
  uint64_t v16 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for TextModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1DB1EF6B0();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(a1 + a3[9], a2 + a3[9], v15);
  uint64_t v26 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v27 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB189CD0);
}

uint64_t sub_1DB189CD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[7];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_1DB1EF6B0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for TextModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB189E6C);
}

uint64_t sub_1DB189E6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1DB1EF570();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[7];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1DB1EF6B0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[9];
  return v16(v18, a2, a2, v17);
}

void sub_1DB189FF4()
{
  sub_1DB1EF570();
  if (v0 <= 0x3F)
  {
    sub_1DB18A128();
    if (v1 <= 0x3F)
    {
      sub_1DB1EF6B0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1DB18A128()
{
  if (!qword_1EBA4E5E0)
  {
    sub_1DB1EF6B0();
    unint64_t v0 = sub_1DB1F1900();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4E5E0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TextModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB18A24CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextModel.CodingKeys()
{
  return &type metadata for TextModel.CodingKeys;
}

unint64_t sub_1DB18A288()
{
  unint64_t result = qword_1EA905478;
  if (!qword_1EA905478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905478);
  }
  return result;
}

unint64_t sub_1DB18A2E0()
{
  unint64_t result = qword_1EA905480;
  if (!qword_1EA905480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905480);
  }
  return result;
}

unint64_t sub_1DB18A338()
{
  unint64_t result = qword_1EA905488;
  if (!qword_1EA905488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905488);
  }
  return result;
}

uint64_t sub_1DB18A38C(unint64_t a1)
{
  return sub_1DB1888B0(0, *(void *)(a1 + 16), 0, a1, &qword_1EBA4E4D8, type metadata accessor for VisualTranslationModel, type metadata accessor for VisualTranslationModel);
}

unint64_t sub_1DB18A3E4(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1DB1F1B00();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

unint64_t sub_1DB18A508(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_1DB18A5A8(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1DB18A3E4(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1DB18A5A8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_1DB188DB8(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1DB18A618(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1;
  }
  uint64_t v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  unint64_t v6 = v5 | (v4 << 16);
  unint64_t v7 = sub_1DB18A508(0xFuLL, a1, a2);
  unint64_t result = sub_1DB18A508(v6, a1, a2);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1DB1F1330();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1DB1F1B00();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1DB1F1340();
        unint64_t v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1DB1F1B00();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_40;
  }
  return 0;
}

uint64_t sub_1DB18A858(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v8 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (a2)
  {
    uint64_t v9 = a3;
    if (a3)
    {
      if (a3 < 0)
      {
        __break(1u);
        JUMPOUT(0x1DB18AA84);
      }
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      while (1)
      {
        if (v12 >= v8)
        {
          uint64_t v9 = v11;
          goto LABEL_31;
        }
        if ((a5 & 0x1000000000000000) != 0)
        {
          int v21 = a1;
          int v13 = sub_1DB1F1AA0();
          a1 = v21;
        }
        else
        {
          if ((a5 & 0x2000000000000000) != 0)
          {
            v23[0] = a4;
            v23[1] = a5 & 0xFFFFFFFFFFFFFFLL;
            int v13 = *((unsigned __int8 *)v23 + v12);
            if (*((char *)v23 + v12) < 0)
            {
              switch(__clz(v13 ^ 0xFF))
              {
                case 0x1Au:
                  uint64_t v16 = (char *)v23 + v12;
LABEL_21:
                  int v13 = v16[1] & 0x3F | ((v13 & 0x1F) << 6);
                  uint64_t v14 = 2;
                  break;
                case 0x1Bu:
                  uint64_t v17 = (char *)v23 + v12;
LABEL_25:
                  int v13 = ((v13 & 0xF) << 12) | ((v17[1] & 0x3F) << 6) | v17[2] & 0x3F;
                  uint64_t v14 = 3;
                  break;
                case 0x1Cu:
                  int v18 = (char *)v23 + v12;
LABEL_27:
                  int v13 = ((v13 & 0xF) << 18) | ((v18[1] & 0x3F) << 12) | ((v18[2] & 0x3F) << 6) | v18[3] & 0x3F;
                  uint64_t v14 = 4;
                  break;
                default:
                  goto LABEL_9;
              }
              goto LABEL_10;
            }
          }
          else
          {
            uint64_t v15 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
            if ((a4 & 0x1000000000000000) == 0)
            {
              unint64_t v22 = a1;
              uint64_t v19 = sub_1DB1F1B00();
              a1 = v22;
              uint64_t v15 = v19;
            }
            int v13 = *(unsigned __int8 *)(v15 + v12);
            if (*(char *)(v15 + v12) < 0)
            {
              switch(__clz(v13 ^ 0xFF))
              {
                case 0x1Au:
                  uint64_t v16 = (char *)(v12 + v15);
                  goto LABEL_21;
                case 0x1Bu:
                  uint64_t v17 = (char *)(v12 + v15);
                  goto LABEL_25;
                case 0x1Cu:
                  int v18 = (char *)(v12 + v15);
                  goto LABEL_27;
                default:
                  break;
              }
            }
          }
LABEL_9:
          uint64_t v14 = 1;
        }
LABEL_10:
        *(_DWORD *)(a2 + 4 * v11) = v13;
        v12 += v14;
        if (v9 == ++v11) {
          goto LABEL_31;
        }
      }
    }
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v9 = 0;
  }
LABEL_31:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = v12;
  a1[3] = v8;
  return v9;
}

void *sub_1DB18AAA4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049F0);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 29;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 2);
  return v4;
}

uint64_t sub_1DB18AB1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB18AC14()
{
  unint64_t v0 = sub_1DB1F1C10();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DB18AC60(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1DB1EF380();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v27 - v9;
  uint64_t v28 = a1;
  unint64_t v29 = a2;
  sub_1DB1EF360();
  sub_1DB0F0708();
  uint64_t v11 = sub_1DB1F1940();
  unint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v10, v4);
  uint64_t v28 = v11;
  unint64_t v29 = v13;
  uint64_t v15 = sub_1DB1F1970();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  unint64_t v18 = sub_1DB18A618(v15, v17);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1DB18AAA4(v18, 0);
    uint64_t v21 = sub_1DB18A858(&v28, (uint64_t)(v20 + 4), v19, v15, v17);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    if (v21 != v19)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = sub_1DB1EF350();
  MEMORY[0x1F4188790](v23);
  v27[-2] = v7;
  uint64_t v24 = sub_1DB1851D0((uint64_t)sub_1DB18B2DC, (uint64_t)&v27[-4], (uint64_t)v20);
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  v27[0] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905498);
  sub_1DB0E3C44(&qword_1EA9054A0, &qword_1EA905498);
  sub_1DB1F1350();
  swift_bridgeObjectRelease();
  uint64_t v25 = v28;
  if ((v29 & 0x2000000000000000) != 0) {
    uint64_t v26 = HIBYTE(v29) & 0xF;
  }
  else {
    uint64_t v26 = v28 & 0xFFFFFFFFFFFFLL;
  }
  v14(v7, v4);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v25;
}

uint64_t sub_1DB18AF38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB18B02C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB18B188(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4DE28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB18B294(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1DB18B2DC()
{
  return (sub_1DB1EF370() & 1) == 0;
}

uint64_t sub_1DB18B314()
{
  sub_1DB188E98(v0 + OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel);
  return swift_deallocClassInstance();
}

uint64_t sub_1DB18B378()
{
  return type metadata accessor for TextModelContainer();
}

uint64_t type metadata accessor for TextModelContainer()
{
  uint64_t result = qword_1EA9054B0;
  if (!qword_1EA9054B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB18B3CC()
{
  uint64_t result = type metadata accessor for TextModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DB18B45C(uint64_t a1, int a2)
{
  uint64_t v4 = v2;
  int v134 = a2;
  uint64_t v6 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v6);
  uint64_t v130 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v118 - v9;
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v118 - v12;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v118 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v133 = (uint64_t)&v118 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v131 = (uint64_t)&v118 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v21 - 8);
  v138 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v118 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v118 - v27;
  uint64_t v29 = *(void *)(v4 + 112);
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
    goto LABEL_83;
  }
  v136 = v16;
  *(void *)(v4 + 112) = v31;
  uint64_t v137 = a1 + *(int *)(v6 + 28);
  sub_1DB11FF38(v137, (uint64_t)&v118 - v27);
  uint64_t v32 = sub_1DB1EF6B0();
  uint64_t v33 = *(void *)(v32 - 8);
  v139 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v139(v28, 1, v32) == 1)
  {
    sub_1DB125F58((uint64_t)v28);
    return 0;
  }
  v126 = v10;
  v128 = v13;
  sub_1DB1EF590();
  v127 = *(void (**)(char *, uint64_t))(v33 + 8);
  v127(v28, v32);
  sub_1DB1F1ED0();
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  sub_1DB1EF590();
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  v135 = (int *)v6;
  uint64_t v132 = a1;
  sub_1DB1F1EA0();
  swift_bridgeObjectRetain();
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  long long v145 = v141[2];
  long long v146 = v141[3];
  uint64_t v147 = v142;
  long long v143 = v141[0];
  long long v144 = v141[1];
  uint64_t v34 = sub_1DB1F1EB0();
  uint64_t v129 = v4;
  uint64_t v35 = *(void **)(v4 + 136);
  sub_1DB131034();
  id v36 = v35;
  uint64_t v37 = (void *)sub_1DB1F1870();
  uint64_t v38 = (char *)objc_msgSend(v36, sel_objectForKey_, v37);

  uint64_t v39 = v38;
  uint64_t v40 = (uint64_t)v25;
  if (!v38)
  {
    uint64_t v125 = v34;
    if (v134)
    {
      v124 = v25;
      if (qword_1EBA4E578 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1DB1EF810();
      uint64_t v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1EBA4F408);
      uint64_t v46 = v131;
      sub_1DB188E34(v132, v131);
      unint64_t v47 = sub_1DB1EF7F0();
      os_log_type_t v48 = sub_1DB1F1700();
      int v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        os_log_t v123 = v47;
        uint64_t v50 = v46;
        uint64_t v51 = swift_slowAlloc();
        LODWORD(v122) = v49;
        uint64_t v52 = (uint8_t *)v51;
        uint64_t v53 = swift_slowAlloc();
        v121 = v52;
        *(_DWORD *)uint64_t v52 = 136642819;
        *(void *)&v141[0] = v53;
        v120 = v52 + 4;
        uint64_t v54 = (uint64_t *)(v46 + v135[6]);
        unint64_t v55 = v54[1];
        uint64_t v119 = *v54;
        swift_bridgeObjectRetain();
        uint64_t v140 = sub_1DB11F638(v119, v55, (uint64_t *)v141);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        sub_1DB188E98(v50);
        os_log_t v56 = v123;
        long long v57 = v121;
        _os_log_impl(&dword_1DB0DC000, v123, (os_log_type_t)v122, "TextTranslationCache sourceString:\t%{sensitive}s", v121, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v53, -1, -1);
        MEMORY[0x1E018CA60](v57, -1, -1);
      }
      else
      {
        sub_1DB188E98(v46);
      }
      sub_1DB188E34(v132, v133);
      uint64_t v131 = v45;
      v94 = sub_1DB1EF7F0();
      os_log_type_t v95 = sub_1DB1F1700();
      int v96 = v95;
      if (os_log_type_enabled(v94, v95))
      {
        os_log_t v123 = v94;
        uint64_t v97 = swift_slowAlloc();
        uint64_t v98 = v133;
        v99 = (uint8_t *)v97;
        uint64_t v122 = swift_slowAlloc();
        *(void *)&v141[0] = v122;
        *(_DWORD *)v99 = 136642819;
        uint64_t v100 = sub_1DB18AC60(*(void *)(v98 + v135[6]), *(void *)(v98 + v135[6] + 8));
        if (v101)
        {
          unint64_t v102 = v101;
        }
        else
        {
          uint64_t v100 = 6369134;
          unint64_t v102 = 0xE300000000000000;
        }
        LODWORD(v121) = v96;
        uint64_t v140 = sub_1DB11F638(v100, v102, (uint64_t *)v141);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        sub_1DB188E98(v98);
        v94 = v123;
        _os_log_impl(&dword_1DB0DC000, v123, (os_log_type_t)v121, "TextTranslationCache sourceFuzzy:\t%{sensitive}s", v99, 0xCu);
        uint64_t v103 = v122;
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v103, -1, -1);
        MEMORY[0x1E018CA60](v99, -1, -1);
      }
      else
      {
        sub_1DB188E98(v133);
      }

      uint64_t v104 = v125;
      uint64_t v105 = sub_1DB186830(1);
      if ((v106 & 1) != 0 || v104 == v105)
      {
        long long v69 = sub_1DB1EF7F0();
        os_log_type_t v70 = sub_1DB1F1700();
        if (os_log_type_enabled(v69, v70))
        {
          v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v71 = 0;
          v72 = "TextTranslationCache fuzzy key collision";
          goto LABEL_63;
        }
LABEL_64:

        return 0;
      }
      id v107 = *(id *)(v129 + 136);
      v108 = (void *)sub_1DB1F1870();
      uint64_t v39 = (char *)objc_msgSend(v107, sel_objectForKey_, v108);

      if (v39)
      {
        swift_retain();
        uint64_t v40 = (uint64_t)v124;
        goto LABEL_5;
      }
    }
    else
    {
      if (qword_1EBA4E578 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_1DB1EF810();
      __swift_project_value_buffer(v68, (uint64_t)qword_1EBA4F408);
    }
    long long v69 = sub_1DB1EF7F0();
    os_log_type_t v70 = sub_1DB1F1700();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v71 = 0;
      v72 = "TextTranslationCache cache miss";
LABEL_63:
      _os_log_impl(&dword_1DB0DC000, v69, v70, v72, v71, 2u);
      MEMORY[0x1E018CA60](v71, -1, -1);
      goto LABEL_64;
    }
    goto LABEL_64;
  }
LABEL_5:
  sub_1DB11FF38(v137, v40);
  unsigned int v41 = v139((char *)v40, 1, v32);
  swift_retain();
  if (v41 == 1)
  {
    sub_1DB125F58(v40);
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v42 = sub_1DB1EF590();
    uint64_t v43 = v58;
    v127((char *)v40, v32);
  }
  uint64_t v59 = (uint64_t)v128;
  uint64_t v60 = (uint64_t)v138;
  v138 = v39;
  long long v61 = &v39[OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel];
  sub_1DB11FF38((uint64_t)&v39[OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel + v135[7]], v60);
  if (v139((char *)v60, 1, v32) == 1)
  {
    sub_1DB125F58(v60);
    uint64_t v62 = v132;
    uint64_t v63 = (uint64_t)v136;
    if (!v43) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  uint64_t v64 = v60;
  uint64_t v65 = sub_1DB1EF590();
  uint64_t v67 = v66;
  v127((char *)v64, v32);
  if (!v43)
  {
    uint64_t v62 = v132;
    uint64_t v63 = (uint64_t)v136;
    if (!v67) {
      goto LABEL_32;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    sub_1DB188E34(v62, v63);
    goto LABEL_29;
  }
  uint64_t v62 = v132;
  uint64_t v63 = (uint64_t)v136;
  if (!v67) {
    goto LABEL_28;
  }
  if (v42 != v65 || v43 != v67)
  {
    char v109 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DB188E34(v62, v63);
    if (v109) {
      goto LABEL_33;
    }
LABEL_29:
    sub_1DB188E98(v63);
    sub_1DB188E34(v62, v59);
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_32:
  sub_1DB188E34(v62, v63);
LABEL_33:
  uint64_t v73 = sub_1DB1EF590();
  uint64_t v75 = v74;
  if (v73 != sub_1DB1EF590() || v75 != v76)
  {
    char v77 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DB188E98(v63);
    sub_1DB188E34(v62, v59);
    if (v77) {
      goto LABEL_37;
    }
LABEL_30:
    sub_1DB188E98(v59);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease_n();
  sub_1DB188E98(v63);
  sub_1DB188E34(v62, v59);
LABEL_37:
  uint64_t v78 = v135[6];
  uint64_t v79 = *(void *)(v59 + v78);
  uint64_t v80 = *(void *)(v59 + v78 + 8);
  v81 = (uint64_t *)&v61[v78];
  uint64_t v82 = *v81;
  unint64_t v83 = v81[1];
  if (v79 == *v81 && v80 == v83)
  {
    uint64_t v84 = (uint64_t)v126;
    sub_1DB188E34(v59, (uint64_t)v126);
LABEL_41:
    sub_1DB188E98(v84);
    uint64_t result = sub_1DB188E98(v59);
    goto LABEL_42;
  }
  char v85 = sub_1DB1F1DB0();
  uint64_t v84 = (uint64_t)v126;
  sub_1DB188E34(v59, (uint64_t)v126);
  if (v85) {
    goto LABEL_41;
  }
  uint64_t v110 = v130;
  sub_1DB188E34(v84, v130);
  if ((v134 & 1) == 0)
  {
    sub_1DB188E98(v110);
    sub_1DB188E98(v84);
    goto LABEL_30;
  }
  uint64_t v111 = sub_1DB18AC60(*(void *)(v110 + v135[6]), *(void *)(v110 + v135[6] + 8));
  uint64_t v112 = v110;
  v114 = v113;
  uint64_t v115 = sub_1DB18AC60(v82, v83);
  uint64_t v25 = v116;
  if (!v114)
  {
    sub_1DB188E98(v112);
    sub_1DB188E98((uint64_t)v126);
    uint64_t result = sub_1DB188E98(v59);
    if (!v25) {
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
LABEL_31:
    uint64_t v25 = 0;
    goto LABEL_44;
  }
  if (!v116)
  {
    swift_bridgeObjectRetain();
    sub_1DB188E98(v130);
    sub_1DB188E98((uint64_t)v126);
    sub_1DB188E98(v59);
    swift_bridgeObjectRelease_n();
LABEL_44:
    uint64_t v4 = *(void *)(v129 + 112);
    if (__ROR8__(0x8F5C28F5C28F5C29 * v4 + 0x51EB851EB851EB8, 2) > 0x28F5C28F5C28F5CuLL) {
      goto LABEL_49;
    }
    uint64_t v3 = *(void *)(v129 + 120);
    if (qword_1EBA4E578 == -1)
    {
LABEL_46:
      uint64_t v89 = sub_1DB1EF810();
      __swift_project_value_buffer(v89, (uint64_t)qword_1EBA4F408);
      v90 = sub_1DB1EF7F0();
      os_log_type_t v91 = sub_1DB1F1700();
      if (os_log_type_enabled(v90, v91))
      {
        double v92 = (double)v3 / (double)v4;
        v93 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v93 = 134349056;
        *(double *)v141 = v92;
        sub_1DB1F1910();
        _os_log_impl(&dword_1DB0DC000, v90, v91, "TextTranslationCache cache stats: %{public}f", v93, 0xCu);
        MEMORY[0x1E018CA60](v93, -1, -1);
        swift_release_n();

        return (uint64_t)v25;
      }

LABEL_49:
      swift_release_n();
      return (uint64_t)v25;
    }
LABEL_83:
    swift_once();
    goto LABEL_46;
  }
  if (v111 == v115 && v114 == v116)
  {
    swift_bridgeObjectRelease();
    sub_1DB188E98(v130);
    sub_1DB188E98((uint64_t)v126);
    sub_1DB188E98(v59);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  char v117 = sub_1DB1F1DB0();
  swift_bridgeObjectRelease();
  sub_1DB188E98(v130);
  sub_1DB188E98((uint64_t)v126);
  sub_1DB188E98(v59);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v117 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_42:
  uint64_t v87 = *(void *)(v129 + 120);
  BOOL v30 = __OFADD__(v87, 1);
  uint64_t v88 = v87 + 1;
  if (!v30)
  {
    *(void *)(v129 + 120) = v88;
    uint64_t v25 = *(char **)&v61[v135[8]];
    swift_bridgeObjectRetain();
    goto LABEL_44;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB18C3B0()
{
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for TextTranslationCache()
{
  return self;
}

uint64_t sub_1DB18C40C()
{
  return v0;
}

uint64_t sub_1DB18C418(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(type metadata accessor for TextModel() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v11 = a1(&v12, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v12)
      {
        MEMORY[0x1E018B470](v11);
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DB1F14D0();
        }
        sub_1DB1F14F0();
        sub_1DB1F14C0();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_1DB18C590(void *a1, void *a2, void *a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  os_log_type_t v48 = a5;
  id v49 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905510);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (void *)((char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = MEMORY[0x1F4188790](v16).n128_u64[0];
  uint64_t v19 = (char *)v47 - v18;
  if (!a1)
  {
LABEL_10:
    if (a2)
    {
      uint64_t v33 = a2;
    }
    else
    {
      sub_1DB184784();
      uint64_t v33 = (void *)swift_allocError();
      unsigned char *v34 = 6;
    }
    id v35 = a2;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1DB1EF810();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EBA4F408);
    sub_1DB1843B8(a4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v37 = sub_1DB1EF7F0();
    os_log_type_t v38 = sub_1DB1F1730();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      v47[1] = v10;
      uint64_t v40 = (uint8_t *)v39;
      uint64_t v41 = swift_slowAlloc();
      v47[2] = a6;
      uint64_t v42 = v41;
      uint64_t aBlock = v41;
      *(_DWORD *)uint64_t v40 = 136446210;
      v47[0] = v33;
      sub_1DB1EF570();
      sub_1DB19500C();
      uint64_t v43 = sub_1DB1F1D80();
      uint64_t v50 = sub_1DB11F638(v43, v44, &aBlock);
      uint64_t v33 = (void *)v47[0];
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB184724((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TextModel);
      _os_log_impl(&dword_1DB0DC000, v37, v38, "Requested translating model ID %{public}s of length ", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v42, -1, -1);
      MEMORY[0x1E018CA60](v40, -1, -1);
    }
    else
    {
      sub_1DB184724((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TextModel);
    }

    *uint64_t v12 = v33;
    swift_storeEnumTagMultiPayload();
    id v45 = v33;
    v48(v12);

    sub_1DB0E8BD4((uint64_t)v12, &qword_1EA905510);
    unint64_t v55 = CGPointMake;
    uint64_t v56 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v52 = 1107296256;
    uint64_t v31 = &block_descriptor_20;
    goto LABEL_19;
  }
  uint64_t v20 = a6;
  id v21 = objc_msgSend(a1, sel_translations, v17);
  sub_1DB0E2EFC(0, &qword_1EA905518);
  unint64_t v22 = sub_1DB1F14A0();

  if (!(v22 >> 62))
  {
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1DB1F1BB0();
  swift_bridgeObjectRelease();
  if (!v32)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    a6 = v20;
    goto LABEL_10;
  }
LABEL_4:
  if ((v22 & 0xC000000000000001) != 0)
  {
    id v23 = (id)MEMORY[0x1E018BAD0](0, v22);
    goto LABEL_7;
  }
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v23 = *(id *)(v22 + 32);
LABEL_7:
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    sub_1DB1843B8(a4, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TextModel);
    id v25 = objc_msgSend(v24, sel_formattedString);
    uint64_t v26 = sub_1DB1F1290();
    uint64_t v28 = v27;

    uint64_t v29 = (uint64_t *)&v19[*(int *)(v13 + 32)];
    swift_bridgeObjectRelease();
    uint64_t *v29 = v26;
    v29[1] = v28;
    objc_msgSend(v24, sel_confidence);
    *(void *)&v19[*(int *)(v13 + 40)] = v30;
    sub_1DB1843B8((uint64_t)v19, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TextModel);
    swift_storeEnumTagMultiPayload();
    v48(v12);

    sub_1DB0E8BD4((uint64_t)v12, &qword_1EA905510);
    sub_1DB184724((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TextModel);
    unint64_t v55 = CGPointMake;
    uint64_t v56 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v52 = 1107296256;
    uint64_t v31 = &block_descriptor_23_0;
LABEL_19:
    uint64_t v53 = sub_1DB18CB74;
    uint64_t v54 = v31;
    uint64_t v46 = _Block_copy(&aBlock);
    objc_msgSend(v49, sel_setCompletionHandler_, v46);
    _Block_release(v46);
    return;
  }
  __break(1u);
}

void sub_1DB18CB74(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t static TextTranslationService.translate(_:strictLocales:taskHint:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DB1EF570();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v12 = *a3;
  sub_1DB1EF560();
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F423A8]), sel_init);
  uint64_t v14 = (void *)sub_1DB1EF530();
  id v15 = objc_msgSend(v13, sel_startTranslationSessionWithSELFLoggingInvocationId_, v14);

  unsigned __int8 v18 = v12;
  sub_1DB18CE20(a1, a2, (uint64_t)v15, &v18, a4);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static TextTranslationService.translate(_:strictLocales:taskHint:selfLoggingInvocationId:)(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v7 = *a3;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F423A8]), sel_init);
  uint64_t v9 = (void *)sub_1DB1EF530();
  id v10 = objc_msgSend(v8, sel_startTranslationSessionWithSELFLoggingInvocationId_, v9);

  unsigned __int8 v11 = v7;
  sub_1DB18CE20(a1, a2, (uint64_t)v10, &v11, a4);
}

uint64_t sub_1DB18CE20@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD98);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v52 = &v38[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = type metadata accessor for TextModel();
  uint64_t v53 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v54 = sub_1DB1EF570();
  uint64_t v15 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v17 = &v38[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v50 = *a4;
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1DB1EF810();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBA4F408);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1DB1EF7F0();
  int v49 = sub_1DB1F16F0();
  if (os_log_type_enabled(v19, (os_log_type_t)v49))
  {
    os_log_t v46 = v19;
    uint64_t v48 = v11;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v44 = v21;
    *(_DWORD *)uint64_t v20 = 134349314;
    uint64_t v55 = *(void *)(a1 + 16);
    int64_t v22 = v55;
    uint64_t v56 = v21;
    uint64_t v43 = &v56;
    sub_1DB1F1910();
    id v45 = (uint8_t *)v20;
    *(_WORD *)(v20 + 12) = 2082;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t v47 = a1;
    if (v22)
    {
      int v39 = a2;
      uint64_t v40 = v10;
      uint64_t v41 = a3;
      uint64_t v42 = a5;
      uint64_t v55 = MEMORY[0x1E4FBC860];
      sub_1DB12EAB0(0, v22, 0);
      uint64_t v24 = a1 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      uint64_t v53 = *(void *)(v53 + 72);
      uint64_t v25 = v54;
      do
      {
        sub_1DB1843B8(v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextModel);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v17, v14, v25);
        sub_1DB184724((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v23 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12EAB0(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v55;
        }
        unint64_t v27 = *(void *)(v23 + 16);
        unint64_t v26 = *(void *)(v23 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1DB12EAB0(v26 > 1, v27 + 1, 1);
          uint64_t v23 = v55;
        }
        *(void *)(v23 + 16) = v27 + 1;
        unint64_t v28 = v23
            + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
            + *(void *)(v15 + 72) * v27;
        uint64_t v25 = v54;
        (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 32))(v28, v17, v54);
        uint64_t v55 = v23;
        v24 += v53;
        --v22;
      }
      while (v22);
      a3 = v41;
      uint64_t v10 = v40;
      LOBYTE(a2) = v39;
    }
    else
    {
      uint64_t v25 = v54;
    }
    uint64_t v30 = v45;
    uint64_t v31 = MEMORY[0x1E018B4B0](v23, v25);
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_1DB11F638(v31, v33, &v56);
    sub_1DB1F1910();
    a1 = v47;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v34 = v46;
    _os_log_impl(&dword_1DB0DC000, v46, (os_log_type_t)v49, "Requested translating %{public}ld models: %{public}s", v30, 0x16u);
    uint64_t v35 = v44;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v35, -1, -1);
    MEMORY[0x1E018CA60](v30, -1, -1);

    uint64_t v11 = v48;
  }
  else
  {

    uint64_t v29 = swift_bridgeObjectRelease_n();
  }
  __n128 v36 = MEMORY[0x1F4188790](v29);
  *(void *)&v38[-32] = a1;
  v38[-24] = a2 & 1;
  v38[-23] = v50;
  *(void *)&v38[-16] = a3;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v11 + 104))(v52, *MEMORY[0x1E4FBD028], v10, v36);
  return sub_1DB1F15E0();
}

uint64_t sub_1DB18D3AC(uint64_t a1, uint64_t a2, int a3, char a4, void *a5)
{
  int v22 = a3;
  int v23 = a4 & 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = v16 + v10;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(void *)(v18 + 32) = a2;
  *(unsigned char *)(v18 + 40) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v16, v11, v8);
  *(unsigned char *)(v18 + v17) = v23;
  *(void *)((v17 & 0xFFFFFFFFFFFFFFF8) + v18 + 8) = a5;
  swift_bridgeObjectRetain();
  id v19 = a5;
  sub_1DB131F20((uint64_t)v14, (uint64_t)&unk_1EA905500, v18);
  return swift_release();
}

uint64_t sub_1DB18D5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 696) = a8;
  *(unsigned char *)(v8 + 970) = a7;
  *(void *)(v8 + 688) = a6;
  *(unsigned char *)(v8 + 969) = a5;
  *(void *)(v8 + 680) = a4;
  *(void *)(v8 + 704) = type metadata accessor for Signpost();
  *(void *)(v8 + 712) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905408);
  *(void *)(v8 + 720) = v9;
  *(void *)(v8 + 728) = *(void *)(v9 - 8);
  *(void *)(v8 + 736) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for TextModel();
  *(void *)(v8 + 744) = v10;
  *(void *)(v8 + 752) = *(void *)(v10 - 8);
  *(void *)(v8 + 760) = swift_task_alloc();
  *(void *)(v8 + 768) = swift_task_alloc();
  *(void *)(v8 + 776) = swift_task_alloc();
  *(void *)(v8 + 784) = swift_task_alloc();
  *(void *)(v8 + 792) = swift_task_alloc();
  *(void *)(v8 + 800) = swift_task_alloc();
  *(void *)(v8 + 808) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  *(void *)(v8 + 816) = swift_task_alloc();
  *(void *)(v8 + 824) = swift_task_alloc();
  *(void *)(v8 + 832) = swift_task_alloc();
  *(void *)(v8 + 840) = swift_task_alloc();
  *(void *)(v8 + 848) = swift_task_alloc();
  *(void *)(v8 + 856) = swift_task_alloc();
  *(void *)(v8 + 864) = swift_task_alloc();
  *(void *)(v8 + 872) = swift_task_alloc();
  *(void *)(v8 + 880) = swift_task_alloc();
  *(void *)(v8 + 888) = swift_task_alloc();
  *(void *)(v8 + 896) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB18D818, 0, 0);
}

uint64_t sub_1DB18D818()
{
  uint64_t v168 = v0;
  uint64_t v1 = *(void *)(v0 + 680);
  *(void *)(v0 + 624) = v1;
  uint64_t v2 = *(void *)(v0 + 896);
  if (!*(void *)(v1 + 16))
  {
    uint64_t v23 = sub_1DB1EF6B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v2, 1, 1, v23);
LABEL_10:
    uint64_t v24 = *(void *)(v0 + 896);
    swift_bridgeObjectRetain();
    sub_1DB0E8BD4(v24, &qword_1EBA4E570);
    if (qword_1EBA4E578 != -1) {
      goto LABEL_128;
    }
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(v0 + 744);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  sub_1DB0E8B70(v1 + *(int *)(v3 + 28) + v5, *(void *)(v0 + 896), &qword_1EBA4E570);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  v156 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v156(v2, 1, v6) == 1) {
    goto LABEL_10;
  }
  uint64_t v153 = v7;
  uint64_t v8 = *(void *)(v0 + 896);
  swift_bridgeObjectRetain();
  sub_1DB0E8BD4(v8, &qword_1EBA4E570);
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v9 = (uint64_t *)(v0 + 624);
  uint64_t v10 = (uint64_t *)(v0 + 656);
  uint64_t v164 = sub_1DB1EF810();
  __swift_project_value_buffer(v164, (uint64_t)qword_1EBA4F408);
  uint64_t v11 = sub_1DB1EF7F0();
  os_log_type_t v12 = sub_1DB1F16F0();
  v154 = (uint64_t *)(v0 + 624);
  if (!os_log_type_enabled(v11, v12))
  {

    goto LABEL_20;
  }
  uint64_t v13 = (uint8_t *)swift_slowAlloc();
  uint64_t v14 = swift_slowAlloc();
  uint64_t v167 = v14;
  *(_DWORD *)uint64_t v13 = 136446210;
  swift_beginAccess();
  uint64_t v15 = *(void *)(v0 + 624);
  uint64_t v16 = *(void *)(v0 + 880);
  if (!*(void *)(v15 + 16))
  {
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(void *)(v0 + 880), 1, 1, v6);
    goto LABEL_18;
  }
  sub_1DB0E8B70(v15 + v5 + *(int *)(v3 + 28), *(void *)(v0 + 880), &qword_1EBA4E570);
  if (v156(v16, 1, v6) == 1)
  {
LABEL_18:
    uint64_t v19 = 7104878;
    sub_1DB0E8BD4(*(void *)(v0 + 880), &qword_1EBA4E570);
    unint64_t v21 = 0xE300000000000000;
    goto LABEL_19;
  }
  uint64_t v17 = *(void *)(v0 + 880);
  *(void *)(v0 + 344) = sub_1DB1EF590();
  *(void *)(v0 + 352) = v18;
  *(void *)(v0 + 328) = 45;
  *(void *)(v0 + 336) = 0xE100000000000000;
  *(void *)(v0 + 312) = 95;
  *(void *)(v0 + 320) = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v19 = sub_1DB1F1950();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v17;
  uint64_t v10 = (uint64_t *)(v0 + 656);
  (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v22, v6);
LABEL_19:
  *uint64_t v10 = sub_1DB11F638(v19, v21, &v167);
  sub_1DB1F1910();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DB0DC000, v11, v12, "Source Locale already set to %{public}s", v13, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1E018CA60](v14, -1, -1);
  MEMORY[0x1E018CA60](v13, -1, -1);

  uint64_t v9 = (uint64_t *)(v0 + 624);
LABEL_20:
  if ((*(unsigned char *)(v0 + 969) & 1) == 0)
  {
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    *(void *)(v0 + 928) = __swift_project_value_buffer(v164, (uint64_t)qword_1EBA4F408);
    uint64_t v44 = sub_1DB1EF7F0();
    os_log_type_t v45 = sub_1DB1F1700();
    if (os_log_type_enabled(v44, v45))
    {
      os_log_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v46 = 0;
      _os_log_impl(&dword_1DB0DC000, v44, v45, "Validating target locale due to non-strict", v46, 2u);
      MEMORY[0x1E018CA60](v46, -1, -1);
    }

    swift_beginAccess();
    uint64_t v47 = *(void *)(v0 + 624);
    *(void *)(v0 + 936) = v47;
    swift_bridgeObjectRetain();
    uint64_t v48 = swift_task_alloc();
    *(void *)(v0 + 944) = v48;
    *(void *)(v48 + 16) = v47;
    int v49 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v49;
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9054D8);
    *int v49 = v0;
    v49[1] = sub_1DB1906E0;
    return MEMORY[0x1F41880D8](v0 + 608, 0, 0, 0xD000000000000018, 0x80000001DB1FD220, sub_1DB195064, v48, v50);
  }
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v164, (uint64_t)qword_1EBA4F408);
  unint64_t v32 = sub_1DB1EF7F0();
  os_log_type_t v33 = sub_1DB1F16F0();
  uint64_t v155 = v6;
  if (!os_log_type_enabled(v32, v33))
  {

    goto LABEL_38;
  }
  os_log_t v34 = (uint8_t *)swift_slowAlloc();
  uint64_t v35 = swift_slowAlloc();
  uint64_t v167 = v35;
  *(_DWORD *)os_log_t v34 = 136446210;
  swift_beginAccess();
  uint64_t v36 = *(void *)(v0 + 624);
  uint64_t v37 = *(void *)(v0 + 864);
  if (!*(void *)(v36 + 16))
  {
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(void *)(v0 + 864), 1, 1, v6);
    goto LABEL_36;
  }
  uint64_t v38 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
  (*(void (**)(void, uint64_t, uint64_t))(v153 + 16))(*(void *)(v0 + 864), v36 + *(int *)(*(void *)(v0 + 744) + 36) + ((v38 + 32) & ~v38), v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v37, 0, 1, v6);
  if (v156(v37, 1, v6) == 1)
  {
LABEL_36:
    uint64_t v41 = 7104878;
    sub_1DB0E8BD4(*(void *)(v0 + 864), &qword_1EBA4E570);
    unint64_t v43 = 0xE300000000000000;
    goto LABEL_37;
  }
  uint64_t v39 = *(void *)(v0 + 864);
  *(void *)(v0 + 568) = sub_1DB1EF590();
  *(void *)(v0 + 576) = v40;
  *(void *)(v0 + 584) = 45;
  *(void *)(v0 + 592) = 0xE100000000000000;
  *(void *)(v0 + 552) = 95;
  *(void *)(v0 + 560) = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v41 = sub_1DB1F1950();
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v39, v6);
LABEL_37:
  *(void *)(v0 + 600) = sub_1DB11F638(v41, v43, &v167);
  sub_1DB1F1910();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DB0DC000, v32, v33, "Using strict locales, treating target as %{public}s", v34, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1E018CA60](v35, -1, -1);
  MEMORY[0x1E018CA60](v34, -1, -1);

  uint64_t v9 = (uint64_t *)(v0 + 624);
LABEL_38:
  swift_beginAccess();
  uint64_t v51 = *v9;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  uint64_t v167 = MEMORY[0x1E4FBC860];
  uint64_t v53 = *(void *)(v51 + 16);
  swift_bridgeObjectRetain();
  uint64_t v160 = v53;
  if (!v53)
  {
LABEL_68:
    swift_bridgeObjectRelease();
    uint64_t v87 = *(void *)(v52 + 16);
    if (v87)
    {
      uint64_t v88 = *(void *)(v0 + 752);
      uint64_t v89 = v52 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
      uint64_t v90 = qword_1EBA4E578;
      swift_retain();
      if (v90 != -1)
      {
        swift_once();
        uint64_t v88 = *(void *)(v0 + 752);
      }
      uint64_t v161 = *(void *)(v88 + 72);
      os_log_type_t v91 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 728) + 8);
      do
      {
        __swift_project_value_buffer(v164, (uint64_t)qword_1EBA4F408);
        os_log_type_t v95 = sub_1DB1EF7F0();
        os_log_type_t v96 = sub_1DB1F1700();
        if (os_log_type_enabled(v95, v96))
        {
          uint64_t v97 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v97 = 0;
          _os_log_impl(&dword_1DB0DC000, v95, v96, "Yield untranslatable or already translated)", v97, 2u);
          MEMORY[0x1E018CA60](v97, -1, -1);
        }
        uint64_t v92 = *(void *)(v0 + 800);
        uint64_t v93 = *(void *)(v0 + 736);
        uint64_t v94 = *(void *)(v0 + 720);

        sub_1DB1843B8(v89, v92, (uint64_t (*)(void))type metadata accessor for TextModel);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
        sub_1DB1F15A0();
        (*v91)(v93, v94);
        v89 += v161;
        --v87;
      }
      while (v87);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    uint64_t v98 = *v154;
    uint64_t v99 = MEMORY[0x1E4FBC860];
    uint64_t v167 = MEMORY[0x1E4FBC860];
    uint64_t v100 = *(void *)(v98 + 16);
    swift_bridgeObjectRetain();
    if (v100)
    {
      unint64_t v101 = 0;
      uint64_t v102 = *(void *)(v0 + 752);
      uint64_t v103 = *(int **)(v0 + 744);
      uint64_t v162 = MEMORY[0x1E4FBC860];
      uint64_t v158 = v100;
      while (1)
      {
        if (v101 >= *(void *)(v98 + 16)) {
          goto LABEL_127;
        }
        uint64_t v106 = *(void *)(v0 + 776);
        unint64_t v107 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
        uint64_t v108 = *(void *)(v102 + 72);
        sub_1DB1843B8(v98 + v107 + v108 * v101, v106, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v109 = *(void *)(v0 + 776);
        if (*(void *)(v106 + v103[11])) {
          goto LABEL_80;
        }
        uint64_t v110 = (uint64_t *)(v109 + v103[6]);
        uint64_t v112 = *v110;
        unint64_t v111 = v110[1];
        uint64_t v113 = v112 & 0xFFFFFFFFFFFFLL;
        if (!((v111 & 0x2000000000000000) != 0 ? HIBYTE(v111) & 0xF : v113)) {
          goto LABEL_80;
        }
        uint64_t v115 = *(void *)(v0 + 840);
        sub_1DB0E8B70(v109 + v103[7], v115, &qword_1EBA4E570);
        unsigned int v116 = v156(v115, 1, v155);
        sub_1DB0E8BD4(v115, &qword_1EBA4E570);
        uint64_t v109 = *(void *)(v0 + 776);
        if (v116 == 1) {
          break;
        }
        uint64_t v117 = *(void *)(v0 + 768);
        sub_1DB1843B8(v109, v117, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v104 = *(void *)(v0 + 768);
        if (*(void *)(v117 + v103[11])) {
          goto LABEL_91;
        }
        v124 = (uint64_t *)(v104 + v103[6]);
        uint64_t v126 = *v124;
        unint64_t v125 = v124[1];
        uint64_t v127 = v126 & 0xFFFFFFFFFFFFLL;
        if (!((v125 & 0x2000000000000000) != 0 ? HIBYTE(v125) & 0xF : v127)) {
          goto LABEL_91;
        }
        uint64_t v129 = *(void *)(v0 + 832);
        sub_1DB0E8B70(v104 + v103[7], v129, &qword_1EBA4E570);
        unsigned int v130 = v156(v129, 1, v155);
        sub_1DB0E8BD4(v129, &qword_1EBA4E570);
        uint64_t v104 = *(void *)(v0 + 768);
        if (v130 == 1) {
          goto LABEL_91;
        }
        uint64_t v131 = (void *)(v104 + v103[8]);
        unint64_t v132 = v131[1];
        if (!v132) {
          goto LABEL_91;
        }
        uint64_t v133 = *v131 & 0xFFFFFFFFFFFFLL;
        uint64_t v134 = (v132 & 0x2000000000000000) != 0 ? HIBYTE(v132) & 0xF : v133;
        uint64_t v100 = v158;
        if (!v134)
        {
LABEL_91:
          uint64_t v118 = *(void *)(v0 + 776);
          uint64_t v119 = *(void *)(v0 + 760);
          sub_1DB184724(v104, (uint64_t (*)(void))type metadata accessor for TextModel);
          sub_1DB194978(v118, v119, (uint64_t (*)(void))type metadata accessor for TextModel);
          uint64_t v120 = v162;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DB12EA74(0, *(void *)(v162 + 16) + 1, 1);
            uint64_t v120 = v167;
          }
          unint64_t v122 = *(void *)(v120 + 16);
          unint64_t v121 = *(void *)(v120 + 24);
          if (v122 >= v121 >> 1)
          {
            sub_1DB12EA74(v121 > 1, v122 + 1, 1);
            uint64_t v120 = v167;
          }
          uint64_t v123 = *(void *)(v0 + 760);
          *(void *)(v120 + 16) = v122 + 1;
          uint64_t v162 = v120;
          sub_1DB194978(v123, v120 + v107 + v122 * v108, (uint64_t (*)(void))type metadata accessor for TextModel);
          uint64_t v100 = v158;
          goto LABEL_82;
        }
LABEL_81:
        uint64_t v105 = *(void *)(v0 + 776);
        sub_1DB184724(v104, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB184724(v105, (uint64_t (*)(void))type metadata accessor for TextModel);
LABEL_82:
        if (v100 == ++v101) {
          goto LABEL_108;
        }
      }
      uint64_t v100 = v158;
LABEL_80:
      sub_1DB1843B8(v109, *(void *)(v0 + 768), (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v104 = *(void *)(v0 + 768);
      goto LABEL_81;
    }
    uint64_t v162 = v99;
LABEL_108:
    swift_bridgeObjectRelease();
    uint64_t *v154 = v162;
    swift_bridgeObjectRelease();
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    *(void *)(v0 + 960) = __swift_project_value_buffer(v164, (uint64_t)qword_1EBA4F408);
    uint64_t v135 = *(void *)(v0 + 624);
    swift_bridgeObjectRetain_n();
    v136 = sub_1DB1EF7F0();
    os_log_type_t v137 = sub_1DB1F16F0();
    if (!os_log_type_enabled(v136, v137))
    {
      swift_bridgeObjectRelease_n();
LABEL_123:

      v151 = self;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 968;
      *(void *)(v0 + 24) = sub_1DB19199C;
      uint64_t v152 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_1DB1D35E0;
      *(void *)(v0 + 104) = &block_descriptor_0;
      *(void *)(v0 + 112) = v152;
      objc_msgSend(v151, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v0 + 80);
      return MEMORY[0x1F41881E8](v0 + 16);
    }
    uint64_t v166 = 7104878;
    uint64_t v138 = swift_slowAlloc();
    uint64_t v163 = swift_slowAlloc();
    uint64_t v167 = v163;
    *(_DWORD *)uint64_t v138 = 134218498;
    *(void *)(v0 + 672) = *(void *)(v135 + 16);
    sub_1DB1F1910();
    *(_WORD *)(v138 + 12) = 2082;
    uint64_t v139 = *(void *)(v0 + 824);
    if (*(void *)(v135 + 16))
    {
      uint64_t v140 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
      sub_1DB0E8B70(v135 + *(int *)(*(void *)(v0 + 744) + 28) + ((v140 + 32) & ~v140), *(void *)(v0 + 824), &qword_1EBA4E570);
      if (v156(v139, 1, v155) != 1)
      {
        uint64_t v141 = *(void *)(v0 + 824);
        *(void *)(v0 + 424) = sub_1DB1EF590();
        *(void *)(v0 + 432) = v142;
        *(void *)(v0 + 440) = 45;
        *(void *)(v0 + 448) = 0xE100000000000000;
        *(void *)(v0 + 360) = 95;
        *(void *)(v0 + 368) = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v143 = sub_1DB1F1950();
        unint64_t v145 = v144;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v141, v155);
        goto LABEL_117;
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(void *)(v0 + 824), 1, 1, v155);
    }
    sub_1DB0E8BD4(*(void *)(v0 + 824), &qword_1EBA4E570);
    unint64_t v145 = 0xE300000000000000;
    uint64_t v143 = 7104878;
LABEL_117:
    *(void *)(v0 + 664) = sub_1DB11F638(v143, v145, &v167);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v138 + 22) = 2082;
    uint64_t v146 = *(void *)(v0 + 816);
    if (*(void *)(v135 + 16))
    {
      uint64_t v147 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
      (*(void (**)(void, uint64_t, uint64_t))(v153 + 16))(*(void *)(v0 + 816), v135 + *(int *)(*(void *)(v0 + 744) + 36) + ((v147 + 32) & ~v147), v155);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v146, 0, 1, v155);
      if (v156(v146, 1, v155) != 1)
      {
        uint64_t v159 = *(void *)(v0 + 816);
        *(void *)(v0 + 376) = sub_1DB1EF590();
        *(void *)(v0 + 384) = v148;
        *(void *)(v0 + 392) = 45;
        *(void *)(v0 + 400) = 0xE100000000000000;
        *(void *)(v0 + 408) = 95;
        *(void *)(v0 + 416) = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v166 = sub_1DB1F1950();
        unint64_t v150 = v149;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v159, v155);
LABEL_122:
        *(void *)(v0 + 648) = sub_1DB11F638(v166, v150, &v167);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DB0DC000, v136, v137, "Translate %ld models from '%{public}s' to '%{public}s'", (uint8_t *)v138, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v163, -1, -1);
        MEMORY[0x1E018CA60](v138, -1, -1);
        goto LABEL_123;
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v153 + 56))(*(void *)(v0 + 816), 1, 1, v155);
    }
    sub_1DB0E8BD4(*(void *)(v0 + 816), &qword_1EBA4E570);
    unint64_t v150 = 0xE300000000000000;
    goto LABEL_122;
  }
  unint64_t v54 = 0;
  uint64_t v157 = *(void *)(v0 + 752);
  uint64_t v55 = *(int **)(v0 + 744);
  while (v54 < *(void *)(v51 + 16))
  {
    uint64_t v59 = *(void *)(v0 + 808);
    unint64_t v60 = (*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80);
    uint64_t v61 = *(void *)(v157 + 72);
    sub_1DB1843B8(v51 + v60 + v61 * v54, v59, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v62 = *(void *)(v0 + 808);
    if (*(void *)(v59 + v55[11])) {
      goto LABEL_45;
    }
    long long v69 = (uint64_t *)(v62 + v55[6]);
    uint64_t v71 = *v69;
    unint64_t v70 = v69[1];
    uint64_t v72 = v71 & 0xFFFFFFFFFFFFLL;
    uint64_t v73 = (v70 & 0x2000000000000000) != 0 ? HIBYTE(v70) & 0xF : v72;
    if (!v73
      || (uint64_t v74 = *(void *)(v0 + 856),
          sub_1DB0E8B70(v62 + v55[7], v74, &qword_1EBA4E570),
          unsigned int v75 = v156(v74, 1, v155),
          sub_1DB0E8BD4(v74, &qword_1EBA4E570),
          uint64_t v62 = *(void *)(v0 + 808),
          v75 == 1))
    {
LABEL_45:
      sub_1DB1843B8(v62, *(void *)(v0 + 792), (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v57 = *(void *)(v0 + 792);
LABEL_46:
      uint64_t v63 = v55;
      uint64_t v64 = *(void *)(v0 + 808);
      uint64_t v65 = *(void *)(v0 + 784);
      sub_1DB184724(v57, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB194978(v64, v65, (uint64_t (*)(void))type metadata accessor for TextModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12EA74(0, *(void *)(v52 + 16) + 1, 1);
        uint64_t v52 = v167;
      }
      unint64_t v67 = *(void *)(v52 + 16);
      unint64_t v66 = *(void *)(v52 + 24);
      if (v67 >= v66 >> 1)
      {
        sub_1DB12EA74(v66 > 1, v67 + 1, 1);
        uint64_t v52 = v167;
      }
      uint64_t v68 = *(void *)(v0 + 784);
      *(void *)(v52 + 16) = v67 + 1;
      sub_1DB194978(v68, v52 + v60 + v67 * v61, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v55 = v63;
      goto LABEL_42;
    }
    uint64_t v56 = *(void *)(v0 + 792);
    sub_1DB1843B8(v62, v56, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v57 = *(void *)(v0 + 792);
    if (!*(void *)(v56 + v55[11]))
    {
      uint64_t v76 = (uint64_t *)(v57 + v55[6]);
      uint64_t v78 = *v76;
      unint64_t v77 = v76[1];
      uint64_t v79 = v78 & 0xFFFFFFFFFFFFLL;
      if ((v77 & 0x2000000000000000) != 0 ? HIBYTE(v77) & 0xF : v79)
      {
        uint64_t v81 = *(void *)(v0 + 848);
        sub_1DB0E8B70(v57 + v55[7], v81, &qword_1EBA4E570);
        unsigned int v82 = v156(v81, 1, v155);
        sub_1DB0E8BD4(v81, &qword_1EBA4E570);
        uint64_t v57 = *(void *)(v0 + 792);
        if (v82 != 1)
        {
          unint64_t v83 = (void *)(v57 + v55[8]);
          unint64_t v84 = v83[1];
          if (v84)
          {
            uint64_t v85 = *v83 & 0xFFFFFFFFFFFFLL;
            if ((v84 & 0x2000000000000000) != 0 ? HIBYTE(v84) & 0xF : v85) {
              goto LABEL_46;
            }
          }
        }
      }
    }
    uint64_t v58 = *(void *)(v0 + 808);
    sub_1DB184724(v57, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB184724(v58, (uint64_t (*)(void))type metadata accessor for TextModel);
LABEL_42:
    if (v160 == ++v54) {
      goto LABEL_68;
    }
  }
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  swift_once();
LABEL_11:
  uint64_t v25 = sub_1DB1EF810();
  *(void *)(v0 + 904) = __swift_project_value_buffer(v25, (uint64_t)qword_1EBA4F408);
  unint64_t v26 = sub_1DB1EF7F0();
  os_log_type_t v27 = sub_1DB1F1700();
  if (os_log_type_enabled(v26, v27))
  {
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    _os_log_impl(&dword_1DB0DC000, v26, v27, "Performing source LID since sourceLocale is nil", v28, 2u);
    MEMORY[0x1E018CA60](v28, -1, -1);
  }

  v165 = (uint64_t (*)(uint64_t))((char *)&dword_1EA9054C8 + dword_1EA9054C8);
  swift_bridgeObjectRetain();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 912) = v29;
  void *v29 = v0;
  v29[1] = sub_1DB18EF50;
  uint64_t v30 = *(void *)(v0 + 680);
  return v165(v30);
}

uint64_t sub_1DB18EF50(uint64_t a1)
{
  *(void *)(*(void *)v1 + 920) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DB18F070, 0, 0);
}

uint64_t sub_1DB18F070()
{
  uint64_t v169 = v0;
  unint64_t v1 = v0 + 624;
  uint64_t v2 = *(void *)(v0 + 920);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 624) = v2;
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F16F0();
  uint64_t v152 = (uint64_t *)(v0 + 624);
  if (!os_log_type_enabled(v3, v4)) {
    goto LABEL_8;
  }
  uint64_t v5 = (uint64_t *)(v0 + 616);
  uint64_t v6 = (uint8_t *)swift_slowAlloc();
  uint64_t v7 = swift_slowAlloc();
  uint64_t v168 = v7;
  *(_DWORD *)uint64_t v6 = 136446210;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 624);
  uint64_t v9 = *(void *)(v0 + 888);
  if (!*(void *)(v8 + 16))
  {
    uint64_t v17 = sub_1DB1EF6B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
    goto LABEL_6;
  }
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
  sub_1DB0E8B70(v8 + *(int *)(*(void *)(v0 + 744) + 28) + ((v10 + 32) & ~v10), *(void *)(v0 + 888), &qword_1EBA4E570);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
LABEL_6:
    uint64_t v14 = 7104878;
    sub_1DB0E8BD4(*(void *)(v0 + 888), &qword_1EBA4E570);
    unint64_t v16 = 0xE300000000000000;
    goto LABEL_7;
  }
  uint64_t v161 = *(void *)(v0 + 888);
  *(void *)(v0 + 536) = sub_1DB1EF590();
  *(void *)(v0 + 544) = v13;
  *(void *)(v0 + 472) = 45;
  *(void *)(v0 + 480) = 0xE100000000000000;
  *(void *)(v0 + 456) = 95;
  *(void *)(v0 + 464) = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v14 = sub_1DB1F1950();
  unint64_t v16 = v15;
  uint64_t v5 = (uint64_t *)(v0 + 616);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v161, v11);
LABEL_7:
  *uint64_t v5 = sub_1DB11F638(v14, v16, &v168);
  unint64_t v1 = v0 + 624;
  sub_1DB1F1910();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DB0DC000, v3, v4, "Source LID result: %{public}s", v6, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1E018CA60](v7, -1, -1);
  MEMORY[0x1E018CA60](v6, -1, -1);
LABEL_8:

  if ((*(unsigned char *)(v0 + 969) & 1) == 0)
  {
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1DB1EF810();
    *(void *)(v0 + 928) = __swift_project_value_buffer(v32, (uint64_t)qword_1EBA4F408);
    os_log_type_t v33 = sub_1DB1EF7F0();
    os_log_type_t v34 = sub_1DB1F1700();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_1DB0DC000, v33, v34, "Validating target locale due to non-strict", v35, 2u);
      MEMORY[0x1E018CA60](v35, -1, -1);
    }

    swift_beginAccess();
    uint64_t v36 = *(void *)(v0 + 624);
    *(void *)(v0 + 936) = v36;
    swift_bridgeObjectRetain();
    uint64_t v37 = swift_task_alloc();
    *(void *)(v0 + 944) = v37;
    *(void *)(v37 + 16) = v36;
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v38;
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9054D8);
    *uint64_t v38 = v0;
    v38[1] = sub_1DB1906E0;
    return MEMORY[0x1F41880D8](v0 + 608, 0, 0, 0xD000000000000018, 0x80000001DB1FD220, sub_1DB195064, v37, v39);
  }
  if (qword_1EBA4E578 != -1) {
    goto LABEL_117;
  }
  while (1)
  {
    uint64_t v166 = sub_1DB1EF810();
    __swift_project_value_buffer(v166, (uint64_t)qword_1EBA4F408);
    uint64_t v18 = sub_1DB1EF7F0();
    os_log_type_t v19 = sub_1DB1F16F0();
    if (!os_log_type_enabled(v18, v19))
    {

      goto LABEL_25;
    }
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v168 = v21;
    *(_DWORD *)unint64_t v20 = 136446210;
    swift_beginAccess();
    uint64_t v22 = *(void *)(v0 + 624);
    uint64_t v23 = *(void *)(v0 + 864);
    if (!*(void *)(v22 + 16))
    {
      uint64_t v40 = sub_1DB1EF6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v23, 1, 1, v40);
LABEL_23:
      uint64_t v29 = 7104878;
      sub_1DB0E8BD4(*(void *)(v0 + 864), &qword_1EBA4E570);
      unint64_t v31 = 0xE300000000000000;
      goto LABEL_24;
    }
    uint64_t v24 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
    uint64_t v25 = v22 + *(int *)(*(void *)(v0 + 744) + 36) + ((v24 + 32) & ~v24);
    uint64_t v26 = sub_1DB1EF6B0();
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v23, v25, v26);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v23, 1, v26) == 1) {
      goto LABEL_23;
    }
    uint64_t v156 = *(void *)(v0 + 864);
    *(void *)(v0 + 568) = sub_1DB1EF590();
    *(void *)(v0 + 576) = v28;
    *(void *)(v0 + 584) = 45;
    *(void *)(v0 + 592) = 0xE100000000000000;
    *(void *)(v0 + 552) = 95;
    *(void *)(v0 + 560) = 0xE100000000000000;
    sub_1DB0F0708();
    uint64_t v29 = sub_1DB1F1950();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v156, v26);
LABEL_24:
    *(void *)(v0 + 600) = sub_1DB11F638(v29, v31, &v168);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v18, v19, "Using strict locales, treating target as %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v21, -1, -1);
    MEMORY[0x1E018CA60](v20, -1, -1);

    unint64_t v1 = v0 + 624;
LABEL_25:
    swift_beginAccess();
    uint64_t v41 = *(void *)v1;
    uint64_t v42 = MEMORY[0x1E4FBC860];
    uint64_t v168 = MEMORY[0x1E4FBC860];
    uint64_t v43 = *(void *)(v41 + 16);
    swift_bridgeObjectRetain();
    uint64_t v162 = v43;
    if (!v43) {
      break;
    }
    unint64_t v1 = 0;
    uint64_t v157 = v41;
    uint64_t v159 = *(void *)(v0 + 752);
    uint64_t v44 = *(int **)(v0 + 744);
    while (v1 < *(void *)(v41 + 16))
    {
      uint64_t v48 = *(void *)(v0 + 808);
      unint64_t v49 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
      uint64_t v50 = *(void *)(v159 + 72);
      sub_1DB1843B8(v41 + v49 + v50 * v1, v48, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v51 = *(void *)(v0 + 808);
      if (*(void *)(v48 + v44[11])) {
        goto LABEL_33;
      }
      uint64_t v57 = (uint64_t *)(v51 + v44[6]);
      uint64_t v59 = *v57;
      unint64_t v58 = v57[1];
      uint64_t v60 = v59 & 0xFFFFFFFFFFFFLL;
      if (!((v58 & 0x2000000000000000) != 0 ? HIBYTE(v58) & 0xF : v60)) {
        goto LABEL_33;
      }
      uint64_t v62 = *(void *)(v0 + 856);
      sub_1DB0E8B70(v51 + v44[7], v62, &qword_1EBA4E570);
      uint64_t v63 = sub_1DB1EF6B0();
      uint64_t v153 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48);
      int v64 = v153(v62, 1, v63);
      sub_1DB0E8BD4(v62, &qword_1EBA4E570);
      uint64_t v51 = *(void *)(v0 + 808);
      if (v64 == 1)
      {
        uint64_t v41 = v157;
LABEL_33:
        sub_1DB1843B8(v51, *(void *)(v0 + 792), (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v46 = *(void *)(v0 + 792);
LABEL_34:
        uint64_t v52 = *(void *)(v0 + 808);
        uint64_t v53 = *(void *)(v0 + 784);
        sub_1DB184724(v46, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB194978(v52, v53, (uint64_t (*)(void))type metadata accessor for TextModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12EA74(0, *(void *)(v42 + 16) + 1, 1);
          uint64_t v42 = v168;
        }
        unint64_t v55 = *(void *)(v42 + 16);
        unint64_t v54 = *(void *)(v42 + 24);
        if (v55 >= v54 >> 1)
        {
          sub_1DB12EA74(v54 > 1, v55 + 1, 1);
          uint64_t v42 = v168;
        }
        uint64_t v56 = *(void *)(v0 + 784);
        *(void *)(v42 + 16) = v55 + 1;
        sub_1DB194978(v56, v42 + v49 + v55 * v50, (uint64_t (*)(void))type metadata accessor for TextModel);
        goto LABEL_30;
      }
      uint64_t v45 = *(void *)(v0 + 792);
      sub_1DB1843B8(v51, v45, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v46 = *(void *)(v0 + 792);
      if (*(void *)(v45 + v44[11])) {
        goto LABEL_28;
      }
      uint64_t v65 = (uint64_t *)(v46 + v44[6]);
      uint64_t v67 = *v65;
      unint64_t v66 = v65[1];
      uint64_t v68 = v67 & 0xFFFFFFFFFFFFLL;
      if ((v66 & 0x2000000000000000) != 0) {
        uint64_t v69 = HIBYTE(v66) & 0xF;
      }
      else {
        uint64_t v69 = v68;
      }
      uint64_t v41 = v157;
      if (!v69) {
        goto LABEL_29;
      }
      uint64_t v70 = *(void *)(v0 + 848);
      sub_1DB0E8B70(v46 + v44[7], v70, &qword_1EBA4E570);
      int v71 = v153(v70, 1, v63);
      sub_1DB0E8BD4(v70, &qword_1EBA4E570);
      uint64_t v46 = *(void *)(v0 + 792);
      if (v71 == 1 || (v72 = (void *)(v46 + v44[8]), (unint64_t v73 = v72[1]) == 0))
      {
LABEL_28:
        uint64_t v41 = v157;
      }
      else
      {
        uint64_t v74 = *v72 & 0xFFFFFFFFFFFFLL;
        if ((v73 & 0x2000000000000000) != 0) {
          uint64_t v75 = HIBYTE(v73) & 0xF;
        }
        else {
          uint64_t v75 = v74;
        }
        uint64_t v41 = v157;
        if (v75) {
          goto LABEL_34;
        }
      }
LABEL_29:
      uint64_t v47 = *(void *)(v0 + 808);
      sub_1DB184724(v46, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB184724(v47, (uint64_t (*)(void))type metadata accessor for TextModel);
LABEL_30:
      if (v162 == ++v1) {
        goto LABEL_56;
      }
    }
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    swift_once();
  }
LABEL_56:
  swift_bridgeObjectRelease();
  uint64_t v76 = *(void *)(v42 + 16);
  if (v76)
  {
    uint64_t v77 = *(void *)(v0 + 752);
    uint64_t v78 = v42 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
    uint64_t v79 = qword_1EBA4E578;
    swift_retain();
    if (v79 != -1)
    {
      swift_once();
      uint64_t v77 = *(void *)(v0 + 752);
    }
    uint64_t v163 = *(void *)(v77 + 72);
    uint64_t v80 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 728) + 8);
    do
    {
      __swift_project_value_buffer(v166, (uint64_t)qword_1EBA4F408);
      unint64_t v84 = sub_1DB1EF7F0();
      os_log_type_t v85 = sub_1DB1F1700();
      if (os_log_type_enabled(v84, v85))
      {
        v86 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v86 = 0;
        _os_log_impl(&dword_1DB0DC000, v84, v85, "Yield untranslatable or already translated)", v86, 2u);
        MEMORY[0x1E018CA60](v86, -1, -1);
      }
      uint64_t v81 = *(void *)(v0 + 800);
      uint64_t v82 = *(void *)(v0 + 736);
      uint64_t v83 = *(void *)(v0 + 720);

      sub_1DB1843B8(v78, v81, (uint64_t (*)(void))type metadata accessor for TextModel);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
      sub_1DB1F15A0();
      (*v80)(v82, v83);
      v78 += v163;
      --v76;
    }
    while (v76);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  uint64_t v87 = *v152;
  uint64_t v88 = MEMORY[0x1E4FBC860];
  uint64_t v168 = MEMORY[0x1E4FBC860];
  uint64_t v89 = *(void *)(v87 + 16);
  swift_bridgeObjectRetain();
  if (v89)
  {
    unint64_t v90 = 0;
    unint64_t v1 = *(void *)(v0 + 752);
    os_log_type_t v91 = *(int **)(v0 + 744);
    uint64_t v158 = MEMORY[0x1E4FBC860];
    uint64_t v160 = v89;
    uint64_t v164 = v91;
    unint64_t v154 = v1;
    while (1)
    {
      if (v90 >= *(void *)(v87 + 16)) {
        goto LABEL_116;
      }
      uint64_t v94 = *(void *)(v0 + 776);
      unint64_t v95 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      uint64_t v96 = *(void *)(v1 + 72);
      sub_1DB1843B8(v87 + v95 + v96 * v90, v94, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v97 = *(void *)(v0 + 776);
      if (*(void *)(v94 + v91[11])) {
        goto LABEL_68;
      }
      uint64_t v98 = (uint64_t *)(v97 + v91[6]);
      uint64_t v100 = *v98;
      unint64_t v99 = v98[1];
      uint64_t v101 = v100 & 0xFFFFFFFFFFFFLL;
      if (!((v99 & 0x2000000000000000) != 0 ? HIBYTE(v99) & 0xF : v101)) {
        goto LABEL_68;
      }
      uint64_t v103 = *(void *)(v0 + 840);
      sub_1DB0E8B70(v97 + v91[7], v103, &qword_1EBA4E570);
      uint64_t v104 = sub_1DB1EF6B0();
      v151 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 48);
      int v105 = v151(v103, 1, v104);
      sub_1DB0E8BD4(v103, &qword_1EBA4E570);
      uint64_t v97 = *(void *)(v0 + 776);
      if (v105 == 1) {
        break;
      }
      uint64_t v106 = *(void *)(v0 + 768);
      sub_1DB1843B8(v97, v106, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v92 = *(void *)(v0 + 768);
      uint64_t v89 = v160;
      if (*(void *)(v106 + v91[11])) {
        goto LABEL_79;
      }
      uint64_t v113 = (uint64_t *)(v92 + v91[6]);
      uint64_t v115 = *v113;
      unint64_t v114 = v113[1];
      uint64_t v116 = v115 & 0xFFFFFFFFFFFFLL;
      if ((v114 & 0x2000000000000000) != 0) {
        uint64_t v117 = HIBYTE(v114) & 0xF;
      }
      else {
        uint64_t v117 = v116;
      }
      unint64_t v1 = v154;
      if (!v117) {
        goto LABEL_80;
      }
      uint64_t v118 = *(void *)(v0 + 832);
      sub_1DB0E8B70(v92 + v164[7], v118, &qword_1EBA4E570);
      int v119 = v151(v118, 1, v104);
      sub_1DB0E8BD4(v118, &qword_1EBA4E570);
      uint64_t v92 = *(void *)(v0 + 768);
      if (v119 == 1 || (uint64_t v120 = (void *)(v92 + v164[8]), (v121 = v120[1]) == 0))
      {
LABEL_79:
        unint64_t v1 = v154;
LABEL_80:
        uint64_t v107 = *(void *)(v0 + 776);
        uint64_t v108 = *(void *)(v0 + 760);
        sub_1DB184724(v92, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB194978(v107, v108, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v109 = v158;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12EA74(0, *(void *)(v158 + 16) + 1, 1);
          uint64_t v109 = v168;
        }
        unint64_t v111 = *(void *)(v109 + 16);
        unint64_t v110 = *(void *)(v109 + 24);
        os_log_type_t v91 = v164;
        if (v111 >= v110 >> 1)
        {
          sub_1DB12EA74(v110 > 1, v111 + 1, 1);
          uint64_t v109 = v168;
        }
        uint64_t v112 = *(void *)(v0 + 760);
        *(void *)(v109 + 16) = v111 + 1;
        uint64_t v158 = v109;
        sub_1DB194978(v112, v109 + v95 + v111 * v96, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v89 = v160;
        goto LABEL_70;
      }
      uint64_t v122 = *v120 & 0xFFFFFFFFFFFFLL;
      if ((v121 & 0x2000000000000000) != 0) {
        uint64_t v123 = HIBYTE(v121) & 0xF;
      }
      else {
        uint64_t v123 = v122;
      }
      unint64_t v1 = v154;
      if (!v123) {
        goto LABEL_80;
      }
LABEL_69:
      uint64_t v93 = *(void *)(v0 + 776);
      sub_1DB184724(v92, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB184724(v93, (uint64_t (*)(void))type metadata accessor for TextModel);
      os_log_type_t v91 = v164;
LABEL_70:
      if (v89 == ++v90) {
        goto LABEL_97;
      }
    }
    uint64_t v89 = v160;
    unint64_t v1 = v154;
LABEL_68:
    sub_1DB1843B8(v97, *(void *)(v0 + 768), (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v92 = *(void *)(v0 + 768);
    goto LABEL_69;
  }
  uint64_t v158 = v88;
LABEL_97:
  swift_bridgeObjectRelease();
  *uint64_t v152 = v158;
  swift_bridgeObjectRelease();
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  *(void *)(v0 + 960) = __swift_project_value_buffer(v166, (uint64_t)qword_1EBA4F408);
  uint64_t v124 = *(void *)(v0 + 624);
  swift_bridgeObjectRetain_n();
  unint64_t v125 = sub_1DB1EF7F0();
  os_log_type_t v126 = sub_1DB1F16F0();
  if (os_log_type_enabled(v125, v126))
  {
    os_log_type_t v167 = v126;
    uint64_t v127 = swift_slowAlloc();
    uint64_t v165 = swift_slowAlloc();
    uint64_t v168 = v165;
    *(_DWORD *)uint64_t v127 = 134218498;
    *(void *)(v0 + 672) = *(void *)(v124 + 16);
    sub_1DB1F1910();
    *(_WORD *)(v127 + 12) = 2082;
    uint64_t v128 = *(void *)(v0 + 824);
    if (*(void *)(v124 + 16))
    {
      uint64_t v129 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
      sub_1DB0E8B70(v124 + *(int *)(*(void *)(v0 + 744) + 28) + ((v129 + 32) & ~v129), *(void *)(v0 + 824), &qword_1EBA4E570);
      uint64_t v130 = sub_1DB1EF6B0();
      uint64_t v131 = *(void *)(v130 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v128, 1, v130) != 1)
      {
        uint64_t v155 = *(void *)(v0 + 824);
        *(void *)(v0 + 424) = sub_1DB1EF590();
        *(void *)(v0 + 432) = v132;
        *(void *)(v0 + 440) = 45;
        *(void *)(v0 + 448) = 0xE100000000000000;
        *(void *)(v0 + 360) = 95;
        *(void *)(v0 + 368) = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v133 = sub_1DB1F1950();
        unint64_t v135 = v134;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v155, v130);
        goto LABEL_106;
      }
    }
    else
    {
      uint64_t v136 = sub_1DB1EF6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v128, 1, 1, v136);
    }
    sub_1DB0E8BD4(*(void *)(v0 + 824), &qword_1EBA4E570);
    unint64_t v135 = 0xE300000000000000;
    uint64_t v133 = 7104878;
LABEL_106:
    *(void *)(v0 + 664) = sub_1DB11F638(v133, v135, &v168);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v127 + 22) = 2082;
    uint64_t v137 = *(void *)(v0 + 816);
    if (*(void *)(v124 + 16))
    {
      uint64_t v138 = *(unsigned __int8 *)(*(void *)(v0 + 752) + 80);
      uint64_t v139 = v124 + *(int *)(*(void *)(v0 + 744) + 36) + ((v138 + 32) & ~v138);
      uint64_t v140 = sub_1DB1EF6B0();
      uint64_t v141 = *(void *)(v140 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 16))(v137, v139, v140);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v141 + 56))(v137, 0, 1, v140);
      uint64_t v142 = 7104878;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v137, 1, v140) != 1)
      {
        uint64_t v143 = *(void *)(v0 + 816);
        *(void *)(v0 + 376) = sub_1DB1EF590();
        *(void *)(v0 + 384) = v144;
        *(void *)(v0 + 392) = 45;
        *(void *)(v0 + 400) = 0xE100000000000000;
        *(void *)(v0 + 408) = 95;
        *(void *)(v0 + 416) = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v142 = sub_1DB1F1950();
        unint64_t v146 = v145;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v143, v140);
        goto LABEL_111;
      }
    }
    else
    {
      uint64_t v147 = sub_1DB1EF6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v137, 1, 1, v147);
      uint64_t v142 = 7104878;
    }
    sub_1DB0E8BD4(*(void *)(v0 + 816), &qword_1EBA4E570);
    unint64_t v146 = 0xE300000000000000;
LABEL_111:
    *(void *)(v0 + 648) = sub_1DB11F638(v142, v146, &v168);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DB0DC000, v125, v167, "Translate %ld models from '%{public}s' to '%{public}s'", (uint8_t *)v127, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v165, -1, -1);
    MEMORY[0x1E018CA60](v127, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v148 = self;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 968;
  *(void *)(v0 + 24) = sub_1DB19199C;
  uint64_t v149 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1DB1D35E0;
  *(void *)(v0 + 104) = &block_descriptor_0;
  *(void *)(v0 + 112) = v149;
  objc_msgSend(v148, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1DB1906E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1907F8, 0, 0);
}

uint64_t sub_1DB1907F8()
{
  unint64_t v146 = v0;
  uint64_t v129 = v0 + 78;
  swift_bridgeObjectRelease();
  v0[78] = v0[76];
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1DB1EF7F0();
  os_log_type_t v2 = sub_1DB1F16F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v145 = v4;
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v5 = v0[78];
    uint64_t v6 = v0[109];
    if (*(void *)(v5 + 16))
    {
      uint64_t v7 = *(unsigned __int8 *)(v0[94] + 80);
      uint64_t v8 = v5 + *(int *)(v0[93] + 36) + ((v7 + 32) & ~v7);
      uint64_t v9 = sub_1DB1EF6B0();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
      {
        uint64_t v134 = v0[109];
        v0[61] = sub_1DB1EF590();
        v0[62] = v11;
        v0[63] = 45;
        v0[64] = 0xE100000000000000;
        v0[65] = 95;
        v0[66] = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v12 = sub_1DB1F1950();
        unint64_t v14 = v13;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v134, v9);
LABEL_7:
        v0[79] = sub_1DB11F638(v12, v14, &v145);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DB0DC000, v1, v2, "Validated targetLocale to %{public}s", v3, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v4, -1, -1);
        MEMORY[0x1E018CA60](v3, -1, -1);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v15 = sub_1DB1EF6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }
    uint64_t v12 = 7104878;
    sub_1DB0E8BD4(v0[109], &qword_1EBA4E570);
    unint64_t v14 = 0xE300000000000000;
    goto LABEL_7;
  }
LABEL_8:

  swift_beginAccess();
  uint64_t v16 = *v129;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v145 = MEMORY[0x1E4FBC860];
  uint64_t v18 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  uint64_t v141 = v18;
  if (!v18)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void *)(v17 + 16);
    if (v52)
    {
      uint64_t v53 = v0[94];
      uint64_t v54 = v17 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      uint64_t v55 = qword_1EBA4E578;
      swift_retain();
      if (v55 != -1)
      {
        swift_once();
        uint64_t v53 = v0[94];
      }
      uint64_t v142 = *(void *)(v53 + 72);
      uint64_t v56 = (void (**)(uint64_t, uint64_t))(v0[91] + 8);
      uint64_t v138 = sub_1DB1EF810();
      __swift_project_value_buffer(v138, (uint64_t)qword_1EBA4F408);
      while (1)
      {
        uint64_t v60 = sub_1DB1EF7F0();
        os_log_type_t v61 = sub_1DB1F1700();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v62 = 0;
          _os_log_impl(&dword_1DB0DC000, v60, v61, "Yield untranslatable or already translated)", v62, 2u);
          MEMORY[0x1E018CA60](v62, -1, -1);
        }
        uint64_t v57 = v0[100];
        uint64_t v58 = v0[92];
        uint64_t v59 = v0[90];

        sub_1DB1843B8(v54, v57, (uint64_t (*)(void))type metadata accessor for TextModel);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
        sub_1DB1F15A0();
        (*v56)(v58, v59);
        v54 += v142;
        if (!--v52) {
          break;
        }
        __swift_project_value_buffer(v138, (uint64_t)qword_1EBA4F408);
      }
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    uint64_t v63 = *v129;
    uint64_t v64 = MEMORY[0x1E4FBC860];
    uint64_t v145 = MEMORY[0x1E4FBC860];
    uint64_t v65 = *(void *)(v63 + 16);
    swift_bridgeObjectRetain();
    if (!v65)
    {
      uint64_t v136 = v64;
LABEL_81:
      swift_bridgeObjectRelease();
      *uint64_t v129 = v136;
      swift_bridgeObjectRelease();
      if (qword_1EBA4E578 != -1) {
        goto LABEL_100;
      }
      goto LABEL_82;
    }
    unint64_t v66 = 0;
    uint64_t v67 = v0[94];
    uint64_t v68 = (int *)v0[93];
    uint64_t v136 = MEMORY[0x1E4FBC860];
    uint64_t v139 = v65;
    uint64_t v143 = v68;
    uint64_t v133 = v67;
    while (1)
    {
      if (v66 >= *(void *)(v63 + 16)) {
        goto LABEL_99;
      }
      uint64_t v71 = v0[97];
      unint64_t v72 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      uint64_t v73 = *(void *)(v67 + 72);
      sub_1DB1843B8(v63 + v72 + v73 * v66, v71, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v74 = v0[97];
      if (*(void *)(v71 + v68[11])) {
        goto LABEL_52;
      }
      uint64_t v75 = (uint64_t *)(v74 + v68[6]);
      uint64_t v77 = *v75;
      unint64_t v76 = v75[1];
      uint64_t v78 = v77 & 0xFFFFFFFFFFFFLL;
      if (!((v76 & 0x2000000000000000) != 0 ? HIBYTE(v76) & 0xF : v78)) {
        goto LABEL_52;
      }
      uint64_t v80 = v0[105];
      sub_1DB0E8B70(v74 + v68[7], v80, &qword_1EBA4E570);
      uint64_t v81 = sub_1DB1EF6B0();
      uint64_t v130 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 48);
      int v82 = v130(v80, 1, v81);
      sub_1DB0E8BD4(v80, &qword_1EBA4E570);
      uint64_t v74 = v0[97];
      if (v82 == 1) {
        break;
      }
      uint64_t v83 = v0[96];
      sub_1DB1843B8(v74, v83, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v69 = v0[96];
      uint64_t v65 = v139;
      if (*(void *)(v83 + v68[11])) {
        goto LABEL_63;
      }
      unint64_t v90 = (uint64_t *)(v69 + v68[6]);
      uint64_t v92 = *v90;
      unint64_t v91 = v90[1];
      uint64_t v93 = v92 & 0xFFFFFFFFFFFFLL;
      if ((v91 & 0x2000000000000000) != 0) {
        uint64_t v94 = HIBYTE(v91) & 0xF;
      }
      else {
        uint64_t v94 = v93;
      }
      uint64_t v67 = v133;
      if (!v94) {
        goto LABEL_64;
      }
      uint64_t v95 = v0[104];
      sub_1DB0E8B70(v69 + v143[7], v95, &qword_1EBA4E570);
      int v96 = v130(v95, 1, v81);
      sub_1DB0E8BD4(v95, &qword_1EBA4E570);
      uint64_t v69 = v0[96];
      if (v96 == 1 || (uint64_t v97 = (void *)(v69 + v143[8]), (v98 = v97[1]) == 0))
      {
LABEL_63:
        uint64_t v67 = v133;
LABEL_64:
        uint64_t v84 = v0[97];
        uint64_t v85 = v0[95];
        sub_1DB184724(v69, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB194978(v84, v85, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v86 = v136;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12EA74(0, *(void *)(v136 + 16) + 1, 1);
          uint64_t v86 = v145;
        }
        unint64_t v88 = *(void *)(v86 + 16);
        unint64_t v87 = *(void *)(v86 + 24);
        uint64_t v68 = v143;
        if (v88 >= v87 >> 1)
        {
          sub_1DB12EA74(v87 > 1, v88 + 1, 1);
          uint64_t v86 = v145;
        }
        uint64_t v89 = v0[95];
        *(void *)(v86 + 16) = v88 + 1;
        uint64_t v136 = v86;
        sub_1DB194978(v89, v86 + v72 + v88 * v73, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v65 = v139;
        goto LABEL_54;
      }
      uint64_t v99 = *v97 & 0xFFFFFFFFFFFFLL;
      if ((v98 & 0x2000000000000000) != 0) {
        uint64_t v100 = HIBYTE(v98) & 0xF;
      }
      else {
        uint64_t v100 = v99;
      }
      uint64_t v67 = v133;
      if (!v100) {
        goto LABEL_64;
      }
LABEL_53:
      uint64_t v70 = v0[97];
      sub_1DB184724(v69, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB184724(v70, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v68 = v143;
LABEL_54:
      if (v65 == ++v66) {
        goto LABEL_81;
      }
    }
    uint64_t v65 = v139;
    uint64_t v67 = v133;
LABEL_52:
    sub_1DB1843B8(v74, v0[96], (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v69 = v0[96];
    goto LABEL_53;
  }
  unint64_t v19 = 0;
  uint64_t v135 = v16;
  uint64_t v137 = v0[94];
  unint64_t v20 = (int *)v0[93];
  while (v19 < *(void *)(v16 + 16))
  {
    uint64_t v24 = v0[101];
    unint64_t v25 = (*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
    uint64_t v26 = *(void *)(v137 + 72);
    sub_1DB1843B8(v16 + v25 + v26 * v19, v24, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v27 = v0[101];
    if (*(void *)(v24 + v20[11])) {
      goto LABEL_16;
    }
    os_log_type_t v33 = (uint64_t *)(v27 + v20[6]);
    uint64_t v35 = *v33;
    unint64_t v34 = v33[1];
    uint64_t v36 = v35 & 0xFFFFFFFFFFFFLL;
    if (!((v34 & 0x2000000000000000) != 0 ? HIBYTE(v34) & 0xF : v36)) {
      goto LABEL_16;
    }
    uint64_t v38 = v0[107];
    sub_1DB0E8B70(v27 + v20[7], v38, &qword_1EBA4E570);
    uint64_t v39 = sub_1DB1EF6B0();
    uint64_t v132 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48);
    int v40 = v132(v38, 1, v39);
    sub_1DB0E8BD4(v38, &qword_1EBA4E570);
    uint64_t v27 = v0[101];
    if (v40 == 1)
    {
      uint64_t v16 = v135;
LABEL_16:
      sub_1DB1843B8(v27, v0[99], (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v22 = v0[99];
LABEL_17:
      uint64_t v28 = v0[101];
      uint64_t v29 = v0[98];
      sub_1DB184724(v22, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB194978(v28, v29, (uint64_t (*)(void))type metadata accessor for TextModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12EA74(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v145;
      }
      unint64_t v31 = *(void *)(v17 + 16);
      unint64_t v30 = *(void *)(v17 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1DB12EA74(v30 > 1, v31 + 1, 1);
        uint64_t v17 = v145;
      }
      uint64_t v32 = v0[98];
      *(void *)(v17 + 16) = v31 + 1;
      sub_1DB194978(v32, v17 + v25 + v31 * v26, (uint64_t (*)(void))type metadata accessor for TextModel);
      goto LABEL_13;
    }
    uint64_t v21 = v0[99];
    sub_1DB1843B8(v27, v21, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v22 = v0[99];
    if (*(void *)(v21 + v20[11])) {
      goto LABEL_11;
    }
    uint64_t v41 = (uint64_t *)(v22 + v20[6]);
    uint64_t v43 = *v41;
    unint64_t v42 = v41[1];
    uint64_t v44 = v43 & 0xFFFFFFFFFFFFLL;
    if ((v42 & 0x2000000000000000) != 0) {
      uint64_t v45 = HIBYTE(v42) & 0xF;
    }
    else {
      uint64_t v45 = v44;
    }
    uint64_t v16 = v135;
    if (!v45) {
      goto LABEL_12;
    }
    uint64_t v46 = v0[106];
    sub_1DB0E8B70(v22 + v20[7], v46, &qword_1EBA4E570);
    int v47 = v132(v46, 1, v39);
    sub_1DB0E8BD4(v46, &qword_1EBA4E570);
    uint64_t v22 = v0[99];
    if (v47 == 1 || (uint64_t v48 = (void *)(v22 + v20[8]), (v49 = v48[1]) == 0))
    {
LABEL_11:
      uint64_t v16 = v135;
    }
    else
    {
      uint64_t v50 = *v48 & 0xFFFFFFFFFFFFLL;
      if ((v49 & 0x2000000000000000) != 0) {
        uint64_t v51 = HIBYTE(v49) & 0xF;
      }
      else {
        uint64_t v51 = v50;
      }
      uint64_t v16 = v135;
      if (v51) {
        goto LABEL_17;
      }
    }
LABEL_12:
    uint64_t v23 = v0[101];
    sub_1DB184724(v22, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB184724(v23, (uint64_t (*)(void))type metadata accessor for TextModel);
LABEL_13:
    if (v141 == ++v19) {
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  swift_once();
LABEL_82:
  uint64_t v101 = sub_1DB1EF810();
  v0[120] = __swift_project_value_buffer(v101, (uint64_t)qword_1EBA4F408);
  uint64_t v102 = v0[78];
  swift_bridgeObjectRetain_n();
  uint64_t v103 = sub_1DB1EF7F0();
  os_log_type_t v104 = sub_1DB1F16F0();
  if (os_log_type_enabled(v103, v104))
  {
    os_log_type_t v144 = v104;
    uint64_t v105 = swift_slowAlloc();
    uint64_t v140 = swift_slowAlloc();
    uint64_t v145 = v140;
    *(_DWORD *)uint64_t v105 = 134218498;
    v0[84] = *(void *)(v102 + 16);
    sub_1DB1F1910();
    *(_WORD *)(v105 + 12) = 2082;
    uint64_t v106 = v0[103];
    if (*(void *)(v102 + 16))
    {
      uint64_t v107 = *(unsigned __int8 *)(v0[94] + 80);
      sub_1DB0E8B70(v102 + *(int *)(v0[93] + 28) + ((v107 + 32) & ~v107), v0[103], &qword_1EBA4E570);
      uint64_t v108 = sub_1DB1EF6B0();
      uint64_t v109 = *(void *)(v108 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v106, 1, v108) != 1)
      {
        uint64_t v131 = v0[103];
        v0[53] = sub_1DB1EF590();
        v0[54] = v110;
        v0[55] = 45;
        v0[56] = 0xE100000000000000;
        v0[45] = 95;
        v0[46] = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v111 = sub_1DB1F1950();
        unint64_t v113 = v112;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v131, v108);
        goto LABEL_89;
      }
    }
    else
    {
      uint64_t v114 = sub_1DB1EF6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v106, 1, 1, v114);
    }
    sub_1DB0E8BD4(v0[103], &qword_1EBA4E570);
    unint64_t v113 = 0xE300000000000000;
    uint64_t v111 = 7104878;
LABEL_89:
    v0[83] = sub_1DB11F638(v111, v113, &v145);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v105 + 22) = 2082;
    uint64_t v115 = v0[102];
    if (*(void *)(v102 + 16))
    {
      uint64_t v116 = *(unsigned __int8 *)(v0[94] + 80);
      uint64_t v117 = v102 + *(int *)(v0[93] + 36) + ((v116 + 32) & ~v116);
      uint64_t v118 = sub_1DB1EF6B0();
      uint64_t v119 = *(void *)(v118 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16))(v115, v117, v118);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v115, 0, 1, v118);
      uint64_t v120 = 7104878;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v115, 1, v118) != 1)
      {
        uint64_t v121 = v0[102];
        v0[47] = sub_1DB1EF590();
        v0[48] = v122;
        v0[49] = 45;
        v0[50] = 0xE100000000000000;
        v0[51] = 95;
        v0[52] = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v120 = sub_1DB1F1950();
        unint64_t v124 = v123;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v121, v118);
        goto LABEL_94;
      }
    }
    else
    {
      uint64_t v125 = sub_1DB1EF6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v115, 1, 1, v125);
      uint64_t v120 = 7104878;
    }
    sub_1DB0E8BD4(v0[102], &qword_1EBA4E570);
    unint64_t v124 = 0xE300000000000000;
LABEL_94:
    v0[81] = sub_1DB11F638(v120, v124, &v145);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DB0DC000, v103, v144, "Translate %ld models from '%{public}s' to '%{public}s'", (uint8_t *)v105, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v140, -1, -1);
    MEMORY[0x1E018CA60](v105, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  os_log_type_t v126 = self;
  v0[2] = v0;
  v0[7] = v0 + 121;
  v0[3] = sub_1DB19199C;
  uint64_t v127 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DB1D35E0;
  v0[13] = &block_descriptor_0;
  v0[14] = v127;
  objc_msgSend(v126, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB19199C()
{
  return MEMORY[0x1F4188298](sub_1DB191A7C, 0, 0);
}

uint64_t sub_1DB191A7C()
{
  uint64_t v30 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 968);
  os_log_type_t v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F16F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v29 = v5;
    if (v1) {
      uint64_t v6 = 0x63697665642D6E6FLL;
    }
    else {
      uint64_t v6 = 0x6B726F7774656ELL;
    }
    if (v1) {
      unint64_t v7 = 0xE900000000000065;
    }
    else {
      unint64_t v7 = 0xE700000000000000;
    }
    *(void *)(v0 + 640) = sub_1DB11F638(v6, v7, &v29);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v2, v3, "Translate path: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v5, -1, -1);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }

  uint64_t v8 = *(void *)(v0 + 712);
  uint64_t v9 = *(void *)(v0 + 704);
  uint64_t v10 = *(void *)(v0 + 688);
  char v11 = *(unsigned char *)(v0 + 970) & 1;
  char v12 = v1;
  if (v1) {
    char v13 = 3;
  }
  else {
    char v13 = 2;
  }
  uint64_t v14 = swift_allocBox();
  uint64_t v16 = v15;
  *(void *)(v8 + *(int *)(v9 + 24)) = 0;
  sub_1DB1EF780();
  *(unsigned char *)(v8 + *(int *)(v9 + 28)) = v13;
  sub_1DB1EF770();
  sub_1DB1EF740();
  uint64_t v28 = v16;
  sub_1DB194978(v8, v16, (uint64_t (*)(void))type metadata accessor for Signpost);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v18 = *(void *)(v0 + 624);
  uint64_t v19 = swift_task_alloc();
  *(void *)(v19 + 16) = v10;
  *(unsigned char *)(v19 + 24) = v12;
  *(unsigned char *)(v19 + 25) = v11;
  *(void *)(v19 + 32) = v17;
  *(void *)(v19 + 40) = v14;
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_1DB18C418((void *(*)(uint64_t *__return_ptr, uint64_t))sub_1DB1949F0, v19, v18);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
    if (v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1DB1F1BB0();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21)
    {
LABEL_14:
      uint64_t v22 = *(void **)(v0 + 696);
      swift_beginAccess();
      *(void *)(v17 + 16) = v21;
      swift_beginAccess();
      sub_1DB17437C();
      swift_endAccess();
      sub_1DB0E2EFC(0, &qword_1EA905508);
      uint64_t v23 = (void *)sub_1DB1F1480();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_translate_useDedicatedTextMachPort_, v23, 1);

      goto LABEL_18;
    }
  }
  uint64_t v25 = *(void *)(v0 + 712);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1DB1843B8(v28, v25, (uint64_t (*)(void))type metadata accessor for Signpost);
  sub_1DB173E68();
  sub_1DB184724(v25, (uint64_t (*)(void))type metadata accessor for Signpost);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  sub_1DB1F15B0();
LABEL_18:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t static TextTranslationService.detectSourceLocale(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA9054C8 + dword_1EA9054C8);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_1DB1415D8;
  return v5(a1);
}

uint64_t static TextTranslationService.validateTargetLocale(_:)(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1DB1920AC, 0, 0);
}

uint64_t sub_1DB1920AC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9054D8);
  *os_log_type_t v3 = v0;
  v3[1] = sub_1DB1921B0;
  return MEMORY[0x1F41880D8](v0 + 2, 0, 0, 0xD000000000000018, 0x80000001DB1FD220, sub_1DB1946F0, v2, v4);
}

uint64_t sub_1DB1921B0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1403F4, 0, 0);
}

uint64_t sub_1DB1922C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, NSObject **a7@<X8>)
{
  uint64_t v81 = a5;
  uint64_t v82 = a6;
  LODWORD(v77) = a4;
  int v83 = a3;
  unint64_t v90 = a7;
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  uint64_t v80 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v78 = v9;
  uint64_t v79 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905408);
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v86 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TextModel();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v75 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v84 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v76 = (uint64_t)&v73 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v74 = (uint64_t)&v73 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v85 = (uint64_t)&v73 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = (int *)v12;
  uint64_t v23 = *(int *)(v12 + 28);
  uint64_t v93 = a1;
  sub_1DB0E8B70(a1 + v23, (uint64_t)v22, &qword_1EBA4E570);
  uint64_t v24 = sub_1DB1EF6B0();
  uint64_t v25 = *(void *)(v24 - 8);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24);
  uint64_t v89 = a2;
  if (v26 == 1)
  {
    sub_1DB0E8BD4((uint64_t)v22, &qword_1EBA4E570);
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v98 = sub_1DB1EF590();
    uint64_t v99 = v29;
    uint64_t v96 = 45;
    unint64_t v97 = 0xE100000000000000;
    uint64_t v94 = 95;
    unint64_t v95 = 0xE100000000000000;
    sub_1DB0F0708();
    uint64_t v27 = sub_1DB1F1950();
    uint64_t v28 = v30;
    a2 = v89;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
  }
  uint64_t v31 = v93;
  uint64_t v98 = sub_1DB1EF590();
  uint64_t v99 = v32;
  uint64_t v96 = 45;
  unint64_t v97 = 0xE100000000000000;
  uint64_t v94 = 95;
  unint64_t v95 = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v33 = sub_1DB1F1950();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  if (v28)
  {
    if (v27 == v33 && v28 == v35)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      if (qword_1EBA4E578 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1DB1EF810();
      __swift_project_value_buffer(v37, (uint64_t)qword_1EBA4F408);
      uint64_t v38 = sub_1DB1EF7F0();
      os_log_type_t v39 = sub_1DB1F1700();
      if (os_log_type_enabled(v38, v39))
      {
        int v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v40 = 0;
        _os_log_impl(&dword_1DB0DC000, v38, v39, "Passthrough text model, no translation needed", v40, 2u);
        MEMORY[0x1E018CA60](v40, -1, -1);
      }

      uint64_t v41 = v85;
      sub_1DB1843B8(v31, v85, (uint64_t (*)(void))type metadata accessor for TextModel);
      unint64_t v42 = (uint64_t *)(v31 + v100[6]);
      uint64_t v44 = *v42;
      uint64_t v43 = v42[1];
      uint64_t v45 = (void *)(v41 + v100[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void *v45 = v44;
      v45[1] = v43;
      sub_1DB1843B8(v41, v74, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v46 = v86;
      sub_1DB1F15A0();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v46, v88);
      uint64_t *v90 = 0;
      return sub_1DB184724(v41, (uint64_t (*)(void))type metadata accessor for TextModel);
    }
    char v36 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_10;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LOBYTE(v98) = v77 & 1;
  uint64_t v48 = v79;
  uint64_t v49 = v80;
  uint64_t v50 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, a2, v92);
  uint64_t v77 = type metadata accessor for TextModel;
  uint64_t v51 = v76;
  sub_1DB1843B8(v31, v76, (uint64_t (*)(void))type metadata accessor for TextModel);
  unint64_t v52 = (*(unsigned __int8 *)(v49 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v53 = (v78 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (*(unsigned __int8 *)(v75 + 80) + v53 + 8) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v81;
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v55 + v52, v48, v50);
  *(void *)(v55 + v53) = v82;
  uint64_t v56 = v93;
  sub_1DB194978(v51, v55 + v54, (uint64_t (*)(void))v77);
  swift_retain();
  swift_retain();
  uint64_t v57 = v91;
  uint64_t v58 = sub_1DB193704(v56, v83 & 1, (unsigned __int8 *)&v98, (uint64_t)sub_1DB194C74, v55);
  if (v57)
  {
    swift_release();
    uint64_t v59 = v84;
    sub_1DB1843B8(v56, v84, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v60 = v100[11];
    os_log_type_t v61 = *(void **)(v59 + v60);
    id v62 = v57;

    *(void *)(v59 + v60) = v57;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1DB1EF810();
    __swift_project_value_buffer(v63, (uint64_t)qword_1EBA4F408);
    id v64 = v57;
    uint64_t v65 = sub_1DB1EF7F0();
    os_log_type_t v66 = sub_1DB1F1710();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 138412290;
      uint64_t v69 = sub_1DB1EF410();
      uint64_t v98 = v69;
      sub_1DB1F1910();
      *uint64_t v68 = v69;

      _os_log_impl(&dword_1DB0DC000, v65, v66, "Caught error during translation: %@", v67, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v68, -1, -1);
      MEMORY[0x1E018CA60](v67, -1, -1);
    }
    else
    {
    }
    uint64_t v71 = v84;
    sub_1DB1843B8(v84, v85, (uint64_t (*)(void))type metadata accessor for TextModel);
    unint64_t v72 = v86;
    sub_1DB1F15A0();

    (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v88);
    uint64_t *v90 = 0;
    return sub_1DB184724(v71, (uint64_t (*)(void))type metadata accessor for TextModel);
  }
  else
  {
    uint64_t v70 = v58;
    uint64_t result = swift_release();
    uint64_t *v90 = v70;
  }
  return result;
}

uint64_t sub_1DB192C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v53 = a5;
  uint64_t v58 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905408);
  uint64_t v57 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Signpost();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v54 = (uint64_t)&v50 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v50 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v50 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905510);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char **)((char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = (uint64_t *)(a2 + 16);
  uint64_t v24 = swift_projectBox();
  sub_1DB0E8B70(a1, (uint64_t)v23, &qword_1EA905510);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v50 = v24;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1DB194978((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for TextModel);
    swift_beginAccess();
    sub_1DB1843B8(v24, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Signpost);
    sub_1DB173B88(0);
    sub_1DB184724((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Signpost);
    uint64_t v26 = (uint64_t)v11;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1DB1EF810();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EBA4F408);
    sub_1DB1843B8((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v35 = sub_1DB1EF7F0();
    os_log_type_t v36 = sub_1DB1F1700();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v60[0] = v38;
      *(_DWORD *)uint64_t v37 = 136446210;
      uint64_t v53 = v7;
      uint64_t v39 = sub_1DB186A78();
      uint64_t v59 = sub_1DB11F638(v39, v40, v60);
      uint64_t v7 = v53;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB184724((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TextModel);
      _os_log_impl(&dword_1DB0DC000, v35, v36, "Text translation success: %{public}s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v38, -1, -1);
      MEMORY[0x1E018CA60](v37, -1, -1);
    }
    else
    {
      sub_1DB184724((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TextModel);
    }

    sub_1DB1843B8((uint64_t)v20, v54, (uint64_t (*)(void))type metadata accessor for TextModel);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
    uint64_t v41 = v56;
    sub_1DB1F15A0();
    goto LABEL_13;
  }
  uint64_t v20 = *v23;
  swift_beginAccess();
  sub_1DB1843B8(v24, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Signpost);
  sub_1DB173B88(1);
  sub_1DB184724((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Signpost);
  uint64_t v26 = (uint64_t)v11;
  if (qword_1EBA4E578 != -1) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v27 = sub_1DB1EF810();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EBA4F408);
    uint64_t v28 = v20;
    uint64_t v29 = sub_1DB1EF7F0();
    os_log_type_t v30 = sub_1DB1F1710();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412290;
      uint64_t v33 = sub_1DB1EF410();
      v60[0] = v33;
      sub_1DB1F1910();
      *uint64_t v32 = v33;

      _os_log_impl(&dword_1DB0DC000, v29, v30, "Text translation failure: %@", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v32, -1, -1);
      MEMORY[0x1E018CA60](v31, -1, -1);
    }
    else
    {
    }
    uint64_t v41 = v56;

    uint64_t v42 = v54;
    sub_1DB1843B8(v53, v54, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v43 = *(int *)(v51 + 44);
    uint64_t v44 = *(void **)(v42 + v43);
    uint64_t v45 = v20;

    *(void *)(v42 + v43) = v20;
    sub_1DB1843B8(v42, v52, (uint64_t (*)(void))type metadata accessor for TextModel);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
    sub_1DB1F15A0();

    uint64_t v20 = (char *)v42;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v7);
    sub_1DB184724((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v46 = v55;
    uint64_t result = swift_beginAccess();
    uint64_t v48 = *v46 - 1;
    if (!__OFSUB__(*v46, 1)) {
      break;
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  *uint64_t v46 = v48;
  if (!v48)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
    sub_1DB1F15B0();
    uint64_t v49 = v50;
    swift_beginAccess();
    sub_1DB1843B8(v49, v26, (uint64_t (*)(void))type metadata accessor for Signpost);
    sub_1DB173E68();
    return sub_1DB184724(v26, (uint64_t (*)(void))type metadata accessor for Signpost);
  }
  return result;
}

uint64_t sub_1DB193428(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - v12;
  if (!*(void *)(a2 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v11);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for TextModel();
  (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, a2+ *(int *)(v14 + 36)+ ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80)), v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_5:
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4E570);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
LABEL_6:
  static LocaleService.supportedTargetLocaleSync(_:)((uint64_t)v9, (unint64_t)v13);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v16 = v15(v9, v6);
  MEMORY[0x1F4188790](v16);
  v18[-2] = v13;
  v18[1] = sub_1DB18503C((void (*)(uint64_t))sub_1DB194708, (uint64_t)&v18[-4], a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9054E0);
  sub_1DB1F1530();
  return v15(v13, v6);
}

NSObject *sub_1DB193704(uint64_t a1, int a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  int v68 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v74 = *(void *)(v11 - 8);
  uint64_t v75 = v11;
  MEMORY[0x1F4188790](v11);
  os_log_type_t v66 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TextModel();
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v71 = (uint64_t)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v61 - v16;
  uint64_t v70 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v61 - v20;
  int v67 = *a3;
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1DB1EF810();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EBA4F408);
  sub_1DB1843B8(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TextModel);
  sub_1DB1843B8(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TextModel);
  uint64_t v65 = v23;
  uint64_t v24 = sub_1DB1EF7F0();
  os_log_type_t v25 = sub_1DB1F16F0();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v76 = v13;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    id v62 = v10;
    uint64_t v28 = v27;
    uint64_t v61 = swift_slowAlloc();
    aBlock[0] = v61;
    *(_DWORD *)uint64_t v28 = 134218242;
    uint64_t v29 = sub_1DB1F1370();
    uint64_t v63 = a1;
    uint64_t v64 = v5;
    uint64_t v30 = v29;
    sub_1DB184724((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v78 = v30;
    sub_1DB1F1910();
    *(_WORD *)(v28 + 12) = 2082;
    sub_1DB1EF570();
    sub_1DB19500C();
    uint64_t v31 = sub_1DB1F1D80();
    uint64_t v78 = sub_1DB11F638(v31, v32, aBlock);
    a1 = v63;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB184724((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TextModel);
    _os_log_impl(&dword_1DB0DC000, v24, v25, "Requested translating text of length %ld with ID %{public}s", (uint8_t *)v28, 0x16u);
    uint64_t v33 = v61;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v33, -1, -1);
    uint64_t v34 = v28;
    uint64_t v10 = v62;
    MEMORY[0x1E018CA60](v34, -1, -1);
  }
  else
  {
    sub_1DB184724((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB184724((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TextModel);
  }

  BOOL v35 = TextModel.isTranslatable.getter();
  uint64_t v37 = v74;
  uint64_t v36 = v75;
  if (v35)
  {
    sub_1DB0E8B70(a1 + *(int *)(v76 + 28), (uint64_t)v10, &qword_1EBA4E570);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v10, 1, v36) == 1)
    {
      uint64_t v38 = v66;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4E570);
    }
    else
    {
      uint64_t v38 = v66;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v66, v10, v36);
    }
    id v40 = objc_allocWithZone(MEMORY[0x1E4F42360]);
    uint64_t v41 = v38;
    uint64_t v42 = (void *)sub_1DB1EF5D0();
    uint64_t v43 = (void *)sub_1DB1EF5D0();
    id v44 = objc_msgSend(v40, sel_initWithSourceLocale_targetLocale_, v42, v43);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v36);
    objc_msgSend(v44, sel_setForcedOfflineTranslation_, v68 & 1);
    objc_msgSend(v44, sel_setSourceOrigin_, 1);
    uint64_t v45 = sub_1DB1EF7F0();
    os_log_type_t v46 = sub_1DB1F16F0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = a1;
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 134217984;
      if (v67) {
        uint64_t v49 = 5;
      }
      else {
        uint64_t v49 = 1;
      }
      aBlock[0] = v49;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v45, v46, "Requested translating taskHint %ld", v48, 0xCu);
      uint64_t v50 = v48;
      a1 = v47;
      MEMORY[0x1E018CA60](v50, -1, -1);
    }
    else
    {

      if (v67) {
        uint64_t v49 = 5;
      }
      else {
        uint64_t v49 = 1;
      }
    }
    objc_msgSend(v44, sel_setTaskHint_, v49);
    id v51 = v44;
    uint64_t v52 = (void *)sub_1DB1F1260();
    objc_msgSend(v51, sel_setText_, v52);

    uint64_t v53 = v71;
    sub_1DB1843B8(a1, v71, (uint64_t (*)(void))type metadata accessor for TextModel);
    unint64_t v54 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    unint64_t v55 = (v70 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v51;
    sub_1DB194978(v53, v56 + v54, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v57 = (void *)(v56 + v55);
    uint64_t v58 = v73;
    *uint64_t v57 = v72;
    v57[1] = v58;
    aBlock[4] = (uint64_t)sub_1DB194F40;
    aBlock[5] = v56;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1DB18CB74;
    aBlock[3] = (uint64_t)&block_descriptor_17;
    uint64_t v59 = _Block_copy(aBlock);
    uint64_t v24 = v51;
    swift_retain();
    swift_release();
    [v24 setCompletionHandler:v59];
    _Block_release(v59);
  }
  else
  {
    sub_1DB184784();
    swift_allocError();
    *uint64_t v39 = 9;
    swift_willThrow();
  }
  return v24;
}

uint64_t sub_1DB193ECC(uint64_t a1)
{
  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD60);
  v1[3] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for TextModel();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDA0);
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD98);
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDA8);
  v1[14] = v5;
  v1[15] = *(void *)(v5 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1940FC, 0, 0);
}

uint64_t sub_1DB1940FC()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[11];
  uint64_t v14 = v0[16];
  uint64_t v7 = v0[2];
  uint64_t v8 = swift_task_alloc();
  *(unsigned char *)(v8 + 16) = 1;
  *(void *)(v8 + 24) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, *MEMORY[0x1E4FBD028], v6);
  sub_1DB1F15E0();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v14, v1, v2);
  sub_1DB0E3C44(&qword_1EA9054E8, &qword_1EBA4DDA8);
  sub_1DB1F1600();
  v0[18] = MEMORY[0x1E4FBC860];
  uint64_t v9 = sub_1DB0E3C44(&qword_1EA9054F0, &qword_1EBA4DDA0);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[19] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1DB1942DC;
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[3];
  return MEMORY[0x1F4187C78](v12, v11, v9);
}

uint64_t sub_1DB1942DC()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[9];
    uint64_t v3 = v2[10];
    uint64_t v5 = v2[8];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = (uint64_t (*)())CGPointMake;
  }
  else
  {
    uint64_t v6 = sub_1DB19441C;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1DB19441C()
{
  uint64_t v1 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[5] + 48))(v1, 1, v0[4]) == 1)
  {
    uint64_t v2 = v0[17];
    uint64_t v3 = v0[14];
    uint64_t v4 = v0[15];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    sub_1DB0E8BD4(v1, &qword_1EBA4DD60);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v6 = v0[18];
    return v5(v6);
  }
  else
  {
    uint64_t v9 = v0[6];
    uint64_t v8 = v0[7];
    sub_1DB194978(v1, v8, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB1843B8(v8, v9, (uint64_t (*)(void))type metadata accessor for TextModel);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = v0[18];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v11 = sub_1DB188C40(0, *(void *)(v11 + 16) + 1, 1, v0[18]);
    }
    unint64_t v13 = *(void *)(v11 + 16);
    unint64_t v12 = *(void *)(v11 + 24);
    if (v13 >= v12 >> 1) {
      unint64_t v11 = sub_1DB188C40(v12 > 1, v13 + 1, 1, v11);
    }
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[7];
    uint64_t v16 = v0[5];
    *(void *)(v11 + 16) = v13 + 1;
    sub_1DB194978(v14, v11+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v13, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB184724(v15, (uint64_t (*)(void))type metadata accessor for TextModel);
    v0[18] = v11;
    uint64_t v17 = sub_1DB0E3C44(&qword_1EA9054F0, &qword_1EBA4DDA0);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[19] = v18;
    void *v18 = v0;
    v18[1] = sub_1DB1942DC;
    uint64_t v19 = v0[8];
    uint64_t v20 = v0[3];
    return MEMORY[0x1F4187C78](v20, v19, v17);
  }
}

uint64_t sub_1DB1946F0(uint64_t a1)
{
  return sub_1DB193428(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for TextTranslationService()
{
  return &type metadata for TextTranslationService;
}

uint64_t sub_1DB194708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DB187E9C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DB194728(uint64_t a1)
{
  return sub_1DB18D3AC(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(unsigned char *)(v1 + 25), *(void **)(v1 + 32));
}

uint64_t sub_1DB19473C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = ((v3 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DB194830(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v1;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 32);
  char v11 = *(unsigned char *)(v1 + 40);
  uint64_t v12 = v1 + v5;
  char v13 = *(unsigned char *)(v1 + v6);
  uint64_t v14 = *(void *)(v7 + 8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  void *v15 = v2;
  v15[1] = sub_1DB1036D0;
  return sub_1DB18D5C0(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1DB194978(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1949E0()
{
  return swift_deallocObject();
}

uint64_t sub_1DB1949F0@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  return sub_1DB1922C8(a1, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unsigned __int8 *)(v2 + 25), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_1DB194A18()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = (int *)type metadata accessor for TextModel();
  unint64_t v6 = (v4 + *(unsigned __int8 *)(*((void *)v5 - 1) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  uint64_t v7 = v0 + v6;
  uint64_t v8 = sub_1DB1EF570();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v6, v8);
  swift_bridgeObjectRelease();
  unint64_t v9 = v0 + v6 + v5[7];
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7 + v5[9], v10);

  return swift_deallocObject();
}

uint64_t sub_1DB194C74(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for TextModel() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_1DB192C6C(a1, v7, v1 + v4, v8, v9);
}

uint64_t sub_1DB194D60()
{
  uint64_t v1 = (int *)type metadata accessor for TextModel();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);

  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  unint64_t v5 = v0 + v2 + v1[7];
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3 + v1[9], v6);

  swift_release();
  return swift_deallocObject();
}

void sub_1DB194F40(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for TextModel() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(void *))v9;
  uint64_t v11 = *(void *)(v9 + 8);
  sub_1DB18C590(a1, a2, v7, v8, v10, v11);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_1DB19500C()
{
  unint64_t result = qword_1EA903BD0;
  if (!qword_1EA903BD0)
  {
    sub_1DB1EF570();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903BD0);
  }
  return result;
}

uint64_t sub_1DB195078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905590);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905598);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = xmmword_1DB1F8470;
  v11[1] = xmmword_1DB1F8480;
  v11[2] = xmmword_1DB1F8490;
  v11[3] = xmmword_1DB1F84A0;
  v11[4] = xmmword_1DB1F84B0;
  sub_1DB1F09D0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  uint64_t v9 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055A0) + 36)];
  *(void *)uint64_t v9 = 0x4044000000000000;
  v9[8] = 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1DB0E8B70((uint64_t)v8, a1, &qword_1EA905598);
  return sub_1DB0E8BD4((uint64_t)v8, &qword_1EA905598);
}

void sub_1DB195240(uint64_t a1)
{
}

void sub_1DB195284(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC13TranslationUIP33_CF4489C12E47B589A5779A16E606AB3135TranslationBackdropVibrantBlurLayer_backdropLayer;
  id v5 = *(id *)&v1[OBJC_IVAR____TtC13TranslationUIP33_CF4489C12E47B589A5779A16E606AB3135TranslationBackdropVibrantBlurLayer_backdropLayer];
  uint64_t v6 = (void *)sub_1DB1F1260();
  objc_msgSend(v5, sel_setName_, v6);

  objc_msgSend(*(id *)&v2[v4], sel_setScale_, 0.25);
  id v7 = *(id *)&v2[v4];
  uint64_t v8 = (void *)sub_1DB1F1260();
  objc_msgSend(v7, sel_setGroupName_, v8);

  if (a1 > 0.0) {
    objc_msgSend(*(id *)&v2[v4], sel_setCornerRadius_, a1);
  }
  sub_1DB1F1290();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F39BC0]);
  uint64_t v10 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithType_, v10);

  v29[0] = xmmword_1DB1F8470;
  v29[1] = xmmword_1DB1F8480;
  v29[2] = xmmword_1DB1F8490;
  v29[3] = xmmword_1DB1F84A0;
  v29[4] = xmmword_1DB1F84B0;
  id v12 = objc_msgSend(self, sel_valueWithCAColorMatrix_, v29);
  objc_msgSend(v11, sel_setValue_forKey_, v12, *MEMORY[0x1E4F3A168]);

  sub_1DB1F1290();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F39BC0]);
  uint64_t v14 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithType_, v14);

  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA903D18);
  uint64_t v16 = (void *)sub_1DB1F1860();
  objc_msgSend(v15, sel_setValue_forKey_, v16, *MEMORY[0x1E4F3A1D8]);

  uint64_t v17 = (void *)sub_1DB1F1500();
  objc_msgSend(v15, sel_setValue_forKey_, v17, *MEMORY[0x1E4F3A1B8]);

  uint64_t v18 = *(void **)&v2[v4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049F8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1DB1F4900;
  uint64_t v20 = sub_1DB0E2EFC(0, &qword_1EA905530);
  *(void *)(v19 + 32) = v11;
  *(void *)(v19 + 88) = v20;
  *(void *)(v19 + 56) = v20;
  *(void *)(v19 + 64) = v15;
  id v21 = v18;
  id v22 = v11;
  id v23 = v15;
  uint64_t v24 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setFilters_, v24);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1DB1F7640;
  BOOL v26 = *(void **)&v2[v4];
  *(void *)(v25 + 32) = v26;
  *(void *)&v29[0] = v25;
  sub_1DB1F14C0();
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA905538);
  id v27 = v26;
  uint64_t v28 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSublayers_, v28);
}

uint64_t sub_1DB19567C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  int v5 = *(unsigned __int8 *)(v1 + 9);
  sub_1DB118D3C(*(void *)v1, v4);
  char v6 = sub_1DB1C5664(v3, v4);
  sub_1DB118DE4(v3, v4);
  if ((v6 & 1) != 0 || v5)
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905528);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }
  else
  {
    type metadata accessor for TranslationBackdropVibrantBlurLayer();
    sub_1DB1EFBF0();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905528);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t sub_1DB19579C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v7 = a2 & 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905528);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055A8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void *)((char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DB118D3C(a1, v7);
  char v15 = sub_1DB1C5664(a1, v7);
  sub_1DB118DE4(a1, v7);
  if (v15)
  {
    *uint64_t v14 = sub_1DB1F0C30();
    swift_storeEnumTagMultiPayload();
    sub_1DB0E3C44(&qword_1EA905550, &qword_1EA905528);
    return sub_1DB1F0400();
  }
  else
  {
    v18[1] = a3;
    type metadata accessor for TranslationBackdropVibrantBlurLayer();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a1;
    *(unsigned char *)(v17 + 24) = v7 != 0;
    *(double *)(v17 + 32) = a4;
    sub_1DB118D3C(a1, v7);
    sub_1DB1EFBF0();
    (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_1DB0E3C44(&qword_1EA905550, &qword_1EA905528);
    sub_1DB1F0400();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1DB195A5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB19579C(*(void *)v1, *(unsigned char *)(v1 + 8), a1, *(double *)(v1 + 16));
}

id sub_1DB195D5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TranslationBackdropVibrantBlurLayer()
{
  return self;
}

uint64_t destroy for TranslationBackdropCaptureSource(uint64_t a1)
{
  return sub_1DB118DE4(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t _s13TranslationUI32TranslationBackdropCaptureSourceVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_1DB118D3C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithCopy for TranslationBackdropCaptureSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_1DB118D3C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_1DB118DE4(v6, v7);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for TranslationBackdropCaptureSource(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_1DB118DE4(v6, v7);
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationBackdropCaptureSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationBackdropCaptureSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationBackdropCaptureSource()
{
  return &type metadata for TranslationBackdropCaptureSource;
}

uint64_t sub_1DB195F8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB195FA8@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  v24[1] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905558);
  MEMORY[0x1F4188790](v5);
  char v7 = (double *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E40);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1EFEC0();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (double *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905560);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v24 - v18;
  if (a1)
  {
    uint64_t v20 = (char *)v13 + *(int *)(v11 + 20);
    uint64_t v21 = *MEMORY[0x1E4F3D4A0];
    uint64_t v22 = sub_1DB1F02B0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
    *uint64_t v13 = a3;
    v13[1] = a3;
    sub_1DB0FDD68((uint64_t)v13, (uint64_t)v10);
    *(_WORD *)&v10[*(int *)(v8 + 36)] = 256;
    sub_1DB0E8B70((uint64_t)v10, (uint64_t)v16, &qword_1EA903E40);
    sub_1DB0E8BD4((uint64_t)v10, &qword_1EA903E40);
    sub_1DB0FDDCC((uint64_t)v13);
    sub_1DB196570((uint64_t)v16, (uint64_t)v19);
    sub_1DB0E8B70((uint64_t)v19, (uint64_t)v7, &qword_1EA905560);
    swift_storeEnumTagMultiPayload();
    sub_1DB196428();
    sub_1DB19651C();
    sub_1DB1F0400();
    return sub_1DB0E8BD4((uint64_t)v19, &qword_1EA905560);
  }
  else
  {
    *(void *)char v7 = swift_getKeyPath();
    *((unsigned char *)v7 + 8) = 0;
    v7[2] = a3;
    swift_storeEnumTagMultiPayload();
    sub_1DB196428();
    sub_1DB19651C();
    return sub_1DB1F0400();
  }
}

uint64_t sub_1DB1962BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB195FA8(*(unsigned char *)v1, a1, *(double *)(v1 + 8));
}

uint64_t getEnumTagSinglePayload for TranslationOverlayBackground(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationOverlayBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationOverlayBackground()
{
  return &type metadata for TranslationOverlayBackground;
}

unint64_t sub_1DB196370()
{
  unint64_t result = qword_1EA905540;
  if (!qword_1EA905540)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905548);
    sub_1DB0E3C44(&qword_1EA905550, &qword_1EA905528);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905540);
  }
  return result;
}

uint64_t sub_1DB196408()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1DB196428()
{
  unint64_t result = qword_1EA905568;
  if (!qword_1EA905568)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905560);
    sub_1DB1964C8();
    sub_1DB0E3C44(&qword_1EA903E70, &qword_1EA903E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905568);
  }
  return result;
}

unint64_t sub_1DB1964C8()
{
  unint64_t result = qword_1EA905570;
  if (!qword_1EA905570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905570);
  }
  return result;
}

unint64_t sub_1DB19651C()
{
  unint64_t result = qword_1EA905578;
  if (!qword_1EA905578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905578);
  }
  return result;
}

uint64_t sub_1DB196570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1965DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_1DB118D3C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for TranslationBackdrop(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_1DB118D3C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_1DB118DE4(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TranslationBackdrop(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_1DB118DE4(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationBackdrop(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationBackdrop(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationBackdrop()
{
  return &type metadata for TranslationBackdrop;
}

ValueMetadata *type metadata accessor for TranslationBackdropForBackgroundRendering()
{
  return &type metadata for TranslationBackdropForBackgroundRendering;
}

unint64_t sub_1DB19678C()
{
  unint64_t result = qword_1EA905580;
  if (!qword_1EA905580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905588);
    sub_1DB196428();
    sub_1DB19651C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905580);
  }
  return result;
}

uint64_t sub_1DB196808()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB196824()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB196840()
{
  sub_1DB118DE4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  return swift_deallocObject();
}

void sub_1DB19687C()
{
  sub_1DB195284(*(double *)(v0 + 32));
}

unint64_t sub_1DB1968A8()
{
  unint64_t result = qword_1EA9055B0;
  if (!qword_1EA9055B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9055B8);
    sub_1DB196948();
    sub_1DB0E3C44(&qword_1EA9055C8, &qword_1EA905598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9055B0);
  }
  return result;
}

unint64_t sub_1DB196948()
{
  unint64_t result = qword_1EA9055C0;
  if (!qword_1EA9055C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9055C0);
  }
  return result;
}

unint64_t sub_1DB1969A0()
{
  unint64_t result = qword_1EA9055D0;
  if (!qword_1EA9055D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9055D8);
    sub_1DB0E3C44(&qword_1EA905550, &qword_1EA905528);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9055D0);
  }
  return result;
}

uint64_t sub_1DB196A44(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v23 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    long long v9 = *((_OWORD *)a2 + 3);
    *(_WORD *)(a1 + 64) = *((_WORD *)a2 + 32);
    uint64_t v10 = a3[11];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    *(_OWORD *)(a1 + 48) = v9;
    uint64_t v13 = sub_1DB1F08D0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = a3[12];
    uint64_t v16 = v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v8) = *(unsigned char *)(v17 + 8);
    sub_1DB118D3C(*(void *)v17, v8);
    *(void *)uint64_t v16 = v18;
    *(unsigned char *)(v16 + 8) = v8;
    uint64_t v19 = a3[13];
    uint64_t v20 = (void *)(v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1DB1EFDE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[14];
    uint64_t v25 = (void *)(v4 + v24);
    BOOL v26 = (uint64_t *)((char *)a2 + v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_1DB1EFE50();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F0);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[15];
    uint64_t v31 = v4 + v30;
    uint64_t v32 = (uint64_t)a2 + v30;
    uint64_t v33 = *(void *)v32;
    char v34 = *(unsigned char *)(v32 + 8);
    sub_1DB118D3C(*(void *)v32, v34);
    *(void *)uint64_t v31 = v33;
    *(unsigned char *)(v31 + 8) = v34;
    uint64_t v35 = a3[16];
    uint64_t v36 = v4 + v35;
    uint64_t v37 = (uint64_t)a2 + v35;
    uint64_t v38 = *(uint64_t *)((char *)a2 + v35 + 8);
    *(void *)uint64_t v36 = *(uint64_t *)((char *)a2 + v35);
    *(void *)(v36 + 8) = v38;
    *(_OWORD *)(v36 + 16) = *(_OWORD *)((char *)a2 + v35 + 16);
    *(unsigned char *)(v36 + 32) = *((unsigned char *)a2 + v35 + 32);
    *(_OWORD *)(v36 + 40) = *(_OWORD *)((char *)a2 + v35 + 40);
    *(_OWORD *)(v36 + 56) = *(_OWORD *)((char *)a2 + v35 + 56);
    *(unsigned char *)(v36 + 72) = *((unsigned char *)a2 + v35 + 72);
    long long v39 = *(_OWORD *)((char *)a2 + v35 + 80);
    long long v40 = *(_OWORD *)((char *)a2 + v35 + 96);
    *(unsigned char *)(v36 + 112) = *((unsigned char *)a2 + v35 + 112);
    *(_OWORD *)(v36 + 80) = v39;
    *(_OWORD *)(v36 + 96) = v40;
    uint64_t v41 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
    uint64_t v42 = v36 + v41;
    uint64_t v43 = v37 + v41;
    uint64_t v44 = sub_1DB1EF520();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
    swift_bridgeObjectRetain();
    v45(v42, v43, v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
    *(void *)(v36 + *(int *)(v46 + 28)) = *(void *)(v37 + *(int *)(v46 + 28));
    *(void *)(v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t type metadata accessor for TranslationOverlay.LockedMetrics(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905638);
}

uint64_t sub_1DB196E84(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[11];
  uint64_t v5 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1DB118DE4(*(void *)(a1 + a2[12]), *(unsigned char *)(a1 + a2[12] + 8));
  uint64_t v6 = a1 + a2[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1DB1EFDE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1DB1EFE50();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  sub_1DB118DE4(*(void *)(a1 + a2[15]), *(unsigned char *)(a1 + a2[15] + 8));
  uint64_t v11 = a1 + a2[16];
  swift_bridgeObjectRelease();
  uint64_t v12 = v11 + *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  uint64_t v13 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  swift_release();
  return swift_release();
}

uint64_t sub_1DB1970E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v9 = a3[11];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v12 = sub_1DB1F08D0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  LOBYTE(v7) = *(unsigned char *)(v16 + 8);
  sub_1DB118D3C(*(void *)v16, v7);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v7;
  uint64_t v18 = a3[13];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_1DB1EFDE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_1DB1EFE50();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F0);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[15];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = *(unsigned char *)(v30 + 8);
  sub_1DB118D3C(*(void *)v30, v32);
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = v32;
  uint64_t v33 = a3[16];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = *(void *)(a2 + v33 + 8);
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = v36;
  *(_OWORD *)(v34 + 16) = *(_OWORD *)(a2 + v33 + 16);
  *(unsigned char *)(v34 + 32) = *(unsigned char *)(a2 + v33 + 32);
  *(_OWORD *)(v34 + 40) = *(_OWORD *)(a2 + v33 + 40);
  *(_OWORD *)(v34 + 56) = *(_OWORD *)(a2 + v33 + 56);
  *(unsigned char *)(v34 + 72) = *(unsigned char *)(a2 + v33 + 72);
  long long v37 = *(_OWORD *)(a2 + v33 + 80);
  long long v38 = *(_OWORD *)(a2 + v33 + 96);
  *(unsigned char *)(v34 + 112) = *(unsigned char *)(a2 + v33 + 112);
  *(_OWORD *)(v34 + 80) = v37;
  *(_OWORD *)(v34 + 96) = v38;
  uint64_t v39 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  uint64_t v40 = v34 + v39;
  uint64_t v41 = v35 + v39;
  uint64_t v42 = sub_1DB1EF520();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
  swift_bridgeObjectRetain();
  v43(v40, v41, v42);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  *(void *)(v34 + *(int *)(v44 + 28)) = *(void *)(v35 + *(int *)(v44 + 28));
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DB1974B4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v6 = a3[11];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[12];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v8) = *(unsigned char *)(v12 + 8);
  sub_1DB118D3C(*(void *)v12, v8);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v8;
  sub_1DB118DE4(v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = a3[13];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    sub_1DB0E8BD4(a1 + v16, &qword_1EA9055E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1DB1EFDE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[14];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_1DB0E8BD4(a1 + v20, &qword_1EA9055E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_1DB1EFE50();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F0);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v26 = a3[15];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)v28;
  char v30 = *(unsigned char *)(v28 + 8);
  sub_1DB118D3C(*(void *)v28, v30);
  uint64_t v31 = *(void *)v27;
  char v32 = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v30;
  sub_1DB118DE4(v31, v32);
  uint64_t v33 = a3[16];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = *(void *)(a2 + v33 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(void *)(v34 + 24) = *(void *)(v35 + 24);
  *(unsigned char *)(v34 + 32) = *(unsigned char *)(v35 + 32);
  *(void *)(v34 + 40) = *(void *)(v35 + 40);
  *(void *)(v34 + 48) = *(void *)(v35 + 48);
  *(void *)(v34 + 56) = *(void *)(v35 + 56);
  *(void *)(v34 + 64) = *(void *)(v35 + 64);
  *(unsigned char *)(v34 + 72) = *(unsigned char *)(v35 + 72);
  *(void *)(v34 + 80) = *(void *)(v35 + 80);
  *(void *)(v34 + 88) = *(void *)(v35 + 88);
  *(void *)(v34 + 96) = *(void *)(v35 + 96);
  *(void *)(v34 + 104) = *(void *)(v35 + 104);
  *(unsigned char *)(v34 + 112) = *(unsigned char *)(v35 + 112);
  uint64_t v36 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  uint64_t v37 = v34 + v36;
  uint64_t v38 = v35 + v36;
  uint64_t v39 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  *(void *)(v34 + *(int *)(v40 + 28)) = *(void *)(v35 + *(int *)(v40 + 28));
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DB197934(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v8 = a3[11];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[12];
  uint64_t v13 = a3[13];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = (void *)(a1 + v13);
  uint64_t v17 = (const void *)(a2 + v13);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1DB1EFDE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[14];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_1DB1EFE50();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F0);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v21, v22, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v27 = a3[15];
  uint64_t v28 = a3[16];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = a1 + v28;
  uint64_t v32 = a2 + v28;
  long long v33 = *(_OWORD *)(a2 + v28 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)(a2 + v28);
  *(_OWORD *)(v31 + 16) = v33;
  *(unsigned char *)(v31 + 32) = *(unsigned char *)(a2 + v28 + 32);
  *(_OWORD *)(v31 + 40) = *(_OWORD *)(a2 + v28 + 40);
  *(_OWORD *)(v31 + 56) = *(_OWORD *)(a2 + v28 + 56);
  *(unsigned char *)(v31 + 72) = *(unsigned char *)(a2 + v28 + 72);
  long long v34 = *(_OWORD *)(a2 + v28 + 80);
  long long v35 = *(_OWORD *)(a2 + v28 + 96);
  *(unsigned char *)(v31 + 112) = *(unsigned char *)(a2 + v28 + 112);
  *(_OWORD *)(v31 + 80) = v34;
  *(_OWORD *)(v31 + 96) = v35;
  uint64_t v36 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  uint64_t v37 = v31 + v36;
  uint64_t v38 = v32 + v36;
  uint64_t v39 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  *(void *)(v31 + *(int *)(v40 + 28)) = *(void *)(v32 + *(int *)(v40 + 28));
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_1DB197CA4(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v8 = a3[11];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[12];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  LOBYTE(v14) = *((unsigned char *)v14 + 8);
  uint64_t v16 = *(void *)v13;
  char v17 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = (_BYTE)v14;
  sub_1DB118DE4(v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = a3[13];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    sub_1DB0E8BD4(a1 + v18, &qword_1EA9055E0);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1DB1EFDE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    uint64_t v23 = a3[14];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (const void *)(a2 + v23);
    sub_1DB0E8BD4(a1 + v23, &qword_1EA9055E8);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_1DB1EFE50();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F0);
        memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v24, v25, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
  }
  uint64_t v30 = a3[15];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  LOBYTE(v32) = *((unsigned char *)v32 + 8);
  uint64_t v34 = *(void *)v31;
  char v35 = *(unsigned char *)(v31 + 8);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = (_BYTE)v32;
  sub_1DB118DE4(v34, v35);
  uint64_t v36 = a3[16];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a2 + v36 + 8);
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(void *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v37 + 16) = *(_OWORD *)(v38 + 16);
  *(unsigned char *)(v37 + 32) = *(unsigned char *)(v38 + 32);
  *(_OWORD *)(v37 + 40) = *(_OWORD *)(v38 + 40);
  *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
  *(unsigned char *)(v37 + 72) = *(unsigned char *)(v38 + 72);
  long long v40 = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 80) = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 96) = v40;
  *(unsigned char *)(v37 + 112) = *(unsigned char *)(v38 + 112);
  uint64_t v41 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  uint64_t v42 = v37 + v41;
  uint64_t v43 = v38 + v41;
  uint64_t v44 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  *(void *)(v37 + *(int *)(v45 + 28)) = *(void *)(v38 + *(int *)(v45 + 28));
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_release();
  return a1;
}

uint64_t sub_1DB1980AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1980C0);
}

uint64_t sub_1DB1980C0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1DB1F08D0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[11];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905600);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[13];
    goto LABEL_11;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905608);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[14];
    goto LABEL_11;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[16];
  return v16(v18, a2, v17);
}

uint64_t sub_1DB198290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1982A4);
}

uint64_t sub_1DB1982A4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1DB1F08D0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[11];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905600);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[13];
    goto LABEL_9;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905608);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[14];
    goto LABEL_9;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[16];
  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for TranslationOverlay(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905610);
}

void sub_1DB198494()
{
  sub_1DB1F08D0();
  if (v0 <= 0x3F)
  {
    sub_1DB1986E0(319, &qword_1EA905620, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
    if (v1 <= 0x3F)
    {
      sub_1DB198684();
      if (v2 <= 0x3F)
      {
        sub_1DB1986E0(319, &qword_1EA905630, type metadata accessor for TranslationOverlay.LockedMetrics, MEMORY[0x1E4F3ECC8]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1DB198684()
{
  if (!qword_1EA905628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9055F0);
    unint64_t v0 = sub_1DB1EFB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA905628);
    }
  }
}

void sub_1DB1986E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_1DB198744(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    long long v6 = *((_OWORD *)a2 + 6);
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v6;
    uint64_t v10 = sub_1DB1EF520();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1DB198864(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1DB1EF520();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DB1988DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  long long v5 = *(_OWORD *)(a2 + 96);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  uint64_t v9 = sub_1DB1EF520();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_1DB1989AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DB198AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_1DB198B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  char v8 = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = a2 + v9;
  uint64_t v11 = a1 + v9;
  *(unsigned char *)(a1 + 112) = v8;
  uint64_t v12 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v11, v10, v12);
  return a1;
}

uint64_t sub_1DB198C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB198C34);
}

uint64_t sub_1DB198C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DB1EF520();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DB198CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB198CF8);
}

uint64_t sub_1DB198CF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DB1EF520();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DB198DA0()
{
  uint64_t result = sub_1DB1EF520();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1DB198E5C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DB198E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F40F8670](a1, a2, a3, a4, MEMORY[0x1E4FBB3A8]);
}

uint64_t sub_1DB198E70()
{
  return sub_1DB198EB0((void (*)(void))sub_1DB19CAE8);
}

uint64_t sub_1DB198E90()
{
  return sub_1DB198EB0((void (*)(void))sub_1DB19CB3C);
}

uint64_t sub_1DB198EB0(void (*a1)(void))
{
  a1();
  sub_1DB1F0170();
  return v2;
}

uint64_t sub_1DB198EF8(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9057F0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9057F8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905800);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v13 = sub_1DB1F0C10();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905808);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v12, a1, v15);
    uint64_t v16 = (uint64_t *)&v12[*(int *)(v10 + 36)];
    *uint64_t v16 = KeyPath;
    v16[1] = v13;
    sub_1DB0E8B70((uint64_t)v12, (uint64_t)v9, &qword_1EA905800);
    swift_storeEnumTagMultiPayload();
    sub_1DB19D168();
    sub_1DB19D22C();
    sub_1DB1F0400();
    uint64_t v17 = (uint64_t)v12;
    uint64_t v18 = &qword_1EA905800;
  }
  else
  {
    uint64_t v19 = sub_1DB1F0C30();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905808);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v6, a1, v20);
    *(void *)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905810) + 36)] = v19;
    v22[0] = xmmword_1DB1F8700;
    v22[1] = xmmword_1DB1F8710;
    v22[2] = xmmword_1DB1F8720;
    int v23 = 1068792545;
    uint64_t v25 = 0;
    uint64_t v24 = 0;
    int v26 = 0;
    uint64_t v27 = 1065353216;
    sub_1DB1F09D0();
    sub_1DB0E8B70((uint64_t)v6, (uint64_t)v9, &qword_1EA9057F0);
    swift_storeEnumTagMultiPayload();
    sub_1DB19D168();
    sub_1DB19D22C();
    sub_1DB1F0400();
    uint64_t v17 = (uint64_t)v6;
    uint64_t v18 = &qword_1EA9057F0;
  }
  return sub_1DB0E8BD4(v17, v18);
}

uint64_t sub_1DB199218(uint64_t a1)
{
  return sub_1DB198EF8(a1, *v1);
}

double sub_1DB199220()
{
  double v1 = *(double *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  if (v1 <= 0.0) {
    return *(double *)(v0 + (~(8 * v2) & 8)) / 5.0;
  }
  double v3 = *(double *)(v0 + 8 * ((v2 & 1) == 0));
  double v4 = v1 / 5.0 + (v3 - v1) / 50.0;
  double v5 = *(double *)(v0 + 8 * (v2 & 1));
  if (v3 < v5) {
    return v1 / 5.0 + (v3 - v1) / 50.0;
  }
  double v7 = v1 * 0.5;
  double result = v1 / 5.0 + (v5 - v1) / 50.0;
  if (v7 > result) {
    double result = v7;
  }
  if (v4 < result) {
    return v4;
  }
  return result;
}

double sub_1DB1992C0()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 32);
  BOOL v2 = *(double *)(v0 + 8 * ((v1 & 1) == 0)) / *(double *)(v0 + 8 * (v1 & 1)) > 2.0;
  double v3 = *(double *)v0;
  double v4 = sub_1DB199220();
  double v5 = v4 + v4;
  double v6 = v5 + v5;
  if ((v1 | v2)) {
    double v6 = v5;
  }
  return v3 - v6;
}

uint64_t sub_1DB19934C()
{
  return 0;
}

uint64_t sub_1DB1994D8(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  int v5 = *(unsigned __int8 *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a2 + 32);
  if (sub_1DB1F0780()) {
    return v5 ^ v6 ^ 1u;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DB199544()
{
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  __swift_allocate_value_buffer(locked, qword_1EA90F278);
  uint64_t v1 = __swift_project_value_buffer(locked, (uint64_t)qword_1EA90F278);
  if (qword_1EA903568 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(locked, (uint64_t)qword_1EA90F290);
  return sub_1DB19C3C4(v2, v1, type metadata accessor for TranslationOverlay.LockedMetrics);
}

uint64_t sub_1DB1995E8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA903558 != -1) {
    swift_once();
  }
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  uint64_t v3 = __swift_project_value_buffer(locked, (uint64_t)qword_1EA90F278);
  return sub_1DB19C3C4(v3, a1, type metadata accessor for TranslationOverlay.LockedMetrics);
}

uint64_t sub_1DB199668(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_1DB19C42C(a1, type metadata accessor for TranslationOverlay.LockedMetrics);
  return a2(v3);
}

double sub_1DB1996BC()
{
  double v1 = *(double *)(v0 + 80);
  double v2 = *(double *)(v0 + 96);
  if (*(unsigned char *)(v0 + 112)) {
    double v3 = *(double *)(v0 + 80);
  }
  else {
    double v3 = *(double *)(v0 + 88);
  }
  if (v2 <= 0.0) {
    return v3 / 5.0;
  }
  double result = v2 / 5.0 + (v3 - v2) / 50.0;
  if (*(unsigned char *)(v0 + 112)) {
    double v1 = *(double *)(v0 + 88);
  }
  if (v3 >= v1)
  {
    double v5 = v2 * 0.5;
    double v6 = v2 / 5.0 + (v1 - v2) / 50.0;
    if (v5 > v6) {
      double v6 = v5;
    }
    if (result >= v6) {
      return v6;
    }
  }
  return result;
}

uint64_t sub_1DB199740()
{
  uint64_t v0 = sub_1DB1EF520();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  double v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  __swift_allocate_value_buffer(locked, qword_1EA90F290);
  uint64_t v5 = __swift_project_value_buffer(locked, (uint64_t)qword_1EA90F290);
  sub_1DB1F07B0();
  uint64_t v7 = v6;
  sub_1DB1F07B0();
  uint64_t v9 = v8;
  sub_1DB1F07B0();
  uint64_t v11 = v10;
  sub_1DB1EF4C0();
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0xE000000000000000;
  *(void *)(v5 + 16) = 0x4031000000000000;
  *(void *)(v5 + 24) = v7;
  *(unsigned char *)(v5 + 32) = 1;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = 0;
  *(void *)(v5 + 40) = 0;
  *(void *)(v5 + 64) = v9;
  *(unsigned char *)(v5 + 72) = 0;
  *(void *)(v5 + 88) = 0;
  *(void *)(v5 + 96) = 0;
  *(void *)(v5 + 80) = 0;
  *(void *)(v5 + 104) = v11;
  *(unsigned char *)(v5 + 112) = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + *(int *)(locked + 40), v3, v0);
}

uint64_t sub_1DB1998A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1998C0@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  uint64_t v121 = a1;
  uint64_t v124 = sub_1DB1F08D0();
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v122 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041C0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v131 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9056B8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = (void *)sub_1DB1EF520();
  uint64_t v120 = *(v128 - 1);
  MEMORY[0x1F4188790](v128);
  uint64_t v127 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  os_log_type_t v126 = (char *)&v118 - v16;
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1F4188790](locked);
  uint64_t v19 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v118 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (double *)((char *)&v118 - v24);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (uint64_t *)((char *)&v118 - v27);
  uint64_t v29 = v4[2];
  unint64_t v30 = v4[3];
  uint64_t v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v31 = v29 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v32 = v4[3];
  uint64_t v132 = v4[2];
  if (!v31)
  {
    uint64_t v132 = v4[4];
    uint64_t v32 = v4[5];
  }
  uint64_t v133 = v32;
  swift_bridgeObjectRetain();
  uint64_t v130 = type metadata accessor for TranslationOverlay(0);
  uint64_t v125 = v4;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  sub_1DB1F0D20();
  if (*v28 == v29 && v28[1] == v30)
  {
    sub_1DB19C42C((uint64_t)v28, type metadata accessor for TranslationOverlay.LockedMetrics);
    uint64_t v35 = locked;
  }
  else
  {
    char v34 = sub_1DB1F1DB0();
    sub_1DB19C42C((uint64_t)v28, type metadata accessor for TranslationOverlay.LockedMetrics);
    uint64_t v35 = locked;
    if ((v34 & 1) == 0) {
      goto LABEL_21;
    }
  }
  sub_1DB1F0D20();
  double v37 = v25[5];
  double v36 = v25[6];
  sub_1DB19C3C4((uint64_t)v25, (uint64_t)v22, type metadata accessor for TranslationOverlay.LockedMetrics);
  if (v37 == a2 && v36 == a3)
  {
    char v38 = sub_1DB1F0780();
    sub_1DB19C42C((uint64_t)v22, type metadata accessor for TranslationOverlay.LockedMetrics);
    sub_1DB19C42C((uint64_t)v25, type metadata accessor for TranslationOverlay.LockedMetrics);
    if (v38)
    {
      swift_bridgeObjectRelease();
      return sub_1DB1F0D20();
    }
  }
  else
  {
    sub_1DB19C42C((uint64_t)v22, type metadata accessor for TranslationOverlay.LockedMetrics);
    sub_1DB19C42C((uint64_t)v25, type metadata accessor for TranslationOverlay.LockedMetrics);
  }
  long long v40 = v126;
  sub_1DB1EF510();
  sub_1DB1F0D20();
  uint64_t v41 = v120;
  uint64_t v42 = v127;
  uint64_t v43 = v128;
  (*(void (**)(char *, char *, void *))(v120 + 16))(v127, &v19[*(int *)(v35 + 40)], v128);
  sub_1DB19C42C((uint64_t)v19, type metadata accessor for TranslationOverlay.LockedMetrics);
  sub_1DB1EF4D0();
  double v45 = v44;
  uint64_t v46 = *(void (**)(char *, void *))(v41 + 8);
  v46(v42, v43);
  v46(v40, v43);
  sub_1DB1EFA70();
  if (v45 < *(double *)&v134)
  {
    swift_bridgeObjectRelease();
    sub_1DB1F0D20();
    uint64_t v47 = *((void *)v19 + 5);
    double v49 = *((double *)v19 + 6);
    double v48 = *((double *)v19 + 7);
    sub_1DB19C42C((uint64_t)v19, type metadata accessor for TranslationOverlay.LockedMetrics);
    double v50 = 0.0;
    if ((v47 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      uint64_t v51 = v121;
      uint64_t v52 = v125;
      if ((*(void *)&v49 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        double v50 = a3 / v49;
      }
    }
    else
    {
      uint64_t v51 = v121;
      uint64_t v52 = v125;
    }
    double v116 = v48 * v50;
    char v117 = *((unsigned char *)v52 + 64);
    sub_1DB1F0D20();
    sub_1DB19C3C4((uint64_t)v19, v51, type metadata accessor for TranslationOverlay.LockedMetrics);
    *(double *)(v51 + 80) = a2;
    *(double *)(v51 + 88) = a3;
    *(double *)(v51 + 96) = v116;
    *(double *)(v51 + 104) = a4;
    *(unsigned char *)(v51 + 112) = v117;
    return sub_1DB19C42C((uint64_t)v19, type metadata accessor for TranslationOverlay.LockedMetrics);
  }
LABEL_21:
  uint64_t v53 = v125;
  uint64_t v54 = v125[6];
  char v55 = *((unsigned char *)v125 + 64);
  double v56 = 0.0;
  if (v55) {
    double v57 = a2;
  }
  else {
    double v57 = a3;
  }
  double v58 = v57 / (double)v54;
  *(double *)&long long v134 = a2;
  *((double *)&v134 + 1) = a3;
  if (v54) {
    double v56 = v58;
  }
  *(double *)&long long v135 = v56;
  *((double *)&v135 + 1) = a4;
  char v136 = v55;
  double v59 = sub_1DB1992C0();
  double v61 = v60;
  uint64_t v130 = (uint64_t)v53 + *(int *)(v130 + 44);
  sub_1DB19A674();
  os_log_type_t v126 = v62;
  uint64_t v129 = sub_1DB1F0770();
  uint64_t v63 = *(void *)(v129 - 8);
  uint64_t v128 = *(void **)(v63 + 56);
  uint64_t v127 = (char *)(v63 + 56);
  double v119 = a4;
  uint64_t v118 = v35;
  double v64 = 4.0;
  double v65 = 256.0;
  if (v55)
  {
    uint64_t v66 = (uint64_t)v131;
    while (1)
    {
      double v67 = floor(v64 + (v65 - v64) * 0.5);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v128)(v13, 1, 1, v129);
      sub_1DB1F07D0();
      sub_1DB0E8BD4((uint64_t)v13, &qword_1EA9056B8);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v68 = sub_1DB1F0910();
      uint64_t v70 = v69;
      char v72 = v71;
      swift_bridgeObjectRelease();
      swift_release();
      char v73 = v72 & 1;
      uint64_t v74 = sub_1DB1F08A0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v66, 1, 1, v74);
      sub_1DB1F08B0();
      double v76 = v75;
      sub_1DB0EB23C(v68, v70, v73);
      swift_bridgeObjectRelease();
      sub_1DB0E8BD4(v66, &qword_1EA9041C0);
      swift_release();
      double v77 = v59 - v76;
      double v78 = vabdd_f64(v65, v67);
      if (vabdd_f64(v67, v64) < 1.0 || v78 < 1.0) {
        break;
      }
      if (v77 < 0.0)
      {
        double v65 = v67 + -1.0;
      }
      else
      {
        if (v77 <= 0.0) {
          goto LABEL_49;
        }
        double v64 = v67 + 1.0;
      }
      if (v64 > v65) {
        goto LABEL_49;
      }
    }
  }
  else
  {
    uint64_t v80 = (uint64_t)v131;
    while (1)
    {
      double v67 = floor(v64 + (v65 - v64) * 0.5);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v128)(v13, 1, 1, v129);
      sub_1DB1F07D0();
      sub_1DB0E8BD4((uint64_t)v13, &qword_1EA9056B8);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v81 = sub_1DB1F0910();
      uint64_t v83 = v82;
      char v85 = v84;
      swift_bridgeObjectRelease();
      swift_release();
      char v86 = v85 & 1;
      uint64_t v74 = sub_1DB1F08A0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v80, 1, 1, v74);
      sub_1DB1F08B0();
      double v88 = v87;
      sub_1DB0EB23C(v81, v83, v86);
      swift_bridgeObjectRelease();
      sub_1DB0E8BD4(v80, &qword_1EA9041C0);
      swift_release();
      double v77 = v61 - v88;
      double v89 = vabdd_f64(v65, v67);
      if (vabdd_f64(v67, v64) < 1.0 || v89 < 1.0) {
        break;
      }
      if (v77 < 0.0)
      {
        double v65 = v67 + -1.0;
        if (v64 > v67 + -1.0) {
          goto LABEL_49;
        }
      }
      else
      {
        if (v77 <= 0.0) {
          goto LABEL_49;
        }
        double v64 = v67 + 1.0;
        if (v67 + 1.0 > v65) {
          goto LABEL_49;
        }
      }
    }
  }
  if (v77 < 0.0) {
    double v67 = v67 + -1.0;
  }
LABEL_49:
  sub_1DB19A674();
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v128)(v13, 1, 1, v129);
  sub_1DB1F07D0();
  sub_1DB0E8BD4((uint64_t)v13, &qword_1EA9056B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v122, v130, v124);
  swift_bridgeObjectRetain();
  uint64_t v91 = sub_1DB1F0910();
  uint64_t v93 = v92;
  char v95 = v94;
  swift_bridgeObjectRelease();
  char v96 = v95 & 1;
  sub_1DB1F08A0();
  unint64_t v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
  uint64_t v98 = (uint64_t)v131;
  v97(v131, 1, 1, v74);
  uint64_t v99 = v122;
  sub_1DB1F08B0();
  double v101 = v100;
  sub_1DB0EB23C(v91, v93, v96);
  swift_bridgeObjectRelease();
  sub_1DB0E8BD4(v98, &qword_1EA9041C0);
  uint64_t v102 = sub_1DB1F0910();
  uint64_t v104 = v103;
  char v106 = v105 & 1;
  v97((char *)v98, 1, 1, v74);
  sub_1DB1F08B0();
  double v108 = v107;
  sub_1DB0EB23C(v102, v104, v106);
  swift_bridgeObjectRelease();
  sub_1DB0E8BD4(v98, &qword_1EA9041C0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v99, v124);
  uint64_t v110 = v125[2];
  uint64_t v109 = v125[3];
  uint64_t v111 = v121;
  swift_bridgeObjectRetain();
  sub_1DB1EF510();
  uint64_t result = swift_release();
  *(void *)uint64_t v111 = v110;
  *(void *)(v111 + 8) = v109;
  double v112 = v119;
  *(double *)(v111 + 16) = v67;
  *(double *)(v111 + 24) = v112;
  *(unsigned char *)(v111 + 32) = v101 <= v108;
  long long v113 = v134;
  long long v114 = v135;
  *(_OWORD *)(v111 + 40) = v134;
  *(_OWORD *)(v111 + 56) = v114;
  char v115 = v136;
  *(unsigned char *)(v111 + 72) = v136;
  *(_OWORD *)(v111 + 80) = v113;
  *(_OWORD *)(v111 + 96) = v114;
  *(unsigned char *)(v111 + 112) = v115;
  return result;
}

uint64_t sub_1DB19A674()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DB1EFE50();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  char v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905758);
  MEMORY[0x1F4188790](v41);
  uint64_t v42 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v40 = (char *)&v37 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = type metadata accessor for TranslationOverlay(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DB1EFDE0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v37 - v20;
  sub_1DB1C5DA4((uint64_t)&v37 - v20);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4F3CB28], v15);
  sub_1DB19C958(&qword_1EA905760, MEMORY[0x1E4F3CB98]);
  char v22 = sub_1DB1F1220();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v18, v15);
  uint64_t v24 = v21;
  uint64_t v25 = (uint64_t)v14;
  v23(v24, v15);
  sub_1DB19C3C4(v1, (uint64_t)v14, type metadata accessor for TranslationOverlay);
  if ((v22 & 1) == 0)
  {
    sub_1DB19C42C((uint64_t)v14, type metadata accessor for TranslationOverlay);
    return sub_1DB1F0790();
  }
  sub_1DB1C5DE4((uint64_t)v11);
  uint64_t v27 = v43;
  uint64_t v26 = v44;
  uint64_t v28 = (uint64_t)v40;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v40, *MEMORY[0x1E4F3CD00], v44);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
  uint64_t v29 = v42;
  uint64_t v30 = v42 + *(int *)(v41 + 48);
  sub_1DB0E8B70((uint64_t)v11, v42, &qword_1EA9055F0);
  sub_1DB0E8B70(v28, v30, &qword_1EA9055F0);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v31(v29, 1, v26) == 1)
  {
    sub_1DB0E8BD4(v28, &qword_1EA9055F0);
    sub_1DB0E8BD4((uint64_t)v11, &qword_1EA9055F0);
    sub_1DB19C42C(v25, type metadata accessor for TranslationOverlay);
    if (v31(v30, 1, v26) == 1)
    {
      sub_1DB0E8BD4(v29, &qword_1EA9055F0);
      return sub_1DB1F0790();
    }
    goto LABEL_9;
  }
  uint64_t v41 = v25;
  uint64_t v33 = v39;
  sub_1DB0E8B70(v29, v39, &qword_1EA9055F0);
  if (v31(v30, 1, v26) == 1)
  {
    sub_1DB0E8BD4(v28, &qword_1EA9055F0);
    sub_1DB0E8BD4((uint64_t)v11, &qword_1EA9055F0);
    sub_1DB19C42C(v41, type metadata accessor for TranslationOverlay);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v33, v26);
LABEL_9:
    sub_1DB0E8BD4(v29, &qword_1EA905758);
    return sub_1DB1F07B0();
  }
  char v34 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v38, v30, v26);
  sub_1DB19C958(&qword_1EA905768, MEMORY[0x1E4F3CD10]);
  char v35 = sub_1DB1F1230();
  double v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  v36(v34, v26);
  sub_1DB0E8BD4(v28, &qword_1EA9055F0);
  sub_1DB0E8BD4((uint64_t)v11, &qword_1EA9055F0);
  sub_1DB19C42C(v41, type metadata accessor for TranslationOverlay);
  v36((char *)v33, v26);
  sub_1DB0E8BD4(v29, &qword_1EA9055F0);
  if (v35) {
    return sub_1DB1F0790();
  }
  return sub_1DB1F07B0();
}

uint64_t sub_1DB19ACB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v3 = type metadata accessor for TranslationOverlay(0);
  uint64_t v4 = v3 - 8;
  uint64_t v48 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v49 = v5;
  double v50 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1F4188790](locked - 8);
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905648);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905650);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905658);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905660) - 8;
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = &v43[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DB19B180(v2, (uint64_t)v11);
  sub_1DB0E8B70((uint64_t)v11, (uint64_t)v15, &qword_1EA905648);
  *(_WORD *)&v15[*(int *)(v13 + 44)] = 0;
  sub_1DB0E8BD4((uint64_t)v11, &qword_1EA905648);
  uint64_t v21 = v2 + *(int *)(v4 + 68);
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_1DB118D3C(*(void *)v21, v23);
  int v44 = sub_1DB1C5664(v22, v23);
  sub_1DB118DE4(v22, v23);
  uint64_t v24 = *(int *)(v4 + 72);
  uint64_t v51 = v2;
  uint64_t v45 = v2 + v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  sub_1DB1F0D20();
  double v25 = sub_1DB1996BC();
  sub_1DB19C42C((uint64_t)v8, type metadata accessor for TranslationOverlay.LockedMetrics);
  uint64_t v26 = sub_1DB1F0F60();
  uint64_t v28 = v27;
  sub_1DB0E8B70((uint64_t)v15, (uint64_t)v19, &qword_1EA905650);
  uint64_t v29 = (double *)&v19[*(int *)(v17 + 44)];
  *(unsigned char *)uint64_t v29 = v44 & 1;
  v29[1] = v25;
  *((void *)v29 + 2) = v26;
  *((void *)v29 + 3) = v28;
  sub_1DB0E8BD4((uint64_t)v15, &qword_1EA905650);
  uint64_t v30 = *(void *)v21;
  LOBYTE(v26) = *(unsigned char *)(v21 + 8);
  sub_1DB118D3C(*(void *)v21, v26);
  LOBYTE(v28) = sub_1DB1C5664(v30, v26);
  sub_1DB118DE4(v30, v26);
  uint64_t v31 = (uint64_t)v46;
  sub_1DB1F0D20();
  double v32 = sub_1DB1996BC();
  sub_1DB19C42C((uint64_t)v8, type metadata accessor for TranslationOverlay.LockedMetrics);
  uint64_t v33 = sub_1DB1F0F60();
  uint64_t v35 = v34;
  sub_1DB0E8B70((uint64_t)v19, v31, &qword_1EA905658);
  uint64_t v36 = v31 + *(int *)(v47 + 44);
  *(unsigned char *)uint64_t v36 = v28 & 1;
  *(double *)(v36 + 8) = v32;
  *(void *)(v36 + 16) = v33;
  *(void *)(v36 + 24) = v35;
  sub_1DB0E8BD4((uint64_t)v19, &qword_1EA905658);
  if (qword_1EA903560 != -1) {
    swift_once();
  }
  uint64_t v37 = v50;
  sub_1DB19C3C4(v51, (uint64_t)v50, type metadata accessor for TranslationOverlay);
  unint64_t v38 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v39 = swift_allocObject();
  sub_1DB19C2F0((uint64_t)v37, v39 + v38);
  uint64_t v40 = v52;
  sub_1DB0E8B70(v31, v52, &qword_1EA905660);
  uint64_t v41 = (uint64_t (**)(uint64_t))(v40
                                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905668) + 36));
  *uint64_t v41 = sub_1DB19C354;
  v41[1] = (uint64_t (*)(uint64_t))v39;
  return sub_1DB0E8BD4(v31, &qword_1EA905660);
}

uint64_t sub_1DB19B180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = sub_1DB1EFEB0();
  uint64_t v119 = *(void *)(v3 - 8);
  uint64_t v120 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v118 = &v92[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v101 = sub_1DB1F08A0();
  uint64_t v98 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  char v96 = &v92[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905670);
  uint64_t v104 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v103 = &v92[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905678);
  MEMORY[0x1F4188790](v99);
  uint64_t v8 = &v92[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905680);
  MEMORY[0x1F4188790](v100);
  double v107 = &v92[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905688);
  MEMORY[0x1F4188790](v102);
  uint64_t v109 = &v92[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905690);
  MEMORY[0x1F4188790](v105);
  uint64_t v110 = &v92[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905698);
  MEMORY[0x1F4188790](v108);
  uint64_t v111 = &v92[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9056A0);
  MEMORY[0x1F4188790](v112);
  uint64_t v14 = &v92[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9056A8);
  uint64_t v116 = *(void *)(v15 - 8);
  uint64_t v117 = v15;
  MEMORY[0x1F4188790](v15);
  char v115 = &v92[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9056B0);
  MEMORY[0x1F4188790](v113);
  long long v114 = &v92[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for TranslationOverlay(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v92[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9056B8);
  MEMORY[0x1F4188790](v21 - 8);
  char v23 = &v92[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1F4188790](locked - 8);
  uint64_t v26 = &v92[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v27 = *(double *)a1;
  double v28 = *(double *)(a1 + 8);
  sub_1DB19A674();
  sub_1DB1998C0((uint64_t)v26, v27, v28, v29);
  sub_1DB19A674();
  uint64_t v30 = sub_1DB1F0770();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v23, 1, 1, v30);
  uint64_t v122 = sub_1DB1F07D0();
  sub_1DB0E8BD4((uint64_t)v23, &qword_1EA9056B8);
  unint64_t v97 = (double *)(v26 + 40);
  sub_1DB1992C0();
  if (v26[32])
  {
    sub_1DB19C3C4(a1, (uint64_t)v20, type metadata accessor for TranslationOverlay);
    sub_1DB19C42C((uint64_t)v20, type metadata accessor for TranslationOverlay);
    unsigned int v93 = 1;
    uint64_t v31 = sub_1DB1F0F60();
  }
  else
  {
    if (*(unsigned char *)(a1 + 64)) {
      unsigned int v93 = 0;
    }
    else {
      unsigned int v93 = 0x20001u >> (8 * *(unsigned char *)(a1 + 65));
    }
    sub_1DB19C3C4(a1, (uint64_t)v20, type metadata accessor for TranslationOverlay);
    int v33 = v20[64];
    sub_1DB19C42C((uint64_t)v20, type metadata accessor for TranslationOverlay);
    if (v33 == 1 || !*(unsigned char *)(a1 + 65))
    {
      uint64_t v31 = sub_1DB1F0F60();
    }
    else if (*(unsigned char *)(a1 + 65) == 1)
    {
      uint64_t v31 = sub_1DB1F0F70();
    }
    else
    {
      uint64_t v31 = sub_1DB1F0F80();
    }
  }
  uint64_t v95 = v31;
  uint64_t v94 = v32;
  uint64_t v35 = *(void *)v26;
  unint64_t v34 = *((void *)v26 + 1);
  uint64_t v36 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0) {
    uint64_t v36 = *(void *)v26 & 0xFFFFFFFFFFFFLL;
  }
  if (!v36)
  {
    uint64_t v35 = *(void *)(a1 + 32);
    unint64_t v34 = *(void *)(a1 + 40);
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = a1 + *(int *)(v18 + 48);
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);
  sub_1DB118D3C(*(void *)v37, v39);
  char v40 = sub_1DB1C5664(v38, v39);
  sub_1DB118DE4(v38, v39);
  LOBYTE(v38) = *(unsigned char *)(a1 + 64);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v124 = v35;
  *((void *)&v124 + 1) = v34;
  LOBYTE(v125) = 0;
  *((void *)&v125 + 1) = MEMORY[0x1E4FBC860];
  LOBYTE(v126) = v40 & 1;
  BYTE1(v126) = v38;
  BYTE2(v126) = v38 ^ 1;
  *((void *)&v126 + 1) = KeyPath;
  uint64_t v127 = v122;
  int v42 = *(unsigned __int8 *)(a1 + 64);
  swift_retain();
  uint64_t v43 = v96;
  if (v42 == 1) {
    sub_1DB1F0880();
  }
  else {
    sub_1DB1F0890();
  }
  uint64_t v44 = (uint64_t)v14;
  uint64_t v45 = v112;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9056C0);
  sub_1DB19C494();
  uint64_t v46 = v103;
  sub_1DB1F09C0();
  (*(void (**)(unsigned char *, uint64_t))(v98 + 8))(v43, v101);
  sub_1DB0EB23C(v124, *((uint64_t *)&v124 + 1), v125);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v47 = swift_getKeyPath();
  uint64_t v48 = v104;
  uint64_t v49 = v106;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v104 + 16))(v8, v46, v106);
  double v50 = &v8[*(int *)(v99 + 36)];
  *(void *)double v50 = v47;
  v50[8] = v93;
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v46, v49);
  double v51 = 1.0 / *(double *)(a1 + 56);
  uint64_t v52 = v107;
  sub_1DB0E8B70((uint64_t)v8, (uint64_t)v107, &qword_1EA905678);
  *(double *)&v52[*(int *)(v100 + 36)] = v51;
  sub_1DB0E8BD4((uint64_t)v8, &qword_1EA905678);
  if (qword_1EA903560 != -1) {
    swift_once();
  }
  uint64_t v53 = (uint64_t)v109;
  sub_1DB19C3C4((uint64_t)v26, (uint64_t)&v109[*(int *)(v102 + 36)], type metadata accessor for TranslationOverlay.LockedMetrics);
  sub_1DB0F1454((uint64_t)v52, v53, &qword_1EA905680);
  char v54 = sub_1DB1F0720();
  sub_1DB1EFAC0();
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v63 = v110;
  sub_1DB0E8B70(v53, (uint64_t)v110, &qword_1EA905688);
  double v64 = &v63[*(int *)(v105 + 36)];
  *double v64 = v54;
  *((void *)v64 + 1) = v56;
  *((void *)v64 + 2) = v58;
  *((void *)v64 + 3) = v60;
  *((void *)v64 + 4) = v62;
  v64[40] = 0;
  sub_1DB0E8BD4(v53, &qword_1EA905688);
  LOBYTE(v53) = sub_1DB1F06D0();
  sub_1DB1EFAC0();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  char v73 = v111;
  sub_1DB0E8B70((uint64_t)v63, (uint64_t)v111, &qword_1EA905690);
  uint64_t v74 = &v73[*(int *)(v108 + 36)];
  *uint64_t v74 = v53;
  *((void *)v74 + 1) = v66;
  *((void *)v74 + 2) = v68;
  *((void *)v74 + 3) = v70;
  *((void *)v74 + 4) = v72;
  v74[40] = 0;
  sub_1DB0E8BD4((uint64_t)v63, &qword_1EA905690);
  sub_1DB1EFC00();
  sub_1DB0E8B70((uint64_t)v73, v44, &qword_1EA905698);
  double v75 = (_OWORD *)(v44 + *(int *)(v45 + 36));
  long long v76 = v125;
  *double v75 = v124;
  v75[1] = v76;
  v75[2] = v126;
  sub_1DB0E8BD4((uint64_t)v73, &qword_1EA905698);
  unint64_t v77 = *((void *)v26 + 1);
  uint64_t v78 = *(void *)v26 & 0xFFFFFFFFFFFFLL;
  if ((v77 & 0x2000000000000000) != 0) {
    uint64_t v78 = HIBYTE(v77) & 0xF;
  }
  uint64_t v79 = v118;
  if (v78)
  {
    uint64_t v123 = MEMORY[0x1E4FBC860];
    sub_1DB19C958(&qword_1EA9056F8, MEMORY[0x1E4F3CD58]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905700);
    sub_1DB0E3C44(&qword_1EA905708, &qword_1EA905700);
    uint64_t v80 = v120;
    sub_1DB1F19B0();
  }
  else
  {
    sub_1DB1EFEA0();
    uint64_t v80 = v120;
  }
  uint64_t v81 = v115;
  sub_1DB19C698(&qword_1EA905710, &qword_1EA9056A0, (void (*)(void))sub_1DB19C638);
  sub_1DB1F0B50();
  (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v79, v80);
  sub_1DB0E8BD4(v44, &qword_1EA9056A0);
  if ((*(void *)v97 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    if ((*((void *)v26 + 6) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      double v82 = *((double *)v26 + 10) / *v97;
    }
    else {
      double v82 = 0.0;
    }
  }
  else
  {
    double v82 = 0.0;
  }
  sub_1DB1F1020();
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  swift_release();
  uint64_t v88 = v116;
  uint64_t v87 = v117;
  uint64_t v89 = (uint64_t)v114;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v116 + 16))(v114, v81, v117);
  uint64_t v90 = v89 + *(int *)(v113 + 36);
  *(double *)uint64_t v90 = v82;
  *(double *)(v90 + 8) = v82;
  *(void *)(v90 + 16) = v84;
  *(void *)(v90 + 24) = v86;
  (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v81, v87);
  sub_1DB19C42C((uint64_t)v26, type metadata accessor for TranslationOverlay.LockedMetrics);
  return sub_1DB0F1454(v89, v121, &qword_1EA9056B0);
}

uint64_t sub_1DB19BEFC(uint64_t a1)
{
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1F4188790](locked - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1DB19C3C4(a1, (uint64_t)&v9 - v6, type metadata accessor for TranslationOverlay.LockedMetrics);
  type metadata accessor for TranslationOverlay(0);
  sub_1DB19C3C4((uint64_t)v7, (uint64_t)v4, type metadata accessor for TranslationOverlay.LockedMetrics);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  sub_1DB1F0D30();
  return sub_1DB19C42C((uint64_t)v7, type metadata accessor for TranslationOverlay.LockedMetrics);
}

uint64_t sub_1DB19C014()
{
  uint64_t v1 = (int *)type metadata accessor for TranslationOverlay(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v1[11];
  uint64_t v5 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1DB118DE4(*(void *)(v3 + v1[12]), *(unsigned char *)(v3 + v1[12] + 8));
  uint64_t v6 = v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1DB1EFDE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v1[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1DB1EFE50();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  sub_1DB118DE4(*(void *)(v3 + v1[15]), *(unsigned char *)(v3 + v1[15] + 8));
  uint64_t v11 = v3 + v1[16];
  swift_bridgeObjectRelease();
  uint64_t v12 = v11 + *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  uint64_t v13 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F8);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB19C2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslationOverlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB19C354(uint64_t a1)
{
  type metadata accessor for TranslationOverlay(0);
  return sub_1DB19BEFC(a1);
}

uint64_t sub_1DB19C3C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB19C42C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DB19C494()
{
  unint64_t result = qword_1EA9056C8;
  if (!qword_1EA9056C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9056C0);
    sub_1DB19C698(&qword_1EA9056D0, &qword_1EA9056D8, (void (*)(void))sub_1DB19C560);
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9056C8);
  }
  return result;
}

unint64_t sub_1DB19C560()
{
  unint64_t result = qword_1EA9056E0;
  if (!qword_1EA9056E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9056E8);
    sub_1DB19C5DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9056E0);
  }
  return result;
}

unint64_t sub_1DB19C5DC()
{
  unint64_t result = qword_1EA9056F0;
  if (!qword_1EA9056F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9056F0);
  }
  return result;
}

uint64_t sub_1DB19C638()
{
  return sub_1DB19C698(&qword_1EA905718, &qword_1EA905698, (void (*)(void))sub_1DB19C668);
}

uint64_t sub_1DB19C668()
{
  return sub_1DB19C698(&qword_1EA905720, &qword_1EA905690, (void (*)(void))sub_1DB19C714);
}

uint64_t sub_1DB19C698(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB19C714()
{
  unint64_t result = qword_1EA905728;
  if (!qword_1EA905728)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905688);
    sub_1DB19C7B4();
    sub_1DB0E3C44(&qword_1EA905748, &qword_1EA905750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905728);
  }
  return result;
}

unint64_t sub_1DB19C7B4()
{
  unint64_t result = qword_1EA905730;
  if (!qword_1EA905730)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905680);
    sub_1DB19C830();
    sub_1DB19C904();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905730);
  }
  return result;
}

unint64_t sub_1DB19C830()
{
  unint64_t result = qword_1EA905738;
  if (!qword_1EA905738)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905678);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9056C0);
    sub_1DB19C494();
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44((unint64_t *)&qword_1EA9046A0, &qword_1EA9046A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905738);
  }
  return result;
}

unint64_t sub_1DB19C904()
{
  unint64_t result = qword_1EA905740;
  if (!qword_1EA905740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905740);
  }
  return result;
}

uint64_t sub_1DB19C958(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB19C9A0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (sub_1DB1F1DB0() & 1) == 0) {
    return 0;
  }
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16)
    || (sub_1DB1F0780() & 1) == 0
    || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
  {
    return 0;
  }
  BOOL v5 = *(double *)(a1 + 40) == *(double *)(a2 + 40) && *(double *)(a1 + 48) == *(double *)(a2 + 48);
  if (!v5 || *(double *)(a1 + 56) != *(double *)(a2 + 56)) {
    return 0;
  }
  int v7 = *(unsigned __int8 *)(a2 + 72);
  int v8 = *(unsigned __int8 *)(a1 + 72);
  if ((sub_1DB1F0780() & 1) == 0) {
    return 0;
  }
  if ((v7 ^ v8)) {
    return 0;
  }
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80)) {
    return 0;
  }
  if (*(double *)(a1 + 88) != *(double *)(a2 + 88)) {
    return 0;
  }
  if (*(double *)(a1 + 96) != *(double *)(a2 + 96)) {
    return 0;
  }
  int v9 = *(unsigned __int8 *)(a2 + 112);
  int v10 = *(unsigned __int8 *)(a1 + 112);
  if (sub_1DB1F0780() & 1) == 0 || ((v9 ^ v10)) {
    return 0;
  }
  uint64_t v11 = *(int *)(type metadata accessor for TranslationOverlay.LockedMetrics(0) + 40);
  return MEMORY[0x1F40E52C0](a1 + v11, a2 + v11);
}

unint64_t sub_1DB19CAE8()
{
  unint64_t result = qword_1EA905770;
  if (!qword_1EA905770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905770);
  }
  return result;
}

unint64_t sub_1DB19CB3C()
{
  unint64_t result = qword_1EA905778;
  if (!qword_1EA905778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905778);
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundRendering()
{
  return &type metadata for BackgroundRendering;
}

ValueMetadata *type metadata accessor for ExtendedExperienceOptimizations()
{
  return &type metadata for ExtendedExperienceOptimizations;
}

ValueMetadata *type metadata accessor for TranslationOverlay.LockedMetrics.LockedMetricsPrefKey()
{
  return &type metadata for TranslationOverlay.LockedMetrics.LockedMetricsPrefKey;
}

unsigned char *storeEnumTagSinglePayload for AccessibleTextVibrancy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB19CC8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibleTextVibrancy()
{
  return &type metadata for AccessibleTextVibrancy;
}

uint64_t getEnumTagSinglePayload for TranslationOverlay.OverlayMetrics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationOverlay.OverlayMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationOverlay.OverlayMetrics()
{
  return &type metadata for TranslationOverlay.OverlayMetrics;
}

unint64_t sub_1DB19CD74()
{
  unint64_t result = qword_1EA905780;
  if (!qword_1EA905780)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905668);
    sub_1DB19CE14();
    sub_1DB0E3C44(&qword_1EA9057E0, &qword_1EA9057E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905780);
  }
  return result;
}

unint64_t sub_1DB19CE14()
{
  unint64_t result = qword_1EA905788;
  if (!qword_1EA905788)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905660);
    sub_1DB19CEB4();
    sub_1DB0E3C44(&qword_1EA9057D0, &qword_1EA9057D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905788);
  }
  return result;
}

unint64_t sub_1DB19CEB4()
{
  unint64_t result = qword_1EA905790;
  if (!qword_1EA905790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905658);
    sub_1DB19CF54();
    sub_1DB0E3C44(&qword_1EA9057C0, &qword_1EA9057C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905790);
  }
  return result;
}

unint64_t sub_1DB19CF54()
{
  unint64_t result = qword_1EA905798;
  if (!qword_1EA905798)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905650);
    sub_1DB19CFF4();
    sub_1DB0E3C44(&qword_1EA9057B0, &qword_1EA9057B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905798);
  }
  return result;
}

unint64_t sub_1DB19CFF4()
{
  unint64_t result = qword_1EA9057A0;
  if (!qword_1EA9057A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905648);
    sub_1DB19D068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9057A0);
  }
  return result;
}

unint64_t sub_1DB19D068()
{
  unint64_t result = qword_1EA9057A8;
  if (!qword_1EA9057A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9056B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9056A0);
    sub_1DB19C698(&qword_1EA905710, &qword_1EA9056A0, (void (*)(void))sub_1DB19C638);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9057A8);
  }
  return result;
}

uint64_t sub_1DB19D14C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1DB19D168()
{
  unint64_t result = qword_1EA905818;
  if (!qword_1EA905818)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905800);
    sub_1DB0E3C44(&qword_1EA905820, &qword_1EA905808);
    sub_1DB0E3C44(&qword_1EA904280, &qword_1EA904288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905818);
  }
  return result;
}

unint64_t sub_1DB19D22C()
{
  unint64_t result = qword_1EA905828;
  if (!qword_1EA905828)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9057F0);
    sub_1DB19D2CC();
    sub_1DB0E3C44(&qword_1EA905838, &qword_1EA905840);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905828);
  }
  return result;
}

unint64_t sub_1DB19D2CC()
{
  unint64_t result = qword_1EA905830;
  if (!qword_1EA905830)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905810);
    sub_1DB0E3C44(&qword_1EA905820, &qword_1EA905808);
    sub_1DB0E3C44(&qword_1EA903A38, &qword_1EA903A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905830);
  }
  return result;
}

unint64_t sub_1DB19D39C()
{
  unint64_t result = qword_1EA905848;
  if (!qword_1EA905848)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905850);
    sub_1DB19D168();
    sub_1DB19D22C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905848);
  }
  return result;
}

uint64_t sub_1DB19D418@<X0>(int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  int v46 = a1;
  uint64_t v50 = a2;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905860);
  uint64_t v4 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  int v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905868);
  MEMORY[0x1F4188790](v48);
  uint64_t v49 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1F0FC0();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DB1EFEC0();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (double *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905870);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905878);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905880);
  MEMORY[0x1F4188790](v41);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905888);
  MEMORY[0x1F4188790](v47);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v40 - v23;
  if (v46)
  {
    uint64_t v25 = (char *)v11 + *(int *)(v9 + 20);
    uint64_t v26 = *MEMORY[0x1E4F3D4A0];
    uint64_t v27 = sub_1DB1F02B0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
    *uint64_t v11 = a3;
    v11[1] = a3;
    uint64_t v28 = sub_1DB1F0C30();
    sub_1DB0FDD68((uint64_t)v11, (uint64_t)v14);
    *(void *)&v14[*(int *)(v12 + 52)] = v28;
    *(_WORD *)&v14[*(int *)(v12 + 56)] = 256;
    sub_1DB0FDDCC((uint64_t)v11);
    sub_1DB1F0C10();
    uint64_t v29 = sub_1DB1F0C40();
    swift_release();
    sub_1DB0E8B70((uint64_t)v14, (uint64_t)v17, &qword_1EA905870);
    uint64_t v30 = &v17[*(int *)(v15 + 36)];
    *(void *)uint64_t v30 = v29;
    *(_OWORD *)(v30 + 8) = xmmword_1DB1F8AE0;
    *((void *)v30 + 3) = 0x4014000000000000;
    sub_1DB0E8BD4((uint64_t)v14, &qword_1EA905870);
    sub_1DB1F0C10();
    uint64_t v31 = sub_1DB1F0C40();
    swift_release();
    sub_1DB0E8B70((uint64_t)v17, (uint64_t)v19, &qword_1EA905878);
    uint64_t v32 = &v19[*(int *)(v41 + 36)];
    *(void *)uint64_t v32 = v31;
    *(_OWORD *)(v32 + 8) = xmmword_1DB1F8AF0;
    *((void *)v32 + 3) = 0x3FF0000000000000;
    sub_1DB0E8BD4((uint64_t)v17, &qword_1EA905878);
    unint64_t v34 = v43;
    uint64_t v33 = v44;
    uint64_t v35 = v45;
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x1E4F3F018], v45);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(&v21[*(int *)(v47 + 36)], v34, v35);
    sub_1DB0E8B70((uint64_t)v19, (uint64_t)v21, &qword_1EA905880);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
    sub_1DB0E8BD4((uint64_t)v19, &qword_1EA905880);
    sub_1DB19E240((uint64_t)v21, (uint64_t)v24);
    sub_1DB0E8B70((uint64_t)v24, v49, &qword_1EA905888);
    swift_storeEnumTagMultiPayload();
    sub_1DB19E124(&qword_1EA905890, &qword_1EA905888, (void (*)(void))sub_1DB19E0F4);
    sub_1DB0E3C44(&qword_1EA9058B0, &qword_1EA905860);
    sub_1DB1F0400();
    return sub_1DB0E8BD4((uint64_t)v24, &qword_1EA905888);
  }
  else
  {
    type metadata accessor for TranslationOverlayShadowLayer();
    uint64_t v37 = swift_allocObject();
    *(unsigned char *)(v37 + 16) = 0;
    *(double *)(v37 + 24) = a3;
    uint64_t v38 = v42;
    sub_1DB1EFBF0();
    uint64_t v39 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v49, v38, v51);
    swift_storeEnumTagMultiPayload();
    sub_1DB19E124(&qword_1EA905890, &qword_1EA905888, (void (*)(void))sub_1DB19E0F4);
    sub_1DB0E3C44(&qword_1EA9058B0, &qword_1EA905860);
    sub_1DB1F0400();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v38, v39);
  }
}

void sub_1DB19DB28(double a1)
{
  uint64_t v2 = v1;
  if (a1 > 0.0)
  {
    objc_msgSend(v1, sel_setCornerRadius_);
    uint64_t v4 = *MEMORY[0x1E4F39EA8];
    objc_msgSend(v2, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);
    uint64_t v5 = OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer], sel_setCornerRadius_, a1);
    objc_msgSend(*(id *)&v2[v5], sel_setCornerCurve_, v4);
  }
  objc_msgSend(v2, sel_setShadowPathIsBounds_, 1);
  CGColorRef GenericGray = CGColorCreateGenericGray(0.0, 0.1);
  objc_msgSend(v2, sel_setShadowColor_, GenericGray);

  objc_msgSend(v2, sel_setShadowOffset_, 0.0, 5.0);
  objc_msgSend(v2, sel_setShadowRadius_, 10.0);
  LODWORD(v7) = 1.0;
  objc_msgSend(v2, sel_setShadowOpacity_, v7);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUIP33_F1DE10BA1EA2E7A7FF1CDCD88519CF9529TranslationOverlayShadowLayer_sublayer], sel_setShadowPathIsBounds_, 1);
  id v9 = *(id *)&v2[v8];
  CGColorRef v10 = CGColorCreateGenericGray(0.0, 0.1);
  objc_msgSend(v9, sel_setShadowColor_, v10);

  objc_msgSend(*(id *)&v2[v8], sel_setShadowOffset_, 0.0, 1.0);
  objc_msgSend(*(id *)&v2[v8], sel_setShadowRadius_, 2.0);
  LODWORD(v11) = 1.0;
  objc_msgSend(*(id *)&v2[v8], sel_setShadowOpacity_, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DB1F7640;
  uint64_t v13 = *(void **)&v2[v8];
  *(void *)(v12 + 32) = v13;
  sub_1DB1F14C0();
  sub_1DB19E2A8();
  id v14 = v13;
  id v15 = (id)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSublayers_, v15);
}

uint64_t sub_1DB19DD68@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB19D418(*(unsigned __int8 *)v1, a1, v1[1]);
}

uint64_t type metadata accessor for TranslationOverlayShadowLayer()
{
  return self;
}

ValueMetadata *type metadata accessor for TranslationOverlayShadow()
{
  return &type metadata for TranslationOverlayShadow;
}

uint64_t sub_1DB19E0A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB19E0BC()
{
  return swift_deallocObject();
}

void sub_1DB19E0CC()
{
  sub_1DB19DB28(*(double *)(v0 + 24));
}

uint64_t sub_1DB19E0F4()
{
  return sub_1DB19E124(&qword_1EA905898, &qword_1EA905880, (void (*)(void))sub_1DB19E1A0);
}

uint64_t sub_1DB19E124(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB19E1A0()
{
  unint64_t result = qword_1EA9058A0;
  if (!qword_1EA9058A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905878);
    sub_1DB0E3C44(&qword_1EA9058A8, &qword_1EA905870);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9058A0);
  }
  return result;
}

uint64_t sub_1DB19E240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DB19E2A8()
{
  unint64_t result = qword_1EA905538;
  if (!qword_1EA905538)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA905538);
  }
  return result;
}

unint64_t sub_1DB19E2EC()
{
  unint64_t result = qword_1EA9058B8;
  if (!qword_1EA9058B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9058C0);
    sub_1DB19E124(&qword_1EA905890, &qword_1EA905888, (void (*)(void))sub_1DB19E0F4);
    sub_1DB0E3C44(&qword_1EA9058B0, &qword_1EA905860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9058B8);
  }
  return result;
}

uint64_t TranslationUIErrorCodes.description.getter()
{
  strcpy((char *)v1, "error code: ");
  sub_1DB1F1D80();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t TranslationUIErrorCodes.rawValue.getter()
{
  return *v0 + 1;
}

TranslationUI::TranslationUIErrorCodes_optional __swiftcall TranslationUIErrorCodes.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = rawValue - 1;
  if ((unint64_t)(rawValue - 1) >= 0xC) {
    char v2 = 12;
  }
  *uint64_t v1 = v2;
  return (TranslationUI::TranslationUIErrorCodes_optional)rawValue;
}

void *static TranslationUIErrorCodes.allCases.getter()
{
  return &unk_1F3543A20;
}

uint64_t sub_1DB19E468()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB19E4B0()
{
  return sub_1DB1F1E90();
}

uint64_t sub_1DB19E4E0()
{
  return sub_1DB1F1EC0();
}

TranslationUI::TranslationUIErrorCodes_optional sub_1DB19E524(Swift::Int *a1)
{
  return TranslationUIErrorCodes.init(rawValue:)(*a1);
}

void sub_1DB19E52C(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

void sub_1DB19E53C(void *a1@<X8>)
{
  *a1 = &unk_1F3543A20;
}

uint64_t sub_1DB19E54C()
{
  strcpy((char *)v1, "error code: ");
  sub_1DB1F1D80();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  return v1[0];
}

unint64_t TranslationUIErrorInfoKey.string.getter()
{
  return 0xD000000000000018;
}

unint64_t TranslationUIErrorInfoKey.rawValue.getter()
{
  return 0xD000000000000018;
}

unint64_t TranslationUIErrorInfoKey.description.getter()
{
  return 0xD000000000000018;
}

TranslationUI::TranslationUIErrorInfoKey_optional __swiftcall TranslationUIErrorInfoKey.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  uint64_t v3 = sub_1DB1F1C10();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *char v2 = v5;
  return result;
}

void *static TranslationUIErrorInfoKey.allCases.getter()
{
  return &unk_1F3543AA0;
}

uint64_t sub_1DB19E6CC(char *a1, char *a2)
{
  return sub_1DB162068(*a1, *a2);
}

uint64_t sub_1DB19E6D8()
{
  return sub_1DB1ADDE4();
}

uint64_t sub_1DB19E6E0()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB19E74C()
{
  return sub_1DB1B63AC();
}

TranslationUI::TranslationUIErrorInfoKey_optional sub_1DB19E754(Swift::String *a1)
{
  return TranslationUIErrorInfoKey.init(rawValue:)(*a1);
}

void sub_1DB19E760(void *a1@<X8>)
{
  unint64_t v2 = 0x80000001DB1FB2A0;
  if (*v1) {
    unint64_t v2 = 0x80000001DB1FB2C0;
  }
  *a1 = 0xD000000000000018;
  a1[1] = v2;
}

void sub_1DB19E79C(void *a1@<X8>)
{
  *a1 = &unk_1F3543AC8;
}

unint64_t sub_1DB19E7AC()
{
  return 0xD000000000000018;
}

void sub_1DB19E7DC(void *a1@<X0>, unint64_t *a2@<X8>)
{
  v173 = a2;
  uint64_t v3 = sub_1DB1EF6E0();
  v171 = *(void **)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v164 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905930);
  MEMORY[0x1F4188790](v167);
  uint64_t v6 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905938);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905940);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v165 = (uint64_t)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v162 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v162 - v16;
  unint64_t v18 = sub_1DB0EE490(MEMORY[0x1E4FBC860]);
  if (qword_1EA903548 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1DB1EF810();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EA90F258);
  id v21 = a1;
  uint64_t v22 = sub_1DB1EF7F0();
  os_log_type_t v23 = sub_1DB1F1730();
  BOOL v24 = os_log_type_enabled(v22, v23);
  v172 = v6;
  uint64_t v168 = v3;
  uint64_t v169 = (uint64_t)v17;
  uint64_t v170 = v14;
  uint64_t v166 = v9;
  if (v24)
  {
    unint64_t v25 = v18;
    uint64_t v26 = v20;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = a1;
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 138412290;
    uint64_t v30 = sub_1DB1EF410();
    *(void *)&long long v176 = v30;
    sub_1DB1F1910();
    void *v29 = v30;

    _os_log_impl(&dword_1DB0DC000, v22, v23, "Showing TranslationUIError for error: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    uint64_t v31 = v29;
    a1 = v28;
    MEMORY[0x1E018CA60](v31, -1, -1);
    uint64_t v32 = v27;
    uint64_t v20 = v26;
    unint64_t v18 = v25;
    MEMORY[0x1E018CA60](v32, -1, -1);
  }
  else
  {
  }
  uint64_t v33 = (char *)sub_1DB1EF410();
  id v34 = objc_msgSend(v33, sel_domain);
  uint64_t v35 = sub_1DB1F1290();
  uint64_t v37 = v36;

  if (v35 == 0xD000000000000017 && v37 == 0x80000001DB1FD3A0 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    *(void *)&v175[0] = a1;
    id v38 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4DE28);
    if (swift_dynamicCast())
    {

      LOBYTE(v39) = v176;
      unsigned __int8 v40 = BYTE1(v176);
      uint64_t v41 = (void *)*((void *)&v176 + 1);
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    unint64_t v163 = v18;
    v172 = v33;
    int v42 = v33;
    uint64_t v43 = sub_1DB1EF7F0();
    os_log_type_t v44 = sub_1DB1F1710();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v171 = a1;
      uint64_t v47 = (void *)v46;
      uint64_t v48 = swift_slowAlloc();
      *(void *)&long long v176 = v48;
      *(_DWORD *)uint64_t v45 = 136446722;
      id v49 = objc_msgSend(v42, sel_domain);
      uint64_t v50 = sub_1DB1F1290();
      uint64_t v170 = (char *)v20;
      unint64_t v52 = v51;

      *(void *)&v175[0] = sub_1DB11F638(v50, v52, (uint64_t *)&v176);
      sub_1DB1F1910();

      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2048;
      id v53 = objc_msgSend(v42, sel_code);

      *(void *)&v175[0] = v53;
      sub_1DB1F1910();

      *(_WORD *)(v45 + 22) = 2112;
      *(void *)&v175[0] = v42;
      char v54 = v42;
      sub_1DB1F1910();
      void *v47 = v42;

      uint64_t v55 = "Trying to show a mismatched error domain domain: %{public}s code: %ld; error: %@";
      uint64_t v56 = v43;
      os_log_type_t v57 = v44;
      uint64_t v58 = (uint8_t *)v45;
      uint32_t v59 = 32;
LABEL_13:
      _os_log_impl(&dword_1DB0DC000, v56, v57, v55, v58, v59);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      uint64_t v60 = v47;
      a1 = v171;
      MEMORY[0x1E018CA60](v60, -1, -1);
      swift_arrayDestroy();
      uint64_t v61 = v48;
LABEL_14:
      MEMORY[0x1E018CA60](v61, -1, -1);
      MEMORY[0x1E018CA60](v45, -1, -1);

LABEL_61:
      uint64_t v39 = 11;
LABEL_62:
      uint64_t v33 = v172;
      goto LABEL_63;
    }
    goto LABEL_59;
  }
  if (sub_1DB1F1290() == v35 && v62 == v37)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v63 = sub_1DB1F1DB0();
  swift_bridgeObjectRelease();
  if (v63)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v39 = 3;
    switch((unint64_t)objc_msgSend(v33, sel_code))
    {
      case 5uLL:
      case 0x10uLL:
        goto LABEL_63;
      case 0xAuLL:
        uint64_t v39 = 10;
        break;
      case 0xEuLL:
        uint64_t v39 = 9;
        break;
      default:
        unint64_t v163 = v18;
        v172 = v33;
        int v42 = v33;
        uint64_t v43 = sub_1DB1EF7F0();
        os_log_type_t v67 = sub_1DB1F1710();
        if (!os_log_type_enabled(v43, v67)) {
          goto LABEL_59;
        }
        uint64_t v45 = swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        v171 = a1;
        uint64_t v69 = (void *)v68;
        uint64_t v169 = swift_slowAlloc();
        *(void *)&long long v176 = v169;
        *(_DWORD *)uint64_t v45 = 136446722;
        id v70 = objc_msgSend(v42, sel_domain);
        uint64_t v71 = sub_1DB1F1290();
        uint64_t v170 = (char *)v20;
        unint64_t v73 = v72;

        *(void *)&v175[0] = sub_1DB11F638(v71, v73, (uint64_t *)&v176);
        sub_1DB1F1910();

        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2048;
        id v74 = objc_msgSend(v42, sel_code);

        *(void *)&v175[0] = v74;
        sub_1DB1F1910();

        *(_WORD *)(v45 + 22) = 2112;
        *(void *)&v175[0] = v42;
        double v75 = v42;
        sub_1DB1F1910();
        *uint64_t v69 = v42;

        long long v76 = "Got an unhandled error domain to show: %{public}s code: %ld; error: %@";
        goto LABEL_26;
    }
    goto LABEL_63;
  }
  uint64_t v64 = sub_1DB1F1290();
  unint64_t v163 = v18;
  if (v64 == v35 && v65 == v37)
  {
    swift_bridgeObjectRelease();
    uint64_t v66 = v169;
    goto LABEL_29;
  }
  char v79 = sub_1DB1F1DB0();
  swift_bridgeObjectRelease();
  uint64_t v66 = v169;
  if (v79)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    *(void *)&long long v176 = a1;
    id v80 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4DE28);
    uint64_t v81 = sub_1DB1EF700();
    uint64_t v82 = (uint64_t)v166;
    char v83 = swift_dynamicCast();
    uint64_t v84 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
    if (v83)
    {
      uint64_t v85 = *(void *)(v81 - 8);
      v84(v82, 0, 1, v81);
      sub_1DB1EF6F0();
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v82, v81);
      uint64_t v86 = v168;
      uint64_t v87 = (void (**)(char *, void, uint64_t))v171;
    }
    else
    {
      v84(v82, 1, 1, v81);
      sub_1DB0E8BD4(v82, &qword_1EA905938);
      uint64_t v87 = (void (**)(char *, void, uint64_t))v171;
      uint64_t v86 = v168;
      (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v171 + 7))(v66, 1, 1, v168);
    }
    uint64_t v88 = (uint64_t)v170;
    v87[13](v170, *MEMORY[0x1E4F27D98], v86);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v87[7])(v88, 0, 1, v86);
    uint64_t v89 = (uint64_t)v172;
    uint64_t v90 = (uint64_t)&v172[*(int *)(v167 + 48)];
    sub_1DB1A14D0(v66, (uint64_t)v172);
    uint64_t v167 = v90;
    sub_1DB1A14D0(v88, v90);
    uint64_t v91 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v87[6];
    uint64_t v92 = (SEL *)&_swift_FORCE_LOAD___swiftCoreFoundation___TranslationUI;
    if (v91(v89, 1, v86) == 1)
    {
      sub_1DB0E8BD4(v88, &qword_1EA905940);
      uint64_t v89 = (uint64_t)v172;
      sub_1DB0E8BD4(v66, &qword_1EA905940);
      if (v91(v167, 1, v86) == 1)
      {
        sub_1DB0E8BD4(v89, &qword_1EA905940);
        uint64_t v39 = 4;
        goto LABEL_63;
      }
    }
    else
    {
      uint64_t v93 = v165;
      sub_1DB1A14D0(v89, v165);
      uint64_t v94 = v167;
      if (v91(v167, 1, v86) != 1)
      {
        long long v114 = v171;
        char v115 = v164;
        (*((void (**)(char *, uint64_t, uint64_t))v171 + 4))(v164, v94, v86);
        sub_1DB1A1538(&qword_1EA905950, MEMORY[0x1E4F27DA0]);
        char v116 = sub_1DB1F1230();
        uint64_t v117 = (void (*)(char *, uint64_t))v114[1];
        v117(v115, v86);
        sub_1DB0E8BD4((uint64_t)v170, &qword_1EA905940);
        sub_1DB0E8BD4(v66, &qword_1EA905940);
        v117((char *)v165, v86);
        sub_1DB0E8BD4(v89, &qword_1EA905940);
        uint64_t v92 = (SEL *)&_swift_FORCE_LOAD___swiftCoreFoundation___TranslationUI;
        if (v116)
        {
          uint64_t v39 = 4;
          goto LABEL_63;
        }
LABEL_38:
        if (objc_msgSend(v33, sel_code) == (id)-1009)
        {
          char v95 = sub_1DB0E4588();
          if (v95 == 2)
          {
            id v96 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4BE78]), sel_init);
            int v97 = objc_msgSend(v96, sel_airplaneMode);
          }
          else
          {
            int v97 = v95 & 1;
          }
          if (v97) {
            uint64_t v39 = 5;
          }
          else {
            uint64_t v39 = 6;
          }
          goto LABEL_63;
        }
        v172 = v33;
        uint64_t v100 = v33;
        uint64_t v101 = sub_1DB1EF7F0();
        os_log_type_t v102 = sub_1DB1F1710();
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v103 = swift_slowAlloc();
          uint64_t v104 = swift_slowAlloc();
          v171 = a1;
          uint64_t v105 = (void *)v104;
          uint64_t v169 = swift_slowAlloc();
          *(void *)&long long v176 = v169;
          *(_DWORD *)uint64_t v103 = 136446722;
          id v106 = [v100 v92[492]];
          uint64_t v107 = sub_1DB1F1290();
          uint64_t v170 = (char *)v20;
          unint64_t v109 = v108;

          *(void *)&v175[0] = sub_1DB11F638(v107, v109, (uint64_t *)&v176);
          sub_1DB1F1910();

          swift_bridgeObjectRelease();
          *(_WORD *)(v103 + 12) = 2048;
          id v110 = objc_msgSend(v100, sel_code);

          *(void *)&v175[0] = v110;
          sub_1DB1F1910();

          *(_WORD *)(v103 + 22) = 2112;
          *(void *)&v175[0] = v100;
          uint64_t v111 = v100;
          sub_1DB1F1910();
          *uint64_t v105 = v100;

          _os_log_impl(&dword_1DB0DC000, v101, v102, "Trying to show an unhandled network error domain: %{public}s code: %ld; error: %@",
            (uint8_t *)v103,
            0x20u);
          __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
          swift_arrayDestroy();
          uint64_t v112 = v105;
          a1 = v171;
          MEMORY[0x1E018CA60](v112, -1, -1);
          uint64_t v113 = v169;
          swift_arrayDestroy();
          MEMORY[0x1E018CA60](v113, -1, -1);
          MEMORY[0x1E018CA60](v103, -1, -1);
        }
        else
        {
        }
        uint64_t v39 = 7;
        goto LABEL_62;
      }
      sub_1DB0E8BD4((uint64_t)v170, &qword_1EA905940);
      sub_1DB0E8BD4(v66, &qword_1EA905940);
      (*((void (**)(uint64_t, uint64_t))v171 + 1))(v93, v86);
      uint64_t v92 = (SEL *)&_swift_FORCE_LOAD___swiftCoreFoundation___TranslationUI;
    }
    sub_1DB0E8BD4(v89, &qword_1EA905930);
    goto LABEL_38;
  }
  if (sub_1DB1F1290() == v35 && v98 == v37)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v99 = (SEL *)&_swift_FORCE_LOAD___swiftCoreFoundation___TranslationUI;
  }
  else
  {
    char v118 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v99 = (SEL *)&_swift_FORCE_LOAD___swiftCoreFoundation___TranslationUI;
    if ((v118 & 1) == 0)
    {
      v172 = v33;
      int v42 = v33;
      uint64_t v43 = sub_1DB1EF7F0();
      os_log_type_t v155 = sub_1DB1F1710();
      if (os_log_type_enabled(v43, v155))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v156 = swift_slowAlloc();
        v171 = a1;
        uint64_t v47 = (void *)v156;
        uint64_t v48 = swift_slowAlloc();
        *(void *)&long long v176 = v48;
        *(_DWORD *)uint64_t v45 = 136446466;
        id v157 = objc_msgSend(v42, sel_domain);
        uint64_t v158 = sub_1DB1F1290();
        uint64_t v170 = (char *)v20;
        unint64_t v160 = v159;

        *(void *)&v175[0] = sub_1DB11F638(v158, v160, (uint64_t *)&v176);
        sub_1DB1F1910();

        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2112;
        *(void *)&v175[0] = v42;
        uint64_t v161 = v42;
        sub_1DB1F1910();
        void *v47 = v42;

        uint64_t v55 = "Trying to show an unhandled error domain %{public}s; error: %@";
        uint64_t v56 = v43;
        os_log_type_t v57 = v155;
        uint64_t v58 = (uint8_t *)v45;
        uint32_t v59 = 22;
        goto LABEL_13;
      }

LABEL_60:
      goto LABEL_61;
    }
  }
  if (objc_msgSend(v33, sel_code) != (id)561017449)
  {
    v172 = v33;
    int v42 = v33;
    uint64_t v43 = sub_1DB1EF7F0();
    os_log_type_t v67 = sub_1DB1F1710();
    if (os_log_type_enabled(v43, v67))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      v171 = a1;
      uint64_t v69 = (void *)v119;
      uint64_t v169 = swift_slowAlloc();
      *(void *)&long long v176 = v169;
      *(_DWORD *)uint64_t v45 = 136446722;
      id v120 = [v42 v99[492]];
      uint64_t v121 = sub_1DB1F1290();
      uint64_t v170 = (char *)v20;
      unint64_t v123 = v122;

      *(void *)&v175[0] = sub_1DB11F638(v121, v123, (uint64_t *)&v176);
      sub_1DB1F1910();

      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2048;
      id v124 = objc_msgSend(v42, sel_code);

      *(void *)&v175[0] = v124;
      sub_1DB1F1910();

      *(_WORD *)(v45 + 22) = 2112;
      *(void *)&v175[0] = v42;
      long long v125 = v42;
      sub_1DB1F1910();
      *uint64_t v69 = v42;

      long long v76 = "Trying to show an unhandled OS Status error: %{public}s code: %ld; error: %@";
LABEL_26:
      _os_log_impl(&dword_1DB0DC000, v43, v67, v76, (uint8_t *)v45, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      unint64_t v77 = v69;
      a1 = v171;
      MEMORY[0x1E018CA60](v77, -1, -1);
      uint64_t v78 = v169;
      swift_arrayDestroy();
      uint64_t v61 = v78;
      goto LABEL_14;
    }
LABEL_59:

    goto LABEL_60;
  }
  uint64_t v39 = 8;
LABEL_63:
  id v126 = objc_msgSend(v33, sel_userInfo);
  uint64_t v127 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v128 = sub_1DB1F11B0();
  swift_bridgeObjectRelease();

  uint64_t v129 = sub_1DB1F1290();
  uint64_t v131 = v130;
  unint64_t v177 = sub_1DB1A1490();
  *(void *)&long long v176 = v33;
  sub_1DB0F138C(&v176, v175);
  uint64_t v132 = v33;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v174 = v128;
  sub_1DB1E4108(v175, v129, v131, isUniquelyReferenced_nonNull_native);
  uint64_t v41 = (void *)v174;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v134 = v132;
  id v135 = a1;
  char v136 = v134;
  id v137 = a1;
  uint64_t v138 = v136;
  uint64_t v139 = sub_1DB1EF7F0();
  os_log_type_t v140 = sub_1DB1F1730();
  int v141 = v140;
  if (os_log_type_enabled(v139, v140))
  {
    uint64_t v142 = swift_slowAlloc();
    uint64_t v143 = swift_slowAlloc();
    v172 = (char *)v39;
    uint64_t v39 = v143;
    uint64_t v170 = (char *)swift_slowAlloc();
    *(void *)&v175[0] = v170;
    *(_DWORD *)uint64_t v142 = 136447234;
    LODWORD(v168) = v141;
    id v144 = objc_msgSend(v138, sel_domain);
    v171 = v41;
    id v145 = v144;
    uint64_t v146 = sub_1DB1F1290();
    uint64_t v169 = v127;
    unint64_t v148 = v147;

    *(void *)&long long v176 = sub_1DB11F638(v146, v148, (uint64_t *)v175);
    sub_1DB1F1910();

    swift_bridgeObjectRelease();
    *(_WORD *)(v142 + 12) = 2048;
    id v149 = objc_msgSend(v138, sel_code);

    *(void *)&long long v176 = v149;
    sub_1DB1F1910();

    *(_WORD *)(v142 + 22) = 2080;
    strcpy((char *)&v176, "error code: ");
    BYTE13(v176) = 0;
    HIWORD(v176) = -5120;
    uint64_t v174 = ((_BYTE)v172 + 1);
    sub_1DB1F1D80();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    *(void *)&long long v176 = sub_1DB11F638(v176, *((unint64_t *)&v176 + 1), (uint64_t *)v175);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v142 + 32) = 2112;
    *(void *)&long long v176 = v138;
    unint64_t v150 = v138;
    sub_1DB1F1910();
    *(void *)uint64_t v39 = v138;

    *(_WORD *)(v142 + 42) = 2112;
    uint64_t v151 = sub_1DB1EF410();
    *(void *)&long long v176 = v151;
    uint64_t v41 = v171;
    sub_1DB1F1910();
    *(void *)(v39 + 8) = v151;

    _os_log_impl(&dword_1DB0DC000, v139, (os_log_type_t)v168, "Showing error UI for bridged error domain %{public}s code %ld to %s; NSError: %@; input error: %@",
      (uint8_t *)v142,
      0x34u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    uint64_t v152 = v39;
    LOBYTE(v39) = (_BYTE)v172;
    MEMORY[0x1E018CA60](v152, -1, -1);
    uint64_t v153 = (uint64_t)v170;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v153, -1, -1);
    MEMORY[0x1E018CA60](v142, -1, -1);
  }
  else
  {
  }
  unsigned __int8 v40 = v39;
LABEL_67:
  unint64_t v154 = v173;
  unint64_t *v173 = v39 | ((unint64_t)v40 << 8);
  v154[1] = (unint64_t)v41;
}

uint64_t sub_1DB19FF6C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 1);
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_1DB1F13A0();
  sub_1DB1F13A0();
  strcpy((char *)&v14, "error code: ");
  BYTE13(v14) = 0;
  HIWORD(v14) = -5120;
  *(void *)&long long v12 = v1 + 1;
  sub_1DB1F1D80();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  uint64_t v3 = sub_1DB1F1290();
  if (*(void *)(v2 + 16) && (unint64_t v5 = sub_1DB1A8C28(v3, v4), (v6 & 1) != 0))
  {
    sub_1DB0E52F4(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v13 + 1))
  {
    sub_1DB0F138C(&v12, &v14);
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v14 = 6369134;
    *((void *)&v14 + 1) = 0xE300000000000000;
    sub_1DB0E8BD4((uint64_t)&v12, &qword_1EBA4DDE8);
  }
  sub_1DB1F1B70();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
  sub_1DB1F13A0();
  uint64_t v7 = sub_1DB1F1290();
  if (*(void *)(v2 + 16) && (unint64_t v9 = sub_1DB1A8C28(v7, v8), (v10 & 1) != 0))
  {
    sub_1DB0E52F4(*(void *)(v2 + 56) + 32 * v9, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v13 + 1))
  {
    sub_1DB0F138C(&v12, &v14);
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v14 = 6369134;
    *((void *)&v14 + 1) = 0xE300000000000000;
    sub_1DB0E8BD4((uint64_t)&v12, &qword_1EBA4DDE8);
  }
  sub_1DB1F1B70();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
  sub_1DB1F13A0();
  return v16;
}

uint64_t sub_1DB1A01F4(uint64_t a1)
{
  unint64_t v2 = sub_1DB1A1790();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1DB1A0230(uint64_t a1)
{
  unint64_t v2 = sub_1DB1A1790();
  return MEMORY[0x1F40E6E10](a1, v2);
}

void sub_1DB1A026C(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1DB1A0278()
{
  return 0xD000000000000017;
}

uint64_t sub_1DB1A0298()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranslationUIErrorView.body.getter()
{
  uint64_t v1 = type metadata accessor for TranslationUnavailableView(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9058C8);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TranslationUnavailableViewPhone(0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for TranslationUIErrorView() + 20)) == 1)
  {
    sub_1DB1A0618(v0, (uint64_t)v9, type metadata accessor for TranslationUnavailableModel);
    sub_1DB1A0618((uint64_t)v9, (uint64_t)v6, type metadata accessor for TranslationUnavailableViewPhone);
    swift_storeEnumTagMultiPayload();
    sub_1DB1A1538(&qword_1EA9058D0, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableViewPhone);
    sub_1DB1A1538(&qword_1EA9058D8, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableView);
    sub_1DB1F0400();
    char v10 = type metadata accessor for TranslationUnavailableViewPhone;
    uint64_t v11 = (uint64_t)v9;
  }
  else
  {
    sub_1DB1A0618(v0, (uint64_t)v3, type metadata accessor for TranslationUnavailableModel);
    sub_1DB1A0618((uint64_t)v3, (uint64_t)v6, type metadata accessor for TranslationUnavailableView);
    swift_storeEnumTagMultiPayload();
    sub_1DB1A1538(&qword_1EA9058D0, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableViewPhone);
    sub_1DB1A1538(&qword_1EA9058D8, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableView);
    sub_1DB1F0400();
    char v10 = type metadata accessor for TranslationUnavailableView;
    uint64_t v11 = (uint64_t)v3;
  }
  return sub_1DB1A0680(v11, v10);
}

uint64_t type metadata accessor for TranslationUIErrorView()
{
  uint64_t result = qword_1EA905910;
  if (!qword_1EA905910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB1A0618(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1A0680(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DB1A06E4()
{
  unint64_t result = qword_1EA9058E0;
  if (!qword_1EA9058E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9058E0);
  }
  return result;
}

uint64_t sub_1DB1A0738()
{
  return sub_1DB1A07E0(&qword_1EA9058E8, &qword_1EA9058F0);
}

unint64_t sub_1DB1A0764()
{
  unint64_t result = qword_1EA9058F8;
  if (!qword_1EA9058F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9058F8);
  }
  return result;
}

uint64_t sub_1DB1A07B8()
{
  return sub_1DB1A07E0(&qword_1EA905900, &qword_1EA905908);
}

uint64_t sub_1DB1A07E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1A0830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for TranslationUIErrorCodes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranslationUIErrorCodes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1A09ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationUIErrorCodes()
{
  return &type metadata for TranslationUIErrorCodes;
}

unsigned char *storeEnumTagSinglePayload for TranslationUIErrorInfoKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1A0AB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationUIErrorInfoKey()
{
  return &type metadata for TranslationUIErrorInfoKey;
}

void *initializeBufferWithCopyOfBuffer for TranslationUIErrorView(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1DB1EF570();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    int v8 = (int *)type metadata accessor for TranslationUnavailableModel(0);
    uint64_t v9 = v8[5];
    char v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *char v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v8[8];
    os_log_type_t v23 = (void *)((char *)v4 + v22);
    BOOL v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *os_log_type_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v8[9];
    uint64_t v27 = (void *)((char *)v4 + v26);
    uint64_t v28 = (void *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TranslationUIErrorView(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for TranslationUnavailableModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  char v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v7[8];
  uint64_t v22 = (void *)(a1 + v21);
  os_log_type_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = v7[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  char v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v7[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  char v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  void *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1A117C);
}

uint64_t sub_1DB1A117C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for TranslationUIErrorView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1A1260);
}

uint64_t sub_1DB1A1260(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1DB1A131C()
{
  uint64_t result = type metadata accessor for TranslationUnavailableModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1DB1A13B4()
{
  unint64_t result = qword_1EA905920;
  if (!qword_1EA905920)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905928);
    sub_1DB1A1538(&qword_1EA9058D0, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableViewPhone);
    sub_1DB1A1538(&qword_1EA9058D8, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905920);
  }
  return result;
}

unint64_t sub_1DB1A1490()
{
  unint64_t result = qword_1EA905948;
  if (!qword_1EA905948)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA905948);
  }
  return result;
}

uint64_t sub_1DB1A14D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1A1538(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for TranslationUIError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13TranslationUI18TranslationUIErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranslationUIError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TranslationUIError(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslationUIError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslationUIError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationUIError()
{
  return &type metadata for TranslationUIError;
}

unint64_t sub_1DB1A16E4()
{
  unint64_t result = qword_1EA905958;
  if (!qword_1EA905958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905958);
  }
  return result;
}

unint64_t sub_1DB1A173C()
{
  unint64_t result = qword_1EA905960;
  if (!qword_1EA905960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905960);
  }
  return result;
}

unint64_t sub_1DB1A1790()
{
  unint64_t result = qword_1EA905968;
  if (!qword_1EA905968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905968);
  }
  return result;
}

void sub_1DB1A17E4(char a1)
{
  uint64_t v2 = 0xD000000000000042;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v3 - 8);
  int v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1EF480();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF470();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4CF78);
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1DB1EF810();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBA4F408);
    uint64_t v11 = sub_1DB1EF7F0();
    os_log_type_t v12 = sub_1DB1F1720();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v24 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      if (a1)
      {
        if (a1 == 1)
        {
          unint64_t v15 = 0x80000001DB1FC230;
        }
        else
        {
          uint64_t v2 = 0xD000000000000028;
          unint64_t v15 = 0x80000001DB1FD5E0;
        }
      }
      else
      {
        unint64_t v15 = 0x80000001DB1FD610;
      }
      v23[8] = sub_1DB11F638(v2, v15, &v24);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DB0DC000, v11, v12, "Failed to create URL for launching: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v14, -1, -1);
      MEMORY[0x1E018CA60](v13, -1, -1);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DB1F4170;
    *(void *)(inited + 32) = sub_1DB1F1290();
    *(void *)(inited + 40) = v17;
    *(unsigned char *)(inited + 48) = 1;
    unint64_t v18 = sub_1DB0EE6F8(inited);
    id v19 = objc_msgSend(self, sel_defaultWorkspace);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = (void *)sub_1DB1EF430();
      sub_1DB1A7850(v18);
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)sub_1DB1F11A0();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_openSensitiveURL_withOptions_, v21, v22);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DB1A1C20@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  uint64_t v62 = v5;
  MEMORY[0x1F4188790](v4);
  uint32_t v59 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v56 - v8;
  MEMORY[0x1F4188790](v10);
  char v63 = (char *)v56 - v11;
  uint64_t v12 = type metadata accessor for TranslationUnavailableState(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *a1;
  uint64_t v64 = a1[1];
  uint64_t v17 = *((void *)a1 + 1);
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1DB1EF810();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBA4F408);
  swift_bridgeObjectRetain_n();
  id v19 = sub_1DB1EF7F0();
  os_log_type_t v20 = sub_1DB1F16F0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v60 = v9;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v58 = a2;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v57 = v12;
    uint64_t v25 = (void *)v24;
    *(_DWORD *)uint64_t v23 = 138412290;
    v56[1] = v23 + 4;
    sub_1DB1A16E4();
    uint64_t v26 = v15;
    uint64_t v27 = v13;
    uint64_t v28 = swift_allocError();
    *(unsigned char *)uint64_t v29 = v16;
    *(unsigned char *)(v29 + 1) = v64;
    *(void *)(v29 + 8) = v17;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1DB1EF410();
    uint64_t v31 = (void *)v28;
    uint64_t v13 = v27;
    unint64_t v15 = v26;

    *(void *)&long long v66 = v30;
    sub_1DB1F1910();
    *uint64_t v25 = v30;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DB0DC000, v19, v20, "Create unavailable state for error %@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    uint64_t v32 = v25;
    uint64_t v12 = v57;
    MEMORY[0x1E018CA60](v32, -1, -1);
    uint64_t v33 = v23;
    a2 = v58;
    MEMORY[0x1E018CA60](v33, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  switch(v64)
  {
    case 1:
    case 2:
    case 8:
    case 9:
    case 10:
    case 11:
      swift_bridgeObjectRelease();
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 4, 4, v34);
      goto LABEL_35;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v15, 2, 4, v37);
      goto LABEL_35;
    case 4:
    case 6:
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v15, 3, 4, v35);
      goto LABEL_35;
    case 5:
      uint64_t v38 = *(void *)(v17 + 16);
      v56[0] = v13;
      if (!v38)
      {
        long long v66 = 0u;
        long long v67 = 0u;
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      unint64_t v39 = sub_1DB1A8C28(0xD000000000000018, 0x80000001DB1FB2A0);
      if (v40)
      {
        sub_1DB0E52F4(*(void *)(v17 + 56) + 32 * v39, (uint64_t)&v66);
      }
      else
      {
        long long v66 = 0u;
        long long v67 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v67 + 1))
      {
LABEL_19:
        sub_1DB0E8BD4((uint64_t)&v66, &qword_1EBA4DDE8);
        if (!*(void *)(v17 + 16)) {
          goto LABEL_18;
        }
        goto LABEL_20;
      }
      swift_dynamicCast();
      if (!*(void *)(v17 + 16))
      {
LABEL_18:
        long long v66 = 0u;
        long long v67 = 0u;
LABEL_27:
        sub_1DB0E8BD4((uint64_t)&v66, &qword_1EBA4DDE8);
        uint64_t v43 = 0;
        goto LABEL_28;
      }
LABEL_20:
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_1DB1A8C28(0xD000000000000018, 0x80000001DB1FB2C0);
      if (v42)
      {
        sub_1DB0E52F4(*(void *)(v17 + 56) + 32 * v41, (uint64_t)&v66);
      }
      else
      {
        long long v66 = 0u;
        long long v67 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v67 + 1)) {
        goto LABEL_27;
      }
      if (swift_dynamicCast()) {
        uint64_t v43 = v65;
      }
      else {
        uint64_t v43 = 0;
      }
LABEL_28:
      sub_1DB1EF580();
      if (v43)
      {
        uint64_t v13 = v56[0];
        uint64_t v44 = v61;
      }
      else
      {
        uint64_t v45 = v12;
        _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
        uint64_t v47 = v46;
        uint64_t v48 = (void *)sub_1DB1F1260();
        id v49 = objc_msgSend(v47, sel_stringForKey_, v48);

        uint64_t v44 = v61;
        if (v49)
        {
          sub_1DB1F1290();
        }
        else
        {

          uint64_t v50 = v59;
          _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
          sub_1DB1EF590();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v50, v44);
        }
        uint64_t v12 = v45;
        uint64_t v13 = v56[0];
      }
      unint64_t v51 = v60;
      sub_1DB1EF580();
      swift_bridgeObjectRelease();
      unint64_t v52 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
      v52(v15, v63, v44);
      uint64_t v53 = type metadata accessor for LocalePair();
      v52(&v15[*(int *)(v53 + 20)], v51, v44);
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v15, 0, 4, v54);
LABEL_35:
      sub_1DB1A67A4((uint64_t)v15, a2, type metadata accessor for TranslationUnavailableState);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
    default:
      swift_bridgeObjectRelease();
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v15, 1, 4, v36);
      goto LABEL_35;
  }
}

int *sub_1DB1A242C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalePair();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranslationUnavailableState(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1A673C(v1, (uint64_t)v12, type metadata accessor for TranslationUnavailableState);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 4, v13))
  {
    case 1u:
      if (qword_1EA903570 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1DB1EF400();
      uint64_t v45 = v44;
      uint64_t v46 = sub_1DB1EF400();
      uint64_t v48 = v47;
      id v49 = (void *)sub_1DB1F1260();
      id v50 = (id)SFLocalizableWAPIStringKeyForKey();

      sub_1DB1F1290();
      uint64_t v51 = sub_1DB1EF400();
      uint64_t v53 = v52;
      swift_bridgeObjectRelease();
      sub_1DB1EF560();
      unint64_t result = (int *)type metadata accessor for TranslationUnavailableModel(0);
      uint64_t v54 = (void *)(a1 + result[5]);
      *uint64_t v54 = 0x662E6172656D6163;
      v54[1] = 0xEB000000006C6C69;
      uint64_t v55 = (uint64_t *)(a1 + result[6]);
      *uint64_t v55 = v43;
      v55[1] = v45;
      uint64_t v56 = (uint64_t *)(a1 + result[7]);
      *uint64_t v56 = v46;
      v56[1] = v48;
      uint64_t v57 = (uint64_t *)(a1 + result[8]);
      *uint64_t v57 = v51;
      v57[1] = v53;
      uint64_t v58 = (void (**)())(a1 + result[9]);
      uint32_t v59 = sub_1DB1A307C;
      goto LABEL_26;
    case 2u:
      if (qword_1EA903570 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_1DB1EF400();
      uint64_t v62 = v61;
      uint64_t v63 = sub_1DB1EF400();
      uint64_t v65 = v64;
      long long v66 = (void *)sub_1DB1F1260();
      id v67 = (id)SFLocalizableWAPIStringKeyForKey();

      sub_1DB1F1290();
      uint64_t v68 = sub_1DB1EF400();
      uint64_t v70 = v69;
      swift_bridgeObjectRelease();
      sub_1DB1EF560();
      unint64_t result = (int *)type metadata accessor for TranslationUnavailableModel(0);
      uint64_t v71 = (void *)(a1 + result[5]);
      void *v71 = 0x74616C736E617274;
      v71[1] = 0xE900000000000065;
      unint64_t v72 = (uint64_t *)(a1 + result[6]);
      uint64_t *v72 = v60;
      v72[1] = v62;
      unint64_t v73 = (uint64_t *)(a1 + result[7]);
      *unint64_t v73 = v63;
      v73[1] = v65;
      id v74 = (uint64_t *)(a1 + result[8]);
      *id v74 = v68;
      v74[1] = v70;
      uint64_t v58 = (void (**)())(a1 + result[9]);
      uint32_t v59 = sub_1DB1A3084;
      goto LABEL_26;
    case 3u:
      if (qword_1EA903570 != -1) {
        swift_once();
      }
      uint64_t v102 = sub_1DB1EF400();
      uint64_t v76 = v75;
      uint64_t v103 = sub_1DB1EF400();
      uint64_t v104 = v77;
      sub_1DB1F13A0();
      uint64_t v78 = (void *)sub_1DB1F1260();
      id v79 = (id)SFLocalizableWAPIStringKeyForKey();

      sub_1DB1F1290();
      sub_1DB1EF400();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      uint64_t v81 = v103;
      uint64_t v80 = v104;
      uint64_t v82 = (void *)sub_1DB1F1260();
      id v83 = (id)SFLocalizableWAPIStringKeyForKey();

      sub_1DB1F1290();
      uint64_t v84 = sub_1DB1EF400();
      uint64_t v86 = v85;
      swift_bridgeObjectRelease();
      sub_1DB1EF560();
      unint64_t result = (int *)type metadata accessor for TranslationUnavailableModel(0);
      uint64_t v87 = (void *)(a1 + result[5]);
      *uint64_t v87 = 0xD000000000000014;
      v87[1] = 0x80000001DB1FD580;
      uint64_t v88 = (uint64_t *)(a1 + result[6]);
      *uint64_t v88 = v102;
      v88[1] = v76;
      uint64_t v89 = (uint64_t *)(a1 + result[7]);
      *uint64_t v89 = v81;
      v89[1] = v80;
      uint64_t v90 = (uint64_t *)(a1 + result[8]);
      uint64_t *v90 = v84;
      v90[1] = v86;
      uint64_t v58 = (void (**)())(a1 + result[9]);
      uint32_t v59 = sub_1DB1A308C;
      goto LABEL_26;
    case 4u:
      if (qword_1EA903570 != -1) {
        swift_once();
      }
      uint64_t v91 = sub_1DB1EF400();
      uint64_t v93 = v92;
      uint64_t v94 = sub_1DB1EF400();
      uint64_t v96 = v95;
      sub_1DB1EF560();
      unint64_t result = (int *)type metadata accessor for TranslationUnavailableModel(0);
      int v97 = (void *)(a1 + result[5]);
      *int v97 = 0x74616C736E617274;
      v97[1] = 0xE900000000000065;
      uint64_t v98 = (uint64_t *)(a1 + result[6]);
      *uint64_t v98 = v91;
      v98[1] = v93;
      uint64_t v99 = (uint64_t *)(a1 + result[7]);
      uint64_t *v99 = v94;
      v99[1] = v96;
      uint64_t v100 = (void *)(a1 + result[8]);
      *uint64_t v100 = 0;
      v100[1] = 0xE000000000000000;
      uint64_t v58 = (void (**)())(a1 + result[9]);
      uint32_t v59 = (void (*)())CGPointMake;
LABEL_26:
      *uint64_t v58 = v59;
      v58[1] = 0;
      break;
    default:
      sub_1DB1A67A4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LocalePair);
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v14 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v6);
      unint64_t v16 = v15;
      uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v6, v3);
      uint64_t v18 = 0x45474155474E414CLL;
      if (v16) {
        uint64_t v18 = v14;
      }
      uint64_t v102 = v18;
      if (!v16) {
        unint64_t v16 = 0xE800000000000000;
      }
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v19 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v6);
      unint64_t v21 = v20;
      v17(v6, v3);
      if (v21) {
        uint64_t v22 = v19;
      }
      else {
        uint64_t v22 = 0x45474155474E414CLL;
      }
      if (!v21) {
        unint64_t v21 = 0xE800000000000000;
      }
      if (qword_1EA903570 != -1) {
        swift_once();
      }
      sub_1DB1EF400();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FD8);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1DB1F4900;
      uint64_t v24 = MEMORY[0x1E4FBB1A0];
      *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v25 = sub_1DB101A50();
      *(void *)(v23 + 32) = v102;
      *(void *)(v23 + 40) = v16;
      *(void *)(v23 + 96) = v24;
      *(void *)(v23 + 104) = v25;
      *(void *)(v23 + 64) = v25;
      *(void *)(v23 + 72) = v22;
      *(void *)(v23 + 80) = v21;
      uint64_t v102 = sub_1DB1F12C0();
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = sub_1DB1EF400();
      uint64_t v30 = v29;
      uint64_t v31 = (void *)sub_1DB1F1260();
      id v32 = (id)SFLocalizableWAPIStringKeyForKey();

      sub_1DB1F1290();
      uint64_t v33 = sub_1DB1EF400();
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      sub_1DB1EF560();
      uint64_t v36 = (int *)type metadata accessor for TranslationUnavailableModel(0);
      uint64_t v37 = (void *)(a1 + v36[5]);
      void *v37 = 0xD000000000000014;
      v37[1] = 0x80000001DB1FD580;
      uint64_t v38 = (uint64_t *)(a1 + v36[6]);
      *uint64_t v38 = v28;
      v38[1] = v30;
      unint64_t v39 = (uint64_t *)(a1 + v36[7]);
      *unint64_t v39 = v102;
      v39[1] = v27;
      char v40 = (uint64_t *)(a1 + v36[8]);
      *char v40 = v33;
      v40[1] = v35;
      unint64_t v41 = (void (**)())(a1 + v36[9]);
      *unint64_t v41 = sub_1DB1A308C;
      v41[1] = 0;
      unint64_t result = (int *)sub_1DB1A77F0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LocalePair);
      break;
  }
  return result;
}

void sub_1DB1A307C()
{
}

void sub_1DB1A3084()
{
}

void sub_1DB1A308C()
{
}

uint64_t sub_1DB1A3098()
{
  return 91;
}

uint64_t sub_1DB1A31F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1EF570();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

id sub_1DB1A3264()
{
  type metadata accessor for TranslationUnavailableResource();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EA905970 = (uint64_t)result;
  return result;
}

uint64_t sub_1DB1A32BC()
{
  return swift_deallocClassInstance();
}

id sub_1DB1A32CC(uint64_t a1)
{
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for SecureContentUnavailableViewController();
  id v3 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_setView_, v6);

  id result = objc_msgSend(v5, sel_view);
  if (result)
  {
    uint64_t v8 = result;
    objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    uint64_t v9 = sub_1DB1EF890();
    v12[3] = v9;
    v12[4] = MEMORY[0x1E4FB1058];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    uint64_t v11 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_1, a1, v9);
    sub_1DB1F1740();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v9);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SecureContentUnavailableViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureContentUnavailableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SecureContentUnavailableViewController()
{
  return self;
}

uint64_t type metadata accessor for TranslationUnavailableResource()
{
  return self;
}

uint64_t method lookup function for SecureContentUnavailableViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SecureContentUnavailableViewController);
}

uint64_t *sub_1DB1A3590(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    id v4 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1DB1EF570();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)v4 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    objc_super v13 = (uint64_t *)((char *)v4 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *objc_super v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    unint64_t v21 = (uint64_t *)((char *)v4 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *unint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    unint64_t v25 = (uint64_t *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DB1A36D4(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DB1A378C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  objc_super v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  unint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  unint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1DB1A3884(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  unint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DB1A39C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1DB1A3A6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_1DB1A3B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1A3B78);
}

uint64_t sub_1DB1A3B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DB1A3C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1A3C50);
}

uint64_t sub_1DB1A3C50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DB1EF570();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranslationUnavailableModel(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, qword_1EBA4D130);
}

uint64_t sub_1DB1A3D30()
{
  uint64_t result = sub_1DB1EF570();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DB1A3DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_5Tm);
}

uint64_t sub_1DB1A3E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_6Tm);
}

uint64_t type metadata accessor for TranslationUnavailableViewPhone(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905978);
}

void *sub_1DB1A3E44(void *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TranslationUnavailableModel(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = v28;
    a1 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_1DB1EF570();
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v6[6];
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v6[7];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v6[8];
    uint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v6[9];
    uint64_t v25 = (void *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DB1A3F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v5[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v5[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v5[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1DB1A40A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v5[8];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v5[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DB1A41EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  *(_OWORD *)(a1 + v5[8]) = *(_OWORD *)(a2 + v5[8]);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_1DB1A4294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v5[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v5[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  swift_release();
  return a1;
}

uint64_t sub_1DB1A4394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1A43A8);
}

uint64_t __swift_get_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslationUnavailableModel(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DB1A4418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1A442C);
}

uint64_t __swift_store_extra_inhabitant_index_6Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslationUnavailableModel(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TranslationUnavailableView(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905988);
}

uint64_t sub_1DB1A44C0()
{
  uint64_t result = type metadata accessor for TranslationUnavailableModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DB1A454C()
{
  return sub_1DB1A4A60(&qword_1EA9058D0, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableViewPhone);
}

void sub_1DB1A4594()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TranslationUnavailableViewPhone(0);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v29 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = sub_1DB1EF890();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - v9;
  sub_1DB1EF860();
  uint64_t v11 = type metadata accessor for TranslationUnavailableModel(0);
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel__systemImageNamed_, v12);

  sub_1DB1EF870();
  swift_bridgeObjectRetain();
  sub_1DB1EF850();
  swift_bridgeObjectRetain();
  sub_1DB1EF820();
  uint64_t v14 = (uint64_t *)(v1 + *(int *)(v11 + 32));
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17) {
    goto LABEL_6;
  }
  uint64_t v28 = v4;
  swift_bridgeObjectRetain();
  uint64_t v18 = (void (*)(unsigned char *, void))sub_1DB1EF880();
  sub_1DB1F18C0();
  v18(v30, 0);
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v20 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v21 = (void *)sub_1DB1F1260();
  id v22 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v21, v20, 0);

  if (v22)
  {
    uint64_t v23 = (void (*)(unsigned char *, void))sub_1DB1EF880();
    sub_1DB1F18B0();
    v23(v30, 0);
    sub_1DB1A64C8();
    sub_1DB1A673C(v1, (uint64_t)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranslationUnavailableViewPhone);
    unint64_t v24 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v25 = swift_allocObject();
    sub_1DB1A67A4((uint64_t)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, type metadata accessor for TranslationUnavailableViewPhone);
    sub_1DB1F18A0();
    uint64_t v26 = (void (*)(unsigned char *, void))sub_1DB1EF840();
    sub_1DB1EF830();
    v26(v30, 0);
    uint64_t v4 = v28;
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    id v27 = objc_allocWithZone((Class)type metadata accessor for SecureContentUnavailableViewController());
    sub_1DB1A32CC((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return;
  }
  __break(1u);
}

uint64_t sub_1DB1A4A18()
{
  return sub_1DB1A4A60(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
}

uint64_t sub_1DB1A4A60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1A4AA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1A4AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1A4A60(&qword_1EA905998, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableViewPhone);
  return MEMORY[0x1F40FAB70](a1, a2, a3, v6);
}

uint64_t sub_1DB1A4B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1A4A60(&qword_1EA905998, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableViewPhone);
  return MEMORY[0x1F40FAB28](a1, a2, a3, v6);
}

void sub_1DB1A4BEC()
{
}

uint64_t sub_1DB1A4C44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059A0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059A8);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059B0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_1DB1F02E0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059B8);
  sub_1DB1A4F04(v1, (uint64_t *)&v5[*(int *)(v14 + 44)]);
  sub_1DB1F0F60();
  sub_1DB1EFEE0();
  sub_1DB0E8B70((uint64_t)v5, (uint64_t)v9, &qword_1EA9059A0);
  uint64_t v15 = &v9[*(int *)(v7 + 44)];
  long long v16 = v40[5];
  *((_OWORD *)v15 + 4) = v40[4];
  *((_OWORD *)v15 + 5) = v16;
  *((_OWORD *)v15 + 6) = v40[6];
  long long v17 = v40[1];
  *(_OWORD *)uint64_t v15 = v40[0];
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = v40[3];
  *((_OWORD *)v15 + 2) = v40[2];
  *((_OWORD *)v15 + 3) = v18;
  sub_1DB0E8BD4((uint64_t)v5, &qword_1EA9059A0);
  char v19 = sub_1DB1F0720();
  sub_1DB1EFAC0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1DB0E8B70((uint64_t)v9, (uint64_t)v13, &qword_1EA9059A8);
  uint64_t v28 = &v13[*(int *)(v11 + 44)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_1DB0E8BD4((uint64_t)v9, &qword_1EA9059A8);
  char v29 = sub_1DB1F06E0();
  sub_1DB1EFAC0();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_1DB0E8B70((uint64_t)v13, a1, &qword_1EA9059B0);
  uint64_t v38 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059C0) + 36);
  *(unsigned char *)uint64_t v38 = v29;
  *(void *)(v38 + 8) = v31;
  *(void *)(v38 + 16) = v33;
  *(void *)(v38 + 24) = v35;
  *(void *)(v38 + 32) = v37;
  *(unsigned char *)(v38 + 40) = 0;
  return sub_1DB0E8BD4((uint64_t)v13, &qword_1EA9059B0);
}

uint64_t sub_1DB1A4F04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v166 = a1;
  v180 = a2;
  uint64_t v158 = sub_1DB1F0480();
  uint64_t v156 = *(void *)(v158 - 8);
  MEMORY[0x1F4188790](v158);
  unint64_t v154 = (char *)&v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038B8);
  uint64_t v149 = *(void *)(v4 - 8);
  uint64_t v150 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v148 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059C8);
  MEMORY[0x1F4188790](v151);
  uint64_t v152 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059D0);
  uint64_t v157 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  os_log_type_t v155 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059D8);
  MEMORY[0x1F4188790](v153);
  uint64_t v162 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059E0);
  MEMORY[0x1F4188790](v160);
  uint64_t v163 = (uint64_t)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059E8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v177 = v10;
  uint64_t v178 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v161 = (uint64_t)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059F0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v197 = (uint64_t)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v175 = (uint64_t)&v148 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9056B8);
  MEMORY[0x1F4188790](v17 - 8);
  v198 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_1DB1F0820();
  uint64_t v201 = *(void *)(v188 - 8);
  MEMORY[0x1F4188790](v188);
  v187 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9059F8);
  uint64_t v195 = *(void *)(v20 - 8);
  uint64_t v196 = v20;
  MEMORY[0x1F4188790](v20);
  v191 = (char *)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A00) - 8;
  MEMORY[0x1F4188790](v193);
  v192 = (char *)&v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A08) - 8;
  MEMORY[0x1F4188790](v194);
  uint64_t v200 = (uint64_t)&v148 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v199 = (uint64_t)&v148 - v25;
  uint64_t v26 = sub_1DB1F0CA0();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  char v29 = (char *)&v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v165 = v30;
  swift_bridgeObjectRetain();
  sub_1DB1F0CB0();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, *MEMORY[0x1E4F3EBF8], v26);
  uint64_t v179 = sub_1DB1F0CD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  uint64_t v173 = v233;
  int v172 = v234;
  uint64_t v171 = v235;
  int v170 = v236;
  uint64_t v168 = v238;
  uint64_t v169 = v237;
  uint64_t v176 = sub_1DB1F0C60();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = (uint64_t *)(a1 + *(int *)(v30 + 24));
  uint64_t v32 = v31[1];
  uint64_t v211 = *v31;
  uint64_t v212 = v32;
  unint64_t v164 = sub_1DB0F0708();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1DB1F0930();
  uint64_t v35 = v34;
  uint64_t v190 = v36;
  char v38 = v37 & 1;
  uint64_t v39 = swift_getKeyPath();
  uint64_t v189 = v39;
  uint64_t v40 = *MEMORY[0x1E4F3E150];
  uint64_t v41 = v201;
  v185 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 104);
  uint64_t v186 = v201 + 104;
  char v42 = v187;
  uint64_t v43 = v188;
  v185(v187, v40, v188);
  uint64_t v184 = sub_1DB1F0770();
  uint64_t v44 = *(void *)(v184 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
  uint64_t v182 = v44 + 56;
  v183 = v45;
  uint64_t v46 = (uint64_t)v198;
  v45(v198, 1, 1, v184);
  uint64_t v47 = sub_1DB1F07E0();
  sub_1DB0E8BD4(v46, &qword_1EA9056B8);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v201 = v41 + 8;
  v181 = v48;
  v48(v42, v43);
  uint64_t v49 = swift_getKeyPath();
  uint64_t v211 = v33;
  uint64_t v212 = v35;
  char v213 = v38;
  uint64_t v215 = v190;
  __int16 v216 = 256;
  uint64_t v219 = v39;
  char v220 = 1;
  v222 = (char *)v49;
  uint64_t v223 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A10);
  sub_1DB1A61AC();
  id v50 = v191;
  sub_1DB1F0AC0();
  sub_1DB0EB23C(v33, v35, v38);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_1DB1F0C50();
  uint64_t v52 = swift_getKeyPath();
  uint64_t v53 = v195;
  uint64_t v54 = (uint64_t)v192;
  uint64_t v55 = v50;
  uint64_t v56 = v50;
  uint64_t v57 = v196;
  (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v56, v196);
  uint64_t v58 = (uint64_t *)(v54 + *(int *)(v193 + 44));
  *uint64_t v58 = v52;
  v58[1] = v51;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v57);
  LOBYTE(v51) = sub_1DB1F06D0();
  sub_1DB1EFAC0();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v67 = v200;
  sub_1DB0E8B70(v54, v200, &qword_1EA905A00);
  uint64_t v68 = v67 + *(int *)(v194 + 44);
  *(unsigned char *)uint64_t v68 = v51;
  *(void *)(v68 + 8) = v60;
  *(void *)(v68 + 16) = v62;
  *(void *)(v68 + 24) = v64;
  *(void *)(v68 + 32) = v66;
  *(unsigned char *)(v68 + 40) = 0;
  sub_1DB0E8BD4(v54, &qword_1EA905A00);
  sub_1DB0F1454(v67, v199, &qword_1EA905A08);
  uint64_t v70 = v165;
  uint64_t v69 = v166;
  uint64_t v71 = (uint64_t *)(v166 + *(int *)(v165 + 28));
  uint64_t v72 = v71[1];
  uint64_t v211 = *v71;
  uint64_t v212 = v72;
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_1DB1F0930();
  uint64_t v194 = v74;
  uint64_t v195 = v73;
  LOBYTE(v51) = v75;
  uint64_t v167 = v76;
  uint64_t v196 = swift_getKeyPath();
  uint64_t v77 = *MEMORY[0x1E4F3E138];
  uint64_t v78 = v187;
  uint64_t v79 = v188;
  v185(v187, v77, v188);
  uint64_t v80 = (uint64_t)v198;
  v183(v198, 1, 1, v184);
  uint64_t v193 = sub_1DB1F07E0();
  sub_1DB0E8BD4(v80, &qword_1EA9056B8);
  v181(v78, v79);
  v192 = (char *)swift_getKeyPath();
  v191 = (char *)sub_1DB1F0C60();
  uint64_t v190 = swift_getKeyPath();
  LODWORD(v189) = sub_1DB1F06D0();
  sub_1DB1EFAC0();
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  unsigned __int8 v245 = v51 & 1;
  unsigned __int8 v239 = 0;
  uint64_t v89 = (uint64_t *)(v69 + *(int *)(v70 + 32));
  uint64_t v91 = *v89;
  unint64_t v90 = v89[1];
  uint64_t v92 = HIBYTE(v90) & 0xF;
  if ((v90 & 0x2000000000000000) == 0) {
    uint64_t v92 = v91 & 0xFFFFFFFFFFFFLL;
  }
  if (v92)
  {
    uint64_t v211 = v91;
    uint64_t v212 = v90;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v93 = v148;
    sub_1DB1F0D80();
    uint64_t v94 = swift_getKeyPath();
    uint64_t v96 = v149;
    uint64_t v95 = v150;
    uint64_t v97 = (uint64_t)v152;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v152, v93, v150);
    uint64_t v98 = v97 + *(int *)(v151 + 36);
    *(void *)uint64_t v98 = v94;
    *(unsigned char *)(v98 + 8) = 1;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v95);
    uint64_t v99 = v154;
    sub_1DB1F0470();
    sub_1DB1A62EC();
    sub_1DB1A4A60(&qword_1EA905A38, MEMORY[0x1E4F3D8B0]);
    uint64_t v100 = v155;
    uint64_t v101 = v158;
    sub_1DB1F0990();
    (*(void (**)(char *, uint64_t))(v156 + 8))(v99, v101);
    sub_1DB0E8BD4(v97, &qword_1EA9059C8);
    v185(v78, v77, v79);
    uint64_t v102 = (uint64_t)v198;
    v183(v198, 1, 1, v184);
    uint64_t v103 = sub_1DB1F07E0();
    sub_1DB0E8BD4(v102, &qword_1EA9056B8);
    v181(v78, v79);
    uint64_t v104 = swift_getKeyPath();
    uint64_t v105 = v157;
    uint64_t v106 = (uint64_t)v162;
    uint64_t v107 = v159;
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v162, v100, v159);
    unint64_t v108 = (uint64_t *)(v106 + *(int *)(v153 + 36));
    uint64_t *v108 = v104;
    v108[1] = v103;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v100, v107);
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v110 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v111 = sub_1DB1F0C70();
    uint64_t v112 = swift_getKeyPath();
    uint64_t v113 = v163;
    sub_1DB0E8B70(v106, v163, &qword_1EA9059D8);
    long long v114 = (uint64_t *)(v113 + *(int *)(v160 + 36));
    uint64_t *v114 = v112;
    v114[1] = v111;
    sub_1DB0E8BD4(v106, &qword_1EA9059D8);
    LOBYTE(v111) = sub_1DB1F06F0();
    sub_1DB1EFAC0();
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v120 = v119;
    uint64_t v122 = v121;
    uint64_t v123 = v161;
    sub_1DB0E8B70(v113, v161, &qword_1EA9059E0);
    uint64_t v124 = v177;
    uint64_t v125 = v123 + *(int *)(v177 + 36);
    *(unsigned char *)uint64_t v125 = v111;
    *(void *)(v125 + 8) = v116;
    *(void *)(v125 + 16) = v118;
    *(void *)(v125 + 24) = v120;
    *(void *)(v125 + 32) = v122;
    *(unsigned char *)(v125 + 40) = 0;
    sub_1DB0E8BD4(v113, &qword_1EA9059E0);
    uint64_t v126 = v175;
    sub_1DB0F1454(v123, v175, &qword_1EA9059E8);
    uint64_t v127 = 0;
    uint64_t v128 = v124;
  }
  else
  {
    uint64_t v127 = 1;
    uint64_t v126 = v175;
    uint64_t v128 = v177;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v178 + 56))(v126, v127, 1, v128);
  uint64_t v129 = v200;
  sub_1DB0E8B70(v199, v200, &qword_1EA905A08);
  unsigned __int8 v130 = v245;
  LODWORD(v198) = v245;
  LODWORD(v201) = v239;
  sub_1DB0E8B70(v126, v197, &qword_1EA9059F0);
  uint64_t v131 = v180;
  uint64_t *v180 = v179;
  v131[1] = 0;
  *((_WORD *)v131 + 8) = 1;
  uint64_t v132 = KeyPath;
  v131[3] = v173;
  *((unsigned char *)v131 + 32) = v172;
  v131[5] = v171;
  *((unsigned char *)v131 + 48) = v170;
  uint64_t v133 = v168;
  v131[7] = v169;
  v131[8] = v133;
  uint64_t v134 = v176;
  v131[9] = v132;
  v131[10] = v134;
  id v135 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A40);
  sub_1DB0E8B70(v129, (uint64_t)v131 + v135[12], &qword_1EA905A08);
  char v136 = (char *)v131 + v135[16];
  *(void *)&long long v202 = v195;
  *((void *)&v202 + 1) = v194;
  LOBYTE(v203) = v130;
  *(_DWORD *)((char *)&v203 + 1) = *(_DWORD *)v244;
  DWORD1(v203) = *(_DWORD *)&v244[3];
  uint64_t v137 = v167;
  *((void *)&v203 + 1) = v167;
  LOWORD(v204) = 256;
  *(_DWORD *)((char *)&v204 + 2) = v242;
  WORD3(v204) = v243;
  *((void *)&v204 + 1) = v196;
  LOBYTE(v205) = 1;
  DWORD1(v205) = *(_DWORD *)&v241[3];
  *(_DWORD *)((char *)&v205 + 1) = *(_DWORD *)v241;
  *((void *)&v205 + 1) = v192;
  *(void *)&long long v206 = v193;
  *((void *)&v206 + 1) = v190;
  *(void *)&long long v207 = v191;
  BYTE8(v207) = v189;
  *(_DWORD *)((char *)&v207 + 9) = *(_DWORD *)v240;
  HIDWORD(v207) = *(_DWORD *)&v240[3];
  *(void *)&long long v208 = v82;
  *((void *)&v208 + 1) = v84;
  *(void *)&long long v209 = v86;
  *((void *)&v209 + 1) = v88;
  char v138 = v201;
  char v210 = v201;
  long long v139 = v202;
  long long v140 = v203;
  long long v141 = v205;
  *((_OWORD *)v136 + 2) = v204;
  *((_OWORD *)v136 + 3) = v141;
  *(_OWORD *)char v136 = v139;
  *((_OWORD *)v136 + 1) = v140;
  long long v142 = v206;
  long long v143 = v207;
  long long v144 = v208;
  long long v145 = v209;
  v136[128] = v138;
  *((_OWORD *)v136 + 6) = v144;
  *((_OWORD *)v136 + 7) = v145;
  *((_OWORD *)v136 + 4) = v142;
  *((_OWORD *)v136 + 5) = v143;
  uint64_t v146 = v197;
  sub_1DB0E8B70(v197, (uint64_t)v131 + v135[20], &qword_1EA9059F0);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DB1A63B0((uint64_t)&v202);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DB0E8BD4(v126, &qword_1EA9059F0);
  sub_1DB0E8BD4(v199, &qword_1EA905A08);
  swift_release();
  swift_release();
  swift_release();
  sub_1DB0E8BD4(v146, &qword_1EA9059F0);
  uint64_t v211 = v195;
  uint64_t v212 = v194;
  char v213 = (char)v198;
  *(_DWORD *)v214 = *(_DWORD *)v244;
  *(_DWORD *)&v214[3] = *(_DWORD *)&v244[3];
  uint64_t v215 = v137;
  __int16 v216 = 256;
  int v217 = v242;
  __int16 v218 = v243;
  uint64_t v219 = v196;
  char v220 = 1;
  *(_DWORD *)&v221[3] = *(_DWORD *)&v241[3];
  *(_DWORD *)v221 = *(_DWORD *)v241;
  v222 = v192;
  uint64_t v223 = v193;
  uint64_t v224 = v190;
  v225 = v191;
  char v226 = v189;
  *(_DWORD *)&v227[3] = *(_DWORD *)&v240[3];
  *(_DWORD *)v227 = *(_DWORD *)v240;
  uint64_t v228 = v82;
  uint64_t v229 = v84;
  uint64_t v230 = v86;
  uint64_t v231 = v88;
  char v232 = v201;
  sub_1DB1A643C((uint64_t)&v211);
  sub_1DB0E8BD4(v200, &qword_1EA905A08);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DB1A60FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1F0060();
  *a1 = result;
  return result;
}

uint64_t sub_1DB1A6128@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1F0060();
  *a1 = result;
  return result;
}

uint64_t sub_1DB1A6154()
{
  return sub_1DB1F0070();
}

uint64_t sub_1DB1A617C()
{
  return sub_1DB1F0070();
}

unint64_t sub_1DB1A61AC()
{
  unint64_t result = qword_1EA905A18;
  if (!qword_1EA905A18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905A10);
    sub_1DB1A624C();
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905A18);
  }
  return result;
}

unint64_t sub_1DB1A624C()
{
  unint64_t result = qword_1EA905A20;
  if (!qword_1EA905A20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905A28);
    sub_1DB11AD44();
    sub_1DB0E3C44((unint64_t *)&qword_1EA9046A0, &qword_1EA9046A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905A20);
  }
  return result;
}

unint64_t sub_1DB1A62EC()
{
  unint64_t result = qword_1EA905A30;
  if (!qword_1EA905A30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9059C8);
    sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
    sub_1DB0E3C44((unint64_t *)&qword_1EA9046A0, &qword_1EA9046A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905A30);
  }
  return result;
}

uint64_t sub_1DB1A63B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DB1A643C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1DB1A64C8()
{
  unint64_t result = qword_1EA9035B0;
  if (!qword_1EA9035B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA9035B0);
  }
  return result;
}

uint64_t sub_1DB1A6508()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for TranslationUnavailableViewPhone(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for TranslationUnavailableModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB1A6644()
{
  uint64_t v1 = *(void *)(type metadata accessor for TranslationUnavailableViewPhone(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = type metadata accessor for TranslationUnavailableModel(0);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v3 + 36) + v2))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for TranslationUnavailableState(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905A58);
}

uint64_t sub_1DB1A673C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1A67A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1A680C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslationUnavailableState(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A88);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v9[*(int *)(v10 + 56)];
  sub_1DB1A673C(a1, (uint64_t)v9, type metadata accessor for TranslationUnavailableState);
  sub_1DB1A673C(a2, v11, type metadata accessor for TranslationUnavailableState);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  switch(v13((uint64_t)v9, 4, v12))
  {
    case 1u:
      if (v13(v11, 4, v12) != 1) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 2u:
      if (v13(v11, 4, v12) == 2) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 3u:
      if (v13(v11, 4, v12) != 3) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 4u:
      goto LABEL_9;
    default:
      sub_1DB1A673C((uint64_t)v9, (uint64_t)v6, type metadata accessor for TranslationUnavailableState);
      if (v13(v11, 4, v12))
      {
        sub_1DB1A77F0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LocalePair);
LABEL_9:
        sub_1DB0E8BD4((uint64_t)v9, &qword_1EA905A88);
        return 0;
      }
      else
      {
        sub_1DB1A77F0(v11, (uint64_t (*)(void))type metadata accessor for LocalePair);
        sub_1DB1A77F0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LocalePair);
LABEL_11:
        sub_1DB1A77F0((uint64_t)v9, type metadata accessor for TranslationUnavailableState);
        return 1;
      }
  }
}

uint64_t *sub_1DB1A6AB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1DB1EF6B0();
      uint64_t v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      uint64_t v12 = type metadata accessor for LocalePair();
      v11((uint64_t *)((char *)a1 + *(int *)(v12 + 20)), (uint64_t *)((char *)a2 + *(int *)(v12 + 20)), v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_1DB1A6C4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 4, v2);
  if (!result)
  {
    uint64_t v4 = sub_1DB1EF6B0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v4 - 8), a1, v4);
    uint64_t v5 = a1 + *(int *)(type metadata accessor for LocalePair() + 20);
    return v6(v5, v4);
  }
  return result;
}

char *sub_1DB1A6D3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1DB1EF6B0();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    uint64_t v10 = type metadata accessor for LocalePair();
    v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

char *sub_1DB1A6E9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = sub_1DB1EF6B0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24);
      v16(a1, a2, v15);
      uint64_t v17 = type metadata accessor for LocalePair();
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      return a1;
    }
    sub_1DB0E8BD4((uint64_t)a1, &qword_1EA905A48);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(a1, a2, v11);
  uint64_t v13 = type metadata accessor for LocalePair();
  v12(&a1[*(int *)(v13 + 20)], &a2[*(int *)(v13 + 20)], v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

char *sub_1DB1A7098(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1DB1EF6B0();
    int v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    uint64_t v10 = type metadata accessor for LocalePair();
    v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

char *sub_1DB1A71F8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = sub_1DB1EF6B0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40);
      v16(a1, a2, v15);
      uint64_t v17 = type metadata accessor for LocalePair();
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      return a1;
    }
    sub_1DB0E8BD4((uint64_t)a1, &qword_1EA905A48);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(a1, a2, v11);
  uint64_t v13 = type metadata accessor for LocalePair();
  v12(&a1[*(int *)(v13 + 20)], &a2[*(int *)(v13 + 20)], v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1DB1A73F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1A7408);
}

uint64_t sub_1DB1A7408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5) {
    return v5 - 4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DB1A7478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1A748C);
}

uint64_t sub_1DB1A748C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 4);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DB1A7514(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 4, v2);
}

uint64_t sub_1DB1A7580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A48);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 4, v4);
}

uint64_t sub_1DB1A75F4()
{
  uint64_t result = type metadata accessor for LocalePair();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DB1A766C()
{
  return sub_1DB1A76D0(&qword_1EA905A68, &qword_1EA9059C0, (void (*)(void))sub_1DB1A76A8);
}

uint64_t sub_1DB1A76A8()
{
  return sub_1DB1A76D0(&qword_1EA905A70, &qword_1EA9059B0, (void (*)(void))sub_1DB1A7750);
}

uint64_t sub_1DB1A76D0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB1A7750()
{
  unint64_t result = qword_1EA905A78;
  if (!qword_1EA905A78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9059A8);
    sub_1DB0E3C44(&qword_1EA905A80, &qword_1EA9059A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905A78);
  }
  return result;
}

uint64_t sub_1DB1A77F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DB1A7850(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E268);
    uint64_t v2 = (void *)sub_1DB1F1BE0();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = MEMORY[0x1E4FBB390];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1DB0FC3EC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1DB0F138C(v6, v7);
    sub_1DB0F138C(v7, v40);
    sub_1DB0F138C(v40, &v38);
    unint64_t result = sub_1DB1A8C28(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_1DB0F138C(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1DB0F138C(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1DB1A7BAC()
{
  uint64_t v0 = sub_1DB1EFCF0();
  __swift_allocate_value_buffer(v0, qword_1EA90F2A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA90F2A8);
  return sub_1DB1EFCE0();
}

void sub_1DB1A7C10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v38[8] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1DB1EF480();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA903548 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DB1EF810();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EA90F258);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v36 = v9;
  uint64_t v10 = sub_1DB1EF7F0();
  os_log_type_t v11 = sub_1DB1F16F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v35 = a1;
    uint64_t v14 = v13;
    v38[0] = v13;
    uint64_t v34 = a2;
    *(_DWORD *)uint64_t v12 = 136642819;
    sub_1DB1A9570(&qword_1EA905A98, MEMORY[0x1E4F276F0]);
    uint64_t v15 = sub_1DB1F1D80();
    uint64_t v37 = sub_1DB11F638(v15, v16, (uint64_t *)v38);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1DB0DC000, v10, v11, "Opening URL with LaunchServices: %{sensitive}s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v14;
    a1 = v35;
    MEMORY[0x1E018CA60](v17, -1, -1);
    MEMORY[0x1E018CA60](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  LOBYTE(v37) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905A50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DB1F4170;
  *(void *)(inited + 32) = sub_1DB1F1290();
  *(void *)(inited + 40) = v19;
  *(unsigned char *)(inited + 48) = 1;
  unint64_t v20 = sub_1DB0EE6F8(inited);
  id v21 = objc_msgSend(self, sel_defaultWorkspace);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  int64_t v22 = (void *)sub_1DB1EF430();
  sub_1DB1A7850(v20);
  swift_bridgeObjectRelease();
  int64_t v23 = (void *)sub_1DB1F11A0();
  swift_bridgeObjectRelease();
  v38[0] = 0;
  unsigned __int8 v24 = objc_msgSend(v21, sel_openSensitiveURL_withOptions_error_, v22, v23, v38);

  if (v24)
  {
    id v25 = v38[0];
LABEL_10:
    LOBYTE(v37) = v21 != 0;
    goto LABEL_11;
  }
  id v26 = v38[0];
  uint64_t v27 = (void *)sub_1DB1EF420();

  swift_willThrow();
  id v28 = v27;
  BOOL v29 = sub_1DB1EF7F0();
  os_log_type_t v30 = sub_1DB1F1710();
  if (os_log_type_enabled(v29, v30))
  {
    int64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v31 = 138412290;
    int64_t v33 = (void *)sub_1DB1EF410();
    v38[0] = v33;
    sub_1DB1F1910();
    *uint64_t v32 = v33;

    _os_log_impl(&dword_1DB0DC000, v29, v30, "Failed to open URL with LaunchServices: %@", v31, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v32, -1, -1);
    MEMORY[0x1E018CA60](v31, -1, -1);
  }
  else
  {
  }
LABEL_11:
  sub_1DB1EFCD0();
  sub_1DB1A8160(&v37, a1);
}

void sub_1DB1A8160(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF480();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - v9;
  if (*a1 == 1)
  {
    if (qword_1EA903548 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1DB1EF810();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EA90F258);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
    uint64_t v12 = sub_1DB1EF7F0();
    os_log_type_t v13 = sub_1DB1F16F0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = v15;
      *(_DWORD *)uint64_t v14 = 136642819;
      sub_1DB1A9570(&qword_1EA905A98, MEMORY[0x1E4F276F0]);
      uint64_t v16 = sub_1DB1F1D80();
      uint64_t v25 = sub_1DB11F638(v16, v17, &v26);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      _os_log_impl(&dword_1DB0DC000, v12, v13, "Successfully opened URL with LaunchServices: %{sensitive}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v15, -1, -1);
      MEMORY[0x1E018CA60](v14, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  else
  {
    if (qword_1EA903548 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DB1EF810();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EA90F258);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    uint64_t v19 = sub_1DB1EF7F0();
    os_log_type_t v20 = sub_1DB1F16F0();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = v22;
      *(_DWORD *)id v21 = 136642819;
      sub_1DB1A9570(&qword_1EA905A98, MEMORY[0x1E4F276F0]);
      uint64_t v23 = sub_1DB1F1D80();
      uint64_t v25 = sub_1DB11F638(v23, v24, &v26);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_1DB0DC000, v19, v20, "Failed to open URL with LaunchServices: %{sensitive}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v22, -1, -1);
      MEMORY[0x1E018CA60](v21, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1DB1A85F0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA903578 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DB1EFCF0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA90F2A8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t EnvironmentValues.unlockAndOpenURL.getter()
{
  sub_1DB1A86E0();
  return sub_1DB1F0170();
}

unint64_t sub_1DB1A86E0()
{
  unint64_t result = qword_1EA905A90;
  if (!qword_1EA905A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905A90);
  }
  return result;
}

uint64_t sub_1DB1A8734(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFCF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1DB1A86E0();
  sub_1DB1F0180();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t EnvironmentValues.unlockAndOpenURL.setter(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFCF0();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1DB1A86E0();
  sub_1DB1F0180();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*EnvironmentValues.unlockAndOpenURL.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1DB1EFCF0();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = sub_1DB1A86E0();
  sub_1DB1F0170();
  return sub_1DB1A8A64;
}

void sub_1DB1A8A64(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 16) + 16);
  v4(*(void *)(*(void *)a1 + 32), v3[5], v3[1]);
  uint64_t v5 = (void *)v3[5];
  uint64_t v7 = (void *)v3[3];
  size_t v6 = (void *)v3[4];
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  if (a2)
  {
    v4(v3[3], v3[4], v3[1]);
    sub_1DB1F0180();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v6, v8);
    v10(v5, v8);
  }
  else
  {
    sub_1DB1F0180();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v6);
  free(v7);
  free(v3);
}

uint64_t sub_1DB1A8B90()
{
  return sub_1DB1F0170();
}

ValueMetadata *type metadata accessor for UnlockAndOpenURLActionKey()
{
  return &type metadata for UnlockAndOpenURLActionKey;
}

unint64_t sub_1DB1A8BE4(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F1A20();
  return sub_1DB1A8E80(a1, v2);
}

unint64_t sub_1DB1A8C28(uint64_t a1, uint64_t a2)
{
  sub_1DB1F1E80();
  sub_1DB1F1360();
  uint64_t v4 = sub_1DB1F1EC0();
  return sub_1DB1A8F48(a1, a2, v4);
}

unint64_t sub_1DB1A8CA0(uint64_t a1)
{
  sub_1DB1F1290();
  sub_1DB1F1E80();
  sub_1DB1F1360();
  uint64_t v2 = sub_1DB1F1EC0();
  swift_bridgeObjectRelease();
  return sub_1DB1A902C(a1, v2);
}

unint64_t sub_1DB1A8D34(uint64_t a1)
{
  sub_1DB1F1E80();
  sub_1DB1EF570();
  sub_1DB1A9570(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  sub_1DB1F11E0();
  uint64_t v2 = sub_1DB1F1EC0();
  return sub_1DB1A91A4(a1, v2);
}

unint64_t sub_1DB1A8DE8(uint64_t a1)
{
  sub_1DB1EF570();
  sub_1DB1A9570(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  uint64_t v2 = sub_1DB1F11D0();
  return sub_1DB1A93B0(a1, v2);
}

unint64_t sub_1DB1A8E80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1DB1A95B8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1E018BA30](v9, a1);
      sub_1DB0E5240((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1DB1A8F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DB1F1DB0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        os_log_type_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DB1F1DB0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DB1A902C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1DB1F1290();
    uint64_t v8 = v7;
    if (v6 == sub_1DB1F1290() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1DB1F1290();
          uint64_t v15 = v14;
          if (v13 == sub_1DB1F1290() && v15 == v16) {
            break;
          }
          char v18 = sub_1DB1F1DB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1DB1A91A4(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v29);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = v2 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v16 = a2 & ~v15;
  if ((*(void *)(v2 + 64 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v11 + 72);
    uint64_t v28 = a1;
    do
    {
      sub_1DB188E34(*(void *)(v2 + 48) + v18 * v16, (uint64_t)v13);
      char v19 = sub_1DB1EF540();
      sub_1DB188E34((uint64_t)v13, (uint64_t)v9);
      sub_1DB188E34(a1, (uint64_t)v6);
      if (v19)
      {
        uint64_t v20 = v18;
        uint64_t v21 = v17;
        uint64_t v22 = v14;
        uint64_t v23 = v29;
        uint64_t v24 = *(void *)&v9[*(int *)(v29 + 20)];
        sub_1DB188E98((uint64_t)v9);
        uint64_t v25 = *(void *)&v6[*(int *)(v23 + 20)];
        sub_1DB188E98((uint64_t)v6);
        sub_1DB188E98((uint64_t)v13);
        BOOL v26 = v24 == v25;
        uint64_t v14 = v22;
        uint64_t v17 = v21;
        uint64_t v18 = v20;
        a1 = v28;
        if (v26) {
          return v16;
        }
      }
      else
      {
        sub_1DB188E98((uint64_t)v6);
        sub_1DB188E98((uint64_t)v9);
        sub_1DB188E98((uint64_t)v13);
      }
      unint64_t v16 = (v16 + 1) & v17;
    }
    while (((*(void *)(v14 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  }
  return v16;
}

unint64_t sub_1DB1A93B0(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_1DB1EF570();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_1DB1A9570(&qword_1EA904F98, MEMORY[0x1E4F27990]);
      char v16 = sub_1DB1F1230();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1DB1A9570(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1A95B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t static URL.downloadLanguagesURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1A9668(a1);
}

uint64_t static URL.translateSettingsURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1A9668(a1);
}

uint64_t static URL.topLevelSettingsURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1A9668(a1);
}

uint64_t sub_1DB1A9668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF470();
  uint64_t v5 = sub_1DB1EF480();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t static URL.translateAppURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1EF3F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF3E0();
  sub_1DB1EF3D0();
  sub_1DB1EF3C0();
  uint64_t v9 = sub_1DB1EF480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v9);
  }
  return result;
}

uint64_t static URL.translateAppURL(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1EF3F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF3E0();
  sub_1DB1EF3D0();
  swift_bridgeObjectRetain();
  sub_1DB1EF3B0();
  sub_1DB1EF3C0();
  uint64_t v9 = sub_1DB1EF480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v9);
  }
  return result;
}

uint64_t static String.localizedSettingsAppName.getter()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DB1EF400();

  return v2;
}

id NSUserDefaults.onDeviceOnly.getter()
{
  id v1 = (void *)sub_1DB1F1260();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  id v3 = objc_msgSend(self, sel_sharedConnection);
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned int v5 = objc_msgSend(v3, sel_isOnDeviceOnlyTranslationForced);

    return (id)(v5 | v2);
  }
  return v2;
}

uint64_t NSUserDefaults.lastUsedLocaleIdentifier.getter()
{
  id v1 = (void *)sub_1DB1F1260();
  id v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1DB1F1290();

  return v3;
}

uint64_t static NSUserDefaults.Constants.onDeviceOnlyKey.getter()
{
  return 0x6563697665446E4FLL;
}

uint64_t static NSUserDefaults.Constants.firstUseConsentKey.getter()
{
  return 0x6573557473726946;
}

unint64_t static NSUserDefaults.Constants.lastUsedLocaleIdentifierKey.getter()
{
  return 0xD000000000000014;
}

unint64_t static NSUserDefaults.Constants.genderDisambiguationEnabledKey.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static NSUserDefaults.Constants.debugAPIShowLanguageStatus.getter()
{
  return 0xD00000000000001ALL;
}

void static NSUserDefaults.ltuiRegisterDefaults()()
{
  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E270);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DB1F4170;
  *(void *)(inited + 32) = 0xD00000000000001BLL;
  *(void *)(inited + 40) = 0x80000001DB1FD660;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = 1;
  sub_1DB0EE490(inited);
  uint64_t v3 = (void *)sub_1DB1F11A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_registerDefaults_, v3);
}

void sub_1DB1A9E60(void **a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)sub_1DB1F1260();
  unsigned __int8 v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  id v6 = objc_msgSend(self, sel_sharedConnection);
  if (v6)
  {
    uint64_t v7 = v6;
    unsigned __int8 v8 = objc_msgSend(v6, sel_isOnDeviceOnlyTranslationForced);

    v5 |= v8;
  }
  *a2 = v5;
}

void NSUserDefaults.onDeviceOnly.setter(char a1)
{
}

void (*NSUserDefaults.onDeviceOnly.modify(uint64_t a1))(uint64_t a1)
{
  id v2 = v1;
  *(void *)a1 = v2;
  uint64_t v4 = (void *)sub_1DB1F1260();
  unsigned __int8 v5 = objc_msgSend(v2, sel_BOOLForKey_, v4);

  id v6 = objc_msgSend(self, sel_sharedConnection);
  if (v6)
  {
    uint64_t v7 = v6;
    unsigned __int8 v8 = objc_msgSend(v6, sel_isOnDeviceOnlyTranslationForced);

    v5 |= v8;
  }
  *(unsigned char *)(a1 + 8) = v5;
  return sub_1DB1AA00C;
}

void sub_1DB1AA00C(uint64_t a1)
{
}

id NSUserDefaults.firstUseConsent.getter()
{
  id v1 = (void *)sub_1DB1F1260();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void NSUserDefaults.firstUseConsent.setter(char a1)
{
}

void (*NSUserDefaults.firstUseConsent.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t v3 = (void *)sub_1DB1F1260();
  unsigned __int8 v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(unsigned char *)(a1 + 8) = v4;
  return sub_1DB1AA144;
}

void sub_1DB1AA144(uint64_t a1)
{
}

void sub_1DB1AA168(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unsigned __int8 v4 = (void *)sub_1DB1F1260();
  id v5 = objc_msgSend(v3, sel_stringForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1DB1F1290();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

void sub_1DB1AA200(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DB1F1260();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = (id)sub_1DB1F1260();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  swift_unknownObjectRelease();
}

void NSUserDefaults.lastUsedLocaleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = sub_1DB1F1260();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = (id)sub_1DB1F1260();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  swift_unknownObjectRelease();
}

uint64_t (*NSUserDefaults.lastUsedLocaleIdentifier.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  uint64_t v3 = (void *)sub_1DB1F1260();
  id v4 = objc_msgSend(v1, sel_stringForKey_, v3);

  if (v4)
  {
    uint64_t v5 = sub_1DB1F1290();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1DB1AA40C;
}

uint64_t sub_1DB1AA40C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1DB1F1260();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v6 = *(void **)(a1 + 16);
    uint64_t v7 = (void *)sub_1DB1F1260();
    objc_msgSend(v6, sel_setObject_forKey_, v4, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      uint64_t v5 = sub_1DB1F1260();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v8 = *(void **)(a1 + 16);
    uint64_t v7 = (void *)sub_1DB1F1260();
    objc_msgSend(v8, sel_setObject_forKey_, v5, v7);
  }

  return swift_unknownObjectRelease();
}

id NSUserDefaults.genderDisambiguationEnabled.getter()
{
  id v1 = (void *)sub_1DB1F1260();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1DB1AA588(unsigned char *a1, void **a2)
{
  id v2 = *a2;
  if (*a1 == 2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1DB1F1500();
  }
  id v4 = (id)sub_1DB1F1260();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);
  swift_unknownObjectRelease();
}

void NSUserDefaults.genderDisambiguationEnabled.setter(char a1)
{
  if (a1 == 2) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = sub_1DB1F1500();
  }
  id v3 = (id)sub_1DB1F1260();
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);
  swift_unknownObjectRelease();
}

uint64_t (*NSUserDefaults.genderDisambiguationEnabled.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = (void *)sub_1DB1F1260();
  unsigned __int8 v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(unsigned char *)(a1 + 8) = v4;
  return sub_1DB1AA744;
}

uint64_t sub_1DB1AA744(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8) == 2) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = sub_1DB1F1500();
  }
  id v3 = *(void **)a1;
  unsigned __int8 v4 = (void *)sub_1DB1F1260();
  objc_msgSend(v3, sel_setObject_forKey_, v2, v4);

  return swift_unknownObjectRelease();
}

id NSUserDefaults.debugAPIShowLanguageStatus.getter()
{
  id v1 = (void *)sub_1DB1F1260();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void NSUserDefaults.debugAPIShowLanguageStatus.setter(char a1)
{
}

void sub_1DB1AA85C(char a1)
{
  id v3 = (id)sub_1DB1F1260();
  objc_msgSend(v1, sel_setBool_forKey_, a1 & 1, v3);
}

void (*NSUserDefaults.debugAPIShowLanguageStatus.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = (void *)sub_1DB1F1260();
  unsigned __int8 v4 = objc_msgSend(v1, sel_BOOLForKey_, v3);

  *(unsigned char *)(a1 + 8) = v4;
  return sub_1DB1AA948;
}

void sub_1DB1AA948(uint64_t a1)
{
}

void sub_1DB1AA964(uint64_t a1)
{
  id v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(a1 + 8);
  id v3 = (id)sub_1DB1F1260();
  objc_msgSend(v1, sel_setBool_forKey_, v2, v3);
}

void _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - v7;
  id v9 = objc_msgSend(self, sel_defaultManager);
  uint64_t v10 = (void *)sub_1DB1F1260();
  id v11 = objc_msgSend(v9, sel_containerURLForSecurityApplicationGroupIdentifier_, v10);

  if (v11)
  {
    sub_1DB1EF450();

    uint64_t v12 = sub_1DB1EF480();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 0, 1, v12);
  }
  else
  {
    uint64_t v12 = sub_1DB1EF480();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
  }
  sub_1DB169E8C((uint64_t)v5, (uint64_t)v8);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CB18]), sel_init);
  uint64_t v14 = (void *)sub_1DB1F1260();
  sub_1DB1693CC((uint64_t)v8, (uint64_t)v2);
  sub_1DB1EF480();
  uint64_t v15 = *(void *)(v12 - 8);
  char v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v2, 1, v12) != 1)
  {
    char v16 = (void *)sub_1DB1EF430();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v12);
  }
  id v17 = objc_msgSend(v13, sel__initWithSuiteName_container_, v14, v16);

  if (v17) {
    sub_1DB1AAE70((uint64_t)v8);
  }
  else {
    __break(1u);
  }
}

void sub_1DB1AAC84(unsigned __int8 *a1, void **a2)
{
}

void sub_1DB1AACA4(void **a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_1DB1AACC8(unsigned __int8 *a1, void **a2)
{
}

void sub_1DB1AACF4(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)sub_1DB1F1260();
  LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);

  *a2 = (_BYTE)v3;
}

void sub_1DB1AAD64(void **a1@<X0>, unsigned char *a2@<X8>)
{
}

void keypath_get_3Tm(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)sub_1DB1F1260();
  LOBYTE(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);

  *a2 = (_BYTE)v3;
}

void sub_1DB1AADDC(unsigned __int8 *a1, void **a2)
{
}

void keypath_setTm(unsigned __int8 *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  id v4 = (id)sub_1DB1F1260();
  objc_msgSend(v3, sel_setBool_forKey_, v2, v4);
}

ValueMetadata *type metadata accessor for NSUserDefaults.Constants()
{
  return &type metadata for NSUserDefaults.Constants;
}

uint64_t sub_1DB1AAE70(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB1AAED0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v90 = &v69[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v4 = (int *)type metadata accessor for TextModel();
  uint64_t v79 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v91 = &v69[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v69[-v7];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = &v69[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v72 = &v69[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v70 = &v69[-v16];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  uint64_t v84 = *(void *)(v17 - 8);
  uint64_t v85 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v74 = &v69[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  uint64_t v87 = &v69[-v20];
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = &v69[-v22];
  MEMORY[0x1F4188790](v24);
  uint64_t v83 = &v69[-v25];
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v75 = a1 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  uint64_t v82 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v71 = v13;
  int64_t v80 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v81 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v86 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  unint64_t v73 = MEMORY[0x1E4FBC860];
  uint64_t v77 = v12;
  uint64_t v78 = v11;
  uint64_t v76 = v23;
LABEL_4:
  if (v29)
  {
LABEL_5:
    int64_t v88 = v31;
    uint64_t v89 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v31 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v33 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v33 >= v80) {
      goto LABEL_48;
    }
    unint64_t v34 = *(void *)(v75 + 8 * v33);
    int64_t v35 = v31 + 1;
    if (!v34)
    {
      int64_t v35 = v31 + 2;
      if (v31 + 2 >= v80) {
        goto LABEL_48;
      }
      unint64_t v34 = *(void *)(v75 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = v31 + 3;
        if (v31 + 3 >= v80) {
          goto LABEL_48;
        }
        unint64_t v34 = *(void *)(v75 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = v31 + 4;
          if (v31 + 4 >= v80) {
            goto LABEL_48;
          }
          unint64_t v34 = *(void *)(v75 + 8 * v35);
          if (!v34)
          {
            uint64_t v36 = v31 + 5;
            if (v31 + 5 >= v80)
            {
LABEL_48:
              swift_release();
              return v73;
            }
            unint64_t v34 = *(void *)(v75 + 8 * v36);
            int64_t v35 = v31 + 5;
            if (!v34) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    int64_t v88 = v35;
    uint64_t v89 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_21:
    uint64_t v37 = v83;
    sub_1DB0E8B70(*(void *)(v86 + 56) + *(void *)(v84 + 72) * v32, (uint64_t)v83, &qword_1EA903B10);
    sub_1DB1ADBB0((uint64_t)v37, (uint64_t)v23);
    uint64_t v38 = *(int *)(v85 + 48);
    uint64_t v39 = v87;
    sub_1DB1ACE80((uint64_t)v23, (uint64_t)v87, type metadata accessor for VisualTranslationModel);
    uint64_t v40 = v39;
    *(void *)&v39[v38] = *(void *)&v23[v38];
    uint64_t v41 = *(void *)&v39[*(int *)(v12 + 28)];
    uint64_t v42 = (uint64_t)v23;
    uint64_t v43 = *(void *)(v41 + 16);
    if (v43)
    {
      uint64_t v44 = v79;
      uint64_t v45 = v41 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      swift_bridgeObjectRetain();
      uint64_t v46 = *(void *)(v44 + 72);
      while (1)
      {
        sub_1DB1ACE80(v45, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TextModel);
        if (*(void *)&v8[v4[11]]) {
          break;
        }
        uint64_t v47 = (uint64_t *)&v8[v4[6]];
        uint64_t v49 = *v47;
        unint64_t v48 = v47[1];
        uint64_t v50 = v49 & 0xFFFFFFFFFFFFLL;
        if (!((v48 & 0x2000000000000000) != 0 ? HIBYTE(v48) & 0xF : v50)) {
          break;
        }
        uint64_t v52 = v90;
        sub_1DB0E8B70((uint64_t)&v8[v4[7]], (uint64_t)v90, &qword_1EBA4E570);
        uint64_t v53 = sub_1DB1EF6B0();
        int v54 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53);
        sub_1DB0E8BD4((uint64_t)v52, &qword_1EBA4E570);
        if (v54 == 1) {
          break;
        }
        uint64_t v55 = &v8[v4[8]];
        unint64_t v56 = v55[1];
        if (!v56) {
          break;
        }
        uint64_t v57 = *v55 & 0xFFFFFFFFFFFFLL;
        if (!((v56 & 0x2000000000000000) != 0 ? HIBYTE(v56) & 0xF : v57)) {
          break;
        }
        uint64_t v59 = v91;
        sub_1DB1ACE80((uint64_t)v8, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v60 = *(void *)&v59[v4[11]];
        sub_1DB1ADB50((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB1ADB50((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TextModel);
        if (v60) {
          goto LABEL_39;
        }
        v45 += v46;
        if (!--v43)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = v77;
          id v11 = v78;
          uint64_t v40 = v87;
          uint64_t v42 = (uint64_t)v76;
          goto LABEL_37;
        }
      }
      uint64_t v63 = v91;
      sub_1DB1ACE80((uint64_t)v8, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB1ADB50((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB1ADB50((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TextModel);
LABEL_39:
      swift_bridgeObjectRelease();
      sub_1DB1ADB50((uint64_t)v87, type metadata accessor for VisualTranslationModel);
      uint64_t v62 = 1;
      uint64_t v12 = v77;
      id v11 = v78;
      uint64_t v23 = v76;
    }
    else
    {
LABEL_37:
      sub_1DB1ADB50((uint64_t)v40, type metadata accessor for VisualTranslationModel);
      uint64_t v61 = v74;
      sub_1DB1ACE80(v42, (uint64_t)v74, type metadata accessor for VisualTranslationModel);
      sub_1DB0F13EC((uint64_t)v61, (uint64_t)v11, type metadata accessor for VisualTranslationModel);
      uint64_t v62 = 0;
      uint64_t v23 = (unsigned char *)v42;
    }
    int64_t v31 = v88;
    (*v82)(v11, v62, 1, v12);
    sub_1DB0E8BD4((uint64_t)v23, &qword_1EA903B10);
    if ((*v81)(v11, 1, v12) != 1)
    {
      uint64_t v64 = v70;
      sub_1DB0F13EC((uint64_t)v11, (uint64_t)v70, type metadata accessor for VisualTranslationModel);
      sub_1DB0F13EC((uint64_t)v64, (uint64_t)v72, type metadata accessor for VisualTranslationModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v73 = sub_1DB188C74(0, *(void *)(v73 + 16) + 1, 1, v73);
      }
      unint64_t v66 = *(void *)(v73 + 16);
      unint64_t v65 = *(void *)(v73 + 24);
      if (v66 >= v65 >> 1) {
        unint64_t v73 = sub_1DB188C74(v65 > 1, v66 + 1, 1, v73);
      }
      uint64_t v67 = v72;
      unint64_t v68 = v73;
      *(void *)(v73 + 16) = v66 + 1;
      uint64_t result = sub_1DB0F13EC((uint64_t)v67, v68+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v66, type metadata accessor for VisualTranslationModel);
      unint64_t v29 = v89;
      goto LABEL_4;
    }
    uint64_t result = sub_1DB0E8BD4((uint64_t)v11, &qword_1EBA4E458);
    unint64_t v29 = v89;
    if (v89) {
      goto LABEL_5;
    }
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v80) {
      goto LABEL_48;
    }
    unint64_t v34 = *(void *)(v75 + 8 * v35);
    ++v36;
    if (v34) {
      goto LABEL_20;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1DB1AB790(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049E0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v62 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v70 = (char *)&v57 - v8;
  uint64_t v58 = type metadata accessor for TextModel();
  uint64_t v73 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v71 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905AA0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DB1EF570();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v66 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  uint64_t v68 = v14 + 16;
  v67((char *)&v57 - v18, a1, v13, v17);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  uint64_t v21 = *(int *)(v20 + 48);
  sub_1DB1ACE80(a1, (uint64_t)v12, type metadata accessor for VisualTranslationModel);
  uint64_t v22 = *(int *)(type metadata accessor for VisualTranslationModel(0) + 28);
  uint64_t v69 = a1;
  uint64_t v23 = *(void *)(a1 + v22);
  *(void *)&v12[v21] = *(void *)(v23 + 16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 0, 1, v20);
  swift_beginAccess();
  uint64_t v24 = (uint64_t)v19;
  uint64_t v25 = v23;
  sub_1DB1D31A8((uint64_t)v12, v24);
  uint64_t result = swift_endAccess();
  uint64_t v27 = *(void *)(v23 + 16);
  if (!v27) {
    return result;
  }
  uint64_t v60 = v2;
  uint64_t v28 = v73;
  uint64_t v29 = v25 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
  os_log_type_t v30 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  uint64_t v72 = *(void *)(v28 + 72);
  uint64_t v73 = v14 + 56;
  uint64_t v64 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  unint64_t v65 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  uint64_t v61 = v14 + 40;
  uint64_t v59 = v25;
  swift_bridgeObjectRetain();
  uint64_t v31 = (uint64_t)v62;
  uint64_t v32 = (uint64_t)v70;
  uint64_t v33 = v71;
  uint64_t v63 = v14;
  while (1)
  {
    sub_1DB1ACE80(v29, v33, (uint64_t (*)(void))type metadata accessor for TextModel);
    ((void (*)(uint64_t, uint64_t, uint64_t))v67)(v32, v69, v13);
    int64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v73;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v73)(v32, 0, 1, v13);
    if ((*v65)(v32, 1, v13) == 1)
    {
      sub_1DB0E8BD4(v32, &qword_1EA9049E0);
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_1DB1A8D34(v33);
      char v38 = v37;
      swift_bridgeObjectRelease();
      if (v38)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v40 = *v30;
        uint64_t v74 = (void *)*v30;
        *os_log_type_t v30 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1DB0F9930();
          uint64_t v40 = (uint64_t)v74;
        }
        sub_1DB1ADB50(*(void *)(v40 + 48) + v36 * v72, (uint64_t (*)(void))type metadata accessor for TextModel);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v63 + 32))(v31, *(void *)(v40 + 56) + *(void *)(v63 + 72) * v36, v13);
        sub_1DB1E391C(v36, v40);
        *os_log_type_t v30 = v40;
        swift_bridgeObjectRelease();
        uint64_t v34 = 0;
      }
      else
      {
        uint64_t v34 = 1;
      }
      uint64_t v33 = v71;
      v35(v31, v34, 1, v13);
      sub_1DB1ADB50(v33, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB0E8BD4(v31, &qword_1EA9049E0);
      goto LABEL_5;
    }
    uint64_t v41 = *v64;
    (*v64)(v66, v32, v13);
    int v42 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v74 = (void *)*v30;
    uint64_t v43 = v74;
    *os_log_type_t v30 = 0x8000000000000000;
    unint64_t v45 = sub_1DB1A8D34(v33);
    uint64_t v46 = v43[2];
    BOOL v47 = (v44 & 1) == 0;
    uint64_t v48 = v46 + v47;
    if (__OFADD__(v46, v47)) {
      break;
    }
    char v49 = v44;
    if (v43[3] >= v48)
    {
      if ((v42 & 1) == 0) {
        sub_1DB0F9930();
      }
    }
    else
    {
      sub_1DB0F8218(v48, v42);
      unint64_t v50 = sub_1DB1A8D34(v71);
      if ((v49 & 1) != (v51 & 1)) {
        goto LABEL_26;
      }
      unint64_t v45 = v50;
    }
    uint64_t v52 = v63;
    uint64_t v53 = v74;
    if (v49)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v63 + 40))(v74[7] + *(void *)(v63 + 72) * v45, v66, v13);
      uint64_t v33 = v71;
    }
    else
    {
      v74[(v45 >> 6) + 8] |= 1 << v45;
      uint64_t v33 = v71;
      sub_1DB1ACE80(v71, v53[6] + v45 * v72, (uint64_t (*)(void))type metadata accessor for TextModel);
      v41((char *)(v53[7] + *(void *)(v52 + 72) * v45), (uint64_t)v66, v13);
      uint64_t v54 = v53[2];
      BOOL v55 = __OFADD__(v54, 1);
      uint64_t v56 = v54 + 1;
      if (v55) {
        goto LABEL_25;
      }
      v53[2] = v56;
    }
    *os_log_type_t v30 = (uint64_t)v74;
    swift_bridgeObjectRelease();
    sub_1DB1ADB50(v33, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v31 = (uint64_t)v62;
LABEL_5:
    uint64_t v32 = (uint64_t)v70;
    v29 += v72;
    if (!--v27)
    {
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_1DB1F1E00();
  __break(1u);
  return result;
}

uint64_t sub_1DB1ABE84()
{
  uint64_t v1 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  id v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1DB1EF570();
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DB1AAED0(v8);
  swift_bridgeObjectRelease();
  int64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  int64_t v30 = v10;
  if (v10)
  {
    v27[1] = 0;
    uint64_t v28 = v0;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1DB12EAB0(0, v10, 0);
    unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v29 = v9;
    uint64_t v13 = v9 + v12;
    uint64_t v14 = *(void *)(v2 + 72);
    uint64_t v32 = v5 + 32;
    uint64_t v33 = v14;
    int64_t v15 = v10;
    uint64_t v16 = v31;
    do
    {
      sub_1DB1ACE80(v13, (uint64_t)v4, type metadata accessor for VisualTranslationModel);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v4, v16);
      sub_1DB1ADB50((uint64_t)v4, type metadata accessor for VisualTranslationModel);
      uint64_t v11 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12EAB0(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v16 = v31;
        uint64_t v11 = v35;
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1DB12EAB0(v17 > 1, v18 + 1, 1);
        uint64_t v16 = v31;
        uint64_t v11 = v35;
      }
      *(void *)(v11 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v18, v7, v16);
      uint64_t v35 = v11;
      v13 += v33;
      --v15;
    }
    while (v15);
    uint64_t v0 = v28;
    uint64_t v9 = v29;
  }
  uint64_t v19 = sub_1DB130164(v11);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1DB1AD950(v20, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(void *)(v0 + 24) = v21;
  swift_bridgeObjectRelease();
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1DB1EF810();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EBA4F408);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1DB1EF7F0();
  os_log_type_t v24 = sub_1DB1F1700();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134217984;
    int64_t v34 = v30;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v23, v24, "Prune visual models: %ld", v25, 0xCu);
    MEMORY[0x1E018CA60](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v9;
}

size_t sub_1DB1AC2C0()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  size_t v1 = sub_1DB1E2DC4(v0);
  swift_bridgeObjectRelease();
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DB1EF810();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBA4F408);
  swift_retain();
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F1700();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    sub_1DB1F1910();
    swift_release();
    _os_log_impl(&dword_1DB0DC000, v3, v4, "Mux text models: %ld", v5, 0xCu);
    MEMORY[0x1E018CA60](v5, -1, -1);
  }
  else
  {

    swift_release();
  }
  return v1;
}

uint64_t sub_1DB1AC428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v89 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905AA0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v83 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v8 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v84 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v87 = (unint64_t)&v75 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049E0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DB1EF570();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  int64_t v88 = (char *)&v75 - v22;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v2 + 24);
  if (!*(void *)(v23 + 16) || (unint64_t v24 = sub_1DB1A8D34(a1), (v25 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_14;
  }
  unint64_t v26 = *(void *)(v23 + 56) + *(void *)(v18 + 72) * v24;
  uint64_t v82 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
  v82(v16, v26, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_14:
    sub_1DB0E8BD4((uint64_t)v16, &qword_1EA9049E0);
    swift_endAccess();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v8 + 56))(v89, 1, 1, v7);
  }
  uint64_t v81 = v18 + 16;
  uint64_t v27 = (uint64_t)v88;
  (*(void (**)(void))(v18 + 32))();
  swift_endAccess();
  uint64_t v80 = v3 + 16;
  swift_beginAccess();
  uint64_t v28 = *(void *)(v3 + 16);
  if (!*(void *)(v28 + 16) || (unint64_t v29 = sub_1DB1A8DE8(v27), (v30 & 1) == 0))
  {
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v27, v17);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v8 + 56))(v89, 1, 1, v7);
  }
  uint64_t v31 = v86;
  uint64_t v32 = *(int *)(v86 + 48);
  sub_1DB0E8B70(*(void *)(v28 + 56) + *(void *)(v85 + 72) * v29, (uint64_t)v11, &qword_1EA903B10);
  uint64_t v33 = *(int *)(v31 + 48);
  uint64_t v34 = v87;
  sub_1DB0F13EC((uint64_t)v11, v87, type metadata accessor for VisualTranslationModel);
  uint64_t v35 = *(void *)&v11[v33];
  swift_endAccess();
  if (__OFSUB__(v35, 1))
  {
    __break(1u);
LABEL_25:
    swift_once();
    goto LABEL_21;
  }
  uint64_t v77 = v35 - 1;
  *(void *)(v34 + v32) = v35 - 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4E0);
  uint64_t v36 = type metadata accessor for TextModel();
  unint64_t v37 = (*(unsigned __int8 *)(*(void *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v36 - 8) + 80);
  unint64_t v76 = *(void *)(*(void *)(v36 - 8) + 72);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1DB1F4170;
  unint64_t v75 = v37;
  uint64_t v39 = v38 + v37;
  sub_1DB1ACE80(a1, v39, (uint64_t (*)(void))type metadata accessor for TextModel);
  unint64_t v40 = *(void *)(v34 + v7[7]);
  uint64_t v78 = v36;
  uint64_t v41 = *(int *)(v36 + 20);
  uint64_t v79 = v39;
  unint64_t v42 = *(void *)(v39 + v41);
  if ((v42 & 0x8000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v43 = *(void *)(v40 + 16);
    swift_bridgeObjectRetain();
    if ((uint64_t)v42 < v43)
    {
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1DB188FC0(v40);
        unint64_t v40 = result;
      }
      if (v42 >= *(void *)(v40 + 16))
      {
        __break(1u);
        return result;
      }
      sub_1DB189018(v79, v40 + v75 + v42 * v76);
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v76 = v40;
  unint64_t v45 = v84;
  uint64_t v34 = v87;
  v82(v84, v87, v17);
  uint64_t v46 = v34 + v7[5];
  long long v47 = *(_OWORD *)(v46 + 128);
  long long v48 = *(_OWORD *)(v46 + 144);
  long long v49 = *(_OWORD *)(v46 + 96);
  long long v97 = *(_OWORD *)(v46 + 112);
  long long v98 = v47;
  long long v99 = v48;
  uint64_t v100 = *(void *)(v46 + 160);
  long long v50 = *(_OWORD *)(v46 + 80);
  long long v94 = *(_OWORD *)(v46 + 64);
  long long v95 = v50;
  long long v96 = v49;
  long long v51 = *(_OWORD *)(v46 + 48);
  long long v92 = *(_OWORD *)(v46 + 32);
  long long v93 = v51;
  long long v52 = *(_OWORD *)v46;
  long long v91 = *(_OWORD *)(v46 + 16);
  long long v90 = v52;
  uint64_t v53 = v7[6];
  uint64_t v54 = v34 + v53;
  BOOL v55 = &v45[v53];
  uint64_t v56 = sub_1DB1EF520();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v55, v54, v56);
  swift_setDeallocating();
  uint64_t v32 = (uint64_t)v45;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v57 = *(void *)(v34 + v7[8]);
  char v58 = *(unsigned char *)(v34 + v7[9]);
  char v59 = *(unsigned char *)(v34 + v7[10]);
  uint64_t v60 = &v45[v7[5]];
  long long v61 = v97;
  long long v62 = v99;
  *((_OWORD *)v60 + 8) = v98;
  *((_OWORD *)v60 + 9) = v62;
  *((void *)v60 + 20) = v100;
  long long v63 = v95;
  *((_OWORD *)v60 + 4) = v94;
  *((_OWORD *)v60 + 5) = v63;
  *((_OWORD *)v60 + 6) = v96;
  *((_OWORD *)v60 + 7) = v61;
  long long v64 = v91;
  *(_OWORD *)uint64_t v60 = v90;
  *((_OWORD *)v60 + 1) = v64;
  long long v65 = v93;
  *((_OWORD *)v60 + 2) = v92;
  *((_OWORD *)v60 + 3) = v65;
  *(void *)&v45[v7[7]] = v76;
  *(void *)&v45[v7[8]] = v57;
  v45[v7[9]] = v58;
  v45[v7[10]] = v59;
  v45[v7[11]] = 0;
  if (v77 > 0)
  {
    uint64_t v66 = v77;
    v82(v20, (unint64_t)v88, v17);
    uint64_t v67 = v86;
    uint64_t v68 = *(int *)(v86 + 48);
    uint64_t v69 = v83;
    sub_1DB1ACE80(v32, v83, type metadata accessor for VisualTranslationModel);
    *(void *)(v69 + v68) = v66;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v69, 0, 1, v67);
    swift_beginAccess();
    sub_1DB1D31A8(v69, (uint64_t)v20);
    swift_endAccess();
    sub_1DB1ADB50(v32, type metadata accessor for VisualTranslationModel);
    sub_1DB0E8BD4(v87, &qword_1EA903B10);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v88, v17);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v8 + 56))(v89, 1, 1, v7);
  }
  if (qword_1EBA4E578 != -1) {
    goto LABEL_25;
  }
LABEL_21:
  uint64_t v70 = sub_1DB1EF810();
  __swift_project_value_buffer(v70, (uint64_t)qword_1EBA4F408);
  uint64_t v71 = sub_1DB1EF7F0();
  os_log_type_t v72 = sub_1DB1F1700();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v73 = 0;
    _os_log_impl(&dword_1DB0DC000, v71, v72, "Demuxed visual model", v73, 2u);
    MEMORY[0x1E018CA60](v73, -1, -1);
  }

  sub_1DB0E8BD4(v34, &qword_1EA903B10);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v88, v17);
  uint64_t v74 = v89;
  sub_1DB0F13EC(v32, v89, type metadata accessor for VisualTranslationModel);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v8 + 56))(v74, 0, 1, v7);
}

uint64_t sub_1DB1ACE1C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisualTranslationBatch()
{
  return self;
}

uint64_t sub_1DB1ACE80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1ACEE8(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v57 = sub_1DB1EF570();
  uint64_t v52 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  long long v51 = (char *)&v44 - v10;
  uint64_t v11 = type metadata accessor for TextModel();
  uint64_t v50 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v55 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v49 = (uint64_t)&v44 - v14;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B00);
  uint64_t result = sub_1DB1F1BE0();
  uint64_t v16 = result;
  uint64_t v46 = a2;
  unint64_t v45 = a1;
  if (a2 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *a1;
  }
  uint64_t v18 = 0;
  long long v47 = a4;
  uint64_t v48 = v52 + 16;
  uint64_t v54 = v52 + 32;
  uint64_t v19 = result + 64;
  uint64_t v20 = v57;
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      uint64_t v53 = v18;
      unint64_t v22 = v21 | (v18 << 6);
    }
    else
    {
      uint64_t v23 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      if (v23 >= v46) {
        return v16;
      }
      unint64_t v24 = v45[v23];
      uint64_t v25 = v18 + 1;
      if (!v24)
      {
        uint64_t v25 = v18 + 2;
        if (v18 + 2 >= v46) {
          return v16;
        }
        unint64_t v24 = v45[v25];
        if (!v24)
        {
          uint64_t v25 = v18 + 3;
          if (v18 + 3 >= v46) {
            return v16;
          }
          unint64_t v24 = v45[v25];
          if (!v24)
          {
            uint64_t v26 = v18 + 4;
            if (v18 + 4 >= v46) {
              return v16;
            }
            unint64_t v24 = v45[v26];
            if (!v24)
            {
              while (1)
              {
                uint64_t v25 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v25 >= v46) {
                  return v16;
                }
                unint64_t v24 = v45[v25];
                ++v26;
                if (v24) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v25 = v18 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v17 = (v24 - 1) & v24;
      uint64_t v53 = v25;
      unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    uint64_t v27 = v49;
    uint64_t v28 = *(void *)(v50 + 72);
    sub_1DB1ACE80(a4[6] + v28 * v22, v49, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v29 = a4[7];
    uint64_t v30 = v52;
    uint64_t v31 = *(void *)(v52 + 72);
    uint64_t v32 = v29 + v31 * v22;
    uint64_t v33 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v32, v20);
    sub_1DB0F13EC(v27, v55, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v34(v56, v33, v20);
    sub_1DB1F1E80();
    sub_1DB1ADB0C(&qword_1EBA4D9F8);
    sub_1DB1F11E0();
    uint64_t result = sub_1DB1F1EC0();
    uint64_t v35 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v38 = __clz(__rbit64((-1 << v36) & ~*(void *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v41 = v37 == v40;
        if (v37 == v40) {
          unint64_t v37 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v19 + 8 * v37);
      }
      while (v42 == -1);
      unint64_t v38 = __clz(__rbit64(~v42)) + (v37 << 6);
    }
    *(void *)(v19 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    sub_1DB0F13EC(v55, *(void *)(v16 + 48) + v38 * v28, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v34)(*(void *)(v16 + 56) + v38 * v31, v56, v57);
    ++*(void *)(v16 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v47;
    uint64_t v18 = v53;
    if (!a3) {
      return v16;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1DB1AD3C0(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v44 = a2;
  unint64_t v45 = a1;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905AA8);
  MEMORY[0x1F4188790](v52);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1EF570();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v58 = (char *)&v43 - v13;
  uint64_t v14 = type metadata accessor for TextModel();
  uint64_t v50 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a3;
  uint64_t v54 = 0;
  int64_t v17 = 0;
  uint64_t v20 = a3[8];
  uint64_t v19 = a3 + 8;
  uint64_t v18 = v20;
  uint64_t v21 = 1 << *((unsigned char *)v19 - 32);
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v18;
  uint64_t v46 = v19;
  int64_t v47 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v62 = a4;
  uint64_t v59 = a4 + 56;
  uint64_t v51 = v9;
  uint64_t v60 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v61 = v9 + 16;
  uint64_t v48 = v16;
  uint64_t v49 = v7;
  while (1)
  {
    if (v23)
    {
      uint64_t v56 = (v23 - 1) & v23;
      int64_t v57 = v17;
      unint64_t v24 = __clz(__rbit64(v23)) | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v25 >= v47) {
      goto LABEL_30;
    }
    unint64_t v26 = v46[v25];
    int64_t v27 = v17 + 1;
    if (!v26)
    {
      int64_t v27 = v17 + 2;
      if (v17 + 2 >= v47) {
        goto LABEL_30;
      }
      unint64_t v26 = v46[v27];
      if (!v26)
      {
        int64_t v27 = v17 + 3;
        if (v17 + 3 >= v47) {
          goto LABEL_30;
        }
        unint64_t v26 = v46[v27];
        if (!v26) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v56 = (v26 - 1) & v26;
    int64_t v57 = v27;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_22:
    uint64_t v29 = v53;
    sub_1DB1ACE80(v53[6] + *(void *)(v50 + 72) * v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v30 = v29[7];
    uint64_t v31 = *(void *)(v51 + 72);
    unint64_t v55 = v24;
    uint64_t v32 = v30 + v31 * v24;
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
    uint64_t v34 = v58;
    v33(v58, v32, v8);
    sub_1DB1ACE80((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextModel);
    v33(&v7[*(int *)(v52 + 48)], (uint64_t)v34, v8);
    if (*(void *)(v62 + 16)
      && (uint64_t v35 = v62,
          sub_1DB1ADB0C(&qword_1EBA4D9F8),
          uint64_t v36 = sub_1DB1F11D0(),
          uint64_t v37 = -1 << *(unsigned char *)(v35 + 32),
          unint64_t v38 = v36 & ~v37,
          ((*(void *)(v59 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) != 0))
    {
      uint64_t v39 = ~v37;
      while (1)
      {
        v33(v11, *(void *)(v62 + 48) + v38 * v31, v8);
        sub_1DB1ADB0C(&qword_1EA904F98);
        char v40 = sub_1DB1F1230();
        BOOL v41 = *v60;
        (*v60)(v11, v8);
        if (v40) {
          break;
        }
        unint64_t v38 = (v38 + 1) & v39;
        if (((*(void *)(v59 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
          goto LABEL_27;
        }
      }
      uint64_t v7 = v49;
      sub_1DB0E8BD4((uint64_t)v49, &qword_1EA905AA8);
      v41(v58, v8);
      uint64_t v16 = v48;
      sub_1DB1ADB50((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for TextModel);
      unint64_t v23 = v56;
      int64_t v17 = v57;
    }
    else
    {
LABEL_27:
      uint64_t v7 = v49;
      sub_1DB0E8BD4((uint64_t)v49, &qword_1EA905AA8);
      (*v60)(v58, v8);
      uint64_t v16 = v48;
      sub_1DB1ADB50((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for TextModel);
      *(unint64_t *)((char *)v45 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      BOOL v42 = __OFADD__(v54++, 1);
      unint64_t v23 = v56;
      int64_t v17 = v57;
      if (v42)
      {
        __break(1u);
LABEL_30:
        sub_1DB1ACEE8(v45, v44, v54, v53);
        return;
      }
    }
  }
  uint64_t v28 = v17 + 4;
  if (v17 + 4 >= v47) {
    goto LABEL_30;
  }
  unint64_t v26 = v46[v28];
  if (v26)
  {
    int64_t v27 = v17 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v47) {
      goto LABEL_30;
    }
    unint64_t v26 = v46[v27];
    ++v28;
    if (v26) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1DB1AD950(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1DB1AD3C0((void *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, (void *)a1, a2);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_1DB1AD3C0((unint64_t *)v12, v7, (void *)a1, a2);
    uint64_t v11 = v13;
    swift_bridgeObjectRelease();
    MEMORY[0x1E018CA60](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_1DB1ADB0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DB1EF570();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1ADB50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB1ADBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1ADC18()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1ADCA0()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1ADDE4()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1ADE64()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1ADF54(unsigned __int8 *a1, char *a2)
{
  return sub_1DB162498(*a1, *a2);
}

uint64_t sub_1DB1ADF60()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1AE048()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1AE118()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1AE1FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1B08CC();
  *a1 = result;
  return result;
}

void sub_1DB1AE234(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x7466654C706F74;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7468676952706F74;
      goto LABEL_3;
    case 2:
      *a1 = 0x654C6D6F74746F62;
      a1[1] = 0xEA00000000007466;
      break;
    case 3:
      *a1 = 0x69526D6F74746F62;
      a1[1] = 0xEB00000000746867;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DB1AE2DC()
{
  uint64_t result = 0x7466654C706F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7468676952706F74;
      break;
    case 2:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 3:
      uint64_t result = 0x69526D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB1AE378@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1B08CC();
  *a1 = result;
  return result;
}

uint64_t sub_1DB1AE3A8(uint64_t a1)
{
  unint64_t v2 = sub_1DB1B0914();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1AE3E4(uint64_t a1)
{
  unint64_t v2 = sub_1DB1B0914();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1DB1AE420()
{
  double v1 = v0[2];
  double v2 = v0[3];
  double v3 = *v0;
  double v4 = v0[1];
  double v5 = CGPointMake(v1 - *v0, v2 - v4);
  double v7 = v6;
  double v8 = v0[4];
  double v9 = v0[5];
  double v10 = CGPointMake(v8 - v3, v9 - v4);
  double v20 = vabdd_f64(v5 * v11, v7 * v10) * 0.5;
  double v12 = v0[6];
  double v13 = v0[7];
  double v14 = CGPointMake(v1 - v12, v2 - v13);
  double v16 = v15;
  double v17 = CGPointMake(v8 - v12, v9 - v13);
  return v20 + vabdd_f64(v14 * v18, v16 * v17) * 0.5;
}

uint64_t sub_1DB1AE4E0()
{
  double v1 = 1.0;
  if (*v0 >= -1.0 && *v0 <= 1.0)
  {
    double v3 = v0[1];
    if (v3 >= -1.0 && v3 <= 1.0) {
      return 1;
    }
  }
  double v5 = v0[2];
  if (v5 >= -1.0 && v5 <= 1.0)
  {
    double v7 = v0[3];
    double v1 = 1.0;
    if (v7 >= -1.0 && v7 <= 1.0) {
      return 1;
    }
  }
  double v9 = v0[4];
  if (v9 >= -1.0 && v9 <= v1)
  {
    double v11 = v0[5];
    if (v11 >= -1.0 && v11 <= v1) {
      return 1;
    }
  }
  double v13 = v0[6];
  double v14 = v0[7];
  BOOL v15 = v13 >= -1.0;
  if (v13 > v1) {
    BOOL v15 = 0;
  }
  if (v14 < -1.0) {
    BOOL v15 = 0;
  }
  return v14 <= v1 && v15;
}

void sub_1DB1AE584(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double v4 = *v3;
  double v5 = v3[1];
  double v6 = v3[2];
  double v7 = v3[3];
  double v8 = v3[4];
  double v9 = v3[5];
  double v10 = v3[6];
  double v11 = v3[7];
  BOOL v14 = *v3 < -1.0 || v4 > 1.0 || v5 < -1.0 || v5 > 1.0;
  if (!v14
    || (v6 >= -1.0 ? (BOOL v15 = v6 > 1.0) : (BOOL v15 = 1),
        !v15 ? (BOOL v16 = v7 < -1.0) : (BOOL v16 = 1),
        !v16 ? (BOOL v17 = v7 > 1.0) : (BOOL v17 = 1),
        !v17
     || v8 >= -1.0 && v8 <= 1.0 && v9 >= -1.0 && v9 <= 1.0
     || v10 >= -1.0 && v10 <= 1.0 && v11 >= -1.0 && v11 <= 1.0))
  {
    double v4 = v4 * a2;
    double v5 = v5 * a3;
    double v6 = v6 * a2;
    double v7 = v7 * a3;
    double v8 = v8 * a2;
    double v9 = v9 * a3;
    double v10 = v10 * a2;
    double v11 = v11 * a3;
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
}

uint64_t sub_1DB1AE64C(void *a1)
{
  double v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1B0914();
  sub_1DB1F1EF0();
  long long v12 = *v3;
  char v11 = 0;
  type metadata accessor for CGPoint(0);
  sub_1DB1B0968(&qword_1EA905B38, type metadata accessor for CGPoint);
  sub_1DB1F1D60();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    sub_1DB1F1D60();
    long long v12 = v3[2];
    char v11 = 2;
    sub_1DB1F1D60();
    long long v12 = v3[3];
    char v11 = 3;
    sub_1DB1F1D60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1DB1AE880@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DB1B0624(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1DB1AE8C4(void *a1)
{
  return sub_1DB1AE64C(a1);
}

BOOL sub_1DB1AE8DC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v5;
  return sub_1DB1AFF7C((double *)v7, (double *)v8);
}

void ProjectionTransform.init(from:)()
{
}

void ProjectionTransform.encode(to:)()
{
}

void sub_1DB1AE9E0()
{
}

void sub_1DB1AEA3C()
{
}

uint64_t sub_1DB1AEA98(unsigned __int8 *a1, char *a2)
{
  return sub_1DB161EB0(*a1, *a2);
}

uint64_t sub_1DB1AEAA4()
{
  return sub_1DB1ADE64();
}

uint64_t sub_1DB1AEAAC()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1AEB84()
{
  return sub_1DB1B6428();
}

uint64_t sub_1DB1AEB8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1B08CC();
  *a1 = result;
  return result;
}

void sub_1DB1AEBC4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xED0000656C676E41;
  uint64_t v3 = 0x656E696C65736162;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1684108657;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "projTransform");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000012;
      *(void *)(a1 + 8) = 0x80000001DB1FB320;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_1DB1AEC74()
{
  unint64_t result = 0x656E696C65736162;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1684108657;
      break;
    case 2:
      unint64_t result = 0x6E6172546A6F7270;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB1AED18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1B08CC();
  *a1 = result;
  return result;
}

uint64_t sub_1DB1AED48(uint64_t a1)
{
  unint64_t v2 = sub_1DB1B0178();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1AED84(uint64_t a1)
{
  unint64_t v2 = sub_1DB1B0178();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PageBounds.init(topLeft:topRight:bottomLeft:bottomRight:radians:homography:homographySpace:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, double a13, double a14)
{
  sub_1DB0F1454(a3, (uint64_t)&v41, &qword_1EA905AB0);
  uint64_t result = sub_1DB0F1454(a3, (uint64_t)v42, &qword_1EA905AB0);
  if (v42[48])
  {
    long long v24 = *MEMORY[0x1E4F39B10];
    uint64_t v25 = *(void *)(MEMORY[0x1E4F39B10] + 16);
    long long v26 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 32);
    uint64_t v27 = *(void *)(MEMORY[0x1E4F39B10] + 48);
    long long v28 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 64);
    uint64_t v29 = *(void *)(MEMORY[0x1E4F39B10] + 80);
    double v30 = 1.0;
    double v31 = 1.0;
  }
  else
  {
    double v30 = a13;
    double v31 = a14;
    uint64_t result = CATransform3DMakeWithSIMDFloat3x3();
    long long v24 = v35;
    uint64_t v25 = v36;
    long long v26 = v37;
    uint64_t v27 = v38;
    long long v28 = v39;
    uint64_t v29 = v40;
  }
  *(void *)a4 = a1;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(double *)(a4 + 32) = a7;
  *(double *)(a4 + 40) = a8;
  *(double *)(a4 + 48) = a9;
  *(double *)(a4 + 56) = a10;
  *(double *)(a4 + 64) = a11;
  *(double *)(a4 + 72) = a12;
  *(_OWORD *)(a4 + 80) = v24;
  *(void *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 104) = v26;
  *(void *)(a4 + 120) = v27;
  *(_OWORD *)(a4 + 128) = v28;
  *(void *)(a4 + 144) = v29;
  *(double *)(a4 + 152) = v30;
  *(double *)(a4 + 160) = v31;
  return result;
}

uint64_t sub_1DB1AEF3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_boundingQuad);
  if (v4)
  {
    long long v5 = v4;
    id v6 = objc_msgSend(a1, sel_originalBoundingQuad);
    if (v6)
    {
      id v7 = v6;

      long long v5 = v7;
    }
    objc_msgSend(v5, sel_topLeft);
    uint64_t v41 = v9;
    uint64_t v42 = v8;
    objc_msgSend(v5, sel_topRight);
    uint64_t v39 = v11;
    uint64_t v40 = v10;
    objc_msgSend(v5, sel_bottomLeft);
    uint64_t v37 = v13;
    uint64_t v38 = v12;
    objc_msgSend(v5, sel_bottomRight);
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    objc_msgSend(a1, sel_baselineAngle);
    double v19 = v18;
    id v20 = objc_msgSend(a1, sel_originalBoundingQuad);
    if (v20)
    {
      objc_msgSend(a1, sel_boundingQuadHomography);
      long long v33 = v21;
    }
    id v22 = objc_msgSend(a1, sel_originalBoundingQuad, v33);
    if (v22)
    {
      unint64_t v23 = v22;
      objc_msgSend(v22, sel_normalizationSize);
      double v25 = v24;
      double v27 = v26;

      double v28 = -v19;
      if (v20)
      {
LABEL_9:
        CATransform3DMakeWithSIMDFloat3x3();
        uint64_t v29 = v44;
        long long v35 = v46;
        long long v36 = v43;
        uint64_t v30 = v47;
        long long v34 = v49;
        uint64_t v31 = v50;
LABEL_12:

        *(double *)&long long v43 = v28;
        BYTE8(v43) = 0;
        uint64_t v44 = v42;
        uint64_t v45 = v41;
        *(void *)&long long v46 = v40;
        *((void *)&v46 + 1) = v39;
        uint64_t v47 = v38;
        uint64_t v48 = v37;
        *(void *)&long long v49 = v15;
        *((void *)&v49 + 1) = v17;
        long long v50 = v36;
        uint64_t v51 = v29;
        long long v52 = v35;
        uint64_t v53 = v30;
        long long v54 = v34;
        uint64_t v55 = v31;
        double v56 = v25;
        double v57 = v27;
        sub_1DB1B0A38((uint64_t)&v43);
        return sub_1DB0F1454((uint64_t)&v43, a2, &qword_1EBA4E280);
      }
    }
    else
    {
      double v25 = *MEMORY[0x1E4F1DB30];
      double v27 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
      double v28 = -v19;
      if (v20) {
        goto LABEL_9;
      }
    }
    uint64_t v29 = *(void *)(MEMORY[0x1E4F39B10] + 16);
    long long v35 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 32);
    long long v36 = *MEMORY[0x1E4F39B10];
    uint64_t v30 = *(void *)(MEMORY[0x1E4F39B10] + 48);
    long long v34 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 64);
    uint64_t v31 = *(void *)(MEMORY[0x1E4F39B10] + 80);
    double v25 = 1.0;
    double v27 = 1.0;
    goto LABEL_12;
  }

  sub_1DB1B0A10((uint64_t)&v43);
  return sub_1DB0F1454((uint64_t)&v43, a2, &qword_1EBA4E280);
}

double sub_1DB1AF1EC@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DB1F1190();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B50);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1F1170();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecognizedItem.originalBounds.getter((uint64_t)v10);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  long long v64 = a1;
  v15(v7, (uint64_t)a1, v4);
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  uint64_t v65 = v5;
  uint64_t v66 = v4;
  if (v16 == 1)
  {
    sub_1DB1F1180();
    long long v63 = *(void (**)(char *, uint64_t))(v5 + 8);
    v63(v7, v4);
    sub_1DB1B09B0((uint64_t)v10);
  }
  else
  {
    long long v63 = *(void (**)(char *, uint64_t))(v5 + 8);
    v63(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  }
  uint64_t v17 = v64;
  RecognizedItem.homography.getter((uint64_t)v77);
  v50[0] = v77[0];
  v50[1] = v77[2];
  v50[2] = v77[1];
  v50[3] = v77[4];
  v50[4] = v77[3];
  uint64_t v51 = v77[5];
  sub_1DB1F1130();
  uint64_t v61 = v19;
  uint64_t v62 = v18;
  sub_1DB1F1150();
  uint64_t v59 = v21;
  uint64_t v60 = v20;
  sub_1DB1F10F0();
  uint64_t v57 = v23;
  uint64_t v58 = v22;
  sub_1DB1F1110();
  uint64_t v55 = v25;
  uint64_t v56 = v24;
  uint64_t v26 = RecognizedItem.baselineAngle.getter();
  int v53 = v27;
  double v28 = COERCE_DOUBLE(RecognizedItem.homographySize.getter());
  double v30 = v29;
  char v32 = v31;
  sub_1DB0F1454((uint64_t)v77, (uint64_t)v78, &qword_1EA905AB0);
  if (v78[48])
  {
    uint64_t v33 = *(void *)(MEMORY[0x1E4F39B10] + 8);
    uint64_t v34 = *(void *)(MEMORY[0x1E4F39B10] + 16);
    uint64_t v35 = *(void *)(MEMORY[0x1E4F39B10] + 32);
    uint64_t v36 = *(void *)(MEMORY[0x1E4F39B10] + 40);
    uint64_t v37 = *(void *)(MEMORY[0x1E4F39B10] + 48);
    uint64_t v38 = *(void *)(MEMORY[0x1E4F39B10] + 64);
    uint64_t v39 = *(void *)(MEMORY[0x1E4F39B10] + 72);
    uint64_t v40 = *(void *)(MEMORY[0x1E4F39B10] + 80);
    uint64_t v51 = *MEMORY[0x1E4F39B10];
    double v52 = 1.0;
    double v54 = 1.0;
  }
  else
  {
    double v41 = *MEMORY[0x1E4F1DB30];
    double v42 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
    if ((v32 & 1) == 0) {
      double v42 = v30;
    }
    double v54 = v42;
    if ((v32 & 1) == 0) {
      double v41 = v28;
    }
    double v52 = v41;
    CATransform3DMakeWithSIMDFloat3x3();
    uint64_t v33 = v68;
    uint64_t v51 = v67;
    uint64_t v34 = v69;
    uint64_t v35 = v70;
    uint64_t v36 = v71;
    uint64_t v37 = v72;
    uint64_t v38 = v73;
    uint64_t v39 = v74;
    uint64_t v40 = v75;
  }
  if (v53) {
    unint64_t v43 = v26;
  }
  else {
    unint64_t v43 = v26 ^ 0x8000000000000000;
  }
  char v76 = v53 & 1;
  v63(v17, v66);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(void *)a2 = v43;
  *(unsigned char *)(a2 + 8) = v76;
  *(_DWORD *)(a2 + 9) = v67;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v67 + 3);
  uint64_t v44 = v61;
  *(void *)(a2 + 16) = v62;
  *(void *)(a2 + 24) = v44;
  uint64_t v45 = v59;
  *(void *)(a2 + 32) = v60;
  *(void *)(a2 + 40) = v45;
  uint64_t v46 = v57;
  *(void *)(a2 + 48) = v58;
  *(void *)(a2 + 56) = v46;
  uint64_t v47 = v55;
  *(void *)(a2 + 64) = v56;
  *(void *)(a2 + 72) = v47;
  *(void *)(a2 + 80) = v51;
  *(void *)(a2 + 88) = v33;
  *(void *)(a2 + 96) = v34;
  *(void *)(a2 + 104) = v35;
  *(void *)(a2 + 112) = v36;
  *(void *)(a2 + 120) = v37;
  *(void *)(a2 + 128) = v38;
  *(void *)(a2 + 136) = v39;
  double v48 = v52;
  *(void *)(a2 + 144) = v40;
  *(double *)(a2 + 152) = v48;
  double result = v54;
  *(double *)(a2 + 160) = v54;
  return result;
}

double sub_1DB1AF644(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a4) {
    double v8 = v4[6];
  }
  else {
    double v8 = v4[2];
  }
  if (a4) {
    double v9 = v4[7];
  }
  else {
    double v9 = v4[3];
  }
  if (a4) {
    double v10 = v4[2];
  }
  else {
    double v10 = v4[4];
  }
  if (a4) {
    double v11 = v4[3];
  }
  else {
    double v11 = v4[5];
  }
  if (a4) {
    double v12 = v4[8];
  }
  else {
    double v12 = v4[6];
  }
  if (a4) {
    double v13 = v4[9];
  }
  else {
    double v13 = v4[7];
  }
  if (a4) {
    double v14 = v4[4];
  }
  else {
    double v14 = v4[8];
  }
  if (a4) {
    double v15 = v4[5];
  }
  else {
    double v15 = v4[9];
  }
  v24[8] = v8;
  v24[9] = v9;
  v24[10] = v10;
  v24[11] = v11;
  v24[12] = v12;
  v24[13] = v13;
  v24[14] = v14;
  v24[15] = v15;
  if (sub_1DB1AE4E0())
  {
    if (a3)
    {
      if (qword_1EBA4E578 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1DB1EF810();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EBA4F408);
      uint64_t v17 = sub_1DB1EF7F0();
      os_log_type_t v18 = sub_1DB1F1710();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_1DB0DC000, v17, v18, "Bounding box request with nil fit results in a normalized rect", v19, 2u);
        MEMORY[0x1E018CA60](v19, -1, -1);
      }
    }
    else
    {
      sub_1DB1AE584(v24, *(double *)&a1, *(double *)&a2);
      double v8 = v24[0];
      double v9 = v24[1];
      double v10 = v24[2];
      double v11 = v24[3];
      double v12 = v24[4];
      double v13 = v24[5];
      double v14 = v24[6];
      double v15 = v24[7];
    }
  }
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB4008]), sel_initWithTopLeft_topRight_bottomLeft_bottomRight_, v8, v9, v10, v11, v12, v13, v14, v15);
  objc_msgSend(v20, sel_minimumBoundingRectWithoutRotation);
  double v22 = v21;

  return v22;
}

uint64_t PageBounds.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905AB8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  char v9 = *((unsigned char *)v1 + 8);
  uint64_t v10 = v1[2];
  uint64_t v42 = v1[3];
  uint64_t v43 = v10;
  uint64_t v11 = v1[4];
  uint64_t v40 = v1[5];
  uint64_t v41 = v11;
  uint64_t v39 = v1[6];
  uint64_t v38 = v1[7];
  uint64_t v37 = v1[8];
  uint64_t v36 = v1[9];
  uint64_t v35 = v1[10];
  uint64_t v34 = v1[11];
  uint64_t v12 = v1[13];
  uint64_t v33 = v1[12];
  uint64_t v13 = v1[14];
  uint64_t v14 = v1[15];
  uint64_t v16 = v1[16];
  uint64_t v15 = v1[17];
  uint64_t v18 = v1[18];
  uint64_t v17 = v1[19];
  uint64_t v19 = v1[20];
  uint64_t v20 = a1[3];
  double v21 = a1;
  uint64_t v23 = v22;
  __swift_project_boxed_opaque_existential_1(v21, v20);
  sub_1DB1B0178();
  sub_1DB1F1EF0();
  uint64_t v44 = v8;
  LOBYTE(v45) = v9;
  char v53 = 0;
  sub_1DB1B01CC();
  sub_1DB1F1CF0();
  if (!v2)
  {
    uint64_t v30 = v18;
    uint64_t v31 = v15;
    uint64_t v32 = v16;
    uint64_t v24 = v33;
    uint64_t v25 = v34;
    uint64_t v26 = v35;
    uint64_t v28 = v19;
    uint64_t v29 = v17;
    uint64_t v44 = v43;
    uint64_t v45 = v42;
    uint64_t v46 = v41;
    uint64_t v47 = v40;
    uint64_t v48 = v39;
    uint64_t v49 = v38;
    uint64_t v50 = v37;
    uint64_t v51 = v36;
    char v53 = 1;
    sub_1DB1B0220();
    sub_1DB1F1D60();
    uint64_t v44 = v26;
    uint64_t v45 = v25;
    uint64_t v46 = v24;
    uint64_t v47 = v12;
    uint64_t v48 = v13;
    uint64_t v49 = v14;
    uint64_t v50 = v32;
    uint64_t v51 = v31;
    uint64_t v52 = v30;
    char v53 = 2;
    sub_1DB1B0274();
    sub_1DB1F1D60();
    uint64_t v44 = v29;
    uint64_t v45 = v28;
    char v53 = 3;
    type metadata accessor for CGSize(0);
    sub_1DB1B0968(&qword_1EA905AE0, type metadata accessor for CGSize);
    sub_1DB1F1D60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v23);
}

uint64_t PageBounds.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905AE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1B0178();
  sub_1DB1F1EE0();
  if (!v2)
  {
    char v42 = 0;
    sub_1DB1B02C8();
    sub_1DB1F1C50();
    uint64_t v9 = v33;
    char v10 = BYTE8(v33);
    char v42 = 1;
    sub_1DB1B031C();
    sub_1DB1F1CB0();
    long long v11 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    uint64_t v14 = v36;
    uint64_t v15 = v37;
    uint64_t v16 = v38;
    uint64_t v17 = v39;
    char v42 = 2;
    sub_1DB1B0370();
    sub_1DB1F1CB0();
    uint64_t v31 = *((void *)&v33 + 1);
    uint64_t v32 = v33;
    uint64_t v29 = v35;
    uint64_t v30 = v34;
    uint64_t v28 = v36;
    uint64_t v27 = v37;
    uint64_t v26 = v38;
    uint64_t v25 = v39;
    uint64_t v24 = v40;
    type metadata accessor for CGSize(0);
    char v42 = 3;
    sub_1DB1B0968(&qword_1EA905B08, type metadata accessor for CGSize);
    sub_1DB1F1CB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v41 = v10;
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
    *(void *)(a2 + 32) = v12;
    *(void *)(a2 + 40) = v13;
    *(void *)(a2 + 48) = v14;
    *(void *)(a2 + 56) = v15;
    *(void *)(a2 + 64) = v16;
    *(void *)(a2 + 72) = v17;
    uint64_t v19 = v31;
    *(void *)(a2 + 80) = v32;
    *(void *)(a2 + 88) = v19;
    uint64_t v20 = v29;
    *(void *)(a2 + 96) = v30;
    *(void *)(a2 + 104) = v20;
    uint64_t v21 = v27;
    *(void *)(a2 + 112) = v28;
    *(void *)(a2 + 120) = v21;
    uint64_t v22 = v25;
    *(void *)(a2 + 128) = v26;
    *(void *)(a2 + 136) = v22;
    *(void *)(a2 + 144) = v24;
    *(_OWORD *)(a2 + 152) = v33;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1DB1AFF48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PageBounds.init(from:)(a1, a2);
}

uint64_t sub_1DB1AFF60(void *a1)
{
  return PageBounds.encode(to:)(a1);
}

BOOL sub_1DB1AFF7C(double *a1, double *a2)
{
  return *a1 == *a2
      && a1[1] == a2[1]
      && a1[2] == a2[2]
      && a1[3] == a2[3]
      && a1[4] == a2[4]
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7];
}

BOOL _s13TranslationUI10PageBoundsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float64_t v2 = *(double *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  v4.f64[0] = *(float64_t *)(a1 + 16);
  float64x2_t v5 = *(float64x2_t *)(a1 + 40);
  float64x2_t v6 = *(float64x2_t *)(a1 + 24);
  float64x2_t v7 = *(float64x2_t *)(a1 + 56);
  double v8 = *(double *)(a1 + 72);
  long long v9 = *(_OWORD *)(a1 + 128);
  void v27[2] = *(_OWORD *)(a1 + 112);
  v27[3] = v9;
  uint64_t v28 = *(void *)(a1 + 144);
  long long v10 = *(_OWORD *)(a1 + 96);
  v27[0] = *(_OWORD *)(a1 + 80);
  v27[1] = v10;
  double v12 = *(double *)(a1 + 152);
  double v11 = *(double *)(a1 + 160);
  float64_t v13 = *(double *)a2;
  int v14 = *(unsigned __int8 *)(a2 + 8);
  v15.f64[0] = *(float64_t *)(a2 + 16);
  float64x2_t v16 = *(float64x2_t *)(a2 + 40);
  float64x2_t v17 = *(float64x2_t *)(a2 + 24);
  float64x2_t v18 = *(float64x2_t *)(a2 + 56);
  double v19 = *(double *)(a2 + 72);
  long long v20 = *(_OWORD *)(a2 + 128);
  v29[2] = *(_OWORD *)(a2 + 112);
  v29[3] = v20;
  uint64_t v30 = *(void *)(a2 + 144);
  long long v21 = *(_OWORD *)(a2 + 96);
  v29[0] = *(_OWORD *)(a2 + 80);
  v29[1] = v21;
  double v23 = *(double *)(a2 + 152);
  double v22 = *(double *)(a2 + 160);
  BOOL result = 0;
  if (v3)
  {
    if (!v14) {
      return result;
    }
    if (v4.f64[0] != v15.f64[0]) {
      return result;
    }
    if (v6.f64[0] != v17.f64[0]) {
      return result;
    }
    int16x4_t v25 = vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v6, v17), (int32x4_t)vceqq_f64(v5, v16)));
    if ((v25.i8[2] & 1) == 0) {
      return result;
    }
    if (v5.f64[0] != v16.f64[0]) {
      return result;
    }
    if ((v25.i8[6] & 1) == 0) {
      return result;
    }
    int32x2_t v26 = vmovn_s64(vceqq_f64(v7, v18));
    if ((v26.i8[0] & 1) == 0 || (v26.i8[4] & 1) == 0) {
      return result;
    }
  }
  else
  {
    if (v14) {
      return result;
    }
    v4.f64[1] = v2;
    v15.f64[1] = v13;
    if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v4, v15), (int32x4_t)vceqq_f64(v6, v17)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v5, v16), (int32x4_t)vceqq_f64(v7, v18)))), 7uLL))) & 1) == 0)return result; {
  }
    }
  if (v8 == v19)
  {
    if (MEMORY[0x1E018A310](v27, v29)) {
      return v11 == v22 && v12 == v23;
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1DB1B0178()
{
  unint64_t result = qword_1EA905AC0;
  if (!qword_1EA905AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905AC0);
  }
  return result;
}

unint64_t sub_1DB1B01CC()
{
  unint64_t result = qword_1EA905AC8;
  if (!qword_1EA905AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905AC8);
  }
  return result;
}

unint64_t sub_1DB1B0220()
{
  unint64_t result = qword_1EA905AD0;
  if (!qword_1EA905AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905AD0);
  }
  return result;
}

unint64_t sub_1DB1B0274()
{
  unint64_t result = qword_1EA905AD8;
  if (!qword_1EA905AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905AD8);
  }
  return result;
}

unint64_t sub_1DB1B02C8()
{
  unint64_t result = qword_1EA905AF0;
  if (!qword_1EA905AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905AF0);
  }
  return result;
}

unint64_t sub_1DB1B031C()
{
  unint64_t result = qword_1EA905AF8;
  if (!qword_1EA905AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905AF8);
  }
  return result;
}

unint64_t sub_1DB1B0370()
{
  unint64_t result = qword_1EA905B00;
  if (!qword_1EA905B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B00);
  }
  return result;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PageBounds(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PageBounds(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 168) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PageBounds()
{
  return &type metadata for PageBounds;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VisualTranslationQuad(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VisualTranslationQuad(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationQuad()
{
  return &type metadata for VisualTranslationQuad;
}

ValueMetadata *type metadata accessor for PageBounds.CodingKeys()
{
  return &type metadata for PageBounds.CodingKeys;
}

unint64_t sub_1DB1B0520()
{
  unint64_t result = qword_1EA905B10;
  if (!qword_1EA905B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B10);
  }
  return result;
}

unint64_t sub_1DB1B0578()
{
  unint64_t result = qword_1EA905B18;
  if (!qword_1EA905B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B18);
  }
  return result;
}

unint64_t sub_1DB1B05D0()
{
  unint64_t result = qword_1EA905B20;
  if (!qword_1EA905B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B20);
  }
  return result;
}

uint64_t sub_1DB1B0624@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1B0914();
  sub_1DB1F1EE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  type metadata accessor for CGPoint(0);
  char v20 = 0;
  sub_1DB1B0968(&qword_1EA905B48, type metadata accessor for CGPoint);
  sub_1DB1F1CB0();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  char v20 = 1;
  sub_1DB1F1CB0();
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  char v20 = 2;
  sub_1DB1F1CB0();
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  char v20 = 3;
  sub_1DB1F1CB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v18;
  uint64_t v16 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v16;
  return result;
}

uint64_t sub_1DB1B08CC()
{
  unint64_t v0 = sub_1DB1F1C10();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DB1B0914()
{
  unint64_t result = qword_1EA905B30;
  if (!qword_1EA905B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B30);
  }
  return result;
}

uint64_t sub_1DB1B0968(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1B09B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1DB1B0A10(uint64_t a1)
{
  *(void *)(a1 + 160) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 168) = 1;
  return result;
}

uint64_t sub_1DB1B0A38(uint64_t result)
{
  *(unsigned char *)(result + 168) = 0;
  return result;
}

unsigned char *_s13TranslationUI10PageBoundsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1B0B0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationQuad.CodingKeys()
{
  return &type metadata for VisualTranslationQuad.CodingKeys;
}

unint64_t sub_1DB1B0B48()
{
  unint64_t result = qword_1EA905B58;
  if (!qword_1EA905B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B58);
  }
  return result;
}

unint64_t sub_1DB1B0BA0()
{
  unint64_t result = qword_1EA905B60;
  if (!qword_1EA905B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B60);
  }
  return result;
}

unint64_t sub_1DB1B0BF8()
{
  unint64_t result = qword_1EA905B68;
  if (!qword_1EA905B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B68);
  }
  return result;
}

uint64_t sub_1DB1B0C50()
{
  return sub_1DB125658();
}

uint64_t sub_1DB1B0C64()
{
  return sub_1DB125658();
}

uint64_t VisualTranslationErrorViewModel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  VisualTranslationErrorViewModel.init()();
  return v0;
}

uint64_t VisualTranslationErrorViewModel.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B70);
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v30 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  MEMORY[0x1F4188790](v29);
  uint64_t v28 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v27 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B78);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1F0560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  float64x2_t v17 = (uint64_t *)((char *)&v27 - v16);
  uint64_t v18 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  sub_1DB1F1010();
  *float64x2_t v17 = v19;
  v17[1] = v20;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v17, *MEMORY[0x1E4F3DB00], v11);
  (*(void (**)(char *, void *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_1DB1EF8D0();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v17, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v18, v10, v7);
  uint64_t v21 = v0;
  uint64_t v22 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  uint64_t v23 = type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v6, 1, 1, v23);
  sub_1DB1B1060((uint64_t)v6, v28);
  int16x4_t v25 = v30;
  sub_1DB1EF8D0();
  sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4D178);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v22, v25, v32);
  v24((char *)(v21 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel), 1, 1, v23);
  return v21;
}

uint64_t sub_1DB1B1060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1B10C8(unint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905BA8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v44 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v44 - v12;
  unint64_t v14 = a1[1];
  if (v14)
  {
    unint64_t v15 = *a1;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1DB1EF810();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBA4F408);
    swift_bridgeObjectRetain_n();
    float64x2_t v17 = sub_1DB1EF7F0();
    os_log_type_t v18 = sub_1DB1F1730();
    int v19 = v18;
    unint64_t v20 = v15 >> 8;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v49 = v13;
      uint64_t v21 = swift_slowAlloc();
      int v48 = v19;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v46 = (void *)swift_slowAlloc();
      uint64_t v47 = v22;
      *(_DWORD *)uint64_t v22 = 138412290;
      sub_1DB1A16E4();
      uint64_t v23 = swift_allocError();
      *(_WORD *)uint64_t v24 = v15;
      *(void *)(v24 + 8) = v14;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1DB1EF410();
      os_log_t v45 = v17;
      int32x2_t v26 = v4;
      unint64_t v27 = v15 >> 8;
      char v28 = v15;
      unint64_t v15 = (unint64_t)v7;
      uint64_t v29 = v25;
      uint64_t v30 = (void *)v23;
      uint64_t v13 = v49;

      v51[0] = v29;
      sub_1DB1F1910();
      uint64_t v31 = v46;
      *uint64_t v46 = v29;
      uint64_t v7 = (char *)v15;
      LOBYTE(v15) = v28;
      LOBYTE(v20) = v27;
      uint64_t v4 = v26;
      swift_bridgeObjectRelease_n();
      os_log_t v32 = v45;
      long long v33 = v47;
      _os_log_impl(&dword_1DB0DC000, v45, (os_log_type_t)v48, "Setting UI to show error: %@", v47, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v31, -1, -1);
      MEMORY[0x1E018CA60](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v51[0]) = v15;
    BYTE1(v51[0]) = v20;
    v51[1] = v14;
    swift_bridgeObjectRetain();
    sub_1DB1A1C20((char *)v51, (uint64_t)v4);
    uint64_t v39 = type metadata accessor for TranslationUnavailableState(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v4, 1, v39) == 1)
    {
      sub_1DB0E8BD4((uint64_t)v4, &qword_1EA905BA8);
      uint64_t v40 = type metadata accessor for TranslationUnavailableModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v13, 1, 1, v40);
    }
    else
    {
      sub_1DB1A242C((uint64_t)v13);
      sub_1DB1B3528((uint64_t)v4, type metadata accessor for TranslationUnavailableState);
      uint64_t v41 = type metadata accessor for TranslationUnavailableModel(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v13, 0, 1, v41);
    }
    sub_1DB1B1060((uint64_t)v13, (uint64_t)v10);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DB1B1060((uint64_t)v10, (uint64_t)v7);
    uint64_t v42 = v50;
    swift_retain();
    sub_1DB1EF920();
    sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4D178);
    sub_1DB1B1060((uint64_t)v13, (uint64_t)v10);
    uint64_t v43 = v42 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1DB1B28D8((uint64_t)v10, v43);
    swift_endAccess();
    return sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4D178);
  }
  else
  {
    uint64_t v34 = type metadata accessor for TranslationUnavailableModel(0);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
    v35(v10, 1, 1, v34);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DB1B1060((uint64_t)v10, (uint64_t)v7);
    uint64_t v36 = v50;
    swift_retain();
    sub_1DB1EF920();
    sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4D178);
    v35(v10, 1, 1, v34);
    uint64_t v37 = v36 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1DB1B28D8((uint64_t)v10, v37);
    return swift_endAccess();
  }
}

uint64_t sub_1DB1B1688(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v15[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v15[-1] - v7;
  if (a1)
  {
    id v9 = a1;
    sub_1DB19E7DC(a1, v16);
    v15[0] = v16[0];
    v15[1] = v16[1];
    sub_1DB1B10C8(v15);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranslationUnavailableModel(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    v12(v8, 1, 1, v11);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DB1B1060((uint64_t)v8, (uint64_t)v5);
    swift_retain();
    sub_1DB1EF920();
    sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4D178);
    v12(v8, 1, 1, v11);
    uint64_t v13 = v1 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1DB1B28D8((uint64_t)v8, v13);
    return swift_endAccess();
  }
}

uint64_t sub_1DB1B1850(unsigned __int8 *a1)
{
  v2[0] = *a1 | ((unint64_t)*a1 << 8);
  v2[1] = sub_1DB0EE490(MEMORY[0x1E4FBC860]);
  sub_1DB1B10C8(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1B18B4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1B1060((uint64_t)v6, (uint64_t)v3);
  swift_retain();
  sub_1DB1EF920();
  sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4D178);
  v8(v6, 1, 1, v7);
  uint64_t v9 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
  swift_beginAccess();
  sub_1DB1B28D8((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1DB1B1A4C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v9 = v8;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  MEMORY[0x1F4188790](v18 - 8);
  unint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v62 - v22;
  MEMORY[0x1F4188790](v24);
  int32x2_t v26 = (char *)&v62 - v25;
  uint64_t v27 = type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v70 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1DB1F0560();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  long long v33 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (CGFloat *)((char *)&v62 - v35);
  v73.origin.x = a5;
  v73.origin.y = a6;
  v73.size.width = a7;
  v73.size.height = a8;
  if (CGRectGetWidth(v73) <= 0.0
    || (v74.origin.x = a5, v74.origin.y = a6, v74.size.width = a7, v74.size.height = a8, CGRectGetHeight(v74) <= 0.0))
  {
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1DB1EF810();
    __swift_project_value_buffer(v49, (uint64_t)qword_1EBA4F408);
    uint64_t v50 = sub_1DB1EF7F0();
    os_log_type_t v51 = sub_1DB1F1710();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_1DB0DC000, v50, v51, "Presentation anchor content size contain a zero value, fallback to .bottomLeading", v52, 2u);
      MEMORY[0x1E018CA60](v52, -1, -1);
    }

    sub_1DB1F1010();
    *(void *)uint64_t v36 = v53;
    *((void *)v36 + 1) = v54;
    (*(void (**)(CGFloat *, void, uint64_t))(v31 + 104))(v36, *MEMORY[0x1E4F3DB00], v30);
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, CGFloat *, uint64_t))(v31 + 16))(v33, v36, v30);
    swift_retain();
    sub_1DB1EF920();
    return (*(uint64_t (**)(CGFloat *, uint64_t))(v31 + 8))(v36, v30);
  }
  else
  {
    uint64_t v69 = v20;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v68 = v29;
    uint64_t v37 = sub_1DB1EF810();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EBA4F408);
    uint64_t v38 = sub_1DB1EF7F0();
    os_log_type_t v39 = sub_1DB1F16F0();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      int v64 = v40;
      uint64_t v42 = v41;
      uint64_t v65 = swift_slowAlloc();
      v72[0] = v65;
      *(_DWORD *)uint64_t v42 = 136446466;
      uint64_t v66 = (char *)(v42 + 4);
      uint64_t v43 = sub_1DB1F1830();
      os_log_t v63 = v38;
      uint64_t v71 = sub_1DB11F638(v43, v44, v72);
      uint64_t v67 = v9;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2082;
      uint64_t v66 = (char *)(v42 + 14);
      uint64_t v45 = sub_1DB1F1830();
      uint64_t v71 = sub_1DB11F638(v45, v46, v72);
      uint64_t v9 = v67;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      uint64_t v66 = v23;
      os_log_t v47 = v63;
      _os_log_impl(&dword_1DB0DC000, v63, (os_log_type_t)v64, "Presentation anchor %{public}s in %{public}s", (uint8_t *)v42, 0x16u);
      uint64_t v48 = v65;
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v48, -1, -1);
      MEMORY[0x1E018CA60](v42, -1, -1);

      uint64_t v23 = v66;
    }
    else
    {
    }
    v75.origin.x = a1;
    v75.origin.y = a2;
    v75.size.width = a3;
    v75.size.height = a4;
    double MidX = CGRectGetMidX(v75);
    v76.origin.x = a5;
    v76.origin.y = a6;
    v76.size.width = a7;
    v76.size.height = a8;
    CGFloat v57 = MidX / CGRectGetWidth(v76);
    v77.origin.x = a5;
    v77.origin.y = a6;
    v77.size.width = a7;
    v77.size.height = a8;
    CGFloat Height = CGRectGetHeight(v77);
    *uint64_t v36 = v57;
    v36[1] = a2 / Height;
    (*(void (**)(CGFloat *, void, uint64_t))(v31 + 104))(v36, *MEMORY[0x1E4F3DB00], v30);
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, CGFloat *, uint64_t))(v31 + 16))(v33, v36, v30);
    swift_retain();
    sub_1DB1EF920();
    (*(void (**)(CGFloat *, uint64_t))(v31 + 8))(v36, v30);
    uint64_t v59 = v9 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
    swift_beginAccess();
    sub_1DB1B1060(v59, (uint64_t)v26);
    uint64_t v60 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v26, 1, v27) == 1)
    {
      return sub_1DB0E8BD4((uint64_t)v26, &qword_1EBA4D178);
    }
    else
    {
      uint64_t v61 = (uint64_t)v68;
      sub_1DB1B34C0((uint64_t)v26, (uint64_t)v68, type metadata accessor for TranslationUnavailableModel);
      sub_1DB1B2F74(v61, (uint64_t)v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v23, 0, 1, v27);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1DB1B1060((uint64_t)v23, (uint64_t)v69);
      swift_retain();
      sub_1DB1EF920();
      sub_1DB0E8BD4((uint64_t)v23, &qword_1EBA4D178);
      return sub_1DB1B3528(v61, type metadata accessor for TranslationUnavailableModel);
    }
  }
}

uint64_t VisualTranslationErrorViewModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1DB0E8BD4(v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel, &qword_1EBA4D178);
  return v0;
}

uint64_t VisualTranslationErrorViewModel.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1DB0E8BD4(v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel, &qword_1EBA4D178);
  return swift_deallocClassInstance();
}

uint64_t sub_1DB1B23AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VisualTranslationErrorViewModel();
  uint64_t result = sub_1DB1EF8B0();
  *a1 = result;
  return result;
}

uint64_t View.errorHandler(viewModel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for VisualTranslationErrorViewModel();
  sub_1DB1B3478(&qword_1EA905B80, (void (*)(uint64_t))type metadata accessor for VisualTranslationErrorViewModel);
  swift_retain();
  v7[0] = sub_1DB1EFDB0();
  v7[1] = v5;
  MEMORY[0x1E018AB30](v7, a2, &type metadata for VisualTranslationErrorModifier, a3);
  return swift_release();
}

uint64_t sub_1DB1B24BC(uint64_t a1)
{
  v9[0] = a1;
  uint64_t v1 = sub_1DB1F0560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B90);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for VisualTranslationErrorViewModel();
  sub_1DB1B3478(&qword_1EA905B80, (void (*)(uint64_t))type metadata accessor for VisualTranslationErrorViewModel);
  sub_1DB1EFDC0();
  swift_getKeyPath();
  sub_1DB1EFDD0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9035C8);
  type metadata accessor for TranslationUnavailableModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9035D0);
  sub_1DB0E30C8();
  sub_1DB1B3478(&qword_1EA9035E0, (void (*)(uint64_t))type metadata accessor for TranslationUnavailableModel);
  sub_1DB0E316C();
  sub_1DB1F09B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1DB0E8BD4((uint64_t)v7, &qword_1EA905B90);
}

uint64_t sub_1DB1B2790()
{
  return sub_1DB15375C();
}

uint64_t sub_1DB1B27A4()
{
  return sub_1DB15375C();
}

uint64_t sub_1DB1B27CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1DB1B1060(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1B1060((uint64_t)v7, (uint64_t)v4);
  swift_retain();
  sub_1DB1EF920();
  return sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4D178);
}

uint64_t sub_1DB1B28D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1B2940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = type metadata accessor for TranslationUnavailableModel(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranslationUIErrorView();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9035F0);
  uint64_t v12 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B98);
  uint64_t v15 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  float64x2_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1B2F74(a1, (uint64_t)v5);
  sub_1DB1B2F74((uint64_t)v5, (uint64_t)v8);
  id v18 = objc_msgSend(self, sel_currentDevice);
  id v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

  sub_1DB1B3528((uint64_t)v5, type metadata accessor for TranslationUnavailableModel);
  v8[*(int *)(v6 + 20)] = v19 == 0;
  sub_1DB1B34C0((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TranslationUIErrorView);
  uint64_t v20 = sub_1DB1B3478(&qword_1EA9035F8, (void (*)(uint64_t))type metadata accessor for TranslationUIErrorView);
  sub_1DB1F0A70();
  sub_1DB1B3528((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TranslationUIErrorView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905BA0);
  sub_1DB1F02A0();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DB1F4900;
  sub_1DB1F0290();
  sub_1DB1F0280();
  sub_1DB15C36C(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v32 = v6;
  uint64_t v33 = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v29;
  sub_1DB1F0A80();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  uint64_t v23 = sub_1DB1EFE40();
  LOBYTE(v11) = sub_1DB1F06E0();
  uint64_t v25 = v30;
  uint64_t v24 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v31, v17, v30);
  uint64_t v26 = v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9035D0) + 36);
  *(void *)uint64_t v26 = v23;
  *(unsigned char *)(v26 + 8) = (_BYTE)v11;
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v25);
}

uint64_t sub_1DB1B2DD0(uint64_t a1)
{
  return sub_1DB1B24BC(a1);
}

uint64_t sub_1DB1B2DD8()
{
  return sub_1DB15375C();
}

uint64_t sub_1DB1B2E00(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F0560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_retain();
  sub_1DB1EF920();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1DB1B2F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslationUnavailableModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VisualTranslationErrorViewModel()
{
  uint64_t result = qword_1EBA4CFC8;
  if (!qword_1EBA4CFC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB1B3024()
{
  return type metadata accessor for VisualTranslationErrorViewModel();
}

void sub_1DB1B302C()
{
  sub_1DB1B32B8(319, &qword_1EBA4D7D8, MEMORY[0x1E4F3DB08], MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F)
  {
    sub_1DB1B325C();
    if (v1 <= 0x3F)
    {
      sub_1DB1B32B8(319, qword_1EBA4D180, type metadata accessor for TranslationUnavailableModel, MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for VisualTranslationErrorViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualTranslationErrorViewModel);
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.setError(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.setErrorCode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.clearError()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of VisualTranslationErrorViewModel.setPresentationAnchorRect(_:contentRect:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

void sub_1DB1B325C()
{
  if (!qword_1EBA4D7D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D178);
    unint64_t v0 = sub_1DB1EF930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4D7D0);
    }
  }
}

void sub_1DB1B32B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DB1B331C()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DB1B3380()
{
  unint64_t result = qword_1EA905B88;
  if (!qword_1EA905B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905B88);
  }
  return result;
}

void *assignWithCopy for VisualTranslationErrorModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for VisualTranslationErrorModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for VisualTranslationErrorModifier()
{
  return &type metadata for VisualTranslationErrorModifier;
}

uint64_t sub_1DB1B345C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1B3478(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1B34C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1B3528(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB1B3588()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1B3658()
{
  uint64_t result = 0x7478655472636FLL;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1131570031;
      goto LABEL_9;
    case 2:
      return 0x786F4272636FLL;
    case 3:
      unsigned int v3 = 1281649004;
      goto LABEL_6;
    case 4:
      unsigned int v3 = 1282698360;
LABEL_6:
      uint64_t result = v3 | 0x6C61636F00000000;
      break;
    case 5:
      uint64_t result = 0x74786554746C78;
      break;
    case 6:
      unsigned int v2 = 1131703416;
LABEL_9:
      uint64_t result = v2 | 0x69666E6F00000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB1B372C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DB1B5B34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DB1B3754(uint64_t a1)
{
  unint64_t v2 = sub_1DB1B3EC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1B3790(uint64_t a1)
{
  unint64_t v2 = sub_1DB1B3EC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TextDiagnosticsModel.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v30 = *(char **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905BC8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1B3EC8();
  sub_1DB1F1EF0();
  LOBYTE(v35) = 0;
  uint64_t v11 = v37;
  sub_1DB1F1D00();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v13 = v30;
  uint64_t v37 = v8;
  if (*(float *)(v2 + 16) > 0.0)
  {
    LOBYTE(v35) = 1;
    sub_1DB1F1D30();
  }
  uint64_t v30 = v10;
  CGFloat v15 = *(double *)(v2 + 24);
  CGFloat v14 = *(double *)(v2 + 32);
  CGFloat v17 = *(double *)(v2 + 40);
  CGFloat v16 = *(double *)(v2 + 48);
  v39.origin.x = 0.0;
  v39.origin.y = 0.0;
  v39.size.width = 0.0;
  v39.size.height = 0.0;
  v38.origin.x = v15;
  v38.origin.y = v14;
  v38.size.width = v17;
  v38.size.height = v16;
  if (CGRectEqualToRect(v38, v39))
  {
    uint64_t v18 = v7;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905BD8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DB1F9920;
    *(void *)(inited + 32) = 120;
    *(void *)(inited + 40) = 0xE100000000000000;
    *(CGFloat *)(inited + 48) = v15;
    *(void *)(inited + 56) = 121;
    *(void *)(inited + 64) = 0xE100000000000000;
    *(CGFloat *)(inited + 72) = v14;
    *(void *)(inited + 80) = 0x6874646977;
    *(void *)(inited + 88) = 0xE500000000000000;
    *(CGFloat *)(inited + 96) = v17;
    *(void *)(inited + 104) = 0x746867696568;
    *(void *)(inited + 112) = 0xE600000000000000;
    *(CGFloat *)(inited + 120) = v16;
    unint64_t v35 = sub_1DB0EEC60(inited);
    LOBYTE(v33) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905BE0);
    sub_1DB1B3F1C();
    sub_1DB1F1D60();
    uint64_t v18 = v7;
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = type metadata accessor for TextDiagnosticsModel();
  (*((void (**)(char *, uint64_t, uint64_t))v13 + 2))(v6, v2 + *(int *)(v20 + 28), v4);
  if (qword_1EA903580 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v4, (uint64_t)qword_1EA905BB0);
  sub_1DB1B5088(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
  char v21 = sub_1DB1F1230();
  (*((void (**)(char *, uint64_t))v13 + 1))(v6, v4);
  if ((v21 & 1) == 0)
  {
    unint64_t v35 = sub_1DB1EF590();
    uint64_t v36 = v22;
    uint64_t v33 = 45;
    unint64_t v34 = 0xE100000000000000;
    uint64_t v31 = 95;
    unint64_t v32 = 0xE100000000000000;
    sub_1DB0F0708();
    sub_1DB1F1950();
    swift_bridgeObjectRelease();
    LOBYTE(v35) = 3;
    sub_1DB1F1D00();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (uint64_t *)(v2 + *(int *)(v20 + 36));
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  uint64_t v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v26 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (!v26) {
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v30, v18);
  }
  unint64_t v35 = sub_1DB1EF590();
  uint64_t v36 = v27;
  uint64_t v33 = 45;
  unint64_t v34 = 0xE100000000000000;
  uint64_t v31 = 95;
  unint64_t v32 = 0xE100000000000000;
  sub_1DB0F0708();
  sub_1DB1F1950();
  swift_bridgeObjectRelease();
  LOBYTE(v35) = 4;
  uint64_t v28 = v30;
  sub_1DB1F1D00();
  swift_bridgeObjectRelease();
  LOBYTE(v35) = 6;
  sub_1DB1F1D30();
  uint64_t v29 = v37;
  LOBYTE(v35) = 5;
  sub_1DB1F1D00();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v18);
}

unint64_t sub_1DB1B3EC8()
{
  unint64_t result = qword_1EA905BD0;
  if (!qword_1EA905BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905BD0);
  }
  return result;
}

unint64_t sub_1DB1B3F1C()
{
  unint64_t result = qword_1EA905BE8;
  if (!qword_1EA905BE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905BE0);
    sub_1DB1B01CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905BE8);
  }
  return result;
}

uint64_t type metadata accessor for TextDiagnosticsModel()
{
  uint64_t result = qword_1EA905C20;
  if (!qword_1EA905C20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TextDiagnosticsModel.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  unsigned int v3 = (int *)type metadata accessor for TextModel();
  uint64_t v4 = *((void *)v3 - 1);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v66 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v68 = (int *)((char *)&v61 - v10);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v64 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  CGFloat v16 = (char *)&v61 - v15;
  uint64_t v17 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v67 = *(int *)(v17 + 28);
  uint64_t v18 = *(void *)(a1 + v67);
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v65 = v4;
  if (v19)
  {
    uint64_t v61 = v13;
    uint64_t v62 = a1;
    uint64_t v20 = v18 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v21 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    double v22 = 0.0;
    uint64_t v23 = v19;
    do
    {
      sub_1DB188E34(v20, (uint64_t)v6);
      double v22 = v22 + *(double *)&v6[v3[10]];
      sub_1DB1B4C3C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextModel);
      v20 += v21;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    a1 = v62;
    uint64_t v4 = v65;
    uint64_t v13 = v61;
  }
  else
  {
    double v22 = 0.0;
  }
  float v24 = v22 / (double)v19;
  uint64_t v25 = v63;
  *(float *)(v63 + 16) = v24;
  uint64_t v26 = a1 + *(int *)(v17 + 20);
  long long v27 = *(_OWORD *)(v26 + 144);
  long long v77 = *(_OWORD *)(v26 + 128);
  long long v78 = v27;
  uint64_t v79 = *(void *)(v26 + 160);
  long long v28 = *(_OWORD *)(v26 + 80);
  long long v73 = *(_OWORD *)(v26 + 64);
  long long v74 = v28;
  long long v29 = *(_OWORD *)(v26 + 112);
  long long v75 = *(_OWORD *)(v26 + 96);
  long long v76 = v29;
  long long v30 = *(_OWORD *)(v26 + 16);
  long long v69 = *(_OWORD *)v26;
  long long v31 = *(_OWORD *)(v26 + 32);
  long long v72 = *(_OWORD *)(v26 + 48);
  long long v70 = v30;
  long long v71 = v31;
  *(double *)(v25 + 24) = sub_1DB1AF644(0, 0, 1, 0);
  *(void *)(v25 + 32) = v32;
  *(void *)(v25 + 40) = v33;
  *(void *)(v25 + 48) = v34;
  *(void *)uint64_t v25 = Array<A>.sourceParagraph.getter(v18);
  *(void *)(v25 + 8) = v35;
  if (*(void *)(v18 + 16))
  {
    uint64_t v36 = v68;
    sub_1DB11FF38(v18 + v3[7] + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), (uint64_t)v68);
    uint64_t v37 = v64;
    if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(v64 + 48))(v36, 1, v11) != 1)
    {
      CGRect v38 = v16;
      (*(void (**)(char *, int *, uint64_t))(v37 + 32))(v16, v36, v11);
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v37 = v64;
    uint64_t v36 = v68;
    (*(void (**)(int *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v68, 1, 1, v11);
  }
  CGRect v38 = v16;
  if (qword_1EA903580 != -1) {
    swift_once();
  }
  uint64_t v39 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA905BB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v16, v39, v11);
  sub_1DB125F58((uint64_t)v36);
LABEL_13:
  uint64_t v68 = (int *)type metadata accessor for TextDiagnosticsModel();
  int v40 = v38;
  uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
  v41(v25 + v68[7], v40, v11);
  uint64_t v42 = *(void *)(a1 + v67);
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = a1;
    unint64_t v44 = v13;
    uint64_t v45 = (uint64_t)v66;
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v66, v42 + v3[9] + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80)), v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v45, 0, 1, v11);
    uint64_t v46 = v45;
    uint64_t v13 = v44;
    a1 = v43;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v46, 1, v11) != 1)
    {
      v41((uint64_t)v13, v66, v11);
      goto LABEL_20;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v66, 1, 1, v11);
  }
  if (qword_1EA903580 != -1) {
    swift_once();
  }
  uint64_t v47 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA905BB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v13, v47, v11);
  sub_1DB125F58((uint64_t)v66);
LABEL_20:
  uint64_t v48 = v68;
  v41(v25 + v68[8], v13, v11);
  uint64_t v49 = a1;
  uint64_t v50 = *(void *)(a1 + v67);
  uint64_t v51 = Array<A>.targetParagraph.getter(v50);
  uint64_t v52 = (uint64_t *)(v25 + v48[9]);
  *uint64_t v52 = v51;
  v52[1] = v53;
  uint64_t v54 = *(void *)(v50 + 16);
  if (v54)
  {
    uint64_t v55 = v50 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
    uint64_t v56 = *(void *)(v65 + 72);
    swift_bridgeObjectRetain();
    double v57 = 0.0;
    uint64_t v58 = v54;
    do
    {
      sub_1DB188E34(v55, (uint64_t)v6);
      double v57 = v57 + *(double *)&v6[v3[10]];
      sub_1DB1B4C3C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextModel);
      v55 += v56;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    uint64_t v25 = v63;
  }
  else
  {
    double v57 = 0.0;
  }
  float v59 = v57 / (double)v54;
  uint64_t result = sub_1DB1B4C3C(v49, type metadata accessor for VisualTranslationModel);
  *(float *)(v25 + v68[10]) = v59;
  return result;
}

uint64_t TextDiagnosticsModel.init(textModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EF6B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for TextModel();
  uint64_t v12 = (void *)(a1 + v11[6]);
  uint64_t v13 = v12[1];
  *(void *)a2 = *v12;
  *(void *)(a2 + 8) = v13;
  *(_DWORD *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  sub_1DB11FF38(a1 + v11[7], (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t v14 = qword_1EA903580;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v7, (uint64_t)qword_1EA905BB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
    sub_1DB125F58((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    swift_bridgeObjectRetain();
  }
  CGFloat v16 = (int *)type metadata accessor for TextDiagnosticsModel();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2 + v16[7], v10, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2 + v16[8], a1 + v11[9], v7);
  uint64_t v17 = (uint64_t *)(a1 + v11[8]);
  unint64_t v18 = v17[1];
  if (v18)
  {
    uint64_t v19 = *v17;
    unint64_t v20 = v18;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  uint64_t v21 = (void *)(a2 + v16[9]);
  *uint64_t v21 = v19;
  v21[1] = v20;
  float v22 = *(double *)(a1 + v11[10]);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DB1B4C3C(a1, (uint64_t (*)(void))type metadata accessor for TextModel);
  *(float *)(a2 + v16[10]) = v22;
  return result;
}

void TextDiagnosticsModel.init(ocrModel:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_topCandidates_, 1);
  sub_1DB1B4C9C();
  unint64_t v5 = sub_1DB1F14A0();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
    goto LABEL_9;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1E018BAD0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v5 + 32);
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v7, sel_string);

  uint64_t v9 = sub_1DB1F1290();
  unint64_t v11 = v10;

LABEL_9:
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  objc_msgSend(a1, sel_confidence);
  *(_DWORD *)(a2 + 16) = v13;
  objc_msgSend(a1, sel_boundingBox);
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v17;
  if (qword_1EA903580 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1DB1EF6B0();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EA905BB0);
  unint64_t v20 = (int *)type metadata accessor for TextDiagnosticsModel();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v21(a2 + v20[7], v19, v18);
  v21(a2 + v20[8], v19, v18);

  float v22 = (void *)(a2 + v20[9]);
  void *v22 = 0;
  v22[1] = 0xE000000000000000;
  *(_DWORD *)(a2 + v20[10]) = 0;
}

uint64_t sub_1DB1B4BE0()
{
  uint64_t v0 = sub_1DB1EF6B0();
  __swift_allocate_value_buffer(v0, qword_1EA905BB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA905BB0);
  return sub_1DB1EF580();
}

uint64_t sub_1DB1B4C3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DB1B4C9C()
{
  unint64_t result = qword_1EA905BF0;
  if (!qword_1EA905BF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA905BF0);
  }
  return result;
}

uint64_t TextDiagnosticsModel.string.getter()
{
  uint64_t v1 = TextDiagnosticsModel.json.getter();
  sub_1DB1F13A0();
  return v1;
}

uint64_t TextDiagnosticsModel.json.getter()
{
  uint64_t v0 = sub_1DB1F12E0();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1DB1EF300();
  MEMORY[0x1F4188790](v1);
  sub_1DB1EF340();
  swift_allocObject();
  sub_1DB1EF330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905BF8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DB1F4900;
  sub_1DB1EF2E0();
  sub_1DB1EF2F0();
  sub_1DB1B5088(&qword_1EA905C00, MEMORY[0x1E4F26CD0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905C08);
  sub_1DB1B502C();
  sub_1DB1F19B0();
  sub_1DB1EF310();
  type metadata accessor for TextDiagnosticsModel();
  sub_1DB1B5088(&qword_1EA905C18, (void (*)(uint64_t))type metadata accessor for TextDiagnosticsModel);
  uint64_t v2 = sub_1DB1EF320();
  unint64_t v4 = v3;
  sub_1DB1F12D0();
  uint64_t v5 = sub_1DB1F12B0();
  if (v6)
  {
    uint64_t v7 = v5;
    sub_1DB0FC598(v2, v4);
    swift_release();
  }
  else
  {
    sub_1DB0FC598(v2, v4);
    swift_release();
    return 0;
  }
  return v7;
}

unint64_t sub_1DB1B502C()
{
  unint64_t result = qword_1EA905C10;
  if (!qword_1EA905C10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905C08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C10);
  }
  return result;
}

uint64_t sub_1DB1B5088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1B50D0(void *a1)
{
  return TextDiagnosticsModel.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for TextDiagnosticsModel(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v8 = a3[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v11 = sub_1DB1EF6B0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12((uint64_t)v4 + a3[8], (uint64_t)a2 + a3[8], v11);
    uint64_t v13 = a3[9];
    uint64_t v14 = a3[10];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    *(_DWORD *)((char *)v4 + v14) = *(_DWORD *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for TextDiagnosticsModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 32), v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  uint64_t v11 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for TextDiagnosticsModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextDiagnosticsModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1B5700);
}

uint64_t sub_1DB1B5700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DB1EF6B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TextDiagnosticsModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1B57C4);
}

uint64_t sub_1DB1B57C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DB1EF6B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DB1B586C()
{
  uint64_t result = sub_1DB1EF6B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TextDiagnosticsModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1B59F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextDiagnosticsModel.CodingKeys()
{
  return &type metadata for TextDiagnosticsModel.CodingKeys;
}

unint64_t sub_1DB1B5A30()
{
  unint64_t result = qword_1EA905C30;
  if (!qword_1EA905C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C30);
  }
  return result;
}

unint64_t sub_1DB1B5A88()
{
  unint64_t result = qword_1EA905C38;
  if (!qword_1EA905C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C38);
  }
  return result;
}

unint64_t sub_1DB1B5AE0()
{
  unint64_t result = qword_1EA905C40;
  if (!qword_1EA905C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C40);
  }
  return result;
}

uint64_t sub_1DB1B5B34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7478655472636FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69666E6F4372636FLL && a2 == 0xED000065636E6564 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x786F4272636FLL && a2 == 0xE600000000000000 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61636F4C64696CLL && a2 == 0xE900000000000065 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C61636F4C746C78 && a2 == 0xE900000000000065 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74786554746C78 && a2 == 0xE700000000000000 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69666E6F43746C78 && a2 == 0xED000065636E6564)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1DB1B5E64()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1B5F94()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1B60E4()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1B6240()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B63AC()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B6428()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B6514()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B6674()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B67B4()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B6838()
{
  return sub_1DB1F1EC0();
}

void *sub_1DB1B6958(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v14 = a1;
  uint64_t v7 = a1;
  if (a4 >> 62) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_1DB1F1BB0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E018BAD0](i - 4, a4) : *(id *)(a4 + 8 * i);
      uint64_t v7 = v10;
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v10;
      a2(&v14, &v13);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t VisualTranslationModel.updating(paragraphs:useIndex:allowFuzzy:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v81 = a3;
  uint64_t v69 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v7 - 8);
  long long v90 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v85 = (char *)&v67 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD60);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for TextModel();
  uint64_t v15 = *((void *)v14 - 1);
  MEMORY[0x1F4188790](v14);
  uint64_t v83 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v76 = (uint64_t)&v67 - v18;
  uint64_t v19 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v20 = *(int *)(v19 + 28);
  uint64_t v67 = (int *)v19;
  uint64_t v68 = v4;
  unint64_t v21 = *(void *)(v4 + v20);
  uint64_t v70 = a1;
  uint64_t v22 = *(void *)(a1 + 16);
  if ((a2 & 1) == 0)
  {
    if (!v22) {
      goto LABEL_44;
    }
    unint64_t v77 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v75 = v70 + v77;
    uint64_t v86 = *(void *)(v15 + 72);
    long long v73 = (unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
    long long v74 = (void (**)(char *, uint64_t, uint64_t, int *))(v15 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    uint64_t v29 = (uint64_t)v90;
    uint64_t v30 = v83;
    uint64_t v80 = v14;
    long long v71 = v13;
    uint64_t v72 = v22;
LABEL_15:
    uint64_t v31 = v75 + v86 * v28;
    if (!*(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = 1;
      goto LABEL_36;
    }
    uint64_t v87 = *(void *)(v21 + 16);
    uint64_t v78 = v28;
    unint64_t v79 = v21;
    uint64_t v32 = v21 + v77;
    uint64_t v33 = v14[7];
    uint64_t v82 = v75 + v86 * v28;
    uint64_t v84 = v31 + v33;
    swift_bridgeObjectRetain_n();
    uint64_t v34 = (uint64_t)v85;
    while (1)
    {
      sub_1DB1ACE80(v32, v30, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB11FF38(v30 + v14[7], v34);
      uint64_t v35 = sub_1DB1EF6B0();
      uint64_t v36 = *(void *)(v35 - 8);
      int64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      int v89 = v88(v34, 1, v35);
      if (v89 != 1) {
        break;
      }
      sub_1DB0E8BD4(v34, &qword_1EBA4E570);
      uint64_t v38 = 0;
LABEL_27:
      sub_1DB11FF38(v84, v29);
      if (v88(v29, 1, v35) == 1)
      {
        sub_1DB0E8BD4(v29, &qword_1EBA4E570);
        if (v89 == 1) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_1DB1EF590();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v90, v35);
        sub_1DB1F1ED0();
        sub_1DB1F1360();
        swift_bridgeObjectRelease();
        sub_1DB1EF590();
        sub_1DB1F1360();
        swift_bridgeObjectRelease();
        sub_1DB1F1EA0();
        swift_bridgeObjectRetain();
        sub_1DB1F1360();
        uint64_t v34 = (uint64_t)v85;
        swift_bridgeObjectRelease();
        long long v104 = v93;
        long long v105 = v94;
        uint64_t v106 = v95;
        long long v102 = v91;
        long long v103 = v92;
        uint64_t v39 = sub_1DB1F1EB0();
        uint64_t v29 = (uint64_t)v90;
        if (v89 != 1 && v38 == v39)
        {
LABEL_33:
          unint64_t v21 = v79;
          swift_bridgeObjectRelease();
          uint64_t v30 = v83;
          id v13 = v71;
          sub_1DB1C1BCC(v83, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for TextModel);
          uint64_t v40 = 0;
          uint64_t v22 = v72;
          goto LABEL_35;
        }
      }
      uint64_t v30 = v83;
      sub_1DB1C0384(v83, (uint64_t (*)(void))type metadata accessor for TextModel);
      v32 += v86;
      if (!--v87)
      {
        unint64_t v21 = v79;
        swift_bridgeObjectRelease();
        uint64_t v40 = 1;
        id v13 = v71;
        uint64_t v22 = v72;
LABEL_35:
        uint64_t v28 = v78;
        uint64_t v31 = v82;
LABEL_36:
        (*v74)(v13, v40, 1, v14);
        swift_bridgeObjectRelease();
        if ((*v73)(v13, 1, v14) == 1)
        {
          sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4DD60);
        }
        else
        {
          uint64_t v41 = v76;
          sub_1DB1C1BCC((uint64_t)v13, v76, (uint64_t (*)(void))type metadata accessor for TextModel);
          unint64_t v42 = *(void *)(v41 + v14[5]);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if (result)
          {
            if ((v42 & 0x8000000000000000) == 0) {
              goto LABEL_39;
            }
LABEL_42:
            __break(1u);
LABEL_43:
            swift_bridgeObjectRelease();
LABEL_45:
            unint64_t v43 = v21;
            uint64_t v44 = sub_1DB1EF570();
            uint64_t v46 = v68;
            uint64_t v45 = v69;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v69, v68, v44);
            uint64_t v47 = v67;
            uint64_t v48 = (long long *)(v46 + v67[5]);
            long long v49 = v48[9];
            long long v99 = v48[8];
            long long v100 = v49;
            uint64_t v101 = *((void *)v48 + 20);
            long long v50 = v48[5];
            long long v95 = v48[4];
            long long v96 = v50;
            long long v51 = v48[7];
            long long v97 = v48[6];
            long long v98 = v51;
            long long v52 = v48[3];
            long long v93 = v48[2];
            long long v94 = v52;
            long long v53 = v48[1];
            long long v91 = *v48;
            long long v92 = v53;
            uint64_t v54 = v67[6];
            uint64_t v55 = v46 + v54;
            uint64_t v56 = v45 + v54;
            uint64_t v57 = sub_1DB1EF520();
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v56, v55, v57);
            uint64_t v58 = *(void *)(v46 + v47[8]);
            char v59 = *(unsigned char *)(v46 + v47[9]);
            char v60 = *(unsigned char *)(v46 + v47[10]);
            uint64_t v61 = v45 + v47[5];
            long long v62 = v100;
            *(_OWORD *)(v61 + 128) = v99;
            *(_OWORD *)(v61 + 144) = v62;
            *(void *)(v61 + 160) = v101;
            long long v63 = v96;
            *(_OWORD *)(v61 + 64) = v95;
            *(_OWORD *)(v61 + 80) = v63;
            long long v64 = v98;
            *(_OWORD *)(v61 + 96) = v97;
            *(_OWORD *)(v61 + 112) = v64;
            long long v65 = v92;
            *(_OWORD *)uint64_t v61 = v91;
            *(_OWORD *)(v61 + 16) = v65;
            long long v66 = v94;
            *(_OWORD *)(v61 + 32) = v93;
            *(_OWORD *)(v61 + 48) = v66;
            *(void *)(v45 + v47[7]) = v43;
            *(void *)(v45 + v47[8]) = v58;
            *(unsigned char *)(v45 + v47[9]) = v59;
            *(unsigned char *)(v45 + v47[10]) = v60;
            *(unsigned char *)(v45 + v47[11]) = 0;
            return result;
          }
          uint64_t result = sub_1DB188FC0(v21);
          unint64_t v21 = result;
          if ((v42 & 0x8000000000000000) != 0) {
            goto LABEL_42;
          }
LABEL_39:
          if (v42 >= *(void *)(v21 + 16)) {
            goto LABEL_47;
          }
          sub_1DB189018(v31, v21 + v77 + v42 * v86);
          sub_1DB1C0384(v76, (uint64_t (*)(void))type metadata accessor for TextModel);
          uint64_t v29 = (uint64_t)v90;
        }
        if (++v28 == v22) {
          goto LABEL_43;
        }
        goto LABEL_15;
      }
    }
    sub_1DB1EF590();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    sub_1DB1F1ED0();
    sub_1DB1F1360();
    swift_bridgeObjectRelease();
    sub_1DB1EF590();
    sub_1DB1F1360();
    swift_bridgeObjectRelease();
    if (v81)
    {
      sub_1DB18AC60(*(void *)(v30 + v14[6]), *(void *)(v30 + v14[6] + 8));
      if (!v37)
      {
        sub_1DB1F1EA0();
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_1DB1F1EA0();
    swift_bridgeObjectRetain();
    sub_1DB1F1360();
    swift_bridgeObjectRelease_n();
LABEL_26:
    uint64_t v14 = v80;
    uint64_t v34 = (uint64_t)v85;
    long long v109 = v93;
    long long v110 = v94;
    uint64_t v111 = v95;
    long long v107 = v91;
    long long v108 = v92;
    uint64_t v38 = sub_1DB1F1EB0();
    uint64_t v29 = (uint64_t)v90;
    goto LABEL_27;
  }
  if (!v22)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    goto LABEL_45;
  }
  unint64_t v23 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = v70 + v23;
  uint64_t v25 = *(void *)(v15 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v26 = *(void *)(v24 + v14[5]);
    if ((v26 & 0x8000000000000000) != 0 || (int64_t)v26 >= *(void *)(v21 + 16)) {
      goto LABEL_4;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1DB188FC0(v21);
      unint64_t v21 = result;
    }
    if (v26 >= *(void *)(v21 + 16)) {
      break;
    }
    sub_1DB189018(v24, v21 + v23 + v26 * v25);
LABEL_4:
    v24 += v25;
    if (!--v22) {
      goto LABEL_43;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VisualTranslationModel(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, qword_1EBA4E520);
}

uint64_t sub_1DB1B73CC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for TextModel();
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v32 - v9;
  uint64_t v11 = *(void *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 28));
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12) {
    return 1;
  }
  uint64_t v13 = v11 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v14 = *(void *)(v5 + 72);
  v32[1] = v11;
  swift_bridgeObjectRetain();
  uint64_t v15 = v12 - 1;
  while (1)
  {
    sub_1DB1ACE80(v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextModel);
    if (*(void *)&v10[v4[11]]) {
      break;
    }
    uint64_t v16 = &v10[v4[6]];
    uint64_t v18 = *(void *)v16;
    unint64_t v17 = *((void *)v16 + 1);
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFLL;
    if (!((v17 & 0x2000000000000000) != 0 ? HIBYTE(v17) & 0xF : v19)) {
      break;
    }
    sub_1DB11FF38((uint64_t)&v10[v4[7]], (uint64_t)v3);
    uint64_t v21 = sub_1DB1EF6B0();
    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v3, 1, v21);
    sub_1DB0E8BD4((uint64_t)v3, &qword_1EBA4E570);
    if (v22 == 1) {
      break;
    }
    unint64_t v23 = &v10[v4[8]];
    unint64_t v24 = *((void *)v23 + 1);
    if (!v24) {
      break;
    }
    uint64_t v25 = *(void *)v23 & 0xFFFFFFFFFFFFLL;
    if (!((v24 & 0x2000000000000000) != 0 ? HIBYTE(v24) & 0xF : v25)) {
      break;
    }
    sub_1DB1ACE80((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v27 = *(void *)&v7[v4[11]];
    BOOL v28 = v27 == 0;
    sub_1DB1C0384((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB1C0384((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextModel);
    BOOL v30 = v15-- != 0;
    if (!v27)
    {
      v13 += v14;
      if (v30) {
        continue;
      }
    }
    goto LABEL_21;
  }
  sub_1DB1ACE80((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextModel);
  sub_1DB1C0384((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextModel);
  sub_1DB1C0384((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextModel);
  BOOL v28 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t VisualTranslationModel.update(paragraph:useIndex:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4E0);
  uint64_t v6 = *(void *)(type metadata accessor for TextModel() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DB1F4170;
  sub_1DB1ACE80(a1, v8 + v7, (uint64_t (*)(void))type metadata accessor for TextModel);
  VisualTranslationModel.updating(paragraphs:useIndex:allowFuzzy:)(v8, a2, 0, a3);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1DB1B7814(char *a1, char *a2)
{
  return sub_1DB1623E0(*a1, *a2);
}

uint64_t sub_1DB1B7820()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B78B4()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1B7934()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1B79C4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DB1F1C10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DB1B7A24(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x76726573624F6F6ELL;
  if (*v1) {
    unint64_t v2 = 0xD000000000000016;
  }
  unint64_t v3 = 0x80000001DB1FB350;
  if (!*v1) {
    unint64_t v3 = 0xEE00736E6F697461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DB1B7A74()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0x76726573624F6F6ELL;
  }
}

uint64_t VisualTranslationResult.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid;
  uint64_t v4 = sub_1DB1EF570();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t VisualTranslationResult.string.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VisualTranslationResult.isPassthrough.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough);
}

double VisualTranslationResult.topLeft.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft);
}

double VisualTranslationResult.topRight.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight);
}

double VisualTranslationResult.bottomLeft.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft);
}

double VisualTranslationResult.bottomRight.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight);
}

uint64_t sub_1DB1B7CCC()
{
  uint64_t v1 = type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v46 = (uint64_t)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F58);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v41 - v12;
  __n128 v16 = MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v41 - v15;
  uint64_t v43 = v1;
  uint64_t v18 = *(int *)(v1 + 28);
  uint64_t v45 = v0;
  uint64_t v19 = *(void *)(v0 + v18);
  if (*(void *)(v19 + 16))
  {
    uint64_t v20 = type metadata accessor for TextModel();
    uint64_t v21 = v20 - 8;
    uint64_t v22 = v19
        + ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80));
    sub_1DB11FF38(v22 + *(int *)(v20 + 28), (uint64_t)v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v22 + *(int *)(v21 + 44), v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    v23((char *)&v41 - v15, 1, 1, v3, v16);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v23)(v13, 1, 1, v3);
  }
  uint64_t v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1DB11FF38((uint64_t)v17, (uint64_t)v8);
  sub_1DB11FF38((uint64_t)v13, v24);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  int v26 = v25(v8, 1, v3);
  uint64_t v27 = v44;
  if (v26 == 1)
  {
    sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4E570);
    sub_1DB0E8BD4((uint64_t)v17, &qword_1EBA4E570);
    if (v25((char *)v24, 1, v3) == 1)
    {
      sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E570);
      uint64_t v28 = v46;
      sub_1DB1ACE80(v45, v46, type metadata accessor for VisualTranslationModel);
      char v29 = 1;
      goto LABEL_16;
    }
  }
  else
  {
    sub_1DB11FF38((uint64_t)v8, v44);
    if (v25((char *)v24, 1, v3) != 1)
    {
      BOOL v30 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v42, v24, v3);
      sub_1DB1BF188(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
      char v31 = sub_1DB1F1230();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
      v32(v30, v3);
      sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4E570);
      sub_1DB0E8BD4((uint64_t)v17, &qword_1EBA4E570);
      v32((char *)v27, v3);
      sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E570);
      uint64_t v28 = v46;
      sub_1DB1ACE80(v45, v46, type metadata accessor for VisualTranslationModel);
      if (v31)
      {
        char v29 = 1;
        goto LABEL_16;
      }
      goto LABEL_12;
    }
    sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4E570);
    sub_1DB0E8BD4((uint64_t)v17, &qword_1EBA4E570);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v27, v3);
  }
  sub_1DB0E8BD4((uint64_t)v8, &qword_1EA904F58);
  uint64_t v28 = v46;
  sub_1DB1ACE80(v45, v46, type metadata accessor for VisualTranslationModel);
LABEL_12:
  uint64_t v33 = *(void *)(v28 + *(int *)(v43 + 28));
  Array<A>.sourceParagraph.getter(v33);
  uint64_t v34 = sub_1DB1F1310();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  Array<A>.targetParagraph.getter(v33);
  uint64_t v37 = sub_1DB1F1310();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  if (v34 == v37 && v36 == v39)
  {
    swift_bridgeObjectRelease_n();
    char v29 = 1;
  }
  else
  {
    char v29 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  sub_1DB1C0384(v28, type metadata accessor for VisualTranslationModel);
  return v29 & 1;
}

id VisualTranslationResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void VisualTranslationResult.init()()
{
}

uint64_t sub_1DB1B8354()
{
  uint64_t result = 1684632949;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E69727473;
      break;
    case 2:
      uint64_t result = 0x6874737361507369;
      break;
    case 3:
      uint64_t result = 0x7466654C706F74;
      break;
    case 4:
      uint64_t result = 0x7468676952706F74;
      break;
    case 5:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 6:
      uint64_t result = 0x69526D6F74746F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB1B8444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DB1BF320(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DB1B846C(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF134();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1B84A8(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF134();
  return MEMORY[0x1F41862B0](a1, v2);
}

id VisualTranslationResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t VisualTranslationResult.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905C48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1BF134();
  sub_1DB1F1EF0();
  LOBYTE(v12) = 0;
  sub_1DB1EF570();
  sub_1DB1BF188(&qword_1EA903BE8, MEMORY[0x1E4F27990]);
  sub_1DB1F1D60();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1DB1F1D00();
    LOBYTE(v12) = 2;
    sub_1DB1F1D10();
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft);
    char v11 = 3;
    type metadata accessor for CGPoint(0);
    sub_1DB1BF188(&qword_1EA905B38, type metadata accessor for CGPoint);
    sub_1DB1F1D60();
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight);
    char v11 = 4;
    sub_1DB1F1D60();
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft);
    char v11 = 5;
    sub_1DB1F1D60();
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight);
    char v11 = 6;
    sub_1DB1F1D60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id VisualTranslationResult.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return VisualTranslationResult.init(from:)(a1);
}

id VisualTranslationResult.init(from:)(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1DB1EF570();
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v19 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905C58);
  uint64_t v17 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v8);
  sub_1DB1BF134();
  uint64_t v9 = v1;
  uint64_t v20 = v7;
  sub_1DB1F1EE0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v17;
    uint64_t v10 = v18;
    LOBYTE(v24) = 0;
    sub_1DB1BF188(&qword_1EA903BF8, MEMORY[0x1E4F27990]);
    long long v12 = v19;
    sub_1DB1F1CB0();
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid], v12, v4);
    LOBYTE(v24) = 1;
    uint64_t v14 = sub_1DB1F1C60();
    uint64_t v15 = (uint64_t *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string];
    uint64_t *v15 = v14;
    v15[1] = v16;
    LOBYTE(v24) = 2;
    v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough] = sub_1DB1F1C70() & 1;
    type metadata accessor for CGPoint(0);
    char v25 = 3;
    uint64_t v19 = (char *)sub_1DB1BF188(&qword_1EA905B48, type metadata accessor for CGPoint);
    sub_1DB1F1CB0();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft] = v24;
    char v25 = 4;
    sub_1DB1F1CB0();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight] = v24;
    char v25 = 5;
    sub_1DB1F1CB0();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft] = v24;
    char v25 = 6;
    sub_1DB1F1CB0();
    *(_OWORD *)&v9[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight] = v24;

    v23.receiver = v9;
    v23.super_class = ObjectType;
    id v8 = objc_msgSendSuper2(&v23, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v21);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v8;
}

id sub_1DB1B8E38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = VisualTranslationResult.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DB1B8E88(void *a1)
{
  return VisualTranslationResult.encode(to:)(a1);
}

BOOL static VisualTranslationTextAlignment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VisualTranslationTextAlignment.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t sub_1DB1B8EEC()
{
  return 0;
}

uint64_t sub_1DB1B8EF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_1DB1B8F28(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DB1B8F34(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF2CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1B8F70(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF2CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DB1B8FAC()
{
  uint64_t v1 = 0x676E696461656CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E696C69617274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265746E6563;
  }
}

uint64_t sub_1DB1B9004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DB1BF638(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DB1B902C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DB1B9038(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF1D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1B9074(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF1D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DB1B90B0(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF278();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1B90EC(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF278();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DB1B9128(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF224();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1B9164(uint64_t a1)
{
  unint64_t v2 = sub_1DB1BF224();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualTranslationTextAlignment.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905C60);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  objc_super v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905C68);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905C70);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905C78);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1BF1D0();
  sub_1DB1F1EF0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_1DB1BF278();
      sub_1DB1F1CD0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_1DB1BF224();
      uint64_t v17 = v23;
      sub_1DB1F1CD0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_1DB1BF2CC();
    sub_1DB1F1CD0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t VisualTranslationTextAlignment.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

uint64_t VisualTranslationTextAlignment.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905CA0);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905CA8);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905CB0);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905CB8);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1BF1D0();
  uint64_t v12 = (uint64_t)v39;
  sub_1DB1F1EE0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_1DB1F1CC0();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_1DB1F1AF0();
    swift_allocError();
    objc_super v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905CC0);
    *objc_super v23 = &type metadata for VisualTranslationTextAlignment;
    sub_1DB1F1C30();
    sub_1DB1F1AE0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_1DB1BF278();
      uint64_t v18 = v30;
      sub_1DB1F1C20();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_1DB1BF224();
      uint64_t v25 = v30;
      sub_1DB1F1C20();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_1DB1BF2CC();
    uint64_t v24 = v30;
    sub_1DB1F1C20();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
}

uint64_t sub_1DB1B9B04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VisualTranslationTextAlignment.init(from:)(a1, a2);
}

uint64_t sub_1DB1B9B1C(void *a1)
{
  return VisualTranslationTextAlignment.encode(to:)(a1);
}

uint64_t VisualTranslationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1EF570();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

__n128 VisualTranslationModel.bounds.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 20);
  long long v4 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(void *)(a1 + 160) = *(void *)(v3 + 160);
  long long v5 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  __n128 result = *(__n128 *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t VisualTranslationModel.boundsTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 24);
  uint64_t v4 = sub_1DB1EF520();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t VisualTranslationModel.paragraphs.getter()
{
  type metadata accessor for VisualTranslationModel(0);
  return swift_bridgeObjectRetain();
}

uint64_t VisualTranslationModel.numberOfLines.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 32));
}

uint64_t VisualTranslationModel.displayAsVerticalText.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 36));
}

uint64_t VisualTranslationModel.textAlignment.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VisualTranslationModel(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t VisualTranslationModel.significantTranscriptChange.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 44));
}

unint64_t sub_1DB1B9D48(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73646E756F62;
      break;
    case 2:
      unint64_t result = 0x695473646E756F62;
      break;
    case 3:
      unint64_t result = 0x7061726761726170;
      break;
    case 4:
      unint64_t result = 0x664F7265626D756ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x67696C4174786574;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DB1B9E70(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73646E756F62;
      break;
    case 2:
      unint64_t result = 0x695473646E756F62;
      break;
    case 3:
      unint64_t result = 0x7061726761726170;
      break;
    case 4:
      unint64_t result = 0x664F7265626D756ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x67696C4174786574;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB1B9F98(char *a1, char *a2)
{
  return sub_1DB162108(*a1, *a2);
}

uint64_t sub_1DB1B9FA4()
{
  return sub_1DB1B6240();
}

uint64_t sub_1DB1B9FB0()
{
  return sub_1DB1B60E4();
}

uint64_t sub_1DB1B9FB8()
{
  return sub_1DB1B6240();
}

uint64_t sub_1DB1B9FC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1BF788();
  *a1 = result;
  return result;
}

unint64_t sub_1DB1B9FF0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DB1B9D48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1DB1BA01C()
{
  return sub_1DB1B9E70(*v0);
}

uint64_t sub_1DB1BA024@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1BF788();
  *a1 = result;
  return result;
}

void sub_1DB1BA04C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1DB1BA058(uint64_t a1)
{
  unint64_t v2 = sub_1DB1C03E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB1BA094(uint64_t a1)
{
  unint64_t v2 = sub_1DB1C03E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualTranslationModel.init(id:bounds:boundsTimestamp:paragraphs:numberOfLines:displayAsVerticalText:textAlignment:significantTranscriptChange:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  long long v31 = a2[8];
  long long v32 = a2[9];
  uint64_t v33 = *((void *)a2 + 20);
  long long v27 = a2[4];
  long long v28 = a2[5];
  long long v29 = a2[6];
  long long v30 = a2[7];
  long long v23 = *a2;
  long long v24 = a2[1];
  long long v25 = a2[2];
  long long v26 = a2[3];
  char v16 = *a7;
  uint64_t v17 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a9, a1, v17);
  uint64_t v18 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v19 = a9 + v18[5];
  *(_OWORD *)(v19 + 128) = v31;
  *(_OWORD *)(v19 + 144) = v32;
  *(void *)(v19 + 160) = v33;
  *(_OWORD *)(v19 + 64) = v27;
  *(_OWORD *)(v19 + 80) = v28;
  *(_OWORD *)(v19 + 96) = v29;
  *(_OWORD *)(v19 + 112) = v30;
  *(_OWORD *)uint64_t v19 = v23;
  *(_OWORD *)(v19 + 16) = v24;
  *(_OWORD *)(v19 + 32) = v25;
  *(_OWORD *)(v19 + 48) = v26;
  uint64_t v20 = a9 + v18[6];
  uint64_t v21 = sub_1DB1EF520();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a3, v21);
  *(void *)(a9 + v18[7]) = a4;
  *(void *)(a9 + v18[8]) = a5;
  *(unsigned char *)(a9 + v18[9]) = a6;
  *(unsigned char *)(a9 + v18[10]) = v16;
  *(unsigned char *)(a9 + v18[11]) = a8;
  return result;
}

uint64_t VisualTranslationModel.init(id:string:bounds:boundsTimestamp:numberOfLines:displayAsVerticalText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v73 = a7;
  uint64_t v72 = a6;
  uint64_t v70 = a5;
  uint64_t v66 = a3;
  uint64_t v65 = a2;
  uint64_t v59 = a1;
  uint64_t v71 = a8;
  uint64_t v69 = sub_1DB1EF520();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v67 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1EF570();
  uint64_t v58 = v11;
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v12 = v62;
  MEMORY[0x1F4188790](v11);
  long long v64 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DB1EF6B0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TextModel();
  uint64_t v21 = (int *)(v20 - 8);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v63 = v61;
  MEMORY[0x1F4188790](v20);
  long long v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v24 = a4[9];
  long long v82 = a4[8];
  long long v83 = v24;
  uint64_t v84 = *((void *)a4 + 20);
  long long v25 = a4[5];
  long long v78 = a4[4];
  long long v79 = v25;
  long long v26 = a4[7];
  long long v80 = a4[6];
  long long v81 = v26;
  long long v27 = a4[1];
  long long v74 = *a4;
  long long v75 = v27;
  long long v28 = a4[3];
  long long v76 = a4[2];
  long long v77 = v28;
  char v60 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v60(v23, a1, v11);
  long long v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v19, 1, 1, v14);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v30 = (uint64_t)&v23[v21[9]];
  v29((char *)v30, 1, 1, v14);
  long long v31 = &v23[v21[10]];
  *(void *)long long v31 = 0;
  *((void *)v31 + 1) = 0;
  uint64_t v32 = v21[13];
  *(void *)&v23[v32] = 0;
  uint64_t v33 = v21[14];
  *(void *)&v23[v33] = 0;
  *(void *)&v23[v21[7]] = 0;
  uint64_t v34 = &v23[v21[8]];
  uint64_t v35 = v66;
  *(void *)uint64_t v34 = v65;
  *((void *)v34 + 1) = v35;
  sub_1DB106F4C((uint64_t)v19, v30);
  swift_bridgeObjectRelease();
  *(void *)long long v31 = 0;
  *((void *)v31 + 1) = 0;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[v21[11]], v57, v14);
  *(void *)&v23[v21[12]] = 0;

  *(void *)&v23[v32] = 0;
  *(void *)&v23[v33] = 1;
  uint64_t v36 = v64;
  uint64_t v37 = v59;
  uint64_t v38 = v58;
  v60(v64, v59, v58);
  uint64_t v39 = v68;
  char v40 = v67;
  uint64_t v41 = v70;
  uint64_t v42 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v70, v69);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4E0);
  unint64_t v43 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1DB1F4170;
  sub_1DB1ACE80((uint64_t)v23, v44 + v43, (uint64_t (*)(void))type metadata accessor for TextModel);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v42);
  uint64_t v45 = v62;
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v37, v38);
  sub_1DB1C0384((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for TextModel);
  uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  uint64_t v47 = v71;
  v46(v71, v36, v38);
  uint64_t v48 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v49 = v47 + v48[5];
  long long v50 = v75;
  *(_OWORD *)uint64_t v49 = v74;
  *(_OWORD *)(v49 + 16) = v50;
  long long v51 = v79;
  *(_OWORD *)(v49 + 64) = v78;
  *(_OWORD *)(v49 + 80) = v51;
  long long v52 = v77;
  *(_OWORD *)(v49 + 32) = v76;
  *(_OWORD *)(v49 + 48) = v52;
  *(void *)(v49 + 160) = v84;
  long long v53 = v83;
  *(_OWORD *)(v49 + 128) = v82;
  *(_OWORD *)(v49 + 144) = v53;
  long long v54 = v81;
  *(_OWORD *)(v49 + 96) = v80;
  *(_OWORD *)(v49 + 112) = v54;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v47 + v48[6], v40, v42);
  *(void *)(v47 + v48[7]) = v44;
  *(void *)(v47 + v48[8]) = v72;
  *(unsigned char *)(v47 + v48[9]) = v73;
  *(unsigned char *)(v47 + v48[10]) = 3;
  *(unsigned char *)(v47 + v48[11]) = 0;
  return result;
}

void sub_1DB1BA884(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v42 = a6;
  uint64_t v43 = a1;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v38 = a3;
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v37 - v19;
  uint64_t v41 = sub_1DB1EF570();
  uint64_t v21 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  long long v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF560();
  uint64_t v24 = MEMORY[0x1E018B320](a2, v38, v39, v40);
  uint64_t v39 = v25;
  uint64_t v40 = v24;
  uint64_t v26 = (uint64_t)v42;
  uint64_t v42 = v20;
  sub_1DB11FF38(v26, (uint64_t)v20);
  sub_1DB11FF38(a7, (uint64_t)v17);
  int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  uint64_t v44 = v14;
  if (v27 == 1)
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1DB0E8BD4((uint64_t)v17, &qword_1EBA4E570);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
  }
  long long v28 = (int *)type metadata accessor for TextModel();
  uint64_t v29 = a8 + v28[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v29, 1, 1, v11);
  uint64_t v30 = (void *)(a8 + v28[8]);
  *uint64_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = v28[11];
  *(void *)(a8 + v31) = 0;
  uint64_t v32 = v11;
  uint64_t v33 = v28[12];
  *(void *)(a8 + v33) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a8, v23, v41);
  uint64_t v34 = (uint64_t)v42;
  *(void *)(a8 + v28[5]) = v43;
  uint64_t v35 = (uint64_t *)(a8 + v28[6]);
  uint64_t v36 = v39;
  *uint64_t v35 = v40;
  v35[1] = v36;
  sub_1DB106F4C(v34, v29);
  swift_bridgeObjectRelease();
  *uint64_t v30 = 0;
  v30[1] = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a8 + v28[9], v44, v32);
  *(void *)(a8 + v28[10]) = 0;

  *(void *)(a8 + v31) = 0;
  *(void *)(a8 + v33) = 1;
}

uint64_t sub_1DB1BABBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X6>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v68 = a6;
  uint64_t v62 = a3;
  uint64_t v63 = a1;
  uint64_t v67 = a7;
  uint64_t v66 = sub_1DB1EF520();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  long long v64 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1DB1EF570();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v57 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v56 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = sub_1DB1EF6B0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  long long v23 = (char *)&v51 - v22;
  swift_bridgeObjectRelease();
  long long v24 = a5[9];
  long long v77 = a5[8];
  long long v78 = v24;
  uint64_t v79 = *((void *)a5 + 20);
  long long v25 = a5[5];
  long long v73 = a5[4];
  long long v74 = v25;
  long long v26 = a5[7];
  long long v75 = a5[6];
  long long v76 = v26;
  long long v27 = a5[1];
  long long v69 = *a5;
  long long v70 = v27;
  long long v28 = a5[3];
  long long v71 = a5[2];
  long long v72 = v28;
  uint64_t v61 = a4;
  sub_1DB11FF38(a4, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1DB0E8BD4((uint64_t)v16, &qword_1EBA4E570);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
  }
  id v29 = objc_msgSend(a2, sel_getCROutputRegion);
  id v30 = objc_msgSend(v29, sel_layoutDirection);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v31(v20, v23, v17);
  id v58 = a2;
  BOOL v55 = v30 == (id)5 && Locale.supportsVerticalText()();
  long long v52 = *(void (**)(char *, uint64_t))(v18 + 8);
  v52(v20, v17);
  uint64_t v32 = v56;
  uint64_t v33 = v23;
  v31(v56, v23, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v32, 0, 1, v17);
  uint64_t v34 = (uint64_t)v62;
  uint64_t v54 = sub_1DB1BF9A0(v29, v62, v32);
  sub_1DB0E8BD4((uint64_t)v32, &qword_1EBA4E570);
  uint64_t v56 = (char *)objc_msgSend(v29, sel_numberOfLines);
  unint64_t v35 = (unint64_t)objc_msgSend(v29, sel_textAlignment);
  unsigned int v36 = 0x2010003u >> (8 * v35);
  if (v35 >= 4) {
    unsigned int v36 = 3;
  }
  unsigned int v53 = v36;
  uint64_t v37 = v59;
  uint64_t v38 = v57;
  uint64_t v39 = v63;
  uint64_t v40 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v57, v63, v60);
  uint64_t v41 = v64;
  sub_1DB1EF4F0();

  sub_1DB0E8BD4(v61, &qword_1EBA4E570);
  sub_1DB0E8BD4(v34, &qword_1EBA4E570);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v40);
  v52(v33, v17);
  uint64_t v42 = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v67, v38, v40);
  uint64_t v43 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v44 = v42 + v43[5];
  long long v45 = v70;
  *(_OWORD *)uint64_t v44 = v69;
  *(_OWORD *)(v44 + 16) = v45;
  long long v46 = v74;
  *(_OWORD *)(v44 + 64) = v73;
  *(_OWORD *)(v44 + 80) = v46;
  long long v47 = v72;
  *(_OWORD *)(v44 + 32) = v71;
  *(_OWORD *)(v44 + 48) = v47;
  *(void *)(v44 + 160) = v79;
  long long v48 = v78;
  *(_OWORD *)(v44 + 128) = v77;
  *(_OWORD *)(v44 + 144) = v48;
  long long v49 = v76;
  *(_OWORD *)(v44 + 96) = v75;
  *(_OWORD *)(v44 + 112) = v49;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v65 + 32))(v42 + v43[6], v41, v66);
  *(void *)(v42 + v43[7]) = v54;
  *(void *)(v42 + v43[8]) = v56;
  *(unsigned char *)(v42 + v43[9]) = v55;
  *(unsigned char *)(v42 + v43[10]) = v53;
  *(unsigned char *)(v42 + v43[11]) = v68 & 1;
  return result;
}

uint64_t sub_1DB1BB1FC@<X0>(id a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v66 = a3;
  id v64 = a2;
  uint64_t v8 = sub_1DB1EF520();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  id v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DB1EF570();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  BOOL v55 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v12 - 8);
  unsigned int v53 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v17 = sub_1DB1EF6B0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  long long v23 = (char *)&v52 - v22;
  uint64_t v65 = a4;
  sub_1DB11FF38(a4, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1DB0E8BD4((uint64_t)v16, &qword_1EBA4E570);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
  }
  id v24 = objc_msgSend(a1, sel_layoutDirection);
  long long v25 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v25(v20, v23, v17);
  uint64_t v63 = v23;
  BOOL v54 = v24 == (id)5 && Locale.supportsVerticalText()();
  long long v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v26(v20, v17);
  id v27 = objc_msgSend(a1, sel_text);
  if (!v27)
  {

    sub_1DB0E8BD4(v65, &qword_1EBA4E570);
    sub_1DB0E8BD4((uint64_t)v66, &qword_1EBA4E570);
    v26(v63, v17);
    goto LABEL_14;
  }
  long long v28 = v27;
  uint64_t v61 = v26;
  uint64_t v62 = a5;
  uint64_t v29 = sub_1DB1F1290();
  unint64_t v31 = v30;

  swift_bridgeObjectRelease();
  uint64_t v32 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0) {
    uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
  }
  if (!v32
    || (a1 = a1,
        sub_1DB1AEF3C(a1, (uint64_t)v67),
        sub_1DB1C1D0C((uint64_t)v67, (uint64_t)v68),
        sub_1DB1C1D0C((uint64_t)v68, (uint64_t)v69),
        sub_1DB1C1D74((uint64_t)v69) == 1))
  {

    sub_1DB0E8BD4(v65, &qword_1EBA4E570);
    sub_1DB0E8BD4((uint64_t)v66, &qword_1EBA4E570);
    v61(v63, v17);
    a5 = v62;
LABEL_14:
    uint64_t v33 = type metadata accessor for VisualTranslationModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a5, 1, 1, v33);
  }
  unint64_t v35 = v53;
  unsigned int v36 = v63;
  v25(v53, v63, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v35, 0, 1, v17);
  uint64_t v37 = (uint64_t)v66;
  uint64_t v52 = sub_1DB1BF9A0(a1, v66, v35);
  sub_1DB0E8BD4((uint64_t)v35, &qword_1EBA4E570);
  unint64_t v38 = (unint64_t)objc_msgSend(a1, sel_textAlignment);
  unsigned int v39 = 0x2010003u >> (8 * v38);
  if (v38 >= 4) {
    unsigned int v39 = 3;
  }
  LODWORD(v53) = v39;
  id v40 = objc_msgSend(a1, sel_uuid);
  uint64_t v41 = v55;
  sub_1DB1EF550();

  uint64_t v42 = v58;
  sub_1DB1EF4F0();
  id v43 = objc_msgSend(a1, sel_numberOfLines);

  sub_1DB0E8BD4(v65, &qword_1EBA4E570);
  sub_1DB0E8BD4(v37, &qword_1EBA4E570);
  v61(v36, v17);
  uint64_t v44 = v62;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v62, v41, v57);
  long long v45 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v46 = v44 + v45[5];
  long long v47 = v69[1];
  *(_OWORD *)uint64_t v46 = v69[0];
  *(_OWORD *)(v46 + 16) = v47;
  long long v48 = v69[5];
  *(_OWORD *)(v46 + 64) = v69[4];
  *(_OWORD *)(v46 + 80) = v48;
  long long v49 = v69[3];
  *(_OWORD *)(v46 + 32) = v69[2];
  *(_OWORD *)(v46 + 48) = v49;
  *(void *)(v46 + 160) = v70;
  long long v50 = v69[9];
  *(_OWORD *)(v46 + 128) = v69[8];
  *(_OWORD *)(v46 + 144) = v50;
  long long v51 = v69[7];
  *(_OWORD *)(v46 + 96) = v69[6];
  *(_OWORD *)(v46 + 112) = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v44 + v45[6], v42, v60);
  *(void *)(v44 + v45[7]) = v52;
  *(void *)(v44 + v45[8]) = v43;
  *(unsigned char *)(v44 + v45[9]) = v54;
  *(unsigned char *)(v44 + v45[10]) = (_BYTE)v53;
  *(unsigned char *)(v44 + v45[11]) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v45 - 1) + 56))(v44, 0, 1, v45);
}

uint64_t VisualTranslationModel.updateTranslation(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v2, v6);
  long long v7 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v8 = (long long *)(v3 + v7[5]);
  long long v27 = v8[8];
  long long v28 = v8[9];
  uint64_t v29 = *((void *)v8 + 20);
  long long v23 = v8[4];
  long long v24 = v8[5];
  long long v25 = v8[6];
  long long v26 = v8[7];
  long long v21 = v8[2];
  long long v22 = v8[3];
  long long v19 = *v8;
  long long v20 = v8[1];
  uint64_t v9 = v7[6];
  uint64_t v10 = v3 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  uint64_t v13 = *(void *)(a1 + v7[7]);
  uint64_t v14 = *(void *)(a1 + v7[8]);
  char v15 = *(unsigned char *)(a1 + v7[9]);
  char v16 = *(unsigned char *)(a1 + v7[10]);
  uint64_t v17 = a2 + v7[5];
  *(_OWORD *)(v17 + 128) = v27;
  *(_OWORD *)(v17 + 144) = v28;
  *(void *)(v17 + 160) = v29;
  *(_OWORD *)(v17 + 64) = v23;
  *(_OWORD *)(v17 + 80) = v24;
  *(_OWORD *)(v17 + 96) = v25;
  *(_OWORD *)(v17 + 112) = v26;
  *(_OWORD *)uint64_t v17 = v19;
  *(_OWORD *)(v17 + 16) = v20;
  *(_OWORD *)(v17 + 32) = v21;
  *(_OWORD *)(v17 + 48) = v22;
  *(void *)(a2 + v7[7]) = v13;
  *(void *)(a2 + v7[8]) = v14;
  *(unsigned char *)(a2 + v7[9]) = v15;
  *(unsigned char *)(a2 + v7[10]) = v16;
  *(unsigned char *)(a2 + v7[11]) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t VisualTranslationModel.updateBounds(bounds:boundsTimeStamp:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  long long v26 = a1[8];
  long long v27 = a1[9];
  uint64_t v28 = *((void *)a1 + 20);
  long long v22 = a1[4];
  long long v23 = a1[5];
  long long v24 = a1[6];
  long long v25 = a1[7];
  long long v18 = *a1;
  long long v19 = a1[1];
  long long v20 = a1[2];
  long long v21 = a1[3];
  long long v7 = (int *)type metadata accessor for VisualTranslationModel(0);
  sub_1DB1EF500();
  if (v8 > 0.0) {
    return sub_1DB1ACE80(v4, a3, type metadata accessor for VisualTranslationModel);
  }
  uint64_t v10 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a3, v4, v10);
  uint64_t v11 = a3 + v7[6];
  uint64_t v12 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a2, v12);
  uint64_t v13 = *(void *)(v4 + v7[7]);
  uint64_t v14 = *(void *)(v4 + v7[8]);
  char v15 = *(unsigned char *)(v4 + v7[9]);
  char v16 = *(unsigned char *)(v4 + v7[10]);
  uint64_t v17 = a3 + v7[5];
  *(_OWORD *)(v17 + 128) = v26;
  *(_OWORD *)(v17 + 144) = v27;
  *(void *)(v17 + 160) = v28;
  *(_OWORD *)(v17 + 64) = v22;
  *(_OWORD *)(v17 + 80) = v23;
  *(_OWORD *)(v17 + 96) = v24;
  *(_OWORD *)(v17 + 112) = v25;
  *(_OWORD *)uint64_t v17 = v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_OWORD *)(v17 + 32) = v20;
  *(_OWORD *)(v17 + 48) = v21;
  *(void *)(a3 + v7[7]) = v13;
  *(void *)(a3 + v7[8]) = v14;
  *(unsigned char *)(a3 + v7[9]) = v15;
  *(unsigned char *)(a3 + v7[10]) = v16;
  *(unsigned char *)(a3 + v7[11]) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t VisualTranslationModel.json.getter()
{
  sub_1DB1EF340();
  swift_allocObject();
  sub_1DB1EF330();
  type metadata accessor for VisualTranslationModel(0);
  sub_1DB1BF188(&qword_1EA905CC8, (void (*)(uint64_t))type metadata accessor for VisualTranslationModel);
  uint64_t v0 = sub_1DB1EF320();
  swift_release();
  return v0;
}

uint64_t sub_1DB1BBE6C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1DB1F1B40();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1E018BAD0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1DB1F1B20();
        sub_1DB1F1B50();
        sub_1DB1F1B60();
        sub_1DB1F1B30();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        double v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1DB1F1B20();
        sub_1DB1F1B50();
        sub_1DB1F1B60();
        sub_1DB1F1B30();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
    sub_1DB1F1B40();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1DB1BC050(unint64_t *a1, void **a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a1;
  uint64_t v53 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v51 = (uint64_t)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v50 = (char *)v43 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v45 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (uint64_t)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  uint64_t v47 = (uint64_t)v43 - v19;
  long long v20 = *a2;
  if (a3) {
    uint64_t v21 = 4;
  }
  else {
    uint64_t v21 = 8;
  }
  id v46 = v20;
  id v22 = objc_msgSend(v20, sel_getCROutputRegion, v18);
  id v23 = objc_msgSend(v22, sel_contentsWithTypes_, v21);

  sub_1DB0E2EFC(0, &qword_1EBA4E4B8);
  unint64_t v24 = sub_1DB1F14A0();

  if ((a3 & 1) == 0 || !sub_1DB1BBE6C(v24)) {
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  long long v25 = self;
  sub_1DB0E2EFC(0, &qword_1EBA4E4D0);
  long long v26 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v25, sel_groupedParagraphBlocksFromParagraphs_, v26);

  sub_1DB0E2EFC(0, &qword_1EBA4E4C8);
  unint64_t v28 = sub_1DB1F14A0();

  if (v28 >> 62) {
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  sub_1DB1F1DC0();
  unint64_t v24 = v28;
  while (1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1DB1F1BB0();
      swift_bridgeObjectRelease();
      if (!v29) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v29 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v29) {
        return swift_bridgeObjectRelease();
      }
    }
    if (v29 >= 1) {
      break;
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1DB1F1BA0();
    swift_bridgeObjectRelease();
  }
  v43[1] = v5;
  uint64_t v44 = a5;
  uint64_t v30 = 0;
  unint64_t v54 = v24;
  unint64_t v31 = v24 & 0xC000000000000001;
  uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  do
  {
    if (v31) {
      id v33 = (id)MEMORY[0x1E018BAD0](v30, v54);
    }
    else {
      id v33 = *(id *)(v54 + 8 * v30 + 32);
    }
    uint64_t v34 = v33;
    unint64_t v35 = v50;
    sub_1DB11FF38(v53, (uint64_t)v50);
    uint64_t v36 = v51;
    sub_1DB11FF38(a5, v51);
    id v37 = v34;
    sub_1DB1BB1FC(v37, v46, v35, v36, (uint64_t)v15);
    if ((*v32)(v15, 1, v49) == 1)
    {

      sub_1DB0E8BD4((uint64_t)v15, &qword_1EBA4E458);
    }
    else
    {
      uint64_t v38 = v47;
      sub_1DB1C1BCC((uint64_t)v15, v47, type metadata accessor for VisualTranslationModel);
      sub_1DB1ACE80(v38, v48, type metadata accessor for VisualTranslationModel);
      unint64_t v39 = *v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_1DB188C74(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1) {
        unint64_t v39 = sub_1DB188C74(v40 > 1, v41 + 1, 1, v39);
      }
      *(void *)(v39 + 16) = v41 + 1;
      sub_1DB1C1BCC(v48, v39+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v41, type metadata accessor for VisualTranslationModel);

      *uint64_t v52 = v39;
      sub_1DB1C0384(v47, type metadata accessor for VisualTranslationModel);
      a5 = v44;
    }
    ++v30;
  }
  while (v29 != v30);
  return swift_bridgeObjectRelease();
}

uint64_t static VisualTranslationModel.models(from:currentModels:sourceLocale:targetLocale:)(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t result = MEMORY[0x1E4FBC868];
  uint64_t v13 = MEMORY[0x1E4FBC868];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v10 = *(void *)(sub_1DB1F1190() - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1DB1BC6D8((uint64_t)&v13, v11, a2, a3, a4);
      v11 += v12;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_1DB1BC6D8(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v188 = a5;
  uint64_t v187 = a4;
  v185 = (void (*)(char *, uint64_t, uint64_t))a3;
  uint64_t v205 = a2;
  uint64_t v183 = a1;
  uint64_t v171 = sub_1DB1EF520();
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x1F4188790](v171);
  uint64_t v168 = (char *)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v6 - 8);
  int v172 = (char *)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v173 = (uint64_t)&v160 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v182 = (char *)&v160 - v11;
  MEMORY[0x1F4188790](v12);
  v181 = (char *)&v160 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v169 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v180 = (uint64_t)&v160 - v17;
  uint64_t v192 = sub_1DB1EF6B0();
  uint64_t v191 = *(void *)(v192 - 8);
  MEMORY[0x1F4188790](v192);
  uint64_t v176 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v177 = (char *)&v160 - v20;
  uint64_t v194 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v189 = *(void *)(v194 - 8);
  MEMORY[0x1F4188790](v194);
  uint64_t v175 = (uint64_t)&v160 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v178 = (uint64_t)&v160 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v174 = (uint64_t)&v160 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v179 = (uint64_t)&v160 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049E0);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v184 = (char *)&v160 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = sub_1DB1EF570();
  uint64_t v190 = *(void *)(v195 - 8);
  MEMORY[0x1F4188790](v195);
  uint64_t v167 = (char *)&v160 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v186 = (uint64_t)&v160 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v196 = (uint64_t)&v160 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v193 = (char *)&v160 - v36;
  uint64_t v37 = sub_1DB1F1190();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  unint64_t v40 = (char *)&v160 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v41);
  id v43 = (char *)&v160 - v42;
  uint64_t v44 = sub_1DB1F10E0();
  uint64_t v45 = *(void *)(v44 - 8);
  __n128 v46 = MEMORY[0x1F4188790](v44);
  uint64_t v48 = (char *)&v160 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v38 + 16);
  v49(v43, v205, v37, v46);
  if ((*(unsigned int (**)(char *, uint64_t))(v38 + 88))(v43, v37) == *MEMORY[0x1E4F45DF8])
  {
    (*(void (**)(char *, uint64_t))(v38 + 96))(v43, v37);
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v48, v43, v44);
    long long v50 = (void *)sub_1DB1F10C0();
    self;
    uint64_t v51 = (void *)swift_dynamicCastObjCClass();
    if (v51)
    {
      id v163 = v50;
      unint64_t v164 = v48;
      uint64_t v165 = v45;
      uint64_t v166 = v44;
      uint64_t v161 = v51;
      id v52 = objc_msgSend(v51, sel_getCROutputRegion);
      ((void (*)(char *, uint64_t, uint64_t))v49)(v40, v205, v37);
      id v53 = objc_msgSend(v52, sel_trackingID, sub_1DB1AF1EC(v40, (uint64_t)v203));
      if (v53)
      {
        unint64_t v54 = v53;
        uint64_t v55 = v196;
        sub_1DB1EF550();

        uint64_t v56 = v190;
        uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v190 + 32);
        uint64_t v58 = (uint64_t)v184;
        uint64_t v59 = v55;
        uint64_t v60 = v195;
        v57(v184, v59, v195);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v60);
        int v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v58, 1, v60);
        uint64_t v62 = v194;
        uint64_t v63 = (uint64_t)v193;
        id v64 = v185;
        if (v61 != 1)
        {
          v57(v193, v58, v60);
LABEL_15:
          LODWORD(v205) = objc_msgSend(v52, sel_significantTranscriptChange);
          uint64_t v70 = v64[2];
          id v162 = v52;
          if (!v70 || (unint64_t v71 = sub_1DB1A8DE8(v63), (v72 & 1) == 0))
          {
            uint64_t v81 = v60;
            long long v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
            v82(v196, v63, v81);
            uint64_t v83 = v186;
            v82(v186, v63, v81);
            uint64_t v84 = v191;
            uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v191 + 16);
            uint64_t v86 = v181;
            uint64_t v87 = v192;
            v85(v181, v187, v192);
            int64_t v88 = *(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56);
            v88(v86, 0, 1, v87);
            uint64_t v89 = (uint64_t)v182;
            v85(v182, v188, v87);
            v88((void *)v89, 0, 1, v87);
            id v90 = v163;
            uint64_t v91 = v180;
            sub_1DB1BABBC(v83, v161, v86, v89, v203, v205, v180);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v189 + 56))(v91, 0, 1, v194);
            sub_1DB1D33C0(v91, v196);

            (*(void (**)(char *, uint64_t))(v56 + 8))(v193, v195);
            (*(void (**)(char *, uint64_t))(v165 + 8))(v164, v166);
            return;
          }
          uint64_t v73 = v174;
          sub_1DB1ACE80(v64[7] + *(void *)(v189 + 72) * v71, v174, type metadata accessor for VisualTranslationModel);
          uint64_t v74 = v179;
          sub_1DB1C1BCC(v73, v179, type metadata accessor for VisualTranslationModel);
          uint64_t v75 = v178;
          sub_1DB1ACE80(v74, v178, type metadata accessor for VisualTranslationModel);
          uint64_t v76 = v191;
          long long v77 = *(void (**)(char *, uint64_t, uint64_t))(v191 + 16);
          long long v78 = v177;
          uint64_t v79 = v192;
          v77(v177, v187, v192);
          if (v205)
          {
            long long v80 = *(void (**)(char *, uint64_t))(v76 + 8);
            v80(v78, v79);
LABEL_30:
            sub_1DB1C0384(v178, type metadata accessor for VisualTranslationModel);
            uint64_t v110 = v175;
            sub_1DB1ACE80(v74, v175, type metadata accessor for VisualTranslationModel);
            uint64_t v111 = v176;
            v77(v176, v188, v79);
LABEL_31:
            v80(v111, v79);
            goto LABEL_32;
          }
          uint64_t v92 = *(void *)(v75 + *(int *)(v62 + 28));
          uint64_t v93 = *(void *)(v92 + 16);
          v185 = v77;
          if (v93)
          {
            uint64_t v94 = type metadata accessor for TextModel();
            uint64_t v95 = v92
                + ((*(unsigned __int8 *)(*(void *)(v94 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v94 - 8) + 80))
                + *(int *)(v94 + 28);
            uint64_t v96 = v173;
            sub_1DB11FF38(v95, v173);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v96, 1, v79) != 1)
            {
              uint64_t v201 = sub_1DB1EF590();
              uint64_t v202 = v97;
              uint64_t v199 = 45;
              unint64_t v200 = 0xE100000000000000;
              uint64_t v197 = 95;
              unint64_t v198 = 0xE100000000000000;
              sub_1DB0F0708();
              uint64_t v98 = sub_1DB1F1950();
              long long v78 = v177;
              uint64_t v99 = v98;
              uint64_t v100 = v96;
              uint64_t v102 = v101;
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v100, v79);
              goto LABEL_25;
            }
          }
          else
          {
            uint64_t v96 = v173;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v173, 1, 1, v79);
          }
          sub_1DB0E8BD4(v96, &qword_1EBA4E570);
          uint64_t v99 = 0;
          uint64_t v102 = 0;
LABEL_25:
          long long v103 = v78;
          uint64_t v201 = sub_1DB1EF590();
          uint64_t v202 = v104;
          uint64_t v199 = 45;
          unint64_t v200 = 0xE100000000000000;
          uint64_t v197 = 95;
          unint64_t v198 = 0xE100000000000000;
          sub_1DB0F0708();
          uint64_t v105 = sub_1DB1F1950();
          uint64_t v107 = v106;
          swift_bridgeObjectRelease();
          if (!v102)
          {
            long long v80 = *(void (**)(char *, uint64_t))(v191 + 8);
            uint64_t v79 = v192;
            v80(v103, v192);
            swift_bridgeObjectRelease();
            long long v77 = v185;
            goto LABEL_30;
          }
          uint64_t v108 = v191;
          if (v99 == v105 && v102 == v107) {
            char v109 = 1;
          }
          else {
            char v109 = sub_1DB1F1DB0();
          }
          long long v77 = v185;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          long long v80 = *(void (**)(char *, uint64_t))(v108 + 8);
          uint64_t v125 = v192;
          v80(v177, v192);
          swift_bridgeObjectRelease_n();
          sub_1DB1C0384(v178, type metadata accessor for VisualTranslationModel);
          uint64_t v110 = v175;
          sub_1DB1ACE80(v74, v175, type metadata accessor for VisualTranslationModel);
          uint64_t v111 = v176;
          v77(v176, v188, v125);
          if ((v109 & 1) == 0)
          {
            uint64_t v79 = v192;
            goto LABEL_31;
          }
          uint64_t v126 = *(void *)(v110 + *(int *)(v194 + 28));
          if (*(void *)(v126 + 16))
          {
            uint64_t v127 = type metadata accessor for TextModel();
            uint64_t v128 = v126
                 + ((*(unsigned __int8 *)(*(void *)(v127 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v127 - 8) + 80))
                 + *(int *)(v127 + 36);
            uint64_t v129 = (uint64_t)v172;
            uint64_t v130 = v192;
            v77(v172, v128, v192);
            uint64_t v131 = v191;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v191 + 56))(v129, 0, 1, v130);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130) != 1)
            {
              uint64_t v201 = sub_1DB1EF590();
              uint64_t v202 = v132;
              uint64_t v199 = 45;
              unint64_t v200 = 0xE100000000000000;
              uint64_t v197 = 95;
              unint64_t v198 = 0xE100000000000000;
              uint64_t v205 = sub_1DB1F1950();
              uint64_t v134 = v133;
              swift_bridgeObjectRelease();
              v80((char *)v129, v192);
LABEL_43:
              id v135 = v176;
              uint64_t v201 = sub_1DB1EF590();
              uint64_t v202 = v136;
              uint64_t v199 = 45;
              unint64_t v200 = 0xE100000000000000;
              uint64_t v197 = 95;
              unint64_t v198 = 0xE100000000000000;
              uint64_t v137 = sub_1DB1F1950();
              uint64_t v139 = v138;
              swift_bridgeObjectRelease();
              if (v134)
              {
                if (v205 == v137 && v134 == v139)
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  v80(v176, v192);
                  swift_bridgeObjectRelease_n();
                  sub_1DB1C0384(v175, type metadata accessor for VisualTranslationModel);
                  uint64_t v112 = v195;
                  uint64_t v113 = v190;
                }
                else
                {
                  char v140 = sub_1DB1F1DB0();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  v80(v176, v192);
                  swift_bridgeObjectRelease_n();
                  sub_1DB1C0384(v175, type metadata accessor for VisualTranslationModel);
                  uint64_t v112 = v195;
                  uint64_t v113 = v190;
                  if ((v140 & 1) == 0) {
                    goto LABEL_33;
                  }
                }
                long long v141 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
                uint64_t v142 = (uint64_t)v167;
                v141(v167, v193, v112);
                long long v143 = v168;
                sub_1DB1EF4F0();
                long long v144 = (int *)v194;
                uint64_t v145 = v179;
                sub_1DB1EF500();
                if (v146 <= 0.0)
                {
                  uint64_t v147 = (uint64_t)v169;
                  uint64_t v124 = v112;
                  v141(v169, (char *)v145, v112);
                  uint64_t v149 = v170;
                  uint64_t v148 = v171;
                  (*(void (**)(uint64_t, char *, uint64_t))(v170 + 16))(v147 + v144[6], v143, v171);
                  uint64_t v150 = *(void *)(v145 + v144[7]);
                  uint64_t v151 = *(void *)(v145 + v144[8]);
                  char v152 = *(unsigned char *)(v145 + v144[9]);
                  char v153 = *(unsigned char *)(v145 + v144[10]);
                  uint64_t v154 = v147 + v144[5];
                  long long v155 = v203[9];
                  *(_OWORD *)(v154 + 128) = v203[8];
                  *(_OWORD *)(v154 + 144) = v155;
                  *(void *)(v154 + 160) = v204;
                  long long v156 = v203[5];
                  *(_OWORD *)(v154 + 64) = v203[4];
                  *(_OWORD *)(v154 + 80) = v156;
                  long long v157 = v203[7];
                  *(_OWORD *)(v154 + 96) = v203[6];
                  *(_OWORD *)(v154 + 112) = v157;
                  long long v158 = v203[1];
                  *(_OWORD *)uint64_t v154 = v203[0];
                  *(_OWORD *)(v154 + 16) = v158;
                  long long v159 = v203[3];
                  *(_OWORD *)(v154 + 32) = v203[2];
                  *(_OWORD *)(v154 + 48) = v159;
                  *(void *)(v147 + v144[7]) = v150;
                  *(void *)(v147 + v144[8]) = v151;
                  *(unsigned char *)(v147 + v144[9]) = v152;
                  *(unsigned char *)(v147 + v144[10]) = v153;
                  *(unsigned char *)(v147 + v144[11]) = 0;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  uint64_t v124 = v112;
                  uint64_t v147 = (uint64_t)v169;
                  sub_1DB1ACE80(v145, (uint64_t)v169, type metadata accessor for VisualTranslationModel);
                  uint64_t v148 = v171;
                  uint64_t v149 = v170;
                }
                (*(void (**)(char *, uint64_t))(v149 + 8))(v143, v148);
                (*(void (**)(uint64_t, void, uint64_t, int *))(v189 + 56))(v147, 0, 1, v144);
                sub_1DB1D33C0(v147, v142);
                uint64_t v116 = v193;
                id v121 = v163;
                uint64_t v114 = v190;
                goto LABEL_34;
              }
              v80(v135, v192);
              swift_bridgeObjectRelease();
              uint64_t v110 = v175;
LABEL_32:
              sub_1DB1C0384(v110, type metadata accessor for VisualTranslationModel);
              uint64_t v112 = v195;
              uint64_t v113 = v190;
LABEL_33:
              uint64_t v114 = v113;
              uint64_t v115 = *(void (**)(uint64_t, char *, uint64_t))(v113 + 16);
              uint64_t v116 = v193;
              v115(v196, v193, v112);
              v115(v186, v116, v112);
              uint64_t v117 = v181;
              uint64_t v118 = v192;
              v77(v181, v187, v192);
              uint64_t v119 = *(void (**)(void *, void, uint64_t, uint64_t))(v191 + 56);
              v119(v117, 0, 1, v118);
              uint64_t v120 = (uint64_t)v182;
              v77(v182, v188, v118);
              v119((void *)v120, 0, 1, v118);
              id v121 = v163;
              id v122 = v163;
              uint64_t v123 = v180;
              uint64_t v124 = v195;
              sub_1DB1BABBC(v186, v161, v117, v120, v203, 1, v180);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v189 + 56))(v123, 0, 1, v194);
              sub_1DB1D33C0(v123, v196);
LABEL_34:

              sub_1DB1C0384(v179, type metadata accessor for VisualTranslationModel);
              (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v124);
              (*(void (**)(char *, uint64_t))(v165 + 8))(v164, v166);
              return;
            }
          }
          else
          {
            uint64_t v129 = (uint64_t)v172;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v191 + 56))(v172, 1, 1, v192);
          }
          sub_1DB0E8BD4(v129, &qword_1EBA4E570);
          uint64_t v205 = 0;
          uint64_t v134 = 0;
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v56 = v190;
        uint64_t v58 = (uint64_t)v184;
        uint64_t v60 = v195;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v184, 1, 1, v195);
        uint64_t v62 = v194;
        uint64_t v63 = (uint64_t)v193;
        id v64 = v185;
      }
      id v69 = objc_msgSend(v52, sel_uuid);
      sub_1DB1EF550();

      sub_1DB0E8BD4(v58, &qword_1EA9049E0);
      goto LABEL_15;
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v37);
  }
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_1DB1EF810();
  __swift_project_value_buffer(v65, (uint64_t)qword_1EBA4F408);
  uint64_t v66 = sub_1DB1EF7F0();
  os_log_type_t v67 = sub_1DB1F1710();
  if (os_log_type_enabled(v66, v67))
  {
    int v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v68 = 0;
    _os_log_impl(&dword_1DB0DC000, v66, v67, "Observation is not text as expected", v68, 2u);
    MEMORY[0x1E018CA60](v68, -1, -1);
  }
}

uint64_t VisualTranslationModel.debugDescription.getter()
{
  uint64_t v1 = type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TextDiagnosticsModel();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1ACE80(v0, (uint64_t)v3, type metadata accessor for VisualTranslationModel);
  TextDiagnosticsModel.init(model:)((uint64_t)v3, (uint64_t)v6);
  v10[0] = TextDiagnosticsModel.json.getter();
  v10[1] = v7;
  sub_1DB1F13A0();
  uint64_t v8 = v10[0];
  sub_1DB1C0384((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextDiagnosticsModel);
  return v8;
}

uint64_t VisualTranslationModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905CD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1C03E4();
  sub_1DB1F1EF0();
  char v30 = 0;
  sub_1DB1EF570();
  sub_1DB1BF188(&qword_1EA903BE8, MEMORY[0x1E4F27990]);
  sub_1DB1F1D60();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for VisualTranslationModel(0);
    uint64_t v10 = (long long *)(v3 + v9[5]);
    long long v11 = v10[9];
    long long v27 = v10[8];
    long long v28 = v11;
    uint64_t v29 = *((void *)v10 + 20);
    long long v12 = v10[5];
    long long v23 = v10[4];
    long long v24 = v12;
    long long v13 = v10[7];
    long long v25 = v10[6];
    long long v26 = v13;
    long long v14 = v10[1];
    long long v19 = *v10;
    long long v20 = v14;
    long long v15 = v10[3];
    long long v21 = v10[2];
    long long v22 = v15;
    char v18 = 1;
    sub_1DB1C0438();
    sub_1DB1F1D60();
    LOBYTE(v19) = 2;
    sub_1DB1EF520();
    sub_1DB1BF188(&qword_1EA905CE8, MEMORY[0x1E4F27928]);
    sub_1DB1F1D60();
    *(void *)&long long v19 = *(void *)(v3 + v9[7]);
    char v18 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9054D8);
    sub_1DB1C0534(&qword_1EA905CF0, &qword_1EA905CF8);
    sub_1DB1F1D60();
    LOBYTE(v19) = 4;
    sub_1DB1F1D40();
    LOBYTE(v19) = 5;
    sub_1DB1F1D10();
    LOBYTE(v19) = *(unsigned char *)(v3 + v9[10]);
    char v18 = 6;
    sub_1DB1C048C();
    sub_1DB1F1CF0();
    LOBYTE(v19) = 7;
    sub_1DB1F1D10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t VisualTranslationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v31 = sub_1DB1EF520();
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1EF570();
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905D08);
  uint64_t v30 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB1C03E4();
  uint64_t v33 = v8;
  long long v12 = v49;
  sub_1DB1F1EE0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  long long v13 = v4;
  uint64_t v14 = v30;
  uint64_t v49 = v11;
  uint64_t v15 = v31;
  LOBYTE(v38) = 0;
  sub_1DB1BF188(&qword_1EA903BF8, MEMORY[0x1E4F27990]);
  sub_1DB1F1CB0();
  uint64_t v16 = v49;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v49, v32, v5);
  char v37 = 1;
  sub_1DB1C04E0();
  sub_1DB1F1CB0();
  uint64_t v26 = v5;
  uint64_t v17 = &v16[v9[5]];
  long long v18 = v45;
  long long v19 = v47;
  *((_OWORD *)v17 + 8) = v46;
  *((_OWORD *)v17 + 9) = v19;
  *((void *)v17 + 20) = v48;
  long long v20 = v43;
  *((_OWORD *)v17 + 4) = v42;
  *((_OWORD *)v17 + 5) = v20;
  *((_OWORD *)v17 + 6) = v44;
  *((_OWORD *)v17 + 7) = v18;
  long long v21 = v39;
  *(_OWORD *)uint64_t v17 = v38;
  *((_OWORD *)v17 + 1) = v21;
  long long v22 = v41;
  *((_OWORD *)v17 + 2) = v40;
  *((_OWORD *)v17 + 3) = v22;
  LOBYTE(v36) = 2;
  sub_1DB1BF188(&qword_1EA905D18, MEMORY[0x1E4F27928]);
  sub_1DB1F1CB0();
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v16[v9[6]], v13, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9054D8);
  char v35 = 3;
  sub_1DB1C0534(&qword_1EA905D20, &qword_1EA905D28);
  sub_1DB1F1CB0();
  *(void *)&v16[v9[7]] = v36;
  LOBYTE(v36) = 4;
  *(void *)&v16[v9[8]] = sub_1DB1F1C90();
  LOBYTE(v36) = 5;
  v16[v9[9]] = sub_1DB1F1C70() & 1;
  char v35 = 6;
  sub_1DB1C05C8();
  sub_1DB1F1C50();
  v16[v9[10]] = v36;
  LOBYTE(v36) = 7;
  LOBYTE(v16) = sub_1DB1F1C70();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v34);
  char v23 = v16 & 1;
  uint64_t v24 = (uint64_t)v49;
  v49[v9[11]] = v23;
  sub_1DB1ACE80(v24, v27, type metadata accessor for VisualTranslationModel);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1DB1C0384(v24, type metadata accessor for VisualTranslationModel);
}

uint64_t sub_1DB1BEBC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualTranslationModel.init(from:)(a1, a2);
}

uint64_t sub_1DB1BEBDC(void *a1)
{
  return VisualTranslationModel.encode(to:)(a1);
}

uint64_t sub_1DB1BEBF4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TextDiagnosticsModel();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1ACE80(v1, (uint64_t)v3, type metadata accessor for VisualTranslationModel);
  TextDiagnosticsModel.init(model:)((uint64_t)v3, (uint64_t)v6);
  v10[0] = TextDiagnosticsModel.json.getter();
  v10[1] = v7;
  sub_1DB1F13A0();
  uint64_t v8 = v10[0];
  sub_1DB1C0384((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextDiagnosticsModel);
  return v8;
}

uint64_t sub_1DB1BED10@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for VisualTranslationModel(0);
  MEMORY[0x1F4188790](v38);
  uint64_t v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_10:
    uint64_t v30 = sub_1DB1EF6B0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a2, 1, 1, v30);
  }
  uint64_t v33 = (uint64_t)&v32 - v10;
  uint64_t v34 = a1;
  char v35 = a2;
  uint64_t v12 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v37 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  uint64_t v13 = (uint64_t)v36;
  while (1)
  {
    sub_1DB1ACE80(v12, v13, type metadata accessor for VisualTranslationModel);
    uint64_t v15 = *(void *)(v13 + *(int *)(v38 + 28));
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v39 = v11;
    if (v16) {
      break;
    }
    uint64_t v14 = sub_1DB1EF6B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
LABEL_4:
    sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4E570);
    sub_1DB1C0384(v13, type metadata accessor for VisualTranslationModel);
    v12 += v37;
    uint64_t v11 = v39 - 1;
    if (v39 == 1)
    {
      swift_bridgeObjectRelease();
      a2 = v35;
      goto LABEL_10;
    }
  }
  uint64_t v17 = type metadata accessor for TextModel();
  unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
  unint64_t v19 = v15 + *(int *)(v17 + 36) + v18;
  uint64_t v20 = sub_1DB1EF6B0();
  uint64_t v21 = *(void *)(v20 - 8);
  long long v22 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
  v22(v6, v19, v20);
  char v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v23(v6, 0, 1, v20);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20);
  uint64_t v13 = (uint64_t)v36;
  if (v24 == 1) {
    goto LABEL_4;
  }
  sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4E570);
  swift_bridgeObjectRelease();
  uint64_t v25 = v33;
  sub_1DB1C1BCC(v13, v33, type metadata accessor for VisualTranslationModel);
  uint64_t v26 = *(void *)(v25 + *(int *)(v38 + 28));
  swift_bridgeObjectRetain();
  sub_1DB1C0384(v25, type metadata accessor for VisualTranslationModel);
  if (*(void *)(v26 + 16))
  {
    uint64_t v27 = v35;
    v22(v35, v26 + v18 + *(int *)(v17 + 36), v20);
    uint64_t v28 = v27;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v28 = v35;
    uint64_t v29 = 1;
  }
  v23(v28, v29, 1, v20);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DB1BF134()
{
  unint64_t result = qword_1EA905C50;
  if (!qword_1EA905C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C50);
  }
  return result;
}

uint64_t sub_1DB1BF188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB1BF1D0()
{
  unint64_t result = qword_1EA905C80;
  if (!qword_1EA905C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C80);
  }
  return result;
}

unint64_t sub_1DB1BF224()
{
  unint64_t result = qword_1EA905C88;
  if (!qword_1EA905C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C88);
  }
  return result;
}

unint64_t sub_1DB1BF278()
{
  unint64_t result = qword_1EA905C90;
  if (!qword_1EA905C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C90);
  }
  return result;
}

unint64_t sub_1DB1BF2CC()
{
  unint64_t result = qword_1EA905C98;
  if (!qword_1EA905C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905C98);
  }
  return result;
}

uint64_t sub_1DB1BF320(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874737361507369 && a2 == 0xED00006867756F72 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7466654C706F74 && a2 == 0xE700000000000000 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xE800000000000000 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xEA00000000007466 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69526D6F74746F62 && a2 == 0xEB00000000746867)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1DB1BF638(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696461656CLL && a2 == 0xE700000000000000 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696C69617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DB1BF788()
{
  unint64_t v0 = sub_1DB1F1C10();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DB1BF7D4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v4 = type metadata accessor for TextModel();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1DB12EA74(0, 0, 0);
  uint64_t v8 = v22;
  uint64_t v9 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v19 = a1;
  if (v9)
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v13 = *(v11 - 1);
      uint64_t v12 = *v11;
      uint64_t v15 = *(v11 - 3);
      uint64_t v14 = *(v11 - 2);
      swift_bridgeObjectRetain();
      v20(v10, v15, v14, v13, v12);
      swift_bridgeObjectRelease();
      uint64_t v22 = v8;
      unint64_t v17 = *(void *)(v8 + 16);
      unint64_t v16 = *(void *)(v8 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DB12EA74(v16 > 1, v17 + 1, 1);
        uint64_t v8 = v22;
      }
      ++v10;
      *(void *)(v8 + 16) = v17 + 1;
      sub_1DB1C1BCC((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, (uint64_t (*)(void))type metadata accessor for TextModel);
      v11 += 4;
    }
    while (v9 != v10);
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1DB1BF9A0(void *a1, void *a2, void *a3)
{
  uint64_t v66 = a3;
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v62 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v61 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v58 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v65 = (uint64_t)&v57 - v10;
  uint64_t v11 = sub_1DB1EF570();
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  MEMORY[0x1F4188790](v11);
  id v64 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4A0);
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)&double v15 = MEMORY[0x1F4188790](v13).n128_u64[0];
  unint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v57 = a1;
  id v18 = objc_msgSend(a1, sel_text, v15);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1DB1F1290();
    unint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  uint64_t v63 = v5;
  uint64_t v68 = v20;
  unint64_t v69 = v22;
  sub_1DB1EF720();
  sub_1DB1C1C34();
  sub_1DB1C1C88();
  uint64_t v23 = sub_1DB1F1200();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = (void *)(v23 + 56);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v31 = *(v25 - 3);
      if ((*(v25 - 2) ^ v31) >= 0x4000)
      {
        long long v67 = *((_OWORD *)v25 - 1);
        uint64_t v32 = *v25;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v68 = v26;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DB12EAEC(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v68;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        long long v29 = v67;
        if (v28 >= v27 >> 1)
        {
          sub_1DB12EAEC(v27 > 1, v28 + 1, 1);
          long long v29 = v67;
          uint64_t v26 = v68;
        }
        *(void *)(v26 + 16) = v28 + 1;
        uint64_t v30 = v26 + 32 * v28;
        *(void *)(v30 + 32) = v31;
        *(_OWORD *)(v30 + 40) = v29;
        *(void *)(v30 + 56) = v32;
      }
      v25 += 4;
      --v24;
    }
    while (v24);
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v34);
  char v35 = v66;
  *(&v57 - 2) = a2;
  *(&v57 - 1) = v35;
  uint64_t v36 = sub_1DB1BF7D4(v26, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DB1C1CE4, (uint64_t)(&v57 - 4));
  swift_release();
  if (!*(void *)(v36 + 16))
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4E0);
    uint64_t v37 = (int *)type metadata accessor for TextModel();
    unint64_t v38 = (*(unsigned __int8 *)(*((void *)v37 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v37 - 1) + 80);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1DB1F4170;
    unint64_t v39 = v36 + v38;
    sub_1DB1EF560();
    id v40 = objc_msgSend(v57, sel_text);
    if (v40)
    {
      long long v41 = v40;
      *(void *)&long long v67 = sub_1DB1F1290();
      id v57 = v42;
    }
    else
    {
      *(void *)&long long v67 = 0;
      id v57 = (id)0xE000000000000000;
    }
    uint64_t v43 = v62;
    uint64_t v44 = v63;
    long long v45 = v61;
    sub_1DB11FF38((uint64_t)a2, v65);
    uint64_t v46 = (uint64_t)v35;
    uint64_t v47 = v58;
    sub_1DB11FF38(v46, v58);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v47, 1, v44) == 1)
    {
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      sub_1DB0E8BD4(v47, &qword_1EBA4E570);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v45, v47, v44);
    }
    uint64_t v48 = v39 + v37[7];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v48, 1, 1, v44);
    uint64_t v49 = v43;
    long long v50 = (void *)(v39 + v37[8]);
    void *v50 = 0;
    v50[1] = 0;
    uint64_t v51 = v44;
    uint64_t v52 = v37[11];
    *(void *)(v39 + v52) = 0;
    uint64_t v53 = v37[12];
    *(void *)(v39 + v53) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v39, v64, v60);
    *(void *)(v39 + v37[5]) = 0;
    unint64_t v54 = (void *)(v39 + v37[6]);
    id v55 = v57;
    *unint64_t v54 = v67;
    v54[1] = v55;
    sub_1DB106F4C(v65, v48);
    swift_bridgeObjectRelease();
    void *v50 = 0;
    v50[1] = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v39 + v37[9], v45, v51);
    *(void *)(v39 + v37[10]) = 0;

    *(void *)(v39 + v52) = 0;
    *(void *)(v39 + v53) = 1;
  }
  return v36;
}

void *_s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1DB1BBE6C(a1);
  if (v8)
  {
    unint64_t v9 = v8;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1DB1EF810();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBA4F408);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_1DB1EF7F0();
    os_log_type_t v12 = sub_1DB1F16F0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 134349056;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1DB1F1BB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v14 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = v14;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DB0DC000, v11, v12, "OCR observations unwrapped %{public}ld", v13, 0xCu);
      MEMORY[0x1E018CA60](v13, -1, -1);
    }
    else
    {

      uint64_t v15 = swift_bridgeObjectRelease_n();
    }
    MEMORY[0x1F4188790](v15);
    v23[16] = a2 & 1;
    uint64_t v24 = a3;
    uint64_t v25 = a4;
    unint64_t v21 = sub_1DB1B6958(MEMORY[0x1E4FBC860], (void (*)(void **, id *))sub_1DB1C1CEC, (uint64_t)v23, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1DB1EF810();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBA4F408);
    swift_bridgeObjectRetain_n();
    unint64_t v17 = sub_1DB1EF7F0();
    os_log_type_t v18 = sub_1DB1F16F0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134349056;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1DB1F1BB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = v20;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DB0DC000, v17, v18, "Failed to unwrap %{public}ld OCR observations", v19, 0xCu);
      MEMORY[0x1E018CA60](v19, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v21;
}

uint64_t sub_1DB1C0384(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DB1C03E4()
{
  unint64_t result = qword_1EA905CD8;
  if (!qword_1EA905CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905CD8);
  }
  return result;
}

unint64_t sub_1DB1C0438()
{
  unint64_t result = qword_1EA905CE0;
  if (!qword_1EA905CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905CE0);
  }
  return result;
}

unint64_t sub_1DB1C048C()
{
  unint64_t result = qword_1EA905D00;
  if (!qword_1EA905D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D00);
  }
  return result;
}

unint64_t sub_1DB1C04E0()
{
  unint64_t result = qword_1EA905D10;
  if (!qword_1EA905D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D10);
  }
  return result;
}

uint64_t sub_1DB1C0534(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9054D8);
    sub_1DB1BF188(a2, (void (*)(uint64_t))type metadata accessor for TextModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB1C05C8()
{
  unint64_t result = qword_1EA905D30;
  if (!qword_1EA905D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D30);
  }
  return result;
}

unint64_t sub_1DB1C0620()
{
  unint64_t result = qword_1EA905D38;
  if (!qword_1EA905D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D38);
  }
  return result;
}

uint64_t sub_1DB1C0674()
{
  return sub_1DB1BF188(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
}

uint64_t sub_1DB1C06BC()
{
  return type metadata accessor for VisualTranslationResult(0);
}

uint64_t type metadata accessor for VisualTranslationResult(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905D40);
}

uint64_t sub_1DB1C06E4()
{
  uint64_t result = sub_1DB1EF570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for VisualTranslationResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualTranslationResult);
}

uint64_t dispatch thunk of VisualTranslationResult.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment()
{
  return &type metadata for VisualTranslationTextAlignment;
}

void *initializeBufferWithCopyOfBuffer for VisualTranslationModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DB1EF570();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *((void *)v10 + 20) = *((void *)v11 + 20);
    long long v12 = *((_OWORD *)v11 + 9);
    *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
    *((_OWORD *)v10 + 9) = v12;
    long long v13 = *((_OWORD *)v11 + 5);
    *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
    *((_OWORD *)v10 + 5) = v13;
    long long v14 = *((_OWORD *)v11 + 7);
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((_OWORD *)v10 + 7) = v14;
    long long v15 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v15;
    long long v16 = *((_OWORD *)v11 + 3);
    unint64_t v17 = (char *)a1 + v9;
    os_log_type_t v18 = (char *)a2 + v9;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 3) = v16;
    uint64_t v19 = sub_1DB1EF520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
    uint64_t v21 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VisualTranslationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)(v9 + 160) = *(void *)(v10 + 160);
  long long v11 = *(_OWORD *)(v10 + 144);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(v10 + 128);
  *(_OWORD *)(v9 + 144) = v11;
  long long v12 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v12;
  long long v13 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v13;
  long long v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  long long v15 = *(_OWORD *)(v10 + 48);
  uint64_t v16 = a1 + v8;
  uint64_t v17 = a2 + v8;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v15;
  uint64_t v18 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(unsigned char *)(v8 + 8) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 16) = v9[2];
  *(void *)(v8 + 24) = v9[3];
  *(void *)(v8 + 32) = v9[4];
  *(void *)(v8 + 40) = v9[5];
  *(void *)(v8 + 48) = v9[6];
  *(void *)(v8 + 56) = v9[7];
  *(void *)(v8 + 64) = v9[8];
  *(void *)(v8 + 72) = v9[9];
  *(void *)(v8 + 80) = v9[10];
  *(void *)(v8 + 88) = v9[11];
  *(void *)(v8 + 96) = v9[12];
  *(void *)(v8 + 104) = v9[13];
  *(void *)(v8 + 112) = v9[14];
  *(void *)(v8 + 120) = v9[15];
  *(void *)(v8 + 128) = v9[16];
  *(void *)(v8 + 136) = v9[17];
  *(void *)(v8 + 144) = v9[18];
  *(void *)(v8 + 152) = v9[19];
  *(void *)(v8 + 160) = v9[20];
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)(v9 + 160) = *(void *)(v10 + 160);
  long long v11 = *(_OWORD *)(v10 + 144);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(v10 + 128);
  *(_OWORD *)(v9 + 144) = v11;
  long long v12 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v12;
  long long v13 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v13;
  long long v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  long long v15 = *(_OWORD *)(v10 + 48);
  uint64_t v16 = a1 + v8;
  uint64_t v17 = a2 + v8;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v15;
  uint64_t v18 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for VisualTranslationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  long long v11 = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
  *(_OWORD *)(v9 + 32) = v11;
  long long v12 = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 64) = v12;
  long long v13 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v13;
  long long v14 = *(_OWORD *)(v10 + 128);
  *(_OWORD *)(v9 + 112) = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 128) = v14;
  *(_OWORD *)(v9 + 144) = *(_OWORD *)(v10 + 144);
  uint64_t v15 = a1 + v8;
  uint64_t v16 = a2 + v8;
  *(void *)(v9 + 160) = *(void *)(v10 + 160);
  uint64_t v17 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualTranslationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1C0FA0);
}

uint64_t sub_1DB1C0FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DB1EF520();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualTranslationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1C10C8);
}

uint64_t sub_1DB1C10C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DB1EF570();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DB1EF520();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DB1C11D8()
{
  uint64_t result = sub_1DB1EF570();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DB1EF520();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for VisualTranslationModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisualTranslationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1C1434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationModel.CodingKeys()
{
  return &type metadata for VisualTranslationModel.CodingKeys;
}

unsigned char *_s13TranslationUI30VisualTranslationTextAlignmentOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1C1538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.CodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.CodingKeys;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.CenterCodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.LeadingCodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.LeadingCodingKeys;
}

ValueMetadata *type metadata accessor for VisualTranslationTextAlignment.TrailingCodingKeys()
{
  return &type metadata for VisualTranslationTextAlignment.TrailingCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VisualTranslationResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1C166CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationResult.CodingKeys()
{
  return &type metadata for VisualTranslationResult.CodingKeys;
}

unint64_t sub_1DB1C16A8()
{
  unint64_t result = qword_1EA905D50;
  if (!qword_1EA905D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D50);
  }
  return result;
}

unint64_t sub_1DB1C1700()
{
  unint64_t result = qword_1EA905D58;
  if (!qword_1EA905D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D58);
  }
  return result;
}

unint64_t sub_1DB1C1758()
{
  unint64_t result = qword_1EA905D60;
  if (!qword_1EA905D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D60);
  }
  return result;
}

unint64_t sub_1DB1C17B0()
{
  unint64_t result = qword_1EA905D68;
  if (!qword_1EA905D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D68);
  }
  return result;
}

unint64_t sub_1DB1C1808()
{
  unint64_t result = qword_1EA905D70;
  if (!qword_1EA905D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D70);
  }
  return result;
}

unint64_t sub_1DB1C1860()
{
  unint64_t result = qword_1EA905D78;
  if (!qword_1EA905D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D78);
  }
  return result;
}

unint64_t sub_1DB1C18B8()
{
  unint64_t result = qword_1EA905D80;
  if (!qword_1EA905D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D80);
  }
  return result;
}

unint64_t sub_1DB1C1910()
{
  unint64_t result = qword_1EA905D88;
  if (!qword_1EA905D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D88);
  }
  return result;
}

unint64_t sub_1DB1C1968()
{
  unint64_t result = qword_1EA905D90;
  if (!qword_1EA905D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D90);
  }
  return result;
}

unint64_t sub_1DB1C19C0()
{
  unint64_t result = qword_1EA905D98;
  if (!qword_1EA905D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905D98);
  }
  return result;
}

unint64_t sub_1DB1C1A18()
{
  unint64_t result = qword_1EA905DA0;
  if (!qword_1EA905DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905DA0);
  }
  return result;
}

unint64_t sub_1DB1C1A70()
{
  unint64_t result = qword_1EA905DA8;
  if (!qword_1EA905DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905DA8);
  }
  return result;
}

unint64_t sub_1DB1C1AC8()
{
  unint64_t result = qword_1EA905DB0;
  if (!qword_1EA905DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905DB0);
  }
  return result;
}

unint64_t sub_1DB1C1B20()
{
  unint64_t result = qword_1EA905DB8;
  if (!qword_1EA905DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905DB8);
  }
  return result;
}

unint64_t sub_1DB1C1B78()
{
  unint64_t result = qword_1EA905DC0;
  if (!qword_1EA905DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905DC0);
  }
  return result;
}

uint64_t sub_1DB1C1BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DB1C1C34()
{
  unint64_t result = qword_1EBA4E4A8;
  if (!qword_1EBA4E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4E4A8);
  }
  return result;
}

unint64_t sub_1DB1C1C88()
{
  unint64_t result = qword_1EBA4E498;
  if (!qword_1EBA4E498)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4E4A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4E498);
  }
  return result;
}

void sub_1DB1C1CE4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1DB1BA884(a1, a2, a3, a4, a5, *(char **)(v6 + 16), *(void *)(v6 + 24), a6);
}

uint64_t sub_1DB1C1CEC(unint64_t *a1, void **a2)
{
  return sub_1DB1BC050(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1DB1C1D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1C1D74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for VisualTranslationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1C1E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationError()
{
  return &type metadata for VisualTranslationError;
}

unint64_t sub_1DB1C1E98()
{
  unint64_t result = qword_1EA905DC8;
  if (!qword_1EA905DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905DC8);
  }
  return result;
}

__n128 sub_1DB1C1EF4@<Q0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double v7 = *v3;
  double v8 = v3[1];
  double v9 = v3[2];
  CGAffineTransformMakeScale(&v22, *v3, *v3);
  CGFloat a = v22.a;
  CGFloat b = v22.b;
  CGFloat c = v22.c;
  CGFloat tx = v22.tx;
  CGFloat d = v22.d;
  CGFloat ty = v22.ty;
  CGAffineTransformMakeTranslation(&v22, (1.0 - v7) * (a2 * 0.5 + v8), (1.0 - v7) * (a3 * 0.5 + v9));
  v22.CGFloat a = a;
  v22.CGFloat b = b;
  v22.CGFloat c = 0.0;
  v22.CGFloat d = c;
  v22.CGFloat tx = d;
  v22.CGFloat ty = 0.0;
  CGFloat v23 = tx;
  CGFloat v24 = ty;
  uint64_t v25 = 0x3FF0000000000000;
  sub_1DB1F0300();
  *(_OWORD *)(a1 + 32) = v19;
  *(_OWORD *)(a1 + 48) = v20;
  *(void *)(a1 + 64) = v21;
  __n128 result = v18;
  *(_OWORD *)a1 = v17;
  *(__n128 *)(a1 + 16) = v18;
  return result;
}

double sub_1DB1C2028@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

double sub_1DB1C2034(double *a1)
{
  double result = *a1;
  *unint64_t v1 = *(void *)a1;
  return result;
}

double (*sub_1DB1C2040(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = *v1;
  return sub_1DB1C206C;
}

double sub_1DB1C206C(uint64_t a1)
{
  double result = *(double *)a1;
  **(void **)(a1 + 8) = *(void *)a1;
  return result;
}

uint64_t sub_1DB1C2080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_1DB1C8740();
  return MEMORY[0x1F40F86D8](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_1DB1C20FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_1DB1C8740();
  return MEMORY[0x1F40F86C0](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_1DB1C2178()
{
  return sub_1DB1EFD70();
}

void sub_1DB1C21D4()
{
}

uint64_t sub_1DB1C21E8()
{
  sub_1DB1C85DC();
  sub_1DB1EFC50();
  sub_1DB1F0FA0();
  sub_1DB1EFC60();
  swift_release();
  swift_release();
  sub_1DB1EFC30();
  sub_1DB1F0FA0();
  sub_1DB1EFC60();
  swift_release();
  swift_release();
  sub_1DB1EFC40();
  sub_1DB1EFC30();
  sub_1DB1F0F90();
  sub_1DB1EFC60();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1DB1EFC20();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t VisualTranslationOverlay.init(models:zoomScale:systemTranslationDismissHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v22 - v14;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  *(void *)(a4 + 8) = 0x3FF0000000000000;
  type metadata accessor for CGRect(0);
  memset(v22, 0, 32);
  sub_1DB1F0D10();
  uint64_t v16 = v23;
  long long v17 = v22[3];
  *(_OWORD *)(a4 + 32) = v22[2];
  *(_OWORD *)(a4 + 48) = v17;
  *(void *)(a4 + 64) = v16;
  uint64_t v18 = type metadata accessor for VisualTranslationOverlay();
  uint64_t v19 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 1, 1, v19);
  sub_1DB0E8B70((uint64_t)v15, (uint64_t)v12, &qword_1EBA4E458);
  sub_1DB1F0D10();
  sub_1DB0E8BD4((uint64_t)v15, &qword_1EBA4E458);
  uint64_t v20 = a4 + *(int *)(v18 + 36);
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  *(void *)a4 = a1;
  *(double *)(a4 + 8) = a5;
  uint64_t result = sub_1DB0EB788(*(void *)(a4 + 16));
  *(void *)(a4 + 16) = a2;
  *(void *)(a4 + 24) = a3;
  return result;
}

uint64_t type metadata accessor for VisualTranslationOverlay()
{
  uint64_t result = qword_1EA905DF0;
  if (!qword_1EA905DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB1C2554@<X0>(unsigned char *a1@<X8>)
{
  sub_1DB19CB3C();
  uint64_t result = sub_1DB1F0170();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB1C25A4@<X0>(unsigned char *a1@<X8>)
{
  sub_1DB19CB3C();
  uint64_t result = sub_1DB1F0170();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB1C25F4()
{
  return sub_1DB1F0180();
}

uint64_t sub_1DB1C2640()
{
  return sub_1DB1F0180();
}

uint64_t VisualTranslationOverlay.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = type metadata accessor for SystemWidePresentation(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  MEMORY[0x1F4188790](v7 - 8);
  double v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for VisualTranslationOverlay();
  uint64_t v11 = v10 - 8;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DB1C7CDC(v2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v20 = swift_allocObject();
  sub_1DB1C8004((uint64_t)v14, v20 + v19, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  sub_1DB1F0D40();
  uint64_t v21 = *(void *)(v2 + 64);
  long long v22 = *(_OWORD *)(v2 + 48);
  long long v40 = *(_OWORD *)(v2 + 32);
  long long v41 = v22;
  uint64_t v42 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DE0);
  sub_1DB1F0D20();
  long long v38 = v43;
  uint64_t v23 = v44;
  uint64_t v24 = v45;
  uint64_t v25 = *(void *)(v2 + 16);
  uint64_t v26 = *(void *)(v2 + 24);
  sub_1DB0E8B70((uint64_t)v9, (uint64_t)v6, &qword_1EA9052D8);
  unint64_t v27 = &v6[*(int *)(v4 + 28)];
  *(_OWORD *)unint64_t v27 = v38;
  *((void *)v27 + 2) = v23;
  *((void *)v27 + 3) = v24;
  unint64_t v28 = (uint64_t *)&v6[*(int *)(v4 + 32)];
  *unint64_t v28 = v25;
  v28[1] = v26;
  sub_1DB1C7CDC((uint64_t)v6, (uint64_t)v18 + *(int *)(v16 + 44), type metadata accessor for SystemWidePresentation);
  char *v18 = sub_1DB1C3088;
  v18[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v20;
  sub_1DB0EB758(v25);
  swift_retain();
  sub_1DB1C8534((uint64_t)v6, type metadata accessor for SystemWidePresentation);
  sub_1DB0E8BD4((uint64_t)v9, &qword_1EA9052D8);
  swift_release();
  uint64_t v29 = v2 + *(int *)(v11 + 44);
  uint64_t v30 = *(void *)v29;
  LOBYTE(v26) = *(unsigned char *)(v29 + 8);
  sub_1DB118D3C(*(void *)v29, v26);
  LOBYTE(v2) = sub_1DB1C5664(v30, v26);
  sub_1DB118DE4(v30, v26);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = sub_1DB1F0F60();
  uint64_t v34 = v33;
  uint64_t v35 = v39;
  sub_1DB0E8B70((uint64_t)v18, v39, &qword_1EA905DD0);
  uint64_t v36 = v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DE8) + 36);
  *(void *)uint64_t v36 = KeyPath;
  *(unsigned char *)(v36 + 8) = 0;
  *(unsigned char *)(v36 + 9) = v2 & 1;
  *(void *)(v36 + 16) = v32;
  *(void *)(v36 + 24) = v34;
  return sub_1DB0E8BD4((uint64_t)v18, &qword_1EA905DD0);
}

uint64_t sub_1DB1C2A40@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  long long v38 = a2;
  uint64_t v42 = a3;
  uint64_t v4 = type metadata accessor for VisualTranslationOverlay();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v37 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v39 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E40);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1DB1EFCB0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v32 - v13;
  sub_1DB1EFC90();
  double v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v17(v14, a1, v9);
  if (v16 <= 0.0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    goto LABEL_5;
  }
  uint64_t v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v5;
  uint64_t v36 = a1;
  uint64_t v18 = (uint64_t)v39;
  sub_1DB1EFC90();
  double v20 = v19;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  if (v20 <= 0.0)
  {
LABEL_5:
    uint64_t v30 = 1;
    uint64_t v29 = v42;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v29, v30, 1, v41);
  }
  *uint64_t v8 = sub_1DB1F0F30();
  v8[1] = v21;
  uint64_t v33 = v8;
  uint64_t v32 = (char *)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E48) + 44);
  long long v22 = v38;
  uint64_t v43 = *v38;
  uint64_t v23 = v34;
  v17(v34, v36, v9);
  uint64_t v24 = (uint64_t)v22;
  uint64_t v25 = v18;
  sub_1DB1C7CDC(v24, v18, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  unint64_t v26 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v27 = (v11 + *(unsigned __int8 *)(v37 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v28 + v26, v23, v9);
  sub_1DB1C8004(v25, v28 + v27, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E260);
  sub_1DB1EF570();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E50);
  sub_1DB0E3C44(&qword_1EBA4DD90, &qword_1EBA4E260);
  sub_1DB1C7988();
  sub_1DB1C8594(&qword_1EBA4DB30, (void (*)(uint64_t))type metadata accessor for VisualTranslationModel);
  sub_1DB1F0E80();
  uint64_t v29 = v42;
  sub_1DB0F1454((uint64_t)v33, v42, &qword_1EA905E40);
  uint64_t v30 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v29, v30, 1, v41);
}

uint64_t sub_1DB1C2EAC()
{
  uint64_t v1 = type metadata accessor for VisualTranslationOverlay();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16)) {
    swift_release();
  }
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 32);
  uint64_t v4 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t v5 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
    uint64_t v6 = v3 + *(int *)(v4 + 24);
    uint64_t v7 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  swift_release();
  sub_1DB118DE4(*(void *)(v2 + *(int *)(v1 + 36)), *(unsigned char *)(v2 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1DB1C3088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for VisualTranslationOverlay() - 8);
  uint64_t v6 = (void *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  return sub_1DB1C2A40(a1, v6, a2);
}

uint64_t sub_1DB1C3108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v262 = a2;
  uint64_t v254 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v193 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v252 = *((void *)v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v258 = v8;
  uint64_t v259 = (uint64_t)&v193 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VisualTranslationOverlay();
  uint64_t v250 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v251 = v10;
  uint64_t v257 = (uint64_t)&v193 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1EF690();
  uint64_t v195 = *(void *)(v11 - 8);
  uint64_t v196 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v194 = (char *)&v193 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = sub_1DB1EF6B0();
  uint64_t v255 = *(void *)(v260 - 8);
  MEMORY[0x1F4188790](v260);
  uint64_t v14 = (char *)&v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v193 = (char *)&v193 - v16;
  uint64_t v17 = sub_1DB1EFE00();
  uint64_t v233 = *(void *)(v17 - 8);
  uint64_t v234 = v17;
  MEMORY[0x1F4188790](v17);
  *(void *)&double v227 = (char *)&v193 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t locked = type metadata accessor for TranslationOverlay.LockedMetrics(0);
  MEMORY[0x1F4188790](locked);
  uint64_t v221 = (uint64_t)&v193 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v220 = (uint64_t)&v193 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905608);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (uint64_t *)((char *)&v193 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905600);
  MEMORY[0x1F4188790](v25 - 8);
  v261 = (uint64_t *)((char *)&v193 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v219 = type metadata accessor for TranslationOverlay(0);
  MEMORY[0x1F4188790](v219);
  uint64_t v28 = (char *)&v193 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905EB0);
  MEMORY[0x1F4188790](v198);
  *(void *)&double v224 = (char *)&v193 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905EB8);
  MEMORY[0x1F4188790](v223);
  uint64_t v228 = (uint64_t)&v193 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905EC0);
  MEMORY[0x1F4188790](v226);
  uint64_t v235 = (uint64_t)&v193 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905EC8);
  MEMORY[0x1F4188790](v229);
  uint64_t v236 = (uint64_t)&v193 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905ED0);
  MEMORY[0x1F4188790](v232);
  uint64_t v237 = (uint64_t)&v193 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905ED8);
  MEMORY[0x1F4188790](v230);
  uint64_t v238 = (uint64_t)&v193 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E98);
  MEMORY[0x1F4188790](v231);
  uint64_t v239 = (uint64_t)&v193 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E88);
  MEMORY[0x1F4188790](v241);
  uint64_t v240 = (uint64_t)&v193 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E70);
  MEMORY[0x1F4188790](v243);
  int v242 = (char *)&v193 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905EE0);
  uint64_t v245 = *(void *)(v38 - 8);
  uint64_t v246 = v38;
  MEMORY[0x1F4188790](v38);
  v256 = (char *)&v193 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E68);
  MEMORY[0x1F4188790](v244);
  v249 = (char *)&v193 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905E50);
  MEMORY[0x1F4188790](v247);
  uint64_t v248 = (uint64_t)&v193 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1 + v7[5];
  double v43 = *(double *)(v42 + 16);
  v225 = (long long *)(v42 + 16);
  double v44 = *(double *)(v42 + 24);
  double v45 = *(double *)(v42 + 32);
  double v47 = *(double *)(v42 + 40);
  double v46 = *(double *)(v42 + 48);
  double v49 = *(double *)(v42 + 56);
  double v48 = *(double *)(v42 + 64);
  double v50 = *(double *)(v42 + 72);
  sub_1DB1EFC90();
  double v217 = v52;
  double v218 = v51;
  uint64_t v197 = v7[9];
  int v53 = *(unsigned __int8 *)(a1 + v197);
  int v209 = v53;
  if (v53) {
    double v54 = v46;
  }
  else {
    double v54 = v43;
  }
  if (v53) {
    double v55 = v49;
  }
  else {
    double v55 = v44;
  }
  if (!v53) {
    double v43 = v45;
  }
  double v295 = v54;
  double v296 = v55;
  if (v53)
  {
    double v46 = v48;
    double v49 = v50;
  }
  else
  {
    double v44 = v47;
  }
  if (!v53) {
    double v45 = v48;
  }
  double v56 = v54;
  double v297 = v43;
  double v298 = v44;
  if (!v53) {
    double v47 = v50;
  }
  double v57 = v55;
  double v299 = v46;
  double v300 = v49;
  double v301 = v45;
  double v302 = v47;
  if (sub_1DB1AE4E0())
  {
    sub_1DB1AE584(v264, v218, v217);
    double v56 = v264[0];
    double v57 = v264[1];
    double v43 = v264[2];
    double v44 = v264[3];
    double v46 = v264[4];
    double v49 = v264[5];
    double v45 = v264[6];
    double v47 = v264[7];
  }
  id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB4008]), sel_initWithTopLeft_topRight_bottomLeft_bottomRight_, v56, v57, v43, v44, v46, v49, v45, v47);
  objc_msgSend(v58, sel_minimumBoundingRectWithoutRotation);
  CGFloat v60 = v59;
  CGFloat v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;

  double v67 = *(double *)(v42 + 152);
  sub_1DB1EFC90();
  double v286 = v67 / v68;
  uint64_t v289 = 0;
  uint64_t v287 = 0;
  uint64_t v288 = 0;
  double v290 = v67 / v68;
  uint64_t v291 = 0;
  uint64_t v292 = 0;
  uint64_t v293 = 0;
  uint64_t v294 = 0x3FF0000000000000;
  double v272 = 1.0 / (v67 / v68);
  uint64_t v275 = 0;
  uint64_t v273 = 0;
  uint64_t v274 = 0;
  double v276 = v272;
  uint64_t v277 = 0;
  uint64_t v278 = 0;
  uint64_t v279 = 0;
  uint64_t v280 = 0x3FF0000000000000;
  CATransform3DMakeTranslation(&v263, v60, v62, 0.0);
  *(_OWORD *)&v263.m13 = *(_OWORD *)&v263.m14;
  v263.m21 = v263.m22;
  v263.m22 = v263.m24;
  *(_OWORD *)&v263.m23 = *(_OWORD *)&v263.m41;
  v263.m31 = v263.m44;
  sub_1DB1F0300();
  long long v69 = *(_OWORD *)(v42 + 128);
  long long v283 = *(_OWORD *)(v42 + 112);
  long long v284 = v69;
  uint64_t v285 = *(void *)(v42 + 144);
  long long v70 = *(_OWORD *)(v42 + 80);
  long long v282 = *(_OWORD *)(v42 + 96);
  long long v281 = v70;
  sub_1DB1F0300();
  sub_1DB1F0300();
  double v217 = v264[27];
  double v218 = v264[26];
  double v215 = v264[29];
  double v216 = v264[28];
  double v213 = v264[31];
  double v214 = v264[30];
  double v211 = v264[33];
  double v212 = v264[32];
  double v210 = v264[34];
  char v71 = sub_1DB1B73CC();
  v253 = v6;
  uint64_t v199 = v14;
  if (v71)
  {
    uint64_t v72 = Array<A>.targetParagraph.getter(*(void *)(a1 + v7[7]));
    unint64_t v207 = v73;
    uint64_t v208 = v72;
  }
  else
  {
    unint64_t v207 = 0xE000000000000000;
    uint64_t v208 = 0;
  }
  uint64_t v74 = v261;
  v261 = (uint64_t *)v7[7];
  uint64_t v75 = Array<A>.sourceParagraph.getter(*(uint64_t *)((char *)v261 + a1));
  uint64_t v204 = v76;
  uint64_t v205 = v75;
  uint64_t v202 = *(void *)(a1 + v7[8]);
  uint64_t v77 = *(void *)(v262 + 8);
  int v78 = *(unsigned __int8 *)(a1 + v7[10]);
  if (v78 == 3) {
    int v78 = 1;
  }
  int v201 = v78;
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v74 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = a1;
  uint64_t v200 = swift_getKeyPath();
  uint64_t v80 = (uint64_t)v24;
  if (qword_1EA903568 != -1) {
    swift_once();
  }
  uint64_t v81 = __swift_project_value_buffer(locked, (uint64_t)qword_1EA90F290);
  uint64_t v82 = v220;
  sub_1DB1C7CDC(v81, v220, type metadata accessor for TranslationOverlay.LockedMetrics);
  *(void *)uint64_t v28 = v64;
  *((void *)v28 + 1) = v66;
  unint64_t v83 = v207;
  *((void *)v28 + 2) = v208;
  *((void *)v28 + 3) = v83;
  uint64_t v84 = v204;
  *((void *)v28 + 4) = v205;
  *((void *)v28 + 5) = v84;
  *((void *)v28 + 6) = v202;
  *((void *)v28 + 7) = v77;
  v28[64] = v209;
  v28[65] = v201;
  uint64_t v85 = (int *)v219;
  sub_1DB1F08C0();
  uint64_t v86 = &v28[v85[12]];
  *(void *)uint64_t v86 = KeyPath;
  v86[8] = 0;
  sub_1DB0F1454((uint64_t)v74, (uint64_t)&v28[v85[13]], &qword_1EA905600);
  sub_1DB0F1454(v80, (uint64_t)&v28[v85[14]], &qword_1EA905608);
  uint64_t v87 = &v28[v85[15]];
  *(void *)uint64_t v87 = v200;
  v87[8] = 0;
  sub_1DB1C7CDC(v82, v221, type metadata accessor for TranslationOverlay.LockedMetrics);
  sub_1DB1F0D10();
  sub_1DB1C8534(v82, type metadata accessor for TranslationOverlay.LockedMetrics);
  uint64_t v88 = v85[17];
  *(void *)&v28[v88] = sub_1DB1EFA60();
  uint64_t locked = swift_getKeyPath();
  uint64_t v89 = *(uint64_t *)((char *)v261 + a1);
  if (!*(void *)(v89 + 16)) {
    goto LABEL_28;
  }
  uint64_t v90 = type metadata accessor for TextModel();
  uint64_t v91 = v255;
  uint64_t v92 = v193;
  uint64_t v93 = v260;
  (*(void (**)(char *, unint64_t, uint64_t))(v255 + 16))(v193, v89+ *(int *)(v90 + 36)+ ((*(unsigned __int8 *)(*(void *)(v90 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v90 - 8) + 80)), v260);
  uint64_t v94 = v194;
  sub_1DB1EF6A0();
  uint64_t v95 = sub_1DB1EF660();
  (*(void (**)(char *, uint64_t))(v195 + 8))(v94, v196);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
  if (v95 == 2)
  {
    uint64_t v96 = v79;
    uint64_t v97 = (unsigned int *)MEMORY[0x1E4F3CBE8];
  }
  else
  {
LABEL_28:
    uint64_t v96 = v79;
    uint64_t v97 = (unsigned int *)MEMORY[0x1E4F3CBD8];
  }
  uint64_t v99 = v197;
  uint64_t v98 = v198;
  uint64_t v100 = v233;
  uint64_t v101 = v234;
  double v102 = v227;
  (*(void (**)(double, void, uint64_t))(v233 + 104))(COERCE_DOUBLE(*(void *)&v227), *v97, v234);
  uint64_t v103 = *(void *)&v224;
  uint64_t v104 = (char *)(*(void *)&v224 + *(int *)(v98 + 36));
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904130);
  (*(void (**)(char *, double, uint64_t))(v100 + 16))(&v104[*(int *)(v105 + 28)], COERCE_DOUBLE(*(void *)&v102), v101);
  *(void *)uint64_t v104 = locked;
  sub_1DB1C7CDC((uint64_t)v28, v103, type metadata accessor for TranslationOverlay);
  (*(void (**)(double, uint64_t))(v100 + 8))(COERCE_DOUBLE(*(void *)&v102), v101);
  sub_1DB1C8534((uint64_t)v28, type metadata accessor for TranslationOverlay);
  uint64_t v106 = v228;
  sub_1DB0E8B70(v103, v228, &qword_1EA905EB0);
  *(unsigned char *)(v106 + *(int *)(v223 + 36)) = 0;
  sub_1DB0E8BD4(v103, &qword_1EA905EB0);
  uint64_t v107 = v96;
  int v108 = *(unsigned __int8 *)(v96 + v99);
  if (*(unsigned char *)(v42 + 8))
  {
    double v110 = *(double *)(v42 + 64);
    double v109 = *(double *)(v42 + 72);
    double v112 = *(double *)(v42 + 48);
    double v111 = *(double *)(v42 + 56);
    double v114 = *(double *)(v42 + 32);
    double v113 = *(double *)(v42 + 40);
    double v116 = *(double *)(v42 + 16);
    double v115 = *(double *)(v42 + 24);
    if (v108) {
      double v117 = *(double *)(v42 + 48);
    }
    else {
      double v117 = *(double *)(v42 + 16);
    }
    uint64_t v233 = v64;
    uint64_t v234 = v66;
    if (v108) {
      double v118 = v111;
    }
    else {
      double v118 = v115;
    }
    double v227 = v60;
    if (v108) {
      double v119 = v116;
    }
    else {
      double v119 = v114;
    }
    double v224 = v62;
    if (v108) {
      double v120 = v115;
    }
    else {
      double v120 = v113;
    }
    if (v108) {
      double v121 = v110;
    }
    else {
      double v121 = v112;
    }
    if (v108) {
      double v122 = v109;
    }
    else {
      double v122 = v111;
    }
    if (v108) {
      double v123 = v114;
    }
    else {
      double v123 = v110;
    }
    if (v108) {
      double v124 = v113;
    }
    else {
      double v124 = v109;
    }
    id v125 = objc_allocWithZone(MEMORY[0x1E4FB4008]);
    double v126 = v118;
    double v127 = v119;
    CGFloat v60 = v227;
    double v128 = v120;
    CGFloat v62 = v224;
    double v129 = v124;
    uint64_t v64 = v233;
    uint64_t v66 = v234;
    id v130 = objc_msgSend(v125, sel_initWithTopLeft_topRight_bottomLeft_bottomRight_, v117, v126, v127, v128, v121, v122, v123, v129);
    objc_msgSend(v130, sel_averagedAngleFromBottomAndTopEdges);
    double v132 = v131;
  }
  else
  {
    double v132 = *(double *)v42;
  }
  uint64_t v133 = (char *)v261;
  if (v108) {
    double v134 = v132 + -1.57079633;
  }
  else {
    double v134 = v132;
  }
  sub_1DB1F1020();
  uint64_t v136 = v135;
  uint64_t v138 = v137;
  uint64_t v139 = v235;
  sub_1DB0E8B70(v106, v235, &qword_1EA905EB8);
  uint64_t v140 = v139 + *(int *)(v226 + 36);
  *(double *)uint64_t v140 = v134;
  *(void *)(v140 + 8) = v136;
  *(void *)(v140 + 16) = v138;
  sub_1DB0E8BD4(v106, &qword_1EA905EB8);
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  uint64_t v141 = v236;
  sub_1DB0E8B70(v139, v236, &qword_1EA905EC0);
  uint64_t v142 = (_OWORD *)(v141 + *(int *)(v229 + 36));
  long long v143 = v266;
  *uint64_t v142 = v265;
  v142[1] = v143;
  v142[2] = v267;
  sub_1DB0E8BD4(v139, &qword_1EA905EC0);
  uint64_t v144 = sub_1DB1C21E8();
  uint64_t v145 = v237;
  sub_1DB0E8B70(v141, v237, &qword_1EA905EC8);
  *(void *)(v145 + *(int *)(v232 + 36)) = v144;
  sub_1DB0E8BD4(v141, &qword_1EA905EC8);
  uint64_t v146 = v238;
  sub_1DB0E8B70(v145, v238, &qword_1EA905ED0);
  uint64_t v147 = v146 + *(int *)(v230 + 36);
  double v148 = v217;
  *(double *)uint64_t v147 = v218;
  *(double *)(v147 + 8) = v148;
  double v149 = v215;
  *(double *)(v147 + 16) = v216;
  *(double *)(v147 + 24) = v149;
  double v150 = v213;
  *(double *)(v147 + 32) = v214;
  *(double *)(v147 + 40) = v150;
  double v151 = v211;
  *(double *)(v147 + 48) = v212;
  *(double *)(v147 + 56) = v151;
  *(double *)(v147 + 64) = v210;
  sub_1DB0E8BD4(v145, &qword_1EA905ED0);
  uint64_t v152 = v239;
  sub_1DB0E8B70(v146, v239, &qword_1EA905ED8);
  uint64_t v153 = v152 + *(int *)(v231 + 52);
  uint64_t v154 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16))(v153, v96, v154);
  sub_1DB0E8BD4(v146, &qword_1EA905ED8);
  double v155 = (double)*(uint64_t *)(*(void *)&v133[v96] + 16);
  long long v156 = v225[1];
  long long v268 = *v225;
  long long v269 = v156;
  long long v157 = v225[3];
  long long v270 = v225[2];
  long long v271 = v157;
  double v158 = sub_1DB1AE420() / 10000.0 + v155;
  uint64_t v159 = v240;
  sub_1DB0E8B70(v152, v240, &qword_1EA905E98);
  *(double *)(v159 + *(int *)(v241 + 36)) = v158;
  sub_1DB0E8BD4(v152, &qword_1EA905E98);
  sub_1DB1C7B84();
  uint64_t v160 = (uint64_t)v242;
  sub_1DB1F0AA0();
  sub_1DB0E8BD4(v159, &qword_1EA905E88);
  uint64_t v161 = v257;
  sub_1DB1C7CDC(v262, v257, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  uint64_t v162 = v259;
  sub_1DB1C7CDC(v107, v259, type metadata accessor for VisualTranslationModel);
  uint64_t v163 = *(unsigned __int8 *)(v250 + 80);
  uint64_t v164 = (v163 + 16) & ~v163;
  v251 += v164;
  unint64_t v165 = (v251 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v166 = *(unsigned __int8 *)(v252 + 80);
  uint64_t v241 = ~v166;
  uint64_t v250 = v163 | v166 | 7;
  uint64_t v167 = swift_allocObject();
  uint64_t v252 = v164;
  sub_1DB1C8004(v161, v167 + v164, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  uint64_t v168 = (CGFloat *)(v167 + v165);
  *uint64_t v168 = v60;
  v168[1] = v62;
  *((void *)v168 + 2) = v64;
  *((void *)v168 + 3) = v66;
  sub_1DB1C8004(v162, v167 + ((v166 + v165 + 32) & ~v166), type metadata accessor for VisualTranslationModel);
  sub_1DB1C7AD8();
  sub_1DB1F09E0();
  swift_release();
  sub_1DB0E8BD4(v160, &qword_1EA905E70);
  uint64_t v169 = swift_getKeyPath();
  uint64_t v170 = *(uint64_t *)((char *)v261 + v107);
  uint64_t v171 = *(void *)(v170 + 16);
  uint64_t v206 = v107;
  if (!v171)
  {
    uint64_t v173 = v255;
    uint64_t v175 = (uint64_t)v253;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v255 + 56))(v253, 1, 1, v260);
    goto LABEL_63;
  }
  uint64_t v172 = type metadata accessor for TextModel();
  uint64_t v173 = v255;
  uint64_t v174 = *(void (**)(char *, unint64_t, uint64_t))(v255 + 16);
  uint64_t v175 = (uint64_t)v253;
  uint64_t v176 = v260;
  v174(v253, v170+ *(int *)(v172 + 36)+ ((*(unsigned __int8 *)(*(void *)(v172 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v172 - 8) + 80)), v260);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v173 + 56))(v175, 0, 1, v176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48))(v175, 1, v176) == 1)
  {
LABEL_63:
    uint64_t v177 = v169;
    uint64_t v178 = v199;
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    sub_1DB0E8BD4(v175, &qword_1EBA4E570);
    uint64_t v174 = *(void (**)(char *, unint64_t, uint64_t))(v173 + 16);
    goto LABEL_64;
  }
  uint64_t v177 = v169;
  uint64_t v178 = v199;
  (*(void (**)(char *, uint64_t, uint64_t))(v173 + 32))(v199, v175, v260);
LABEL_64:
  uint64_t v179 = (uint64_t)v249;
  uint64_t v180 = &v249[*(int *)(v244 + 36)];
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905EA8);
  uint64_t v182 = v260;
  v174(&v180[*(int *)(v181 + 28)], (unint64_t)v178, v260);
  *(void *)uint64_t v180 = v177;
  uint64_t v184 = v245;
  uint64_t v183 = v246;
  v185 = v256;
  (*(void (**)(uint64_t, char *, uint64_t))(v245 + 16))(v179, v256, v246);
  (*(void (**)(char *, uint64_t))(v173 + 8))(v178, v182);
  (*(void (**)(char *, uint64_t))(v184 + 8))(v185, v183);
  uint64_t v186 = v257;
  sub_1DB1C7CDC(v262, v257, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  uint64_t v187 = v259;
  sub_1DB1C7CDC(v206, v259, type metadata accessor for VisualTranslationModel);
  uint64_t v188 = (v251 + v166) & v241;
  uint64_t v189 = swift_allocObject();
  sub_1DB1C8004(v186, v189 + v252, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  sub_1DB1C8004(v187, v189 + v188, type metadata accessor for VisualTranslationModel);
  uint64_t v190 = v248;
  sub_1DB0E8B70(v179, v248, &qword_1EA905E68);
  uint64_t v191 = (void (**)())(v190 + *(int *)(v247 + 36));
  char *v191 = sub_1DB1C8468;
  v191[1] = (void (*)())v189;
  v191[2] = 0;
  v191[3] = 0;
  sub_1DB0E8BD4(v179, &qword_1EA905E68);
  return sub_1DB0F1454(v190, v254, &qword_1EA905E50);
}

uint64_t sub_1DB1C4814(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v22 - v16;
  v26.origin.x = a3;
  v26.origin.y = a4;
  v26.size.width = a5;
  v26.size.height = a6;
  CGRect v27 = CGRectInset(v26, -5.0, -5.0);
  uint64_t v18 = *(void *)(a1 + 64);
  long long v19 = *(_OWORD *)(a1 + 48);
  long long v23 = *(_OWORD *)(a1 + 32);
  long long v24 = v19;
  uint64_t v25 = v18;
  CGRect v22 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DE0);
  sub_1DB1F0D30();
  sub_1DB1C7CDC(a2, (uint64_t)v17, type metadata accessor for VisualTranslationModel);
  uint64_t v20 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 0, 1, v20);
  type metadata accessor for VisualTranslationOverlay();
  sub_1DB0E8B70((uint64_t)v17, (uint64_t)v14, &qword_1EBA4E458);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  sub_1DB1F0D30();
  return sub_1DB0E8BD4((uint64_t)v17, &qword_1EBA4E458);
}

void sub_1DB1C49D0(uint64_t a1, uint64_t a2)
{
  double v54 = (char *)a1;
  double v55 = (char *)a2;
  uint64_t v2 = sub_1DB1EF570();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  uint64_t v53 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905EE8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049E0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v46 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for VisualTranslationOverlay();
  MEMORY[0x1F4188790](v22 - 8);
  long long v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  sub_1DB1C7CDC((uint64_t)v54, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  sub_1DB1C7CDC((uint64_t)v55, (uint64_t)v21, type metadata accessor for VisualTranslationModel);
  if (!IsVoiceOverRunning)
  {
    sub_1DB1C8534((uint64_t)v21, type metadata accessor for VisualTranslationModel);
    sub_1DB1C8534((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
    return;
  }
  double v49 = v21;
  uint64_t v50 = v6;
  double v54 = v14;
  double v55 = v17;
  double v47 = v5;
  double v48 = v11;
  uint64_t v27 = v52;
  uint64_t v26 = v53;
  uint64_t v28 = *(void *)v24;
  uint64_t v29 = *(void *)(*(void *)v24 + 16);
  double v51 = v24;
  if (v29)
  {
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v53 + 16);
    uint64_t v31 = (uint64_t)v55;
    v30(v55, v28 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), v52);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v32(v31, 0, 1, v27);
  }
  else
  {
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    uint64_t v31 = (uint64_t)v55;
    v32((uint64_t)v55, 1, 1, v52);
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
  }
  uint64_t v33 = (uint64_t)v54;
  uint64_t v34 = (uint64_t)v49;
  v30(v54, (unint64_t)v49, v27);
  v32(v33, 0, 1, v27);
  uint64_t v35 = (uint64_t)v8;
  uint64_t v36 = (uint64_t)&v8[*(int *)(v50 + 48)];
  sub_1DB0E8B70(v31, (uint64_t)v8, &qword_1EA9049E0);
  sub_1DB0E8B70(v33, v36, &qword_1EA9049E0);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v37(v35, 1, v27) != 1)
  {
    uint64_t v38 = (uint64_t)v48;
    sub_1DB0E8B70(v35, (uint64_t)v48, &qword_1EA9049E0);
    if (v37(v36, 1, v27) != 1)
    {
      uint64_t v39 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v47, v36, v27);
      sub_1DB1C8594(&qword_1EA904F98, MEMORY[0x1E4F27990]);
      uint64_t v40 = v38;
      char v41 = sub_1DB1F1230();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v26 + 8);
      v42(v39, v27);
      sub_1DB0E8BD4((uint64_t)v54, &qword_1EA9049E0);
      sub_1DB0E8BD4((uint64_t)v55, &qword_1EA9049E0);
      sub_1DB1C8534(v34, type metadata accessor for VisualTranslationModel);
      sub_1DB1C8534((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
      v42((char *)v40, v27);
      sub_1DB0E8BD4(v35, &qword_1EA9049E0);
      if ((v41 & 1) == 0) {
        return;
      }
      goto LABEL_13;
    }
    sub_1DB0E8BD4((uint64_t)v54, &qword_1EA9049E0);
    sub_1DB0E8BD4((uint64_t)v55, &qword_1EA9049E0);
    sub_1DB1C8534(v34, type metadata accessor for VisualTranslationModel);
    sub_1DB1C8534((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v38, v27);
LABEL_11:
    sub_1DB0E8BD4(v35, &qword_1EA905EE8);
    return;
  }
  sub_1DB0E8BD4(v33, &qword_1EA9049E0);
  sub_1DB0E8BD4(v31, &qword_1EA9049E0);
  sub_1DB1C8534(v34, type metadata accessor for VisualTranslationModel);
  sub_1DB1C8534((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  if (v37(v36, 1, v27) != 1) {
    goto LABEL_11;
  }
  sub_1DB0E8BD4(v35, &qword_1EA9049E0);
LABEL_13:
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v44 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB1EF400();

  double v45 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  UIAccessibilitySpeakAndDoNotBeInterrupted();
}

uint64_t sub_1DB1C50EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5380(&qword_1EA903850, MEMORY[0x1E4F3C820], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_1DB1C512C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1DB1F0160();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_1DB1F1720();
    uint64_t v9 = sub_1DB1F06B0();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_1DB11F638(0x6C616E6F6974704FLL, 0xEE003E746E6F463CLL, &v15);
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v12, -1, -1);
      MEMORY[0x1E018CA60](v11, -1, -1);
    }

    sub_1DB1F0150();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_1DB1C5340@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5380(&qword_1EA904100, MEMORY[0x1E4F3CBF0], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_1DB1C5380@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1DB1F0160();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB0E8B70(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_1DB1F1720();
    uint64_t v21 = sub_1DB1F06B0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v29 = sub_1DB11F638(v28, v26, &v30);
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v24, -1, -1);
      MEMORY[0x1E018CA60](v23, -1, -1);
    }

    sub_1DB1F0150();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1DB1C5638@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5894(&qword_1EA9043A0, &qword_1EA9043E0, 0xD000000000000020, 0x80000001DB1FDA10, a1);
}

uint64_t sub_1DB1C5664(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1DB1F0160();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1DB1F1720();
  uint64_t v9 = sub_1DB1F06B0();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_1DB11F638(1819242306, 0xE400000000000000, &v15);
    sub_1DB1F1910();
    _os_log_impl(&dword_1DB0DC000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v12, -1, -1);
    MEMORY[0x1E018CA60](v11, -1, -1);
  }

  sub_1DB1F0150();
  swift_getAtKeyPath();
  sub_1DB118DE4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1DB1C5868@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5894(&qword_1EA904440, &qword_1EA9044E8, 0xD000000000000019, 0x80000001DB1FD970, a1);
}

uint64_t sub_1DB1C5894@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1DB1F0160();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB0E8B70(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1DB0F1454((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_1DB1F1720();
  os_log_type_t v20 = sub_1DB1F06B0();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v25 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = a5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v28 = sub_1DB11F638(v27, v25, &v29);
    sub_1DB1F1910();
    _os_log_impl(&dword_1DB0DC000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v23, -1, -1);
    MEMORY[0x1E018CA60](v22, -1, -1);
  }

  sub_1DB1F0150();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1DB1C5B1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5380(&qword_1EA9047B0, MEMORY[0x1E4F3C868], 0x414C52556E65704FLL, 0xED00006E6F697463, a1);
}

uint64_t sub_1DB1C5B5C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1DB1F0160();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_1DB1F1720();
    uint64_t v9 = sub_1DB1F06B0();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_1DB11F638(0xD000000000000012, 0x80000001DB1FD9F0, &v15);
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v12, -1, -1);
      MEMORY[0x1E018CA60](v11, -1, -1);
    }

    sub_1DB1F0150();
    swift_getAtKeyPath();
    sub_1DB118DE4(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_1DB1C5D68@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5380(&qword_1EA905300, MEMORY[0x1E4F3C5D0], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_1DB1C5DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5380(&qword_1EA9055E0, MEMORY[0x1E4F3CB98], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_1DB1C5DE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1C5894(&qword_1EA9055E8, &qword_1EA9055F0, 0xD00000000000001ALL, 0x80000001DB1FD950, a1);
}

uint64_t sub_1DB1C5E10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1F0080();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DB1C5E40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1F0080();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DB1C5E70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for VisualTranslationOverlay(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    os_log_type_t v8 = a2 + 2;
    uint64_t v9 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v10 = a2[3];
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *v8;
    }
    long long v11 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v11;
    *(void *)(a1 + 64) = a2[8];
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = (char *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = (int *)type metadata accessor for VisualTranslationModel(0);
    uint64_t v16 = *((void *)v15 - 1);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, int *))(v16 + 48);
    swift_retain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_1DB1EF570();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
      uint64_t v20 = v15[5];
      uint64_t v21 = &v13[v20];
      uint64_t v22 = &v14[v20];
      long long v23 = *((_OWORD *)v22 + 9);
      *((_OWORD *)v21 + 8) = *((_OWORD *)v22 + 8);
      *((_OWORD *)v21 + 9) = v23;
      *((void *)v21 + 20) = *((void *)v22 + 20);
      long long v24 = *((_OWORD *)v22 + 5);
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      *((_OWORD *)v21 + 5) = v24;
      long long v25 = *((_OWORD *)v22 + 7);
      *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
      *((_OWORD *)v21 + 7) = v25;
      long long v26 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v26;
      long long v27 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v27;
      uint64_t v28 = v15[6];
      uint64_t v29 = &v13[v28];
      uint64_t v30 = &v14[v28];
      uint64_t v31 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      *(void *)&v13[v15[7]] = *(void *)&v14[v15[7]];
      *(void *)&v13[v15[8]] = *(void *)&v14[v15[8]];
      v13[v15[9]] = v14[v15[9]];
      v13[v15[10]] = v14[v15[10]];
      v13[v15[11]] = v14[v15[11]];
      uint64_t v32 = *(void (**)(char *, void, uint64_t, int *))(v16 + 56);
      swift_bridgeObjectRetain();
      v32(v13, 0, 1, v15);
    }
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
    *(void *)&v13[*(int *)(v33 + 28)] = *(void *)&v14[*(int *)(v33 + 28)];
    uint64_t v34 = *(int *)(a3 + 36);
    uint64_t v35 = a1 + v34;
    uint64_t v36 = (uint64_t)a2 + v34;
    uint64_t v37 = *(void *)v36;
    char v38 = *(unsigned char *)(v36 + 8);
    swift_retain();
    sub_1DB118D3C(v37, v38);
    *(void *)uint64_t v35 = v37;
    *(unsigned char *)(v35 + 8) = v38;
  }
  return a1;
}

uint64_t destroy for VisualTranslationOverlay(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16)) {
    swift_release();
  }
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = v4 + *(int *)(v5 + 24);
    uint64_t v8 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  swift_release();
  uint64_t v9 = a1 + *(int *)(a2 + 36);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  return sub_1DB118DE4(v10, v11);
}

uint64_t initializeWithCopy for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v8;
  }
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  swift_retain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1DB1EF570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
    uint64_t v19 = v14[5];
    uint64_t v20 = &v12[v19];
    uint64_t v21 = &v13[v19];
    long long v22 = *((_OWORD *)v21 + 9);
    *((_OWORD *)v20 + 8) = *((_OWORD *)v21 + 8);
    *((_OWORD *)v20 + 9) = v22;
    *((void *)v20 + 20) = *((void *)v21 + 20);
    long long v23 = *((_OWORD *)v21 + 5);
    *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
    *((_OWORD *)v20 + 5) = v23;
    long long v24 = *((_OWORD *)v21 + 7);
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    *((_OWORD *)v20 + 7) = v24;
    long long v25 = *((_OWORD *)v21 + 1);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v25;
    long long v26 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v26;
    uint64_t v27 = v14[6];
    uint64_t v28 = &v12[v27];
    uint64_t v29 = &v13[v27];
    uint64_t v30 = sub_1DB1EF520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
    *(void *)&v12[v14[8]] = *(void *)&v13[v14[8]];
    v12[v14[9]] = v13[v14[9]];
    v12[v14[10]] = v13[v14[10]];
    v12[v14[11]] = v13[v14[11]];
    uint64_t v31 = *(void (**)(char *, void, uint64_t, int *))(v15 + 56);
    swift_bridgeObjectRetain();
    v31(v12, 0, 1, v14);
  }
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  *(void *)&v12[*(int *)(v32 + 28)] = *(void *)&v13[*(int *)(v32 + 28)];
  uint64_t v33 = *(int *)(a3 + 36);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = *(void *)v35;
  char v37 = *(unsigned char *)(v35 + 8);
  swift_retain();
  sub_1DB118D3C(v36, v37);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = v37;
  return a1;
}

void *assignWithCopy for VisualTranslationOverlay(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1[2];
  a1[1] = a2[1];
  uint64_t v7 = a2[2];
  if (v6)
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v45 = sub_1DB1EF570();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 24))(v11, v12, v45);
      uint64_t v46 = v13[5];
      double v47 = &v11[v46];
      double v48 = &v12[v46];
      uint64_t v49 = *(void *)v48;
      v47[8] = v48[8];
      *(void *)double v47 = v49;
      *((void *)v47 + 2) = *((void *)v48 + 2);
      *((void *)v47 + 3) = *((void *)v48 + 3);
      *((void *)v47 + 4) = *((void *)v48 + 4);
      *((void *)v47 + 5) = *((void *)v48 + 5);
      *((void *)v47 + 6) = *((void *)v48 + 6);
      *((void *)v47 + 7) = *((void *)v48 + 7);
      *((void *)v47 + 8) = *((void *)v48 + 8);
      *((void *)v47 + 9) = *((void *)v48 + 9);
      *((void *)v47 + 10) = *((void *)v48 + 10);
      *((void *)v47 + 11) = *((void *)v48 + 11);
      *((void *)v47 + 12) = *((void *)v48 + 12);
      *((void *)v47 + 13) = *((void *)v48 + 13);
      *((void *)v47 + 14) = *((void *)v48 + 14);
      *((void *)v47 + 15) = *((void *)v48 + 15);
      *((void *)v47 + 16) = *((void *)v48 + 16);
      *((void *)v47 + 17) = *((void *)v48 + 17);
      *((void *)v47 + 18) = *((void *)v48 + 18);
      *((void *)v47 + 19) = *((void *)v48 + 19);
      *((void *)v47 + 20) = *((void *)v48 + 20);
      uint64_t v50 = v13[6];
      double v51 = &v11[v50];
      uint64_t v52 = &v12[v50];
      uint64_t v53 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
      *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v11[v13[8]] = *(void *)&v12[v13[8]];
      v11[v13[9]] = v12[v13[9]];
      v11[v13[10]] = v12[v13[10]];
      v11[v13[11]] = v12[v13[11]];
      goto LABEL_14;
    }
    sub_1DB1C8534((uint64_t)v11, type metadata accessor for VisualTranslationModel);
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_13:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v11, v12, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v18 = sub_1DB1EF570();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
  uint64_t v19 = v13[5];
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  uint64_t v22 = *((void *)v21 + 20);
  long long v24 = *((_OWORD *)v21 + 8);
  long long v23 = *((_OWORD *)v21 + 9);
  *((_OWORD *)v20 + 7) = *((_OWORD *)v21 + 7);
  *((_OWORD *)v20 + 8) = v24;
  *((_OWORD *)v20 + 9) = v23;
  *((void *)v20 + 20) = v22;
  long long v26 = *((_OWORD *)v21 + 5);
  long long v25 = *((_OWORD *)v21 + 6);
  long long v27 = *((_OWORD *)v21 + 4);
  *((_OWORD *)v20 + 3) = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 4) = v27;
  *((_OWORD *)v20 + 5) = v26;
  *((_OWORD *)v20 + 6) = v25;
  long long v29 = *((_OWORD *)v21 + 1);
  long long v28 = *((_OWORD *)v21 + 2);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v29;
  *((_OWORD *)v20 + 2) = v28;
  uint64_t v30 = v13[6];
  uint64_t v31 = &v11[v30];
  uint64_t v32 = &v12[v30];
  uint64_t v33 = sub_1DB1EF520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
  *(void *)&v11[v13[8]] = *(void *)&v12[v13[8]];
  v11[v13[9]] = v12[v13[9]];
  v11[v13[10]] = v12[v13[10]];
  v11[v13[11]] = v12[v13[11]];
  uint64_t v34 = *(void (**)(unsigned char *, void, uint64_t, int *))(v14 + 56);
  swift_bridgeObjectRetain();
  v34(v11, 0, 1, v13);
LABEL_14:
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  *(void *)&v11[*(int *)(v36 + 28)] = *(void *)&v12[*(int *)(v36 + 28)];
  swift_retain();
  swift_release();
  uint64_t v37 = *(int *)(a3 + 36);
  char v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)v39;
  char v41 = v39[8];
  sub_1DB118D3C(*(void *)v39, v41);
  uint64_t v42 = *(void *)v38;
  char v43 = v38[8];
  *(void *)char v38 = v40;
  v38[8] = v41;
  sub_1DB118DE4(v42, v43);
  return a1;
}

uint64_t initializeWithTake for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_1DB1EF570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
    uint64_t v16 = v12[5];
    int v17 = &v10[v16];
    uint64_t v18 = &v11[v16];
    long long v19 = *((_OWORD *)v18 + 9);
    *((_OWORD *)v17 + 8) = *((_OWORD *)v18 + 8);
    *((_OWORD *)v17 + 9) = v19;
    *((void *)v17 + 20) = *((void *)v18 + 20);
    long long v20 = *((_OWORD *)v18 + 5);
    *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
    *((_OWORD *)v17 + 5) = v20;
    long long v21 = *((_OWORD *)v18 + 7);
    *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
    *((_OWORD *)v17 + 7) = v21;
    long long v22 = *((_OWORD *)v18 + 1);
    *(_OWORD *)int v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v22;
    long long v23 = *((_OWORD *)v18 + 3);
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 3) = v23;
    uint64_t v24 = v12[6];
    long long v25 = &v10[v24];
    long long v26 = &v11[v24];
    uint64_t v27 = sub_1DB1EF520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    *(void *)&v10[v12[7]] = *(void *)&v11[v12[7]];
    *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
    v10[v12[9]] = v11[v12[9]];
    v10[v12[10]] = v11[v12[10]];
    v10[v12[11]] = v11[v12[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  *(void *)&v10[*(int *)(v28 + 28)] = *(void *)&v11[*(int *)(v28 + 28)];
  uint64_t v29 = *(int *)(a3 + 36);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  return a1;
}

uint64_t assignWithTake for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (v7)
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v9;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_8:
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      uint64_t v41 = sub_1DB1EF570();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 40))(v12, v13, v41);
      uint64_t v42 = v14[5];
      char v43 = &v12[v42];
      id v44 = &v13[v42];
      *(void *)char v43 = *(void *)v44;
      v43[8] = v44[8];
      long long v45 = *((_OWORD *)v44 + 2);
      *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
      *((_OWORD *)v43 + 2) = v45;
      long long v46 = *((_OWORD *)v44 + 4);
      *((_OWORD *)v43 + 3) = *((_OWORD *)v44 + 3);
      *((_OWORD *)v43 + 4) = v46;
      long long v47 = *((_OWORD *)v44 + 6);
      *((_OWORD *)v43 + 5) = *((_OWORD *)v44 + 5);
      *((_OWORD *)v43 + 6) = v47;
      long long v48 = *((_OWORD *)v44 + 8);
      *((_OWORD *)v43 + 7) = *((_OWORD *)v44 + 7);
      *((_OWORD *)v43 + 8) = v48;
      *((_OWORD *)v43 + 9) = *((_OWORD *)v44 + 9);
      *((void *)v43 + 20) = *((void *)v44 + 20);
      uint64_t v49 = v14[6];
      uint64_t v50 = &v12[v49];
      double v51 = &v13[v49];
      uint64_t v52 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40))(v50, v51, v52);
      *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
      swift_bridgeObjectRelease();
      *(void *)&v12[v14[8]] = *(void *)&v13[v14[8]];
      v12[v14[9]] = v13[v14[9]];
      v12[v14[10]] = v13[v14[10]];
      v12[v14[11]] = v13[v14[11]];
      goto LABEL_14;
    }
    sub_1DB1C8534((uint64_t)v12, type metadata accessor for VisualTranslationModel);
    goto LABEL_13;
  }
  if (v18)
  {
LABEL_13:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v12, v13, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v19 = sub_1DB1EF570();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
  uint64_t v20 = v14[5];
  long long v21 = &v12[v20];
  long long v22 = &v13[v20];
  long long v23 = *((_OWORD *)v22 + 9);
  *((_OWORD *)v21 + 8) = *((_OWORD *)v22 + 8);
  *((_OWORD *)v21 + 9) = v23;
  *((void *)v21 + 20) = *((void *)v22 + 20);
  long long v24 = *((_OWORD *)v22 + 5);
  *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
  *((_OWORD *)v21 + 5) = v24;
  long long v25 = *((_OWORD *)v22 + 7);
  *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
  *((_OWORD *)v21 + 7) = v25;
  long long v26 = *((_OWORD *)v22 + 1);
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v26;
  long long v27 = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = v27;
  uint64_t v28 = v14[6];
  uint64_t v29 = &v12[v28];
  uint64_t v30 = &v13[v28];
  uint64_t v31 = sub_1DB1EF520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
  *(void *)&v12[v14[8]] = *(void *)&v13[v14[8]];
  v12[v14[9]] = v13[v14[9]];
  v12[v14[10]] = v13[v14[10]];
  v12[v14[11]] = v13[v14[11]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  *(void *)&v12[*(int *)(v33 + 28)] = *(void *)&v13[*(int *)(v33 + 28)];
  swift_release();
  uint64_t v34 = *(int *)(a3 + 36);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  LOBYTE(v36) = *((unsigned char *)v36 + 8);
  uint64_t v38 = *(void *)v35;
  char v39 = *(unsigned char *)(v35 + 8);
  *(void *)uint64_t v35 = v37;
  *(unsigned char *)(v35 + 8) = (_BYTE)v36;
  sub_1DB118DE4(v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1C70E0);
}

uint64_t sub_1DB1C70E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for VisualTranslationOverlay(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1C71A8);
}

void *sub_1DB1C71A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DB1C7254()
{
  sub_1DB1C7318();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DB1C7318()
{
  if (!qword_1EA905E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4E458);
    unint64_t v0 = sub_1DB1F0D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA905E00);
    }
  }
}

unint64_t sub_1DB1C7378()
{
  unint64_t result = qword_1EA905E08;
  if (!qword_1EA905E08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905DE8);
    sub_1DB1C7418();
    sub_1DB0E3C44(&qword_1EA905E30, &qword_1EA905E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905E08);
  }
  return result;
}

unint64_t sub_1DB1C7418()
{
  unint64_t result = qword_1EA905E10;
  if (!qword_1EA905E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905DD0);
    sub_1DB0E3C44(&qword_1EA905E18, &qword_1EA905E20);
    sub_1DB1C8594(&qword_1EA905E28, (void (*)(uint64_t))type metadata accessor for SystemWidePresentation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905E10);
  }
  return result;
}

uint64_t sub_1DB1C74E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1DB1C75B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9055F0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DB0E8B70(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EA9055F0);
  return sub_1DB1EFFE0();
}

uint64_t sub_1DB1C764C()
{
  uint64_t v1 = sub_1DB1EFCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for VisualTranslationOverlay();
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v7 = v0 + v6;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v6 + 16)) {
    swift_release();
  }
  swift_release();
  uint64_t v8 = v7 + *(int *)(v5 + 32);
  uint64_t v9 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 24);
    uint64_t v12 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  swift_release();
  sub_1DB118DE4(*(void *)(v7 + *(int *)(v5 + 36)), *(unsigned char *)(v7 + *(int *)(v5 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1DB1C78A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1DB1EFCB0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for VisualTranslationOverlay() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_1DB1C3108(a1, v9, a2);
}

unint64_t sub_1DB1C7988()
{
  unint64_t result = qword_1EA905E58;
  if (!qword_1EA905E58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905E50);
    sub_1DB1C7A04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905E58);
  }
  return result;
}

unint64_t sub_1DB1C7A04()
{
  unint64_t result = qword_1EA905E60;
  if (!qword_1EA905E60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905E68);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905E70);
    sub_1DB1C7AD8();
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA905EA0, &qword_1EA905EA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905E60);
  }
  return result;
}

unint64_t sub_1DB1C7AD8()
{
  unint64_t result = qword_1EA905E78;
  if (!qword_1EA905E78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905E70);
    sub_1DB1C7B84();
    sub_1DB1C8594(&qword_1EA9045D8, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905E78);
  }
  return result;
}

unint64_t sub_1DB1C7B84()
{
  unint64_t result = qword_1EA905E80;
  if (!qword_1EA905E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905E88);
    sub_1DB0E3C44(&qword_1EA905E90, &qword_1EA905E98);
    sub_1DB0E3C44(&qword_1EBA4DD80, &qword_1EBA4DD88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905E80);
  }
  return result;
}

uint64_t sub_1DB1C7C48()
{
  return sub_1DB1EFF60();
}

uint64_t sub_1DB1C7C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB1C74E8(a1, a2, a3, a4, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3CFE8]);
}

uint64_t sub_1DB1C7CAC()
{
  return sub_1DB1EFFD0();
}

uint64_t sub_1DB1C7CDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1C7D44()
{
  uint64_t v1 = type metadata accessor for VisualTranslationOverlay();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v16 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v3 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 16)) {
    swift_release();
  }
  swift_release();
  uint64_t v7 = v6 + *(int *)(v1 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3))
  {
    uint64_t v8 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = v7 + *(int *)(v3 + 24);
    uint64_t v10 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  swift_release();
  sub_1DB118DE4(*(void *)(v6 + *(int *)(v1 + 36)), *(unsigned char *)(v6 + *(int *)(v1 + 36) + 8));
  uint64_t v11 = v0 + ((((v16 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + v5 + 32) & ~v5);
  uint64_t v12 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + *(int *)(v3 + 24);
  uint64_t v14 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB1C8004(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1C806C()
{
  uint64_t v1 = *(void *)(type metadata accessor for VisualTranslationOverlay() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for VisualTranslationModel(0) - 8);
  CGFloat v5 = *(double *)(v0 + v3);
  CGFloat v6 = *(double *)(v0 + v3 + 8);
  CGFloat v7 = *(double *)(v0 + v3 + 16);
  CGFloat v8 = *(double *)(v0 + v3 + 24);
  uint64_t v9 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1DB1C4814(v0 + v2, v9, v5, v6, v7, v8);
}

uint64_t sub_1DB1C8150()
{
  return sub_1DB1F00B0();
}

uint64_t sub_1DB1C8174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB1C74E8(a1, a2, a3, a4, MEMORY[0x1E4F27A78], MEMORY[0x1E4F3D220]);
}

uint64_t sub_1DB1C81B4()
{
  uint64_t v1 = type metadata accessor for VisualTranslationOverlay();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v16 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v3 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 16)) {
    swift_release();
  }
  swift_release();
  uint64_t v7 = v6 + *(int *)(v1 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3))
  {
    uint64_t v8 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = v7 + *(int *)(v3 + 24);
    uint64_t v10 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905DD8);
  swift_release();
  sub_1DB118DE4(*(void *)(v6 + *(int *)(v1 + 36)), *(unsigned char *)(v6 + *(int *)(v1 + 36) + 8));
  uint64_t v11 = v0 + ((v2 + v16 + v5) & ~v5);
  uint64_t v12 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + *(int *)(v3 + 24);
  uint64_t v14 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DB1C8468()
{
  uint64_t v1 = *(void *)(type metadata accessor for VisualTranslationOverlay() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for VisualTranslationModel(0) - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_1DB1C49D0(v0 + v2, v5);
}

uint64_t sub_1DB1C8534(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB1C8594(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB1C85DC()
{
  unint64_t result = qword_1EA905EF0;
  if (!qword_1EA905EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905EF0);
  }
  return result;
}

uint64_t _s19ScaleOffsetModifierVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s19ScaleOffsetModifierVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *_s19ScaleOffsetModifierVMa()
{
  return &_s19ScaleOffsetModifierVN;
}

unint64_t sub_1DB1C8690()
{
  unint64_t result = qword_1EA905EF8;
  if (!qword_1EA905EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905EF8);
  }
  return result;
}

unint64_t sub_1DB1C86E8()
{
  unint64_t result = qword_1EA905F00;
  if (!qword_1EA905F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905F00);
  }
  return result;
}

unint64_t sub_1DB1C8740()
{
  unint64_t result = qword_1EA905F08;
  if (!qword_1EA905F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905F08);
  }
  return result;
}

uint64_t static VisualTranslationService.isOCRLocale(_:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1DB1EF5D0();
  id v2 = objc_msgSend(v1, sel_languageIdentifier);

  sub_1DB1F1290();
  char v3 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v0, sel_baseLanguageFromLanguage_, v3);

  uint64_t v5 = sub_1DB1F1290();
  uint64_t v7 = v6;

  if (qword_1EBA4E290 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBA4F3E8;
  swift_bridgeObjectRetain();
  char v9 = sub_1DB15AFBC(v5, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DB1C88BC()
{
  uint64_t result = sub_1DB1C88DC();
  qword_1EBA4F3E8 = result;
  return result;
}

uint64_t sub_1DB1C88DC()
{
  sub_1DB0E2EFC(0, &qword_1EBA4E4C0);
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportedRecognitionLanguages);
  uint64_t v1 = sub_1DB1F14A0();

  uint64_t v13 = MEMORY[0x1E4FBC870];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    char v3 = self;
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = (void *)sub_1DB1F1260();
      id v6 = objc_msgSend(v3, sel_baseLanguageFromLanguage_, v5);

      uint64_t v7 = sub_1DB1F1290();
      uint64_t v9 = v8;

      BOOL v10 = v7 == 29281 && v9 == 0xE200000000000000;
      if (v10 || (sub_1DB1F1DB0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1DB1E4E80(&v12, v7, v9);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    return v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t static VisualTranslationService.isTranslatable(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA905F18 + dword_1EA905F18);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_1DB1C8B44;
  return v5(a1);
}

uint64_t sub_1DB1C8B44(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t static VisualTranslationService.isTranslatable(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  _OWORD v11[5] = a2;
  v11[6] = a3;
  v11[7] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB131F20((uint64_t)v9, (uint64_t)&unk_1EA905F28, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1DB1C8D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  v6[6] = swift_task_alloc();
  v6[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1C8E10, 0, 0);
}

uint64_t sub_1DB1C8E10()
{
  unint64_t v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = v0[6];
    uint64_t v3 = v0[7];
    unint64_t v4 = v0[3];
    uint64_t v5 = sub_1DB1EF6B0();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v3, 1, 1, v5);
    v6(v2, 1, 1, v5);
    uint64_t v7 = _s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(v4, 1, v3, v2);
    v0[8] = v7;
    sub_1DB0E8BD4(v2, &qword_1EBA4E570);
    sub_1DB0E8BD4(v3, &qword_1EBA4E570);
    long long v22 = (uint64_t (*)(uint64_t))((char *)&dword_1EA905F18 + dword_1EA905F18);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[9] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1DB1C91BC;
    return v22((uint64_t)v7);
  }
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DB1EF810();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBA4F408);
  uint64_t v12 = sub_1DB1EF7F0();
  os_log_type_t v13 = sub_1DB1F1710();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    sub_1DB1CEA94();
    uint64_t v16 = (void *)swift_allocError();
    *int v17 = 0;
    uint64_t v18 = sub_1DB1EF410();

    v0[2] = v18;
    sub_1DB1F1910();
    void *v15 = v18;
    _os_log_impl(&dword_1DB0DC000, v12, v13, "Visual isTranslatable: NO; reason: observation failure: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v15, -1, -1);
    MEMORY[0x1E018CA60](v14, -1, -1);
  }

  sub_1DB1CEA94();
  v0[13] = swift_allocError();
  *uint64_t v19 = 0;
  sub_1DB1F1570();
  v0[14] = sub_1DB1F1560();
  uint64_t v21 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1C95D0, v21, v20);
}

uint64_t sub_1DB1C91BC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1DB1C9430;
  }
  else
  {
    *(unsigned char *)(v4 + 120) = a1 & 1;
    uint64_t v5 = sub_1DB1C930C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DB1C930C()
{
  sub_1DB1F1570();
  *(void *)(v0 + 88) = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1C93A0, v2, v1);
}

uint64_t sub_1DB1C93A0()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 120);
  uint64_t v2 = *(void (**)(uint64_t, void))(v0 + 32);
  swift_release();
  v2(v1, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1DB1C9430()
{
  uint64_t v1 = *(void **)(v0 + 80);
  sub_1DB1F1570();
  id v2 = v1;
  *(void *)(v0 + 96) = sub_1DB1F1560();
  uint64_t v4 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1C94D0, v4, v3);
}

uint64_t sub_1DB1C94D0()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = *(void (**)(void, void *))(v0 + 32);
  swift_release();
  v2(0, v1);

  return MEMORY[0x1F4188298](sub_1DB1C9560, 0, 0);
}

uint64_t sub_1DB1C9560()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB1C95D0()
{
  uint64_t v1 = (void *)v0[13];
  id v2 = (void (*)(void, void *))v0[4];
  swift_release();
  v2(0, v1);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DB1C9728(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5, void *a6)
{
  uint64_t v24 = a3;
  int v25 = a5 & 1;
  int v26 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = v17 + v11;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0;
  uint64_t v20 = v24;
  *((void *)v19 + 4) = a2;
  *((void *)v19 + 5) = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v17], v12, v9);
  uint64_t v21 = &v19[v18];
  *uint64_t v21 = v26;
  v21[1] = v25;
  *(void *)&v19[(v18 + 9) & 0xFFFFFFFFFFFFFFF8] = a6;
  swift_bridgeObjectRetain();
  id v22 = a6;
  sub_1DB136A2C((uint64_t)v15, (uint64_t)&unk_1EA905F50, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1DB1C9948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(void *)(v8 + 152) = a6;
  *(void *)(v8 + 160) = v18;
  *(unsigned char *)(v8 + 417) = a8;
  *(unsigned char *)(v8 + 416) = a7;
  *(void *)(v8 + 144) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for TextModel();
  *(void *)(v8 + 176) = v9;
  *(void *)(v8 + 184) = *(void *)(v9 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD60);
  *(void *)(v8 + 200) = swift_task_alloc();
  uint64_t v10 = sub_1DB1EF570();
  *(void *)(v8 + 208) = v10;
  *(void *)(v8 + 216) = *(void *)(v10 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDA8);
  *(void *)(v8 + 232) = v11;
  *(void *)(v8 + 240) = *(void *)(v11 - 8);
  *(void *)(v8 + 248) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDA0);
  *(void *)(v8 + 256) = v12;
  *(void *)(v8 + 264) = *(void *)(v12 - 8);
  *(void *)(v8 + 272) = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDB0);
  *(void *)(v8 + 280) = v13;
  *(void *)(v8 + 288) = *(void *)(v13 - 8);
  *(void *)(v8 + 296) = swift_task_alloc();
  type metadata accessor for Signpost();
  *(void *)(v8 + 304) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v14 = sub_1DB1EF6B0();
  *(void *)(v8 + 320) = v14;
  *(void *)(v8 + 328) = *(void *)(v14 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for VisualTranslationModel(0);
  *(void *)(v8 + 344) = v15;
  *(void *)(v8 + 352) = *(void *)(v15 - 8);
  *(void *)(v8 + 360) = swift_task_alloc();
  *(void *)(v8 + 368) = swift_task_alloc();
  *(void *)(v8 + 376) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1C9D28, 0, 0);
}

uint64_t sub_1DB1C9D28()
{
  uint64_t v98 = v0;
  uint64_t v2 = v0 + 144;
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
LABEL_13:
    *(void *)(v0 + 40) = &type metadata for TranslateFeatures;
    *(void *)(v0 + 48) = sub_1DB109D10();
    *(unsigned char *)(v0 + 16) = 0;
    char v30 = sub_1DB1EF710();
    __swift_destroy_boxed_opaque_existential_0(v2 - 128);
    if (v30)
    {
      if (v3)
      {
        uint64_t v31 = *(void *)(v0 + 352);
        uint64_t v32 = *(void *)(v0 + 144);
        sub_1DB173814(1, 0, *(void *)(v0 + 304));
        type metadata accessor for VisualTranslationBatch();
        uint64_t inited = swift_initStackObject();
        *(void *)(v0 + 384) = inited;
        swift_bridgeObjectRetain();
        uint64_t v34 = MEMORY[0x1E4FBC860];
        *(void *)(inited + 16) = sub_1DB0EE80C(MEMORY[0x1E4FBC860]);
        *(void *)(inited + 24) = sub_1DB0EEA30(v34);
        unint64_t v35 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        uint64_t v36 = v32 + v35;
        uint64_t v37 = *(void *)(v31 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1DB1AB790(v36, inited);
          v36 += v37;
          --v3;
        }
        while (v3);
        swift_bridgeObjectRelease_n();
        uint64_t v38 = sub_1DB1ABE84();
        uint64_t v39 = *(void *)(v38 + 16);
        if (v39)
        {
          uint64_t v40 = v38 + v35;
          uint64_t v41 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 288) + 8);
          do
          {
            uint64_t v42 = *(void *)(v0 + 296);
            uint64_t v43 = *(void *)(v0 + 280);
            sub_1DB1CE3A0(v40, *(void *)(v0 + 368));
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
            sub_1DB1F1610();
            (*v41)(v42, v43);
            v40 += v37;
            --v39;
          }
          while (v39);
        }
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void *)(v0 + 240);
        uint64_t v44 = *(void *)(v0 + 248);
        uint64_t v46 = *(void *)(v0 + 224);
        uint64_t v95 = *(void *)(v0 + 232);
        uint64_t v47 = *(void *)(v0 + 216);
        uint64_t v93 = *(void *)(v0 + 208);
        long long v48 = *(void **)(v0 + 160);
        int v91 = *(unsigned __int8 *)(v0 + 416);
        unsigned __int8 v89 = *(unsigned char *)(v0 + 417) & 1;
        size_t v49 = sub_1DB1AC2C0();
        *(void *)(v0 + 392) = v49;
        id v50 = objc_msgSend(v48, sel_logIdentifier);
        sub_1DB1EF550();

        id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F423A8]), sel_init);
        uint64_t v52 = (void *)sub_1DB1EF530();
        id v53 = objc_msgSend(v51, sel_startTranslationSessionWithSELFLoggingInvocationId_, v52);

        v97[0] = v89;
        sub_1DB18CE20(v49, v91, (uint64_t)v53, v97, v44);

        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v93);
        sub_1DB1F15C0();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v95);
        *(void *)(v0 + 400) = MEMORY[0x1E4FBC860];
        double v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 408) = v54;
        *double v54 = v0;
        v54[1] = sub_1DB1CA954;
        uint64_t v55 = *(void *)(v0 + 256);
        uint64_t v56 = *(void *)(v0 + 200);
        return MEMORY[0x1F4187D58](v56, 0, 0, v55);
      }
      if (qword_1EBA4E578 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_1DB1EF810();
      __swift_project_value_buffer(v64, (uint64_t)qword_1EBA4F408);
      uint64_t v65 = sub_1DB1EF7F0();
      os_log_type_t v66 = sub_1DB1F1710();
      if (os_log_type_enabled(v65, v66))
      {
        double v67 = (uint8_t *)swift_slowAlloc();
        double v68 = (void *)swift_slowAlloc();
        *(_DWORD *)double v67 = 138412290;
        sub_1DB184784();
        long long v69 = (void *)swift_allocError();
        *long long v70 = 0;
        uint64_t v71 = sub_1DB1EF410();

        *(void *)(v0 + 120) = v71;
        sub_1DB1F1910();
        *double v68 = v71;
        _os_log_impl(&dword_1DB0DC000, v65, v66, "Failed to translate because models are empty: %@", v67, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v68, -1, -1);
        MEMORY[0x1E018CA60](v67, -1, -1);
      }

      sub_1DB184784();
      swift_allocError();
      unsigned char *v72 = 0;
    }
    else
    {
      if (qword_1EBA4E578 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1DB1EF810();
      __swift_project_value_buffer(v57, (uint64_t)qword_1EBA4F408);
      id v58 = sub_1DB1EF7F0();
      os_log_type_t v59 = sub_1DB1F1710();
      if (os_log_type_enabled(v58, v59))
      {
        CGFloat v60 = (uint8_t *)swift_slowAlloc();
        double v61 = (void *)swift_slowAlloc();
        *(_DWORD *)CGFloat v60 = 138412290;
        sub_1DB1CEA40();
        CGFloat v62 = (void *)swift_allocError();
        uint64_t v63 = sub_1DB1EF410();

        *(void *)(v0 + 88) = v63;
        sub_1DB1F1910();
        *double v61 = v63;
        _os_log_impl(&dword_1DB0DC000, v58, v59, "Failed to translate because visual translation is disabled: %@", v60, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v61, -1, -1);
        MEMORY[0x1E018CA60](v60, -1, -1);
      }

      sub_1DB1CEA40();
      swift_allocError();
    }
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_39;
  }
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v85 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v86 = (void (**)(void, void, void))(v6 + 32);
  uint64_t v94 = (void (**)(void, uint64_t, uint64_t, void))(v6 + 56);
  uint64_t v96 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  uint64_t v11 = v3;
  uint64_t v90 = v7;
  uint64_t v92 = v5;
  uint64_t v87 = v10;
  uint64_t v88 = v8;
  while (1)
  {
    uint64_t v13 = *(void *)(v0 + 376);
    sub_1DB1CE3A0(v9, v13);
    uint64_t v14 = *(void *)(v13 + *(int *)(v5 + 28));
    uint64_t v16 = *(void *)(v0 + 312);
    uint64_t v15 = *(void *)(v0 + 320);
    if (*(void *)(v14 + 16)) {
      break;
    }
    (*v94)(*(void *)(v0 + 312), 1, 1, *(void *)(v0 + 320));
LABEL_4:
    uint64_t v12 = *(void *)(v0 + 376);
    sub_1DB0E8BD4(*(void *)(v0 + 312), &qword_1EBA4E570);
    sub_1DB1CEB40(v12, type metadata accessor for VisualTranslationModel);
LABEL_5:
    v9 += v96;
    if (!--v11)
    {
      uint64_t v2 = v0 + 144;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  sub_1DB11FF38(v14+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(int *)(v8 + 28), *(void *)(v0 + 312));
  if ((*v10)(v16, 1, v15) == 1) {
    goto LABEL_4;
  }
  (*v86)(*(void *)(v0 + 336), *(void *)(v0 + 312), *(void *)(v0 + 320));
  uint64_t v17 = self;
  uint64_t v18 = (void *)sub_1DB1EF5D0();
  id v19 = objc_msgSend(v18, sel_languageIdentifier);

  sub_1DB1F1290();
  uint64_t v20 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v17, sel_baseLanguageFromLanguage_, v20);

  uint64_t v22 = sub_1DB1F1290();
  uint64_t v24 = v23;

  if (qword_1EBA4E290 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)(v0 + 376);
  uint64_t v26 = *(void *)(v0 + 336);
  uint64_t v27 = *(void *)(v0 + 320);
  uint64_t v28 = qword_1EBA4F3E8;
  swift_bridgeObjectRetain();
  char v29 = sub_1DB15AFBC(v22, v24, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*v85)(v26, v27);
  sub_1DB1CEB40(v25, type metadata accessor for VisualTranslationModel);
  uint64_t v7 = v90;
  uint64_t v5 = v92;
  uint64_t v10 = v87;
  uint64_t v8 = v88;
  if (v29) {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v74 = sub_1DB1EF810();
  __swift_project_value_buffer(v74, (uint64_t)qword_1EBA4F408);
  uint64_t v75 = sub_1DB1EF7F0();
  os_log_type_t v76 = sub_1DB1F1710();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    int v78 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v77 = 138412290;
    sub_1DB1CEA94();
    uint64_t v79 = (void *)swift_allocError();
    *uint64_t v80 = 1;
    uint64_t v81 = sub_1DB1EF410();

    *(void *)(v0 + 136) = v81;
    sub_1DB1F1910();
    *int v78 = v81;
    _os_log_impl(&dword_1DB0DC000, v75, v76, "Failed to translate because OCR for source locale is unsupported: %@", v77, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v78, -1, -1);
    MEMORY[0x1E018CA60](v77, -1, -1);
  }

  sub_1DB1CEA94();
  uint64_t v82 = swift_allocError();
  *unint64_t v83 = 1;
  *(void *)(v0 + 128) = v82;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  sub_1DB1F1620();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
LABEL_39:
  return v73();
}

uint64_t sub_1DB1CA954()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1CAA50, 0, 0);
}

uint64_t sub_1DB1CAA50()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[23] + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = v0[50];
    (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
    sub_1DB173E68();
    if (*(void *)(v3 + 16))
    {
      uint64_t v4 = *(void **)(v0[50] + 32);
      uint64_t v5 = *(void *)(v0[49] + 16);
      id v6 = v4;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(v3 + 16);
      swift_bridgeObjectRelease();
      if (v5 == v7)
      {
        if (qword_1EBA4E578 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_1DB1EF810();
        __swift_project_value_buffer(v8, (uint64_t)qword_1EBA4F408);
        id v9 = v4;
        uint64_t v10 = sub_1DB1EF7F0();
        os_log_type_t v11 = sub_1DB1F1710();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          uint64_t v13 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v12 = 138412290;
          uint64_t v14 = sub_1DB1EF410();
          v0[14] = v14;
          sub_1DB1F1910();
          *uint64_t v13 = v14;

          _os_log_impl(&dword_1DB0DC000, v10, v11, "Failed to translate: %@", v12, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
          swift_arrayDestroy();
          MEMORY[0x1E018CA60](v13, -1, -1);
          MEMORY[0x1E018CA60](v12, -1, -1);
        }
        else
        {
        }
        uint64_t v36 = v0[38];

        v0[13] = v4;
        id v37 = v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
        sub_1DB1F1620();
        swift_release();

        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v36 = v0[38];
    v0[12] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
    sub_1DB1F1620();
    swift_release();
LABEL_25:
    sub_1DB1CEB40(v36, (uint64_t (*)(void))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v38 = (uint64_t (*)(void))v0[1];
    return v38();
  }
  uint64_t v15 = v0[24];
  sub_1DB0F13EC(v1, v15, (uint64_t (*)(void))type metadata accessor for TextModel);
  uint64_t v16 = *(void **)(v15 + *(int *)(v2 + 44));
  uint64_t v17 = (void *)v0[50];
  if (v16)
  {
    id v18 = v16;
    id v19 = v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = (void *)v0[50];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_1DB188CA8(0, v17[2] + 1, 1, (void *)v0[50]);
    }
    unint64_t v22 = v17[2];
    unint64_t v21 = v17[3];
    if (v22 >= v21 >> 1) {
      uint64_t v17 = sub_1DB188CA8((void *)(v21 > 1), v22 + 1, 1, v17);
    }
    v17[2] = v22 + 1;
    v17[v22 + 4] = v16;
  }
  uint64_t v23 = v0[43];
  uint64_t v24 = v0[44];
  uint64_t v25 = v0[21];
  sub_1DB1AC428(v0[24], v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) == 1)
  {
    uint64_t v26 = v0[21];
    sub_1DB1CEB40(v0[24], (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB0E8BD4(v26, &qword_1EBA4E458);
  }
  else
  {
    uint64_t v27 = v0[45];
    uint64_t v28 = v0[46];
    uint64_t v30 = v0[36];
    uint64_t v29 = v0[37];
    uint64_t v31 = v0[35];
    uint64_t v32 = v0[24];
    sub_1DB0F13EC(v0[21], v27, type metadata accessor for VisualTranslationModel);
    sub_1DB1CE3A0(v27, v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
    sub_1DB1F1610();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    sub_1DB1CEB40(v27, type metadata accessor for VisualTranslationModel);
    sub_1DB1CEB40(v32, (uint64_t (*)(void))type metadata accessor for TextModel);
  }
  v0[50] = v17;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[51] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1DB1CA954;
  uint64_t v34 = v0[32];
  uint64_t v35 = v0[25];
  return MEMORY[0x1F4187D58](v35, 0, 0, v34);
}

uint64_t static VisualTranslationService.translate(models:strictLocales:taskHint:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DB1EF570();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *a3;
  sub_1DB1EF560();
  static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(a1, a2, &v14, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  v17[1] = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDB8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a3;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F423A8]), sel_init);
  uint64_t v15 = (void *)sub_1DB1EF530();
  id v16 = objc_msgSend(v14, sel_startTranslationSessionWithSELFLoggingInvocationId_, v15);

  v17[4] = a1;
  v17[5] = v5;
  char v18 = a2;
  char v19 = v13;
  id v20 = v16;
  type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBD120], v9);
  sub_1DB1F1650();
}

uint64_t static VisualTranslationService.translate(_:strictLocales:taskHint:)(uint64_t a1, char a2, unsigned char *a3)
{
  *(unsigned char *)(v4 + 152) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  *(void *)(v4 + 32) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for VisualTranslationModel(0);
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = *(void *)(v6 - 8);
  *(void *)(v4 + 56) = swift_task_alloc();
  *(void *)(v4 + 64) = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD0);
  *(void *)(v4 + 72) = v7;
  *(void *)(v4 + 80) = *(void *)(v7 - 8);
  *(void *)(v4 + 88) = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD8);
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = *(void *)(v8 - 8);
  *(void *)(v4 + 112) = swift_task_alloc();
  *(void *)(v4 + 120) = swift_task_alloc();
  *(unsigned char *)(v4 + 153) = *a3;
  return MEMORY[0x1F4188298](sub_1DB1CB4D8, 0, 0);
}

uint64_t sub_1DB1CB4D8()
{
  uint64_t v13 = v0;
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  char v5 = *(unsigned char *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 16);
  char v12 = *(unsigned char *)(v0 + 153);
  static VisualTranslationService.translate(models:strictLocales:taskHint:)(v6, v5, &v12, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_1DB0E3C44(&qword_1EBA4DDE0, &qword_1EBA4DDD8);
  sub_1DB1F1600();
  *(void *)(v0 + 128) = MEMORY[0x1E4FBC860];
  uint64_t v7 = sub_1DB0E3C44(&qword_1EBA4DDC8, &qword_1EBA4DDD0);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1DB1CB64C;
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 32);
  return MEMORY[0x1F4187C78](v10, v9, v7);
}

uint64_t sub_1DB1CB64C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[10];
    uint64_t v3 = v2[11];
    uint64_t v5 = v2[9];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1DB1CBA54;
  }
  else
  {
    uint64_t v6 = sub_1DB1CB790;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1DB1CB790()
{
  uint64_t v1 = v0[4];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[6] + 48))(v1, 1, v0[5]) == 1)
  {
    uint64_t v2 = v0[15];
    uint64_t v3 = v0[12];
    uint64_t v4 = v0[13];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    sub_1DB0E8BD4(v1, &qword_1EBA4E458);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v6 = v0[16];
    return v5(v6);
  }
  else
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    sub_1DB0F13EC(v1, v8, type metadata accessor for VisualTranslationModel);
    sub_1DB1CE3A0(v8, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = v0[16];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v11 = sub_1DB188C74(0, *(void *)(v11 + 16) + 1, 1, v0[16]);
    }
    unint64_t v13 = *(void *)(v11 + 16);
    unint64_t v12 = *(void *)(v11 + 24);
    if (v13 >= v12 >> 1) {
      unint64_t v11 = sub_1DB188C74(v12 > 1, v13 + 1, 1, v11);
    }
    uint64_t v14 = v0[7];
    uint64_t v15 = v0[8];
    uint64_t v16 = v0[6];
    *(void *)(v11 + 16) = v13 + 1;
    sub_1DB0F13EC(v14, v11+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v13, type metadata accessor for VisualTranslationModel);
    sub_1DB1CEB40(v15, type metadata accessor for VisualTranslationModel);
    v0[16] = v11;
    uint64_t v17 = sub_1DB0E3C44(&qword_1EBA4DDC8, &qword_1EBA4DDD0);
    char v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    void *v18 = v0;
    v18[1] = sub_1DB1CB64C;
    uint64_t v19 = v0[9];
    uint64_t v20 = v0[4];
    return MEMORY[0x1F4187C78](v20, v19, v17);
  }
}

uint64_t sub_1DB1CBA54()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t static VisualTranslationService.translate(_:sourceLocale:targetLocale:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v27[0] = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v27 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v16 - 8);
  char v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  sub_1DB11FF38(a2, (uint64_t)v15);
  sub_1DB11FF38(a3, (uint64_t)v12);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = (v20 + 40) & ~v20;
  uint64_t v22 = (v11 + v20 + v21) & ~v20;
  unint64_t v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = 0;
  v24[3] = 0;
  v24[4] = a1;
  sub_1DB1CE5AC((uint64_t)v15, (uint64_t)v24 + v21);
  sub_1DB1CE5AC((uint64_t)v12, (uint64_t)v24 + v22);
  uint64_t v25 = (void *)((char *)v24 + v23);
  *uint64_t v25 = v27[0];
  v25[1] = a5;
  *(void *)((char *)v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8)) = v27[1];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB131F20((uint64_t)v18, (uint64_t)&unk_1EA905F40, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_1DB1CBD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a8;
  v8[9] = v13;
  v8[6] = a6;
  v8[7] = a7;
  _OWORD v8[4] = a4;
  v8[5] = a5;
  uint64_t v9 = sub_1DB1EF570();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for VisualTranslationModel(0);
  v8[13] = v10;
  v8[14] = *(void *)(v10 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1CBE8C, 0, 0);
}

uint64_t sub_1DB1CBE8C()
{
  uint64_t v1 = _s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(*(void *)(v0 + 32), 1, *(void *)(v0 + 40), *(void *)(v0 + 48));
  *(void *)(v0 + 136) = v1;
  *(unsigned char *)(v0 + 192) = 1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DB1CBF54;
  return static VisualTranslationService.translate(_:strictLocales:taskHint:)((uint64_t)v1, 0, (unsigned char *)(v0 + 192));
}

uint64_t sub_1DB1CBF54(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1DB1CC628;
  }
  else
  {
    uint64_t v4 = sub_1DB1CC070;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1DB1CC070()
{
  Class super_class = v0[9].super_class;
  uint64_t v2 = *((void *)super_class + 2);
  if (v2)
  {
    receiver = v0[7].receiver;
    Class v57 = v0[6].super_class;
    Class v4 = v0[5].super_class;
    uint64_t v5 = (uint64_t)super_class
       + ((*((unsigned __int8 *)receiver + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)receiver + 80));
    id v58 = (void (**)(uint64_t, uint64_t, id))((char *)v4 + 16);
    uint64_t v56 = (void (**)(id, id))((char *)v4 + 8);
    Class v54 = v4;
    uint64_t v55 = receiver[9];
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v59 = v2;
      uint64_t v11 = (uint64_t)v0[7].super_class;
      uint64_t v12 = (uint64_t)v0[8].receiver;
      uint64_t v13 = (uint64_t)v0[6].receiver;
      id v14 = v0[5].receiver;
      sub_1DB1CE3A0(v5, v12);
      uint64_t v15 = *v58;
      (*v58)(v13, v12, v14);
      sub_1DB1CE3A0(v12, v11);
      uint64_t v16 = (objc_class *)type metadata accessor for VisualTranslationResult(0);
      uint64_t v17 = (char *)objc_allocWithZone(v16);
      v15((uint64_t)&v17[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid], v11, v14);
      uint64_t v18 = *(void *)(v11 + *((int *)v57 + 7));
      uint64_t v19 = v17;
      uint64_t v20 = Array<A>.targetParagraph.getter(v18);
      uint64_t v21 = (uint64_t *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string];
      *uint64_t v21 = v20;
      v21[1] = v22;
      v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough] = sub_1DB1B7CCC() & 1;
      unint64_t v23 = (_OWORD *)(v11 + *((int *)v57 + 5));
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft] = v23[1];
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight] = v23[2];
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft] = v23[3];
      *(_OWORD *)&v19[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight] = v23[4];

      v0[1].receiver = v19;
      v0[1].Class super_class = v16;
      id v24 = objc_msgSendSuper2(v0 + 1, sel_init);
      sub_1DB1CEB40(v11, type metadata accessor for VisualTranslationModel);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v28 = sub_1DB1A8DE8(v13);
      uint64_t v29 = v6[2];
      BOOL v30 = (v26 & 1) == 0;
      uint64_t v31 = (uint64_t (*)())(v29 + v30);
      if (__OFADD__(v29, v30))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return MEMORY[0x1F4188298](v31, v26, v27);
      }
      char v32 = v26;
      if (v6[3] >= (uint64_t)v31)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v26) {
            goto LABEL_3;
          }
        }
        else
        {
          sub_1DB0FA020();
          if (v32) {
            goto LABEL_3;
          }
        }
      }
      else
      {
        uint64_t v33 = (uint64_t)v0[6].receiver;
        sub_1DB0F8C38((uint64_t)v31, isUniquelyReferenced_nonNull_native);
        unint64_t v34 = sub_1DB1A8DE8(v33);
        if ((v32 & 1) != (v35 & 1))
        {
          return sub_1DB1F1E00();
        }
        unint64_t v28 = v34;
        if (v32)
        {
LABEL_3:
          uint64_t v7 = v6[7];

          *(void *)(v7 + 8 * v28) = v24;
          goto LABEL_4;
        }
      }
      id v36 = v0[6].receiver;
      id v37 = v0[5].receiver;
      v6[(v28 >> 6) + 8] |= 1 << v28;
      uint64_t v31 = (uint64_t (*)())((uint64_t (*)(unint64_t, id, id))v15)(v6[6] + *((void *)v54 + 9) * v28, v36, v37);
      *(void *)(v6[7] + 8 * v28) = v24;
      uint64_t v38 = v6[2];
      BOOL v39 = __OFADD__(v38, 1);
      uint64_t v40 = v38 + 1;
      if (v39) {
        goto LABEL_34;
      }
      v6[2] = v40;
LABEL_4:
      uint64_t v8 = (uint64_t)v0[8].receiver;
      id v9 = v0[6].receiver;
      id v10 = v0[5].receiver;
      swift_bridgeObjectRelease();
      (*v56)(v9, v10);
      sub_1DB1CEB40(v8, type metadata accessor for VisualTranslationModel);
      v5 += v55;
      uint64_t v2 = v59 - 1;
      if (v59 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
  }
  uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
  Class v41 = v0[8].super_class;
  swift_bridgeObjectRelease();
  uint64_t v42 = (objc_class *)MEMORY[0x1E4FBC860];
  CGFloat v60 = (objc_class *)MEMORY[0x1E4FBC860];
  uint64_t v43 = *((void *)v41 + 2);
  if (v43)
  {
    uint64_t v44 = v0[7].receiver;
    unint64_t v45 = (unint64_t)v0[8].super_class
        + ((*((unsigned __int8 *)v44 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v44 + 80));
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v43; ++i)
    {
      if (v6[2])
      {
        unint64_t v47 = sub_1DB1A8DE8(v45 + v44[9] * i);
        if (v48)
        {
          id v49 = *(id *)(v6[7] + 8 * v47);
          MEMORY[0x1E018B470]();
          if (*(void *)(((unint64_t)v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v60 & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
            sub_1DB1F14D0();
          sub_1DB1F14F0();
          sub_1DB1F14C0();
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v42 = v60;
  }
  v0[10].Class super_class = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DB1F1570();
  v0[11].receiver = (id)sub_1DB1F1560();
  uint64_t v50 = sub_1DB1F1510();
  uint64_t v52 = v51;
  uint64_t v31 = sub_1DB1CC588;
  uint64_t v26 = v50;
  uint64_t v27 = v52;
  return MEMORY[0x1F4188298](v31, v26, v27);
}

uint64_t sub_1DB1CC588()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void (*)(uint64_t, void))v0[7];
  swift_release();
  v2(v1, 0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DB1CC628()
{
  uint64_t v1 = *(void **)(v0 + 160);
  sub_1DB1F1570();
  id v2 = v1;
  *(void *)(v0 + 184) = sub_1DB1F1560();
  uint64_t v4 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1CC6C8, v4, v3);
}

uint64_t sub_1DB1CC6C8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = *(void (**)(void, void *))(v0 + 56);
  swift_release();
  v2(MEMORY[0x1E4FBC860], v1);

  return MEMORY[0x1F4188298](sub_1DB1CC75C, 0, 0);
}

uint64_t sub_1DB1CC75C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1DB1CCA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for VisualTranslationResult(0);
  uint64_t v5 = (void *)sub_1DB1F1480();
  if (a2) {
    uint64_t v6 = sub_1DB1EF410();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

id VisualTranslationService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id VisualTranslationService.init()()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id VisualTranslationService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DB1CCBC8@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = sub_1DB1EF8B0();
  *a1 = result;
  return result;
}

uint64_t sub_1DB1CCC08(uint64_t a1)
{
  v1[28] = a1;
  v1[29] = type metadata accessor for LocalePair();
  v1[30] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for VisualTranslationModel(0);
  v1[31] = v2;
  v1[32] = *(void *)(v2 - 8);
  v1[33] = swift_task_alloc();
  type metadata accessor for Signpost();
  v1[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  v1[35] = swift_task_alloc();
  uint64_t v3 = sub_1DB1EF6B0();
  v1[36] = v3;
  v1[37] = *(void *)(v3 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1CCDE4, 0, 0);
}

uint64_t sub_1DB1CCDE4()
{
  *(void *)(v0 + 40) = &type metadata for TranslateFeatures;
  unint64_t v1 = sub_1DB109D10();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_1DB1EF710();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) == 0)
  {
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1DB1EF810();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBA4F408);
    uint64_t v18 = sub_1DB1EF7F0();
    os_log_type_t v19 = sub_1DB1F1710();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      sub_1DB1CEA40();
      uint64_t v22 = (void *)swift_allocError();
      uint64_t v23 = sub_1DB1EF410();

      *(void *)(v0 + 160) = v23;
      sub_1DB1F1910();
      *uint64_t v21 = v23;
      _os_log_impl(&dword_1DB0DC000, v18, v19, "Visual isTranslatable: NO; reason: visualTranslation is disabled: %@",
        v20,
        0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v21, -1, -1);
      MEMORY[0x1E018CA60](v20, -1, -1);
    }

    sub_1DB1CEA40();
    swift_allocError();
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v0 + 344) = v4;
  if (!v4)
  {
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1DB1EF810();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EBA4F408);
    uint64_t v25 = sub_1DB1EF7F0();
    os_log_type_t v26 = sub_1DB1F1710();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      unint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138412290;
      sub_1DB184784();
      uint64_t v29 = (void *)swift_allocError();
      *BOOL v30 = 0;
      uint64_t v31 = sub_1DB1EF410();

      *(void *)(v0 + 176) = v31;
      sub_1DB1F1910();
      *unint64_t v28 = v31;
      _os_log_impl(&dword_1DB0DC000, v25, v26, "Visual isTranslatable: NO; reason: the request was empty: %@",
        v27,
        0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v28, -1, -1);
      MEMORY[0x1E018CA60](v27, -1, -1);
    }

    sub_1DB184784();
    swift_allocError();
    *char v32 = 0;
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 296);
  id v7 = *(char **)(v0 + 280);
  sub_1DB1BED10(v3, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) == 1)
  {
    sub_1DB0E8BD4(*(void *)(v0 + 280), &qword_1EBA4E570);
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1DB1EF810();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBA4F408);
    id v9 = sub_1DB1EF7F0();
    os_log_type_t v10 = sub_1DB1F1710();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      sub_1DB184784();
      uint64_t v13 = (void *)swift_allocError();
      *id v14 = 7;
      uint64_t v15 = sub_1DB1EF410();

      *(void *)(v0 + 168) = v15;
      sub_1DB1F1910();
      *uint64_t v12 = v15;
      _os_log_impl(&dword_1DB0DC000, v9, v10, "Visual isTranslatable: NO; there's no targetLocale set: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v12, -1, -1);
      MEMORY[0x1E018CA60](v11, -1, -1);
    }

    sub_1DB184784();
    swift_allocError();
    *uint64_t v16 = 7;
LABEL_19:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33(0);
  }
  uint64_t v35 = *(void *)(v0 + 272);
  uint64_t v36 = *(void *)(v0 + 248);
  uint64_t v37 = *(void *)(v0 + 256);
  uint64_t v38 = *(void *)(v0 + 224);
  (*(void (**)(void, void, void))(*(void *)(v0 + 296) + 32))(*(void *)(v0 + 336), *(void *)(v0 + 280), *(void *)(v0 + 288));
  sub_1DB173814(0, 0, v35);
  uint64_t v47 = MEMORY[0x1E4FBC860];
  uint64_t v39 = v38 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  uint64_t v40 = *(void *)(v37 + 72);
  swift_bridgeObjectRetain();
  do
  {
    uint64_t v41 = *(void *)(v0 + 264);
    sub_1DB1CE3A0(v39, v41);
    uint64_t v42 = *(void *)(v41 + *(int *)(v36 + 28));
    swift_bridgeObjectRetain();
    sub_1DB1CEB40(v41, type metadata accessor for VisualTranslationModel);
    sub_1DB12F9E4(v42);
    v39 += v40;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 352) = v47;
  uint64_t v43 = swift_task_alloc();
  *(void *)(v0 + 360) = v43;
  *(void *)(v43 + 16) = v47;
  uint64_t v44 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v44;
  *uint64_t v44 = v0;
  v44[1] = sub_1DB1CD570;
  uint64_t v45 = *(void *)(v0 + 328);
  uint64_t v46 = *(void *)(v0 + 288);
  return MEMORY[0x1F4188160](v45, 0, 0, 0x796669746E656469, 0xEC000000293A5F28, sub_1DB184A6C, v43, v46);
}

uint64_t sub_1DB1CD570()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_1DB1CDFD8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    char v2 = sub_1DB1CD694;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB1CD694()
{
  uint64_t v82 = v0;
  uint64_t v1 = self;
  char v2 = (void *)sub_1DB1EF5D0();
  id v3 = objc_msgSend(v2, sel_languageIdentifier);

  sub_1DB1F1290();
  uint64_t v4 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v1, sel_baseLanguageFromLanguage_, v4);

  uint64_t v6 = sub_1DB1F1290();
  uint64_t v8 = v7;

  if (qword_1EBA4E290 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EBA4F3E8;
  swift_bridgeObjectRetain();
  char v10 = sub_1DB15AFBC(v6, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 336);
    uint64_t v12 = *(void *)(v0 + 288);
    uint64_t v14 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 240);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 296) + 16);
    v15(v13, *(void *)(v0 + 328), v12);
    v15(v13 + *(int *)(v14 + 20), v11, v12);
    int v79 = _s13TranslationUI22LanguagesStatusServiceO25languagePairIsPassthroughySbAA06LocaleG0VFZ_0(v13) ^ 1;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 328);
    uint64_t v16 = *(void *)(v0 + 336);
    uint64_t v19 = *(void *)(v0 + 312);
    uint64_t v18 = *(void *)(v0 + 320);
    uint64_t v20 = *(void *)(v0 + 288);
    uint64_t v21 = sub_1DB1EF810();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBA4F408);
    v15(v18, v17, v20);
    v15(v19, v16, v20);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1DB1EF7F0();
    os_log_type_t v23 = sub_1DB1F16F0();
    uint64_t v77 = v22;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = *(void *)(v0 + 344);
      uint64_t v25 = *(void *)(v0 + 320);
      uint64_t v75 = *(void *)(v0 + 328);
      os_log_type_t type = v23;
      uint64_t v71 = *(void *)(v0 + 312);
      uint64_t v26 = *(void *)(v0 + 288);
      uint64_t v76 = *(void *)(v0 + 296);
      uint64_t v74 = *(void *)(v0 + 240);
      uint64_t v27 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v81 = v72;
      *(_DWORD *)uint64_t v27 = 67240962;
      *(_DWORD *)(v0 + 384) = v79 & 1;
      sub_1DB1F1910();
      *(_WORD *)(v27 + 8) = 2050;
      *(void *)(v0 + 152) = v24;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 18) = 2082;
      *(void *)(v0 + 56) = sub_1DB1EF590();
      *(void *)(v0 + 64) = v28;
      *(void *)(v0 + 72) = 45;
      *(void *)(v0 + 80) = 0xE100000000000000;
      *(void *)(v0 + 136) = 95;
      *(void *)(v0 + 144) = 0xE100000000000000;
      sub_1DB0F0708();
      uint64_t v29 = sub_1DB1F1950();
      unint64_t v31 = v30;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 184) = sub_1DB11F638(v29, v31, &v81);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      char v32 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v32(v25, v26);
      *(_WORD *)(v27 + 28) = 2082;
      *(void *)(v0 + 120) = sub_1DB1EF590();
      *(void *)(v0 + 128) = v33;
      *(void *)(v0 + 104) = 45;
      *(void *)(v0 + 112) = 0xE100000000000000;
      *(void *)(v0 + 88) = 95;
      *(void *)(v0 + 96) = 0xE100000000000000;
      uint64_t v34 = sub_1DB1F1950();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 216) = sub_1DB11F638(v34, v36, &v81);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      v32(v71, v26);
      _os_log_impl(&dword_1DB0DC000, v77, type, "Visual isTranslatable: %{BOOL,public}d samples: %{public}ld source: %{public}s target: %{public}s", (uint8_t *)v27, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v72, -1, -1);
      MEMORY[0x1E018CA60](v27, -1, -1);

      sub_1DB1CEB40(v74, (uint64_t (*)(void))type metadata accessor for LocalePair);
      v32(v75, v26);
    }
    else
    {
      uint64_t v57 = *(void *)(v0 + 320);
      uint64_t v58 = *(void *)(v0 + 328);
      uint64_t v59 = *(void *)(v0 + 312);
      uint64_t v61 = *(void *)(v0 + 288);
      uint64_t v60 = *(void *)(v0 + 296);
      uint64_t v62 = *(void *)(v0 + 240);

      uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v63(v59, v61);
      v63(v57, v61);
      swift_bridgeObjectRelease();
      sub_1DB1CEB40(v62, (uint64_t (*)(void))type metadata accessor for LocalePair);
      v63(v58, v61);
    }
  }
  else
  {
    uint64_t v37 = qword_1EBA4E578;
    swift_bridgeObjectRetain();
    if (v37 != -1) {
      swift_once();
    }
    uint64_t v38 = *(void *)(v0 + 328);
    uint64_t v40 = *(void *)(v0 + 296);
    uint64_t v39 = *(void *)(v0 + 304);
    uint64_t v41 = *(void *)(v0 + 288);
    uint64_t v42 = sub_1DB1EF810();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBA4F408);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v38, v41);
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1DB1EF7F0();
    os_log_type_t v44 = sub_1DB1F16F0();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v46 = *(void *)(v0 + 328);
    uint64_t v48 = *(void *)(v0 + 296);
    uint64_t v47 = *(void *)(v0 + 304);
    uint64_t v49 = *(void *)(v0 + 288);
    if (v45)
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136446466;
      uint64_t v80 = v46;
      uint64_t v81 = v78;
      sub_1DB1CEAE8();
      uint64_t v51 = sub_1DB1F1D80();
      *(void *)(v0 + 200) = sub_1DB11F638(v51, v52, &v81);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      id v53 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v53(v47, v49);
      *(_WORD *)(v50 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1DB1F1690();
      unint64_t v56 = v55;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 192) = sub_1DB11F638(v54, v56, &v81);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DB0DC000, v43, v44, "Visual isTranslatable: NO; locale %{public}s not supported by VK OCR set %{public}s",
        (uint8_t *)v50,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v78, -1, -1);
      MEMORY[0x1E018CA60](v50, -1, -1);

      v53(v80, v49);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v64(v47, v49);
      v64(v46, v49);
    }
    LOBYTE(v79) = 0;
  }
  uint64_t v65 = *(void *)(v0 + 336);
  uint64_t v66 = *(void *)(v0 + 296);
  uint64_t v67 = *(void *)(v0 + 288);
  uint64_t v68 = *(void *)(v0 + 272);
  sub_1DB173E68();
  sub_1DB1CEB40(v68, (uint64_t (*)(void))type metadata accessor for Signpost);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v69 = *(uint64_t (**)(void))(v0 + 8);
  return v69(v79 & 1);
}

uint64_t sub_1DB1CDFD8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = sub_1DB1EF810();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBA4F408);
  id v3 = v1;
  uint64_t v4 = sub_1DB1EF7F0();
  os_log_type_t v5 = sub_1DB1F1710();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[47];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    uint64_t v10 = sub_1DB1EF410();
    v0[26] = v10;
    sub_1DB1F1910();
    *uint64_t v9 = v10;

    _os_log_impl(&dword_1DB0DC000, v4, v5, "Visual isTranslatable: NO; not offering translation: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v9, -1, -1);
    MEMORY[0x1E018CA60](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = v0[42];
  uint64_t v12 = v0[37];
  uint64_t v13 = v0[36];
  uint64_t v14 = v0[34];
  sub_1DB173E68();
  sub_1DB1CEB40(v14, (uint64_t (*)(void))type metadata accessor for Signpost);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15(0);
}

uint64_t sub_1DB1CE270()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB1CE2B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1DB1036D0;
  return sub_1DB1C8D68(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DB1CE38C(uint64_t a1)
{
  return sub_1DB1C9728(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned char *)(v1 + 33), *(void **)(v1 + 40));
}

uint64_t sub_1DB1CE3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1CE404()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = (*(void *)(v1 + 64) + v2 + v3) & ~v2;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (!v8(v0 + v4, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v4, v6);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB1CE5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1CE614(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = (v7 + v5 + v6) & ~v5;
  unint64_t v9 = (v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v8;
  uint64_t v15 = *(void *)((char *)v1 + v9);
  uint64_t v16 = *(void *)((char *)v1 + v9 + 8);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_1DB103C1C;
  return sub_1DB1CBD50(a1, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t type metadata accessor for VisualTranslationService()
{
  return self;
}

uint64_t sub_1DB1CE7A8()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DB1CE7E0(uint64_t a1, uint64_t a2)
{
  sub_1DB1CCA48(a1, a2, *(void *)(v2 + 16));
}

void sub_1DB1CE7E8(char a1, uint64_t a2)
{
  sub_1DB1D43C0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1DB1CE7F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DB1CE8E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v6);
  char v13 = *((unsigned char *)v1 + v6 + 1);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_1DB1036D0;
  return sub_1DB1C9948(a1, v7, v8, v9, v10, v11, v12, v13);
}

unint64_t sub_1DB1CEA40()
{
  unint64_t result = qword_1EA905F58;
  if (!qword_1EA905F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA905F58);
  }
  return result;
}

unint64_t sub_1DB1CEA94()
{
  unint64_t result = qword_1EBA4E2A0;
  if (!qword_1EBA4E2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4E2A0);
  }
  return result;
}

unint64_t sub_1DB1CEAE8()
{
  unint64_t result = qword_1EA904868;
  if (!qword_1EA904868)
  {
    sub_1DB1EF6B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904868);
  }
  return result;
}

uint64_t sub_1DB1CEB40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB1CEBA4()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t VisualTranslationStream.translate(models:taskHint:)(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1DB1EF570();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(a2) = *a2;
  sub_1DB1EF560();
  uint64_t v15 = v2;
  uint64_t v16 = a1;
  char v17 = (char)a2;
  uint64_t v18 = v12;
  type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBD120], v5);
  sub_1DB1F1650();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t VisualTranslationStream.translate(models:taskHint:selfLoggingInvocationId:)(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDB8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v9) = *a2;
  uint64_t v13 = v3;
  uint64_t v14 = a1;
  char v15 = v9;
  uint64_t v16 = a3;
  type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBD120], v7);
  return sub_1DB1F1650();
}

uint64_t sub_1DB1CEEE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v34 = a3;
  uint64_t v30 = a2;
  int v33 = a4 & 1;
  uint64_t v6 = sub_1DB1EF570();
  uint64_t v28 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v31 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = a1;
  uint64_t v20 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v32, v6);
  unint64_t v21 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (*(unsigned __int8 *)(v7 + 80) + v22 + 9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = 0;
  *((void *)v24 + 3) = 0;
  *((void *)v24 + 4) = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v24[v21], v13, v20);
  uint64_t v25 = &v24[v22];
  *(void *)uint64_t v25 = v34;
  v25[8] = v33;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v24[v23], v29, v28);
  swift_bridgeObjectRetain();
  sub_1DB136A2C((uint64_t)v16, (uint64_t)&unk_1EA905F68, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_1DB1CF1F4(uint64_t a1)
{
  return sub_1DB1CEEE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1DB1CF204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 764) = a7;
  *(void *)(v8 + 328) = a6;
  *(void *)(v8 + 336) = a8;
  *(void *)(v8 + 312) = a4;
  *(void *)(v8 + 320) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049E0);
  *(void *)(v8 + 344) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  *(void *)(v8 + 352) = swift_task_alloc();
  *(void *)(v8 + 360) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  *(void *)(v8 + 368) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD8);
  *(void *)(v8 + 376) = v9;
  *(void *)(v8 + 384) = *(void *)(v9 - 8);
  *(void *)(v8 + 392) = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD0);
  *(void *)(v8 + 400) = v10;
  *(void *)(v8 + 408) = *(void *)(v10 - 8);
  *(void *)(v8 + 416) = swift_task_alloc();
  uint64_t v11 = sub_1DB1EF760();
  *(void *)(v8 + 424) = v11;
  *(void *)(v8 + 432) = *(void *)(v11 - 8);
  *(void *)(v8 + 440) = swift_task_alloc();
  *(void *)(v8 + 448) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDB0);
  *(void *)(v8 + 456) = v12;
  *(void *)(v8 + 464) = *(void *)(v12 - 8);
  *(void *)(v8 + 472) = swift_task_alloc();
  uint64_t v13 = sub_1DB1EF570();
  *(void *)(v8 + 480) = v13;
  *(void *)(v8 + 488) = *(void *)(v13 - 8);
  *(void *)(v8 + 496) = swift_task_alloc();
  *(void *)(v8 + 504) = swift_task_alloc();
  uint64_t v14 = type metadata accessor for TextModel();
  *(void *)(v8 + 512) = v14;
  *(void *)(v8 + 520) = *(void *)(v14 - 8);
  *(void *)(v8 + 528) = swift_task_alloc();
  *(void *)(v8 + 536) = swift_task_alloc();
  *(void *)(v8 + 544) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for VisualTranslationModel(0);
  *(void *)(v8 + 552) = v15;
  *(void *)(v8 + 560) = *(void *)(v15 - 8);
  *(void *)(v8 + 568) = swift_task_alloc();
  *(void *)(v8 + 576) = swift_task_alloc();
  *(void *)(v8 + 584) = swift_task_alloc();
  *(void *)(v8 + 592) = swift_task_alloc();
  *(void *)(v8 + 600) = swift_task_alloc();
  *(void *)(v8 + 608) = type metadata accessor for Signpost();
  *(void *)(v8 + 616) = swift_task_alloc();
  *(void *)(v8 + 624) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1CF650, 0, 0);
}

uint64_t sub_1DB1CF650()
{
  uint64_t v42 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 632) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(*(void *)(v0 + 328) + 16);
    *(void *)(v0 + 640) = v2;
    if (qword_1EBA4E578 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1DB1EF810();
    *(void *)(v0 + 648) = __swift_project_value_buffer(v3, (uint64_t)qword_1EBA4F408);
    uint64_t v4 = sub_1DB1EF7F0();
    os_log_type_t v5 = sub_1DB1F16F0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      *(void *)(v0 + 304) = v2;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v4, v5, "Cache phase input: %ld", v6, 0xCu);
      MEMORY[0x1E018CA60](v6, -1, -1);
    }
    uint64_t v7 = *(void *)(v0 + 624);

    sub_1DB173814(4, 0, v7);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    *(void *)(v0 + 208) = MEMORY[0x1E4FBC860];
    if (v2)
    {
      uint64_t v9 = *(void *)(v0 + 560);
      uint64_t v10 = *(void *)(v0 + 328);
      int v11 = *(_DWORD *)(v9 + 80);
      *(_DWORD *)(v0 + 760) = v11;
      *(void *)(v0 + 656) = *(void *)(v9 + 72);
      *(void *)(v0 + 672) = 0;
      *(void *)(v0 + 688) = 0;
      *(void *)(v0 + 680) = 0;
      uint64_t v12 = *(void *)(v0 + 632);
      uint64_t v13 = *(void *)(v0 + 600);
      uint64_t v14 = v10 + ((v11 + 32) & ~(unint64_t)v11);
      swift_bridgeObjectRetain();
      sub_1DB1D30E0(v14, v13, type metadata accessor for VisualTranslationModel);
      uint64_t v15 = *(void *)(v12 + 16);
      *(void *)(v0 + 696) = v15;
      swift_retain();
      return MEMORY[0x1F4188298](sub_1DB1CFE5C, v15, 0);
    }
    sub_1DB173E68();
    uint64_t v17 = *(void *)(v8 + 16);
    *(void *)(v0 + 664) = v17;
    uint64_t v18 = sub_1DB1EF7F0();
    os_log_type_t v19 = sub_1DB1F16F0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = *(void *)(v0 + 640);
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 134218240;
      *(void *)(v0 + 288) = v20;
      sub_1DB1F1910();
      *(_WORD *)(v21 + 12) = 2048;
      *(void *)(v0 + 296) = v17;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v18, v19, "Cache phase output: %ld missed %ld ", (uint8_t *)v21, 0x16u);
      MEMORY[0x1E018CA60](v21, -1, -1);
    }
    uint64_t v22 = v0 + 208;

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1DB1EF7F0();
    os_log_type_t v24 = sub_1DB1F1700();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = *(void *)(v0 + 640);
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 134218496;
      *(void *)(v0 + 264) = v25;
      uint64_t v22 = v0 + 208;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      *(void *)(v0 + 272) = *(void *)(MEMORY[0x1E4FBC860] + 16);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 2048;
      *(void *)(v0 + 280) = 0;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v23, v24, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v26, 0x20u);
      MEMORY[0x1E018CA60](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    swift_beginAccess();
    if (*(void *)(*(void *)v22 + 16))
    {
      uint64_t v27 = sub_1DB1EF7F0();
      os_log_type_t v28 = sub_1DB1F16F0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 134217984;
        *(void *)(v0 + 248) = v17;
        sub_1DB1F1910();
        _os_log_impl(&dword_1DB0DC000, v27, v28, "Translate phase input: %ld", v29, 0xCu);
        MEMORY[0x1E018CA60](v29, -1, -1);
      }
      uint64_t v30 = *(void *)(v0 + 616);
      uint64_t v32 = *(void *)(v0 + 384);
      uint64_t v31 = *(void *)(v0 + 392);
      uint64_t v33 = *(void *)(v0 + 376);
      char v34 = *(unsigned char *)(v0 + 764);

      sub_1DB173814(1, 0, v30);
      type metadata accessor for VisualTranslationService();
      uint64_t v35 = *(void *)(v0 + 208);
      char v41 = v34 & 1;
      static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v35, 1, &v41, v31);
      swift_bridgeObjectRelease();
      sub_1DB1F15C0();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
      unint64_t v36 = (void *)swift_task_alloc();
      *(void *)(v0 + 728) = v36;
      *unint64_t v36 = v0;
      v36[1] = sub_1DB1D1B68;
      uint64_t v37 = *(void *)(v0 + 400);
      uint64_t v38 = *(void *)(v0 + 368);
      return MEMORY[0x1F4187ED8](v38, 0, 0, v37, v0 + 216);
    }
    uint64_t v39 = *(void *)(v0 + 624);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 256) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
    sub_1DB1F1620();
    swift_release();
    sub_1DB1D3148(v39, (uint64_t (*)(void))type metadata accessor for Signpost);
  }
  else
  {
    *(void *)(v0 + 240) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
    sub_1DB1F1620();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1DB1CFE5C()
{
  uint64_t v1 = v0[87];
  uint64_t v2 = v0[84];
  unint64_t v3 = *(void *)(v0[75] + *(int *)(v0[69] + 28));
  swift_retain();
  unint64_t v4 = sub_1DB1D2D1C(v3, v1, 0);
  v0[88] = v2;
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v0[65];
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = v4 + v7;
    uint64_t v9 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v10 = v0[68];
      uint64_t v11 = v0[64];
      sub_1DB1D30E0(v8, v10, (uint64_t (*)(void))type metadata accessor for TextModel);
      unint64_t v12 = *(void *)(v10 + *(int *)(v11 + 20));
      if ((v12 & 0x8000000000000000) == 0 && (int64_t)v12 < *(void *)(v3 + 16))
      {
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t isUniquelyReferenced_nonNull_native = sub_1DB188FC0(v3);
          unint64_t v3 = isUniquelyReferenced_nonNull_native;
        }
        if (v12 >= *(void *)(v3 + 16))
        {
          __break(1u);
          return MEMORY[0x1F4188298](isUniquelyReferenced_nonNull_native, v14, v15);
        }
        sub_1DB189018(v0[68], v3 + v7 + v12 * v9);
      }
      sub_1DB1D3148(v0[68], (uint64_t (*)(void))type metadata accessor for TextModel);
      v8 += v9;
      if (!--v5)
      {
        uint64_t v16 = v0[75];
        uint64_t v17 = v0[74];
        uint64_t v18 = (int *)v0[69];
        (*(void (**)(uint64_t, uint64_t, void))(v0[61] + 16))(v17, v16, v0[60]);
        uint64_t v19 = v18[6];
        uint64_t v20 = (long long *)(v16 + v18[5]);
        uint64_t v39 = *((void *)v20 + 20);
        long long v37 = v20[8];
        long long v38 = v20[9];
        long long v33 = v20[4];
        long long v34 = v20[5];
        long long v35 = v20[6];
        long long v36 = v20[7];
        long long v29 = *v20;
        long long v30 = v20[1];
        uint64_t v21 = v16 + v19;
        uint64_t v22 = v17 + v19;
        long long v31 = v20[2];
        long long v32 = v20[3];
        uint64_t v23 = sub_1DB1EF520();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v21, v23);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v24 = *(void *)(v16 + v18[8]);
        char v25 = *(unsigned char *)(v16 + v18[9]);
        char v26 = *(unsigned char *)(v16 + v18[10]);
        uint64_t v27 = v17 + v18[5];
        *(_OWORD *)(v27 + 128) = v37;
        *(_OWORD *)(v27 + 144) = v38;
        *(void *)(v27 + 160) = v39;
        *(_OWORD *)(v27 + 64) = v33;
        *(_OWORD *)(v27 + 80) = v34;
        *(_OWORD *)(v27 + 96) = v35;
        *(_OWORD *)(v27 + 112) = v36;
        *(_OWORD *)uint64_t v27 = v29;
        *(_OWORD *)(v27 + 16) = v30;
        *(_OWORD *)(v27 + 32) = v31;
        *(_OWORD *)(v27 + 48) = v32;
        *(void *)(v17 + v18[7]) = v3;
        *(void *)(v17 + v18[8]) = v24;
        *(unsigned char *)(v17 + v18[9]) = v25;
        *(unsigned char *)(v17 + v18[10]) = v26;
        *(unsigned char *)(v17 + v18[11]) = 0;
        goto LABEL_12;
      }
    }
  }
  sub_1DB1D30E0(v0[75], v0[74], type metadata accessor for VisualTranslationModel);
  swift_bridgeObjectRelease();
  swift_release();
LABEL_12:
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DB1D0154;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  return MEMORY[0x1F4188298](isUniquelyReferenced_nonNull_native, v14, v15);
}

uint64_t sub_1DB1D0154()
{
  uint64_t v62 = v0;
  if ((sub_1DB1B73CC() & 1) == 0)
  {
    uint64_t v17 = *(void *)(v0 + 632);
    sub_1DB173B88(1);
    uint64_t v18 = *(void *)(v17 + 24);
    *(void *)(v0 + 712) = v18;
    uint64_t v19 = sub_1DB1D09E8;
LABEL_13:
    uint64_t v46 = v19;
    swift_retain();
    return MEMORY[0x1F4188298](v46, v18, 0);
  }
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 432) + 16);
  v1(*(void *)(v0 + 448), *(void *)(v0 + 624) + *(int *)(*(void *)(v0 + 608) + 20), *(void *)(v0 + 424));
  uint64_t v2 = sub_1DB1EF770();
  os_signpost_type_t v3 = sub_1DB1F17F0();
  char v4 = sub_1DB1F18F0();
  uint64_t v5 = *(void *)(v0 + 448);
  if (v4)
  {
    uint64_t v7 = *(void *)(v0 + 432);
    uint64_t v6 = *(void *)(v0 + 440);
    uint64_t v8 = *(void *)(v0 + 424);
    v1(v6, *(void *)(v0 + 448), v8);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = sub_1DB1EF750();
    _os_signpost_emit_with_name_impl(&dword_1DB0DC000, v2, v3, v10, "success", "", v9, 2u);
    MEMORY[0x1E018CA60](v9, -1, -1);

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v5, v8);
    uint64_t v12 = ((uint64_t (*)(uint64_t, uint64_t))v11)(v6, v8);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 424);
    uint64_t v21 = *(void *)(v0 + 432);

    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v5, v20);
  }
  uint64_t v22 = *(void *)(v0 + 680);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
    return MEMORY[0x1F4187ED8](v12, v13, v14, v15, v16);
  }
  uint64_t v60 = v24;
  uint64_t v25 = *(void *)(v0 + 640);
  uint64_t v26 = *(void *)(v0 + 600);
  uint64_t v27 = *(void *)(v0 + 592);
  uint64_t v29 = *(void *)(v0 + 464);
  uint64_t v28 = *(void *)(v0 + 472);
  uint64_t v30 = *(void *)(v0 + 456);
  uint64_t v31 = *(void *)(v0 + 688) + 1;
  sub_1DB1D30E0(v27, *(void *)(v0 + 576), type metadata accessor for VisualTranslationModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  sub_1DB1F1610();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  sub_1DB1D3148(v27, type metadata accessor for VisualTranslationModel);
  sub_1DB1D3148(v26, type metadata accessor for VisualTranslationModel);
  if (v31 != v25)
  {
    uint64_t v43 = *(void *)(v0 + 704);
    uint64_t v44 = *(void *)(v0 + 688) + 1;
    *(void *)(v0 + 688) = v44;
    *(void *)(v0 + 680) = v60;
    *(void *)(v0 + 672) = v43;
    uint64_t v45 = *(void *)(v0 + 632);
    sub_1DB1D30E0(*(void *)(v0 + 328)+ ((*(unsigned __int8 *)(v0 + 760) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 760))+ *(void *)(v0 + 656) * v44, *(void *)(v0 + 600), type metadata accessor for VisualTranslationModel);
    uint64_t v18 = *(void *)(v45 + 16);
    *(void *)(v0 + 696) = v18;
    uint64_t v19 = sub_1DB1CFE5C;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v0 + 208);
  sub_1DB173E68();
  uint64_t v33 = *(void *)(v32 + 16);
  *(void *)(v0 + 664) = v33;
  long long v34 = sub_1DB1EF7F0();
  os_log_type_t v35 = sub_1DB1F16F0();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = *(void *)(v0 + 640);
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 134218240;
    *(void *)(v0 + 288) = v36;
    sub_1DB1F1910();
    *(_WORD *)(v37 + 12) = 2048;
    *(void *)(v0 + 296) = v33;
    sub_1DB1F1910();
    _os_log_impl(&dword_1DB0DC000, v34, v35, "Cache phase output: %ld missed %ld ", (uint8_t *)v37, 0x16u);
    MEMORY[0x1E018CA60](v37, -1, -1);
  }
  uint64_t v38 = v0 + 208;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1DB1EF7F0();
  os_log_type_t v40 = sub_1DB1F1700();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = *(void *)(v0 + 640);
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134218496;
    *(void *)(v0 + 264) = v41;
    uint64_t v38 = v0 + 208;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2048;
    *(void *)(v0 + 272) = *(void *)(v32 + 16);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 22) = 2048;
    *(void *)(v0 + 280) = v60;
    sub_1DB1F1910();
    _os_log_impl(&dword_1DB0DC000, v39, v40, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v42, 0x20u);
    MEMORY[0x1E018CA60](v42, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_beginAccess();
  if (*(void *)(*(void *)v38 + 16))
  {
    uint64_t v47 = sub_1DB1EF7F0();
    os_log_type_t v48 = sub_1DB1F16F0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 134217984;
      *(void *)(v0 + 248) = v33;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v47, v48, "Translate phase input: %ld", v49, 0xCu);
      MEMORY[0x1E018CA60](v49, -1, -1);
    }
    uint64_t v50 = *(void *)(v0 + 616);
    uint64_t v52 = *(void *)(v0 + 384);
    uint64_t v51 = *(void *)(v0 + 392);
    uint64_t v53 = *(void *)(v0 + 376);
    char v54 = *(unsigned char *)(v0 + 764);

    sub_1DB173814(1, 0, v50);
    type metadata accessor for VisualTranslationService();
    uint64_t v55 = *(void *)(v0 + 208);
    char v61 = v54 & 1;
    static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v55, 1, &v61, v51);
    swift_bridgeObjectRelease();
    sub_1DB1F15C0();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
    unint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 728) = v56;
    *unint64_t v56 = v0;
    v56[1] = sub_1DB1D1B68;
    uint64_t v15 = *(void *)(v0 + 400);
    uint64_t v12 = *(void *)(v0 + 368);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v16 = v0 + 216;
    return MEMORY[0x1F4187ED8](v12, v13, v14, v15, v16);
  }
  uint64_t v57 = *(void *)(v0 + 624);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 256) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  sub_1DB1F1620();
  swift_release();
  sub_1DB1D3148(v57, (uint64_t (*)(void))type metadata accessor for Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
  return v58();
}

uint64_t sub_1DB1D09E8()
{
  uint64_t v1 = *(void *)(v0 + 712);
  uint64_t v2 = *(void *)(v0 + 592);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  *(unsigned char *)(v0 + 765) = sub_1DB15B29C(v2, v3) & 1;
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4188298](sub_1DB1D0A9C, 0, 0);
}

uint64_t sub_1DB1D0A9C()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 765) == 1)
  {
    uint64_t v43 = *(void *)(v0 + 680);
    uint64_t v1 = *(void *)(v0 + 640);
    uint64_t v2 = *(void *)(v0 + 600);
    uint64_t v3 = *(void *)(v0 + 592);
    uint64_t v5 = *(void *)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 472);
    uint64_t v6 = *(void *)(v0 + 456);
    uint64_t v7 = *(void *)(v0 + 688) + 1;
    sub_1DB1D30E0(v3, *(void *)(v0 + 576), type metadata accessor for VisualTranslationModel);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
    sub_1DB1F1610();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_1DB1D3148(v3, type metadata accessor for VisualTranslationModel);
    sub_1DB1D3148(v2, type metadata accessor for VisualTranslationModel);
    if (v7 == v1)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(v0 + 208);
      sub_1DB173E68();
      uint64_t v9 = *(void *)(v8 + 16);
      *(void *)(v0 + 664) = v9;
      os_signpost_id_t v10 = sub_1DB1EF7F0();
      os_log_type_t v11 = sub_1DB1F16F0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = *(void *)(v0 + 640);
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 134218240;
        *(void *)(v0 + 288) = v12;
        sub_1DB1F1910();
        *(_WORD *)(v13 + 12) = 2048;
        *(void *)(v0 + 296) = v9;
        sub_1DB1F1910();
        _os_log_impl(&dword_1DB0DC000, v10, v11, "Cache phase output: %ld missed %ld ", (uint8_t *)v13, 0x16u);
        MEMORY[0x1E018CA60](v13, -1, -1);
      }

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1DB1EF7F0();
      os_log_type_t v15 = sub_1DB1F1700();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = *(void *)(v0 + 640);
        uint64_t v17 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 134218496;
        *(void *)(v0 + 264) = v16;
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2048;
        *(void *)(v0 + 272) = *(void *)(v8 + 16);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 22) = 2048;
        *(void *)(v0 + 280) = v43;
        sub_1DB1F1910();
        _os_log_impl(&dword_1DB0DC000, v14, v15, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v17, 0x20u);
        MEMORY[0x1E018CA60](v17, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }

      swift_beginAccess();
      if (*(void *)(*(void *)(v0 + 208) + 16))
      {
        uint64_t v28 = sub_1DB1EF7F0();
        os_log_type_t v29 = sub_1DB1F16F0();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = 134217984;
          *(void *)(v0 + 248) = v9;
          sub_1DB1F1910();
          _os_log_impl(&dword_1DB0DC000, v28, v29, "Translate phase input: %ld", v30, 0xCu);
          MEMORY[0x1E018CA60](v30, -1, -1);
        }
        uint64_t v31 = *(void *)(v0 + 616);
        uint64_t v33 = *(void *)(v0 + 384);
        uint64_t v32 = *(void *)(v0 + 392);
        uint64_t v34 = *(void *)(v0 + 376);
        char v35 = *(unsigned char *)(v0 + 764);

        sub_1DB173814(1, 0, v31);
        type metadata accessor for VisualTranslationService();
        uint64_t v36 = *(void *)(v0 + 208);
        char v44 = v35 & 1;
        static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v36, 1, &v44, v32);
        swift_bridgeObjectRelease();
        sub_1DB1F15C0();
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 728) = v37;
        void *v37 = v0;
        v37[1] = sub_1DB1D1B68;
        uint64_t v38 = *(void *)(v0 + 400);
        uint64_t v39 = *(void *)(v0 + 368);
        return MEMORY[0x1F4187ED8](v39, 0, 0, v38, v0 + 216);
      }
      else
      {
        uint64_t v40 = *(void *)(v0 + 624);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 256) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
        sub_1DB1F1620();
        swift_release();
        sub_1DB1D3148(v40, (uint64_t (*)(void))type metadata accessor for Signpost);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
        return v41();
      }
    }
    uint64_t v24 = *(void *)(v0 + 704);
    uint64_t v25 = *(void *)(v0 + 688) + 1;
    *(void *)(v0 + 688) = v25;
    *(void *)(v0 + 680) = v43;
    *(void *)(v0 + 672) = v24;
    uint64_t v26 = *(void *)(v0 + 632);
    sub_1DB1D30E0(*(void *)(v0 + 328)+ ((*(unsigned __int8 *)(v0 + 760) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 760))+ *(void *)(v0 + 656) * v25, *(void *)(v0 + 600), type metadata accessor for VisualTranslationModel);
    uint64_t v22 = *(void *)(v26 + 16);
    *(void *)(v0 + 696) = v22;
    BOOL v23 = sub_1DB1CFE5C;
  }
  else
  {
    uint64_t v18 = sub_1DB1EF7F0();
    os_log_type_t v19 = sub_1DB1F1700();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1DB0DC000, v18, v19, "Detected untranslated item", v20, 2u);
      MEMORY[0x1E018CA60](v20, -1, -1);
    }
    uint64_t v21 = *(void *)(v0 + 632);

    uint64_t v22 = *(void *)(v21 + 24);
    *(void *)(v0 + 720) = v22;
    BOOL v23 = sub_1DB1D126C;
  }
  uint64_t v27 = v23;
  swift_retain();
  return MEMORY[0x1F4188298](v27, v22, 0);
}

uint64_t sub_1DB1D126C()
{
  uint64_t v1 = (char *)v0[62];
  uint64_t v2 = v0[63];
  uint64_t v3 = v0[60];
  uint64_t v4 = v0[61];
  (*(void (**)(char *, void, uint64_t))(v4 + 16))(v1, v0[74], v3);
  swift_beginAccess();
  sub_1DB1E52B0(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_endAccess();
  swift_release();
  return MEMORY[0x1F4188298](sub_1DB1D1364, 0, 0);
}

uint64_t sub_1DB1D1364()
{
  uint64_t v47 = v0;
  sub_1DB1D30E0(*(void *)(v0 + 592), *(void *)(v0 + 584), type metadata accessor for VisualTranslationModel);
  unint64_t v1 = *(void *)(v0 + 208);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v1 = sub_1DB188C74(0, *(void *)(v1 + 16) + 1, 1, v1);
  }
  unint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  if (v3 >= v2 >> 1) {
    unint64_t v1 = sub_1DB188C74(v2 > 1, v3 + 1, 1, v1);
  }
  uint64_t v4 = *(void *)(v0 + 656);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 760);
  uint64_t v6 = *(void *)(v0 + 584);
  *(void *)(v1 + 16) = v3 + 1;
  sub_1DB0F13EC(v6, v1 + ((v5 + 32) & ~v5) + v4 * v3, type metadata accessor for VisualTranslationModel);
  *(void *)(v0 + 208) = v1;
  uint64_t v44 = *(void *)(v0 + 680);
  uint64_t v45 = *(void *)(v0 + 640);
  uint64_t v7 = *(void *)(v0 + 600);
  uint64_t v8 = *(void *)(v0 + 592);
  uint64_t v9 = *(void *)(v0 + 464);
  uint64_t v10 = *(void *)(v0 + 472);
  uint64_t v11 = *(void *)(v0 + 456);
  uint64_t v12 = *(void *)(v0 + 688) + 1;
  sub_1DB1D30E0(v8, *(void *)(v0 + 576), type metadata accessor for VisualTranslationModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  sub_1DB1F1610();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  sub_1DB1D3148(v8, type metadata accessor for VisualTranslationModel);
  sub_1DB1D3148(v7, type metadata accessor for VisualTranslationModel);
  if (v12 == v45)
  {
    uint64_t v13 = v0 + 208;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v0 + 208);
    sub_1DB173E68();
    uint64_t v15 = *(void *)(v14 + 16);
    *(void *)(v0 + 664) = v15;
    uint64_t v16 = sub_1DB1EF7F0();
    os_log_type_t v17 = sub_1DB1F16F0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = *(void *)(v0 + 640);
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134218240;
      *(void *)(v0 + 288) = v18;
      sub_1DB1F1910();
      *(_WORD *)(v19 + 12) = 2048;
      *(void *)(v0 + 296) = v15;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v16, v17, "Cache phase output: %ld missed %ld ", (uint8_t *)v19, 0x16u);
      MEMORY[0x1E018CA60](v19, -1, -1);
    }

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DB1EF7F0();
    os_log_type_t v21 = sub_1DB1F1700();
    uint64_t v43 = v15;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = *(void *)(v0 + 640);
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 134218496;
      *(void *)(v0 + 264) = v22;
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2048;
      *(void *)(v0 + 272) = *(void *)(v14 + 16);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2048;
      uint64_t v13 = v0 + 208;
      *(void *)(v0 + 280) = v44;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v20, v21, "%ld observations. %ld to translate, preserving %ld", (uint8_t *)v23, 0x20u);
      MEMORY[0x1E018CA60](v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    swift_beginAccess();
    if (*(void *)(*(void *)v13 + 16))
    {
      uint64_t v28 = sub_1DB1EF7F0();
      os_log_type_t v29 = sub_1DB1F16F0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 134217984;
        *(void *)(v0 + 248) = v43;
        sub_1DB1F1910();
        _os_log_impl(&dword_1DB0DC000, v28, v29, "Translate phase input: %ld", v30, 0xCu);
        MEMORY[0x1E018CA60](v30, -1, -1);
      }
      uint64_t v31 = *(void *)(v0 + 616);
      uint64_t v33 = *(void *)(v0 + 384);
      uint64_t v32 = *(void *)(v0 + 392);
      uint64_t v34 = *(void *)(v0 + 376);
      char v35 = *(unsigned char *)(v0 + 764);

      sub_1DB173814(1, 0, v31);
      type metadata accessor for VisualTranslationService();
      uint64_t v36 = *(void *)(v0 + 208);
      char v46 = v35 & 1;
      static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v36, 1, &v46, v32);
      swift_bridgeObjectRelease();
      sub_1DB1F15C0();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 728) = v37;
      void *v37 = v0;
      v37[1] = sub_1DB1D1B68;
      uint64_t v38 = *(void *)(v0 + 400);
      uint64_t v39 = *(void *)(v0 + 368);
      return MEMORY[0x1F4187ED8](v39, 0, 0, v38, v0 + 216);
    }
    else
    {
      uint64_t v40 = *(void *)(v0 + 624);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 256) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
      sub_1DB1F1620();
      swift_release();
      sub_1DB1D3148(v40, (uint64_t (*)(void))type metadata accessor for Signpost);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
      return v41();
    }
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 704);
    uint64_t v25 = *(void *)(v0 + 688) + 1;
    *(void *)(v0 + 688) = v25;
    *(void *)(v0 + 680) = v44;
    *(void *)(v0 + 672) = v24;
    uint64_t v26 = *(void *)(v0 + 632);
    sub_1DB1D30E0(*(void *)(v0 + 328)+ ((*(unsigned __int8 *)(v0 + 760) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 760))+ *(void *)(v0 + 656) * v25, *(void *)(v0 + 600), type metadata accessor for VisualTranslationModel);
    uint64_t v27 = *(void *)(v26 + 16);
    *(void *)(v0 + 696) = v27;
    swift_retain();
    return MEMORY[0x1F4188298](sub_1DB1CFE5C, v27, 0);
  }
}

uint64_t sub_1DB1D1B68()
{
  swift_task_dealloc();
  if (v0) {
    unint64_t v1 = sub_1DB1D26A4;
  }
  else {
    unint64_t v1 = sub_1DB1D1C78;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1DB1D1C78()
{
  uint64_t v1 = v0[46];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[70] + 48))(v1, 1, v0[69]) == 1)
  {
    (*(void (**)(void, void))(v0[51] + 8))(v0[52], v0[50]);
    unint64_t v2 = sub_1DB1EF7F0();
    os_log_type_t v3 = sub_1DB1F16F0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = v0[83];
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134217984;
      v0[29] = v4;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v2, v3, "Translate phase output: %ld", v5, 0xCu);
      MEMORY[0x1E018CA60](v5, -1, -1);
    }
    uint64_t v6 = v0[78];
    uint64_t v7 = v0[77];

    sub_1DB173E68();
    v0[28] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
    sub_1DB1F1620();
    swift_release();
    sub_1DB1D3148(v7, (uint64_t (*)(void))type metadata accessor for Signpost);
    sub_1DB1D3148(v6, (uint64_t (*)(void))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v0[72];
    uint64_t v11 = v0[71];
    uint64_t v13 = v0[58];
    uint64_t v12 = v0[59];
    uint64_t v14 = v0[57];
    sub_1DB0F13EC(v1, v11, type metadata accessor for VisualTranslationModel);
    char v15 = sub_1DB1B73CC();
    sub_1DB173B88((v15 & 1) == 0);
    sub_1DB1D30E0(v11, v10, type metadata accessor for VisualTranslationModel);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
    sub_1DB1F1610();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    char v16 = sub_1DB1B73CC();
    uint64_t v17 = v0[79];
    if (v16)
    {
      uint64_t v18 = v0[71];
      uint64_t v19 = v0[69];
      uint64_t v20 = *(void *)(v17 + 16);
      v0[92] = v20;
      v0[93] = *(void *)(v18 + *(int *)(v19 + 28));
      swift_retain();
      swift_bridgeObjectRetain();
      os_log_type_t v21 = sub_1DB1D20A0;
    }
    else
    {
      uint64_t v20 = *(void *)(v17 + 24);
      v0[94] = v20;
      swift_retain();
      os_log_type_t v21 = sub_1DB1D2510;
    }
    return MEMORY[0x1F4188298](v21, v20, 0);
  }
}

uint64_t sub_1DB1D20A0()
{
  uint64_t v1 = *(void *)(v0 + 744);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v33 = *(void *)(v0 + 736);
    uint64_t v3 = *(void *)(v0 + 520);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    uint64_t v35 = v5;
    do
    {
      uint64_t v13 = *(void *)(v0 + 536);
      uint64_t v14 = *(void *)(v0 + 512);
      sub_1DB1D30E0(v4, v13, (uint64_t (*)(void))type metadata accessor for TextModel);
      if (!*(void *)(v13 + *(int *)(v14 + 44)))
      {
        uint64_t v15 = *(void *)(v0 + 536);
        uint64_t v16 = *(void *)(v0 + 512);
        uint64_t v17 = (void *)(v15 + *(int *)(v16 + 24));
        unint64_t v18 = v17[1];
        uint64_t v19 = *v17 & 0xFFFFFFFFFFFFLL;
        if ((v18 & 0x2000000000000000) != 0) {
          uint64_t v19 = HIBYTE(v18) & 0xF;
        }
        if (v19)
        {
          uint64_t v20 = *(void *)(v0 + 360);
          uint64_t v21 = v15 + *(int *)(v16 + 28);
          sub_1DB11FF38(v21, v20);
          uint64_t v22 = sub_1DB1EF6B0();
          uint64_t v34 = *(void *)(v22 - 8);
          uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
          int v24 = v23(v20, 1, v22);
          sub_1DB0E8BD4(v20, &qword_1EBA4E570);
          BOOL v25 = v24 == 1;
          uint64_t v5 = v35;
          if (!v25)
          {
            uint64_t v26 = (void *)(*(void *)(v0 + 536) + *(int *)(*(void *)(v0 + 512) + 32));
            unint64_t v27 = v26[1];
            if (v27)
            {
              uint64_t v28 = *v26 & 0xFFFFFFFFFFFFLL;
              if ((v27 & 0x2000000000000000) != 0 ? HIBYTE(v27) & 0xF : v28)
              {
                uint64_t v30 = *(void *)(v0 + 352);
                sub_1DB11FF38(v21, v30);
                if (v23(v30, 1, v22) == 1)
                {
                  sub_1DB0E8BD4(*(void *)(v0 + 352), &qword_1EBA4E570);
                }
                else
                {
                  uint64_t v6 = *(void *)(v0 + 536);
                  uint64_t v32 = *(void *)(v0 + 528);
                  uint64_t v7 = *(void *)(v0 + 352);
                  sub_1DB1EF590();
                  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v7, v22);
                  sub_1DB1F1ED0();
                  sub_1DB1F1360();
                  swift_bridgeObjectRelease();
                  uint64_t v8 = v6;
                  sub_1DB1EF590();
                  sub_1DB1F1360();
                  swift_bridgeObjectRelease();
                  sub_1DB1F1EA0();
                  swift_bridgeObjectRetain();
                  sub_1DB1F1360();
                  swift_bridgeObjectRelease();
                  *(_OWORD *)(v0 + 48) = v38;
                  *(_OWORD *)(v0 + 64) = v39;
                  *(void *)(v0 + 80) = v40;
                  *(_OWORD *)(v0 + 16) = v36;
                  *(_OWORD *)(v0 + 32) = v37;
                  sub_1DB1F1EB0();
                  uint64_t v9 = *(void **)(v33 + 136);
                  sub_1DB1D30E0(v8, v32, (uint64_t (*)(void))type metadata accessor for TextModel);
                  type metadata accessor for TextModelContainer();
                  uint64_t v10 = swift_allocObject();
                  sub_1DB0F13EC(v32, v10 + OBJC_IVAR____TtC13TranslationUI18TextModelContainer_textModel, (uint64_t (*)(void))type metadata accessor for TextModel);
                  sub_1DB131034();
                  id v11 = v9;
                  uint64_t v12 = (void *)sub_1DB1F1870();
                  objc_msgSend(v11, sel_setObject_forKey_, v10, v12);

                  uint64_t v5 = v35;
                  swift_release();
                }
              }
            }
          }
        }
      }
      sub_1DB1D3148(*(void *)(v0 + 536), (uint64_t (*)(void))type metadata accessor for TextModel);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return MEMORY[0x1F4188298](sub_1DB1D2498, 0, 0);
}

uint64_t sub_1DB1D2498()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 632) + 24);
  *(void *)(v0 + 752) = v1;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1DB1D2510, v1, 0);
}

uint64_t sub_1DB1D2510()
{
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 344);
  swift_beginAccess();
  sub_1DB1E8B5C(v1, v2);
  sub_1DB0E8BD4(v2, &qword_1EA9049E0);
  swift_endAccess();
  swift_release();
  return MEMORY[0x1F4188298](sub_1DB1D25D8, 0, 0);
}

uint64_t sub_1DB1D25D8()
{
  sub_1DB1D3148(v0[71], type metadata accessor for VisualTranslationModel);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[91] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DB1D1B68;
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[46];
  return MEMORY[0x1F4187ED8](v3, 0, 0, v2, v0 + 27);
}

uint64_t sub_1DB1D26A4()
{
  uint64_t v1 = v0[78];
  uint64_t v2 = v0[77];
  uint64_t v4 = v0[51];
  uint64_t v3 = v0[52];
  uint64_t v5 = v0[50];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1DB1D3148(v2, (uint64_t (*)(void))type metadata accessor for Signpost);
  sub_1DB1D3148(v1, (uint64_t (*)(void))type metadata accessor for Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t VisualTranslationStream.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t VisualTranslationStream.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OngoingTranslationActor()
{
  return self;
}

uint64_t type metadata accessor for VisualTranslationStream()
{
  return self;
}

uint64_t method lookup function for VisualTranslationStream(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualTranslationStream);
}

uint64_t sub_1DB1D2950()
{
  type metadata accessor for TextTranslationCache();
  uint64_t v1 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = 0;
  v1[15] = 0;
  v1[16] = 100;
  v1[17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C998]), sel_init);
  *(void *)(v0 + 16) = v1;
  type metadata accessor for OngoingTranslationActor();
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = MEMORY[0x1E4FBC870];
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_1DB1D29E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DB1D2A18()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_1DB1EF570();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1DB1D2B90(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDC0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_1DB1EF570() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (char *)v1 + v7;
  uint64_t v15 = *(void *)((char *)v1 + v7);
  char v16 = v14[8];
  uint64_t v17 = (uint64_t)v1 + v9;
  unint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  void *v18 = v3;
  v18[1] = sub_1DB1036D0;
  return sub_1DB1CF204(a1, v10, v11, v12, v13, v15, v16, v17);
}

unint64_t sub_1DB1D2D1C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v43 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD60);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v39 = (uint64_t)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for TextModel();
  MEMORY[0x1F4188790](v44);
  uint64_t v38 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (uint64_t)v33 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v35 = (uint64_t)v33 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v33[1] = v3;
    unint64_t v34 = v15;
    uint64_t v16 = a1 + v15;
    uint64_t v17 = *(void *)(v12 + 72);
    uint64_t v42 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    long long v36 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    v33[0] = a1;
    swift_bridgeObjectRetain();
    unint64_t v40 = MEMORY[0x1E4FBC860];
    int v41 = a3 & 1;
    uint64_t v18 = v39;
    while (1)
    {
      uint64_t v19 = sub_1DB18B45C(v16, v41);
      if (v20)
      {
        uint64_t v21 = v19;
        uint64_t v22 = v20;
        uint64_t v23 = v37;
        sub_1DB1D30E0(v16, v37, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v24 = v17;
        uint64_t v25 = v44;
        uint64_t v26 = (uint64_t *)(v23 + *(int *)(v44 + 32));
        swift_bridgeObjectRelease();
        uint64_t *v26 = v21;
        v26[1] = v22;
        uint64_t v18 = v39;
        sub_1DB1D30E0(v23, v39, (uint64_t (*)(void))type metadata accessor for TextModel);
        (*v42)(v18, 0, 1, v25);
        sub_1DB1D3148(v23, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v27 = v25;
        uint64_t v17 = v24;
        if ((*v36)(v18, 1, v27) != 1)
        {
          uint64_t v28 = v35;
          sub_1DB0F13EC(v18, v35, (uint64_t (*)(void))type metadata accessor for TextModel);
          sub_1DB0F13EC(v28, v38, (uint64_t (*)(void))type metadata accessor for TextModel);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v29 = v40;
          }
          else {
            unint64_t v29 = sub_1DB188C40(0, *(void *)(v40 + 16) + 1, 1, v40);
          }
          unint64_t v31 = *(void *)(v29 + 16);
          unint64_t v30 = *(void *)(v29 + 24);
          if (v31 >= v30 >> 1) {
            unint64_t v29 = sub_1DB188C40(v30 > 1, v31 + 1, 1, v29);
          }
          *(void *)(v29 + 16) = v31 + 1;
          unint64_t v40 = v29;
          sub_1DB0F13EC(v38, v29 + v34 + v31 * v24, (uint64_t (*)(void))type metadata accessor for TextModel);
          goto LABEL_5;
        }
      }
      else
      {
        (*v42)(v18, 1, 1, v44);
      }
      sub_1DB0E8BD4(v18, &qword_1EBA4DD60);
LABEL_5:
      v16 += v17;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        return v40;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DB1D30E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1D3148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB1D31A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905AA0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1DB0E8BD4(a1, &qword_1EA905AA0);
    sub_1DB1E305C(a2, (uint64_t)v8);
    uint64_t v14 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
    return sub_1DB0E8BD4((uint64_t)v8, &qword_1EA905AA0);
  }
  else
  {
    sub_1DB0F1454(a1, (uint64_t)v12, &qword_1EA903B10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1DB1E425C((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1DB1EF570();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1DB1D33C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VisualTranslationModel(0);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1DB0E8BD4(a1, &qword_1EBA4E458);
    sub_1DB1E322C(a2, (uint64_t)v8);
    uint64_t v14 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
    return sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E458);
  }
  else
  {
    sub_1DB1EE0B0(a1, (uint64_t)v12, type metadata accessor for VisualTranslationModel);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1DB1E4428((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1DB1EF570();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1DB1D35E0(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return MEMORY[0x1F41881F8]();
}

uint64_t SecureHostingController.__allocating_init(rootView:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  uint64_t v5 = sub_1DB1E9844(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)((char *)v2
                                                          + class metadata base offset for SecureHostingController)
                                              - 8)
                                  + 8))(a1);
  return v5;
}

void RecognizedItem.originalBounds.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v55 = a1;
  uint64_t v3 = sub_1DB1F10E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  uint64_t v53 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v54 = (char *)v41 - v8;
  uint64_t v9 = sub_1DB1F1190();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v41 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  uint64_t v18 = v2;
  v17((char *)v41 - v15, v2, v9, v14);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v20 = v19(v16, v9);
  if (v20 != *MEMORY[0x1E4F45DF8])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_9:
    uint64_t v29 = v55;
    goto LABEL_10;
  }
  uint64_t v45 = v6;
  uint64_t v46 = v10 + 16;
  int v47 = v20;
  uint64_t v48 = v19;
  uint64_t v49 = (void (*)(char *, uint64_t, uint64_t))v17;
  uint64_t v50 = v12;
  uint64_t v51 = v18;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v10 + 96);
  v44(v16, v9);
  uint64_t v21 = v53;
  uint64_t v22 = v52;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  uint64_t v43 = v53 + 32;
  v42(v54, v16, v52);
  uint64_t v23 = (void *)sub_1DB1F10C0();
  self;
  uint64_t v24 = (void *)swift_dynamicCastObjCClass();
  if (!v24)
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v54, v22);
    goto LABEL_9;
  }
  uint64_t v25 = v10;
  v41[1] = v10 + 96;
  id v26 = objc_msgSend(v24, sel_getCROutputRegion);

  uint64_t v27 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v28 = v22;
  v27(v54, v22);
  uint64_t v29 = v55;
  if (!v26)
  {
LABEL_10:
    uint64_t v37 = sub_1DB1F1170();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    uint64_t v39 = v29;
    goto LABEL_11;
  }
  id v30 = objc_msgSend(v26, sel_originalBoundingQuad);
  if (!v30)
  {
    uint64_t v40 = sub_1DB1F1170();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v55, 1, 1, v40);

    return;
  }
  unint64_t v31 = v30;
  uint64_t v32 = v50;
  v49(v50, v51, v9);
  int v33 = v48(v32, v9);
  if (v33 == v47)
  {
    v44(v32, v9);
    unint64_t v34 = v45;
    v42(v45, v32, v28);
    uint64_t v35 = v55;
    sub_1DB1F10D0();
    objc_msgSend(v31, sel_bottomLeft);
    sub_1DB1F1100();
    objc_msgSend(v31, sel_bottomRight);
    sub_1DB1F1120();
    objc_msgSend(v31, sel_topLeft);
    sub_1DB1F1140();
    objc_msgSend(v31, sel_topRight);
    sub_1DB1F1160();

    v27(v34, v28);
    uint64_t v36 = sub_1DB1F1170();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    return;
  }

  (*(void (**)(char *, uint64_t))(v25 + 8))(v32, v9);
  uint64_t v37 = sub_1DB1F1170();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  uint64_t v39 = v55;
LABEL_11:
  v38(v39, 1, 1, v37);
}

void RecognizedItem.homography.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DB1F10E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1F1190();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, v2, v8, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v12, v8) != *MEMORY[0x1E4F45DF8])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
LABEL_8:
    long long v16 = 0uLL;
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v12, v4);
  uint64_t v13 = (void *)sub_1DB1F10C0();
  self;
  __n128 v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14)
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_8;
  }
  id v15 = objc_msgSend(v14, sel_getCROutputRegion);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  long long v16 = 0uLL;
  if (!v15)
  {
LABEL_9:
    char v23 = 1;
    long long v21 = 0uLL;
    long long v22 = 0uLL;
    goto LABEL_10;
  }
  id v17 = objc_msgSend(v15, sel_originalBoundingQuad, 0.0);

  if (v17)
  {
    objc_msgSend(v15, sel_boundingQuadHomography);
    long long v25 = v19;
    long long v26 = v18;
    long long v24 = v20;

    long long v22 = v24;
    long long v21 = v25;
    long long v16 = v26;
    char v23 = 0;
  }
  else
  {

    char v23 = 1;
    long long v21 = 0uLL;
    long long v22 = 0uLL;
    long long v16 = 0uLL;
  }
LABEL_10:
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v21;
  *(_OWORD *)(a1 + 32) = v22;
  *(unsigned char *)(a1 + 48) = v23;
}

uint64_t RecognizedItem.baselineAngle.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DB1F10E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1F1190();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  __n128 v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v1, v6, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) == *MEMORY[0x1E4F45DF8])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    uint64_t v11 = (void *)sub_1DB1F10C0();
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    if (v12)
    {
      id v13 = objc_msgSend(v12, sel_getCROutputRegion);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v13)
      {
        id v14 = objc_msgSend(v13, sel_originalBoundingQuad);
        if (v14)
        {
          id v15 = v14;
          objc_msgSend(v14, sel_baselineAngle);
          uint64_t v17 = v16;

          return v17;
        }
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return 0;
}

uint64_t RecognizedItem.homographySize.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DB1F10E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1F1190();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  __n128 v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, v1, v6, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) == *MEMORY[0x1E4F45DF8])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    uint64_t v11 = (void *)sub_1DB1F10C0();
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    if (v12)
    {
      id v13 = objc_msgSend(v12, sel_getCROutputRegion);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v13)
      {
        id v14 = objc_msgSend(v13, sel_originalBoundingQuad);
        if (v14)
        {
          id v15 = v14;
          objc_msgSend(v14, sel_normalizationSize);
          double v17 = v16;

          *(double *)&uint64_t result = v17 * 0.25;
          return result;
        }
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  *(double *)&uint64_t result = 0.0;
  return result;
}

void sub_1DB1D43C0(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1DB1EF410();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t sub_1DB1D4430@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB1D44B0()
{
  return sub_1DB1EF920();
}

uint64_t sub_1DB1D452C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DB1D45A0()
{
  return sub_1DB1EF920();
}

uint64_t (*sub_1DB1D4610(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DB1EF900();
  return sub_1DB132758;
}

uint64_t sub_1DB1D469C()
{
  return sub_1DB13303C((uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1EBA4DD68);
}

uint64_t sub_1DB1D46B0(uint64_t a1)
{
  return sub_1DB1D4E44(a1, (uint64_t *)&unk_1EA905F70, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1EBA4DD68);
}

uint64_t (*sub_1DB1D46CC(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA905F70);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD68);
  sub_1DB1EF8E0();
  swift_endAccess();
  return sub_1DB13289C;
}

uint64_t sub_1DB1D47DC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DB1D4A0C(a1);
}

uint64_t sub_1DB1D47F0()
{
  return sub_1DB1D4A9C();
}

uint64_t sub_1DB1D4804()
{
  return sub_1DB1D4B20();
}

uint64_t sub_1DB1D4818()
{
  return sub_1DB1D4BA0();
}

uint64_t (*sub_1DB1D482C(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DB1EF900();
  return sub_1DB132758;
}

uint64_t sub_1DB1D48B8()
{
  return sub_1DB13303C((uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1EBA4E248);
}

uint64_t sub_1DB1D48CC(uint64_t a1)
{
  return sub_1DB1D4E44(a1, &qword_1EBA4D7C8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1EBA4E248);
}

uint64_t (*sub_1DB1D48E8(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7C8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  sub_1DB1EF8E0();
  swift_endAccess();
  return sub_1DB13289C;
}

uint64_t sub_1DB1D49F8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DB1D4A0C(a1);
}

uint64_t sub_1DB1D4A0C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB1D4A88()
{
  return sub_1DB1D4A9C();
}

uint64_t sub_1DB1D4A9C()
{
  return sub_1DB1EF920();
}

uint64_t sub_1DB1D4B0C()
{
  return sub_1DB1D4B20();
}

uint64_t sub_1DB1D4B20()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DB1D4B8C()
{
  return sub_1DB1D4BA0();
}

uint64_t sub_1DB1D4BA0()
{
  return sub_1DB1EF920();
}

uint64_t (*sub_1DB1D4C0C(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DB1EF900();
  return sub_1DB132758;
}

uint64_t sub_1DB1D4C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  double v16 = (char *)&v19 - v15;
  double v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v17((char *)&v19 - v15, a1, v9, v14);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1DB1EF8F0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t sub_1DB1D4E14()
{
  return sub_1DB13303C((uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1EBA4E248);
}

uint64_t sub_1DB1D4E28(uint64_t a1)
{
  return sub_1DB1D4E44(a1, &qword_1EBA4D7C8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1EBA4E248);
}

uint64_t sub_1DB1D4E44(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v8);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1DB1EF8F0();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_1DB1D4F74(void *a1))()
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7C8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  sub_1DB1EF8E0();
  swift_endAccess();
  return sub_1DB13289C;
}

double sub_1DB1D5084()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DB1D50CC()
{
  uint64_t v1 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream;
  if (*(void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for VisualTranslationStream();
    swift_allocObject();
    uint64_t v2 = sub_1DB1D2950();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t VisualTranslationObservable.__allocating_init()()
{
  return VisualTranslationObservable.init()();
}

uint64_t VisualTranslationObservable.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E260);
  sub_1DB1EF8D0();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v9, v8, v5);
  uint64_t v11 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels;
  *(void *)(v0 + v11) = sub_1DB0EED74(v10);
  uint64_t v12 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_translationInProgressModels;
  type metadata accessor for OngoingTranslationActor();
  uint64_t v13 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v13 + 112) = MEMORY[0x1E4FBC870];
  *(void *)(v0 + v12) = v13;
  uint64_t v14 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  v21[7] = 0;
  sub_1DB1EF8D0();
  uint64_t v15 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 32);
  v15(v14, v4, v1);
  uint64_t v16 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent;
  v21[6] = 0;
  sub_1DB1EF8D0();
  v15(v16, v4, v1);
  *(void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale) = 0x3FF0000000000000;
  double v17 = (void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *double v17 = 0;
  v17[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable____lazy_storage___stream) = 0;
  uint64_t v18 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest;
  uint64_t v19 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_release();
  return VisualTranslationErrorViewModel.init()();
}

uint64_t sub_1DB1D5458(uint64_t a1)
{
  uint64_t v116 = sub_1DB1EF570();
  unint64_t v118 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v4 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v106 - v9;
  uint64_t v11 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v114 = (uint64_t)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  double v115 = (char *)&v106 - v15;
  MEMORY[0x1F4188790](v16);
  double v113 = (char *)&v106 - v17;
  MEMORY[0x1F4188790](v18);
  long long v20 = (char *)&v106 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v117 = (uint64_t)&v106 - v22;
  uint64_t v119 = v1;
  char v23 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  uint64_t v24 = *v23;
  if (!*(void *)(*v23 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4E458);
  }
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_1DB1A8DE8(a1);
  if (v26)
  {
    sub_1DB1EB0E0(*(void *)(v24 + 56) + *(void *)(v12 + 72) * v25, (uint64_t)v10, type metadata accessor for VisualTranslationModel);
    uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    uint64_t v28 = v10;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    uint64_t v28 = v10;
    uint64_t v29 = 1;
  }
  double v112 = v27;
  v27(v28, v29, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4E458);
  }
  uint64_t v31 = v117;
  sub_1DB1EE0B0((uint64_t)v10, v117, type metadata accessor for VisualTranslationModel);
  uint64_t v32 = v31 + *(int *)(v11 + 20);
  long long v33 = *(_OWORD *)(v32 + 144);
  long long v151 = *(_OWORD *)(v32 + 128);
  long long v152 = v33;
  uint64_t v153 = *(void *)(v32 + 160);
  long long v34 = *(_OWORD *)(v32 + 80);
  long long v147 = *(_OWORD *)(v32 + 64);
  long long v148 = v34;
  long long v35 = *(_OWORD *)(v32 + 112);
  long long v149 = *(_OWORD *)(v32 + 96);
  long long v150 = v35;
  long long v36 = *(_OWORD *)(v32 + 48);
  long long v145 = *(_OWORD *)(v32 + 32);
  long long v146 = v36;
  long long v37 = *(_OWORD *)(v32 + 16);
  long long v143 = *(_OWORD *)v32;
  long long v144 = v37;
  uint64_t v38 = v31 + *(int *)(v11 + 24);
  sub_1DB1EF500();
  if (v39 <= 0.0)
  {
    double v111 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
    unint64_t v118 = (v118 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v111(v20, a1, v116);
    uint64_t v42 = &v20[*(int *)(v11 + 24)];
    uint64_t v43 = sub_1DB1EF520();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v42, v38, v43);
    uint64_t v44 = *(void *)(a1 + *(int *)(v11 + 28));
    uint64_t v45 = *(void *)(a1 + *(int *)(v11 + 32));
    char v46 = *(unsigned char *)(a1 + *(int *)(v11 + 36));
    char v47 = *(unsigned char *)(a1 + *(int *)(v11 + 40));
    uint64_t v48 = &v20[*(int *)(v11 + 20)];
    long long v49 = v152;
    *((_OWORD *)v48 + 8) = v151;
    *((_OWORD *)v48 + 9) = v49;
    *((void *)v48 + 20) = v153;
    long long v50 = v148;
    *((_OWORD *)v48 + 4) = v147;
    *((_OWORD *)v48 + 5) = v50;
    long long v51 = v150;
    *((_OWORD *)v48 + 6) = v149;
    *((_OWORD *)v48 + 7) = v51;
    long long v52 = v144;
    *(_OWORD *)uint64_t v48 = v143;
    *((_OWORD *)v48 + 1) = v52;
    long long v53 = v146;
    *((_OWORD *)v48 + 2) = v145;
    *((_OWORD *)v48 + 3) = v53;
    *(void *)&v20[*(int *)(v11 + 28)] = v44;
    *(void *)&v20[*(int *)(v11 + 32)] = v45;
    v20[*(int *)(v11 + 36)] = v46;
    v20[*(int *)(v11 + 40)] = v47;
    v20[*(int *)(v11 + 44)] = 0;
    swift_bridgeObjectRetain();
    uint64_t v40 = v111;
    unint64_t v41 = v118;
  }
  else
  {
    sub_1DB1EB0E0(a1, (uint64_t)v20, type metadata accessor for VisualTranslationModel);
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
    unint64_t v41 = (v118 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v54 = a1;
  unint64_t v55 = v116;
  double v111 = v40;
  v40(v4, v54, v116);
  sub_1DB1EB0E0((uint64_t)v20, (uint64_t)v7, type metadata accessor for VisualTranslationModel);
  v112(v7, 0, 1, v11);
  swift_beginAccess();
  sub_1DB1D33C0((uint64_t)v7, (uint64_t)v4);
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  uint64_t v56 = *(void *)(v132 + 16);
  if (!v56)
  {
LABEL_15:
    uint64_t v60 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v60);
    *(&v106 - 2) = v119;
    *(&v106 - 1) = (uint64_t)v20;
    sub_1DB1F0FB0();
    sub_1DB1EFD20();
    swift_release();
LABEL_23:
    sub_1DB1EA16C(v117, type metadata accessor for VisualTranslationModel);
    return sub_1DB1EA16C((uint64_t)v20, type metadata accessor for VisualTranslationModel);
  }
  unint64_t v118 = v41;
  unint64_t v57 = 0;
  unint64_t v58 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v59 = *(void *)(v12 + 72);
  while ((sub_1DB1EF540() & 1) == 0)
  {
    ++v57;
    v58 += v59;
    if (v56 == v57) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  if (v57 >= *(void *)(v132 + 16))
  {
    __break(1u);
LABEL_25:
    uint64_t result = sub_1DB18A38C(v55);
    unint64_t v55 = result;
    *(void *)uint64_t v11 = result;
    goto LABEL_21;
  }
  uint64_t v61 = v114;
  sub_1DB1EB0E0(v132 + v58, v114, type metadata accessor for VisualTranslationModel);
  swift_bridgeObjectRelease();
  uint64_t v62 = (uint64_t)v115;
  v111(v115, v61, v55);
  uint64_t v63 = v61 + *(int *)(v11 + 20);
  long long v64 = *(_OWORD *)(v63 + 144);
  long long v129 = *(_OWORD *)(v63 + 128);
  long long v130 = v64;
  uint64_t v131 = *(void *)(v63 + 160);
  long long v65 = *(_OWORD *)(v63 + 80);
  long long v125 = *(_OWORD *)(v63 + 64);
  long long v126 = v65;
  long long v66 = *(_OWORD *)(v63 + 112);
  long long v127 = *(_OWORD *)(v63 + 96);
  long long v128 = v66;
  long long v67 = *(_OWORD *)(v63 + 48);
  long long v123 = *(_OWORD *)(v63 + 32);
  long long v124 = v67;
  long long v68 = *(_OWORD *)(v63 + 16);
  long long v121 = *(_OWORD *)v63;
  long long v122 = v68;
  uint64_t v69 = *(int *)(v11 + 24);
  uint64_t v70 = v61 + v69;
  uint64_t v71 = v62 + v69;
  double v112 = (void (*)(char *, void, uint64_t, uint64_t))(v62 + v69);
  uint64_t v72 = sub_1DB1EF520();
  uint64_t v73 = *(void *)(v72 - 8);
  double v109 = *(void (**)(uint64_t, uint64_t))(v73 + 16);
  uint64_t v110 = v72;
  uint64_t v108 = v73 + 16;
  v109(v71, v70);
  uint64_t v74 = *(void *)&v20[*(int *)(v11 + 28)];
  uint64_t v75 = *(void *)&v20[*(int *)(v11 + 32)];
  char v76 = v20[*(int *)(v11 + 36)];
  char v77 = v20[*(int *)(v11 + 40)];
  uint64_t v78 = v62 + *(int *)(v11 + 20);
  long long v79 = v130;
  *(_OWORD *)(v78 + 128) = v129;
  *(_OWORD *)(v78 + 144) = v79;
  *(void *)(v78 + 160) = v131;
  long long v80 = v126;
  *(_OWORD *)(v78 + 64) = v125;
  *(_OWORD *)(v78 + 80) = v80;
  long long v81 = v128;
  *(_OWORD *)(v78 + 96) = v127;
  *(_OWORD *)(v78 + 112) = v81;
  long long v82 = v122;
  *(_OWORD *)uint64_t v78 = v121;
  *(_OWORD *)(v78 + 16) = v82;
  long long v83 = v124;
  *(_OWORD *)(v78 + 32) = v123;
  *(_OWORD *)(v78 + 48) = v83;
  uint64_t v107 = *(int *)(v11 + 28);
  *(void *)(v62 + v107) = v74;
  uint64_t v106 = *(int *)(v11 + 32);
  *(void *)(v62 + v106) = v75;
  uint64_t v84 = *(int *)(v11 + 36);
  *(unsigned char *)(v62 + v84) = v76;
  uint64_t v85 = *(int *)(v11 + 40);
  *(unsigned char *)(v62 + v85) = v77;
  *(unsigned char *)(v62 + *(int *)(v11 + 44)) = 0;
  swift_bridgeObjectRetain();
  sub_1DB1EA16C(v61, type metadata accessor for VisualTranslationModel);
  uint64_t v86 = &v20[*(int *)(v11 + 20)];
  long long v87 = *((_OWORD *)v86 + 9);
  long long v140 = *((_OWORD *)v86 + 8);
  long long v141 = v87;
  uint64_t v142 = *((void *)v86 + 20);
  long long v88 = *((_OWORD *)v86 + 5);
  long long v136 = *((_OWORD *)v86 + 4);
  long long v137 = v88;
  long long v89 = *((_OWORD *)v86 + 7);
  long long v138 = *((_OWORD *)v86 + 6);
  long long v139 = v89;
  long long v90 = *((_OWORD *)v86 + 3);
  long long v134 = *((_OWORD *)v86 + 2);
  long long v135 = v90;
  long long v91 = *((_OWORD *)v86 + 1);
  long long v132 = *(_OWORD *)v86;
  long long v133 = v91;
  uint64_t v92 = &v20[*(int *)(v11 + 24)];
  sub_1DB1EF500();
  if (v93 <= 0.0)
  {
    uint64_t v94 = (uint64_t)v113;
    v111(v113, v62, v116);
    ((void (*)(uint64_t, char *, uint64_t))v109)(v94 + *(int *)(v11 + 24), v92, v110);
    uint64_t v95 = *(void *)(v62 + v107);
    uint64_t v96 = *(void *)(v62 + v106);
    char v97 = *(unsigned char *)(v62 + v84);
    char v98 = *(unsigned char *)(v62 + v85);
    uint64_t v12 = v94;
    uint64_t v99 = v94 + *(int *)(v11 + 20);
    long long v100 = v133;
    *(_OWORD *)uint64_t v99 = v132;
    *(_OWORD *)(v99 + 16) = v100;
    long long v101 = v137;
    *(_OWORD *)(v99 + 64) = v136;
    *(_OWORD *)(v99 + 80) = v101;
    long long v102 = v135;
    *(_OWORD *)(v99 + 32) = v134;
    *(_OWORD *)(v99 + 48) = v102;
    *(void *)(v99 + 160) = v142;
    long long v103 = v141;
    *(_OWORD *)(v99 + 128) = v140;
    *(_OWORD *)(v99 + 144) = v103;
    long long v104 = v139;
    *(_OWORD *)(v99 + 96) = v138;
    *(_OWORD *)(v99 + 112) = v104;
    *(void *)(v94 + *(int *)(v11 + 28)) = v95;
    *(void *)(v94 + *(int *)(v11 + 32)) = v96;
    *(unsigned char *)(v94 + *(int *)(v11 + 36)) = v97;
    *(unsigned char *)(v94 + *(int *)(v11 + 40)) = v98;
    *(unsigned char *)(v94 + *(int *)(v11 + 44)) = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = (uint64_t)v113;
    sub_1DB1EB0E0(v62, (uint64_t)v113, type metadata accessor for VisualTranslationModel);
  }
  sub_1DB1EA16C(v62, type metadata accessor for VisualTranslationModel);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v59 = sub_1DB1EF900();
  uint64_t v11 = (uint64_t)v105;
  unint64_t v55 = *v105;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v11 = v55;
  if ((result & 1) == 0) {
    goto LABEL_25;
  }
LABEL_21:
  if (v57 < *(void *)(v55 + 16))
  {
    sub_1DB1EE524(v12, v55 + v58);
    ((void (*)(uint64_t *, void))v59)(&v120, 0);
    swift_release();
    swift_release();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB1D5EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DB1EB0E0(a2, (uint64_t)v6, type metadata accessor for VisualTranslationModel);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v7 = (void (*)(unsigned char *, void))sub_1DB1EF900();
  uint64_t v9 = v8;
  unint64_t v10 = *v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v9 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v10 = sub_1DB188C74(0, *(void *)(v10 + 16) + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    unint64_t v10 = sub_1DB188C74(v12 > 1, v13 + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  *(void *)(v10 + 16) = v13 + 1;
  sub_1DB1EE0B0((uint64_t)v6, v10+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, type metadata accessor for VisualTranslationModel);
  v7(v15, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_1DB1D60A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v1 = (void (*)(uint64_t *, void))sub_1DB1EF900();
  *uint64_t v2 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  v1(&v5, 0);
  swift_release();
  swift_release();
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  *uint64_t v3 = MEMORY[0x1E4FBC868];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1D6180(void *a1)
{
  uint64_t v107 = a1;
  uint64_t v100 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v106 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100 - 8);
  uint64_t v94 = (uint64_t)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v93 = (uint64_t)&v90 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v99 = (uint64_t)&v90 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v101 = (uint64_t)&v90 - v9;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906128);
  MEMORY[0x1F4188790](v108);
  uint64_t v96 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v105 = (char *)&v90 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v90 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v90 - v17;
  uint64_t v19 = (void *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  uint64_t v95 = v19;
  uint64_t v20 = *v19;
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v102 = v20 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v103 = (unint64_t)(v22 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v109 = v20;
  swift_bridgeObjectRetain();
  int64_t v25 = 0;
  char v97 = a1;
  char v98 = v18;
  if (v24) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v27 = v25 + 1;
  if (!__OFADD__(v25, 1))
  {
    if (v27 < v103)
    {
      unint64_t v28 = *(void *)(v102 + 8 * v27);
      int64_t v29 = v25 + 1;
      if (v28) {
        goto LABEL_21;
      }
      int64_t v29 = v25 + 2;
      if (v25 + 2 >= v103) {
        goto LABEL_41;
      }
      unint64_t v28 = *(void *)(v102 + 8 * v29);
      if (v28) {
        goto LABEL_21;
      }
      int64_t v29 = v25 + 3;
      if (v25 + 3 >= v103) {
        goto LABEL_41;
      }
      unint64_t v28 = *(void *)(v102 + 8 * v29);
      if (v28)
      {
LABEL_21:
        uint64_t v111 = (v28 - 1) & v28;
        int64_t v112 = v29;
        for (unint64_t i = __clz(__rbit64(v28)) + (v29 << 6); ; unint64_t i = __clz(__rbit64(v24)) | (v25 << 6))
        {
          uint64_t v31 = v109;
          uint64_t v32 = *(void *)(v109 + 48);
          uint64_t v33 = sub_1DB1EF570();
          uint64_t v34 = *(void *)(v33 - 8);
          uint64_t v35 = v34;
          uint64_t v104 = *(void *)(v34 + 72);
          long long v36 = *(void (**)(void))(v34 + 16);
          ((void (*)(char *, unint64_t, uint64_t))v36)(v18, v32 + v104 * i, v33);
          uint64_t v37 = *(void *)(v31 + 56);
          uint64_t v110 = *(void *)(v106 + 72);
          uint64_t v38 = v108;
          uint64_t v39 = (uint64_t)&v18[*(int *)(v108 + 48)];
          sub_1DB1EB0E0(v37 + v110 * i, v39, type metadata accessor for VisualTranslationModel);
          uint64_t v40 = (uint64_t)&v15[*(int *)(v38 + 48)];
          (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v15, v18, v33);
          sub_1DB1EE0B0(v39, v40, type metadata accessor for VisualTranslationModel);
          unint64_t v41 = v105;
          uint64_t v42 = (uint64_t)&v105[*(int *)(v38 + 48)];
          ((void (*)(char *, char *, uint64_t))v36)(v105, v15, v33);
          uint64_t v43 = (uint64_t)v41;
          sub_1DB1EB0E0(v40, v42, type metadata accessor for VisualTranslationModel);
          uint64_t v44 = v107;
          if (!v107[2]) {
            break;
          }
          unint64_t v45 = sub_1DB1A8DE8(v43);
          if ((v46 & 1) == 0) {
            break;
          }
          uint64_t v47 = v43;
          uint64_t v48 = v99;
          sub_1DB1EB0E0(v44[7] + v45 * v110, v99, type metadata accessor for VisualTranslationModel);
          uint64_t v49 = v101;
          sub_1DB1EE0B0(v48, v101, type metadata accessor for VisualTranslationModel);
          sub_1DB1EA16C(v42, type metadata accessor for VisualTranslationModel);
          long long v50 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
          v50(v47, v33);
          long long v51 = (int *)v100;
          if (*(unsigned char *)(v49 + *(int *)(v100 + 44)))
          {
            sub_1DB1EA16C(v49, type metadata accessor for VisualTranslationModel);
            sub_1DB0E8BD4((uint64_t)v15, &qword_1EA906128);
            uint64_t v18 = v98;
LABEL_6:
            int64_t v25 = v112;
            unint64_t v24 = v111;
            if (!v111) {
              goto LABEL_8;
            }
            goto LABEL_7;
          }
          uint64_t v52 = v96 + *(int *)(v108 + 48);
          v36();
          uint64_t v92 = v52;
          sub_1DB1EB0E0(v40, v52, type metadata accessor for VisualTranslationModel);
          uint64_t v53 = v49 + v51[5];
          long long v54 = *(_OWORD *)(v53 + 144);
          long long v122 = *(_OWORD *)(v53 + 128);
          long long v123 = v54;
          uint64_t v124 = *(void *)(v53 + 160);
          long long v55 = *(_OWORD *)(v53 + 80);
          long long v118 = *(_OWORD *)(v53 + 64);
          long long v119 = v55;
          long long v56 = *(_OWORD *)(v53 + 112);
          long long v120 = *(_OWORD *)(v53 + 96);
          long long v121 = v56;
          long long v57 = *(_OWORD *)(v53 + 48);
          long long v116 = *(_OWORD *)(v53 + 32);
          long long v117 = v57;
          long long v58 = *(_OWORD *)v53;
          long long v115 = *(_OWORD *)(v53 + 16);
          long long v114 = v58;
          uint64_t v59 = v49 + v51[6];
          sub_1DB1EF500();
          uint64_t v61 = v93;
          if (v60 <= 0.0)
          {
            ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v93, v40, v33);
            uint64_t v91 = v61 + v51[6];
            uint64_t v62 = sub_1DB1EF520();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v91, v59, v62);
            uint64_t v63 = *(void *)(v40 + v51[7]);
            uint64_t v64 = *(void *)(v40 + v51[8]);
            char v65 = *(unsigned char *)(v40 + v51[9]);
            char v66 = *(unsigned char *)(v40 + v51[10]);
            uint64_t v67 = v61 + v51[5];
            long long v68 = v123;
            *(_OWORD *)(v67 + 128) = v122;
            *(_OWORD *)(v67 + 144) = v68;
            *(void *)(v67 + 160) = v124;
            long long v69 = v119;
            *(_OWORD *)(v67 + 64) = v118;
            *(_OWORD *)(v67 + 80) = v69;
            long long v70 = v121;
            *(_OWORD *)(v67 + 96) = v120;
            *(_OWORD *)(v67 + 112) = v70;
            long long v71 = v115;
            *(_OWORD *)uint64_t v67 = v114;
            *(_OWORD *)(v67 + 16) = v71;
            long long v72 = v117;
            *(_OWORD *)(v67 + 32) = v116;
            *(_OWORD *)(v67 + 48) = v72;
            *(void *)(v61 + v51[7]) = v63;
            *(void *)(v61 + v51[8]) = v64;
            *(unsigned char *)(v61 + v51[9]) = v65;
            *(unsigned char *)(v61 + v51[10]) = v66;
            *(unsigned char *)(v61 + v51[11]) = 0;
            swift_bridgeObjectRetain();
          }
          else
          {
            sub_1DB1EB0E0(v40, v93, type metadata accessor for VisualTranslationModel);
          }
          uint64_t v18 = v98;
          sub_1DB1EE0B0(v61, v94, type metadata accessor for VisualTranslationModel);
          uint64_t v73 = v97;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          double v113 = v73;
          unint64_t v76 = sub_1DB1A8DE8(v96);
          uint64_t v77 = v73[2];
          BOOL v78 = (v75 & 1) == 0;
          uint64_t v79 = v77 + v78;
          if (__OFADD__(v77, v78)) {
            goto LABEL_44;
          }
          if (v73[3] >= v79)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              char v88 = v75;
              sub_1DB0F9CAC();
              LOBYTE(v75) = v88;
            }
          }
          else
          {
            LODWORD(v97) = v75;
            sub_1DB0F8720(v79, isUniquelyReferenced_nonNull_native);
            unint64_t v80 = sub_1DB1A8DE8(v96);
            int v81 = v75 & 1;
            LOBYTE(v75) = (_BYTE)v97;
            if ((v97 & 1) != v81) {
              goto LABEL_46;
            }
            unint64_t v76 = v80;
          }
          uint64_t v82 = v110;
          long long v83 = v113;
          if (v75)
          {
            char v97 = v113;
            sub_1DB1EE524(v94, v113[7] + v76 * v110);
          }
          else
          {
            v113[(v76 >> 6) + 8] |= 1 << v76;
            ((void (*)(unint64_t, uint64_t, uint64_t))v36)(v83[6] + v76 * v104, v96, v33);
            sub_1DB1EE0B0(v94, v83[7] + v76 * v82, type metadata accessor for VisualTranslationModel);
            uint64_t v84 = v83[2];
            BOOL v85 = __OFADD__(v84, 1);
            uint64_t v86 = v84 + 1;
            if (v85) {
              goto LABEL_45;
            }
            v83[2] = v86;
            char v97 = v113;
          }
          int64_t v25 = v112;
          unint64_t v24 = v111;
          uint64_t v87 = v92;
          swift_bridgeObjectRelease();
          v50(v96, v33);
          sub_1DB1EA16C(v101, type metadata accessor for VisualTranslationModel);
          sub_1DB0E8BD4((uint64_t)v15, &qword_1EA906128);
          sub_1DB1EA16C(v87, type metadata accessor for VisualTranslationModel);
          if (!v24) {
            goto LABEL_8;
          }
LABEL_7:
          uint64_t v111 = (v24 - 1) & v24;
          int64_t v112 = v25;
        }
        sub_1DB0E8BD4((uint64_t)v15, &qword_1EA906128);
        sub_1DB1EA16C(v42, type metadata accessor for VisualTranslationModel);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v43, v33);
        goto LABEL_6;
      }
      uint64_t v30 = v25 + 4;
      if (v25 + 4 < v103)
      {
        unint64_t v28 = *(void *)(v102 + 8 * v30);
        if (v28)
        {
          int64_t v29 = v25 + 4;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v29 = v30 + 1;
          if (__OFADD__(v30, 1)) {
            goto LABEL_43;
          }
          if (v29 >= v103) {
            break;
          }
          unint64_t v28 = *(void *)(v102 + 8 * v29);
          ++v30;
          if (v28) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_41:
    swift_release();
    *uint64_t v95 = v97;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1DB1F1E00();
  __break(1u);
  return result;
}

uint64_t sub_1DB1D6C3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v24 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DB28);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - v12;
  if (qword_1EA903538 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1DB1EF810();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EA90F228);
  uint64_t v15 = sub_1DB1EF7F0();
  os_log_type_t v16 = sub_1DB1F1730();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1DB0DC000, v15, v16, "User confirmed first use consent, continuing visual translation", v17, 2u);
    MEMORY[0x1E018CA60](v17, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  char v25 = 0;
  swift_retain();
  sub_1DB1EF920();
  uint64_t v18 = v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest;
  swift_beginAccess();
  sub_1DB0E8B70(v18, (uint64_t)v6, &qword_1EBA4DB28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4DB28);
  }
  sub_1DB1EE0B0((uint64_t)v6, (uint64_t)v13, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
  uint64_t v20 = sub_1DB1F1590();
  uint64_t v21 = (uint64_t)v24;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v24, 1, 1, v20);
  sub_1DB1EB0E0((uint64_t)v13, (uint64_t)v10, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  void v23[2] = 0;
  v23[3] = 0;
  v23[4] = v1;
  sub_1DB1EE0B0((uint64_t)v10, (uint64_t)v23 + v22, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
  swift_retain();
  sub_1DB1320F4(v21, (uint64_t)&unk_1EA9060F8, (uint64_t)v23);
  swift_release();
  return sub_1DB1EA16C((uint64_t)v13, type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
}

uint64_t sub_1DB1D7020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  uint64_t v6 = sub_1DB1EF570();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1D70E4, 0, 0);
}

uint64_t sub_1DB1D70E4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 32);
  uint64_t v2 = *v1;
  uint64_t v3 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  uint64_t v4 = (uint64_t)v1 + *(int *)(v3 + 20);
  uint64_t v5 = (uint64_t)v1 + *(int *)(v3 + 24);
  *(unsigned char *)(v0 + 88) = 1;
  sub_1DB1EF560();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1DB1D71CC;
  uint64_t v7 = *(void *)(v0 + 56);
  return sub_1DB1D776C(v2, v4, v5, (unsigned char *)(v0 + 88), v7);
}

uint64_t sub_1DB1D71CC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[6] + 8))(v4[7], v4[5]);
    uint64_t v5 = sub_1DB1D738C;
  }
  else
  {
    uint64_t v7 = v4[6];
    uint64_t v6 = v4[7];
    uint64_t v8 = v4[5];
    v4[10] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v5 = sub_1DB1D7320;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DB1D7320()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 80);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB1D738C()
{
  **(void **)(v0 + 16) = 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB1D73FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v7 = sub_1DB1EF570();
  *(void *)(v5 + 48) = v7;
  *(void *)(v5 + 56) = *(void *)(v7 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  *(unsigned char *)(v5 + 89) = *a4;
  return MEMORY[0x1F4188298](sub_1DB1D74CC, 0, 0);
}

uint64_t sub_1DB1D74CC()
{
  *(unsigned char *)(v0 + 88) = *(unsigned char *)(v0 + 89);
  sub_1DB1EF560();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DB1D7580;
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  return sub_1DB1D776C(v5, v4, v3, (unsigned char *)(v0 + 88), v2);
}

uint64_t sub_1DB1D7580(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[7] + 8))(v4[8], v4[6]);
    return MEMORY[0x1F4188298](sub_1DB1D7708, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v4[7] + 8))(v4[8], v4[6]);
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(uint64_t))v4[1];
    return v5(a1);
  }
}

uint64_t sub_1DB1D7708()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB1D776C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  *(void *)(v6 + 432) = a5;
  *(void *)(v6 + 440) = v5;
  *(void *)(v6 + 416) = a2;
  *(void *)(v6 + 424) = a3;
  *(void *)(v6 + 408) = a1;
  type metadata accessor for TextDiagnosticsModel();
  *(void *)(v6 + 448) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for VisualTranslationModel(0);
  *(void *)(v6 + 456) = v8;
  *(void *)(v6 + 464) = *(void *)(v8 - 8);
  *(void *)(v6 + 472) = swift_task_alloc();
  *(void *)(v6 + 480) = swift_task_alloc();
  *(void *)(v6 + 488) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  *(void *)(v6 + 496) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD8);
  *(void *)(v6 + 504) = v9;
  *(void *)(v6 + 512) = *(void *)(v9 - 8);
  *(void *)(v6 + 520) = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD0);
  *(void *)(v6 + 528) = v10;
  *(void *)(v6 + 536) = *(void *)(v10 - 8);
  *(void *)(v6 + 544) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DB28);
  *(void *)(v6 + 552) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  *(void *)(v6 + 560) = swift_task_alloc();
  *(void *)(v6 + 568) = swift_task_alloc();
  *(void *)(v6 + 576) = swift_task_alloc();
  *(void *)(v6 + 584) = swift_task_alloc();
  *(unsigned char *)(v6 + 658) = *a4;
  return MEMORY[0x1F4188298](sub_1DB1D7A00, 0, 0);
}

uint64_t sub_1DB1D7A00()
{
  char v46 = v0;
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[73];
  uint64_t v2 = v0[72];
  uint64_t v4 = v0[52];
  uint64_t v3 = v0[53];
  uint64_t v5 = sub_1DB1EF810();
  v0[74] = v5;
  v0[75] = __swift_project_value_buffer(v5, (uint64_t)qword_1EBA4F408);
  sub_1DB0E8B70(v4, v1, &qword_1EBA4E570);
  sub_1DB0E8B70(v3, v2, &qword_1EBA4E570);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1DB1EF7F0();
  os_log_type_t v7 = sub_1DB1F1730();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v43 = v7;
    unint64_t v8 = v0[51];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v45 = v42;
    *(_DWORD *)uint64_t v9 = 134349570;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1DB1F1BB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v11 = v0[73];
    uint64_t v12 = v0[71];
    swift_bridgeObjectRelease();
    v0[48] = v10;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_1DB0E8B70(v11, v12, &qword_1EBA4E570);
    uint64_t v13 = sub_1DB1EF6B0();
    uint64_t v14 = *(void *)(v13 - 8);
    unint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    int v15 = v41(v12, 1, v13);
    uint64_t v16 = v0[71];
    uint64_t v44 = v6;
    uint64_t v40 = v14;
    if (v15 == 1)
    {
      sub_1DB0E8BD4(v16, &qword_1EBA4E570);
      uint64_t v17 = 0;
      uint64_t v18 = 0;
    }
    else
    {
      v0[35] = sub_1DB1EF590();
      v0[36] = v21;
      v0[33] = 45;
      v0[34] = 0xE100000000000000;
      v0[27] = 95;
      v0[28] = 0xE100000000000000;
      sub_1DB0F0708();
      uint64_t v17 = sub_1DB1F1950();
      uint64_t v18 = v22;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
    }
    uint64_t v23 = v0[73];
    uint64_t v24 = v0[72];
    uint64_t v25 = v0[70];
    v0[25] = v17;
    v0[26] = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA905F88);
    uint64_t v26 = sub_1DB1F1300();
    v0[49] = sub_1DB11F638(v26, v27, &v45);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4(v23, &qword_1EBA4E570);
    *(_WORD *)(v9 + 22) = 2082;
    sub_1DB0E8B70(v24, v25, &qword_1EBA4E570);
    int v28 = v41(v25, 1, v13);
    uint64_t v29 = v0[70];
    if (v28 == 1)
    {
      sub_1DB0E8BD4(v0[70], &qword_1EBA4E570);
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    else
    {
      v0[41] = sub_1DB1EF590();
      v0[42] = v32;
      v0[39] = 45;
      v0[40] = 0xE100000000000000;
      v0[37] = 95;
      v0[38] = 0xE100000000000000;
      sub_1DB0F0708();
      uint64_t v30 = sub_1DB1F1950();
      uint64_t v31 = v33;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v29, v13);
    }
    uint64_t v34 = v0[72];
    v0[43] = v30;
    v0[44] = v31;
    uint64_t v35 = sub_1DB1F1300();
    v0[46] = sub_1DB11F638(v35, v36, &v45);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4(v34, &qword_1EBA4E570);
    _os_log_impl(&dword_1DB0DC000, v44, v43, "Got request to translate %{public}ld observations; sourceLocale: %{public}s; targetLocale: %{public}s",
      (uint8_t *)v9,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v42, -1, -1);
    MEMORY[0x1E018CA60](v9, -1, -1);
  }
  else
  {
    uint64_t v19 = v0[73];
    uint64_t v20 = v0[72];
    swift_bridgeObjectRelease_n();
    sub_1DB0E8BD4(v19, &qword_1EBA4E570);
    sub_1DB0E8BD4(v20, &qword_1EBA4E570);
  }
  v0[76] = _s13TranslationUI06VisualA5ModelV6models4from5group12sourceLocale06targetI0SayACGSaySo27VNRecognizedTextObservationCG_Sb10Foundation0I0VSgAPtFZ_0(v0[51], 1, v0[52], v0[53]);
  v0[77] = sub_1DB1F1570();
  v0[78] = sub_1DB1F1560();
  uint64_t v38 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1D7FF0, v38, v37);
}

uint64_t sub_1DB1D7FF0()
{
  uint64_t v1 = *(void *)(v0 + 440);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v2 = (void (*)(uint64_t, void))sub_1DB1EF900();
  *uint64_t v3 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  v2(v0 + 120, 0);
  swift_release();
  swift_release();
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  *uint64_t v4 = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DB1D8118, 0, 0);
}

uint64_t sub_1DB1D8118()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = (char *)v0 + 657;
  v0[3] = sub_1DB1D8224;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DB1D35E0;
  v0[13] = &block_descriptor_1;
  v0[14] = v2;
  objc_msgSend(v1, sel_shouldPresentSystemFirstUseConsentWithDedicatedMachPort_completion_, 1, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB1D8224()
{
  return MEMORY[0x1F4188298](sub_1DB1D8304, 0, 0);
}

uint64_t sub_1DB1D8304()
{
  uint64_t v23 = v0;
  if (*(unsigned char *)(v0 + 657) == 1)
  {
    swift_bridgeObjectRelease();
    if (qword_1EA903538 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(*(void *)(v0 + 592), (uint64_t)qword_1EA90F228);
    uint64_t v1 = sub_1DB1EF7F0();
    os_log_type_t v2 = sub_1DB1F16F0();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1DB0DC000, v1, v2, "Present first use experience and delay translation", v3, 2u);
      MEMORY[0x1E018CA60](v3, -1, -1);
    }
    uint64_t v4 = *(void **)(v0 + 552);
    uint64_t v5 = *(void *)(v0 + 440);
    uint64_t v7 = *(void *)(v0 + 416);
    uint64_t v6 = *(void *)(v0 + 424);
    uint64_t v8 = *(void *)(v0 + 408);

    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 656) = 1;
    swift_retain();
    sub_1DB1EF920();
    uint64_t v9 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
    sub_1DB0E8B70(v7, (uint64_t)v4 + *(int *)(v9 + 20), &qword_1EBA4E570);
    sub_1DB0E8B70(v6, (uint64_t)v4 + *(int *)(v9 + 24), &qword_1EBA4E570);
    *uint64_t v4 = v8;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
    uint64_t v10 = v5 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1DB1EEBD0((uint64_t)v4, v10, &qword_1EBA4DB28);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v12 = MEMORY[0x1E4FBC860];
    return v11(v12);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 608);
    char v15 = *(unsigned char *)(v0 + 658);
    uint64_t v16 = *(void *)(v0 + 520);
    uint64_t v17 = *(void *)(v0 + 504);
    uint64_t v18 = *(void *)(v0 + 512);
    *(void *)(v0 + 376) = MEMORY[0x1E4FBC860];
    type metadata accessor for VisualTranslationService();
    char v22 = v15;
    static VisualTranslationService.translate(models:strictLocales:taskHint:selfLoggingInvocationId:)(v14, 0, &v22, v16);
    swift_bridgeObjectRelease();
    sub_1DB1F15C0();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1DB1D8708;
    uint64_t v20 = *(void *)(v0 + 528);
    uint64_t v21 = *(void *)(v0 + 496);
    return MEMORY[0x1F4187ED8](v21, 0, 0, v20, v0 + 360);
  }
}

uint64_t sub_1DB1D8708()
{
  *(void *)(*(void *)v1 + 640) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_1DB1D9000;
  }
  else
  {
    os_log_type_t v2 = sub_1DB1D8824;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB1D8824()
{
  uint64_t v40 = v0;
  uint64_t v1 = *(void *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 456);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 464) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 536) + 8))(*(void *)(v0 + 544), *(void *)(v0 + 528));
    uint64_t v37 = *(void *)(v0 + 376);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v37);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 480);
    uint64_t v6 = *(void *)(v0 + 488);
    sub_1DB1EE0B0(v1, v6, type metadata accessor for VisualTranslationModel);
    sub_1DB1EB0E0(v6, v5, type metadata accessor for VisualTranslationModel);
    uint64_t v7 = (objc_class *)type metadata accessor for VisualTranslationResult(0);
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    uint64_t v9 = &v8[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_uuid];
    uint64_t v10 = sub_1DB1EF570();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v5, v10);
    uint64_t v11 = *(void *)(v5 + *(int *)(v2 + 28));
    uint64_t v12 = v8;
    uint64_t v13 = Array<A>.targetParagraph.getter(v11);
    uint64_t v14 = (uint64_t *)&v12[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_string];
    *uint64_t v14 = v13;
    v14[1] = v15;
    v12[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_isPassthrough] = sub_1DB1B7CCC() & 1;
    uint64_t v16 = (_OWORD *)(v5 + *(int *)(v2 + 20));
    *(_OWORD *)&v12[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topLeft] = v16[1];
    *(_OWORD *)&v12[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_topRight] = v16[2];
    *(_OWORD *)&v12[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomLeft] = v16[3];
    *(_OWORD *)&v12[OBJC_IVAR____TtC13TranslationUI23VisualTranslationResult_bottomRight] = v16[4];

    *(void *)(v0 + 232) = v12;
    *(void *)(v0 + 240) = v7;
    objc_msgSendSuper2((objc_super *)(v0 + 232), sel_init);
    uint64_t v17 = sub_1DB1EA16C(v5, type metadata accessor for VisualTranslationModel);
    MEMORY[0x1E018B470](v17);
    if (*(void *)((*(void *)(v0 + 376) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 376) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1DB1F14D0();
    sub_1DB1F14F0();
    sub_1DB1F14C0();
    if (sub_1DB1B73CC())
    {
      *(void *)(v0 + 648) = sub_1DB1F1560();
      uint64_t v19 = sub_1DB1F1510();
      return MEMORY[0x1F4188298](sub_1DB1D8E60, v19, v18);
    }
    else
    {
      sub_1DB1EB0E0(*(void *)(v0 + 488), *(void *)(v0 + 472), type metadata accessor for VisualTranslationModel);
      uint64_t v20 = sub_1DB1EF7F0();
      os_log_type_t v21 = sub_1DB1F1700();
      BOOL v22 = os_log_type_enabled(v20, v21);
      uint64_t v23 = *(void *)(v0 + 488);
      if (v22)
      {
        uint64_t v25 = *(void *)(v0 + 472);
        uint64_t v24 = *(void *)(v0 + 480);
        uint64_t v26 = *(void *)(v0 + 448);
        uint64_t v38 = *(void *)(v0 + 488);
        unint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v39 = v28;
        *(_DWORD *)unint64_t v27 = 136315138;
        sub_1DB1EB0E0(v25, v24, type metadata accessor for VisualTranslationModel);
        TextDiagnosticsModel.init(model:)(v24, v26);
        *(void *)(v0 + 248) = TextDiagnosticsModel.json.getter();
        *(void *)(v0 + 256) = v29;
        sub_1DB1F13A0();
        uint64_t v30 = *(void *)(v0 + 248);
        unint64_t v31 = *(void *)(v0 + 256);
        sub_1DB1EA16C(v26, (uint64_t (*)(void))type metadata accessor for TextDiagnosticsModel);
        *(void *)(v0 + 400) = sub_1DB11F638(v30, v31, &v39);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        sub_1DB1EA16C(v25, type metadata accessor for VisualTranslationModel);
        _os_log_impl(&dword_1DB0DC000, v20, v21, "No translation for %s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v28, -1, -1);
        MEMORY[0x1E018CA60](v27, -1, -1);

        uint64_t v32 = v38;
      }
      else
      {
        uint64_t v33 = *(void *)(v0 + 472);

        sub_1DB1EA16C(v33, type metadata accessor for VisualTranslationModel);
        uint64_t v32 = v23;
      }
      sub_1DB1EA16C(v32, type metadata accessor for VisualTranslationModel);
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 632) = v34;
      void *v34 = v0;
      v34[1] = sub_1DB1D8708;
      uint64_t v35 = *(void *)(v0 + 528);
      uint64_t v36 = *(void *)(v0 + 496);
      return MEMORY[0x1F4187ED8](v36, 0, 0, v35, v0 + 360);
    }
  }
}

uint64_t sub_1DB1D8E60()
{
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 440);
  swift_release();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_1DB1F0FB0();
  sub_1DB1EFD20();
  swift_release();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1D8F34, 0, 0);
}

uint64_t sub_1DB1D8F34()
{
  sub_1DB1EA16C(v0[61], type metadata accessor for VisualTranslationModel);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[79] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DB1D8708;
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[62];
  return MEMORY[0x1F4187ED8](v3, 0, 0, v2, v0 + 45);
}

uint64_t sub_1DB1D9000()
{
  (*(void (**)(void, void))(v0[67] + 8))(v0[68], v0[66]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1DB1D9134(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v7 = sub_1DB1EF570();
  *(void *)(v5 + 48) = v7;
  *(void *)(v5 + 56) = *(void *)(v7 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  *(unsigned char *)(v5 + 81) = *a4;
  return MEMORY[0x1F4188298](sub_1DB1D9204, 0, 0);
}

uint64_t sub_1DB1D9204()
{
  *(unsigned char *)(v0 + 80) = *(unsigned char *)(v0 + 81);
  sub_1DB1EF560();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DB1D92B8;
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  return sub_1DB1D9410(v5, v4, v3, (unsigned char *)(v0 + 80), v2);
}

uint64_t sub_1DB1D92B8()
{
  uint64_t v1 = *(void *)(*v0 + 64);
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1DB1D9410(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  *(void *)(v6 + 264) = a5;
  *(void *)(v6 + 272) = v5;
  *(void *)(v6 + 248) = a2;
  *(void *)(v6 + 256) = a3;
  *(void *)(v6 + 240) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049E0);
  *(void *)(v6 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  *(void *)(v6 + 288) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for TextModel();
  *(void *)(v6 + 296) = v8;
  *(void *)(v6 + 304) = *(void *)(v8 - 8);
  *(void *)(v6 + 312) = swift_task_alloc();
  *(void *)(v6 + 320) = swift_task_alloc();
  uint64_t v9 = sub_1DB1EF570();
  *(void *)(v6 + 328) = v9;
  *(void *)(v6 + 336) = *(void *)(v9 - 8);
  *(void *)(v6 + 344) = swift_task_alloc();
  *(void *)(v6 + 352) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for VisualTranslationModel(0);
  *(void *)(v6 + 360) = v10;
  *(void *)(v6 + 368) = *(void *)(v10 - 8);
  *(void *)(v6 + 376) = swift_task_alloc();
  *(void *)(v6 + 384) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  *(void *)(v6 + 392) = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDB8);
  *(void *)(v6 + 400) = v11;
  *(void *)(v6 + 408) = *(void *)(v11 - 8);
  *(void *)(v6 + 416) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD8);
  *(void *)(v6 + 424) = v12;
  *(void *)(v6 + 432) = *(void *)(v12 - 8);
  *(void *)(v6 + 440) = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDD0);
  *(void *)(v6 + 448) = v13;
  *(void *)(v6 + 456) = *(void *)(v13 - 8);
  *(void *)(v6 + 464) = swift_task_alloc();
  uint64_t v14 = sub_1DB1EF6B0();
  *(void *)(v6 + 472) = v14;
  *(void *)(v6 + 480) = *(void *)(v14 - 8);
  *(void *)(v6 + 488) = swift_task_alloc();
  *(void *)(v6 + 496) = swift_task_alloc();
  *(unsigned char *)(v6 + 688) = *a4;
  return MEMORY[0x1F4188298](sub_1DB1D97E8, 0, 0);
}

uint64_t sub_1DB1D97E8()
{
  uint64_t v32 = v0;
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v30 = v0;
  uint64_t v1 = v0 + 30;
  uint64_t v3 = v0[61];
  uint64_t v2 = v0[62];
  uint64_t v4 = v0[59];
  uint64_t v5 = v0[60];
  uint64_t v7 = v0[31];
  uint64_t v6 = v0[32];
  uint64_t v8 = sub_1DB1EF810();
  v0[63] = __swift_project_value_buffer(v8, (uint64_t)qword_1EBA4F408);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9(v2, v7, v4);
  v9(v3, v6, v4);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1DB1EF7F0();
  os_log_type_t v11 = sub_1DB1F1700();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v14 = v1[31];
  uint64_t v13 = v1[32];
  uint64_t v16 = v1[29];
  uint64_t v15 = v1[30];
  uint64_t v17 = *v1;
  if (v12)
  {
    uint64_t v28 = v1[31];
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v31 = v29;
    *(_DWORD *)uint64_t v18 = 134218498;
    v30[27] = *(void *)(v17 + 16);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    sub_1DB1EB168((unint64_t *)&qword_1EA904868, MEMORY[0x1E4F27A78]);
    uint64_t v19 = sub_1DB1F1D80();
    v30[28] = sub_1DB11F638(v19, v20, &v31);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    os_log_type_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v21(v13, v16);
    *(_WORD *)(v18 + 22) = 2082;
    uint64_t v22 = sub_1DB1F1D80();
    v30[29] = sub_1DB11F638(v22, v23, &v31);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    v21(v28, v16);
    _os_log_impl(&dword_1DB0DC000, v10, v11, "Translate %ld items from source %{public}s to target %{public}s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v29, -1, -1);
    MEMORY[0x1E018CA60](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v24(v13, v16);
    v24(v14, v16);
  }
  v30[64] = sub_1DB1F1570();
  v30[65] = sub_1DB1F1560();
  uint64_t v26 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1D9B84, v26, v25);
}

uint64_t sub_1DB1D9B84()
{
  uint64_t v1 = v0[34];
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels;
  v0[66] = OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels;
  uint64_t v3 = (void *)(v1 + v2);
  swift_beginAccess();
  v0[67] = *v3;
  swift_bridgeObjectRetain();
  return MEMORY[0x1F4188298](sub_1DB1D9C28, 0, 0);
}

uint64_t sub_1DB1D9C28()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v15 = MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(sub_1DB1F1190() - 8);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1DB1BC6D8((uint64_t)&v15, v4, *(void (**)(char *, uint64_t, uint64_t))(v0 + 536), *(void *)(v0 + 248), *(void *)(v0 + 256));
      *(void *)(v0 + 568) = 0;
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v15;
    *(void *)(v0 + 544) = v15;
    uint64_t v7 = sub_1DB1EA1E8(v6);
    if (!v7)
    {
      *(void *)(v0 + 576) = sub_1DB1F1560();
      uint64_t v8 = sub_1DB1F1510();
      uint64_t v10 = v9;
      os_log_type_t v11 = sub_1DB1D9FE0;
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1DB1EA1E8(MEMORY[0x1E4FBC868]);
  if (v7)
  {
LABEL_7:
    *(void *)(v0 + 552) = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 560) = sub_1DB1F1560();
    uint64_t v8 = sub_1DB1F1510();
    uint64_t v10 = v12;
    os_log_type_t v11 = sub_1DB1D9E74;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 664) = sub_1DB1F1560();
  uint64_t v8 = sub_1DB1F1510();
  uint64_t v10 = v13;
  os_log_type_t v11 = sub_1DB1DB098;
LABEL_9:
  return MEMORY[0x1F4188298](v11, v8, v10);
}

uint64_t sub_1DB1D9E74()
{
  uint64_t v1 = v0[69];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[26] = v1;
  swift_retain();
  sub_1DB1EF920();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1DB1D9FE0()
{
  uint64_t v1 = *(void **)(v0 + 544);
  swift_release();
  sub_1DB1D6180(v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DB1DA060, 0, 0);
}

uint64_t sub_1DB1DA060()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905FA0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E260);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DB1DA158;
  uint64_t v4 = *(void *)(v0 + 272);
  return MEMORY[0x1F4187F28](v0 + 200, v1, v2, 0, 0, &unk_1EA905FB0, v4, v1);
}

uint64_t sub_1DB1DA158()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1DA254, 0, 0);
}

uint64_t sub_1DB1DA254()
{
  v0[74] = v0[25];
  v0[75] = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DA2E8, v2, v1);
}

uint64_t sub_1DB1DA2E8()
{
  uint64_t v1 = *(void *)(v0 + 592);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 192) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB1DA3AC, 0, 0);
}

uint64_t sub_1DB1DA3AC()
{
  v0[76] = *(void *)(v0[34] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_translationInProgressModels);
  v0[77] = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DA44C, v2, v1);
}

uint64_t sub_1DB1DA44C()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[34];
  swift_release();
  v0[78] = *(void *)(v2 + v1);
  swift_bridgeObjectRetain();
  return MEMORY[0x1F4188298](sub_1DB1DA4CC, 0, 0);
}

uint64_t sub_1DB1DA4CC()
{
  uint64_t v1 = v0[76];
  v0[79] = sub_1DB1E2DF8(v0[78], &qword_1EBA4E4D8, type metadata accessor for VisualTranslationModel, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1DB1E9498);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DB1DA578, v1, 0);
}

uint64_t sub_1DB1DA578()
{
  uint64_t v1 = v0[79];
  uint64_t v2 = v0[76];
  swift_retain();
  unint64_t v3 = sub_1DB1E9964(v1, v2);
  v0[80] = v3;
  swift_release();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v0[46];
    uint64_t v6 = v0[42];
    uint64_t v7 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = *(void *)(v5 + 72);
    uint64_t v8 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = v0[48];
      os_log_type_t v11 = (char *)v0[43];
      uint64_t v10 = v0[44];
      uint64_t v12 = v0[41];
      sub_1DB1EB0E0(v7, v9, type metadata accessor for VisualTranslationModel);
      (*v14)(v11, v9, v12);
      swift_beginAccess();
      sub_1DB1E52B0(v10, v11);
      (*v8)(v10, v12);
      swift_endAccess();
      sub_1DB1EA16C(v9, type metadata accessor for VisualTranslationModel);
      v7 += v15;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_release();
  return MEMORY[0x1F4188298](sub_1DB1DA74C, 0, 0);
}

uint64_t sub_1DB1DA74C()
{
  uint64_t v1 = *(void *)(v0 + 640);
  char v13 = *(unsigned char *)(v0 + 688);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v14 = *(void *)(v0 + 400);
  uint64_t v15 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = sub_1DB1D50CC();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v13;
  *(void *)(v8 + 40) = v6;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, *MEMORY[0x1E4FBD120], v14);
  sub_1DB1F1650();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v15);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 648) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1DB1DA8FC;
  uint64_t v10 = *(void *)(v0 + 448);
  uint64_t v11 = *(void *)(v0 + 392);
  return MEMORY[0x1F4187ED8](v11, 0, 0, v10, v0 + 176);
}

uint64_t sub_1DB1DA8FC()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1DB1DB248;
  }
  else {
    uint64_t v1 = sub_1DB1DAA0C;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1DB1DAA0C()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[45];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[46] + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[57] + 8))(v0[58], v0[56]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v0[47];
    sub_1DB1EE0B0(v1, v5, type metadata accessor for VisualTranslationModel);
    uint64_t v6 = *(void *)(v5 + *(int *)(v2 + 28));
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = v0[38];
      uint64_t v9 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v10 = *(void *)(v8 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v11 = v0[40];
        uint64_t v12 = v0[37];
        sub_1DB1EB0E0(v9, v11, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v13 = *(void *)(v11 + *(int *)(v12 + 44));
        uint64_t v14 = v0[40];
        if (v13) {
          break;
        }
        uint64_t v15 = v0[37];
        uint64_t v16 = (uint64_t *)(v14 + *(int *)(v15 + 24));
        uint64_t v18 = *v16;
        unint64_t v17 = v16[1];
        uint64_t v19 = v18 & 0xFFFFFFFFFFFFLL;
        if (!((v17 & 0x2000000000000000) != 0 ? HIBYTE(v17) & 0xF : v19)) {
          break;
        }
        uint64_t v21 = v0[59];
        uint64_t v22 = v0[60];
        uint64_t v23 = v0[36];
        sub_1DB0E8B70(v14 + *(int *)(v15 + 28), v23, &qword_1EBA4E570);
        LODWORD(v21) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21);
        sub_1DB0E8BD4(v23, &qword_1EBA4E570);
        uint64_t v14 = v0[40];
        if (v21 == 1) {
          break;
        }
        uint64_t v24 = v0[37];
        uint64_t v25 = (void *)(v14 + *(int *)(v24 + 32));
        unint64_t v26 = v25[1];
        if (!v26) {
          break;
        }
        uint64_t v27 = *v25 & 0xFFFFFFFFFFFFLL;
        if (!((v26 & 0x2000000000000000) != 0 ? HIBYTE(v26) & 0xF : v27)) {
          break;
        }
        uint64_t v29 = v0[39];
        sub_1DB1EB0E0(v0[40], v29, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v30 = *(void *)(v29 + *(int *)(v24 + 44));
        sub_1DB1EA16C(v29, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB1EA16C(v14, (uint64_t (*)(void))type metadata accessor for TextModel);
        if (v30) {
          goto LABEL_25;
        }
        v9 += v10;
        if (!--v7)
        {
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      uint64_t v33 = v0[39];
      sub_1DB1EB0E0(v14, v33, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB1EA16C(v33, (uint64_t (*)(void))type metadata accessor for TextModel);
      sub_1DB1EA16C(v14, (uint64_t (*)(void))type metadata accessor for TextModel);
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1DB1EA16C(v0[47], type metadata accessor for VisualTranslationModel);
      uint64_t v34 = (void *)swift_task_alloc();
      v0[81] = v34;
      void *v34 = v0;
      v34[1] = sub_1DB1DA8FC;
      uint64_t v35 = v0[56];
      uint64_t v36 = v0[49];
      return MEMORY[0x1F4187ED8](v36, 0, 0, v35, v0 + 22);
    }
    else
    {
LABEL_21:
      v0[82] = sub_1DB1F1560();
      uint64_t v32 = sub_1DB1F1510();
      return MEMORY[0x1F4188298](sub_1DB1DAE90, v32, v31);
    }
  }
}

uint64_t sub_1DB1DAE90()
{
  uint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 376);
  swift_release();
  sub_1DB1D5458(v2);
  return MEMORY[0x1F4188298](sub_1DB1DAF14, v1, 0);
}

uint64_t sub_1DB1DAF14()
{
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 280);
  swift_beginAccess();
  sub_1DB1E8B5C(v1, v2);
  sub_1DB0E8BD4(v2, &qword_1EA9049E0);
  swift_endAccess();
  return MEMORY[0x1F4188298](sub_1DB1DAFCC, 0, 0);
}

uint64_t sub_1DB1DAFCC()
{
  sub_1DB1EA16C(v0[47], type metadata accessor for VisualTranslationModel);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[81] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DB1DA8FC;
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[49];
  return MEMORY[0x1F4187ED8](v3, 0, 0, v2, v0 + 22);
}

uint64_t sub_1DB1DB098()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[34];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v3 = (void (*)(void *, void))sub_1DB1EF900();
  *uint64_t v4 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  v3(v0 + 2, 0);
  swift_release();
  swift_release();
  *(void *)(v2 + v1) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DB1DB248()
{
  (*(void (**)(void, void))(v0[57] + 8))(v0[58], v0[56]);
  uint64_t v1 = (void *)v0[22];
  v0[84] = v1;
  id v2 = v1;
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F1710();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = sub_1DB1EF410();
    v0[23] = v7;
    sub_1DB1F1910();
    *uint64_t v6 = v7;

    _os_log_impl(&dword_1DB0DC000, v3, v4, "Failed to translate in stream: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v6, -1, -1);
    MEMORY[0x1E018CA60](v5, -1, -1);
  }
  else
  {
  }
  uint64_t v8 = v0[76];

  return MEMORY[0x1F4188298](sub_1DB1DB3E8, v8, 0);
}

uint64_t sub_1DB1DB3E8()
{
  uint64_t v1 = *(void *)(v0 + 608);
  swift_beginAccess();
  *(void *)(v1 + 112) = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DB1DB474, 0, 0);
}

uint64_t sub_1DB1DB474()
{
  *(void *)(v0 + 680) = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DB500, v2, v1);
}

uint64_t sub_1DB1DB500()
{
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 272);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v3 = (void (*)(uint64_t, void))sub_1DB1EF900();
  *uint64_t v4 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  v3(v0 + 48, 0);
  swift_release();
  swift_release();
  *(void *)(v2 + v1) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DB1DB608, 0, 0);
}

uint64_t sub_1DB1DB608()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB1DB728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906118);
  v3[25] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905FA0);
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906120);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  uint64_t v6 = sub_1DB1EF570();
  v3[36] = v6;
  v3[37] = *(void *)(v6 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  uint64_t v7 = *(void *)(type metadata accessor for VisualTranslationModel(0) - 8);
  v3[40] = v7;
  v3[41] = *(void *)(v7 + 64);
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906128);
  v3[44] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[45] = v9;
  v3[46] = *(void *)(v9 + 64);
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1DBA38, 0, 0);
}

uint64_t sub_1DB1DBA38()
{
  v0[19] = MEMORY[0x1E4FBC870];
  v0[50] = sub_1DB1F1570();
  v0[51] = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DBADC, v2, v1);
}

uint64_t sub_1DB1DBADC()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  *(void *)(v0 + 416) = *(void *)(v0 + 160);
  return MEMORY[0x1F4188298](sub_1DB1DBBA0, 0, 0);
}

uint64_t sub_1DB1DBBA0()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 320);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = *(void *)(v0 + 296);
    uint64_t v6 = v1 + v4;
    uint64_t v34 = *(void *)(v3 + 72);
    unint64_t v35 = v4;
    uint64_t v33 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v32 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    unint64_t v31 = (*(void *)(v0 + 328) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    do
    {
      uint64_t v36 = v2;
      uint64_t v9 = *(void *)(v0 + 336);
      uint64_t v10 = *(void *)(v0 + 344);
      uint64_t v11 = *(char **)(v0 + 304);
      uint64_t v12 = *(void *)(v0 + 312);
      uint64_t v13 = *(void *)(v0 + 280);
      uint64_t v14 = *(void *)(v0 + 288);
      uint64_t v15 = *(void *)(v0 + 272);
      uint64_t v16 = *(void *)(v0 + 192);
      uint64_t v37 = v6;
      sub_1DB1EB0E0(v6, v10, type metadata accessor for VisualTranslationModel);
      (*v33)(v11, v10, v14);
      sub_1DB1E52B0(v12, v11);
      (*v32)(v12, v14);
      uint64_t v17 = sub_1DB1F1590();
      uint64_t v18 = *(void *)(v17 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v13, 1, 1, v17);
      sub_1DB1EB0E0(v10, v9, type metadata accessor for VisualTranslationModel);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = 0;
      unint64_t v20 = (void *)(v19 + 16);
      *(void *)(v19 + 24) = 0;
      sub_1DB1EE0B0(v9, v19 + v35, type metadata accessor for VisualTranslationModel);
      *(void *)(v19 + v31) = v16;
      sub_1DB0E8B70(v13, v15, (uint64_t *)&unk_1EBA4E610);
      LODWORD(v15) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17);
      swift_retain();
      uint64_t v21 = *(void *)(v0 + 272);
      if (v15 == 1)
      {
        sub_1DB0E8BD4(*(void *)(v0 + 272), (uint64_t *)&unk_1EBA4E610);
        if (!*v20) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1DB1F1580();
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, v17);
        if (!*v20)
        {
LABEL_8:
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v22 = sub_1DB1F1510();
      uint64_t v24 = v23;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v25 = **(void **)(v0 + 184);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = &unk_1EA906140;
      *(void *)(v26 + 24) = v19;
      uint64_t v27 = v24 | v22;
      if (v24 | v22)
      {
        uint64_t v27 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v22;
        *(void *)(v0 + 40) = v24;
      }
      uint64_t v7 = *(void *)(v0 + 344);
      uint64_t v8 = *(void *)(v0 + 280);
      *(void *)(v0 + 128) = 1;
      *(void *)(v0 + 136) = v27;
      *(void *)(v0 + 144) = v25;
      swift_task_create();
      swift_release();
      sub_1DB0E8BD4(v8, (uint64_t *)&unk_1EBA4E610);
      sub_1DB1EA16C(v7, type metadata accessor for VisualTranslationModel);
      uint64_t v6 = v37 + v34;
      uint64_t v2 = v36 - 1;
    }
    while (v36 != 1);
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 424) = sub_1DB1F1560();
  uint64_t v29 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DBFAC, v29, v28);
}

uint64_t sub_1DB1DBFAC()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release();
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  *(void *)(v0 + 432) = *v2;
  swift_bridgeObjectRetain();
  return MEMORY[0x1F4188298](sub_1DB1DC04C, 0, 0);
}

uint64_t sub_1DB1DC04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(v3 + 432);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v52 = v5 + 64;
  uint64_t v57 = v5;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  uint64_t v59 = *(void *)(v3 + 352);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v56 = *(void *)(v3 + 320);
  unint64_t v9 = v8 & v6;
  int64_t v53 = (unint64_t)(63 - v7) >> 6;
  uint64_t v54 = *(void *)(v3 + 360);
  uint64_t v55 = *(void *)(v3 + 296);
  while (1)
  {
    if (v9)
    {
      uint64_t v60 = (v9 - 1) & v9;
      int64_t v61 = v4;
      unint64_t v11 = __clz(__rbit64(v9)) | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      return MEMORY[0x1F4187C78](a1, a2, a3);
    }
    if (v12 >= v53) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v52 + 8 * v12);
    int64_t v14 = v4 + 1;
    if (!v13)
    {
      int64_t v14 = v4 + 2;
      if (v4 + 2 >= v53) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v52 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v4 + 3;
        if (v4 + 3 >= v53) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v52 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v60 = (v13 - 1) & v13;
    int64_t v61 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_23:
    uint64_t v17 = *(void *)(v3 + 384);
    uint64_t v16 = *(void *)(v3 + 392);
    uint64_t v18 = *(void *)(v3 + 288);
    uint64_t v19 = *(void *)(v55 + 72);
    unint64_t v20 = *(void (**)(uint64_t, unint64_t, uint64_t))(v55 + 16);
    v20(v16, *(void *)(v57 + 48) + v19 * v11, v18);
    uint64_t v21 = v16 + *(int *)(v59 + 48);
    sub_1DB1EB0E0(*(void *)(v57 + 56) + *(void *)(v56 + 72) * v11, v21, type metadata accessor for VisualTranslationModel);
    uint64_t v22 = v17 + *(int *)(v59 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v17, v16, v18);
    uint64_t v58 = v22;
    sub_1DB1EE0B0(v21, v22, type metadata accessor for VisualTranslationModel);
    uint64_t v23 = *(void *)(v3 + 152);
    if (!*(void *)(v23 + 16)) {
      goto LABEL_29;
    }
    sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1DB1F11D0();
    uint64_t v25 = -1 << *(unsigned char *)(v23 + 32);
    unint64_t v26 = v24 & ~v25;
    if (((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
    {
LABEL_28:
      swift_bridgeObjectRelease();
LABEL_29:
      uint64_t v32 = *(void *)(v3 + 376);
      unint64_t v31 = *(void *)(v3 + 384);
      uint64_t v33 = *(void *)(v3 + 288);
      uint64_t v34 = *(void *)(v3 + 256);
      uint64_t v35 = *(void *)(v3 + 264);
      uint64_t v36 = sub_1DB1F1590();
      uint64_t v37 = *(void *)(v36 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v35, 1, 1, v36);
      uint64_t v38 = v32 + *(int *)(v59 + 48);
      v20(v32, v31, v33);
      sub_1DB1EB0E0(v58, v38, type metadata accessor for VisualTranslationModel);
      unint64_t v39 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = 0;
      *(void *)(v40 + 24) = 0;
      sub_1DB0F1454(v32, v40 + v39, &qword_1EA906128);
      sub_1DB0E8B70(v35, v34, (uint64_t *)&unk_1EBA4E610);
      int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36);
      uint64_t v42 = *(void *)(v3 + 256);
      if (v41 == 1)
      {
        sub_1DB0E8BD4(*(void *)(v3 + 256), (uint64_t *)&unk_1EBA4E610);
      }
      else
      {
        sub_1DB1F1580();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v42, v36);
      }
      int64_t v4 = v61;
      unint64_t v9 = v60;
      if (*(void *)(v40 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v43 = sub_1DB1F1510();
        uint64_t v45 = v44;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v43 = 0;
        uint64_t v45 = 0;
      }
      uint64_t v46 = **(void **)(v3 + 184);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = &unk_1EA906158;
      *(void *)(v47 + 24) = v40;
      uint64_t v48 = v45 | v43;
      if (v45 | v43)
      {
        uint64_t v48 = v3 + 48;
        *(void *)(v3 + 48) = 0;
        *(void *)(v3 + 56) = 0;
        *(void *)(v3 + 64) = v43;
        *(void *)(v3 + 72) = v45;
      }
      uint64_t v10 = *(void *)(v3 + 264);
      *(void *)(v3 + 104) = 1;
      *(void *)(v3 + 112) = v48;
      *(void *)(v3 + 120) = v46;
      swift_task_create();
      swift_release();
      sub_1DB0E8BD4(v10, (uint64_t *)&unk_1EBA4E610);
      goto LABEL_6;
    }
    uint64_t v27 = ~v25;
    while (1)
    {
      uint64_t v28 = *(void *)(v3 + 312);
      uint64_t v29 = *(void *)(v3 + 288);
      v20(v28, *(void *)(v23 + 48) + v26 * v19, v29);
      sub_1DB1EB168(&qword_1EA904F98, MEMORY[0x1E4F27990]);
      char v30 = sub_1DB1F1230();
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v28, v29);
      if (v30) {
        break;
      }
      unint64_t v26 = (v26 + 1) & v27;
      if (((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
    int64_t v4 = v61;
    unint64_t v9 = v60;
LABEL_6:
    a1 = sub_1DB0E8BD4(*(void *)(v3 + 384), &qword_1EA906128);
  }
  uint64_t v15 = v4 + 4;
  if (v4 + 4 < v53)
  {
    unint64_t v13 = *(void *)(v52 + 8 * v15);
    if (!v13)
    {
      while (1)
      {
        int64_t v14 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_42;
        }
        if (v14 >= v53) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v52 + 8 * v14);
        ++v15;
        if (v13) {
          goto LABEL_22;
        }
      }
    }
    int64_t v14 = v4 + 4;
    goto LABEL_22;
  }
LABEL_38:
  swift_release();
  *(void *)(v3 + 168) = MEMORY[0x1E4FBC860];
  sub_1DB1F1540();
  uint64_t v49 = sub_1DB0E3C44(&qword_1EA906170, &qword_1EA906120);
  long long v50 = (void *)swift_task_alloc();
  *(void *)(v3 + 440) = v50;
  void *v50 = v3;
  v50[1] = sub_1DB1DC778;
  a2 = *(void *)(v3 + 232);
  a1 = *(void *)(v3 + 200);
  a3 = v49;
  return MEMORY[0x1F4187C78](a1, a2, a3);
}

uint64_t sub_1DB1DC778()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[30];
    uint64_t v3 = v2[31];
    uint64_t v5 = v2[29];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = (uint64_t (*)())CGPointMake;
  }
  else
  {
    uint64_t v6 = sub_1DB1DC8B8;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1DB1DC8B8()
{
  uint64_t v1 = v0[25];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[27] + 48))(v1, 1, v0[26]) == 1)
  {
    uint64_t v2 = (void *)v0[22];
    (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
    sub_1DB0E8BD4(v1, &qword_1EA906118);
    *uint64_t v2 = v0[21];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    sub_1DB0F1454(v1, v0[28], &qword_1EA905FA0);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[56] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1DB1DCAC8;
    uint64_t v6 = v0[28];
    return sub_1DB1DD30C((uint64_t)(v0 + 21), v6);
  }
}

uint64_t sub_1DB1DCAC8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[31];
    uint64_t v8 = v2[30];
    uint64_t v4 = v2[28];
    uint64_t v5 = v2[29];
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4(v4, &qword_1EA905FA0);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v6(v3, v5);
  }
  else
  {
    sub_1DB0E8BD4(v2[28], &qword_1EA905FA0);
    return MEMORY[0x1F4188298](sub_1DB1DCC40, 0, 0);
  }
}

uint64_t sub_1DB1DCC40()
{
  uint64_t v1 = sub_1DB0E3C44(&qword_1EA906170, &qword_1EA906120);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[55] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DB1DC778;
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[25];
  return MEMORY[0x1F4187C78](v4, v3, v1);
}

uint64_t sub_1DB1DCD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  uint64_t v6 = sub_1DB1EF570();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1DCDD4, 0, 0);
}

uint64_t sub_1DB1DCDD4()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  *(_DWORD *)(v0 + 128) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905FA0) + 48);
  sub_1DB1EB0E0(v4, v5, type metadata accessor for VisualTranslationModel);
  uint64_t v6 = type metadata accessor for VisualTranslationModel(0);
  *(void *)(v0 + 88) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v0 + 96) = v7;
  uint64_t v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  *(void *)(v0 + 104) = v8;
  *(void *)(v0 + 112) = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v8(v5, 0, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_1DB1F1570();
  *(void *)(v0 + 120) = sub_1DB1F1560();
  uint64_t v10 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DCF3C, v10, v9);
}

uint64_t sub_1DB1DCF3C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_detectedModels);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*(void *)(*v2 + 16))
  {
    uint64_t v4 = *(void *)(v0 + 80);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1DB1A8DE8(v4);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 104);
    if (v7)
    {
      uint64_t v8 = *(void *)(v0 + 88);
      uint64_t v9 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
      sub_1DB1EB0E0(*(void *)(v3 + 56) + *(void *)(*(void *)(v0 + 96) + 72) * v5, v9, type metadata accessor for VisualTranslationModel);
      uint64_t v10 = v9;
      uint64_t v11 = 0;
      uint64_t v12 = v8;
    }
    else
    {
      uint64_t v12 = *(void *)(v0 + 88);
      uint64_t v10 = *(void *)(v0 + 40) + *(int *)(v0 + 128);
      uint64_t v11 = 1;
    }
    v6(v10, v11, 1, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 104))(*(void *)(v0 + 40) + *(int *)(v0 + 128), 1, 1, *(void *)(v0 + 88));
  }
  (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
  swift_task_dealloc();
  unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1DB1DD0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906128);
  v4[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1DD14C, 0, 0);
}

uint64_t sub_1DB1DD14C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v14 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905FA0) + 48);
  uint64_t v5 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t v7 = *(int *)(v2 + 48);
  uint64_t v8 = v1 + v7;
  uint64_t v9 = v3 + v7;
  uint64_t v10 = sub_1DB1EF570();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v3, v10);
  sub_1DB1EB0E0(v9, v8, type metadata accessor for VisualTranslationModel);
  sub_1DB1EE0B0(v8, v14, type metadata accessor for VisualTranslationModel);
  v6(v14, 0, 1, v5);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v10);
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1DB1DD30C(uint64_t a1, uint64_t a2)
{
  unint64_t v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for VisualTranslationModel(0);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905FA0);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1DD480, 0, 0);
}

uint64_t sub_1DB1DD480()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v57 = *(void *)(v0 + 104);
  uint64_t v58 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(int *)(v3 + 48);
  uint64_t v8 = v4 + v7;
  uint64_t v9 = v6 + v7;
  sub_1DB0E8B70(v6, v4, &qword_1EBA4E458);
  sub_1DB0E8B70(v9, v8, &qword_1EBA4E458);
  sub_1DB0F1454(v4, v2, &qword_1EBA4E458);
  sub_1DB0E8BD4(v8, &qword_1EBA4E458);
  uint64_t v10 = v4 + *(int *)(v3 + 48);
  sub_1DB0E8B70(v6, v4, &qword_1EBA4E458);
  sub_1DB0E8B70(v9, v10, &qword_1EBA4E458);
  sub_1DB0F1454(v10, v1, &qword_1EBA4E458);
  sub_1DB0E8BD4(v4, &qword_1EBA4E458);
  sub_1DB0E8B70(v1, v57, &qword_1EBA4E458);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v12 = v11(v57, 1, v58);
  uint64_t v13 = *(void *)(v0 + 120);
  if (v12 == 1)
  {
    uint64_t v14 = *(void *)(v0 + 104);
    sub_1DB0E8BD4(*(void *)(v0 + 112), &qword_1EBA4E458);
    sub_1DB0E8BD4(v13, &qword_1EBA4E458);
    uint64_t v15 = v14;
    goto LABEL_21;
  }
  uint64_t v16 = *(void *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 32);
  sub_1DB1EE0B0(*(void *)(v0 + 104), *(void *)(v0 + 72), type metadata accessor for VisualTranslationModel);
  sub_1DB0E8B70(v13, v16, &qword_1EBA4E458);
  int v18 = v11(v16, 1, v17);
  uint64_t v19 = *(void *)(v0 + 96);
  if (v18 == 1)
  {
    sub_1DB0E8BD4(v19, &qword_1EBA4E458);
  }
  else
  {
    sub_1DB1EE0B0(v19, *(void *)(v0 + 64), type metadata accessor for VisualTranslationModel);
    if ((sub_1DB1B73CC() & 1) == 0)
    {
      uint64_t v31 = *(void *)(v0 + 72);
      uint64_t v32 = *(void *)(v0 + 32);
      uint64_t v33 = (long long *)(v31 + *(int *)(v32 + 20));
      uint64_t v69 = *((void *)v33 + 20);
      long long v67 = v33[8];
      long long v68 = v33[9];
      long long v63 = v33[4];
      long long v64 = v33[5];
      long long v65 = v33[6];
      long long v66 = v33[7];
      long long v59 = *v33;
      long long v60 = v33[1];
      long long v61 = v33[2];
      long long v62 = v33[3];
      uint64_t v34 = v31 + *(int *)(v32 + 24);
      sub_1DB1EF500();
      uint64_t v36 = *(void *)(v0 + 56);
      uint64_t v35 = *(void *)(v0 + 64);
      if (v37 <= 0.0)
      {
        uint64_t v38 = *(int **)(v0 + 32);
        uint64_t v39 = sub_1DB1EF570();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v36, v35, v39);
        uint64_t v40 = v36 + *(int *)(v32 + 24);
        uint64_t v41 = sub_1DB1EF520();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v40, v34, v41);
        uint64_t v42 = *(void *)(v35 + v38[7]);
        uint64_t v43 = *(void *)(v35 + v38[8]);
        char v44 = *(unsigned char *)(v35 + v38[9]);
        char v45 = *(unsigned char *)(v35 + v38[10]);
        uint64_t v46 = v36 + *(int *)(v32 + 20);
        *(_OWORD *)uint64_t v46 = v59;
        *(_OWORD *)(v46 + 16) = v60;
        *(_OWORD *)(v46 + 64) = v63;
        *(_OWORD *)(v46 + 80) = v64;
        *(_OWORD *)(v46 + 32) = v61;
        *(_OWORD *)(v46 + 48) = v62;
        *(void *)(v46 + 160) = v69;
        *(_OWORD *)(v46 + 128) = v67;
        *(_OWORD *)(v46 + 144) = v68;
        *(_OWORD *)(v46 + 96) = v65;
        *(_OWORD *)(v46 + 112) = v66;
        *(void *)(v36 + v38[7]) = v42;
        *(void *)(v36 + v38[8]) = v43;
        *(unsigned char *)(v36 + v38[9]) = v44;
        *(unsigned char *)(v36 + v38[10]) = v45;
        *(unsigned char *)(v36 + v38[11]) = 0;
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1DB1EB0E0(*(void *)(v0 + 64), *(void *)(v0 + 56), type metadata accessor for VisualTranslationModel);
      }
      unint64_t v47 = **(void **)(v0 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v47 = sub_1DB188C74(0, *(void *)(v47 + 16) + 1, 1, v47);
      }
      unint64_t v49 = *(void *)(v47 + 16);
      unint64_t v48 = *(void *)(v47 + 24);
      if (v49 >= v48 >> 1) {
        unint64_t v47 = sub_1DB188C74(v48 > 1, v49 + 1, 1, v47);
      }
      uint64_t v25 = *(void *)(v0 + 112);
      uint64_t v24 = *(void *)(v0 + 120);
      uint64_t v51 = *(void *)(v0 + 64);
      uint64_t v50 = *(void *)(v0 + 72);
      uint64_t v52 = *(void *)(v0 + 56);
      uint64_t v53 = *(void *)(v0 + 40);
      uint64_t v54 = *(unint64_t **)(v0 + 16);
      *(void *)(v47 + 16) = v49 + 1;
      sub_1DB1EE0B0(v52, v47+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v49, type metadata accessor for VisualTranslationModel);
      *uint64_t v54 = v47;
      sub_1DB1EA16C(v51, type metadata accessor for VisualTranslationModel);
      uint64_t v30 = v50;
      goto LABEL_20;
    }
    sub_1DB1EA16C(*(void *)(v0 + 64), type metadata accessor for VisualTranslationModel);
  }
  unint64_t v20 = *(unint64_t **)(v0 + 16);
  sub_1DB1EB0E0(*(void *)(v0 + 72), *(void *)(v0 + 48), type metadata accessor for VisualTranslationModel);
  unint64_t v21 = *v20;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v21 = sub_1DB188C74(0, *(void *)(v21 + 16) + 1, 1, v21);
  }
  unint64_t v23 = *(void *)(v21 + 16);
  unint64_t v22 = *(void *)(v21 + 24);
  if (v23 >= v22 >> 1) {
    unint64_t v21 = sub_1DB188C74(v22 > 1, v23 + 1, 1, v21);
  }
  uint64_t v25 = *(void *)(v0 + 112);
  uint64_t v24 = *(void *)(v0 + 120);
  uint64_t v26 = *(void *)(v0 + 72);
  uint64_t v28 = *(void *)(v0 + 40);
  uint64_t v27 = *(void *)(v0 + 48);
  uint64_t v29 = *(unint64_t **)(v0 + 16);
  *(void *)(v21 + 16) = v23 + 1;
  sub_1DB1EE0B0(v27, v21+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23, type metadata accessor for VisualTranslationModel);
  unint64_t *v29 = v21;
  uint64_t v30 = v26;
LABEL_20:
  sub_1DB1EA16C(v30, type metadata accessor for VisualTranslationModel);
  sub_1DB0E8BD4(v25, &qword_1EBA4E458);
  uint64_t v15 = v24;
LABEL_21:
  sub_1DB0E8BD4(v15, &qword_1EBA4E458);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(uint64_t (**)(void))(v0 + 8);
  return v55();
}

uint64_t sub_1DB1DDA78(double a1)
{
  type metadata accessor for VisualTranslationObservable(0);
  sub_1DB1EB168(&qword_1EA905FB8, (void (*)(uint64_t))type metadata accessor for VisualTranslationObservable);
  sub_1DB1EF8B0();
  sub_1DB1EF8C0();
  swift_release();
  if (a1 <= 0.0) {
    a1 = COERCE_DOUBLE(1);
  }
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_1DB1DDB48()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, v4);
  sub_1DB0EB788(*(void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler));
  swift_release();
  return sub_1DB0E8BD4(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest, &qword_1EBA4DB28);
}

uint64_t VisualTranslationObservable.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__popoverAttachmentAnchor;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__errorModel;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905B70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1DB0E8BD4(v0 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel, &qword_1EBA4D178);
  uint64_t v5 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, v8);
  sub_1DB0EB788(*(void *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler));
  swift_release();
  sub_1DB0E8BD4(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_savedTranslationRequest, &qword_1EBA4DB28);
  return v0;
}

uint64_t VisualTranslationObservable.__deallocating_deinit()
{
  VisualTranslationObservable.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1DB1DDEBC()
{
  return 1;
}

uint64_t sub_1DB1DDEC4()
{
  return 1;
}

uint64_t SecureHostingController.init(rootView:)(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v4 = sub_1DB1E9844(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + class metadata base offset for SecureHostingController)
                                              - 8)
                                  + 8))(a1);
  return v4;
}

void *SecureHostingController.__allocating_init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return SecureHostingController.init(coder:rootView:)(a1, a2);
}

void *SecureHostingController.init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + class metadata base offset for SecureHostingController);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v12 - v7, v6);
  uint64_t v8 = (void *)sub_1DB1F0330();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v10 = v8;
  v9(a2, v4);
  if (v8) {

  }
  return v8;
}

id SecureHostingController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SecureHostingController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.Class super_class = (Class)type metadata accessor for SecureHostingController();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1DB1DE1C8(uint64_t a1, uint64_t a2, void *a3)
{
  return SecureHostingController.init(coder:)(a3);
}

id SecureHostingController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SecureHostingController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall VisualTranslationViewBridge.setPresentationAnchor(rect:contentRect:)(__C::CGRect rect, __C::CGRect contentRect)
{
  CGFloat height = contentRect.size.height;
  CGFloat width = contentRect.size.width;
  CGFloat y = contentRect.origin.y;
  CGFloat x = contentRect.origin.x;
  CGFloat v7 = rect.size.height;
  CGFloat v8 = rect.size.width;
  CGFloat v9 = rect.origin.y;
  CGFloat v10 = rect.origin.x;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DB1F1590();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  uint64_t v16 = (CGFloat *)swift_allocObject();
  v16[2] = 0.0;
  unint64_t v16[3] = 0.0;
  *((void *)v16 + 4) = v2;
  v16[5] = v10;
  v16[6] = v9;
  v16[7] = v8;
  v16[8] = v7;
  v16[9] = x;
  v16[10] = y;
  v16[11] = width;
  v16[12] = height;
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  id v18 = v2;
  if (v17 == 1)
  {
    sub_1DB0E8BD4((uint64_t)v13, (uint64_t *)&unk_1EBA4E610);
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    sub_1DB1F1580();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    if (*((void *)v16 + 2))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_1DB1F1510();
      uint64_t v20 = v21;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
    }
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = &unk_1EA905FC8;
  *(void *)(v22 + 24) = v16;
  if (v20 | v19)
  {
    v23[0] = 0;
    v23[1] = 0;
    void v23[2] = v19;
    v23[3] = v20;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1DB1DE4FC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(double *)(v12 + 72) = a7;
  *(double *)(v12 + 80) = a8;
  *(double *)(v12 + 56) = a5;
  *(double *)(v12 + 64) = a6;
  *(double *)(v12 + 40) = a3;
  *(double *)(v12 + 48) = a4;
  *(double *)(v12 + 24) = a1;
  *(double *)(v12 + 32) = a2;
  *(void *)(v12 + 16) = a12;
  return MEMORY[0x1F4188298](sub_1DB1DE52C, 0, 0);
}

uint64_t sub_1DB1DE52C()
{
  v0[11] = *(void *)(v0[2] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  sub_1DB1F1570();
  v0[12] = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DE5D4, v2, v1);
}

uint64_t sub_1DB1DE5D4()
{
  CGFloat v2 = v0[9];
  CGFloat v1 = v0[10];
  CGFloat v4 = v0[7];
  CGFloat v3 = v0[8];
  CGFloat v6 = v0[5];
  CGFloat v5 = v0[6];
  CGFloat v8 = v0[3];
  CGFloat v7 = v0[4];
  swift_release();
  sub_1DB1B1A4C(v8, v7, v6, v5, v4, v3, v2, v1);
  CGFloat v9 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v9();
}

uint64_t sub_1DB1DE730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return MEMORY[0x1F4188298](sub_1DB1DE754, 0, 0);
}

uint64_t sub_1DB1DE754()
{
  uint64_t v1 = v0[4];
  v0[5] = *(void *)(v0[2] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  if (v1)
  {
    uint64_t v2 = v0[3];
    sub_1DB1A16E4();
    uint64_t v3 = swift_allocError();
    *(_WORD *)uint64_t v4 = v2;
    *(void *)(v4 + 8) = v1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  v0[6] = v3;
  sub_1DB1F1570();
  swift_bridgeObjectRetain();
  v0[7] = sub_1DB1F1560();
  uint64_t v6 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DE850, v6, v5);
}

uint64_t sub_1DB1DE850()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  sub_1DB1B1688(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

Swift::Void __swiftcall VisualTranslationViewBridge.dismissErrorUI()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DB1F1590();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1DB0E8BD4((uint64_t)v3, (uint64_t *)&unk_1EBA4E610);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1DB1F1580();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1DB1F1510();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA905FD8;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v9;
    v13[3] = v10;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1DB1DEB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  v4[3] = swift_task_alloc();
  v4[4] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1DEBA8, 0, 0);
}

uint64_t sub_1DB1DEBA8()
{
  v0[5] = *(void *)(v0[2] + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  sub_1DB1F1570();
  v0[6] = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1DEC50, v2, v1);
}

uint64_t sub_1DB1DEC50()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  swift_release();
  uint64_t v3 = type metadata accessor for TranslationUnavailableModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB0E8B70(v1, v2, &qword_1EBA4D178);
  swift_retain();
  sub_1DB1EF920();
  sub_1DB0E8BD4(v1, &qword_1EBA4D178);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t VisualTranslationViewBridge.dismissHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1DB0EB758(*v1);
  return v2;
}

uint64_t VisualTranslationViewBridge.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1DB0EB788(v6);
}

uint64_t sub_1DB1DEFF8@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    int v7 = sub_1DB171224;
  }
  else
  {
    int v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1DB0EB758(v4);
}

uint64_t sub_1DB1DF098(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1DB17121C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  int v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *int v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1DB0EB758(v3);
  return sub_1DB0EB788(v8);
}

uint64_t (*VisualTranslationViewBridge.dismissHandler.modify())()
{
  return j__swift_endAccess;
}

id VisualTranslationViewBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

char *VisualTranslationViewBridge.init()()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable;
  type metadata accessor for VisualTranslationObservable(0);
  swift_allocObject();
  uint64_t v3 = v0;
  *(void *)&v0[v2] = VisualTranslationObservable.init()();
  uint64_t v4 = &v3[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController] = 0;
  v3[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_optimizedForExtendedExperience] = 0;

  v11.receiver = v3;
  v11.Class super_class = ObjectType;
  uint64_t v5 = (char *)objc_msgSendSuper2(&v11, sel_init);
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = (void (**)())(v6 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *uint64_t v8 = sub_1DB1EB3FC;
  v8[1] = (void (*)())v7;
  sub_1DB0EB788(v9);
  return v5;
}

char *VisualTranslationViewBridge.__allocating_init(optimizedForExtendedExperience:)(char a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable;
  type metadata accessor for VisualTranslationObservable(0);
  swift_allocObject();
  uint64_t v5 = v3;
  *(void *)&v3[v4] = VisualTranslationObservable.init()();
  uint64_t v6 = &v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController] = 0;
  v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_optimizedForExtendedExperience] = a1;

  v13.receiver = v5;
  v13.Class super_class = v1;
  uint64_t v7 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable];
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void (**)())(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  uint64_t v11 = *(void *)(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *uint64_t v10 = sub_1DB1EB3FC;
  v10[1] = (void (*)())v9;
  sub_1DB0EB788(v11);
  return v7;
}

char *VisualTranslationViewBridge.init(optimizedForExtendedExperience:)(char a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable;
  type metadata accessor for VisualTranslationObservable(0);
  swift_allocObject();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = VisualTranslationObservable.init()();
  uint64_t v6 = &v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController] = 0;
  v5[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_optimizedForExtendedExperience] = a1;

  v13.receiver = v5;
  v13.Class super_class = ObjectType;
  uint64_t v7 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable];
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void (**)())(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  uint64_t v11 = *(void *)(v8 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_dismissHandler);
  *uint64_t v10 = sub_1DB1EB3FC;
  v10[1] = (void (*)())v9;
  sub_1DB0EB788(v11);
  return v7;
}

void sub_1DB1DF55C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E018CB30](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (void (**)(void))(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_dismissHandler);
    swift_beginAccess();
    uint64_t v5 = *v4;
    if (*v4)
    {
      sub_1DB0EB758((uint64_t)v5);

      v5();
      sub_1DB0EB788((uint64_t)v5);
    }
    else
    {
    }
  }
}

id sub_1DB1DF608()
{
  uint64_t v1 = OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge____lazy_storage___hostingController);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for VisualTranslationObservable(0);
    sub_1DB1EB168(&qword_1EA905FB8, (void (*)(uint64_t))type metadata accessor for VisualTranslationObservable);
    swift_retain();
    sub_1DB1EFDB0();
    id v5 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD58));
    uint64_t v6 = (void *)sub_1DB1F0340();
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t VisualTranslationView.init(observable:options:systemTranslationDismissHandler:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  type metadata accessor for VisualTranslationObservable(0);
  sub_1DB1EB168(&qword_1EA905FB8, (void (*)(uint64_t))type metadata accessor for VisualTranslationObservable);
  uint64_t result = sub_1DB1EFDB0();
  *a4 = result;
  a4[1] = v9;
  a4[2] = v7;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

id VisualTranslationViewBridge.view.getter()
{
  id v0 = sub_1DB1DF608();
  id v1 = objc_msgSend(v0, sel_view);

  return v1;
}

uint64_t static VisualTranslationViewBridge.isTranslatable(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static VisualTranslationService.isTranslatable(_:completion:)(a1, a2, a3);
}

uint64_t VisualTranslationViewBridge.translate(_:sourceLocale:targetLocale:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v28 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  objc_super v13 = (char *)&v27 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DB0E8B70(a2, (uint64_t)v13, &qword_1EBA4E570);
  sub_1DB0E8B70(v28, (uint64_t)v10, &qword_1EBA4E570);
  uint64_t v19 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = (v19 + 48) & ~v19;
  uint64_t v21 = (v9 + v19 + v20) & ~v19;
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = 0;
  _OWORD v22[3] = 0;
  _OWORD v22[4] = v18;
  v22[5] = a1;
  sub_1DB0F1454((uint64_t)v13, (uint64_t)v22 + v20, &qword_1EBA4E570);
  sub_1DB0F1454((uint64_t)v10, (uint64_t)v22 + v21, &qword_1EBA4E570);
  unint64_t v23 = (void *)((char *)v22 + ((v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v25 = v29;
  uint64_t v24 = v30;
  *unint64_t v23 = v29;
  v23[1] = v24;
  swift_bridgeObjectRetain();
  sub_1DB0EB758(v25);
  sub_1DB131F20((uint64_t)v16, (uint64_t)&unk_1EA906010, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_1DB1DFBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[46] = a8;
  v8[47] = v12;
  v8[44] = a6;
  v8[45] = a7;
  v8[42] = a4;
  v8[43] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  v8[48] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  uint64_t v9 = sub_1DB1EF570();
  v8[51] = v9;
  v8[52] = *(void *)(v9 - 8);
  v8[53] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D178);
  v8[54] = swift_task_alloc();
  v8[55] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1DFD64, 0, 0);
}

uint64_t sub_1DB1DFD64()
{
  uint64_t v1 = *(void *)(v0 + 336) + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E018CB30](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    *(void *)(v0 + 448) = *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    sub_1DB1F1570();
    *(void *)(v0 + 456) = sub_1DB1F1560();
    uint64_t v4 = sub_1DB1F1510();
    uint64_t v6 = v5;
    uint64_t v7 = sub_1DB1E006C;
LABEL_3:
    return MEMORY[0x1F4188298](v7, v4, v6);
  }
  uint64_t v8 = *(void *)(v0 + 336) + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1E018CB30](v8);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    *(void *)(v0 + 464) = *(void *)(v9 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    *(unsigned char *)(v0 + 520) = 1;
    sub_1DB1EF560();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1DB1E0484;
    uint64_t v12 = *(void *)(v0 + 424);
    uint64_t v13 = *(void *)(v0 + 352);
    uint64_t v14 = *(void *)(v0 + 360);
    uint64_t v15 = *(void *)(v0 + 344);
    return sub_1DB1D776C(v15, v13, v14, (unsigned char *)(v0 + 520), v12);
  }
  else
  {
    if (*(void *)(v0 + 368))
    {
      uint64_t v16 = MEMORY[0x1E4FBC860];
      if (MEMORY[0x1E4FBC860] >> 62)
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9060E8);
        uint64_t v17 = sub_1DB1F1BA0();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1DB1F1DC0();
        uint64_t v17 = v16;
      }
      *(void *)(v0 + 496) = v17;
      swift_bridgeObjectRelease();
      sub_1DB1F1570();
      *(void *)(v0 + 504) = sub_1DB1F1560();
      uint64_t v4 = sub_1DB1F1510();
      uint64_t v6 = v18;
      uint64_t v7 = sub_1DB1E0774;
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_1DB1E006C()
{
  uint64_t v1 = v0[56];
  uint64_t v3 = v0[54];
  uint64_t v2 = v0[55];
  swift_release();
  uint64_t v4 = type metadata accessor for TranslationUnavailableModel(0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v2, 1, 1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB0E8B70(v2, v3, &qword_1EBA4D178);
  swift_retain();
  sub_1DB1EF920();
  sub_1DB0E8BD4(v2, &qword_1EBA4D178);
  v5(v2, 1, 1, v4);
  uint64_t v6 = v1 + OBJC_IVAR____TtC13TranslationUI31VisualTranslationErrorViewModel__lastErrorModel;
  swift_beginAccess();
  sub_1DB1EEBD0(v2, v6, &qword_1EBA4D178);
  swift_endAccess();
  swift_release();
  return MEMORY[0x1F4188298](sub_1DB1E0204, 0, 0);
}

uint64_t sub_1DB1E0204()
{
  uint64_t v1 = *(void *)(v0 + 336) + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E018CB30](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    *(void *)(v0 + 464) = *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    *(unsigned char *)(v0 + 520) = 1;
    sub_1DB1EF560();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 472) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1DB1E0484;
    uint64_t v5 = *(void *)(v0 + 424);
    uint64_t v6 = *(void *)(v0 + 352);
    uint64_t v7 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 344);
    return sub_1DB1D776C(v8, v6, v7, (unsigned char *)(v0 + 520), v5);
  }
  else if (*(void *)(v0 + 368))
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (MEMORY[0x1E4FBC860] >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9060E8);
      uint64_t v11 = sub_1DB1F1BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DB1F1DC0();
      uint64_t v11 = v10;
    }
    *(void *)(v0 + 496) = v11;
    swift_bridgeObjectRelease();
    sub_1DB1F1570();
    *(void *)(v0 + 504) = sub_1DB1F1560();
    uint64_t v13 = sub_1DB1F1510();
    return MEMORY[0x1F4188298](sub_1DB1E0774, v13, v12);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1DB1E0484(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 480) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[52] + 8))(v4[53], v4[51]);
    uint64_t v5 = sub_1DB1E0970;
  }
  else
  {
    uint64_t v7 = v4[52];
    uint64_t v6 = v4[53];
    uint64_t v8 = v4[51];
    v4[61] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_release();
    uint64_t v5 = sub_1DB1E05E4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DB1E05E4()
{
  unint64_t v1 = v0[61];
  if (v0[46])
  {
    swift_bridgeObjectRetain();
    if (v1 >> 62)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9060E8);
      uint64_t v2 = sub_1DB1F1BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DB1F1DC0();
      uint64_t v2 = v1;
    }
    v0[62] = v2;
    swift_bridgeObjectRelease();
    sub_1DB1F1570();
    v0[63] = sub_1DB1F1560();
    uint64_t v4 = sub_1DB1F1510();
    return MEMORY[0x1F4188298](sub_1DB1E0774, v4, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1DB1E0774()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = (void (*)(uint64_t, void))v0[46];
  swift_release();
  v2(v1, 0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DB1E083C()
{
  uint64_t v1 = *(void (**)(void, void))(v0 + 368);
  swift_release();
  v1(MEMORY[0x1E4FBC860], 0);
  return MEMORY[0x1F4188298](sub_1DB1E08BC, 0, 0);
}

uint64_t sub_1DB1E08BC()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB1E0970()
{
  uint64_t v1 = (unint64_t *)(v0 + 304);
  swift_release();
  if (qword_1EBA4E578 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 480);
  uint64_t v3 = sub_1DB1EF810();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBA4F408);
  swift_bridgeObjectRetain();
  id v4 = v2;
  swift_bridgeObjectRetain();
  id v5 = v2;
  uint64_t v6 = sub_1DB1EF7F0();
  os_log_type_t v7 = sub_1DB1F1710();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = *(void *)(v0 + 344);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134349314;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1DB1F1BB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v12 = *(void **)(v0 + 480);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 320) = v11;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    uint64_t v13 = sub_1DB1EF410();
    *(void *)(v0 + 328) = v13;
    sub_1DB1F1910();
    *uint64_t v10 = v13;

    _os_log_impl(&dword_1DB0DC000, v6, v7, "Failed to translate %{public}ld observations: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v10, -1, -1);
    MEMORY[0x1E018CA60](v9, -1, -1);
    uint64_t v1 = (unint64_t *)(v0 + 304);
  }
  else
  {
    uint64_t v14 = *(void **)(v0 + 480);
    swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = *(void **)(v0 + 480);

  id v16 = v15;
  sub_1DB19E7DC(v15, v1);
  if (*(void *)(v0 + 312))
  {
    uint64_t v17 = *(void *)(v0 + 400);
    sub_1DB0E8B70(*(void *)(v0 + 352), v17, &qword_1EBA4E570);
    uint64_t v18 = sub_1DB1EF6B0();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    int v21 = v20(v17, 1, v18);
    uint64_t v22 = *(void *)(v0 + 400);
    if (v21 == 1)
    {
      sub_1DB0E8BD4(*(void *)(v0 + 400), &qword_1EBA4E570);
      sub_1DB1E2F58(0xD000000000000018, 0x80000001DB1FB2A0, (_OWORD *)(v0 + 144));
      sub_1DB0E8BD4(v0 + 144, &qword_1EBA4DDE8);
      if (!*(void *)(v0 + 312)) {
        goto LABEL_16;
      }
    }
    else
    {
      *(void *)(v0 + 200) = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 176));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v22, v18);
      sub_1DB0F138C((_OWORD *)(v0 + 176), (_OWORD *)(v0 + 48));
      uint64_t v24 = *(void *)(v0 + 312);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1DB1E4108((_OWORD *)(v0 + 48), 0xD000000000000018, 0x80000001DB1FB2A0, isUniquelyReferenced_nonNull_native);
      *(void *)(v0 + 312) = v24;
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_16;
      }
    }
    uint64_t v26 = *(void *)(v0 + 392);
    sub_1DB0E8B70(*(void *)(v0 + 360), v26, &qword_1EBA4E570);
    int v27 = v20(v26, 1, v18);
    uint64_t v28 = *(void *)(v0 + 392);
    if (v27 == 1)
    {
      sub_1DB0E8BD4(*(void *)(v0 + 392), &qword_1EBA4E570);
      sub_1DB1E2F58(0xD000000000000018, 0x80000001DB1FB2C0, (_OWORD *)(v0 + 112));
      sub_1DB0E8BD4(v0 + 112, &qword_1EBA4DDE8);
    }
    else
    {
      *(void *)(v0 + 40) = v18;
      uint64_t v29 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 32))(v29, v28, v18);
      sub_1DB0F138C((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 80));
      uint64_t v30 = *(void *)(v0 + 312);
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      sub_1DB1E4108((_OWORD *)(v0 + 80), 0xD000000000000018, 0x80000001DB1FB2C0, v31);
      *(void *)(v0 + 312) = v30;
      swift_bridgeObjectRelease();
    }
  }
LABEL_16:
  uint64_t v32 = *(void *)(v0 + 336) + 16;
  swift_beginAccess();
  uint64_t v33 = MEMORY[0x1E018CB30](v32);
  if (v33)
  {
    uint64_t v34 = (void *)v33;
    uint64_t v35 = *(void *)(v0 + 384);
    uint64_t v37 = *(void *)(v0 + 304);
    uint64_t v36 = *(void *)(v0 + 312);
    uint64_t v38 = sub_1DB1F1590();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 1, 1, v38);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v34;
    v39[5] = v37;
    v39[6] = v36;
    swift_bridgeObjectRetain();
    id v40 = v34;
    sub_1DB131F20(v35, (uint64_t)&unk_1EA906108, (uint64_t)v39);

    swift_release();
  }
  if (*(void *)(v0 + 368))
  {
    sub_1DB1F1570();
    *(void *)(v0 + 512) = sub_1DB1F1560();
    uint64_t v42 = sub_1DB1F1510();
    return MEMORY[0x1F4188298](sub_1DB1E083C, v42, v41);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
    return v43();
  }
}

void sub_1DB1E12B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9060E8);
  id v5 = (void *)sub_1DB1F1480();
  if (a2) {
    uint64_t v6 = sub_1DB1EF410();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t VisualTranslationViewBridge.translate(_:sourceLocale:targetLocale:taskHint:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v43 = a1;
  uint64_t v42 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v42 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v42);
  uint64_t v46 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v39 = (char *)&v37 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v40 = v13;
  uint64_t v45 = sub_1DB1EF570();
  uint64_t v14 = *(void *)(v45 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v45);
  char v44 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v37 - v17;
  int v41 = *a4;
  uint64_t v38 = (char *)&v37 - v17;
  sub_1DB1EF560();
  uint64_t v19 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
  uint64_t v37 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = v7;
  int v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v22 = v39;
  uint64_t v23 = a2;
  uint64_t v24 = v42;
  v21(v39, v23, v42);
  uint64_t v25 = a3;
  uint64_t v26 = v24;
  v21(v46, v25, v24);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v44, v18, v45);
  uint64_t v27 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v28 = (v27 + 48) & ~v27;
  uint64_t v29 = (v8 + v27 + v28) & ~v27;
  uint64_t v30 = v29 + v8;
  unint64_t v31 = (*(unsigned __int8 *)(v14 + 80) + v30 + 1) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = 0;
  *((void *)v32 + 3) = 0;
  uint64_t v33 = v43;
  *((void *)v32 + 4) = v37;
  *((void *)v32 + 5) = v33;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v34(&v32[v28], v22, v26);
  v34(&v32[v29], v46, v26);
  v32[v30] = v41;
  uint64_t v35 = v45;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v32[v31], v44, v45);
  swift_bridgeObjectRetain();
  sub_1DB1322CC((uint64_t)v40, (uint64_t)&unk_1EA906020, (uint64_t)v32);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v38, v35);
}

uint64_t VisualTranslationViewBridge.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v37 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v38 = sub_1DB1EF570();
  uint64_t v6 = *(void *)(v38 - 8);
  uint64_t v35 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v38);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v8;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v29 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v17;
  int v31 = *a4;
  uint64_t v18 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v14, v33, v9);
  v20((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v36, v38);
  uint64_t v21 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v22 = (v21 + 48) & ~v21;
  uint64_t v23 = (v11 + v21 + v22) & ~v21;
  uint64_t v24 = v23 + v11;
  unint64_t v25 = (*(unsigned __int8 *)(v6 + 80) + v23 + v11 + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = 0;
  *((void *)v26 + 3) = 0;
  *((void *)v26 + 4) = v19;
  *((void *)v26 + 5) = v37;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v27(&v26[v22], v14, v9);
  v27(&v26[v23], v29, v9);
  v26[v24] = v31;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v26[v25], v30, v38);
  swift_bridgeObjectRetain();
  sub_1DB1322CC((uint64_t)v32, (uint64_t)&unk_1EA906028, (uint64_t)v26);
  return swift_release();
}

uint64_t sub_1DB1E1A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 113) = a8;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = v10;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 40) = a1;
  *(void *)(v8 + 48) = a4;
  return MEMORY[0x1F4188298](sub_1DB1E1A9C, 0, 0);
}

uint64_t sub_1DB1E1A9C()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E018CB30](v1);
  *(void *)(v0 + 88) = v2;
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    char v4 = *(unsigned char *)(v0 + 113) & 1;
    *(void *)(v0 + 96) = *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
    swift_retain();

    *(unsigned char *)(v0 + 112) = v4;
    id v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v5;
    *id v5 = v0;
    v5[1] = sub_1DB1E1BE0;
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    return sub_1DB1D9410(v9, v8, v6, (unsigned char *)(v0 + 112), v7);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1DB1E1BE0()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_1DB1E1CF8, 0, 0);
}

uint64_t sub_1DB1E1CF8()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 88) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall VisualTranslationViewBridge.showDebugMenu()()
{
  if (_LTIsInternalInstall())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1DB1EF920();
  }
}

uint64_t VisualTranslationViewBridge.setZoomScale(_:)(double a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationViewBridge_observable);
  type metadata accessor for VisualTranslationObservable(0);
  sub_1DB1EB168(&qword_1EA905FB8, (void (*)(uint64_t))type metadata accessor for VisualTranslationObservable);
  sub_1DB1EF8B0();
  sub_1DB1EF8C0();
  swift_release();
  if (a1 <= 0.0) {
    a1 = COERCE_DOUBLE(1);
  }
  char v4 = (double *)(v3 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  uint64_t result = swift_beginAccess();
  *char v4 = a1;
  return result;
}

id VisualTranslationViewBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t VisualTranslationOptions.rawValue.getter()
{
  return *(void *)v0;
}

TranslationUI::VisualTranslationOptions __swiftcall VisualTranslationOptions.init(rawValue:)(TranslationUI::VisualTranslationOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static VisualTranslationOptions.optimizedForExtendedExperience.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static VisualTranslationOptions.backgroundRendering.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t VisualTranslationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v75 = sub_1DB1EFE00();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v73 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v64);
  char v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v59 - v6;
  uint64_t v8 = type metadata accessor for VisualTranslationOverlay();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD78) - 8;
  MEMORY[0x1F4188790](v63);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v65 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA906030) - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906038);
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906040);
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  long long v66 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906048) - 8;
  MEMORY[0x1F4188790](v68);
  long long v67 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906050) - 8;
  MEMORY[0x1F4188790](v71);
  uint64_t v69 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = v1[1];
  long long v84 = *v1;
  long long v85 = v20;
  uint64_t v86 = *((void *)v1 + 4);
  uint64_t v21 = *((void *)&v84 + 1);
  uint64_t v62 = v84;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  uint64_t v61 = v21;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v60 = v81;
  uint64_t v22 = (uint64_t *)(v21 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  swift_beginAccess();
  uint64_t v23 = *v22;
  uint64_t v24 = *((void *)&v85 + 1);
  uint64_t v25 = v86;
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 8) = 0x3FF0000000000000;
  long long v79 = 0u;
  long long v80 = 0u;
  sub_1DB0EB758(v24);
  type metadata accessor for CGRect(0);
  sub_1DB1F0D10();
  uint64_t v26 = v83;
  long long v27 = v82;
  *(_OWORD *)(v11 + 32) = v81;
  *(_OWORD *)(v11 + 48) = v27;
  *(void *)(v11 + 64) = v26;
  uint64_t v28 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
  sub_1DB0E8B70((uint64_t)v7, (uint64_t)v4, &qword_1EBA4E458);
  sub_1DB1F0D10();
  sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4E458);
  uint64_t v29 = v11 + *(int *)(v9 + 44);
  *(void *)uint64_t v29 = swift_getKeyPath();
  *(unsigned char *)(v29 + 8) = 0;
  *(void *)uint64_t v11 = v60;
  *(void *)(v11 + 8) = v23;
  sub_1DB0EB788(*(void *)(v11 + 16));
  *(void *)(v11 + 16) = v24;
  *(void *)(v11 + 24) = v25;
  uint64_t v30 = sub_1DB1EFE40();
  LOBYTE(v29) = sub_1DB1F06E0();
  sub_1DB1EB0E0(v11, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  int v31 = &v13[*(int *)(v63 + 44)];
  *(void *)int v31 = v30;
  v31[8] = v29;
  sub_1DB1EA16C(v11, (uint64_t (*)(void))type metadata accessor for VisualTranslationOverlay);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v11) = v85;
  sub_1DB0E8B70((uint64_t)v13, (uint64_t)v15, &qword_1EBA4DD78);
  uint64_t v33 = &v15[v65[11]];
  *(void *)uint64_t v33 = KeyPath;
  v33[8] = v11 & 1;
  sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4DD78);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = v77;
  sub_1DB0E8B70((uint64_t)v15, v77, &qword_1EA906030);
  uint64_t v36 = v35 + *(int *)(v78 + 36);
  *(void *)uint64_t v36 = v34;
  *(unsigned char *)(v36 + 8) = (v11 & 2) != 0;
  sub_1DB0E8BD4((uint64_t)v15, &qword_1EA906030);
  sub_1DB1EBADC((uint64_t)&v84);
  uint64_t v64 = type metadata accessor for VisualTranslationObservable(0);
  long long v65 = (int *)&protocol conformance descriptor for VisualTranslationErrorViewModel;
  sub_1DB1EB168(&qword_1EA905FB8, (void (*)(uint64_t))type metadata accessor for VisualTranslationObservable);
  sub_1DB1EFDC0();
  sub_1DB1EBB20((uint64_t)&v84);
  swift_getKeyPath();
  sub_1DB1EFDD0();
  swift_release();
  swift_release();
  type metadata accessor for CameraPreviewDebugView();
  sub_1DB1EBB8C(&qword_1EA906058, &qword_1EA906038, (void (*)(void))sub_1DB1EBB64);
  sub_1DB1EB168(&qword_1EA906078, (void (*)(uint64_t))type metadata accessor for CameraPreviewDebugView);
  uint64_t v37 = v66;
  uint64_t v38 = v77;
  sub_1DB1F0AF0();
  swift_release();
  swift_release();
  sub_1DB0E8BD4(v38, &qword_1EA906038);
  sub_1DB1EBADC((uint64_t)&v84);
  sub_1DB1EFDC0();
  sub_1DB1EBB20((uint64_t)&v84);
  swift_getKeyPath();
  sub_1DB1EFDD0();
  swift_release();
  swift_release();
  long long v39 = v81;
  LOBYTE(v29) = v82;
  uint64_t v40 = swift_allocObject();
  long long v41 = v85;
  *(_OWORD *)(v40 + 16) = v84;
  *(_OWORD *)(v40 + 32) = v41;
  *(void *)(v40 + 48) = v86;
  uint64_t v42 = v70;
  uint64_t v43 = (uint64_t)v67;
  uint64_t v44 = v72;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v37, v72);
  uint64_t v45 = v43 + *(int *)(v68 + 44);
  *(_OWORD *)uint64_t v45 = v39;
  *(unsigned char *)(v45 + 16) = v29;
  *(_OWORD *)(v45 + 24) = 0u;
  *(_OWORD *)(v45 + 40) = 0u;
  *(void *)(v45 + 56) = sub_1DB1EBD24;
  *(void *)(v45 + 64) = v40;
  sub_1DB1EBADC((uint64_t)&v84);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v44);
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = v74;
  unint64_t v48 = v73;
  uint64_t v49 = v75;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, *MEMORY[0x1E4F3CBD8], v75);
  uint64_t v50 = (uint64_t)v69;
  uint64_t v51 = (uint64_t *)&v69[*(int *)(v71 + 44)];
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904130);
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))((char *)v51 + *(int *)(v52 + 28), v48, v49);
  *uint64_t v51 = v46;
  sub_1DB0E8B70(v43, v50, &qword_1EA906048);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  sub_1DB0E8BD4(v43, &qword_1EA906048);
  type metadata accessor for VisualTranslationErrorViewModel();
  sub_1DB1EB168(&qword_1EA905B80, (void (*)(uint64_t))type metadata accessor for VisualTranslationErrorViewModel);
  swift_retain_n();
  uint64_t v53 = sub_1DB1EFDB0();
  uint64_t v55 = v54;
  uint64_t v56 = v76;
  sub_1DB0E8B70(v50, v76, &qword_1EA906050);
  swift_release();
  uint64_t v57 = (uint64_t *)(v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA906080) + 36));
  *uint64_t v57 = v53;
  v57[1] = v55;
  return sub_1DB0E8BD4(v50, &qword_1EA906050);
}

uint64_t sub_1DB1E2BA8@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1DB1EFA60();
  a1[1] = sub_1DB1EFA50();
  a1[2] = sub_1DB1EFA50();
  uint64_t v2 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for CameraPreviewDebugView() + 28));
  *uint64_t v2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DB1E2C98(uint64_t result, long long *a2)
{
  if (result)
  {
    long long v2 = *a2;
    swift_retain();
    sub_1DB1D6C3C();
    return sub_1DB1EE3E8((uint64_t)&v2);
  }
  return result;
}

uint64_t sub_1DB1E2CE8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_1DB1EECD4;
  return v6(a1);
}

size_t sub_1DB1E2DC4(uint64_t a1)
{
  return sub_1DB1E2DF8(a1, &qword_1EBA4E4E0, (uint64_t (*)(void))type metadata accessor for TextModel, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1DB1E9174);
}

size_t sub_1DB1E2DF8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(a3(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      uint64_t v14 = a4(&v15, (char *)v11 + v10, v4, a1);
      swift_bridgeObjectRetain();
      sub_1DB0FC3EC();
      if (v14 == v4) {
        return (size_t)v11;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1DB1E2F58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DB1A8C28(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DB0F93D8();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1DB0F138C((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1DB1E33F8(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1DB1E305C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DB1A8DE8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DB0F95C0();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1DB1EF570();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1DB0F1454(v12 + *(void *)(v20 + 72) * v6, a2, &qword_1EA903B10);
    sub_1DB1E35D0(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1DB1E322C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DB1A8DE8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DB0F9CAC();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1DB1EF570();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for VisualTranslationModel(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1DB1EE0B0(v12 + *(void *)(v20 + 72) * v6, a2, type metadata accessor for VisualTranslationModel);
    sub_1DB1E3C7C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for VisualTranslationModel(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

unint64_t sub_1DB1E33F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1DB1F19C0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DB1F1E80();
        swift_bridgeObjectRetain();
        sub_1DB1F1360();
        uint64_t v10 = sub_1DB1F1EC0();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1DB1E35D0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = sub_1DB1F19C0();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v40 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v41 = v13;
      uint64_t v38 = (void (**)(char *, uint64_t))(v13 - 8);
      long long v39 = v14;
      uint64_t v37 = v11;
      do
      {
        uint64_t v16 = v8;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v10;
        v39(v7, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
        uint64_t v19 = sub_1DB1F11D0();
        (*v38)(v7, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v40)
        {
          if (v20 >= v40 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10) - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t v26 = v23 + v24 * a1;
            int64_t v27 = v24 * v10;
            unint64_t v28 = v23 + v24 * v10 + v24;
            BOOL v29 = v25 < v27 || v26 >= v28;
            uint64_t v8 = v16;
            if (v29)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v11 = v37;
            }
            else
            {
              a1 = v10;
              uint64_t v11 = v37;
              if (v25 != v27)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v40 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v8 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DB1E391C(int64_t a1, uint64_t a2)
{
  uint64_t v33 = type metadata accessor for TextModel();
  uint64_t v4 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = sub_1DB1F19C0();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v34 = (v11 + 1) & v10;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v10;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v9;
        uint64_t v16 = v13;
        sub_1DB1EB0E0(*(void *)(a2 + 48) + v12 * v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB1F1E80();
        uint64_t v17 = sub_1DB1EF570();
        sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
        sub_1DB1F11E0();
        uint64_t v18 = sub_1DB1F1EC0();
        sub_1DB1EA16C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextModel);
        uint64_t v13 = v16;
        unint64_t v19 = v18 & v16;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 < v34)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= (uint64_t)v19) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v19 >= v34 || a1 >= (uint64_t)v19)
          {
LABEL_12:
            if (v12 * a1 < v15
              || *(void *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v12 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = *(void *)(*(void *)(v17 - 8) + 72);
            int64_t v22 = v21 * a1;
            unint64_t v23 = v20 + v21 * a1;
            unint64_t v24 = v20 + v21 * v9 + v21;
            if (v21 * a1 < (uint64_t)(v21 * v9) || v23 >= v24)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              uint64_t v13 = v16;
            }
            else
            {
              a1 = v9;
              uint64_t v13 = v16;
              if (v22 != v21 * v9)
              {
                swift_arrayInitWithTakeBackToFront();
                uint64_t v13 = v16;
                a1 = v9;
              }
            }
          }
        }
        unint64_t v9 = (v9 + 1) & v13;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    unint64_t v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  uint64_t *v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DB1E3C7C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = sub_1DB1F19C0();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v40 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v41 = v13;
      uint64_t v38 = (void (**)(char *, uint64_t))(v13 - 8);
      long long v39 = v14;
      uint64_t v37 = v11;
      do
      {
        uint64_t v16 = v8;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v10;
        v39(v7, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
        uint64_t v19 = sub_1DB1F11D0();
        (*v38)(v7, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v40)
        {
          if (v20 >= v40 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for VisualTranslationModel(0) - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t v26 = v23 + v24 * a1;
            int64_t v27 = v24 * v10;
            unint64_t v28 = v23 + v24 * v10 + v24;
            BOOL v29 = v25 < v27 || v26 >= v28;
            uint64_t v8 = v16;
            if (v29)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v11 = v37;
            }
            else
            {
              a1 = v10;
              uint64_t v11 = v37;
              if (v25 != v27)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v40 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v8 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *BOOL v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

_OWORD *sub_1DB1E3FC4(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1DB1A8CA0((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1DB0F9210();
      goto LABEL_7;
    }
    sub_1DB0F76E4(v12, a3 & 1);
    unint64_t v18 = sub_1DB1A8CA0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    double result = (_OWORD *)sub_1DB1F1E00();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    return sub_1DB0F138C(a1, v16);
  }
LABEL_13:
  sub_1DB1E4610(v9, (uint64_t)a2, a1, v15);
  return a2;
}

_OWORD *sub_1DB1E4108(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1DB1A8C28(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1DB0F93D8();
      goto LABEL_7;
    }
    sub_1DB0F7A20(v15, a4 & 1);
    unint64_t v21 = sub_1DB1A8C28(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    double result = (_OWORD *)sub_1DB1F1E00();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    char v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_1DB0F138C(a1, v19);
  }
LABEL_13:
  sub_1DB1E4678(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1DB1E425C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1DB1EF570();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DB1A8DE8(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
      return sub_1DB1EEBD0(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, &qword_1EA903B10);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DB0F95C0();
    goto LABEL_7;
  }
  sub_1DB0F7D20(v17, a3 & 1);
  unint64_t v24 = sub_1DB1A8DE8(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1DB1F1E00();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1DB1E46E4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1DB1E4428(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1DB1EF570();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1DB1A8DE8(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1DB0F9CAC();
      goto LABEL_7;
    }
    sub_1DB0F8720(v17, a3 & 1);
    unint64_t v24 = sub_1DB1A8DE8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      unint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1DB1E47CC(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1DB1F1E00();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = v21 + *(void *)(*(void *)(type metadata accessor for VisualTranslationModel(0) - 8) + 72) * v14;
  return sub_1DB1EE524(a1, v22);
}

_OWORD *sub_1DB1E4610(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1DB0F138C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_1DB1E4678(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1DB0F138C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1DB1E46E4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1DB1EF570();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  uint64_t result = sub_1DB0F1454(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, &qword_1EA903B10);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1DB1E47CC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1DB1EF570();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for VisualTranslationModel(0);
  uint64_t result = sub_1DB1EE0B0(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, type metadata accessor for VisualTranslationModel);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1DB1E48BC(void *a1, void *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1DB1F1A00();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA903D18);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1DB1F19F0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1DB1E55D4(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_1DB1E57CC();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_1DB1E6880((uint64_t)v8, v22);
    *int64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DB1F1880();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA903D18);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1DB1F1890();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1DB1F1890();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1DB1E6904((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1DB1E4B5C(uint64_t a1, char *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1DB1EB168(&qword_1EA904860, MEMORY[0x1E4F27A78]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1DB1F11D0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    id v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1DB1EB168(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
      char v21 = sub_1DB1F1230();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      id v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        int64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_1DB1E6A8C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *int64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1DB1E4E80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1DB1F1E80();
  swift_bridgeObjectRetain();
  sub_1DB1F1360();
  uint64_t v8 = sub_1DB1F1EC0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1DB1F1DB0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1DB1F1DB0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *int64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1DB1E6D48(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *int64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1DB1E5030(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1DB1F1E80();
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1DB1F1EC0();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v27 = a2;
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v6 + 48);
    sub_1DB11A9DC(a2 + 16, (uint64_t)v31);
    do
    {
      uint64_t v14 = v13 + 48 * v11;
      double v15 = *(double *)(v14 + 16);
      char v16 = *(unsigned char *)(v14 + 24);
      BOOL v17 = *(void *)v14 == v7 && *(void *)(v14 + 8) == v8;
      if (v17 || (sub_1DB1F1DB0() & 1) != 0)
      {
        if (v16)
        {
          if (v15 == 0.0)
          {
            sub_1DB11A9DC((uint64_t)v31, (uint64_t)&v35);
            if (v36 == 1 && !v35) {
              goto LABEL_20;
            }
          }
          else
          {
            sub_1DB11A9DC((uint64_t)v31, (uint64_t)&v29);
            if (v30 == 1 && v29) {
              goto LABEL_20;
            }
          }
        }
        else
        {
          sub_1DB11A9DC((uint64_t)v31, (uint64_t)v32);
          if ((v32[8] & 1) == 0 || (sub_1DB11A9DC((uint64_t)v31, (uint64_t)&v33), (v34 & 1) == 0) && v33 == v15)
          {
LABEL_20:
            swift_bridgeObjectRelease();
            sub_1DB1EEC34(v27);
            uint64_t v18 = *(void *)(*v2 + 48) + 48 * v11;
            uint64_t v19 = *(void *)(v18 + 8);
            uint64_t v20 = *(void *)(v18 + 16);
            char v21 = *(unsigned char *)(v18 + 24);
            uint64_t v22 = *(void *)(v18 + 32);
            uint64_t v23 = *(void *)(v18 + 40);
            *(void *)a1 = *(void *)v18;
            *(void *)(a1 + 8) = v19;
            *(void *)(a1 + 16) = v20;
            *(unsigned char *)(a1 + 24) = v21;
            *(void *)(a1 + 32) = v22;
            *(void *)(a1 + 40) = v23;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            return 0;
          }
        }
      }
      unint64_t v11 = (v11 + 1) & v12;
    }
    while (((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    swift_bridgeObjectRelease();
    a2 = v27;
    int64_t v3 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = *v3;
  *int64_t v3 = 0x8000000000000000;
  sub_1DB11A6B4(a2);
  sub_1DB1E6EE4(a2, v11, isUniquelyReferenced_nonNull_native);
  *int64_t v3 = v28;
  swift_bridgeObjectRelease();
  long long v26 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v26;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return 1;
}

uint64_t sub_1DB1E52B0(uint64_t a1, char *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = sub_1DB1EF570();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  double v33 = a2;
  uint64_t v11 = sub_1DB1F11D0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    BOOL v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1DB1EB168(&qword_1EA904F98, MEMORY[0x1E4F27990]);
      char v21 = sub_1DB1F1230();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        int64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_1DB1E711C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *int64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1DB1E55D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA906190);
    uint64_t v2 = sub_1DB1F1A70();
    uint64_t v14 = v2;
    sub_1DB1F19E0();
    if (sub_1DB1F1A10())
    {
      sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA903D18);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1DB1E57CC();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_1DB1F1880();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1DB1F1A10());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1DB1E57CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA906190);
  uint64_t v3 = sub_1DB1F1A60();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1DB1F1880();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1DB1E5A6C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1DB1EF6B0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906180);
  uint64_t v5 = sub_1DB1F1A60();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1DB1EB168(&qword_1EA904860, MEMORY[0x1E4F27A78]);
      uint64_t result = sub_1DB1F11D0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1DB1E5E68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E5F8);
  uint64_t v3 = sub_1DB1F1A60();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1DB1F1E80();
      sub_1DB1F1360();
      uint64_t result = sub_1DB1F1EC0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1DB1E6148()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906188);
  uint64_t v3 = sub_1DB1F1A60();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v35 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v34 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v36 = v2;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        int64_t v37 = v10;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v34) {
          goto LABEL_33;
        }
        unint64_t v16 = v35[v15];
        int64_t v17 = v10 + 1;
        if (!v16)
        {
          int64_t v17 = v10 + 2;
          if (v10 + 2 >= v34) {
            goto LABEL_33;
          }
          unint64_t v16 = v35[v17];
          if (!v16)
          {
            int64_t v17 = v10 + 3;
            if (v10 + 3 >= v34) {
              goto LABEL_33;
            }
            unint64_t v16 = v35[v17];
            if (!v16)
            {
              uint64_t v18 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
                if (v33 > 63) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v35[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v34) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v35[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        int64_t v37 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = *(void *)(v2 + 48) + 48 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      uint64_t v22 = *(void *)(v19 + 16);
      char v23 = *(unsigned char *)(v19 + 24);
      uint64_t v25 = *(void *)(v19 + 32);
      uint64_t v24 = *(void *)(v19 + 40);
      sub_1DB1F1E80();
      swift_bridgeObjectRetain();
      sub_1DB1F1360();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DB1F1EC0();
      uint64_t v26 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 48 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(void *)(v12 + 16) = v22;
      *(unsigned char *)(v12 + 24) = v23;
      *(void *)(v12 + 32) = v25;
      *(void *)(v12 + 40) = v24;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v36;
      int64_t v10 = v37;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1DB1E6484()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1DB1EF570();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906110);
  uint64_t v5 = sub_1DB1F1A60();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    int64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1DB1F11D0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_1DB1E6880(uint64_t a1, uint64_t a2)
{
  sub_1DB1F1880();
  unint64_t result = sub_1DB1F19D0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1DB1E6904(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1DB1E57CC();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1DB1E73D8();
      goto LABEL_14;
    }
    sub_1DB1E7BC0();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1DB1F1880();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA903D18);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1DB1F1890();

    if (v12)
    {
LABEL_13:
      sub_1DB1F1DF0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1DB1F1890();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_1DB1E6A8C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1DB1E5A6C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1DB1E7910(MEMORY[0x1E4F27A78], &qword_1EA906180);
      goto LABEL_12;
    }
    sub_1DB1E7E3C();
  }
  uint64_t v13 = *v3;
  sub_1DB1EB168(&qword_1EA904860, MEMORY[0x1E4F27A78]);
  uint64_t v14 = sub_1DB1F11D0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    unint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    BOOL v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1DB1EB168(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
      char v22 = sub_1DB1F1230();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1DB1F1DF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB1E6D48(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1DB1E5E68();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1DB1E7584();
      goto LABEL_22;
    }
    sub_1DB1E81EC();
  }
  uint64_t v11 = *v4;
  sub_1DB1F1E80();
  sub_1DB1F1360();
  uint64_t result = sub_1DB1F1EC0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1DB1F1DB0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1DB1F1DF0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1DB1F1DB0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1DB1E6EE4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_28;
  }
  if (a3)
  {
    sub_1DB1E6148();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1DB1E7738();
      goto LABEL_28;
    }
    sub_1DB1E849C();
  }
  uint64_t v8 = *v3;
  sub_1DB1F1E80();
  uint64_t v9 = *(void *)v5;
  uint64_t v10 = *(void *)(v5 + 8);
  swift_bridgeObjectRetain();
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DB1F1EC0();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v11;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v8 + 48);
    sub_1DB11A9DC(v5 + 16, (uint64_t)v29);
    do
    {
      uint64_t v15 = v14 + 48 * a2;
      double v16 = *(double *)(v15 + 16);
      char v17 = *(unsigned char *)(v15 + 24);
      BOOL v18 = *(void *)v15 == v9 && *(void *)(v15 + 8) == v10;
      if (v18 || (uint64_t result = sub_1DB1F1DB0(), (result & 1) != 0))
      {
        if (v17)
        {
          if (v16 == 0.0)
          {
            uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v33);
            if (v34 == 1 && !v33) {
              goto LABEL_27;
            }
          }
          else
          {
            uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v27);
            if (v28 == 1 && v27) {
              goto LABEL_27;
            }
          }
        }
        else
        {
          sub_1DB11A9DC((uint64_t)v29, (uint64_t)v30);
          if ((v30[8] & 1) == 0 || (uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v31), (v32 & 1) == 0) && v31 == v16)
          {
LABEL_27:
            uint64_t result = sub_1DB1F1DF0();
            __break(1u);
            break;
          }
        }
      }
      a2 = (a2 + 1) & v13;
    }
    while (((*(void *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_28:
  uint64_t v19 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v20 = (_OWORD *)(*(void *)(v19 + 48) + 48 * a2);
  long long v21 = *(_OWORD *)v5;
  long long v22 = *(_OWORD *)(v5 + 32);
  v20[1] = *(_OWORD *)(v5 + 16);
  v20[2] = v22;
  *uint64_t v20 = v21;
  uint64_t v23 = *(void *)(v19 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v25;
  }
  return result;
}

uint64_t sub_1DB1E711C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1DB1EF570();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1DB1E6484();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1DB1E7910(MEMORY[0x1E4F27990], &qword_1EA906110);
      goto LABEL_12;
    }
    sub_1DB1E87AC();
  }
  uint64_t v13 = *v3;
  sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  uint64_t v14 = sub_1DB1F11D0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    BOOL v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1DB1EB168(&qword_1EA904F98, MEMORY[0x1E4F27990]);
      char v22 = sub_1DB1F1230();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1DB1F1DF0();
  __break(1u);
  return result;
}

id sub_1DB1E73D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA906190);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DB1F1A50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DB1E7584()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E5F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DB1F1A50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DB1E7738()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906188);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DB1F1A50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
    char v20 = *(unsigned char *)(v17 + 24);
    uint64_t v21 = *(void *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 40);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v19;
    *(unsigned char *)(v23 + 24) = v20;
    *(void *)(v23 + 32) = v21;
    *(void *)(v23 + 40) = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DB1E7910(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __n128 v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1DB1F1A50();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  int64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1DB1E7BC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA906190);
  uint64_t v3 = sub_1DB1F1A60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1DB1F1880();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DB1E7E3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906180);
  uint64_t v7 = sub_1DB1F1A60();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  char v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1DB1EB168(&qword_1EA904860, MEMORY[0x1E4F27A78]);
    uint64_t result = sub_1DB1F11D0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DB1E81EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E5F8);
  uint64_t v3 = sub_1DB1F1A60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1DB1F1E80();
    swift_bridgeObjectRetain();
    sub_1DB1F1360();
    uint64_t result = sub_1DB1F1EC0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DB1E849C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906188);
  uint64_t v3 = sub_1DB1F1A60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v33 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v34 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v35 = v2;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v36 = v10;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v34) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    int64_t v17 = v10 + 1;
    if (!v16)
    {
      int64_t v17 = v10 + 2;
      if (v10 + 2 >= v34) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v10 + 3;
        if (v10 + 3 >= v34) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    int64_t v36 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(v2 + 48) + 48 * v14;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    char v23 = *(unsigned char *)(v19 + 24);
    uint64_t v25 = *(void *)(v19 + 32);
    uint64_t v24 = *(void *)(v19 + 40);
    sub_1DB1F1E80();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1DB1F1360();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DB1F1EC0();
    uint64_t v26 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 48 * v11;
    *(void *)uint64_t v12 = v20;
    *(void *)(v12 + 8) = v21;
    *(void *)(v12 + 16) = v22;
    *(unsigned char *)(v12 + 24) = v23;
    *(void *)(v12 + 32) = v25;
    *(void *)(v12 + 40) = v24;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v35;
    int64_t v10 = v36;
  }
  uint64_t v18 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v34) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DB1E87AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DB1EF570();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906110);
  uint64_t v7 = sub_1DB1F1A60();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1DB1F11D0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DB1E8B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DB1EF570();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1DB1F11D0();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1DB1EB168(&qword_1EA904F98, MEMORY[0x1E4F27990]);
      char v19 = sub_1DB1F1230();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *unint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DB1E7910(MEMORY[0x1E4F27990], &qword_1EA906110);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1DB1E8E58(v12);
    *unint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1DB1E8E58(int64_t a1)
{
  uint64_t v3 = sub_1DB1EF570();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_1DB1F19C0();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      int64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
        uint64_t v21 = sub_1DB1F11D0();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

void sub_1DB1E9174(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TextModel();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v28 - v13;
  uint64_t v33 = a4;
  uint64_t v16 = a4 + 64;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v30 = -1 << *(unsigned char *)(a4 + 32);
  if (-v30 < 64) {
    uint64_t v17 = ~(-1 << -(char)v30);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
LABEL_34:
    uint64_t v27 = ~v30;
    *a1 = v33;
    a1[1] = v16;
    a1[2] = v27;
    a1[3] = v19;
    a1[4] = v18;
    return;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v29 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v31 = v16;
  int64_t v32 = (unint64_t)(63 - v30) >> 6;
  int64_t v28 = v32 - 1;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v26 = *(void *)(v9 + 72);
    sub_1DB1EB0E0(*(void *)(v33 + 48) + v26 * v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB1EE0B0((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextModel);
    sub_1DB1EE0B0((uint64_t)v14, a2, (uint64_t (*)(void))type metadata accessor for TextModel);
    if (v20 == a3) {
      goto LABEL_33;
    }
    a2 += v26;
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
LABEL_33:
      a1 = v29;
      uint64_t v16 = v31;
      goto LABEL_34;
    }
    uint64_t v16 = v31;
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23;
LABEL_39:
    a1 = v29;
    goto LABEL_34;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24) {
    goto LABEL_14;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v32) {
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v19 = v23 + 3;
  if (v23 + 3 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23 + 2;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24)
  {
LABEL_14:
    int64_t v23 = v19;
    goto LABEL_18;
  }
  int64_t v25 = v23 + 4;
  if (v23 + 4 >= v32)
  {
LABEL_36:
    unint64_t v18 = 0;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
      int64_t v19 = v28;
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

void sub_1DB1E9498(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v28 - v13;
  uint64_t v33 = a4;
  uint64_t v16 = a4 + 64;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v30 = -1 << *(unsigned char *)(a4 + 32);
  if (-v30 < 64) {
    uint64_t v17 = ~(-1 << -(char)v30);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
LABEL_34:
    uint64_t v27 = ~v30;
    *a1 = v33;
    a1[1] = v16;
    a1[2] = v27;
    a1[3] = v19;
    a1[4] = v18;
    return;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v29 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v31 = v16;
  int64_t v32 = (unint64_t)(63 - v30) >> 6;
  int64_t v28 = v32 - 1;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v26 = *(void *)(v9 + 72);
    sub_1DB1EB0E0(*(void *)(v33 + 56) + v26 * v22, (uint64_t)v11, type metadata accessor for VisualTranslationModel);
    sub_1DB1EE0B0((uint64_t)v11, (uint64_t)v14, type metadata accessor for VisualTranslationModel);
    sub_1DB1EE0B0((uint64_t)v14, a2, type metadata accessor for VisualTranslationModel);
    if (v20 == a3) {
      goto LABEL_33;
    }
    a2 += v26;
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
LABEL_33:
      a1 = v29;
      uint64_t v16 = v31;
      goto LABEL_34;
    }
    uint64_t v16 = v31;
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23;
LABEL_39:
    a1 = v29;
    goto LABEL_34;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24) {
    goto LABEL_14;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v32) {
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v19 = v23 + 3;
  if (v23 + 3 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23 + 2;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24)
  {
LABEL_14:
    int64_t v23 = v19;
    goto LABEL_18;
  }
  int64_t v25 = v23 + 4;
  if (v23 + 4 >= v32)
  {
LABEL_36:
    unint64_t v18 = 0;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
      int64_t v19 = v28;
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1DB1E97BC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1DB1E9844(uint64_t a1)
{
  __n128 v1 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)&v5 - v2, v1);
  return sub_1DB1F0340();
}

uint64_t type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EBA4DE60);
}

unint64_t sub_1DB1E9964(uint64_t a1, uint64_t a2)
{
  uint64_t v78 = sub_1DB1EF570();
  uint64_t v5 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (int *)type metadata accessor for TextModel();
  uint64_t v65 = *((void *)v10 - 1);
  MEMORY[0x1F4188790](v10);
  uint64_t v74 = (uint64_t)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)v58 - v13;
  uint64_t v70 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v15 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v66 = (uint64_t)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  int64_t v19 = (char *)v58 - v18;
  uint64_t v69 = *(void *)(a1 + 16);
  if (v69)
  {
    v58[1] = v2;
    unint64_t v62 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v68 = a1 + v62;
    v58[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v63 = (uint64_t *)(a2 + 112);
    swift_beginAccess();
    uint64_t v20 = 0;
    uint64_t v76 = v5 + 16;
    unint64_t v67 = MEMORY[0x1E4FBC860];
    uint64_t v21 = *(void *)(v15 + 72);
    uint64_t v75 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v73 = v14;
    uint64_t v59 = v5;
    uint64_t v61 = v9;
    uint64_t v60 = v10;
    long long v79 = v19;
    uint64_t v64 = v21;
    while (1)
    {
      uint64_t v22 = v68 + v21 * v20;
      uint64_t v23 = *(void *)(v22 + *(int *)(v70 + 28));
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        uint64_t v71 = v20;
        uint64_t v72 = v68 + v21 * v20;
        uint64_t v25 = v65;
        uint64_t v26 = v23 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
        swift_bridgeObjectRetain();
        uint64_t v27 = *(void *)(v25 + 72);
        while (1)
        {
          sub_1DB1EB0E0(v26, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextModel);
          if (*(void *)&v14[v10[11]]) {
            break;
          }
          int64_t v28 = &v14[v10[6]];
          uint64_t v30 = *(void *)v28;
          unint64_t v29 = *((void *)v28 + 1);
          uint64_t v31 = v30 & 0xFFFFFFFFFFFFLL;
          if (!((v29 & 0x2000000000000000) != 0 ? HIBYTE(v29) & 0xF : v31)) {
            break;
          }
          sub_1DB0E8B70((uint64_t)&v14[v10[7]], (uint64_t)v9, &qword_1EBA4E570);
          uint64_t v33 = sub_1DB1EF6B0();
          int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v9, 1, v33);
          sub_1DB0E8BD4((uint64_t)v9, &qword_1EBA4E570);
          if (v34 == 1) {
            break;
          }
          uint64_t v35 = &v14[v10[8]];
          unint64_t v36 = *((void *)v35 + 1);
          if (!v36) {
            break;
          }
          uint64_t v37 = *(void *)v35 & 0xFFFFFFFFFFFFLL;
          if (!((v36 & 0x2000000000000000) != 0 ? HIBYTE(v36) & 0xF : v37)) {
            break;
          }
          uint64_t v39 = (uint64_t)v14;
          uint64_t v40 = v74;
          sub_1DB1EB0E0(v39, v74, (uint64_t (*)(void))type metadata accessor for TextModel);
          uint64_t v41 = *(void *)(v40 + v10[11]);
          uint64_t v42 = v40;
          unint64_t v14 = v73;
          sub_1DB1EA16C(v42, (uint64_t (*)(void))type metadata accessor for TextModel);
          sub_1DB1EA16C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextModel);
          if (v41) {
            goto LABEL_22;
          }
          v26 += v27;
          if (!--v24)
          {
            swift_bridgeObjectRelease();
            int64_t v19 = v79;
            uint64_t v20 = v71;
            uint64_t v22 = v72;
            uint64_t v21 = v64;
            goto LABEL_3;
          }
        }
        uint64_t v43 = v74;
        sub_1DB1EB0E0((uint64_t)v14, v74, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB1EA16C(v43, (uint64_t (*)(void))type metadata accessor for TextModel);
        sub_1DB1EA16C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextModel);
LABEL_22:
        swift_bridgeObjectRelease();
        int64_t v19 = v79;
        sub_1DB1EB0E0(v72, (uint64_t)v79, type metadata accessor for VisualTranslationModel);
        uint64_t v44 = *v63;
        if (*(void *)(*v63 + 16))
        {
          sub_1DB1EB168(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
          swift_bridgeObjectRetain();
          uint64_t v45 = sub_1DB1F11D0();
          uint64_t v46 = -1 << *(unsigned char *)(v44 + 32);
          unint64_t v47 = v45 & ~v46;
          if ((*(void *)(v44 + 56 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47))
          {
            uint64_t v48 = ~v46;
            uint64_t v49 = *(void *)(v59 + 72);
            uint64_t v50 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
            while (1)
            {
              uint64_t v52 = v77;
              uint64_t v51 = v78;
              v50(v77, *(void *)(v44 + 48) + v49 * v47, v78);
              sub_1DB1EB168(&qword_1EA904F98, MEMORY[0x1E4F27990]);
              char v53 = sub_1DB1F1230();
              (*v75)(v52, v51);
              if (v53) {
                break;
              }
              unint64_t v47 = (v47 + 1) & v48;
              if (((*(void *)(v44 + 56 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
                goto LABEL_27;
              }
            }
            swift_bridgeObjectRelease();
            int64_t v19 = v79;
            sub_1DB1EA16C((uint64_t)v79, type metadata accessor for VisualTranslationModel);
            uint64_t v9 = v61;
            unint64_t v10 = v60;
            unint64_t v14 = v73;
            uint64_t v20 = v71;
            uint64_t v21 = v64;
            goto LABEL_4;
          }
LABEL_27:
          swift_bridgeObjectRelease();
          uint64_t v9 = v61;
          unint64_t v10 = v60;
          unint64_t v14 = v73;
          int64_t v19 = v79;
        }
        sub_1DB1EA16C((uint64_t)v19, type metadata accessor for VisualTranslationModel);
        sub_1DB1EB0E0(v72, v66, type metadata accessor for VisualTranslationModel);
        unint64_t v54 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v54 = sub_1DB188C74(0, *(void *)(v54 + 16) + 1, 1, v54);
        }
        uint64_t v21 = v64;
        unint64_t v56 = *(void *)(v54 + 16);
        unint64_t v55 = *(void *)(v54 + 24);
        if (v56 >= v55 >> 1) {
          unint64_t v54 = sub_1DB188C74(v55 > 1, v56 + 1, 1, v54);
        }
        *(void *)(v54 + 16) = v56 + 1;
        unint64_t v67 = v54;
        sub_1DB1EE0B0(v66, v54 + v62 + v56 * v21, type metadata accessor for VisualTranslationModel);
        uint64_t v20 = v71;
      }
      else
      {
LABEL_3:
        sub_1DB1EB0E0(v22, (uint64_t)v19, type metadata accessor for VisualTranslationModel);
        sub_1DB1EA16C((uint64_t)v19, type metadata accessor for VisualTranslationModel);
      }
LABEL_4:
      if (++v20 == v69)
      {
        swift_bridgeObjectRelease();
        return v67;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DB1EA16C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB1EA1CC()
{
  return sub_1DB1D5EB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DB1EA1E8(uint64_t a1)
{
  uint64_t v128 = type metadata accessor for TextModel();
  uint64_t v129 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v3 = (char *)&v128 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA906128);
  MEMORY[0x1F4188790](v143);
  uint64_t v5 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v135 = (char *)&v128 - v7;
  MEMORY[0x1F4188790](v8);
  long long v134 = (char *)&v128 - v9;
  MEMORY[0x1F4188790](v10);
  long long v140 = (char *)&v128 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v139 = (uint64_t)&v128 - v13;
  MEMORY[0x1F4188790](v14);
  long long v141 = (char *)&v128 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v128 - v17;
  uint64_t v19 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v149 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v128 - v23;
  uint64_t v25 = self;
  id v26 = objc_msgSend(v25, sel_standardUserDefaults);
  uint64_t v27 = (void *)sub_1DB1F1260();
  LODWORD(v148) = objc_msgSend(v26, sel_BOOLForKey_, v27);

  uint64_t v142 = a1;
  if (v148)
  {
    unint64_t v137 = (unint64_t)v24;
    uint64_t v138 = (uint64_t)v18;
    int64_t v28 = *(void *)(a1 + 16);
    uint64_t v29 = MEMORY[0x1E4FBC860];
    if (v28)
    {
      *(void *)&long long v150 = MEMORY[0x1E4FBC860];
      sub_1DB12EB0C(0, v28, 0);
      uint64_t result = sub_1DB1E97BC(a1);
      uint64_t v32 = result;
      uint64_t v33 = 0;
      uint64_t v34 = a1 + 64;
      char v35 = *(unsigned char *)(a1 + 32);
      uint64_t v133 = a1 + 88;
      unint64_t v36 = v141;
      uint64_t v37 = v138;
      long long v134 = (char *)v28;
      long long v135 = v31;
      uint64_t v136 = a1 + 64;
      while (1)
      {
        if (v32 < 0 || v32 >= 1 << v35) {
          goto LABEL_67;
        }
        if ((*(void *)(v34 + 8 * ((unint64_t)v32 >> 6)) & (1 << v32)) == 0) {
          goto LABEL_68;
        }
        if (*(_DWORD *)(a1 + 36) != v31) {
          goto LABEL_69;
        }
        uint64_t v145 = 1 << v32;
        unint64_t v146 = (unint64_t)v32 >> 6;
        uint64_t v144 = v33;
        uint64_t v39 = v143;
        uint64_t v40 = v37 + *(int *)(v143 + 48);
        uint64_t v41 = *(void *)(a1 + 48);
        uint64_t v42 = sub_1DB1EF570();
        long long v147 = *(char **)(v42 - 8);
        uint64_t v43 = v41 + *((void *)v147 + 9) * v32;
        uint64_t v44 = a1;
        uint64_t v45 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v147 + 2);
        v45(v37, v43, v42);
        uint64_t v46 = *(void *)(v44 + 56);
        uint64_t v148 = *(void *)(v149 + 72);
        sub_1DB1EB0E0(v46 + v148 * v32, v40, type metadata accessor for VisualTranslationModel);
        v45((uint64_t)v36, v37, v42);
        sub_1DB1EB0E0(v40, (uint64_t)&v36[*(int *)(v39 + 48)], type metadata accessor for VisualTranslationModel);
        uint64_t v47 = (uint64_t)v36;
        uint64_t v48 = v139;
        sub_1DB0F1454(v47, v139, &qword_1EA906128);
        sub_1DB0E8BD4(v37, &qword_1EA906128);
        uint64_t v49 = *(int *)(v39 + 48);
        uint64_t v50 = v140;
        uint64_t v51 = (uint64_t)&v140[v49];
        uint64_t v52 = v48 + v49;
        v45((uint64_t)v140, v48, v42);
        uint64_t v53 = v137;
        sub_1DB1EB0E0(v52, v51, type metadata accessor for VisualTranslationModel);
        sub_1DB1EE0B0(v51, v53, type metadata accessor for VisualTranslationModel);
        (*((void (**)(char *, uint64_t))v147 + 1))(v50, v42);
        sub_1DB0E8BD4(v48, &qword_1EA906128);
        uint64_t v29 = v150;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12EB0C(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v150;
        }
        unint64_t v55 = *(void *)(v29 + 16);
        unint64_t v54 = *(void *)(v29 + 24);
        a1 = v142;
        unint64_t v36 = v141;
        if (v55 >= v54 >> 1)
        {
          sub_1DB12EB0C(v54 > 1, v55 + 1, 1);
          uint64_t v29 = v150;
        }
        *(void *)(v29 + 16) = v55 + 1;
        uint64_t result = sub_1DB1EE0B0(v53, v29+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ v55 * v148, type metadata accessor for VisualTranslationModel);
        char v35 = *(unsigned char *)(a1 + 32);
        unint64_t v38 = 1 << v35;
        if (v32 >= 1 << v35) {
          goto LABEL_70;
        }
        uint64_t v34 = v136;
        uint64_t v56 = v146;
        uint64_t v57 = *(void *)(v136 + 8 * v146);
        if ((v57 & v145) == 0) {
          goto LABEL_71;
        }
        LODWORD(v31) = v135;
        if (*(_DWORD *)(a1 + 36) != v135) {
          goto LABEL_72;
        }
        unint64_t v58 = v57 & (-2 << (v32 & 0x3F));
        if (v58)
        {
          unint64_t v38 = __clz(__rbit64(v58)) | v32 & 0xFFFFFFFFFFFFFFC0;
          uint64_t v37 = v138;
          uint64_t v59 = v134;
          goto LABEL_6;
        }
        uint64_t v60 = v146 + 1;
        unint64_t v61 = (v38 + 63) >> 6;
        uint64_t v59 = v134;
        if (v146 + 1 < v61)
        {
          unint64_t v62 = *(void *)(v136 + 8 * v60);
          if (!v62)
          {
            uint64_t v60 = v146 + 2;
            if (v146 + 2 >= v61) {
              goto LABEL_5;
            }
            unint64_t v62 = *(void *)(v136 + 8 * v60);
            if (!v62)
            {
              while (v61 - 3 != v56)
              {
                unint64_t v62 = *(void *)(v133 + 8 * v56++);
                if (v62)
                {
                  uint64_t v60 = v56 + 2;
                  goto LABEL_4;
                }
              }
              goto LABEL_5;
            }
          }
LABEL_4:
          unint64_t v38 = __clz(__rbit64(v62)) + (v60 << 6);
        }
LABEL_5:
        uint64_t v37 = v138;
LABEL_6:
        uint64_t v33 = v144 + 1;
        uint64_t v32 = v38;
        if ((char *)(v144 + 1) == v59) {
          return v29;
        }
      }
    }
    return v29;
  }
  uint64_t v63 = (uint64_t)v135;
  long long v147 = v21;
  uint64_t v148 = v19;
  id v64 = objc_msgSend(v25, sel_standardUserDefaults);
  uint64_t v65 = (void *)sub_1DB1F1260();
  unsigned int v66 = objc_msgSend(v64, sel_BOOLForKey_, v65);

  if (!v66) {
    return 0;
  }
  int64_t v67 = *(void *)(a1 + 16);
  uint64_t v29 = MEMORY[0x1E4FBC860];
  if (!v67) {
    return v29;
  }
  uint64_t v161 = MEMORY[0x1E4FBC860];
  sub_1DB12EB0C(0, v67, 0);
  uint64_t result = sub_1DB1E97BC(a1);
  uint64_t v69 = (uint64_t)v134;
  if (result < 0 || result >= 1 << *(unsigned char *)(a1 + 32)) {
    goto LABEL_78;
  }
  uint64_t v70 = a1 + 64;
  uint64_t v133 = a1 + 80;
  uint64_t v71 = 1;
  unint64_t v146 = (unint64_t)v5;
  int64_t v130 = v67;
  uint64_t v131 = v68;
  uint64_t v132 = a1 + 64;
  while (1)
  {
    if ((*(void *)(v70 + 8 * ((unint64_t)result >> 6)) & (1 << result)) == 0) {
      goto LABEL_73;
    }
    if (*(_DWORD *)(a1 + 36) != v68) {
      break;
    }
    unint64_t v137 = (unint64_t)result >> 6;
    uint64_t v138 = 1 << result;
    uint64_t v136 = v71;
    uint64_t v72 = v143;
    uint64_t v145 = v69 + *(int *)(v143 + 48);
    uint64_t v73 = *(void *)(a1 + 48);
    uint64_t v74 = result;
    uint64_t v75 = sub_1DB1EF570();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16);
    uint64_t v78 = a1;
    uint64_t v79 = v76 + 16;
    v77(v69, v73 + *(void *)(v76 + 72) * v74, v75);
    uint64_t v80 = *(void *)(v78 + 56);
    long long v81 = *(char **)(v149 + 72);
    uint64_t v144 = v74;
    long long v141 = v81;
    uint64_t v82 = v145;
    sub_1DB1EB0E0(v80 + (void)v81 * v74, v145, type metadata accessor for VisualTranslationModel);
    long long v140 = (char *)v75;
    uint64_t v83 = v75;
    long long v84 = (void (*)(char *, uint64_t, char *))v77;
    uint64_t v139 = v79;
    v77(v63, v69, v83);
    sub_1DB1EB0E0(v82, v63 + *(int *)(v72 + 48), type metadata accessor for VisualTranslationModel);
    uint64_t v85 = v146;
    sub_1DB0F1454(v63, v146, &qword_1EA906128);
    sub_1DB0E8BD4(v69, &qword_1EA906128);
    uint64_t v86 = v85 + *(int *)(v72 + 48);
    unint64_t v87 = *(void *)(v86 + *(int *)(v148 + 28));
    uint64_t v88 = sub_1DB187CA4(v87);
    uint64_t v89 = *(void *)(v88 + 16);
    uint64_t v145 = v88;
    if (v89)
    {
      uint64_t v90 = v129;
      unint64_t v91 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
      uint64_t v92 = v88 + v91;
      swift_bridgeObjectRetain();
      uint64_t v93 = *(void *)(v90 + 72);
      uint64_t v94 = v128;
      while (1)
      {
        sub_1DB1EB0E0(v92, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for TextModel);
        unint64_t v95 = *(void *)&v3[*(int *)(v94 + 20)];
        if ((v95 & 0x8000000000000000) == 0 && (int64_t)v95 < *(void *)(v87 + 16))
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1DB188FC0(v87);
            unint64_t v87 = result;
          }
          if (v95 >= *(void *)(v87 + 16))
          {
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
          sub_1DB189018((uint64_t)v3, v87 + v91 + v95 * v93);
        }
        sub_1DB1EA16C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for TextModel);
        v92 += v93;
        if (!--v89) {
          goto LABEL_45;
        }
      }
    }
    swift_bridgeObjectRetain();
LABEL_45:
    uint64_t v96 = v147;
    v84(v147, v86, v140);
    char v97 = (int *)v148;
    uint64_t v98 = v86 + *(int *)(v148 + 20);
    long long v99 = *(_OWORD *)(v98 + 144);
    long long v158 = *(_OWORD *)(v98 + 128);
    long long v159 = v99;
    uint64_t v160 = *(void *)(v98 + 160);
    long long v100 = *(_OWORD *)(v98 + 80);
    long long v154 = *(_OWORD *)(v98 + 64);
    long long v155 = v100;
    long long v101 = *(_OWORD *)(v98 + 112);
    long long v156 = *(_OWORD *)(v98 + 96);
    long long v157 = v101;
    long long v102 = *(_OWORD *)(v98 + 48);
    long long v152 = *(_OWORD *)(v98 + 32);
    long long v153 = v102;
    long long v103 = *(_OWORD *)v98;
    long long v151 = *(_OWORD *)(v98 + 16);
    long long v150 = v103;
    uint64_t v104 = *(int *)(v148 + 24);
    uint64_t v105 = v86 + v104;
    uint64_t v106 = &v96[v104];
    uint64_t v107 = sub_1DB1EF520();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v107 - 8) + 16))(v106, v105, v107);
    swift_bridgeObjectRelease();
    uint64_t v108 = *(void *)(v86 + v97[8]);
    char v109 = *(unsigned char *)(v86 + v97[9]);
    char v110 = *(unsigned char *)(v86 + v97[10]);
    uint64_t v111 = &v96[v97[5]];
    long long v112 = v159;
    *((_OWORD *)v111 + 8) = v158;
    *((_OWORD *)v111 + 9) = v112;
    *((void *)v111 + 20) = v160;
    long long v113 = v155;
    *((_OWORD *)v111 + 4) = v154;
    *((_OWORD *)v111 + 5) = v113;
    long long v114 = v157;
    *((_OWORD *)v111 + 6) = v156;
    *((_OWORD *)v111 + 7) = v114;
    long long v115 = v151;
    *(_OWORD *)uint64_t v111 = v150;
    *((_OWORD *)v111 + 1) = v115;
    long long v116 = v153;
    *((_OWORD *)v111 + 2) = v152;
    *((_OWORD *)v111 + 3) = v116;
    *(void *)&v96[v97[7]] = v87;
    *(void *)&v96[v97[8]] = v108;
    v96[v97[9]] = v109;
    v96[v97[10]] = v110;
    v96[v97[11]] = 0;
    sub_1DB0E8BD4(v146, &qword_1EA906128);
    uint64_t v29 = v161;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DB12EB0C(0, *(void *)(v29 + 16) + 1, 1);
      uint64_t v29 = v161;
    }
    a1 = v142;
    uint64_t v63 = (uint64_t)v135;
    uint64_t v69 = (uint64_t)v134;
    unint64_t v118 = *(void *)(v29 + 16);
    unint64_t v117 = *(void *)(v29 + 24);
    uint64_t v119 = (uint64_t)v147;
    if (v118 >= v117 >> 1)
    {
      sub_1DB12EB0C(v117 > 1, v118 + 1, 1);
      uint64_t v119 = (uint64_t)v147;
      uint64_t v29 = v161;
    }
    *(void *)(v29 + 16) = v118 + 1;
    uint64_t result = sub_1DB1EE0B0(v119, v29+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ v118 * (void)v141, type metadata accessor for VisualTranslationModel);
    char v120 = *(unsigned char *)(a1 + 32);
    if (v144 >= 1 << v120) {
      goto LABEL_75;
    }
    uint64_t v70 = v132;
    unint64_t v121 = v137;
    uint64_t v122 = *(void *)(v132 + 8 * v137);
    if ((v122 & v138) == 0) {
      goto LABEL_76;
    }
    LODWORD(v68) = v131;
    if (*(_DWORD *)(a1 + 36) != v131) {
      goto LABEL_77;
    }
    unint64_t v123 = v122 & (-2 << (v144 & 0x3F));
    if (v123)
    {
      uint64_t result = __clz(__rbit64(v123)) | v144 & 0xFFFFFFFFFFFFFFC0;
      int64_t v124 = v130;
    }
    else
    {
      unint64_t v125 = v137 + 1;
      unint64_t v126 = (unint64_t)((1 << v120) + 63) >> 6;
      int64_t v124 = v130;
      if (v137 + 1 >= v126) {
        goto LABEL_60;
      }
      unint64_t v127 = *(void *)(v132 + 8 * v125);
      if (!v127)
      {
        while (v126 - 2 != v121)
        {
          unint64_t v127 = *(void *)(v133 + 8 * v121++);
          if (v127)
          {
            unint64_t v125 = v121 + 1;
            goto LABEL_59;
          }
        }
LABEL_60:
        uint64_t result = 1 << v120;
        goto LABEL_61;
      }
LABEL_59:
      uint64_t result = __clz(__rbit64(v127)) + (v125 << 6);
    }
LABEL_61:
    if (v136 == v124) {
      return v29;
    }
    if ((result & 0x8000000000000000) == 0)
    {
      uint64_t v71 = v136 + 1;
      if (result < 1 << v120) {
        continue;
      }
    }
    goto LABEL_78;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_1DB1EB034(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1DB103C1C;
  return sub_1DB1DB728(a1, a2, v2);
}

uint64_t sub_1DB1EB0E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for VisualTranslationObservable(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EBA4DEF0);
}

uint64_t sub_1DB1EB168(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SecureHostingController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DB1EB1C8()
{
  return objectdestroyTm_10();
}

uint64_t sub_1DB1EB1D0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v8 = *(_OWORD *)(v0 + 56);
  long long v9 = *(_OWORD *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 72) = v3;
  *(void *)(v5 + 80) = v4;
  *(_OWORD *)(v5 + 56) = v7;
  *(_OWORD *)(v5 + 40) = v8;
  *(_OWORD *)(v5 + 24) = v9;
  *(void *)(v5 + 8) = sub_1DB103C1C;
  *(void *)(v5 + 16) = v2;
  return MEMORY[0x1F4188298](sub_1DB1DE52C, 0, 0);
}

uint64_t sub_1DB1EB2BC()
{
  return objectdestroyTm_10();
}

uint64_t objectdestroyTm_10()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DB1EB310(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *long long v7 = v2;
  v7[1] = sub_1DB103C1C;
  return sub_1DB1DEB04(a1, v4, v5, v6);
}

uint64_t sub_1DB1EB3C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DB1EB3FC()
{
  sub_1DB1DF55C(v0);
}

uint64_t sub_1DB1EB418()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  uint64_t v6 = v4 + v5 + 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3;
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFF8;
  if (!v10(v0 + v5, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v5, v8);
  }
  if (*(void *)(v0 + v11)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB1EB5C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 48) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = (v7 + v5 + v6) & ~v5;
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = v1[5];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v8;
  uint64_t v15 = *(void *)((char *)v1 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1DB103C1C;
  return sub_1DB1DFBE4(a1, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1DB1EB728(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1DB1EF6B0() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 48) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = (v7 + v5 + v6) & ~v5;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_1DB1EF570() - 8) + 80);
  uint64_t v11 = v9 + v10 + 1;
  LOBYTE(v9) = *(unsigned char *)(v1 + v9);
  uint64_t v12 = v1 + (v11 & ~v10);
  uint64_t v13 = swift_task_alloc();
  long long v14 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v13;
  *(void *)uint64_t v13 = v2;
  *(void *)(v13 + 8) = sub_1DB103C1C;
  *(void *)(v13 + 72) = v1 + v8;
  *(void *)(v13 + 80) = v12;
  *(unsigned char *)(v13 + 113) = v9;
  *(void *)(v13 + 64) = v1 + v6;
  *(_OWORD *)(v13 + 48) = v14;
  *(void *)(v13 + 40) = a1;
  return MEMORY[0x1F4188298](sub_1DB1E1A9C, 0, 0);
}

uint64_t objectdestroy_52Tm()
{
  uint64_t v1 = sub_1DB1EF6B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  uint64_t v7 = sub_1DB1EF570();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + *(unsigned __int8 *)(v8 + 80) + v6 + 1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = v0 + v4;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);
  v11(v0 + v6, v1);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_1DB1EBA40@<X0>(unsigned char *a1@<X8>)
{
  sub_1DB19CAE8();
  uint64_t result = sub_1DB1F0170();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB1EBA90()
{
  return sub_1DB1F0180();
}

uint64_t sub_1DB1EBADC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  swift_retain();
  sub_1DB0EB758(v2);
  return a1;
}

uint64_t sub_1DB1EBB20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  swift_release();
  sub_1DB0EB788(v2);
  return a1;
}

uint64_t sub_1DB1EBB64()
{
  return sub_1DB1EBB8C(&qword_1EA906060, &qword_1EA906030, (void (*)(void))sub_1DB1EBC30);
}

uint64_t sub_1DB1EBB8C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_1DB0E3C44(&qword_1EA906068, &qword_1EA906070);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB1EBC30()
{
  unint64_t result = qword_1EBA4DD70;
  if (!qword_1EBA4DD70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4DD78);
    sub_1DB1EB168(&qword_1EBA4DBE0, (void (*)(uint64_t))type metadata accessor for VisualTranslationOverlay);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4DD70);
  }
  return result;
}

uint64_t sub_1DB1EBCDC()
{
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB1EBD24(uint64_t a1)
{
  return sub_1DB1E2C98(a1, (long long *)(v1 + 16));
}

unint64_t sub_1DB1EBD38()
{
  unint64_t result = qword_1EA906088;
  if (!qword_1EA906088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA906088);
  }
  return result;
}

unint64_t sub_1DB1EBD90()
{
  unint64_t result = qword_1EA906090;
  if (!qword_1EA906090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA906090);
  }
  return result;
}

unint64_t sub_1DB1EBDE8()
{
  unint64_t result = qword_1EA906098;
  if (!qword_1EA906098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA906098);
  }
  return result;
}

unint64_t sub_1DB1EBE40()
{
  unint64_t result = qword_1EA9060A0;
  if (!qword_1EA9060A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9060A0);
  }
  return result;
}

uint64_t sub_1DB1EBE94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1EBEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB1330A4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1EBA4DD68);
}

uint64_t sub_1DB1EBED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB1D4C98(a1, a2, a3, a4, (uint64_t *)&unk_1EA905F70, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__models, &qword_1EBA4DD68);
}

uint64_t sub_1DB1EBF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB1330A4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1EBA4E248);
}

uint64_t sub_1DB1EBF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB1D4C98(a1, a2, a3, a4, &qword_1EBA4D7C8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__debugMenuVisible, &qword_1EBA4E248);
}

uint64_t sub_1DB1EBF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB1330A4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1EBA4E248);
}

uint64_t sub_1DB1EBF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB1D4C98(a1, a2, a3, a4, &qword_1EBA4D7C8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable__showFirstUseConsent, &qword_1EBA4E248);
}

double sub_1DB1EBFB8@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  char v3 = (double *)(*a1 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_1DB1EC00C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  char v3 = (void *)(*a2 + OBJC_IVAR____TtC13TranslationUI27VisualTranslationObservable_zoomScale);
  uint64_t result = swift_beginAccess();
  *char v3 = v2;
  return result;
}

uint64_t sub_1DB1EC06C()
{
  return type metadata accessor for VisualTranslationObservable(0);
}

void sub_1DB1EC074()
{
  sub_1DB1ECB54();
  if (v0 <= 0x3F)
  {
    sub_1DB0E4F04();
    if (v1 <= 0x3F)
    {
      sub_1DB1EDFF4(319, qword_1EBA4DE70, (void (*)(uint64_t))type metadata accessor for VisualTranslationObservable.SavedTranslationRequest);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for VisualTranslationObservable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualTranslationObservable);
}

uint64_t dispatch thunk of VisualTranslationObservable.models.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of VisualTranslationObservable.models.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of VisualTranslationObservable.models.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$models.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$models.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$models.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of VisualTranslationObservable.debugMenuVisible.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of VisualTranslationObservable.debugMenuVisible.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of VisualTranslationObservable.debugMenuVisible.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$debugMenuVisible.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$debugMenuVisible.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$debugMenuVisible.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of VisualTranslationObservable.showFirstUseConsent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of VisualTranslationObservable.showFirstUseConsent.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of VisualTranslationObservable.showFirstUseConsent.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$showFirstUseConsent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$showFirstUseConsent.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of VisualTranslationObservable.$showFirstUseConsent.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of VisualTranslationObservable.zoomScale.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of VisualTranslationObservable.removeAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 728)
                                                                   + **(int **)(*(void *)v4 + 728));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1DB1EECD0;
  return v12(a1, a2, a3, a4);
}

{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 744)
                                                                   + **(int **)(*(void *)v4 + 744));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1DB103C1C;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 736)
                                                                            + **(int **)(*(void *)v5 + 736));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1DB1EC7C4;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 752)
                                                                            + **(int **)(*(void *)v5 + 752));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1DB103C1C;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_1DB1EC7C4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  char v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of VisualTranslationObservable.setZoom(scale:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

void sub_1DB1ECB54()
{
  if (!qword_1EBA4E240)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4E260);
    unint64_t v0 = sub_1DB1EF930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4E240);
    }
  }
}

uint64_t sub_1DB1ECBB4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for VisualTranslationViewBridge()
{
  return self;
}

uint64_t method lookup function for VisualTranslationViewBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualTranslationViewBridge);
}

uint64_t dispatch thunk of VisualTranslationViewBridge.__allocating_init(optimizedForExtendedExperience:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for VisualTranslationOptions()
{
  return &type metadata for VisualTranslationOptions;
}

uint64_t destroy for VisualTranslationView(uint64_t a1)
{
  uint64_t result = swift_release();
  if (*(void *)(a1 + 24))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for VisualTranslationView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v6 = a2 + 3;
  uint64_t v5 = a2[3];
  swift_retain();
  if (v5)
  {
    uint64_t v7 = a2[4];
    a1[3] = v5;
    a1[4] = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v6;
  }
  return a1;
}

void *assignWithCopy for VisualTranslationView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a1[3];
  a1[2] = a2[2];
  uint64_t v5 = a2[3];
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = a2[4];
      a1[3] = v5;
      a1[4] = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[4];
  a1[3] = v5;
  a1[4] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for VisualTranslationView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  uint64_t v5 = a2[3];
  uint64_t v6 = a1[3];
  a1[2] = a2[2];
  if (!v6)
  {
    if (v5)
    {
      uint64_t v8 = a2[4];
      a1[3] = v5;
      a1[4] = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = a2[4];
  a1[3] = v5;
  a1[4] = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualTranslationView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualTranslationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualTranslationView()
{
  return &type metadata for VisualTranslationView;
}

unint64_t sub_1DB1ECF10()
{
  unint64_t result = qword_1EA9060C8;
  if (!qword_1EA9060C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA906080);
    sub_1DB1ECF8C();
    sub_1DB1B3380();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9060C8);
  }
  return result;
}

unint64_t sub_1DB1ECF8C()
{
  unint64_t result = qword_1EA9060D0;
  if (!qword_1EA9060D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA906050);
    sub_1DB1ED02C();
    sub_1DB0E3C44(&qword_1EA904170, &qword_1EA904130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9060D0);
  }
  return result;
}

unint64_t sub_1DB1ED02C()
{
  unint64_t result = qword_1EA9060D8;
  if (!qword_1EA9060D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA906048);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA906038);
    type metadata accessor for CameraPreviewDebugView();
    sub_1DB1EBB8C(&qword_1EA906058, &qword_1EA906038, (void (*)(void))sub_1DB1EBB64);
    sub_1DB1EB168(&qword_1EA906078, (void (*)(uint64_t))type metadata accessor for CameraPreviewDebugView);
    swift_getOpaqueTypeConformance2();
    sub_1DB1ED150();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9060D8);
  }
  return result;
}

unint64_t sub_1DB1ED150()
{
  unint64_t result = qword_1EA9060E0;
  if (!qword_1EA9060E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9060E0);
  }
  return result;
}

uint64_t *sub_1DB1ED1A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DB1EF6B0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v13(v17, 1, v11))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t sub_1DB1ED3D4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_1DB1ED4FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *sub_1DB1ED6CC(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

void *sub_1DB1ED960(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *sub_1DB1EDB28(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_1DB1EDDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1EDDC8);
}

uint64_t sub_1DB1EDDC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DB1EDE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1EDE90);
}

void *sub_1DB1EDE90(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DB1EDF3C()
{
  sub_1DB1EDFF4(319, (unint64_t *)&qword_1EBA4E5E0, MEMORY[0x1E4F27A78]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DB1EDFF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DB1F1900();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DB1EE048()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1DB1EE080(uint64_t a1, uint64_t a2)
{
  sub_1DB1E12B8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1DB1EE088()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1DB1EE0B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1EE118()
{
  uint64_t v1 = type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  unint64_t v7 = v0 + v2 + *(int *)(v1 + 24);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_1DB1EE2B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for VisualTranslationObservable.SavedTranslationRequest(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1DB1036D0;
  return sub_1DB1D7020(a1, v5, v6, v7, v8);
}

uint64_t sub_1DB1EE3B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB1EE3E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DB1EE420()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB1EE468()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1DB103C1C;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return MEMORY[0x1F4188298](sub_1DB1DE754, 0, 0);
}

uint64_t sub_1DB1EE524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1EE588()
{
  uint64_t v1 = (int *)(type metadata accessor for VisualTranslationModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v3 + v1[8];
  uint64_t v6 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB1EE6DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for VisualTranslationModel(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1DB103C1C;
  return sub_1DB1DCD10(a1, v6, v7, v8, v9);
}

uint64_t sub_1DB1EE800(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1DB103C1C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA906138 + dword_1EA906138);
  return v6(a1, v4);
}

uint64_t sub_1DB1EE8B8()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA906128) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1DB1EF570();
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = v3 + v1[14];
  v5(v6, v4);
  uint64_t v7 = v6 + *(int *)(type metadata accessor for VisualTranslationModel(0) + 24);
  uint64_t v8 = sub_1DB1EF520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB1EEA28(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA906128) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DB103C1C;
  return sub_1DB1DD0B4(a1, v5, v6, v7);
}

uint64_t sub_1DB1EEB18(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DB1036D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA906138 + dword_1EA906138);
  return v6(a1, v4);
}

uint64_t sub_1DB1EEBD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1EEC34(uint64_t a1)
{
  return a1;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DB1EECB8()
{
  return sub_1DB1EA1CC();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_1EA90F1E0 == -1)
  {
    if (qword_1EA90F1E8) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_1EA90F1E0, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_1EA90F1E8) {
      return _availability_version_check();
    }
  }
  if (qword_1EA90F1D8 == -1)
  {
    BOOL v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_1EA90F1D8, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    BOOL v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_1EA90F1CC > a3) {
    return 1;
  }
  return dword_1EA90F1CC >= a3 && dword_1EA90F1D0 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = qword_1EA90F1E8;
  if (qword_1EA90F1E8) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (MEMORY[0x1E4F143E8])
    {
      uint64_t v1 = MEMORY[0x1F4188798];
      qword_1EA90F1E8 = MEMORY[0x1F4188798];
    }
    if (!v1 || result != 0)
    {
      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        uint64_t v4 = *(unsigned __int8 **)result;
        uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          uint64_t v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            uint64_t v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    uint64_t v11 = (uint64_t (*)(void))result;
                    uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    int64_t v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        uint64_t v12 = (FILE *)result;
                        uint64_t result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          int v13 = (FILE *)result;
                          uint64_t v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = MEMORY[0x1E018C260](v13);
                          if (v14 < 0)
                          {
                            uint64_t v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            uint64_t v16 = malloc(v15);
                            if (v16)
                            {
                              id v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  int v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_1EA90F1CC, &dword_1EA90F1D0);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    int v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  int v19 = v13;
                                }
                                uint64_t v16 = v26;
                              }
                              else
                              {
                                uint64_t v16 = v26;
                                int v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          int v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DB1EF2B0()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1DB1EF2C0()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1DB1EF2D0()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1DB1EF2E0()
{
  return MEMORY[0x1F40E3080]();
}

uint64_t sub_1DB1EF2F0()
{
  return MEMORY[0x1F40E3098]();
}

uint64_t sub_1DB1EF300()
{
  return MEMORY[0x1F40E30A8]();
}

uint64_t sub_1DB1EF310()
{
  return MEMORY[0x1F40E30C0]();
}

uint64_t sub_1DB1EF320()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1DB1EF330()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1DB1EF340()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1DB1EF350()
{
  return MEMORY[0x1F40E3358]();
}

uint64_t sub_1DB1EF360()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1DB1EF370()
{
  return MEMORY[0x1F40E33E8]();
}

uint64_t sub_1DB1EF380()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1DB1EF390()
{
  return MEMORY[0x1F40E35A8]();
}

uint64_t sub_1DB1EF3A0()
{
  return MEMORY[0x1F40E3620]();
}

uint64_t sub_1DB1EF3B0()
{
  return MEMORY[0x1F40E3670]();
}

uint64_t sub_1DB1EF3C0()
{
  return MEMORY[0x1F40E36D8]();
}

uint64_t sub_1DB1EF3D0()
{
  return MEMORY[0x1F40E3760]();
}

uint64_t sub_1DB1EF3E0()
{
  return MEMORY[0x1F40E37A8]();
}

uint64_t sub_1DB1EF3F0()
{
  return MEMORY[0x1F40E37B8]();
}

uint64_t sub_1DB1EF400()
{
  return MEMORY[0x1F40E3F58]();
}

uint64_t sub_1DB1EF410()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1DB1EF420()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1DB1EF430()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1DB1EF440()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_1DB1EF450()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1DB1EF460()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_1DB1EF470()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1DB1EF480()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1DB1EF490()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_1DB1EF4A0()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1DB1EF4B0()
{
  return MEMORY[0x1F40E4E10]();
}

uint64_t sub_1DB1EF4C0()
{
  return MEMORY[0x1F40E5088]();
}

uint64_t sub_1DB1EF4D0()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1DB1EF4F0()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1DB1EF500()
{
  return MEMORY[0x1F40E5338]();
}

uint64_t sub_1DB1EF510()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1DB1EF520()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1DB1EF530()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1DB1EF540()
{
  return MEMORY[0x1F40E53E8]();
}

uint64_t sub_1DB1EF550()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1DB1EF560()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1DB1EF570()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1DB1EF580()
{
  return MEMORY[0x1F40E5500]();
}

uint64_t sub_1DB1EF590()
{
  return MEMORY[0x1F40E5510]();
}

uint64_t sub_1DB1EF5A0()
{
  return MEMORY[0x1F40E5540]();
}

uint64_t sub_1DB1EF5B0()
{
  return MEMORY[0x1F40E5578]();
}

uint64_t sub_1DB1EF5C0()
{
  return MEMORY[0x1F40E55D8]();
}

uint64_t sub_1DB1EF5D0()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_1DB1EF5E0()
{
  return MEMORY[0x1F40E5688]();
}

uint64_t sub_1DB1EF5F0()
{
  return MEMORY[0x1F40E5698]();
}

uint64_t sub_1DB1EF600()
{
  return MEMORY[0x1F40E56B0]();
}

uint64_t sub_1DB1EF610()
{
  return MEMORY[0x1F40E56C8]();
}

uint64_t sub_1DB1EF620()
{
  return MEMORY[0x1F40E56E8]();
}

uint64_t sub_1DB1EF630()
{
  return MEMORY[0x1F40E5700]();
}

uint64_t _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1DB1EF650()
{
  return MEMORY[0x1F40E57F8]();
}

uint64_t sub_1DB1EF660()
{
  return MEMORY[0x1F40E5810]();
}

uint64_t sub_1DB1EF670()
{
  return MEMORY[0x1F40E5820]();
}

uint64_t sub_1DB1EF680()
{
  return MEMORY[0x1F40E5838]();
}

uint64_t sub_1DB1EF690()
{
  return MEMORY[0x1F40E5840]();
}

uint64_t sub_1DB1EF6A0()
{
  return MEMORY[0x1F40E5868]();
}

uint64_t sub_1DB1EF6B0()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1DB1EF6C0()
{
  return MEMORY[0x1F40E5B48]();
}

uint64_t sub_1DB1EF6D0()
{
  return MEMORY[0x1F40E5CA8]();
}

uint64_t sub_1DB1EF6E0()
{
  return MEMORY[0x1F40E5D80]();
}

uint64_t sub_1DB1EF6F0()
{
  return MEMORY[0x1F40E5D88]();
}

uint64_t sub_1DB1EF700()
{
  return MEMORY[0x1F40E5E48]();
}

uint64_t sub_1DB1EF710()
{
  return MEMORY[0x1F4119150]();
}

uint64_t sub_1DB1EF720()
{
  return MEMORY[0x1F4188358]();
}

uint64_t sub_1DB1EF730()
{
  return MEMORY[0x1F4188500]();
}

uint64_t sub_1DB1EF740()
{
  return MEMORY[0x1F4188568]();
}

uint64_t sub_1DB1EF750()
{
  return MEMORY[0x1F4188570]();
}

uint64_t sub_1DB1EF760()
{
  return MEMORY[0x1F4188580]();
}

uint64_t sub_1DB1EF770()
{
  return MEMORY[0x1F41885B0]();
}

uint64_t sub_1DB1EF780()
{
  return MEMORY[0x1F41885B8]();
}

uint64_t sub_1DB1EF790()
{
  return MEMORY[0x1F41885D0]();
}

uint64_t sub_1DB1EF7A0()
{
  return MEMORY[0x1F41885E0]();
}

uint64_t sub_1DB1EF7B0()
{
  return MEMORY[0x1F4188650]();
}

uint64_t sub_1DB1EF7C0()
{
  return MEMORY[0x1F4188658]();
}

uint64_t sub_1DB1EF7D0()
{
  return MEMORY[0x1F4188660]();
}

uint64_t sub_1DB1EF7E0()
{
  return MEMORY[0x1F4188668]();
}

uint64_t sub_1DB1EF7F0()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1DB1EF800()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1DB1EF810()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1DB1EF820()
{
  return MEMORY[0x1F4166170]();
}

uint64_t sub_1DB1EF830()
{
  return MEMORY[0x1F41661B0]();
}

uint64_t sub_1DB1EF840()
{
  return MEMORY[0x1F41661C0]();
}

uint64_t sub_1DB1EF850()
{
  return MEMORY[0x1F41661D8]();
}

uint64_t sub_1DB1EF860()
{
  return MEMORY[0x1F41661E0]();
}

uint64_t sub_1DB1EF870()
{
  return MEMORY[0x1F41661E8]();
}

uint64_t sub_1DB1EF880()
{
  return MEMORY[0x1F41661F0]();
}

uint64_t sub_1DB1EF890()
{
  return MEMORY[0x1F4166210]();
}

uint64_t sub_1DB1EF8A0()
{
  return MEMORY[0x1F40D6948]();
}

uint64_t sub_1DB1EF8B0()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t sub_1DB1EF8C0()
{
  return MEMORY[0x1F40D6AB0]();
}

uint64_t sub_1DB1EF8D0()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1DB1EF8E0()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1DB1EF8F0()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t sub_1DB1EF900()
{
  return MEMORY[0x1F40D6B98]();
}

uint64_t sub_1DB1EF910()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1DB1EF920()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1DB1EF930()
{
  return MEMORY[0x1F40D6BB8]();
}

uint64_t sub_1DB1EF940()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t sub_1DB1EF950()
{
  return MEMORY[0x1F40D6BE0]();
}

uint64_t sub_1DB1EF960()
{
  return MEMORY[0x1F40D6C20]();
}

uint64_t sub_1DB1EF970()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_1DB1EF980()
{
  return MEMORY[0x1F40D6DB8]();
}

uint64_t sub_1DB1EF990()
{
  return MEMORY[0x1F40D6DF0]();
}

uint64_t sub_1DB1EF9A0()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1DB1EF9B0()
{
  return MEMORY[0x1F40F1FF0]();
}

uint64_t sub_1DB1EF9C0()
{
  return MEMORY[0x1F40F2398]();
}

uint64_t sub_1DB1EF9D0()
{
  return MEMORY[0x1F40F23A0]();
}

uint64_t sub_1DB1EF9E0()
{
  return MEMORY[0x1F40F23A8]();
}

uint64_t sub_1DB1EF9F0()
{
  return MEMORY[0x1F40F23C0]();
}

uint64_t sub_1DB1EFA00()
{
  return MEMORY[0x1F40F23C8]();
}

uint64_t sub_1DB1EFA10()
{
  return MEMORY[0x1F40F26E0]();
}

uint64_t sub_1DB1EFA20()
{
  return MEMORY[0x1F40F2700]();
}

uint64_t sub_1DB1EFA30()
{
  return MEMORY[0x1F40F2708]();
}

uint64_t sub_1DB1EFA40()
{
  return MEMORY[0x1F40F7DA8]();
}

uint64_t sub_1DB1EFA50()
{
  return MEMORY[0x1F40F7DB8]();
}

uint64_t sub_1DB1EFA60()
{
  return MEMORY[0x1F40F7DC0]();
}

uint64_t sub_1DB1EFA70()
{
  return MEMORY[0x1F40F7DD0]();
}

uint64_t sub_1DB1EFA80()
{
  return MEMORY[0x1F40F7DD8]();
}

uint64_t sub_1DB1EFA90()
{
  return MEMORY[0x1F40F7DE0]();
}

uint64_t sub_1DB1EFAA0()
{
  return MEMORY[0x1F40F7E20]();
}

uint64_t sub_1DB1EFAB0()
{
  return MEMORY[0x1F40F7E40]();
}

uint64_t sub_1DB1EFAC0()
{
  return MEMORY[0x1F40F7E80]();
}

uint64_t sub_1DB1EFAD0()
{
  return MEMORY[0x1F40F7EA0]();
}

uint64_t sub_1DB1EFAE0()
{
  return MEMORY[0x1F40F7EB0]();
}

uint64_t sub_1DB1EFAF0()
{
  return MEMORY[0x1F40F7EF8]();
}

uint64_t sub_1DB1EFB00()
{
  return MEMORY[0x1F40F7F50]();
}

uint64_t sub_1DB1EFB10()
{
  return MEMORY[0x1F40F7F60]();
}

uint64_t sub_1DB1EFB20()
{
  return MEMORY[0x1F40F8030]();
}

uint64_t sub_1DB1EFB30()
{
  return MEMORY[0x1F40F8050]();
}

uint64_t sub_1DB1EFB40()
{
  return MEMORY[0x1F40F80A0]();
}

uint64_t sub_1DB1EFB50()
{
  return MEMORY[0x1F40F8108]();
}

uint64_t sub_1DB1EFB60()
{
  return MEMORY[0x1F40F8118]();
}

uint64_t sub_1DB1EFB70()
{
  return MEMORY[0x1F40F8148]();
}

uint64_t sub_1DB1EFB80()
{
  return MEMORY[0x1F40F81A0]();
}

uint64_t sub_1DB1EFB90()
{
  return MEMORY[0x1F40F8278]();
}

uint64_t sub_1DB1EFBA0()
{
  return MEMORY[0x1F40F8288]();
}

uint64_t sub_1DB1EFBB0()
{
  return MEMORY[0x1F40F8350]();
}

uint64_t sub_1DB1EFBC0()
{
  return MEMORY[0x1F40F8360]();
}

uint64_t sub_1DB1EFBD0()
{
  return MEMORY[0x1F40F8378]();
}

uint64_t sub_1DB1EFBE0()
{
  return MEMORY[0x1F40F8380]();
}

uint64_t sub_1DB1EFBF0()
{
  return MEMORY[0x1F40F83C8]();
}

uint64_t sub_1DB1EFC00()
{
  return MEMORY[0x1F40F83E0]();
}

uint64_t sub_1DB1EFC10()
{
  return MEMORY[0x1F40F83F0]();
}

uint64_t sub_1DB1EFC20()
{
  return MEMORY[0x1F40F8400]();
}

uint64_t sub_1DB1EFC30()
{
  return MEMORY[0x1F40F8430]();
}

uint64_t sub_1DB1EFC40()
{
  return MEMORY[0x1F40F8438]();
}

uint64_t sub_1DB1EFC50()
{
  return MEMORY[0x1F40F8448]();
}

uint64_t sub_1DB1EFC60()
{
  return MEMORY[0x1F40F8450]();
}

uint64_t sub_1DB1EFC70()
{
  return MEMORY[0x1F40F8470]();
}

uint64_t sub_1DB1EFC80()
{
  return MEMORY[0x1F40F8488]();
}

uint64_t sub_1DB1EFC90()
{
  return MEMORY[0x1F40F84B8]();
}

uint64_t sub_1DB1EFCA0()
{
  return MEMORY[0x1F40F84C8]();
}

uint64_t sub_1DB1EFCB0()
{
  return MEMORY[0x1F40F84E8]();
}

uint64_t sub_1DB1EFCC0()
{
  return MEMORY[0x1F40F8588]();
}

uint64_t sub_1DB1EFCD0()
{
  return MEMORY[0x1F40F8598]();
}

uint64_t sub_1DB1EFCE0()
{
  return MEMORY[0x1F40F85A8]();
}

uint64_t sub_1DB1EFCF0()
{
  return MEMORY[0x1F40F85B8]();
}

uint64_t sub_1DB1EFD00()
{
  return MEMORY[0x1F40F85C8]();
}

uint64_t sub_1DB1EFD10()
{
  return MEMORY[0x1F40F85D8]();
}

uint64_t sub_1DB1EFD20()
{
  return MEMORY[0x1F40F8650]();
}

uint64_t sub_1DB1EFD30()
{
  return MEMORY[0x1F40F8658]();
}

uint64_t sub_1DB1EFD60()
{
  return MEMORY[0x1F40F86C8]();
}

uint64_t sub_1DB1EFD70()
{
  return MEMORY[0x1F40F86D0]();
}

uint64_t sub_1DB1EFD90()
{
  return MEMORY[0x1F40F8748]();
}

uint64_t sub_1DB1EFDA0()
{
  return MEMORY[0x1F40F87E0]();
}

uint64_t sub_1DB1EFDB0()
{
  return MEMORY[0x1F40F87F0]();
}

uint64_t sub_1DB1EFDC0()
{
  return MEMORY[0x1F40F8808]();
}

uint64_t sub_1DB1EFDD0()
{
  return MEMORY[0x1F40F8818]();
}

uint64_t sub_1DB1EFDE0()
{
  return MEMORY[0x1F40F8A28]();
}

uint64_t sub_1DB1EFDF0()
{
  return MEMORY[0x1F40F8AE0]();
}

uint64_t sub_1DB1EFE00()
{
  return MEMORY[0x1F40F8AF0]();
}

uint64_t sub_1DB1EFE10()
{
  return MEMORY[0x1F40F8B40]();
}

uint64_t sub_1DB1EFE20()
{
  return MEMORY[0x1F40F8C00]();
}

uint64_t sub_1DB1EFE30()
{
  return MEMORY[0x1F40F8C28]();
}

uint64_t sub_1DB1EFE40()
{
  return MEMORY[0x1F40F8C58]();
}

uint64_t sub_1DB1EFE50()
{
  return MEMORY[0x1F40F8DA8]();
}

uint64_t sub_1DB1EFE60()
{
  return MEMORY[0x1F40F8DE8]();
}

uint64_t sub_1DB1EFE70()
{
  return MEMORY[0x1F40F8DF0]();
}

uint64_t sub_1DB1EFE80()
{
  return MEMORY[0x1F40F8DF8]();
}

uint64_t sub_1DB1EFE90()
{
  return MEMORY[0x1F40F8E08]();
}

uint64_t sub_1DB1EFEA0()
{
  return MEMORY[0x1F40F8E38]();
}

uint64_t sub_1DB1EFEB0()
{
  return MEMORY[0x1F40F8E70]();
}

uint64_t sub_1DB1EFEC0()
{
  return MEMORY[0x1F40F8EA0]();
}

uint64_t sub_1DB1EFED0()
{
  return MEMORY[0x1F40F8EF0]();
}

uint64_t sub_1DB1EFEE0()
{
  return MEMORY[0x1F40F8F50]();
}

uint64_t sub_1DB1EFEF0()
{
  return MEMORY[0x1F40F8F68]();
}

uint64_t sub_1DB1EFF00()
{
  return MEMORY[0x1F40F8F88]();
}

uint64_t sub_1DB1EFF10()
{
  return MEMORY[0x1F40F8F98]();
}

uint64_t sub_1DB1EFF20()
{
  return MEMORY[0x1F40F9100]();
}

uint64_t sub_1DB1EFF30()
{
  return MEMORY[0x1F40F9110]();
}

uint64_t sub_1DB1EFF40()
{
  return MEMORY[0x1F40F9138]();
}

uint64_t sub_1DB1EFF50()
{
  return MEMORY[0x1F40F9150]();
}

uint64_t sub_1DB1EFF60()
{
  return MEMORY[0x1F40F9268]();
}

uint64_t sub_1DB1EFF70()
{
  return MEMORY[0x1F40F9280]();
}

uint64_t sub_1DB1EFF80()
{
  return MEMORY[0x1F40F9298]();
}

uint64_t sub_1DB1EFF90()
{
  return MEMORY[0x1F40F92A8]();
}

uint64_t sub_1DB1EFFA0()
{
  return MEMORY[0x1F40F92B8]();
}

uint64_t sub_1DB1EFFB0()
{
  return MEMORY[0x1F40F92D0]();
}

uint64_t sub_1DB1EFFC0()
{
  return MEMORY[0x1F40F92E8]();
}

uint64_t sub_1DB1EFFD0()
{
  return MEMORY[0x1F40F92F8]();
}

uint64_t sub_1DB1EFFE0()
{
  return MEMORY[0x1F40F9300]();
}

uint64_t sub_1DB1EFFF0()
{
  return MEMORY[0x1F40F9308]();
}

uint64_t sub_1DB1F0000()
{
  return MEMORY[0x1F40F9330]();
}

uint64_t sub_1DB1F0010()
{
  return MEMORY[0x1F40F9338]();
}

uint64_t sub_1DB1F0020()
{
  return MEMORY[0x1F40F9378]();
}

uint64_t sub_1DB1F0030()
{
  return MEMORY[0x1F40F9380]();
}

uint64_t sub_1DB1F0040()
{
  return MEMORY[0x1F40F93E8]();
}

uint64_t sub_1DB1F0050()
{
  return MEMORY[0x1F40F93F0]();
}

uint64_t sub_1DB1F0060()
{
  return MEMORY[0x1F40F9470]();
}

uint64_t sub_1DB1F0070()
{
  return MEMORY[0x1F40F9480]();
}

uint64_t sub_1DB1F0080()
{
  return MEMORY[0x1F40F9510]();
}

uint64_t sub_1DB1F0090()
{
  return MEMORY[0x1F40F9550]();
}

uint64_t sub_1DB1F00A0()
{
  return MEMORY[0x1F40F9568]();
}

uint64_t sub_1DB1F00B0()
{
  return MEMORY[0x1F40F9598]();
}

uint64_t sub_1DB1F00C0()
{
  return MEMORY[0x1F40F95B8]();
}

uint64_t sub_1DB1F00D0()
{
  return MEMORY[0x1F40F95F8]();
}

uint64_t sub_1DB1F00E0()
{
  return MEMORY[0x1F40F9608]();
}

uint64_t sub_1DB1F00F0()
{
  return MEMORY[0x1F40F9648]();
}

uint64_t sub_1DB1F0100()
{
  return MEMORY[0x1F40F9658]();
}

uint64_t sub_1DB1F0110()
{
  return MEMORY[0x1F40F9660]();
}

uint64_t sub_1DB1F0120()
{
  return MEMORY[0x1F40F9670]();
}

uint64_t sub_1DB1F0130()
{
  return MEMORY[0x1F40F9688]();
}

uint64_t sub_1DB1F0140()
{
  return MEMORY[0x1F40F9690]();
}

uint64_t sub_1DB1F0150()
{
  return MEMORY[0x1F40F96C8]();
}

uint64_t sub_1DB1F0160()
{
  return MEMORY[0x1F40F96D8]();
}

uint64_t sub_1DB1F0170()
{
  return MEMORY[0x1F40F96F8]();
}

uint64_t sub_1DB1F0180()
{
  return MEMORY[0x1F40F9708]();
}

uint64_t sub_1DB1F0190()
{
  return MEMORY[0x1F40F97D8]();
}

uint64_t sub_1DB1F01A0()
{
  return MEMORY[0x1F40F9888]();
}

uint64_t sub_1DB1F01B0()
{
  return MEMORY[0x1F40F98A0]();
}

uint64_t sub_1DB1F01C0()
{
  return MEMORY[0x1F40F98C0]();
}

uint64_t sub_1DB1F01D0()
{
  return MEMORY[0x1F40F9A18]();
}

uint64_t sub_1DB1F01E0()
{
  return MEMORY[0x1F40F9A20]();
}

uint64_t sub_1DB1F01F0()
{
  return MEMORY[0x1F40F9A60]();
}

uint64_t sub_1DB1F0200()
{
  return MEMORY[0x1F40F9A78]();
}

uint64_t sub_1DB1F0210()
{
  return MEMORY[0x1F40F9A90]();
}

uint64_t sub_1DB1F0220()
{
  return MEMORY[0x1F40F9A98]();
}

uint64_t sub_1DB1F0230()
{
  return MEMORY[0x1F40F9AB0]();
}

uint64_t sub_1DB1F0240()
{
  return MEMORY[0x1F40F9AB8]();
}

uint64_t sub_1DB1F0250()
{
  return MEMORY[0x1F40F9AD0]();
}

uint64_t sub_1DB1F0260()
{
  return MEMORY[0x1F40F9AD8]();
}

uint64_t sub_1DB1F0270()
{
  return MEMORY[0x1F40F9AE8]();
}

uint64_t sub_1DB1F0280()
{
  return MEMORY[0x1F40F9B20]();
}

uint64_t sub_1DB1F0290()
{
  return MEMORY[0x1F40F9B30]();
}

uint64_t sub_1DB1F02A0()
{
  return MEMORY[0x1F40F9B40]();
}

uint64_t sub_1DB1F02B0()
{
  return MEMORY[0x1F40F9B68]();
}

uint64_t sub_1DB1F02C0()
{
  return MEMORY[0x1F40F9C60]();
}

uint64_t sub_1DB1F02D0()
{
  return MEMORY[0x1F40F9C68]();
}

uint64_t sub_1DB1F02E0()
{
  return MEMORY[0x1F40F9CD8]();
}

uint64_t sub_1DB1F02F0()
{
  return MEMORY[0x1F40F9CE8]();
}

uint64_t sub_1DB1F0300()
{
  return MEMORY[0x1F40F9D40]();
}

uint64_t sub_1DB1F0310()
{
  return MEMORY[0x1F40F9D48]();
}

uint64_t sub_1DB1F0320()
{
  return MEMORY[0x1F40F9DD0]();
}

uint64_t sub_1DB1F0330()
{
  return MEMORY[0x1F40F9E00]();
}

uint64_t sub_1DB1F0340()
{
  return MEMORY[0x1F40F9E10]();
}

uint64_t sub_1DB1F0350()
{
  return MEMORY[0x1F40F9E50]();
}

uint64_t sub_1DB1F0360()
{
  return MEMORY[0x1F40F9E60]();
}

uint64_t sub_1DB1F0370()
{
  return MEMORY[0x1F40F9E70]();
}

uint64_t sub_1DB1F0390()
{
  return MEMORY[0x1F40F9E90]();
}

uint64_t sub_1DB1F03A0()
{
  return MEMORY[0x1F40F9E98]();
}

uint64_t sub_1DB1F03B0()
{
  return MEMORY[0x1F40F9EB0]();
}

uint64_t sub_1DB1F03C0()
{
  return MEMORY[0x1F40F9EC0]();
}

uint64_t sub_1DB1F03D0()
{
  return MEMORY[0x1F40F9ED0]();
}

uint64_t sub_1DB1F03E0()
{
  return MEMORY[0x1F40F9EE0]();
}

uint64_t sub_1DB1F0400()
{
  return MEMORY[0x1F40F9FA8]();
}

uint64_t sub_1DB1F0410()
{
  return MEMORY[0x1F40FA080]();
}

uint64_t sub_1DB1F0420()
{
  return MEMORY[0x1F40FA090]();
}

uint64_t sub_1DB1F0430()
{
  return MEMORY[0x1F40FA150]();
}

uint64_t sub_1DB1F0440()
{
  return MEMORY[0x1F40FA158]();
}

uint64_t sub_1DB1F0450()
{
  return MEMORY[0x1F40FA168]();
}

uint64_t sub_1DB1F0460()
{
  return MEMORY[0x1F40FA1A8]();
}

uint64_t sub_1DB1F0470()
{
  return MEMORY[0x1F40FA220]();
}

uint64_t sub_1DB1F0480()
{
  return MEMORY[0x1F40FA230]();
}

uint64_t sub_1DB1F0490()
{
  return MEMORY[0x1F40FA288]();
}

uint64_t sub_1DB1F04A0()
{
  return MEMORY[0x1F40FA298]();
}

uint64_t sub_1DB1F04B0()
{
  return MEMORY[0x1F40FA2E0]();
}

uint64_t sub_1DB1F04C0()
{
  return MEMORY[0x1F40FA390]();
}

uint64_t sub_1DB1F04D0()
{
  return MEMORY[0x1F40FA3A8]();
}

uint64_t sub_1DB1F04E0()
{
  return MEMORY[0x1F40FA3B8]();
}

uint64_t sub_1DB1F04F0()
{
  return MEMORY[0x1F40FA470]();
}

uint64_t sub_1DB1F0500()
{
  return MEMORY[0x1F40FA558]();
}

uint64_t sub_1DB1F0510()
{
  return MEMORY[0x1F40FA568]();
}

uint64_t sub_1DB1F0520()
{
  return MEMORY[0x1F40FA5A0]();
}

uint64_t sub_1DB1F0530()
{
  return MEMORY[0x1F40FA5A8]();
}

uint64_t sub_1DB1F0540()
{
  return MEMORY[0x1F40FA5B8]();
}

uint64_t sub_1DB1F0550()
{
  return MEMORY[0x1F40FA5D0]();
}

uint64_t sub_1DB1F0560()
{
  return MEMORY[0x1F40FA5E8]();
}

uint64_t sub_1DB1F0570()
{
  return MEMORY[0x1F40FA690]();
}

uint64_t sub_1DB1F0580()
{
  return MEMORY[0x1F40FA6A0]();
}

uint64_t sub_1DB1F0590()
{
  return MEMORY[0x1F40FA6B8]();
}

uint64_t sub_1DB1F05A0()
{
  return MEMORY[0x1F40FA790]();
}

uint64_t sub_1DB1F05B0()
{
  return MEMORY[0x1F40FA798]();
}

uint64_t sub_1DB1F05C0()
{
  return MEMORY[0x1F40FA8C0]();
}

uint64_t sub_1DB1F05D0()
{
  return MEMORY[0x1F40FAB00]();
}

uint64_t sub_1DB1F05E0()
{
  return MEMORY[0x1F40FAB08]();
}

uint64_t sub_1DB1F05F0()
{
  return MEMORY[0x1F40FAB18]();
}

uint64_t sub_1DB1F0610()
{
  return MEMORY[0x1F40FAB38]();
}

uint64_t sub_1DB1F0620()
{
  return MEMORY[0x1F40FAB48]();
}

uint64_t sub_1DB1F0630()
{
  return MEMORY[0x1F40FAB58]();
}

uint64_t sub_1DB1F0650()
{
  return MEMORY[0x1F40FAB80]();
}

uint64_t sub_1DB1F0660()
{
  return MEMORY[0x1F40FABB0]();
}

uint64_t sub_1DB1F0670()
{
  return MEMORY[0x1F40FAC80]();
}

uint64_t sub_1DB1F0680()
{
  return MEMORY[0x1F40FAC88]();
}

uint64_t sub_1DB1F0690()
{
  return MEMORY[0x1F40FAC90]();
}

uint64_t sub_1DB1F06A0()
{
  return MEMORY[0x1F40FAC98]();
}

uint64_t sub_1DB1F06B0()
{
  return MEMORY[0x1F40FAD68]();
}

uint64_t sub_1DB1F06C0()
{
  return MEMORY[0x1F40FAD98]();
}

uint64_t sub_1DB1F06D0()
{
  return MEMORY[0x1F40FADB8]();
}

uint64_t sub_1DB1F06E0()
{
  return MEMORY[0x1F40FADC0]();
}

uint64_t sub_1DB1F06F0()
{
  return MEMORY[0x1F40FADD8]();
}

uint64_t sub_1DB1F0700()
{
  return MEMORY[0x1F40FADE0]();
}

uint64_t sub_1DB1F0710()
{
  return MEMORY[0x1F40FADF8]();
}

uint64_t sub_1DB1F0720()
{
  return MEMORY[0x1F40FAE28]();
}

uint64_t sub_1DB1F0730()
{
  return MEMORY[0x1F40FAE68]();
}

uint64_t sub_1DB1F0740()
{
  return MEMORY[0x1F40FAF00]();
}

uint64_t sub_1DB1F0750()
{
  return MEMORY[0x1F40FAF08]();
}

uint64_t sub_1DB1F0760()
{
  return MEMORY[0x1F40FAF48]();
}

uint64_t sub_1DB1F0770()
{
  return MEMORY[0x1F40FAF60]();
}

uint64_t sub_1DB1F0780()
{
  return MEMORY[0x1F40FAF78]();
}

uint64_t sub_1DB1F0790()
{
  return MEMORY[0x1F40FAF80]();
}

uint64_t sub_1DB1F07A0()
{
  return MEMORY[0x1F40FAFE0]();
}

uint64_t sub_1DB1F07B0()
{
  return MEMORY[0x1F40FAFF0]();
}

uint64_t sub_1DB1F07C0()
{
  return MEMORY[0x1F40FB000]();
}

uint64_t sub_1DB1F07D0()
{
  return MEMORY[0x1F40FB038]();
}

uint64_t sub_1DB1F07E0()
{
  return MEMORY[0x1F40FB050]();
}

uint64_t sub_1DB1F07F0()
{
  return MEMORY[0x1F40FB088]();
}

uint64_t sub_1DB1F0800()
{
  return MEMORY[0x1F40FB0E8]();
}

uint64_t sub_1DB1F0810()
{
  return MEMORY[0x1F40FB120]();
}

uint64_t sub_1DB1F0820()
{
  return MEMORY[0x1F40FB148]();
}

uint64_t sub_1DB1F0830()
{
  return MEMORY[0x1F40FB198]();
}

uint64_t sub_1DB1F0840()
{
  return MEMORY[0x1F40FB1C0]();
}

uint64_t sub_1DB1F0850()
{
  return MEMORY[0x1F40FB1E0]();
}

uint64_t sub_1DB1F0860()
{
  return MEMORY[0x1F40FB1F8]();
}

uint64_t sub_1DB1F0870()
{
  return MEMORY[0x1F40FB210]();
}

uint64_t sub_1DB1F0880()
{
  return MEMORY[0x1F40FB330]();
}

uint64_t sub_1DB1F0890()
{
  return MEMORY[0x1F40FB340]();
}

uint64_t sub_1DB1F08A0()
{
  return MEMORY[0x1F40FB350]();
}

uint64_t sub_1DB1F08B0()
{
  return MEMORY[0x1F40FB368]();
}

uint64_t sub_1DB1F08C0()
{
  return MEMORY[0x1F40FB370]();
}

uint64_t sub_1DB1F08D0()
{
  return MEMORY[0x1F40FB380]();
}

uint64_t sub_1DB1F08E0()
{
  return MEMORY[0x1F40FB3B0]();
}

uint64_t sub_1DB1F08F0()
{
  return MEMORY[0x1F40FB3C0]();
}

uint64_t sub_1DB1F0900()
{
  return MEMORY[0x1F40FB440]();
}

uint64_t sub_1DB1F0910()
{
  return MEMORY[0x1F40FB460]();
}

uint64_t sub_1DB1F0920()
{
  return MEMORY[0x1F40FB558]();
}

uint64_t sub_1DB1F0930()
{
  return MEMORY[0x1F40FB580]();
}

uint64_t sub_1DB1F0940()
{
  return MEMORY[0x1F40FB5D0]();
}

uint64_t sub_1DB1F0950()
{
  return MEMORY[0x1F40FB5D8]();
}

uint64_t sub_1DB1F0960()
{
  return MEMORY[0x1F40FB5F0]();
}

uint64_t sub_1DB1F0970()
{
  return MEMORY[0x1F40FB628]();
}

uint64_t sub_1DB1F0980()
{
  return MEMORY[0x1F40FB660]();
}

uint64_t sub_1DB1F0990()
{
  return MEMORY[0x1F40FB6C8]();
}

uint64_t sub_1DB1F09A0()
{
  return MEMORY[0x1F40FB6E0]();
}

uint64_t sub_1DB1F09B0()
{
  return MEMORY[0x1F40FB790]();
}

uint64_t sub_1DB1F09C0()
{
  return MEMORY[0x1F40FB7E8]();
}

uint64_t sub_1DB1F09D0()
{
  return MEMORY[0x1F40FB7F8]();
}

uint64_t sub_1DB1F09E0()
{
  return MEMORY[0x1F40FB850]();
}

uint64_t sub_1DB1F09F0()
{
  return MEMORY[0x1F40FB8A0]();
}

uint64_t sub_1DB1F0A00()
{
  return MEMORY[0x1F40FB920]();
}

uint64_t sub_1DB1F0A10()
{
  return MEMORY[0x1F40FB9B0]();
}

uint64_t sub_1DB1F0A20()
{
  return MEMORY[0x1F40FB9D8]();
}

uint64_t sub_1DB1F0A30()
{
  return MEMORY[0x1F40FBA58]();
}

uint64_t sub_1DB1F0A40()
{
  return MEMORY[0x1F40FBC28]();
}

uint64_t sub_1DB1F0A50()
{
  return MEMORY[0x1F40FBC70]();
}

uint64_t sub_1DB1F0A60()
{
  return MEMORY[0x1F40FBCB8]();
}

uint64_t sub_1DB1F0A70()
{
  return MEMORY[0x1F40FBCD0]();
}

uint64_t sub_1DB1F0A80()
{
  return MEMORY[0x1F40FBD30]();
}

uint64_t sub_1DB1F0A90()
{
  return MEMORY[0x1F40FBE28]();
}

uint64_t sub_1DB1F0AA0()
{
  return MEMORY[0x1F40FBE68]();
}

uint64_t sub_1DB1F0AB0()
{
  return MEMORY[0x1F40FBF20]();
}

uint64_t sub_1DB1F0AC0()
{
  return MEMORY[0x1F40FBF70]();
}

uint64_t sub_1DB1F0AD0()
{
  return MEMORY[0x1F40FBFB8]();
}

uint64_t sub_1DB1F0AE0()
{
  return MEMORY[0x1F40FC010]();
}

uint64_t sub_1DB1F0AF0()
{
  return MEMORY[0x1F40FC018]();
}

uint64_t sub_1DB1F0B00()
{
  return MEMORY[0x1F40FC0D8]();
}

uint64_t sub_1DB1F0B10()
{
  return MEMORY[0x1F40FC0F0]();
}

uint64_t sub_1DB1F0B20()
{
  return MEMORY[0x1F40FC108]();
}

uint64_t sub_1DB1F0B30()
{
  return MEMORY[0x1F40FC140]();
}

uint64_t sub_1DB1F0B40()
{
  return MEMORY[0x1F40FC158]();
}

uint64_t sub_1DB1F0B50()
{
  return MEMORY[0x1F40FC190]();
}

uint64_t sub_1DB1F0B60()
{
  return MEMORY[0x1F40FC1E0]();
}

uint64_t sub_1DB1F0B70()
{
  return MEMORY[0x1F40FC240]();
}

uint64_t sub_1DB1F0B80()
{
  return MEMORY[0x1F40FC248]();
}

uint64_t sub_1DB1F0B90()
{
  return MEMORY[0x1F40FC278]();
}

uint64_t sub_1DB1F0BA0()
{
  return MEMORY[0x1F40FC280]();
}

uint64_t sub_1DB1F0BB0()
{
  return MEMORY[0x1F40FC288]();
}

uint64_t sub_1DB1F0BC0()
{
  return MEMORY[0x1F40FC298]();
}

uint64_t sub_1DB1F0BD0()
{
  return MEMORY[0x1F40FC2A0]();
}

uint64_t sub_1DB1F0BE0()
{
  return MEMORY[0x1F40FC2A8]();
}

uint64_t sub_1DB1F0BF0()
{
  return MEMORY[0x1F40FC2E0]();
}

uint64_t sub_1DB1F0C00()
{
  return MEMORY[0x1F40FC2F0]();
}

uint64_t sub_1DB1F0C10()
{
  return MEMORY[0x1F40FC3B8]();
}

uint64_t sub_1DB1F0C20()
{
  return MEMORY[0x1F40FC3D0]();
}

uint64_t sub_1DB1F0C30()
{
  return MEMORY[0x1F40FC3E8]();
}

uint64_t sub_1DB1F0C40()
{
  return MEMORY[0x1F40FC438]();
}

uint64_t sub_1DB1F0C50()
{
  return MEMORY[0x1F40FC450]();
}

uint64_t sub_1DB1F0C60()
{
  return MEMORY[0x1F40FC498]();
}

uint64_t sub_1DB1F0C70()
{
  return MEMORY[0x1F40FC4C8]();
}

uint64_t sub_1DB1F0C80()
{
  return MEMORY[0x1F40FC4E8]();
}

uint64_t sub_1DB1F0C90()
{
  return MEMORY[0x1F40FC550]();
}

uint64_t sub_1DB1F0CA0()
{
  return MEMORY[0x1F40FC568]();
}

uint64_t sub_1DB1F0CB0()
{
  return MEMORY[0x1F40FC5A0]();
}

uint64_t sub_1DB1F0CC0()
{
  return MEMORY[0x1F40FC5D0]();
}

uint64_t sub_1DB1F0CD0()
{
  return MEMORY[0x1F40FC5E8]();
}

uint64_t sub_1DB1F0CE0()
{
  return MEMORY[0x1F40FC620]();
}

uint64_t sub_1DB1F0CF0()
{
  return MEMORY[0x1F40FC628]();
}

uint64_t sub_1DB1F0D00()
{
  return MEMORY[0x1F40FC638]();
}

uint64_t sub_1DB1F0D10()
{
  return MEMORY[0x1F40FC6F0]();
}

uint64_t sub_1DB1F0D20()
{
  return MEMORY[0x1F40FC700]();
}

uint64_t sub_1DB1F0D30()
{
  return MEMORY[0x1F40FC708]();
}

uint64_t sub_1DB1F0D40()
{
  return MEMORY[0x1F40FC718]();
}

uint64_t sub_1DB1F0D50()
{
  return MEMORY[0x1F40FC728]();
}

uint64_t sub_1DB1F0D60()
{
  return MEMORY[0x1F40FC750]();
}

uint64_t sub_1DB1F0D70()
{
  return MEMORY[0x1F40FC760]();
}

uint64_t sub_1DB1F0D80()
{
  return MEMORY[0x1F40FC790]();
}

uint64_t sub_1DB1F0D90()
{
  return MEMORY[0x1F40FC7C8]();
}

uint64_t sub_1DB1F0DA0()
{
  return MEMORY[0x1F40FC7D0]();
}

uint64_t sub_1DB1F0DB0()
{
  return MEMORY[0x1F40FC860]();
}

uint64_t sub_1DB1F0DC0()
{
  return MEMORY[0x1F40FC888]();
}

uint64_t sub_1DB1F0DD0()
{
  return MEMORY[0x1F40FC8B8]();
}

uint64_t sub_1DB1F0DE0()
{
  return MEMORY[0x1F40FC8C8]();
}

uint64_t sub_1DB1F0DF0()
{
  return MEMORY[0x1F40FC910]();
}

uint64_t sub_1DB1F0E00()
{
  return MEMORY[0x1F40FC920]();
}

uint64_t sub_1DB1F0E10()
{
  return MEMORY[0x1F40FC940]();
}

uint64_t sub_1DB1F0E20()
{
  return MEMORY[0x1F40FC950]();
}

uint64_t sub_1DB1F0E30()
{
  return MEMORY[0x1F40FC970]();
}

uint64_t sub_1DB1F0E40()
{
  return MEMORY[0x1F40FC980]();
}

uint64_t sub_1DB1F0E50()
{
  return MEMORY[0x1F40FC998]();
}

uint64_t sub_1DB1F0E60()
{
  return MEMORY[0x1F40FC9A0]();
}

uint64_t sub_1DB1F0E70()
{
  return MEMORY[0x1F40FC9B8]();
}

uint64_t sub_1DB1F0E80()
{
  return MEMORY[0x1F40FC9D0]();
}

uint64_t sub_1DB1F0E90()
{
  return MEMORY[0x1F40FCA20]();
}

uint64_t sub_1DB1F0EA0()
{
  return MEMORY[0x1F40FCA30]();
}

uint64_t sub_1DB1F0EB0()
{
  return MEMORY[0x1F40FCA38]();
}

uint64_t sub_1DB1F0EC0()
{
  return MEMORY[0x1F40FCA48]();
}

uint64_t sub_1DB1F0ED0()
{
  return MEMORY[0x1F40FCAF8]();
}

uint64_t sub_1DB1F0EE0()
{
  return MEMORY[0x1F40FCB08]();
}

uint64_t sub_1DB1F0EF0()
{
  return MEMORY[0x1F40FCB40]();
}

uint64_t sub_1DB1F0F00()
{
  return MEMORY[0x1F40FCB90]();
}

uint64_t sub_1DB1F0F10()
{
  return MEMORY[0x1F40FCBB8]();
}

uint64_t sub_1DB1F0F20()
{
  return MEMORY[0x1F40FCBD8]();
}

uint64_t sub_1DB1F0F30()
{
  return MEMORY[0x1F40FCBE8]();
}

uint64_t sub_1DB1F0F40()
{
  return MEMORY[0x1F40FCC10]();
}

uint64_t sub_1DB1F0F50()
{
  return MEMORY[0x1F40FCC20]();
}

uint64_t sub_1DB1F0F60()
{
  return MEMORY[0x1F40FCC30]();
}

uint64_t sub_1DB1F0F70()
{
  return MEMORY[0x1F40FCC40]();
}

uint64_t sub_1DB1F0F80()
{
  return MEMORY[0x1F40FCC50]();
}

uint64_t sub_1DB1F0F90()
{
  return MEMORY[0x1F40FCCC0]();
}

uint64_t sub_1DB1F0FA0()
{
  return MEMORY[0x1F40FCCE0]();
}

uint64_t sub_1DB1F0FB0()
{
  return MEMORY[0x1F40FCCF0]();
}

uint64_t sub_1DB1F0FC0()
{
  return MEMORY[0x1F40FCD30]();
}

uint64_t sub_1DB1F0FD0()
{
  return MEMORY[0x1F40FCDA8]();
}

uint64_t sub_1DB1F0FE0()
{
  return MEMORY[0x1F40FCDB0]();
}

uint64_t sub_1DB1F0FF0()
{
  return MEMORY[0x1F40FCE58]();
}

uint64_t sub_1DB1F1000()
{
  return MEMORY[0x1F40FCE60]();
}

uint64_t sub_1DB1F1010()
{
  return MEMORY[0x1F40FCE98]();
}

uint64_t sub_1DB1F1020()
{
  return MEMORY[0x1F40FCED8]();
}

uint64_t sub_1DB1F1030()
{
  return MEMORY[0x1F40FCEE0]();
}

uint64_t sub_1DB1F1040()
{
  return MEMORY[0x1F40FCEE8]();
}

uint64_t sub_1DB1F1050()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1DB1F1060()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1DB1F1070()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1DB1F1080()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1DB1F1090()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_1DB1F10A0()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_1DB1F10B0()
{
  return MEMORY[0x1F4186F18]();
}

uint64_t sub_1DB1F10C0()
{
  return MEMORY[0x1F4103670]();
}

uint64_t sub_1DB1F10D0()
{
  return MEMORY[0x1F4103678]();
}

uint64_t sub_1DB1F10E0()
{
  return MEMORY[0x1F4103680]();
}

uint64_t sub_1DB1F10F0()
{
  return MEMORY[0x1F4103688]();
}

uint64_t sub_1DB1F1100()
{
  return MEMORY[0x1F4103690]();
}

uint64_t sub_1DB1F1110()
{
  return MEMORY[0x1F4103698]();
}

uint64_t sub_1DB1F1120()
{
  return MEMORY[0x1F41036A0]();
}

uint64_t sub_1DB1F1130()
{
  return MEMORY[0x1F41036A8]();
}

uint64_t sub_1DB1F1140()
{
  return MEMORY[0x1F41036B0]();
}

uint64_t sub_1DB1F1150()
{
  return MEMORY[0x1F41036B8]();
}

uint64_t sub_1DB1F1160()
{
  return MEMORY[0x1F41036C0]();
}

uint64_t sub_1DB1F1170()
{
  return MEMORY[0x1F41036C8]();
}

uint64_t sub_1DB1F1180()
{
  return MEMORY[0x1F41036D0]();
}

uint64_t sub_1DB1F1190()
{
  return MEMORY[0x1F41036D8]();
}

uint64_t sub_1DB1F11A0()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1DB1F11B0()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1DB1F11C0()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1DB1F11D0()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1DB1F11E0()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1DB1F11F0()
{
  return MEMORY[0x1F4183628]();
}

uint64_t sub_1DB1F1200()
{
  return MEMORY[0x1F4188410]();
}

uint64_t sub_1DB1F1210()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1DB1F1220()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_1DB1F1230()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1DB1F1240()
{
  return MEMORY[0x1F40E60A8]();
}

uint64_t sub_1DB1F1250()
{
  return MEMORY[0x1F40E6158]();
}

uint64_t sub_1DB1F1260()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1DB1F1270()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1DB1F1280()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1DB1F1290()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1DB1F12A0()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1DB1F12B0()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1DB1F12C0()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1DB1F12D0()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1DB1F12E0()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1DB1F12F0()
{
  return MEMORY[0x1F40E62C8]();
}

uint64_t sub_1DB1F1300()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1DB1F1310()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1DB1F1320()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1DB1F1330()
{
  return MEMORY[0x1F4183920]();
}

uint64_t sub_1DB1F1340()
{
  return MEMORY[0x1F4183928]();
}

uint64_t sub_1DB1F1350()
{
  return MEMORY[0x1F4183938]();
}

uint64_t sub_1DB1F1360()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1DB1F1370()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1DB1F1380()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_1DB1F1390()
{
  return MEMORY[0x1F4183A10]();
}

uint64_t sub_1DB1F13A0()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1DB1F13B0()
{
  return MEMORY[0x1F4183A60]();
}

uint64_t sub_1DB1F13C0()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1DB1F13D0()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1DB1F13E0()
{
  return MEMORY[0x1F4183B00]();
}

uint64_t sub_1DB1F13F0()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1DB1F1400()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1DB1F1410()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1DB1F1420()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1DB1F1430()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1DB1F1440()
{
  return MEMORY[0x1F4183C70]();
}

uint64_t sub_1DB1F1450()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1DB1F1460()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1DB1F1470()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1DB1F1480()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1DB1F1490()
{
  return MEMORY[0x1F40E6348]();
}

uint64_t sub_1DB1F14A0()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1DB1F14B0()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1DB1F14C0()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1DB1F14D0()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1DB1F14E0()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1DB1F14F0()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1DB1F1500()
{
  return MEMORY[0x1F40E6388]();
}

uint64_t sub_1DB1F1510()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1DB1F1520()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1DB1F1530()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1DB1F1540()
{
  return MEMORY[0x1F4187C38]();
}

uint64_t sub_1DB1F1560()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t sub_1DB1F1570()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t sub_1DB1F1580()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1DB1F1590()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1DB1F15A0()
{
  return MEMORY[0x1F4187D38]();
}

uint64_t sub_1DB1F15B0()
{
  return MEMORY[0x1F4187D40]();
}

uint64_t sub_1DB1F15C0()
{
  return MEMORY[0x1F4187D50]();
}

uint64_t sub_1DB1F15E0()
{
  return MEMORY[0x1F4187D78]();
}

uint64_t sub_1DB1F15F0()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_1DB1F1600()
{
  return MEMORY[0x1F4187E68]();
}

uint64_t sub_1DB1F1610()
{
  return MEMORY[0x1F4187EB8]();
}

uint64_t sub_1DB1F1620()
{
  return MEMORY[0x1F4187EC0]();
}

uint64_t sub_1DB1F1630()
{
  return MEMORY[0x1F4187ED0]();
}

uint64_t sub_1DB1F1650()
{
  return MEMORY[0x1F4187F00]();
}

uint64_t sub_1DB1F1660()
{
  return MEMORY[0x1F4184008]();
}

uint64_t sub_1DB1F1670()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1DB1F1680()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_1DB1F1690()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_1DB1F16A0()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1DB1F16B0()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1DB1F16C0()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1DB1F16D0()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1DB1F16E0()
{
  return MEMORY[0x1F4187410]();
}

uint64_t sub_1DB1F16F0()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1DB1F1700()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1DB1F1710()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1DB1F1720()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1DB1F1730()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1DB1F1740()
{
  return MEMORY[0x1F41665A0]();
}

uint64_t sub_1DB1F1750()
{
  return MEMORY[0x1F4186F90]();
}

uint64_t sub_1DB1F1760()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1DB1F1770()
{
  return MEMORY[0x1F4187040]();
}

uint64_t sub_1DB1F1780()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1DB1F1790()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1DB1F17A0()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1DB1F17B0()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1DB1F17C0()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1DB1F17D0()
{
  return MEMORY[0x1F4188708]();
}

uint64_t sub_1DB1F17E0()
{
  return MEMORY[0x1F4188710]();
}

uint64_t sub_1DB1F17F0()
{
  return MEMORY[0x1F4188718]();
}

uint64_t sub_1DB1F1800()
{
  return MEMORY[0x1F40E6748]();
}

uint64_t sub_1DB1F1810()
{
  return MEMORY[0x1F40E6758]();
}

uint64_t sub_1DB1F1820()
{
  return MEMORY[0x1F40E6778]();
}

uint64_t sub_1DB1F1830()
{
  return MEMORY[0x1F40D9728]();
}

uint64_t sub_1DB1F1840()
{
  return MEMORY[0x1F4166780]();
}

uint64_t sub_1DB1F1850()
{
  return MEMORY[0x1F40FCF28]();
}

uint64_t sub_1DB1F1860()
{
  return MEMORY[0x1F40E68E8]();
}

uint64_t sub_1DB1F1870()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1DB1F1880()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1DB1F1890()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1DB1F18A0()
{
  return MEMORY[0x1F4166838]();
}

uint64_t sub_1DB1F18B0()
{
  return MEMORY[0x1F4166968]();
}

uint64_t sub_1DB1F18C0()
{
  return MEMORY[0x1F41669D8]();
}

uint64_t sub_1DB1F18D0()
{
  return MEMORY[0x1F4166A68]();
}

uint64_t sub_1DB1F18E0()
{
  return MEMORY[0x1F40E6978]();
}

uint64_t sub_1DB1F18F0()
{
  return MEMORY[0x1F4188720]();
}

uint64_t sub_1DB1F1900()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1DB1F1910()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1DB1F1920()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1DB1F1930()
{
  return MEMORY[0x1F40E6BF0]();
}

uint64_t sub_1DB1F1940()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1DB1F1950()
{
  return MEMORY[0x1F40E6C80]();
}

uint64_t sub_1DB1F1960()
{
  return MEMORY[0x1F40E6CE8]();
}

uint64_t sub_1DB1F1970()
{
  return MEMORY[0x1F40E6D68]();
}

uint64_t sub_1DB1F1980()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1DB1F1990()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1DB1F19B0()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1DB1F19C0()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1DB1F19D0()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1DB1F19E0()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1DB1F19F0()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_1DB1F1A00()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_1DB1F1A10()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1DB1F1A20()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1DB1F1A30()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_1DB1F1A40()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_1DB1F1A50()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1DB1F1A60()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1DB1F1A70()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_1DB1F1A80()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1DB1F1AA0()
{
  return MEMORY[0x1F4184CE0]();
}

uint64_t sub_1DB1F1AB0()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1DB1F1AC0()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1DB1F1AD0()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1DB1F1AE0()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1DB1F1AF0()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1DB1F1B00()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1DB1F1B20()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1DB1F1B30()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1DB1F1B40()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1DB1F1B50()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1DB1F1B60()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1DB1F1B70()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1DB1F1B80()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1DB1F1B90()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1DB1F1BA0()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_1DB1F1BB0()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1DB1F1BC0()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1DB1F1BD0()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1DB1F1BE0()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1DB1F1BF0()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1DB1F1C10()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1DB1F1C20()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1DB1F1C30()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1DB1F1C40()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1DB1F1C50()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1DB1F1C60()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1DB1F1C70()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_1DB1F1C80()
{
  return MEMORY[0x1F4185578]();
}

uint64_t sub_1DB1F1C90()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_1DB1F1CA0()
{
  return MEMORY[0x1F4185590]();
}

uint64_t sub_1DB1F1CB0()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1DB1F1CC0()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1DB1F1CD0()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1DB1F1CE0()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1DB1F1CF0()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1DB1F1D00()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1DB1F1D10()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_1DB1F1D20()
{
  return MEMORY[0x1F41856A0]();
}

uint64_t sub_1DB1F1D30()
{
  return MEMORY[0x1F41856A8]();
}

uint64_t sub_1DB1F1D40()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_1DB1F1D50()
{
  return MEMORY[0x1F41856B8]();
}

uint64_t sub_1DB1F1D60()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1DB1F1D70()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1DB1F1D80()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1DB1F1DA0()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1DB1F1DB0()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1DB1F1DC0()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_1DB1F1DE0()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t sub_1DB1F1DF0()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1DB1F1E00()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1DB1F1E30()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_1DB1F1E40()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1DB1F1E50()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1DB1F1E60()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1DB1F1E70()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1DB1F1E80()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1DB1F1E90()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1DB1F1EA0()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1DB1F1EB0()
{
  return MEMORY[0x1F4185EF0]();
}

uint64_t sub_1DB1F1EC0()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1DB1F1ED0()
{
  return MEMORY[0x1F4185F00]();
}

uint64_t sub_1DB1F1EE0()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1DB1F1EF0()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D30](retstr, tx, ty, tz);
}

uint64_t CATransform3DMakeWithSIMDFloat3x3()
{
  return MEMORY[0x1F40F4D40]();
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D0](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D8](retstr, tx, ty);
}

CGColorRef CGColorCreateGenericGray(CGFloat gray, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1F40D9998](gray, alpha);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB230]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x1F40DB268]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x1F40DB270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x1F40DB280]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2B8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.CGFloat height = v6;
  result.size.CGFloat width = v5;
  result.origin.CGFloat y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1F40DB2D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x1F412F980]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1F40E72A0](range.location, range.length);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return (SCNetworkReachabilityRef)MEMORY[0x1F4101EE8](allocator, address);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return (SCNetworkReachabilityRef)MEMORY[0x1F4101EF8](allocator, nodename);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return MEMORY[0x1F4101F08](target, flags);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return MEMORY[0x1F4101F20](target, callout, context);
}

Boolean SCNetworkReachabilitySetDispatchQueue(SCNetworkReachabilityRef target, dispatch_queue_t queue)
{
  return MEMORY[0x1F4101F28](target, queue);
}

uint64_t SFLocalizableWAPIStringKeyForKey()
{
  return MEMORY[0x1F414B028]();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return MEMORY[0x1F4166B50]();
}

uint64_t UIAccessibilitySpeakAndDoNotBeInterrupted()
{
  return MEMORY[0x1F4165068]();
}

uint64_t UISystemRootDirectory()
{
  return MEMORY[0x1F4166F00]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _LTDisambiguationTypeDescription()
{
  return MEMORY[0x1F41025C0]();
}

uint64_t _LTIsInternalInstall()
{
  return MEMORY[0x1F41025C8]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _availability_version_check()
{
  return MEMORY[0x1F40C9D48]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

int fclose(FILE *a1)
{
  return MEMORY[0x1F40CC050](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1F40CC1C0](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1F40CC200](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x1F40CC290](a1, a2, *(void *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x1F40CC2E0](a1);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1F40CC3B0](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

void rewind(FILE *a1)
{
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x1F40CE0D0](a1, a2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1F4188200]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1F4186498]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1F4186620]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}