uint64_t _LTOSLogVisualTranslation()
{
  if (_LTOSLogVisualTranslation_onceToken != -1) {
    dispatch_once(&_LTOSLogVisualTranslation_onceToken, &__block_literal_global_4);
  }
  return _LTOSLogVisualTranslation_log;
}

id _LTSettingsLocalizedString(void *a1)
{
  v1 = (void *)MEMORY[0x1E4F28B50];
  id v2 = a1;
  v3 = [v1 bundleForClass:objc_opt_class()];
  v4 = [v3 localizedStringForKey:v2 value:&stru_1F3548BC8 table:0];

  return v4;
}

void sub_1DB0E0D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

UIMenu_optional __swiftcall _LTDisambiguableSentence.menu(forLinkIndex:)(Swift::UInt forLinkIndex)
{
  v3 = v1;
  id v5 = objc_msgSend(v1, sel_selectedTargetPhrase);
  if (v5)
  {
    v67 = v5;
    id v7 = objc_msgSend(v5, sel_links);
    sub_1DB0E2EFC(0, &qword_1EA9035A0);
    unint64_t v8 = sub_1DB1F14A0();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      int64_t v9 = sub_1DB1F1BB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      int64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v9 > 0 && v9 > forLinkIndex)
    {
      unint64_t v75 = MEMORY[0x1E4FBC860];
      unint64_t v74 = MEMORY[0x1E4FBC860];
      id v10 = objc_msgSend(v3, sel_menuConfigurationsForLinkIndex_, forLinkIndex);
      sub_1DB0E2EFC(0, &qword_1EA9035A8);
      unint64_t v11 = sub_1DB1F14A0();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1DB1F1BB0();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v12)
        {
LABEL_8:
          v71 = (void *)sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA9035B0);
          if (v12 >= 1)
          {
            uint64_t v13 = 0;
            uint64_t v69 = v12;
            unint64_t v70 = v11 & 0xC000000000000001;
            unint64_t v68 = v11;
            while (1)
            {
              if (v70) {
                id v16 = (id)MEMORY[0x1E018BAD0](v13, v11);
              }
              else {
                id v16 = *(id *)(v11 + 8 * v13 + 32);
              }
              v17 = v16;
              id v18 = objc_msgSend(v16, sel_menuDescription);
              sub_1DB1F1290();

              id v19 = objc_msgSend(v17, sel_targetPreview);
              sub_1DB1F1290();

              uint64_t v20 = swift_allocObject();
              swift_unknownObjectWeakInit();
              uint64_t v21 = swift_allocObject();
              *(void *)(v21 + 16) = v20;
              *(void *)(v21 + 24) = v17;
              v22 = v17;
              v23 = (void *)sub_1DB1F18A0();
              objc_msgSend(v23, sel_setState_, objc_msgSend(v3, sel_selectedPhraseIndex, 0, 0, 0, sub_1DB0E25A0, v21) == -[NSObject targetPhraseIndex](v22, sel_targetPhraseIndex));
              id v24 = [v22 type];
              if (v24 == (id)1)
              {
                id v29 = v23;
                MEMORY[0x1E018B470]();
                if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1DB1F14D0();
                }
                sub_1DB1F14F0();
                sub_1DB1F14C0();
                unint64_t v11 = v68;
              }
              else
              {
                if (v24)
                {
                  if (qword_1EA903530 != -1) {
                    swift_once();
                  }
                  uint64_t v25 = sub_1DB1EF810();
                  __swift_project_value_buffer(v25, (uint64_t)qword_1EA90F210);
                  v26 = sub_1DB1EF7F0();
                  os_log_type_t v27 = sub_1DB1F1720();
                  uint64_t v15 = v69;
                  if (os_log_type_enabled(v26, v27))
                  {
                    v28 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v28 = 0;
                    _os_log_impl(&dword_1DB0DC000, v26, v27, "Unknown edge type; ignoring", v28, 2u);
                    MEMORY[0x1E018CA60](v28, -1, -1);

                    v22 = v26;
                  }
                  else
                  {
                  }
                  unint64_t v11 = v68;
                  goto LABEL_14;
                }
                id v14 = v23;
                MEMORY[0x1E018B470]();
                unint64_t v11 = v68;
                if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1DB1F14D0();
                }
                sub_1DB1F14F0();
                sub_1DB1F14C0();
              }
              uint64_t v15 = v69;
LABEL_14:
              ++v13;

              if (v15 == v13)
              {
                swift_bridgeObjectRelease();
                unint64_t v11 = v74;
                goto LABEL_36;
              }
            }
          }
          __break(1u);
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_36:
      unint64_t v2 = v11 >> 62;
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_1DB1F1BB0();
        if (v32)
        {
LABEL_38:
          if ((v11 & 0xC000000000000001) == 0)
          {
            if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_62;
            }
            id v33 = *(id *)(v11 + 32);
            goto LABEL_41;
          }
LABEL_60:
          id v33 = (id)MEMORY[0x1E018BAD0](0, v11);
LABEL_41:
          v34 = v33;
          swift_bridgeObjectRelease();
          id v35 = objc_msgSend(v34, sel_subtitle);

          if (v35)
          {
            uint64_t v36 = sub_1DB1F1290();
            uint64_t v32 = v37;
          }
          else
          {
            uint64_t v36 = 0;
            uint64_t v32 = 0;
          }
LABEL_46:
          swift_bridgeObjectRetain();
          unint64_t v38 = swift_bridgeObjectRetain();
          v39 = sub_1DB0E2D4C(v38, v36, v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v71 = v39;
          if (v39)
          {
LABEL_66:
            type metadata accessor for _BundleObject();
            uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
            v49 = self;
            id v50 = objc_msgSend(v49, sel_bundleForClass_, ObjCClassFromMetadata);
            sub_1DB1EF400();

            id v51 = objc_msgSend(v49, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
            sub_1DB1EF400();

            if (v75 >> 62)
            {
              sub_1DB0E2EFC(0, &qword_1EA9035B8);
              swift_bridgeObjectRetain();
              sub_1DB1F1BA0();
            }
            else
            {
              swift_bridgeObjectRetain_n();
              sub_1DB1F1DC0();
              sub_1DB0E2EFC(0, &qword_1EA9035B8);
            }
            swift_bridgeObjectRelease();
            sub_1DB0E2EFC(0, &qword_1EA9035C0);
            v52 = (void *)sub_1DB1F1840();
            if (v11 >> 62)
            {
              sub_1DB0E2EFC(0, &qword_1EA9035B8);
              swift_bridgeObjectRetain();
              uint64_t v53 = sub_1DB1F1BA0();
            }
            else
            {
              swift_bridgeObjectRetain_n();
              sub_1DB1F1DC0();
              sub_1DB0E2EFC(0, &qword_1EA9035B8);
              uint64_t v53 = v11;
            }
            swift_bridgeObjectRelease();
            uint64_t v65 = v53;
            v54 = (void *)sub_1DB1F1840();
            id v55 = v52;
            v56 = (void *)sub_1DB1F1260();
            objc_msgSend(v55, sel_setAccessibilityIdentifier_, v56, v65);

            id v57 = v54;
            v58 = (void *)sub_1DB1F1260();
            objc_msgSend(v57, sel_setAccessibilityIdentifier_, v58);

            unint64_t v73 = MEMORY[0x1E4FBC860];
            if (v75 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v59 = sub_1DB1F1BB0();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v59 = *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v59 >= 1)
            {
              id v60 = v55;
              MEMORY[0x1E018B470]();
              if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1DB1F14D0();
              }
              sub_1DB1F14F0();
              sub_1DB1F14C0();
            }
            if (v11 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v61 = sub_1DB1F1BB0();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v61 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v61 >= 1)
            {
              id v62 = v57;
              MEMORY[0x1E018B470]();
              if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1DB1F14D0();
              }
              sub_1DB1F14F0();
              sub_1DB1F14C0();
            }
            if (v73 >> 62)
            {
              sub_1DB0E2EFC(0, &qword_1EA9035B8);
              swift_bridgeObjectRetain();
              uint64_t v63 = sub_1DB1F1BA0();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRetain();
              sub_1DB1F1DC0();
              sub_1DB0E2EFC(0, &qword_1EA9035B8);
              uint64_t v63 = v73;
            }
            swift_bridgeObjectRelease();
            uint64_t v66 = v63;
            id v30 = (id)sub_1DB1F1840();
            v64 = (void *)sub_1DB1F1260();
            objc_msgSend(v30, sel_setAccessibilityIdentifier_, v64, v66);

            goto LABEL_31;
          }
          if (qword_1EA903530 == -1)
          {
LABEL_48:
            uint64_t v40 = sub_1DB1EF810();
            __swift_project_value_buffer(v40, (uint64_t)qword_1EA90F210);
            v41 = sub_1DB1EF7F0();
            os_log_type_t v42 = sub_1DB1F16F0();
            if (os_log_type_enabled(v41, v42))
            {
              v43 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v43 = 0;
              _os_log_impl(&dword_1DB0DC000, v41, v42, "Removing gender previews from menu since they're all the same", v43, 2u);
              MEMORY[0x1E018CA60](v43, -1, -1);
            }

            if (v2)
            {
              swift_bridgeObjectRetain();
              uint64_t v44 = sub_1DB1F1BB0();
              if (v44) {
                goto LABEL_52;
              }
            }
            else
            {
              uint64_t v44 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v44)
              {
LABEL_52:
                unint64_t v72 = MEMORY[0x1E4FBC860];
                v31 = (objc_class *)sub_1DB1F1B40();
                if (v44 < 0)
                {
                  __break(1u);
                  goto LABEL_91;
                }
                uint64_t v45 = 0;
                do
                {
                  if ((v11 & 0xC000000000000001) != 0) {
                    id v46 = (id)MEMORY[0x1E018BAD0](v45, v11);
                  }
                  else {
                    id v46 = *(id *)(v11 + 8 * v45 + 32);
                  }
                  ++v45;
                  objc_msgSend(v46, sel_setSubtitle_, 0);
                  sub_1DB1F1B20();
                  sub_1DB1F1B50();
                  sub_1DB1F1B60();
                  sub_1DB1F1B30();
                }
                while (v44 != v45);
                unint64_t v47 = v72;
                swift_bridgeObjectRelease();
                goto LABEL_65;
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_65:
            swift_bridgeObjectRelease();
            unint64_t v11 = v47;
            goto LABEL_66;
          }
LABEL_62:
          swift_once();
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v32 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v32) {
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = 0;
      goto LABEL_46;
    }
  }
  id v30 = 0;
LABEL_31:
  v31 = (objc_class *)v30;
LABEL_91:
  result.value.super.super.isa = v31;
  result.is_nil = v6;
  return result;
}

void sub_1DB0E24B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  id v5 = (void *)MEMORY[0x1E018CB30](v4);
  if (v5)
  {
    Swift::Bool v6 = v5;
    objc_msgSend(v5, sel_setSelectedPhraseIndex_, objc_msgSend(a3, sel_targetPhraseIndex));
  }
}

uint64_t sub_1DB0E2528()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DB0E2560()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DB0E25A0(uint64_t a1)
{
  sub_1DB0E24B0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1DB0E25A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    id v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

_DWORD *sub_1DB0E2638@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1DB0E2644(uint64_t a1, uint64_t a2)
{
  return sub_1DB0E2BB4(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1DB0E2670(uint64_t a1, uint64_t a2)
{
  return sub_1DB0E2BB4(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1DB0E2688(uint64_t a1, id *a2)
{
  uint64_t result = sub_1DB1F1270();
  *a2 = 0;
  return result;
}

uint64_t sub_1DB0E2700(uint64_t a1, id *a2)
{
  char v3 = sub_1DB1F1280();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DB0E2780@<X0>(uint64_t *a1@<X8>)
{
  sub_1DB1F1290();
  uint64_t v2 = sub_1DB1F1260();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_1DB0E27C4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_1DB0E27D8(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1DB0E27E0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1DB0E27F4@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1DB0E2808@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1DB0E281C(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1DB0E284C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1DB0E2878@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1DB0E289C(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_1DB0E28B0(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_1DB0E28C4(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_1DB0E28D8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DB0E28EC(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1DB0E2900(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1DB0E2914(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1DB0E2928()
{
  return *v0 == 0;
}

uint64_t sub_1DB0E2938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

_DWORD *sub_1DB0E2950(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

_DWORD *sub_1DB0E2964@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_1DB0E2974(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DB0E2984@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_1DB0E3848(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1DB0E29C8(uint64_t a1)
{
  uint64_t v2 = sub_1DB0E3284((unint64_t *)&qword_1EA903D40, type metadata accessor for Key);
  uint64_t v3 = sub_1DB0E3284(&qword_1EA9036B0, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DB0E2A84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DB1F1260();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DB0E2ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1F1290();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DB0E2AF8(uint64_t a1)
{
  uint64_t v2 = sub_1DB0E3284(&qword_1EA9036A0, type metadata accessor for Name);
  uint64_t v3 = sub_1DB0E3284(&qword_1EA9036A8, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DB0E2BB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DB1F1290();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DB0E2BF8()
{
  sub_1DB1F1290();
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB0E2C4C()
{
  sub_1DB1F1290();
  sub_1DB1F1E80();
  sub_1DB1F1360();
  uint64_t v0 = sub_1DB1F1EC0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DB0E2CC0()
{
  uint64_t v0 = sub_1DB1F1290();
  uint64_t v2 = v1;
  if (v0 == sub_1DB1F1290() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_1DB0E2D4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DB1F1BB0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x1E018BAD0](v6 - 4, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v6);
        }
        unint64_t v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        id v10 = objc_msgSend(v7, sel_subtitle);
        if (!v10) {
          break;
        }
        unint64_t v11 = v10;
        uint64_t v12 = sub_1DB1F1290();
        uint64_t v14 = v13;

        if (!a3)
        {
          swift_bridgeObjectRelease();
LABEL_23:
          swift_bridgeObjectRelease();
          return v8;
        }
        if (v12 != a2 || v14 != a3)
        {
          char v16 = sub_1DB1F1DB0();
          swift_bridgeObjectRelease();
          if ((v16 & 1) == 0) {
            goto LABEL_23;
          }
LABEL_19:

          goto LABEL_5;
        }

        swift_bridgeObjectRelease();
LABEL_5:
        ++v6;
        if (v9 == v5) {
          goto LABEL_26;
        }
      }
      if (a3) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DB0E2EFC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1DB0E2F38()
{
  return swift_getOpaqueTypeMetadata2();
}

uint64_t sub_1DB0E2FE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1DB0E30C8()
{
  unint64_t result = qword_1EA9035D8;
  if (!qword_1EA9035D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9035C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9035D8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1DB0E316C()
{
  unint64_t result = qword_1EA9035E8;
  if (!qword_1EA9035E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9035D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9035F0);
    type metadata accessor for TranslationUIErrorView();
    sub_1DB0E3284(&qword_1EA9035F8, (void (*)(uint64_t))type metadata accessor for TranslationUIErrorView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9035E8);
  }
  return result;
}

uint64_t sub_1DB0E3284(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for _LTTextLanguageDetectorStrategy(uint64_t a1)
{
}

void type metadata accessor for SCNetworkReachabilityFlags(uint64_t a1)
{
}

void type metadata accessor for _LTDisambiguationType(uint64_t a1)
{
}

void type metadata accessor for SCNetworkReachability(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DisambiguationResultModel.LinkRangeInfo(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DisambiguationResultModel.LinkRangeInfo(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_1DB0E33AC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DB0E33CC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for LanguageModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1DB0E3450(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DB0E3470(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void sub_1DB0E34F8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1DB0E3540()
{
  return sub_1DB0E3284(&qword_1EA903650, type metadata accessor for Key);
}

uint64_t sub_1DB0E3588()
{
  return sub_1DB0E3284(&qword_1EA903658, type metadata accessor for Key);
}

uint64_t sub_1DB0E35D0()
{
  return sub_1DB0E3284(&qword_1EA903660, type metadata accessor for Key);
}

uint64_t sub_1DB0E3618()
{
  return sub_1DB0E3284(&qword_1EA903668, type metadata accessor for Name);
}

uint64_t sub_1DB0E3660()
{
  return sub_1DB0E3284(&qword_1EA903670, type metadata accessor for Name);
}

uint64_t sub_1DB0E36A8()
{
  return sub_1DB0E3284(&qword_1EA903678, type metadata accessor for Name);
}

uint64_t sub_1DB0E36F0()
{
  return sub_1DB0E3284(&qword_1EA903680, type metadata accessor for SCNetworkReachabilityFlags);
}

uint64_t sub_1DB0E3738()
{
  return sub_1DB0E3284(&qword_1EA903688, type metadata accessor for SCNetworkReachabilityFlags);
}

uint64_t sub_1DB0E3780()
{
  return sub_1DB0E3284(&qword_1EA903690, type metadata accessor for SCNetworkReachabilityFlags);
}

uint64_t sub_1DB0E37C8()
{
  return sub_1DB0E3284(&qword_1EA903698, type metadata accessor for SCNetworkReachabilityFlags);
}

uint64_t sub_1DB0E3810(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1DB0E3848(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  char v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1DB0E3898()
{
  return sub_1DB0E38C0();
}

uint64_t sub_1DB0E38AC()
{
  return sub_1DB0E38C0();
}

uint64_t sub_1DB0E38C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DB0E392C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7C8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D798);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled;
  if (*(void *)(v0 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled))
  {
    uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled);
  }
  else
  {
    uint64_t v17 = v10;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
    sub_1DB1EF8E0();
    swift_endAccess();
    swift_beginAccess();
    sub_1DB1EF8E0();
    swift_endAccess();
    sub_1DB0E3C44(&qword_1EBA4D7C0, &qword_1EBA4D7C8);
    sub_1DB1EF960();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v6, v2);
    v15(v8, v2);
    sub_1DB0E3C44(&qword_1EBA4D790, &qword_1EBA4D798);
    uint64_t v14 = sub_1DB1EF940();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v9);
    *(void *)(v1 + v13) = v14;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v14;
}

unsigned char *sub_1DB0E3C2C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = *result & ~*a2 & 1;
  return result;
}

uint64_t sub_1DB0E3C44(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB0E3C88(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled) = a1;
  return swift_release();
}

uint64_t (*sub_1DB0E3CA0(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_1DB0E392C();
  return sub_1DB0E3CE8;
}

uint64_t sub_1DB0E3CE8(void *a1)
{
  *(void *)(a1[1] + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled) = *a1;
  return swift_release();
}

id AirplaneModeConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

NSObject *AirplaneModeConfiguration.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &v0[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration___enabled];
  LOBYTE(v22) = 0;
  uint64_t v6 = v0;
  sub_1DB1EF8D0();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v7(v5, v4, v1);
  unint64_t v8 = &v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration___reachable];
  LOBYTE(v22) = 0;
  sub_1DB1EF8D0();
  v7(v8, v4, v1);
  *(void *)&v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled] = 0;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4BE78]), sel_init);
  *(void *)&v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences] = v9;
  LOBYTE(v8) = objc_msgSend(v9, sel_airplaneMode);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  char v21 = (char)v8;
  sub_1DB1EF8D0();
  swift_endAccess();
  *(void *)&v6[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_reachability] = SCNetworkReachabilityCreateWithName(0, "apple.com");

  uint64_t v10 = (objc_class *)type metadata accessor for AirplaneModeConfiguration();
  v20.receiver = v6;
  v20.super_class = v10;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v20, sel_init);
  uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences];
  uint64_t v13 = v11;
  objc_msgSend(v12, sel_setDelegate_, v13);
  if (qword_1EBA4D780 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1DB1EF810();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBA4F3A0);
  uint64_t v15 = v13;
  char v16 = sub_1DB1EF7F0();
  os_log_type_t v17 = sub_1DB1F1730();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v18 = 67109120;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DB1EF910();

    swift_release();
    swift_release();
    int v22 = v22;
    sub_1DB1F1910();

    _os_log_impl(&dword_1DB0DC000, v16, v17, "AirplaneModeConfiguration: Airplane mode enabled: %{BOOL}d", v18, 8u);
    MEMORY[0x1E018CA60](v18, -1, -1);
  }
  else
  {

    char v16 = v15;
  }

  sub_1DB0E42AC();
  return v15;
}

id AirplaneModeConfiguration.__deallocating_deinit()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_reachability];
  if (v1)
  {
    uint64_t v2 = v1;
    SCNetworkReachabilitySetCallback(v2, 0, 0);
    SCNetworkReachabilitySetDispatchQueue(v2, 0);
  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for AirplaneModeConfiguration();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1DB0E42AC()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_reachability];
  if (context.version)
  {
    if (!v1) {
      return;
    }
    SCNetworkReachabilityFlags flags = 0;
    uint64_t v2 = v1;
    SCNetworkReachabilityGetFlags(v2, &flags);
    SCNetworkReachabilityFlags v3 = flags & 2;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DB1EF910();
    swift_release();
    swift_release();
    if (LOBYTE(context.version) != v3 >> 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(context.version) = v3 >> 1;
      objc_super v4 = v0;
      sub_1DB1EF920();
    }
    context.info = v0;
    memset(&context.retain, 0, 24);
    context.version = 0;
    SCNetworkReachabilitySetCallback(v2, (SCNetworkReachabilityCallBack)sub_1DB0E448C, &context);
    sub_1DB0E5350();
    uint64_t v5 = sub_1DB1F1790();
    SCNetworkReachabilitySetDispatchQueue(v2, v5);
  }
  else
  {
    if (!v1) {
      return;
    }
    uint64_t v2 = v1;
    SCNetworkReachabilitySetCallback(v2, 0, 0);
    SCNetworkReachabilitySetDispatchQueue(v2, 0);
  }
}

uint64_t sub_1DB0E448C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    id v3 = a3;
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1DB1EF920();
  }
  return result;
}

id static AirplaneModeConfiguration.isAirplaneModeEnabled.getter()
{
  char v0 = sub_1DB0E45C8(sub_1DB0E4FAC);
  if (v0 != 2) {
    return (id)(v0 & 1);
  }
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4BE78]), sel_init);
  id v2 = objc_msgSend(v1, sel_airplaneMode);

  return v2;
}

uint64_t sub_1DB0E4588()
{
  return sub_1DB0E45C8(sub_1DB0E4FAC);
}

uint64_t sub_1DB0E45A8()
{
  return sub_1DB0E45C8(sub_1DB14356C);
}

uint64_t sub_1DB0E45C8(uint64_t (*a1)(void))
{
  if (qword_1EBA4D5C8 != -1) {
    swift_once();
  }
  if (byte_1EA90F1F1 != 1) {
    return 2;
  }
  uint64_t v2 = a1();
  if (v2 == 2) {
    return 2;
  }
  uint64_t v3 = v2;
  if (qword_1EBA4D780 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DB1EF810();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBA4F3A0);
  uint64_t v5 = sub_1DB1EF7F0();
  os_log_type_t v6 = sub_1DB1F16F0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_1DB1F1300();
    sub_1DB11F638(v9, v10, &v12);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v5, v6, "Network path fixture preempt %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v8, -1, -1);
    MEMORY[0x1E018CA60](v7, -1, -1);
  }

  return v3;
}

void sub_1DB0E47C0(char *a1@<X8>)
{
  if (qword_1EBA4D5C8 != -1) {
    swift_once();
  }
  if (byte_1EA90F1F1 == 1)
  {
    sub_1DB163AFC(&v10);
    char v2 = v10;
    if (v10 != 5)
    {
      if (qword_1EBA4D780 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1DB1EF810();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EBA4F3A0);
      uint64_t v4 = sub_1DB1EF7F0();
      os_log_type_t v5 = sub_1DB1F16F0();
      if (os_log_type_enabled(v4, v5))
      {
        os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        uint64_t v10 = v7;
        *(_DWORD *)os_log_type_t v6 = 136315138;
        uint64_t v8 = sub_1DB1F1300();
        sub_1DB11F638(v8, v9, &v10);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DB0DC000, v4, v5, "Network path fixture preempt %s", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v7, -1, -1);
        MEMORY[0x1E018CA60](v6, -1, -1);
      }
    }
  }
  else
  {
    char v2 = 5;
  }
  *a1 = v2;
}

Swift::Void __swiftcall AirplaneModeConfiguration.airplaneModeChanged()()
{
  if (qword_1EBA4D780 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F3A0);
  char v2 = v0;
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F16F0();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 67240192;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences], sel_airplaneMode);
    sub_1DB1F1910();

    _os_log_impl(&dword_1DB0DC000, v3, v4, "Airplane mode changed; is in Airplane mode: %{BOOL,public}d", v5, 8u);
    MEMORY[0x1E018CA60](v5, -1, -1);
  }
  else
  {
  }
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration_radiosPreferences], sel_airplaneMode);
  swift_getKeyPath();
  swift_getKeyPath();
  os_log_type_t v6 = v2;
  sub_1DB1EF920();
  sub_1DB0E42AC();
}

uint64_t sub_1DB0E4BA0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB0E4C1C(uint64_t a1, void **a2)
{
  char v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_1DB1EF920();
}

uint64_t type metadata accessor for AirplaneModeConfiguration()
{
  uint64_t result = qword_1EBA4D6D0;
  if (!qword_1EBA4D6D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB0E4CD4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DB0E4BA0(a1);
}

uint64_t sub_1DB0E4CFC(uint64_t a1, void **a2)
{
  return sub_1DB0E4C1C(a1, a2);
}

uint64_t sub_1DB0E4D24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB0E392C();
  *a1 = result;
  return result;
}

uint64_t sub_1DB0E4D50(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC13TranslationUI25AirplaneModeConfiguration____lazy_storage___isEnabled) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_1DB0E4D9C()
{
  return type metadata accessor for AirplaneModeConfiguration();
}

void sub_1DB0E4DA4()
{
  sub_1DB0E4F04();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AirplaneModeConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AirplaneModeConfiguration);
}

uint64_t dispatch thunk of AirplaneModeConfiguration.isEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AirplaneModeConfiguration.isEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AirplaneModeConfiguration.isEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

void sub_1DB0E4F04()
{
  if (!qword_1EBA4E250)
  {
    unint64_t v0 = sub_1DB1EF930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4E250);
    }
  }
}

uint64_t sub_1DB0E4F5C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DB0E4BA0(a1);
}

uint64_t sub_1DB0E4F84(uint64_t a1, void **a2)
{
  return sub_1DB0E4C1C(a1, a2);
}

uint64_t sub_1DB0E4FAC()
{
  if (getenv("LT_AIRPLANE_MODE"))
  {
    uint64_t v0 = sub_1DB1F13B0();
    uint64_t v2 = sub_1DB0FFDA4(v0, v1);
    swift_bridgeObjectRelease();
    if (v2)
    {
      sub_1DB1F1A40();
      if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1DB1A8BE4((uint64_t)v18), (v4 & 1) != 0))
      {
        sub_1DB0E52F4(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v19);
      }
      else
      {
        long long v19 = 0u;
        long long v20 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1DB0E5240((uint64_t)v18);
      if (*((void *)&v20 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v5 = 16;
          if (qword_1EBA4D780 != -1) {
            swift_once();
          }
          uint64_t v6 = sub_1DB1EF810();
          __swift_project_value_buffer(v6, (uint64_t)qword_1EBA4F3A0);
          uint64_t v7 = sub_1DB1EF7F0();
          os_log_type_t v8 = sub_1DB1F16F0();
          if (os_log_type_enabled(v7, v8))
          {
            unint64_t v9 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)unint64_t v9 = 67109120;
            v18[0] = 16;
            sub_1DB1F1910();
            uint64_t v10 = "Airplane mode fixture found %{BOOL}d";
            uint64_t v11 = v7;
            os_log_type_t v12 = v8;
            uint64_t v13 = v9;
            uint32_t v14 = 8;
LABEL_18:
            _os_log_impl(&dword_1DB0DC000, v11, v12, v10, v13, v14);
            MEMORY[0x1E018CA60](v9, -1, -1);
            goto LABEL_19;
          }
          goto LABEL_19;
        }
      }
      else
      {
        sub_1DB0E5294((uint64_t)&v19);
      }
    }
  }
  if (qword_1EBA4D780 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1DB1EF810();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBA4F3A0);
  uint64_t v7 = sub_1DB1EF7F0();
  os_log_type_t v16 = sub_1DB1F16F0();
  uint64_t v5 = 2;
  if (os_log_type_enabled(v7, v16))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v9 = 0;
    uint64_t v10 = "Airplane mode fixture not found";
    uint64_t v11 = v7;
    os_log_type_t v12 = v16;
    uint64_t v13 = v9;
    uint32_t v14 = 2;
    goto LABEL_18;
  }
LABEL_19:

  return v5;
}

uint64_t sub_1DB0E5240(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DB0E5294(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DDE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB0E52F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1DB0E5350()
{
  unint64_t result = qword_1EBA4D940;
  if (!qword_1EBA4D940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBA4D940);
  }
  return result;
}

double sub_1DB0E5390()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D20();
  return v1;
}

double sub_1DB0E53E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D40();
  return v1;
}

double sub_1DB0E5444()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D20();
  return v1;
}

double sub_1DB0E549C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D40();
  return v1;
}

double sub_1DB0E54F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D20();
  return v1;
}

double sub_1DB0E5550()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D40();
  return v1;
}

uint64_t BottomPanelContainer.init(content:panel:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  os_log_type_t v8 = (int *)type metadata accessor for BottomPanelContainer();
  unint64_t v9 = (void *)(a5 + v8[14]);
  sub_1DB1F0D10();
  *unint64_t v9 = a3;
  v9[1] = a4;
  uint64_t v10 = (void *)(a5 + v8[15]);
  sub_1DB1F0D10();
  *uint64_t v10 = a3;
  v10[1] = a4;
  uint64_t v11 = (void *)(a5 + v8[16]);
  uint64_t v12 = sub_1DB1F0D10();
  *uint64_t v11 = a3;
  v11[1] = a4;
  uint64_t v13 = a1(v12);
  a2(v13);
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for BottomPanelContainer()
{
  return swift_getGenericMetadata();
}

uint64_t BottomPanelContainer.body.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v61 = a1[3];
  uint64_t v63 = a1[5];
  id v55 = (char *)sub_1DB1F0DA0();
  uint64_t v54 = sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903728);
  sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903730);
  uint64_t v56 = sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903738);
  uint64_t v3 = sub_1DB1EFE20();
  uint64_t v65 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v64 = (uint64_t)&v44 - v4;
  uint64_t v58 = a1[2];
  sub_1DB1EFE20();
  sub_1DB1EFE20();
  sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903740);
  swift_getTupleTypeMetadata2();
  sub_1DB1F0FF0();
  swift_getWitnessTable();
  sub_1DB1F0DE0();
  sub_1DB1EFE20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = MEMORY[0x1E4F3CE38];
  uint64_t v91 = WitnessTable;
  uint64_t v92 = MEMORY[0x1E4F3CE38];
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v7 = sub_1DB1EFB00();
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v44 - v8;
  uint64_t v57 = sub_1DB1EFE20();
  uint64_t v53 = sub_1DB1EFE20();
  uint64_t v60 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v50 = (uint64_t)&v44 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903748);
  uint64_t v48 = sub_1DB1EFE20();
  uint64_t v62 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  id v51 = (char *)&v44 - v11;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v90 = v6;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v47 = sub_1DB0E3C44(&qword_1EA903750, &qword_1EA903728);
  uint64_t v87 = v12;
  uint64_t v88 = v47;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v45 = sub_1DB0E3C44(&qword_1EA903758, &qword_1EA903730);
  uint64_t v85 = v13;
  uint64_t v86 = v45;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = sub_1DB0E3C44(&qword_1EA903760, &qword_1EA903738);
  uint64_t v83 = v14;
  uint64_t v84 = v15;
  uint64_t v49 = v3;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v56 = sub_1DB1EFEF0();
  uint64_t v16 = sub_1DB1EFE20();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  id v46 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v55 = (char *)&v44 - v20;
  uint64_t v68 = v58;
  uint64_t v69 = v61;
  uint64_t v44 = a1;
  uint64_t v70 = a1[4];
  uint64_t v71 = v63;
  uint64_t v72 = v67;
  sub_1DB1F06C0();
  char v21 = v9;
  sub_1DB1EFB10();
  double v22 = sub_1DB0E5550();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  double v27 = v22;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v50;
  View.bindGeometry(to:reader:)(v24, v26, (uint64_t)sub_1DB0E6CDC, 0, v28, v50, v27);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v21, v7);
  uint64_t v81 = 0x72666C6C6F726373;
  unint64_t v82 = 0xEB00000000656D61;
  uint64_t v79 = v28;
  uint64_t v80 = v47;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = v45;
  uint64_t v30 = v53;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = v51;
  sub_1DB1F0A10();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v29, v30);
  uint64_t v33 = v64;
  sub_1DB0E6CE0(v44, v64);
  sub_1DB1F0F50();
  uint64_t v34 = sub_1DB0E3C44(qword_1EA903768, &qword_1EA903748);
  uint64_t v75 = v31;
  uint64_t v76 = v34;
  uint64_t v35 = v48;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v46;
  uint64_t v38 = v49;
  sub_1DB1F0B00();
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v33, v38);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v32, v35);
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v73 = v36;
  uint64_t v74 = v39;
  swift_getWitnessTable();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v41 = v55;
  v40(v55, v37, v16);
  os_log_type_t v42 = *(void (**)(char *, uint64_t))(v17 + 8);
  v42(v37, v16);
  v40(v66, v41, v16);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v16);
}

uint64_t sub_1DB0E60A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v29 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903728);
  sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903730);
  sub_1DB1EFE20();
  sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903740);
  swift_getTupleTypeMetadata2();
  sub_1DB1F0FF0();
  v25[1] = swift_getWitnessTable();
  uint64_t v11 = sub_1DB1F0DE0();
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = sub_1DB1EFE20();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v26 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  double v27 = (char *)v25 - v18;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a1;
  sub_1DB1F02E0();
  sub_1DB1F0DD0();
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  type metadata accessor for BottomPanelContainer();
  sub_1DB0E54F8();
  sub_1DB1F0F60();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = v26;
  sub_1DB1F0AE0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  uint64_t v35 = WitnessTable;
  uint64_t v36 = MEMORY[0x1E4F3CE38];
  swift_getWitnessTable();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  char v21 = v27;
  v20(v27, v19, v14);
  double v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v19, v14);
  v20(v29, v21, v14);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v14);
}

uint64_t sub_1DB0E6464()
{
  return sub_1DB0E8C48((uint64_t (*)(void, void, void, void, void))sub_1DB0E60A4);
}

uint64_t sub_1DB0E647C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v46 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903728);
  sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903730);
  uint64_t v11 = sub_1DB1EFE20();
  uint64_t v45 = *(void (***)(char *, uint64_t))(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = sub_1DB1EFE20();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v43 = (char *)&v38 - v18;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v44 = type metadata accessor for BottomPanelContainer();
  uint64_t v42 = a1;
  double v19 = sub_1DB0E549C();
  View.bindGeometry(to:reader:)(v20, v21, (uint64_t)sub_1DB0E6998, 0, a4, (uint64_t)v13, v19);
  swift_release();
  swift_release();
  sub_1DB1F0F60();
  uint64_t v22 = sub_1DB0E3C44(&qword_1EA903750, &qword_1EA903728);
  v58[6] = a4;
  v58[7] = v22;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = sub_1DB0E3C44(&qword_1EA903758, &qword_1EA903730);
  v58[4] = WitnessTable;
  v58[5] = v24;
  uint64_t v37 = swift_getWitnessTable();
  sub_1DB1F0AE0();
  v45[1](v13, v11);
  v58[2] = v37;
  v58[3] = MEMORY[0x1E4F3CE38];
  uint64_t v25 = v14;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v26 = v47;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  double v27 = v43;
  uint64_t v39 = v17;
  v40(v43, v17, v14);
  uint64_t v28 = *(void (***)(char *, uint64_t))(v26 + 8);
  uint64_t v47 = v26 + 8;
  uint64_t v45 = v28;
  ((void (*)(char *, uint64_t))v28)(v17, v14);
  uint64_t v38 = sub_1DB1F0C20();
  sub_1DB0E5390();
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  uint64_t v29 = v58[8];
  LOBYTE(a3) = v59;
  uint64_t v30 = v60;
  LOBYTE(a2) = v61;
  uint64_t v32 = v62;
  uint64_t v31 = v63;
  uint64_t v33 = v39;
  v40(v39, v27, v25);
  uint64_t v51 = v38;
  uint64_t v52 = v29;
  LOBYTE(v53) = a3;
  uint64_t v54 = v30;
  char v55 = a2;
  uint64_t v56 = v32;
  uint64_t v57 = v31;
  uint64_t v34 = v33;
  v58[0] = v33;
  v58[1] = &v51;
  swift_retain();
  v50[0] = v25;
  v50[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903740);
  uint64_t v48 = v41;
  unint64_t v49 = sub_1DB0E8C60();
  sub_1DB0E6AE0((uint64_t)v58, 2uLL, (uint64_t)v50);
  swift_release();
  uint64_t v35 = v45;
  ((void (*)(char *, uint64_t))v45)(v27, v25);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v35)(v34, v25);
}

void sub_1DB0E6998()
{
  uint64_t v0 = sub_1DB1F0420();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0x72666C6C6F726373;
  v12[1] = 0xEB00000000656D61;
  sub_1DB1F0510();
  sub_1DB1EFCA0();
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13.origin.x = v5;
  v13.origin.y = v7;
  v13.size.width = v9;
  v13.size.height = v11;
  CGRectGetMaxY(v13);
}

uint64_t sub_1DB0E6AE0(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  double v4 = (uint64_t *)TupleTypeMetadata;
  CGFloat v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x1F4188790](TupleTypeMetadata);
    double v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      double v10 = (long long *)(v5 + 2);
      CGFloat v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *CGFloat v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_1DB1F1000();
}

uint64_t sub_1DB0E6CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_1DB0E6CE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9037F0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v40 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9037F8);
  MEMORY[0x1F4188790](v41);
  uint64_t v39 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[5];
  uint64_t v9 = sub_1DB1F0DA0();
  uint64_t v34 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  CGFloat v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_1DB1EFE20();
  uint64_t v35 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v34 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903728);
  uint64_t v36 = sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903730);
  uint64_t v37 = sub_1DB1EFE20();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v43 = (uint64_t)&v34 - v15;
  uint64_t v44 = a1[2];
  uint64_t v45 = v7;
  uint64_t v46 = a1[4];
  uint64_t v47 = v8;
  uint64_t v48 = v2;
  sub_1DB1F01C0();
  sub_1DB1F0D90();
  sub_1DB1F0F60();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DB1F0AE0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v9);
  double v16 = sub_1DB0E53E8();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  double v21 = v16;
  uint64_t v53 = WitnessTable;
  uint64_t v54 = MEMORY[0x1E4F3CE38];
  uint64_t v22 = swift_getWitnessTable();
  View.bindGeometry(to:reader:)(v18, v20, (uint64_t)sub_1DB0E6CDC, 0, v22, v43, v21);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
  uint64_t v23 = v40;
  sub_1DB0E7544(v40);
  sub_1DB0E72B8();
  uint64_t v25 = v24;
  uint64_t v26 = v39;
  sub_1DB0E8B70(v23, v39, &qword_1EA9037F0);
  *(void *)(v26 + *(int *)(v41 + 36)) = v25;
  sub_1DB0E8BD4(v23, &qword_1EA9037F0);
  sub_1DB1F0F60();
  uint64_t v27 = sub_1DB0E3C44(&qword_1EA903750, &qword_1EA903728);
  uint64_t v51 = v22;
  uint64_t v52 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = sub_1DB0E3C44(&qword_1EA903758, &qword_1EA903730);
  uint64_t v49 = v28;
  uint64_t v50 = v29;
  uint64_t v30 = v37;
  swift_getWitnessTable();
  sub_1DB0E89B4();
  uint64_t v31 = v43;
  sub_1DB1F0970();
  sub_1DB0E8BD4(v26, &qword_1EA9037F8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v31, v30);
}

uint64_t sub_1DB0E7274()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1DB0E72B8()
{
}

uint64_t sub_1DB0E7324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = v9;
  v16[1] = v10;
  v16[2] = v11;
  v16[3] = v12;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for BottomPanelContainer() + 52);
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v14(v8, v13, a2);
  v14(a3, (uint64_t)v8, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

void sub_1DB0E7438()
{
  uint64_t v0 = sub_1DB1F0410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0500();
  sub_1DB1EFCA0();
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13.origin.x = v5;
  v13.origin.y = v7;
  v13.size.width = v9;
  v13.size.height = v11;
  CGRectGetHeight(v13);
}

uint64_t sub_1DB0E7544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903828);
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  double v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1DB1F0F20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903818);
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)&v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1DB1F0C20();
  sub_1DB1F0F10();
  char v14 = sub_1DB1F06E0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v4, v8, v5);
  v4[*(int *)(v2 + 44)] = v14;
  sub_1DB0E8B70((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_1EA903828);
  *uint64_t v12 = v13;
  swift_retain();
  sub_1DB0E8BD4((uint64_t)v4, &qword_1EA903828);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  id v15 = objc_msgSend(self, sel_separatorColor);
  MEMORY[0x1E018ABF0](v15);
  uint64_t v28 = sub_1DB1F0C40();
  swift_release();
  int v27 = sub_1DB1F04C0();
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  uint64_t v16 = v30;
  LOBYTE(v2) = v31;
  uint64_t v17 = v32;
  LOBYTE(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = v33;
  uint64_t v19 = v34;
  uint64_t v18 = v35;
  uint64_t v20 = sub_1DB1F0F40();
  uint64_t v22 = v21;
  uint64_t v23 = v29;
  sub_1DB0E8B70((uint64_t)v12, v29, &qword_1EA903818);
  uint64_t v24 = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9037F0) + 36);
  *(void *)uint64_t v24 = v28;
  *(_WORD *)(v24 + 8) = 256;
  *(_DWORD *)(v24 + 12) = v27;
  *(void *)(v24 + 16) = v16;
  *(unsigned char *)(v24 + 24) = v2;
  *(void *)(v24 + 32) = v17;
  *(unsigned char *)(v24 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  *(void *)(v24 + 48) = v19;
  *(void *)(v24 + 56) = v18;
  *(void *)(v24 + 64) = v20;
  *(void *)(v24 + 72) = v22;
  return sub_1DB0E8BD4((uint64_t)v12, &qword_1EA903818);
}

uint64_t sub_1DB0E7828()
{
  return sub_1DB1F0A00();
}

uint64_t sub_1DB0E7848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1DB0E7850()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DB0E792C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  double v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((((((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    double v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    uint64_t v19 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    v19[1] = v20[1];
    uint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v22;
    v21[1] = v22[1];
    uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v23 = *v24;
    v23[1] = v24[1];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DB0E7B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v4 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DB0E7C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  id v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *id v15 = *v16;
  v15[1] = v16[1];
  uint64_t v17 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v17 = *v18;
  v17[1] = v18[1];
  uint64_t v19 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DB0E7D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  id v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *id v15 = *v16;
  v15[1] = v16[1];
  swift_retain();
  swift_release();
  uint64_t v17 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v17 = *v18;
  v17[1] = v18[1];
  swift_retain();
  swift_release();
  uint64_t v19 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DB0E7E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  id v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *id v15 = *v16;
  uint64_t v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v17 = *v18;
  *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DB0E7F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  id v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *id v15 = *v16;
  v15[1] = v16[1];
  swift_release();
  uint64_t v17 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v17 = *v18;
  v17[1] = v18[1];
  swift_release();
  uint64_t v19 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_release();
  return a1;
}

uint64_t sub_1DB0E80A0(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v12 = *(void *)(v7 + 64) + 7;
  if (v10 < a2)
  {
    unint64_t v13 = ((((((v12 + (v11 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unsigned int v14 = a2 - v10;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DB0E8294);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v10 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v10) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v11) & ~v9;
  if (v8 == v10) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)(((v12 + v23) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  int v25 = v24 - 1;
  if (v25 < 0) {
    int v25 = -1;
  }
  return (v25 + 1);
}

void sub_1DB0E82A8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                int v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if (a2 > 0x7FFFFFFE)
                {
                  void *v26 = a2 - 0x7FFFFFFF;
                  v26[1] = 0;
                }
                else
                {
                  v26[1] = a2;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v22 = ~v12 + a2;
    bzero(a1, ((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x1DB0E855CLL);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1DB0E8584()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DB0E899C()
{
  return sub_1DB0E8C48((uint64_t (*)(void, void, void, void, void))sub_1DB0E7324);
}

unint64_t sub_1DB0E89B4()
{
  unint64_t result = qword_1EA903800;
  if (!qword_1EA903800)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9037F8);
    sub_1DB0E8A30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903800);
  }
  return result;
}

unint64_t sub_1DB0E8A30()
{
  unint64_t result = qword_1EA903808;
  if (!qword_1EA903808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9037F0);
    sub_1DB0E8AD0();
    sub_1DB0E3C44(&qword_1EA903830, &qword_1EA903838);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903808);
  }
  return result;
}

unint64_t sub_1DB0E8AD0()
{
  unint64_t result = qword_1EA903810;
  if (!qword_1EA903810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903818);
    sub_1DB0E3C44(&qword_1EA903820, &qword_1EA903828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903810);
  }
  return result;
}

uint64_t sub_1DB0E8B70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB0E8BD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB0E8C30()
{
  return sub_1DB0E8C48((uint64_t (*)(void, void, void, void, void))sub_1DB0E647C);
}

uint64_t sub_1DB0E8C48(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_1DB0E8C60()
{
  unint64_t result = qword_1EA903848;
  if (!qword_1EA903848)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903848);
  }
  return result;
}

uint64_t sub_1DB0E8CD4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BundleObject()
{
  return self;
}

uint64_t *sub_1DB0E8D08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1DB1EFC80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DB0E8E40(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1DB1EFC80();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1DB0E8F08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFC80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DB0E8FF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1DB0E8BD4((uint64_t)a1 + v6, &qword_1EA903850);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1DB1EFC80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DB0E9114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFC80();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_1DB0E91F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1DB0E8BD4((uint64_t)a1 + v6, &qword_1EA903850);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1DB1EFC80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DB0E930C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB0E9320);
}

uint64_t sub_1DB0E9320(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903858);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DB0E93D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB0E93E8);
}

void *sub_1DB0E93E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903858);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CameraPreviewDebugView()
{
  uint64_t result = qword_1EA903860;
  if (!qword_1EA903860) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DB0E94E0()
{
  sub_1DB0E9580();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DB0E9580()
{
  if (!qword_1EBA4D7F8)
  {
    sub_1DB1EFC80();
    unint64_t v0 = sub_1DB1EFB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4D7F8);
    }
  }
}

uint64_t sub_1DB0E95D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB0E95F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v27 = sub_1DB1F0190();
  uint64_t v3 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903880);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903878);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  MEMORY[0x1F4188790](v10);
  unint64_t v24 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038A8);
  sub_1DB0E3C44(&qword_1EA9038B0, &qword_1EA9038A8);
  sub_1DB1F0830();
  uint64_t v29 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903888);
  uint64_t v23 = sub_1DB0E3C44(&qword_1EA903890, &qword_1EA903880);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903898);
  uint64_t v15 = sub_1DB0E3C44(&qword_1EA9038A0, &qword_1EA903898);
  uint64_t v31 = v14;
  uint64_t v32 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = v6;
  uint64_t v18 = v13;
  sub_1DB1F0B20();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  sub_1DB1F0250();
  uint64_t v19 = v27;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3D320], v27);
  uint64_t v31 = v17;
  uint64_t v32 = v18;
  uint64_t v33 = v23;
  uint64_t v34 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  int v21 = v24;
  uint64_t v20 = v25;
  sub_1DB1F0A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v21, v20);
}

uint64_t sub_1DB0E9A04@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038C8);
  uint64_t v50 = *(void *)(v46 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v49 = (char *)&v35 - v5;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038D0);
  uint64_t v40 = *(void *)(v44 - 8);
  uint64_t v6 = v40;
  uint64_t v7 = MEMORY[0x1F4188790](v44);
  uint64_t v48 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038D8);
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v12 = v43;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v53 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038E0);
  sub_1DB0E3C44(&qword_1EA9038E8, &qword_1EA9038E0);
  uint64_t v42 = v17;
  sub_1DB1F0EB0();
  uint64_t v52 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038F0);
  sub_1DB0E3C44(&qword_1EA9038F8, &qword_1EA9038F0);
  uint64_t v18 = v10;
  uint64_t v39 = v10;
  sub_1DB1F0EB0();
  uint64_t v51 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903900);
  sub_1DB0E3C44(&qword_1EA903908, &qword_1EA903900);
  uint64_t v19 = v49;
  sub_1DB1F0EB0();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v20 = v15;
  uint64_t v41 = v15;
  uint64_t v38 = v11;
  v35(v15, v17, v11);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  int v21 = v48;
  unsigned int v22 = v18;
  uint64_t v23 = v44;
  v37(v48, v22, v44);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  unint64_t v24 = v45;
  uint64_t v25 = v19;
  uint64_t v26 = v46;
  v36(v45, v25, v46);
  uint64_t v27 = v47;
  v35(v47, v20, v11);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903910);
  v37(&v27[*(int *)(v28 + 48)], v21, v23);
  v36(&v27[*(int *)(v28 + 64)], v24, v26);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v30 = v26;
  v29(v49, v26);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v40 + 8);
  v31(v39, v23);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v33 = v38;
  v32(v42, v38);
  v29(v24, v30);
  v31(v48, v23);
  return ((uint64_t (*)(char *, uint64_t))v32)(v41, v33);
}

uint64_t sub_1DB0E9F34@<X0>(char *a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903948);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (uint64_t)&v24 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903950);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v24 - v12;
  sub_1DB1EFA90();
  sub_1DB1F0DC0();
  sub_1DB1EFA90();
  sub_1DB1F0DC0();
  sub_1DB1EFA70();
  char v14 = v27;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v14;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v17(v5, v11, v7);
  uint64_t v18 = (uint64_t *)&v5[*(int *)(v2 + 44)];
  *uint64_t v18 = KeyPath;
  v18[1] = (uint64_t)sub_1DB0EB388;
  v18[2] = v16;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v11, v7);
  uint64_t v20 = v25;
  sub_1DB0EB3A0((uint64_t)v5, v25);
  v17(v11, v13, v7);
  sub_1DB0EB408(v20, (uint64_t)v5);
  int v21 = v26;
  v17(v26, v11, v7);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903958);
  sub_1DB0EB408((uint64_t)v5, (uint64_t)&v21[*(int *)(v22 + 48)]);
  sub_1DB0E8BD4(v20, &qword_1EA903948);
  v19(v13, v7);
  sub_1DB0E8BD4((uint64_t)v5, &qword_1EA903948);
  return ((uint64_t (*)(char *, uint64_t))v19)(v11, v7);
}

uint64_t sub_1DB0EA274@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB0EAD14(a1);
}

uint64_t sub_1DB0EA298@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB0EAD14(a1);
}

uint64_t sub_1DB0EA2B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903930);
  uint64_t v2 = *(void *)(v23 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_1DB1F0240();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1DB1F0230();
  sub_1DB1F0220();
  sub_1DB1EFA70();
  sub_1DB1F01F0();
  sub_1DB1F0220();
  sub_1DB1F0260();
  uint64_t v9 = sub_1DB1F0920();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_1DB1EFA90();
  long long v24 = xmmword_1DB1F3A80;
  sub_1DB0EB250();
  uint64_t v22 = v7;
  sub_1DB1F0DB0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v17 = v7;
  uint64_t v18 = v23;
  v16(v5, v17, v23);
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v13;
  uint64_t v19 = (char *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903940) + 48));
  v16(v19, v5, v18);
  sub_1DB0EB2A4(v9, v11, v15);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  swift_bridgeObjectRetain();
  v20(v22, v18);
  v20(v5, v18);
  sub_1DB0EB23C(v9, v11, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB0EA5CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CameraPreviewDebugView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903918);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EFAA0();
  uint64_t v8 = sub_1DB1EFAB0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_1DB0EAF14(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1DB0EAF7C((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903920);
  sub_1DB0EB1C8();
  return sub_1DB1F0D60();
}

uint64_t sub_1DB0EA798()
{
  return sub_1DB1EFA80();
}

__n128 sub_1DB0EA80C@<Q0>(uint64_t a1@<X8>)
{
  sub_1DB1F0250();
  uint64_t v2 = sub_1DB1F0920();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_1DB1F0F60();
  sub_1DB0EC744(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v9, v10, v2, v4, v8, v6);
  sub_1DB0EB23C(v2, v4, v8);
  swift_bridgeObjectRelease();
  long long v11 = v15[7];
  *(_OWORD *)(a1 + 96) = v15[6];
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = v15[8];
  long long v12 = v15[3];
  *(_OWORD *)(a1 + 32) = v15[2];
  *(_OWORD *)(a1 + 48) = v12;
  long long v13 = v15[5];
  *(_OWORD *)(a1 + 64) = v15[4];
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v13;
  __n128 result = (__n128)v15[1];
  *(_OWORD *)a1 = v15[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DB0EA92C(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F0460();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903898);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DB1F0430();
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038B8);
  sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
  sub_1DB1EFED0();
  uint64_t v7 = sub_1DB0E3C44(&qword_1EA9038A0, &qword_1EA903898);
  MEMORY[0x1E018A4B0](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DB0EAAF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CameraPreviewDebugView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DB0EAF14(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1DB0EAF7C((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return sub_1DB1F0D70();
}

uint64_t sub_1DB0EAC20()
{
  uint64_t v0 = sub_1DB1EFC80();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CameraPreviewDebugView();
  sub_1DB1C50EC((uint64_t)v3);
  sub_1DB1EFC70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DB0EAD04@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB0EAD14(a1);
}

uint64_t sub_1DB0EAD14@<X0>(uint64_t a1@<X8>)
{
  sub_1DB1F0250();
  uint64_t result = sub_1DB1F0920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1DB0EAD74()
{
  return sub_1DB1EFDA0();
}

uint64_t sub_1DB0EAEF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB0E95F4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB0EAEFC@<X0>(char *a1@<X8>)
{
  return sub_1DB0E9A04(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB0EAF04()
{
  return sub_1DB0EA92C(*(void *)(v0 + 16));
}

uint64_t sub_1DB0EAF0C()
{
  return sub_1DB0EAAF4(*(void *)(v0 + 16));
}

uint64_t sub_1DB0EAF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CameraPreviewDebugView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0EAF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CameraPreviewDebugView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0EAFE0()
{
  return sub_1DB0EB154((uint64_t (*)(uint64_t))sub_1DB0EAC20);
}

uint64_t sub_1DB0EAFF8@<X0>(char *a1@<X8>)
{
  return sub_1DB0E9F34(a1);
}

uint64_t sub_1DB0EB000@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB0EA2B4(a1);
}

uint64_t sub_1DB0EB008()
{
  return sub_1DB0EA5CC(*(void *)(v0 + 16));
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = (int *)(type metadata accessor for CameraPreviewDebugView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1DB1EFC80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB0EB13C()
{
  return sub_1DB0EB154((uint64_t (*)(uint64_t))sub_1DB0EA798);
}

uint64_t sub_1DB0EB154(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CameraPreviewDebugView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

unint64_t sub_1DB0EB1C8()
{
  unint64_t result = qword_1EA903928;
  if (!qword_1EA903928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903928);
  }
  return result;
}

uint64_t sub_1DB0EB23C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1DB0EB250()
{
  unint64_t result = qword_1EA903938;
  if (!qword_1EA903938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903938);
  }
  return result;
}

uint64_t sub_1DB0EB2A4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DB0EB2B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1F00F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DB0EB2E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1F00F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DB0EB314()
{
  return sub_1DB1F0100();
}

uint64_t sub_1DB0EB33C()
{
  return sub_1DB1F0100();
}

unsigned char *sub_1DB0EB364(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_1DB0EB378()
{
  return swift_deallocObject();
}

unsigned char *sub_1DB0EB388(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1DB0EB3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0EB408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0EB470()
{
  return sub_1DB0E3C44(&qword_1EA903960, &qword_1EA903968);
}

uint64_t CloseButton.init(action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t CloseButton.makeUIView(context:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903970);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  sub_1DB0E2EFC(0, &qword_1EA903978);
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA9035B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1DB1F18A0();
  return sub_1DB1F18D0();
}

uint64_t sub_1DB0EB65C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903970);
  sub_1DB1F05C0();
  uint64_t v0 = *(void (**)(uint64_t))(v3 + 16);
  if (v0)
  {
    uint64_t v1 = sub_1DB0EB758(*(void *)(v3 + 16));
    v0(v1);
    sub_1DB0EB788((uint64_t)v0);
  }
  return swift_release();
}

uint64_t CloseButton.makeCoordinator()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  type metadata accessor for CloseButton.Coordinator();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  sub_1DB0EB758(v1);
  return v3;
}

uint64_t type metadata accessor for CloseButton.Coordinator()
{
  return self;
}

uint64_t sub_1DB0EB758(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t CloseButton.Coordinator.deinit()
{
  sub_1DB0EB788(*(void *)(v0 + 16));
  return v0;
}

uint64_t sub_1DB0EB788(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t CloseButton.Coordinator.__deallocating_deinit()
{
  sub_1DB0EB788(*(void *)(v0 + 16));
  return swift_deallocClassInstance();
}

unint64_t sub_1DB0EB7D4()
{
  unint64_t result = qword_1EA903980;
  if (!qword_1EA903980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903980);
  }
  return result;
}

uint64_t sub_1DB0EB828(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903970);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  sub_1DB0E2EFC(0, &qword_1EA903978);
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EA9035B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1DB1F18A0();
  return sub_1DB1F18D0();
}

uint64_t sub_1DB0EB9D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  type metadata accessor for CloseButton.Coordinator();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a1 = v5;
  return sub_1DB0EB758(v4);
}

uint64_t sub_1DB0EBA38()
{
  return sub_1DB1F0370();
}

uint64_t sub_1DB0EBA7C()
{
  return MEMORY[0x1E4F3F158];
}

uint64_t sub_1DB0EBA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1DB0EBD8C();
  return MEMORY[0x1F40F9EF0](a1, a2, a3, v6);
}

uint64_t sub_1DB0EBAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1DB0EBD8C();
  return MEMORY[0x1F40F9E78](a1, a2, a3, v6);
}

void sub_1DB0EBB50()
{
}

void *destroy for CloseButton(void *result)
{
  if (*result) {
    return (void *)swift_release();
  }
  return result;
}

void *_s13TranslationUI11CloseButtonVwCP_0(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for CloseButton(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for CloseButton(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloseButton(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CloseButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

uint64_t method lookup function for CloseButton.Coordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CloseButton.Coordinator);
}

unint64_t sub_1DB0EBD8C()
{
  unint64_t result = qword_1EA903988;
  if (!qword_1EA903988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903988);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903970);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DB0EBE78()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903970);
  return sub_1DB0EB65C();
}

uint64_t static Color.sourceTextColor.getter()
{
  return sub_1DB0EBF40();
}

uint64_t static Color.translateAccentColor.getter()
{
  return sub_1DB0EBF40();
}

uint64_t static Color.broadcastTintColor.getter()
{
  return sub_1DB0EBF40();
}

uint64_t sub_1DB0EBF40()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_1DB1F0C70();
}

void static Color.sourceLinkColor.getter()
{
}

uint64_t static Color.secondarySourceTextColor.getter()
{
  return sub_1DB0EC258();
}

uint64_t static Color.tertiarySourceTextColor.getter()
{
  return sub_1DB0EC258();
}

uint64_t static Color.quaternarySourceTextColor.getter()
{
  return sub_1DB0EC258();
}

uint64_t static Color.targetTextColor.getter()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_1DB1F0C70();
}

uint64_t static Color.targetLinkColor.getter()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB1F0C70();
  uint64_t v2 = sub_1DB1F0C40();
  swift_release();
  return v2;
}

uint64_t static Color.tertiaryTranslateAccentColor.getter()
{
  return sub_1DB0EC258();
}

uint64_t static Color.secondaryTranslateAccentColor.getter()
{
  return sub_1DB0EC258();
}

uint64_t static Color.quaternaryTranslateAccentColor.getter()
{
  return sub_1DB0EC258();
}

void static Color.appBackgroundColor.getter()
{
}

void static Color.enabledCardButtonFillColor.getter()
{
}

void sub_1DB0EC180(SEL *a1)
{
  id v1 = [self *a1];
  JUMPOUT(0x1E018ABF0);
}

uint64_t static Color.disabledCardButtonFillColor.getter()
{
  id v0 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  MEMORY[0x1E018ABF0](v0);
  uint64_t v1 = sub_1DB1F0C40();
  swift_release();
  return v1;
}

double static Color.secondaryColorOpacity.getter()
{
  return 0.4;
}

uint64_t static Color.dictionaryHighlightColor.getter()
{
  return sub_1DB0EC258();
}

uint64_t sub_1DB0EC258()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB1F0C70();
  uint64_t v2 = sub_1DB1F0C40();
  swift_release();
  return v2;
}

void static UIColor.sourceTextColor.getter()
{
}

void static UIColor.translateAccentColor.getter()
{
}

void static UIColor.broadcastTintColor.getter()
{
}

void sub_1DB0EC33C()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = (void *)sub_1DB1F1260();
  id v3 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v2, v1, 0);

  if (!v3) {
    __break(1u);
  }
}

uint64_t static UIColor.sourceLinkColor.getter()
{
  sub_1DB0EC444();
  id v0 = objc_msgSend(self, sel_secondaryLabelColor);
  MEMORY[0x1E018ABF0](v0);
  return sub_1DB1F1850();
}

unint64_t sub_1DB0EC444()
{
  unint64_t result = qword_1EBA4D960;
  if (!qword_1EBA4D960)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBA4D960);
  }
  return result;
}

uint64_t static UIColor.secondarySourceTextColor.getter()
{
  return sub_1DB0EC69C();
}

uint64_t static UIColor.tertiarySourceTextColor.getter()
{
  return sub_1DB0EC69C();
}

uint64_t static UIColor.quaternarySourceTextColor.getter()
{
  return sub_1DB0EC69C();
}

uint64_t static UIColor.targetTextColor.getter()
{
  sub_1DB0EC444();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB1F0C70();
  return sub_1DB1F1850();
}

uint64_t static UIColor.targetLinkColor.getter()
{
  sub_1DB0EC444();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB1F0C70();
  sub_1DB1F0C40();
  swift_release();
  return sub_1DB1F1850();
}

uint64_t static UIColor.secondaryTranslateAccentColor.getter()
{
  return sub_1DB0EC69C();
}

uint64_t static UIColor.tertiaryTranslateAccentColor.getter()
{
  return sub_1DB0EC69C();
}

uint64_t static UIColor.quaternaryTranslateAccentColor.getter()
{
  return sub_1DB0EC69C();
}

id static UIColor.appBackgroundColor.getter()
{
  id v0 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  return v0;
}

uint64_t static UIColor.dictionaryHighlightColor.getter()
{
  return sub_1DB0EC69C();
}

uint64_t sub_1DB0EC69C()
{
  sub_1DB0EC444();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB1F0C70();
  sub_1DB1F0C40();
  swift_release();
  return sub_1DB1F1850();
}

uint64_t sub_1DB0EC744@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1DB1F1720();
    uint64_t v31 = (void *)sub_1DB1F06B0();
    sub_1DB1EF730();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_1DB1EFEE0();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v36;
  sub_1DB0EB2A4(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_1DB0EC938@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1DB0EC994(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1EA9039F8, &qword_1EA903A00).n128_u64[0];
  return result;
}

__n128 sub_1DB0EC994@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1DB1F1720();
    uint64_t v28 = (void *)sub_1DB1F06B0();
    sub_1DB1EF730();

    uint64_t v19 = a17;
  }
  sub_1DB1EFEE0();
  sub_1DB0E8B70(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_1DB0ECB64@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1DB0EC994(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1EA9039E8, &qword_1EA9039F0).n128_u64[0];
  return result;
}

double sub_1DB0ECBC0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1DB0EC994(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1EA9039D8, &qword_1EA9039E0).n128_u64[0];
  return result;
}

double sub_1DB0ECC1C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1DB0EC994(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1EA9039C8, &qword_1EA9039D0).n128_u64[0];
  return result;
}

uint64_t ContainerStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903990);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = sub_1DB1F06E0();
  sub_1DB1EFAC0();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903998);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, a1, v17);
  uint64_t v18 = &v7[*(int *)(v5 + 44)];
  *uint64_t v18 = v8;
  *((void *)v18 + 1) = v10;
  *((void *)v18 + 2) = v12;
  *((void *)v18 + 3) = v14;
  *((void *)v18 + 4) = v16;
  v18[40] = 0;
  uint64_t v19 = sub_1DB1F0F60();
  sub_1DB0EC994(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, INFINITY, 0, v19, v20, &qword_1EA903990, &qword_1EA9039A8);
  return sub_1DB0ECDEC((uint64_t)v7);
}

uint64_t sub_1DB0ECDEC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903990);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB0ECE54()
{
  return sub_1DB1EFBD0();
}

uint64_t sub_1DB0ECE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903990);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = sub_1DB1F06E0();
  sub_1DB1EFAC0();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903998);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, a1, v17);
  uint64_t v18 = &v7[*(int *)(v5 + 44)];
  *uint64_t v18 = v8;
  *((void *)v18 + 1) = v10;
  *((void *)v18 + 2) = v12;
  *((void *)v18 + 3) = v14;
  *((void *)v18 + 4) = v16;
  v18[40] = 0;
  uint64_t v19 = sub_1DB1F0F60();
  sub_1DB0EC994(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, INFINITY, 0, v19, v20, &qword_1EA903990, &qword_1EA9039A8);
  return sub_1DB0ECDEC((uint64_t)v7);
}

void View.containerPadding()()
{
}

uint64_t sub_1DB0ECFF8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ContainerStyle()
{
  return &type metadata for ContainerStyle;
}

uint64_t sub_1DB0ED024()
{
  return sub_1DB0ED098(&qword_1EA9039A0, &qword_1EA9039A8, (void (*)(void))sub_1DB0ED068);
}

uint64_t sub_1DB0ED068()
{
  return sub_1DB0ED098(&qword_1EA9039B0, &qword_1EA903990, (void (*)(void))sub_1DB0ED114);
}

uint64_t sub_1DB0ED098(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB0ED114()
{
  unint64_t result = qword_1EA9039B8;
  if (!qword_1EA9039B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9039B8);
  }
  return result;
}

uint64_t sub_1DB0ED170()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DB0ED1D4()
{
  unint64_t result = qword_1EA9039C0;
  if (!qword_1EA9039C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9039C0);
  }
  return result;
}

uint64_t sub_1DB0ED228@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v46 = a1;
  uint64_t v50 = a2;
  uint64_t v2 = sub_1DB1F0570();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A48);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A50);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A58);
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A60);
  MEMORY[0x1F4188790](v47);
  uint64_t v45 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A68);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (uint64_t)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0580();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v20 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v20 = 0;
  *((_WORD *)v20 + 4) = 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  LOBYTE(v5) = v46;
  LOBYTE(v3) = sub_1DB1F06E0();
  sub_1DB1EFAC0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_1DB0E8B70((uint64_t)v9, (uint64_t)v13, &qword_1EA903A48);
  uint64_t v29 = &v13[*(int *)(v11 + 44)];
  *uint64_t v29 = v3;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_1DB0E8BD4((uint64_t)v9, &qword_1EA903A48);
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  sub_1DB0E8B70((uint64_t)v13, (uint64_t)v17, &qword_1EA903A50);
  uint64_t v30 = &v17[*(int *)(v15 + 44)];
  long long v31 = v52;
  *(_OWORD *)uint64_t v30 = v51;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v53;
  uint64_t v32 = (uint64_t)v13;
  char v33 = (char)v5;
  sub_1DB0E8BD4(v32, &qword_1EA903A50);
  uint64_t KeyPath = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  if (v5)
  {
    uint64_t v35 = sub_1DB1F0C30();
    uint64_t KeyPath = swift_getKeyPath();
    if (sub_1DB1F0590()) {
      uint64_t v36 = 0x3FE3333333333333;
    }
    else {
      uint64_t v36 = 0x3FF0000000000000;
    }
  }
  uint64_t v37 = sub_1DB1F0F60();
  uint64_t v39 = v38;
  uint64_t v40 = v45;
  sub_1DB0E8B70((uint64_t)v17, v45, &qword_1EA903A58);
  uint64_t v41 = (uint64_t *)(v40 + *(int *)(v47 + 36));
  uint64_t *v41 = KeyPath;
  v41[1] = v35;
  v41[2] = v36;
  v41[3] = v37;
  v41[4] = v39;
  sub_1DB0E8BD4((uint64_t)v17, &qword_1EA903A58);
  if (v33 & 1 | ((sub_1DB1F0590() & 1) == 0)) {
    double v42 = 1.0;
  }
  else {
    double v42 = 0.6;
  }
  uint64_t v43 = v48;
  sub_1DB0E8B70(v40, v48, &qword_1EA903A60);
  *(double *)(v43 + *(int *)(v49 + 36)) = v42;
  sub_1DB0E8BD4(v40, &qword_1EA903A60);
  return sub_1DB0EE04C(v43, v50);
}

uint64_t sub_1DB0ED6A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB0ED228(*v1, a1);
}

uint64_t ConversationButton.init(action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ConversationButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A10);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *v1;
  uint64_t v11 = v1[1];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v11;
  sub_1DB0EB758(v12);
  sub_1DB1F0D70();
  v16[15] = 1;
  sub_1DB0E3C44(&qword_1EA903A18, &qword_1EA903A08);
  sub_1DB0EDA6C();
  sub_1DB1F09A0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = sub_1DB1F0C00();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a1, v10, v7);
  *(void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A28) + 36)) = v14;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DB0ED934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DB1F0CA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0C90();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3EBF8], v2);
  uint64_t v6 = sub_1DB1F0CD0();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  return result;
}

unint64_t sub_1DB0EDA6C()
{
  unint64_t result = qword_1EA903A20;
  if (!qword_1EA903A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903A20);
  }
  return result;
}

uint64_t sub_1DB0EDAC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB0EDADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A10);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *v1;
  uint64_t v11 = v1[1];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v11;
  sub_1DB0EB758(v12);
  sub_1DB1F0D70();
  v16[15] = 1;
  sub_1DB0E3C44(&qword_1EA903A18, &qword_1EA903A08);
  sub_1DB0EDA6C();
  sub_1DB1F09A0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = sub_1DB1F0C00();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a1, v10, v7);
  *(void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A28) + 36)) = v14;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

ValueMetadata *type metadata accessor for ConversationButton()
{
  return &type metadata for ConversationButton;
}

unint64_t sub_1DB0EDD6C()
{
  unint64_t result = qword_1EA903A30;
  if (!qword_1EA903A30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903A28);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903A08);
    sub_1DB0E3C44(&qword_1EA903A18, &qword_1EA903A08);
    sub_1DB0EDA6C();
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA903A38, &qword_1EA903A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903A30);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TranslateButtonStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranslateButtonStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB0EDFF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslateButtonStyle()
{
  return &type metadata for TranslateButtonStyle;
}

uint64_t sub_1DB0EE030()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB0EE04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_1()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB0EE100()
{
  id v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1DB0EE130()
{
  return sub_1DB0EE240(&qword_1EA903A70, &qword_1EA903A68, (void (*)(void))sub_1DB0EE174);
}

unint64_t sub_1DB0EE174()
{
  unint64_t result = qword_1EA903A78;
  if (!qword_1EA903A78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903A60);
    sub_1DB0EE240(&qword_1EA903A80, &qword_1EA903A58, (void (*)(void))sub_1DB0EE2BC);
    sub_1DB0E3C44(&qword_1EA903AA0, &qword_1EA903AA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903A78);
  }
  return result;
}

uint64_t sub_1DB0EE240(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB0EE2BC()
{
  return sub_1DB0EE240(&qword_1EA903A88, &qword_1EA903A50, (void (*)(void))sub_1DB0EE2EC);
}

uint64_t sub_1DB0EE2EC()
{
  return sub_1DB0EE240(&qword_1EA903A90, &qword_1EA903A48, (void (*)(void))sub_1DB0EE31C);
}

unint64_t sub_1DB0EE31C()
{
  unint64_t result = qword_1EA903A98;
  if (!qword_1EA903A98)
  {
    sub_1DB1F0570();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903A98);
  }
  return result;
}

unint64_t sub_1DB0EE374(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903AE8);
  int v2 = (void *)sub_1DB1F1BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    BOOL v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1DB1A8C28(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DB0EE490(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E268);
  uint64_t v2 = sub_1DB1F1BE0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DB0E8B70(v6, (uint64_t)&v15, &qword_1EBA4E258);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1DB1A8C28(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1DB0F138C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DB0EE5C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B20);
  uint64_t v2 = sub_1DB1F1BE0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DB0E8B70(v6, (uint64_t)&v13, &qword_1EA903B28);
    uint64_t v7 = v13;
    unint64_t result = sub_1DB1A8CA0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1DB0F138C(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DB0EE6F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903AC8);
  uint64_t v2 = (void *)sub_1DB1F1BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DB1A8C28(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DB0EE80C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903D80);
  uint64_t v6 = sub_1DB1F1BE0();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DB0E8B70(v12, (uint64_t)v5, &qword_1EA903B08);
    unint64_t result = sub_1DB1A8DE8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1DB1EF570();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
    unint64_t result = sub_1DB0F1454(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, &qword_1EA903B10);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DB0EEA30(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903AF8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B00);
  uint64_t v6 = sub_1DB1F1BE0();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DB0E8B70(v12, (uint64_t)v5, &qword_1EA903AF8);
    unint64_t result = sub_1DB1A8D34((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for TextModel();
    sub_1DB0F13EC((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t v19 = v7[7];
    uint64_t v20 = sub_1DB1EF570();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DB0EEC60(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B18);
  uint64_t v2 = (void *)sub_1DB1F1BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1DB1A8C28(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DB0EED74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903AF0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903D60);
  uint64_t v6 = sub_1DB1F1BE0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1DB0E8B70(v12, (uint64_t)v5, &qword_1EA903AF0);
    unint64_t result = sub_1DB1A8DE8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1DB1EF570();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for VisualTranslationModel(0);
    unint64_t result = sub_1DB0F13EC(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, type metadata accessor for VisualTranslationModel);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t CoreAnalyticsLogger.Event.rawValue.getter()
{
  if (*v0) {
    return 0xD00000000000001DLL;
  }
  else {
    return 0xD000000000000016;
  }
}

TranslationUI::CoreAnalyticsLogger::Event_optional __swiftcall CoreAnalyticsLogger.Event.init(rawValue:)(Swift::String rawValue)
{
  return (TranslationUI::CoreAnalyticsLogger::Event_optional)sub_1DB0EFB8C(v1);
}

uint64_t sub_1DB0EEFF0(char *a1, char *a2)
{
  return sub_1DB1613FC(*a1, *a2);
}

uint64_t sub_1DB0EEFFC()
{
  return sub_1DB1ADC18();
}

uint64_t sub_1DB0EF004()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB0EF078()
{
  return sub_1DB1B67B4();
}

TranslationUI::CoreAnalyticsLogger::Event_optional sub_1DB0EF080(Swift::String *a1)
{
  return CoreAnalyticsLogger.Event.init(rawValue:)(*a1);
}

void sub_1DB0EF08C(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD00000000000001DLL;
  }
  else {
    unint64_t v2 = 0xD000000000000016;
  }
  unint64_t v3 = 0x80000001DB1FAFA0;
  if (*v1) {
    unint64_t v3 = 0x80000001DB1FAFC0;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t static CoreAnalyticsLogger.shared.getter()
{
  uint64_t v0 = type metadata accessor for CoreAnalyticsLogger();
  return MEMORY[0x1F41866B0](v0, &unk_1EA903590);
}

uint64_t type metadata accessor for CoreAnalyticsLogger()
{
  return self;
}

uint64_t sub_1DB0EF124(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if (qword_1EA903528 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DB1EF810();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EA90F1F8);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1DB1EF7F0();
  os_log_type_t v6 = sub_1DB1F1700();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446723;
    uint64_t v17 = v8;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    v16[1] = 0x80000001DB1FB840;
    char v15 = v3;
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB11F638(0xD000000000000016, 0x80000001DB1FB840, &v17);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DB1F11C0();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v16[0] = sub_1DB11F638(v9, v11, &v17);
    sub_1DB1F1910();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2050;
    uint64_t v12 = *(void *)(a2 + 16);
    swift_bridgeObjectRelease();
    v16[0] = v12;
    char v3 = v15;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v5, v6, "Sending event %{public}s with payload: %{private}s; number of keys: %{public}ld",
      (uint8_t *)v7,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v8, -1, -1);
    MEMORY[0x1E018CA60](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v16[0]) = v3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  swift_bridgeObjectRetain();
  sub_1DB0EF460((char *)v16, (uint64_t)sub_1DB0F14F0, v13);
  return swift_release();
}

void sub_1DB0EF460(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *v3;
  char v7 = *a1;
  if (qword_1EA903528 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DB1EF810();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EA90F1F8);
  uint64_t v9 = sub_1DB1EF7F0();
  os_log_type_t v10 = sub_1DB1F1700();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = v6;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)unint64_t v11 = 136446210;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0xD000000000000016;
    unint64_t v20 = 0x80000001DB1FB840;
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_1DB11F638(0xD000000000000016, 0x80000001DB1FB840, &v18);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v9, v10, "Got request to lazily log event %{public}s with a payload provider", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v13 = v12;
    uint64_t v6 = v17;
    MEMORY[0x1E018CA60](v13, -1, -1);
    MEMORY[0x1E018CA60](v11, -1, -1);
  }
  else
  {
  }
  uint64_t aBlock = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_1DB1F1AB0();
  swift_bridgeObjectRelease();
  uint64_t aBlock = 0xD000000000000016;
  unint64_t v20 = 0x80000001DB1FB840;
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  long long v14 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  *(unsigned char *)(v15 + 32) = v7;
  *(void *)(v15 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  uint64_t v23 = sub_1DB0F0C70;
  uint64_t v24 = v15;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v20 = 1107296256;
  uint64_t v21 = sub_1DB0EFAF4;
  BOOL v22 = &block_descriptor_2;
  unint64_t v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v16);
}

uint64_t sub_1DB0EF80C(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  uint64_t v2 = sub_1DB0F0CD8(v1);
  swift_bridgeObjectRelease();
  if (qword_1EA903528 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DB1EF810();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA90F1F8);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1DB1EF7F0();
  os_log_type_t v5 = sub_1DB1F1700();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446723;
    uint64_t v11 = v7;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB11F638(0xD000000000000016, 0x80000001DB1FB840, &v11);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2081;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903AD8);
    uint64_t v8 = sub_1DB1F1300();
    sub_1DB11F638(v8, v9, &v11);
    sub_1DB1F1910();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2050;
    if (v2) {
      swift_bridgeObjectRelease();
    }
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v4, v5, "Sending event %{public}s with payload: %{private}s; number of keys: %{public}ld",
      (uint8_t *)v6,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v7, -1, -1);
    MEMORY[0x1E018CA60](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v2;
}

id sub_1DB0EFAF4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1DB0F0C98();
    uint64_t v4 = (void *)sub_1DB1F11A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

TranslationUI::CoreAnalyticsLogger::CardType_optional __swiftcall CoreAnalyticsLogger.CardType.init(rawValue:)(Swift::String rawValue)
{
  return (TranslationUI::CoreAnalyticsLogger::CardType_optional)sub_1DB0EFB8C(v1);
}

uint64_t sub_1DB0EFB8C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DB1F1C10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t CoreAnalyticsLogger.CardType.rawValue.getter()
{
  if (*v0) {
    return 0x657474696D6D6F63;
  }
  else {
    return 0x65736F706D6F63;
  }
}

uint64_t sub_1DB0EFC2C(char *a1, char *a2)
{
  return sub_1DB161350(*a1, *a2);
}

uint64_t sub_1DB0EFC38()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB0EFCC0()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB0EFD34()
{
  return sub_1DB1F1EC0();
}

TranslationUI::CoreAnalyticsLogger::CardType_optional sub_1DB0EFDB8(Swift::String *a1)
{
  return CoreAnalyticsLogger.CardType.init(rawValue:)(*a1);
}

void sub_1DB0EFDC4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65736F706D6F63;
  if (*v1) {
    uint64_t v2 = 0x657474696D6D6F63;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000064;
  }
  *a1 = v2;
  a1[1] = v3;
}

TranslationUI::CoreAnalyticsLogger::InteractionLocation_optional __swiftcall CoreAnalyticsLogger.InteractionLocation.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DB1F1C10();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t CoreAnalyticsLogger.InteractionLocation.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7463416B63697571;
      break;
    case 2:
      unint64_t result = 0x74616C736E617274;
      break;
    case 3:
      unint64_t result = 0x61546172656D6163;
      break;
    case 4:
      unint64_t result = 0x61737265766E6F63;
      break;
    case 5:
      unint64_t result = 0x657469726F766166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB0EFF5C(unsigned __int8 *a1, char *a2)
{
  return sub_1DB1614A8(*a1, *a2);
}

uint64_t sub_1DB0EFF68()
{
  return sub_1DB1ADCA0();
}

uint64_t sub_1DB0EFF70()
{
  return sub_1DB1B5E64();
}

uint64_t sub_1DB0EFF78()
{
  return sub_1DB1B6674();
}

TranslationUI::CoreAnalyticsLogger::InteractionLocation_optional sub_1DB0EFF80(Swift::String *a1)
{
  return CoreAnalyticsLogger.InteractionLocation.init(rawValue:)(*a1);
}

void sub_1DB0EFF8C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0x80000001DB1FAFF0;
  unint64_t v3 = 0xD000000000000011;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB000000006E6F69;
      unint64_t v3 = 0x7463416B63697571;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "translationTab");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x61546172656D6163;
      *(void *)(a1 + 8) = 0xE900000000000062;
      break;
    case 4:
      *(void *)a1 = 0x61737265766E6F63;
      *(void *)(a1 + 8) = 0xEF6261546E6F6974;
      break;
    case 5:
      strcpy((char *)a1, "favoritesTab");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1DB0F0098(unsigned __int8 *a1, char a2, char a3, char a4)
{
  int v7 = *a1;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E270);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DB1F3DE0;
  *(void *)(inited + 32) = 0x6570795464726163;
  *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0xE800000000000000;
  uint64_t v9 = 0x65736F706D6F63;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  if (v7) {
    uint64_t v9 = 0x657474696D6D6F63;
  }
  unint64_t v11 = 0xE700000000000000;
  if (v7) {
    unint64_t v11 = 0xE900000000000064;
  }
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v11;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 0xD000000000000013;
  *(void *)(inited + 88) = 0x80000001DB1FB7C0;
  strcpy((char *)(inited + 96), "translationTab");
  *(unsigned char *)(inited + 111) = -18;
  *(void *)(inited + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  *(void *)(inited + 128) = 0x65646E6547736168;
  uint64_t v12 = MEMORY[0x1E4FBB390];
  *(void *)(inited + 136) = 0xE900000000000072;
  *(unsigned char *)(inited + 144) = a2;
  *(void *)(inited + 168) = v12;
  *(void *)(inited + 176) = 0x696E61654D736168;
  *(void *)(inited + 184) = 0xEA0000000000676ELL;
  *(unsigned char *)(inited + 192) = a3;
  *(void *)(inited + 216) = v12;
  *(void *)(inited + 224) = 0xD000000000000022;
  *(void *)(inited + 232) = 0x80000001DB1FB7E0;
  *(void *)(inited + 264) = v12;
  *(unsigned char *)(inited + 24__isPlatformVersionAtLeast(2, 18, 1, 0) = a4;
  unint64_t v13 = sub_1DB0EE490(inited);
  sub_1DB0EF124(&v15, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB0F022C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, void *a4)
{
  id v43 = a4;
  unint64_t v6 = 0xD000000000000011;
  uint64_t v7 = sub_1DB1EF6B0();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v44 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v42 - v10;
  int v12 = *a1;
  uint64_t v13 = *a2;
  v53[0] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E270);
  uint64_t inited = swift_initStackObject();
  uint64_t v15 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1DB1F3DE0;
  *(void *)(inited + 32) = 0x6570795464726163;
  *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0xE800000000000000;
  uint64_t v16 = 0x65736F706D6F63;
  if (v12) {
    uint64_t v16 = 0x657474696D6D6F63;
  }
  unint64_t v17 = 0xE900000000000064;
  if (!v12) {
    unint64_t v17 = 0xE700000000000000;
  }
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  *(void *)(inited + 72) = v18;
  strcpy((char *)(inited + 80), "selectedType");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  id v19 = (id)_LTDisambiguationTypeDescription();
  uint64_t v20 = sub_1DB1F1290();
  uint64_t v22 = v21;

  *(void *)(v15 + 96) = v20;
  *(void *)(v15 + 104) = v22;
  *(void *)(v15 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v18;
  *(void *)(v15 + 128) = 0xD000000000000013;
  *(void *)(v15 + 136) = 0x80000001DB1FB7C0;
  unint64_t v23 = 0x80000001DB1FAFF0;
  switch(v13)
  {
    case 1:
      unint64_t v23 = 0xEB000000006E6F69;
      unint64_t v6 = 0x7463416B63697571;
      break;
    case 2:
      unint64_t v23 = 0xEE006261546E6F69;
      unint64_t v6 = 0x74616C736E617274;
      break;
    case 3:
      unint64_t v6 = 0x61546172656D6163;
      unint64_t v23 = 0xE900000000000062;
      break;
    case 4:
      unint64_t v23 = 0xEF6261546E6F6974;
      unint64_t v6 = 0x61737265766E6F63;
      break;
    case 5:
      unint64_t v23 = 0xEC00000062615473;
      unint64_t v6 = 0x657469726F766166;
      break;
    default:
      break;
  }
  *(void *)(v15 + 144) = v6;
  *(void *)(v15 + 152) = v23;
  *(void *)(v15 + 168) = v18;
  strcpy((char *)(v15 + 176), "sourceLocale");
  *(unsigned char *)(v15 + 189) = 0;
  *(_WORD *)(v15 + 19__isPlatformVersionAtLeast(2, 18, 1, 0) = -5120;
  id v24 = v43;
  id v25 = objc_msgSend(v43, sel_sourceLocale);
  sub_1DB1EF5F0();

  uint64_t v51 = sub_1DB1EF590();
  uint64_t v52 = v26;
  uint64_t v49 = 45;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 95;
  unint64_t v48 = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v27 = sub_1DB1F1950();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = v18;
  long long v31 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v32 = v11;
  uint64_t v33 = v46;
  v31(v32, v46);
  *(void *)(v15 + 192) = v27;
  *(void *)(v15 + 20__isPlatformVersionAtLeast(2, 18, 1, 0) = v29;
  *(void *)(v15 + 216) = v30;
  strcpy((char *)(v15 + 224), "targetLocale");
  *(unsigned char *)(v15 + 237) = 0;
  *(_WORD *)(v15 + 238) = -5120;
  id v34 = objc_msgSend(v24, sel_targetLocale);
  uint64_t v35 = v44;
  sub_1DB1EF5F0();

  uint64_t v51 = sub_1DB1EF590();
  uint64_t v52 = v36;
  uint64_t v49 = 45;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 95;
  unint64_t v48 = 0xE100000000000000;
  uint64_t v37 = sub_1DB1F1950();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  v31(v35, v33);
  *(void *)(v15 + 264) = v30;
  *(void *)(v15 + 24__isPlatformVersionAtLeast(2, 18, 1, 0) = v37;
  *(void *)(v15 + 248) = v39;
  unint64_t v40 = sub_1DB0EE490(v15);
  sub_1DB0EF124(v53, v40);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DB0F0708()
{
  unint64_t result = qword_1EBA4E5F0;
  if (!qword_1EBA4E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4E5F0);
  }
  return result;
}

uint64_t CoreAnalyticsLogger.deinit()
{
  return v0;
}

uint64_t CoreAnalyticsLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1DB0F0778()
{
  unint64_t result = qword_1EA903AB0;
  if (!qword_1EA903AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903AB0);
  }
  return result;
}

unint64_t sub_1DB0F07D0()
{
  unint64_t result = qword_1EA903AB8;
  if (!qword_1EA903AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903AB8);
  }
  return result;
}

unint64_t sub_1DB0F0828()
{
  unint64_t result = qword_1EA903AC0;
  if (!qword_1EA903AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903AC0);
  }
  return result;
}

uint64_t method lookup function for CoreAnalyticsLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreAnalyticsLogger);
}

uint64_t dispatch thunk of CoreAnalyticsLogger.didOfferDisambiguation(fromCard:hasGender:hasMeaning:genderDisambiguationSettingEnabled:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.didInteractWithDisambiguation(fromCard:location:type:localePair:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_1DB0F08E4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DB0F08EC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsLogger.Event()
{
  return &type metadata for CoreAnalyticsLogger.Event;
}

uint64_t getEnumTagSinglePayload for ErrorStateView.Context(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13TranslationUI19CoreAnalyticsLoggerC5EventOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB0F0A64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsLogger.CardType()
{
  return &type metadata for CoreAnalyticsLogger.CardType;
}

uint64_t getEnumTagSinglePayload for CoreAnalyticsLogger.InteractionLocation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CoreAnalyticsLogger.InteractionLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB0F0BF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_1DB0F0C20(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsLogger.InteractionLocation()
{
  return &type metadata for CoreAnalyticsLogger.InteractionLocation;
}

uint64_t sub_1DB0F0C38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB0F0C70()
{
  return sub_1DB0EF80C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_1DB0F0C98()
{
  unint64_t result = qword_1EA903AD0;
  if (!qword_1EA903AD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA903AD0);
  }
  return result;
}

uint64_t sub_1DB0F0CD8(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1DB0EE374(MEMORY[0x1E4FBC860]);
  uint64_t v55 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v56 = (unint64_t)(v3 + 63) >> 6;
  int64_t v57 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v57 << 6);
LABEL_10:
      uint64_t v10 = *(void *)(a1 + 56);
      unint64_t v11 = (void *)(*(void *)(a1 + 48) + 16 * v9);
      uint64_t v12 = v11[1];
      *(void *)&long long v61 = *v11;
      *((void *)&v61 + 1) = v12;
      sub_1DB0E52F4(v10 + 32 * v9, (uint64_t)v62);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    int64_t v13 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      goto LABEL_63;
    }
    if (v13 < v56)
    {
      unint64_t v14 = *(void *)(v55 + 8 * v13);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v57 + 2;
      ++v57;
      if (v13 + 1 < v56)
      {
        unint64_t v14 = *(void *)(v55 + 8 * v15);
        if (v14) {
          goto LABEL_17;
        }
        int64_t v57 = v13 + 1;
        if (v13 + 2 < v56)
        {
          unint64_t v14 = *(void *)(v55 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_14;
          }
          int64_t v15 = v13 + 3;
          int64_t v57 = v13 + 2;
          if (v13 + 3 < v56) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = 0;
    memset(v62, 0, sizeof(v62));
    long long v61 = 0u;
LABEL_29:
    sub_1DB0F1454((uint64_t)&v61, (uint64_t)&v63, &qword_1EA903AE0);
    unint64_t v16 = v64;
    if (!v64)
    {
      swift_release();
      return (uint64_t)v2;
    }
    uint64_t v17 = v63;
    sub_1DB0F138C(&v65, &v61);
    sub_1DB0E52F4((uint64_t)&v61, (uint64_t)v60);
    if (swift_dynamicCast())
    {
      uint64_t v18 = sub_1DB1F1260();
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v60[0] = v2;
      unint64_t v21 = sub_1DB1A8C28(v17, v16);
      uint64_t v22 = v2[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      char v25 = v20;
      if (v2[3] >= v24)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v2 = (void *)v60[0];
          if ((v20 & 1) == 0) {
            goto LABEL_49;
          }
        }
        else
        {
          sub_1DB0F905C();
          uint64_t v2 = (void *)v60[0];
          if ((v25 & 1) == 0) {
            goto LABEL_49;
          }
        }
      }
      else
      {
        sub_1DB0F73D4(v24, isUniquelyReferenced_nonNull_native);
        unint64_t v26 = sub_1DB1A8C28(v17, v16);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_68;
        }
        unint64_t v21 = v26;
        uint64_t v2 = (void *)v60[0];
        if ((v25 & 1) == 0)
        {
LABEL_49:
          v2[(v21 >> 6) + 8] |= 1 << v21;
          uint64_t v49 = (uint64_t *)(v2[6] + 16 * v21);
          uint64_t *v49 = v17;
          v49[1] = v16;
          *(void *)(v2[7] + 8 * v21) = v18;
          uint64_t v50 = v2[2];
          BOOL v40 = __OFADD__(v50, 1);
          uint64_t v51 = v50 + 1;
          if (v40) {
            goto LABEL_65;
          }
          v2[2] = v51;
          swift_bridgeObjectRetain();
          goto LABEL_6;
        }
      }
      uint64_t v6 = v2[7];
      uint64_t v7 = 8 * v21;

      *(void *)(v6 + v7) = v18;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1DB0E52F4((uint64_t)&v61, (uint64_t)v60);
    sub_1DB0F0C98();
    if (swift_dynamicCast())
    {
      id v28 = v58;
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      v60[0] = v2;
      unint64_t v31 = sub_1DB1A8C28(v17, v16);
      uint64_t v32 = v2[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_64;
      }
      char v35 = v30;
      if (v2[3] < v34)
      {
        sub_1DB0F73D4(v34, v29);
        unint64_t v36 = sub_1DB1A8C28(v17, v16);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_68;
        }
        unint64_t v31 = v36;
        uint64_t v2 = (void *)v60[0];
        if ((v35 & 1) == 0) {
          goto LABEL_41;
        }
LABEL_54:
        uint64_t v52 = v2[7];
        uint64_t v53 = 8 * v31;

        *(void *)(v52 + v53) = v28;
        goto LABEL_6;
      }
      if (v29)
      {
        uint64_t v2 = (void *)v60[0];
        if (v30) {
          goto LABEL_54;
        }
      }
      else
      {
        sub_1DB0F905C();
        uint64_t v2 = (void *)v60[0];
        if (v35) {
          goto LABEL_54;
        }
      }
LABEL_41:
      v2[(v31 >> 6) + 8] |= 1 << v31;
      uint64_t v38 = (uint64_t *)(v2[6] + 16 * v31);
      *uint64_t v38 = v17;
      v38[1] = v16;
      *(void *)(v2[7] + 8 * v31) = v28;
      uint64_t v39 = v2[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_66;
      }
      v2[2] = v41;
      swift_bridgeObjectRetain();

      goto LABEL_6;
    }
    if (qword_1EA903528 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1DB1EF810();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EA90F1F8);
    sub_1DB0E52F4((uint64_t)&v61, (uint64_t)v60);
    swift_bridgeObjectRetain();
    id v43 = sub_1DB1EF7F0();
    os_log_type_t v44 = sub_1DB1F1720();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v59 = v46;
      *(_DWORD *)uint64_t v45 = 136446466;
      swift_bridgeObjectRetain();
      *(void *)(v45 + 4) = sub_1DB11F638(v17, v16, &v59);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2082;
      sub_1DB0E52F4((uint64_t)v60, (uint64_t)&v58);
      uint64_t v47 = sub_1DB1F1300();
      *(void *)(v45 + 14) = sub_1DB11F638(v47, v48, &v59);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
      _os_log_impl(&dword_1DB0DC000, v43, v44, "Failed to convert Swift value to NSObject in analytics dictionary for key %{public}s: %{public}s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v46, -1, -1);
      MEMORY[0x1E018CA60](v45, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
      swift_bridgeObjectRelease_n();
    }
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v61);
  }
  unint64_t v14 = *(void *)(v55 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v13 = v15;
LABEL_14:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
    int64_t v57 = v13;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v56)
    {
      int64_t v57 = v56 - 1;
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v55 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_14;
    }
  }
LABEL_67:
  __break(1u);
LABEL_68:
  uint64_t result = sub_1DB1F1E00();
  __break(1u);
  return result;
}

_OWORD *sub_1DB0F138C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1DB0F13EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB0F1454(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB0F14B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB0F14F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t DetectableLanguagePicker.init(isDetected:selectedOption:preferredLocales:oppositeLocale:languageModels:sourceUsesOCR:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v17 = (int *)type metadata accessor for DetectableLanguagePicker();
  uint64_t v18 = v17[6];
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  sub_1DB0F1454(a4, a9 + v17[5], &qword_1EA903B30);
  *(void *)(a9 + v18) = a5;
  uint64_t v19 = a9 + v17[7];
  uint64_t v20 = sub_1DB1EF6B0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a6, v20);
  *(void *)(a9 + v17[8]) = a7;
  *(unsigned char *)(a9 + v17[9]) = a8;
  return result;
}

uint64_t type metadata accessor for DetectableLanguagePicker()
{
  uint64_t result = qword_1EA903B40;
  if (!qword_1EA903B40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DetectableLanguagePicker.body.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1DB1F01A0();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B38);
  return sub_1DB0F168C(v1, (uint64_t *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_1DB0F168C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v60 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
  MEMORY[0x1F4188790](v5);
  uint64_t v59 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B70);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v61 = (uint64_t)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v54 - v10;
  uint64_t v12 = *(void *)(a1 + 8);
  char v13 = *(unsigned char *)(a1 + 16);
  uint64_t v63 = *(void *)a1;
  uint64_t v64 = v12;
  char v65 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
  MEMORY[0x1E018ADF0](&v66, v14);
  if (v66 == 1)
  {
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v17 = sub_1DB1EF400();
    v54[2] = v5;
    uint64_t v19 = v18;

    uint64_t v63 = v17;
    uint64_t v64 = v19;
    sub_1DB0F0708();
    uint64_t v20 = sub_1DB1F0930();
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    sub_1DB1F0800();
    sub_1DB1F0750();
    swift_release();
    uint64_t v25 = sub_1DB1F0910();
    uint64_t v27 = v26;
    char v29 = v28;
    v54[1] = v30;
    swift_release();
    sub_1DB0EB23C(v20, v22, v24);
    swift_bridgeObjectRelease();
    sub_1DB1F0C60();
    uint64_t v31 = sub_1DB1F08E0();
    uint64_t v57 = v32;
    uint64_t v58 = v31;
    LOBYTE(v22) = v33;
    uint64_t v56 = v34;
    swift_release();
    uint64_t v55 = v22 & 1;
    sub_1DB0EB23C(v25, v27, v29 & 1);
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_1DB1F0FB0();
  }
  else
  {
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v35 = 0;
  }
  unint64_t v36 = (int *)type metadata accessor for DetectableLanguagePicker();
  uint64_t v37 = (uint64_t)v59;
  sub_1DB1F0E10();
  uint64_t v38 = *(void *)(a1 + v36[6]);
  uint64_t v39 = a1 + v36[7];
  uint64_t v40 = sub_1DB1EF6B0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v60, v39, v40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  uint64_t v43 = *(void *)(a1 + v36[8]);
  LOBYTE(v4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a1 + v36[9]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1DB0F1454(v37, (uint64_t)v11, &qword_1EA903B30);
  uint64_t v45 = (int *)type metadata accessor for LIDOrLanguagePicker();
  *(void *)&v11[v45[5]] = v38;
  sub_1DB0F1454(v42, (uint64_t)&v11[v45[6]], &qword_1EBA4E570);
  *(void *)&v11[v45[7]] = v43;
  v11[v45[8]] = v40;
  uint64_t v46 = &v11[v45[9]];
  *(void *)uint64_t v46 = KeyPath;
  v46[8] = 0;
  uint64_t v47 = v61;
  sub_1DB0F31E4((uint64_t)v11, v61);
  unint64_t v48 = v62;
  uint64_t v50 = v57;
  uint64_t v49 = v58;
  *uint64_t v62 = v58;
  v48[1] = v50;
  LOBYTE(v41) = v55;
  uint64_t v51 = v56;
  v48[2] = v55;
  v48[3] = v51;
  v48[4] = v35;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B78);
  sub_1DB0F31E4(v47, (uint64_t)v48 + *(int *)(v52 + 48));
  sub_1DB0F324C(v49, v50, v41, v51);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DB0F329C((uint64_t)v11);
  sub_1DB0F329C(v47);
  return sub_1DB0F32FC(v49, v50, v41, v51);
}

uint64_t sub_1DB0F1B64@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1DB1F01A0();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B38);
  return sub_1DB0F168C(v1, (uint64_t *)(a1 + *(int *)(v3 + 44)));
}

uint64_t _s13TranslationUI24DetectableLanguagePickerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageOption();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v51[-v8];
  uint64_t v53 = type metadata accessor for DetectableLanguagePicker();
  uint64_t v10 = MEMORY[0x1F4188790](v53);
  uint64_t v58 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v57 = &v51[-v13];
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v55 = &v51[-v15];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v56 = &v51[-v17];
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v54 = &v51[-v19];
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = &v51[-v21];
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = &v51[-v24];
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = &v51[-v26];
  uint64_t v28 = *(void *)(a1 + 8);
  char v29 = *(unsigned char *)(a1 + 16);
  uint64_t v59 = *(void *)a1;
  uint64_t v60 = v28;
  char v61 = v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
  MEMORY[0x1E018ADF0](&v62);
  int v31 = v62;
  uint64_t v32 = *(void *)(a2 + 8);
  char v33 = *(unsigned char *)(a2 + 16);
  uint64_t v59 = *(void *)a2;
  uint64_t v60 = v32;
  char v61 = v33;
  MEMORY[0x1E018ADF0](&v62, v30);
  int v34 = v62;
  sub_1DB0F3118(a1, (uint64_t)v27);
  sub_1DB0F3118(a2, (uint64_t)v25);
  if (v31 != v34)
  {
    sub_1DB0F317C((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    sub_1DB0F317C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    sub_1DB0F3118(a1, (uint64_t)v22);
    uint64_t v35 = v54;
    sub_1DB0F3118(a2, (uint64_t)v54);
    uint64_t v36 = a1;
LABEL_8:
    sub_1DB0F317C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    sub_1DB0F317C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    uint64_t v43 = (uint64_t)v57;
    uint64_t v42 = (uint64_t)v58;
    uint64_t v45 = (uint64_t)v55;
    uint64_t v44 = (uint64_t)v56;
LABEL_9:
    sub_1DB0F3118(v36, v44);
    sub_1DB0F3118(a2, v45);
    goto LABEL_10;
  }
  uint64_t v37 = v53;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
  MEMORY[0x1E018ADF0]();
  MEMORY[0x1E018ADF0](v38);
  char v39 = _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v7);
  sub_1DB0F317C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  sub_1DB0F317C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  sub_1DB0F317C((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  sub_1DB0F317C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  sub_1DB0F3118(a1, (uint64_t)v22);
  uint64_t v35 = v54;
  sub_1DB0F3118(a2, (uint64_t)v54);
  uint64_t v36 = a1;
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v40 = *(int *)(v37 + 24);
  uint64_t v41 = *(void *)&v35[v40];
  uint64_t v43 = (uint64_t)v57;
  uint64_t v42 = (uint64_t)v58;
  uint64_t v45 = (uint64_t)v55;
  uint64_t v44 = (uint64_t)v56;
  if (!*(void *)&v22[v40])
  {
    swift_bridgeObjectRetain();
    sub_1DB0F317C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    sub_1DB0F317C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    if (!v41)
    {
      uint64_t v36 = a1;
      sub_1DB0F3118(a1, v44);
      sub_1DB0F3118(a2, v45);
      goto LABEL_18;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v36 = a1;
    goto LABEL_9;
  }
  if (!v41)
  {
    swift_bridgeObjectRetain();
    sub_1DB0F317C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    sub_1DB0F317C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v46 = swift_bridgeObjectRetain();
  int v52 = sub_1DB167E08(v46, v41);
  swift_bridgeObjectRelease();
  sub_1DB0F317C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  sub_1DB0F317C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  swift_bridgeObjectRelease();
  uint64_t v36 = a1;
  sub_1DB0F3118(a1, v44);
  sub_1DB0F3118(a2, v45);
  if ((v52 & 1) == 0)
  {
LABEL_10:
    sub_1DB0F317C(v45, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    sub_1DB0F317C(v44, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
    sub_1DB0F3118(v36, v43);
    sub_1DB0F3118(a2, v42);
    goto LABEL_11;
  }
LABEL_18:
  uint64_t v49 = v53;
  char v50 = MEMORY[0x1E01895E0](v44 + *(int *)(v53 + 28), v45 + *(int *)(v53 + 28));
  sub_1DB0F317C(v45, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  sub_1DB0F317C(v44, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  sub_1DB0F3118(v36, v43);
  sub_1DB0F3118(a2, v42);
  if (v50)
  {
    char v47 = sub_1DB168028(*(void *)(v43 + *(int *)(v49 + 32)), *(void *)(v42 + *(int *)(v49 + 32)));
    goto LABEL_12;
  }
LABEL_11:
  char v47 = 0;
LABEL_12:
  sub_1DB0F317C(v43, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  sub_1DB0F317C(v42, (uint64_t (*)(void))type metadata accessor for DetectableLanguagePicker);
  return v47 & 1;
}

uint64_t sub_1DB0F21B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for DetectableLanguagePicker(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
    uint64_t v13 = (char *)v9 + v12;
    uint64_t v14 = (const void *)(v10 + v12);
    uint64_t v15 = sub_1DB1EF6B0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 2, v15))
    {
      uint64_t v17 = type metadata accessor for LanguageOption();
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 2, v15);
    }
    uint64_t v18 = a3[7];
    *(void *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v21(v19, v20, v15);
    uint64_t v22 = a3[9];
    *(void *)(a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(unsigned char *)(a1 + v22) = *((unsigned char *)a2 + v22);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DetectableLanguagePicker(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 2, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1 + *(int *)(a2 + 28), v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = sub_1DB1EF6B0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 2, v14))
  {
    uint64_t v16 = type metadata accessor for LanguageOption();
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 2, v14);
  }
  uint64_t v17 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v20(v18, v19, v14);
  uint64_t v21 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_retain();
  swift_release();
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v10 = (void *)(v7 + v9);
  uint64_t v11 = (void *)(v8 + v9);
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 2, v12);
  int v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = type metadata accessor for LanguageOption();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(a1 + a3[7], a2 + a3[7], v12);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = (const void *)(v8 + v10);
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
  {
    uint64_t v15 = type metadata accessor for LanguageOption();
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    int v16 = *(void (**)(char *, const void *, uint64_t))(v14 + 32);
  }
  else
  {
    int v16 = *(void (**)(char *, const void *, uint64_t))(v14 + 32);
    v16(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
  }
  uint64_t v17 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  v16((char *)(a1 + v17), (const void *)(a2 + v17), v13);
  uint64_t v18 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for DetectableLanguagePicker(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_release();
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v10 = (void *)(v7 + v9);
  uint64_t v11 = (void *)(v8 + v9);
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 2, v12);
  int v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = type metadata accessor for LanguageOption();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(a1 + a3[7], a2 + a3[7], v12);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectableLanguagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB0F2CF8);
}

uint64_t sub_1DB0F2CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DB1EF6B0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DetectableLanguagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB0F2E3C);
}

uint64_t sub_1DB0F2E3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DB1EF6B0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DB0F2F6C()
{
  sub_1DB0F3060();
  if (v0 <= 0x3F)
  {
    sub_1DB1EF6B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DB0F3060()
{
  if (!qword_1EA903B50)
  {
    type metadata accessor for LanguageOption();
    unint64_t v0 = sub_1DB1F0E30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA903B50);
    }
  }
}

unint64_t sub_1DB0F30BC()
{
  unint64_t result = qword_1EA903B58;
  if (!qword_1EA903B58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903B58);
  }
  return result;
}

uint64_t sub_1DB0F3118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetectableLanguagePicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0F317C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB0F31E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0F324C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DB0EB2A4(result, a2, a3 & 1);
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DB0F329C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB0F32FC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DB0EB23C(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void *DisambiguationResultModel.disambiguableResult.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
  id v2 = v1;
  return v1;
}

void sub_1DB0F337C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  void *v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (unsigned char *)(v3 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if (*v5) {
    sub_1DB0F5894();
  }
  else {
    sub_1DB0F4A0C();
  }
}

uint64_t sub_1DB0F341C()
{
  return swift_bridgeObjectRetain();
}

void sub_1DB0F3468(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  void *v3 = a1;
  swift_bridgeObjectRelease();
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if (*v4) {
    sub_1DB0F5894();
  }
  else {
    sub_1DB0F4A0C();
  }
}

void (*sub_1DB0F34F8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DB0F3558;
}

void sub_1DB0F3558(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (unsigned char *)(*(void *)(a1 + 24) + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
    swift_beginAccess();
    if (*v4) {
      sub_1DB0F5894();
    }
    else {
      sub_1DB0F4A0C();
    }
  }
}

uint64_t static DisambiguationResultModel.dictionaryItemKey.getter()
{
  return 0x414E4F4954434944;
}

void sub_1DB0F35E8(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  unsigned char *v3 = v2;
  if (v2) {
    sub_1DB0F5894();
  }
  else {
    sub_1DB0F4A0C();
  }
}

uint64_t sub_1DB0F3650@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

void sub_1DB0F36A0(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  unsigned char *v3 = v2;
  if (v2) {
    sub_1DB0F5894();
  }
  else {
    sub_1DB0F4A0C();
  }
}

void (*sub_1DB0F3704(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1DB0F3770;
}

void sub_1DB0F3770(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(v3[3] + v3[4])) {
      sub_1DB0F5894();
    }
    else {
      sub_1DB0F4A0C();
    }
  }
  free(v3);
}

BOOL static DisambiguationResultModel.TextLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DisambiguationResultModel.TextLocation.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t _s13TranslationUI25DisambiguationResultModelC13RenderingModeO9hashValueSivg_0()
{
  return sub_1DB1F1EC0();
}

BOOL sub_1DB0F385C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DB0F3874()
{
  return sub_1DB1F1E90();
}

uint64_t sub_1DB0F38A0@<X0>(void *a1@<X8>)
{
  return sub_1DB0F38FC(a1);
}

uint64_t sub_1DB0F38B4(void **a1, void **a2)
{
  return sub_1DB0F398C(a1, a2);
}

uint64_t sub_1DB0F38C8()
{
  return sub_1DB0F3A10();
}

uint64_t sub_1DB0F38DC()
{
  return sub_1DB0F3C68();
}

uint64_t sub_1DB0F38E8@<X0>(void *a1@<X8>)
{
  return sub_1DB0F38FC(a1);
}

uint64_t sub_1DB0F38FC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB0F3978(void **a1, void **a2)
{
  return sub_1DB0F398C(a1, a2);
}

uint64_t sub_1DB0F398C(void **a1, void **a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return sub_1DB1EF920();
}

uint64_t sub_1DB0F39FC()
{
  return sub_1DB0F3A10();
}

uint64_t sub_1DB0F3A10()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DB0F3A7C()
{
  return swift_endAccess();
}

uint64_t sub_1DB0F3AE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903D50);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903B90);
  sub_1DB1EF8F0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1DB0F3C5C()
{
  return sub_1DB0F3C68();
}

uint64_t sub_1DB0F3C68()
{
  return swift_endAccess();
}

unint64_t static DisambiguationResultModel.defaultAttributes(forRTL:)(char a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  id v3 = v2;
  if (a1) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 0;
  }
  objc_msgSend(v2, sel_setAlignment_, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903BA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DB1F4170;
  uint64_t v6 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0738];
  *(void *)(inited + 64) = sub_1DB0E2EFC(0, &qword_1EA903BA8);
  *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v3;
  id v7 = v6;
  return sub_1DB0EE5C8(inited);
}

char *DisambiguationResultModel.__allocating_init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v18 = objc_allocWithZone(v10);
  uint64_t v19 = sub_1DB0FA814(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  sub_1DB0EB788(a9);
  sub_1DB0EB788(a7);
  sub_1DB0EB788(a5);

  return v19;
}

char *DisambiguationResultModel.init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = sub_1DB0FA814(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  sub_1DB0EB788(a9);
  sub_1DB0EB788(a7);
  sub_1DB0EB788(a5);

  return v13;
}

id DisambiguationResultModel.__allocating_init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  id v18 = sub_1DB0FAC0C(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1DB0EB788(a7);
  return v18;
}

id DisambiguationResultModel.init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = sub_1DB0FAC0C(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1DB0EB788(a7);
  return v9;
}

void sub_1DB0F3FC8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_setDelegate_, v0);
    objc_msgSend(v2, sel_addObserver_, v0);
    id v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
    swift_beginAccess();
    if (*v3) {
      sub_1DB0F5894();
    }
    else {
      sub_1DB0F4A0C();
    }
  }
}

uint64_t sub_1DB0F4068(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  unsigned __int8 v9 = *a1;
  uint64_t v2 = sub_1DB0F615C(&v9);
  if (v3)
  {
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0xE000000000000000;
  }
  unsigned __int8 v8 = v1;
  uint64_t v5 = sub_1DB0F5E14(v2, v4, &v8);
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 16)) {
    uint64_t v6 = *(void *)(v5 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t DisambiguationResultModel.LinkRangeInfo.sourceRange.getter()
{
  return *(void *)v0;
}

uint64_t DisambiguationResultModel.LinkRangeInfo.targetRange.getter()
{
  return *(void *)(v0 + 16);
}

void sub_1DB0F4108(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v62 = sub_1DB1EF570();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v62 - 8);
  MEMORY[0x1F4188790](v62);
  id v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903BB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DisambiguationLinkInfo(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
  if (!v15) {
    goto LABEL_27;
  }
  sub_1DB0E8B70(a1, (uint64_t)v10, (uint64_t *)&unk_1EA903BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    sub_1DB0FC4A0((uint64_t)v10, (uint64_t)v14, type metadata accessor for DisambiguationLinkInfo);
    id v16 = v15;
    id v17 = (void *)sub_1DB1EF530();
    id v18 = objc_msgSend(v16, sel_sentenceWithUUID_, v17);

    if (v18)
    {
      id v19 = objc_msgSend(v18, sel_selectedTargetPhrase);
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v57 = a2;
        id v21 = objc_msgSend(v19, sel_links);
        uint64_t v22 = sub_1DB0E2EFC(0, &qword_1EA9035A0);
        unint64_t v23 = sub_1DB1F14A0();

        if (v23 >> 62) {
          goto LABEL_40;
        }
        uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        while (1)
        {
          swift_bridgeObjectRelease();
          if (v24 < 1 || *(void *)&v14[*(int *)(v11 + 20)] >= (unint64_t)v24)
          {

            sub_1DB0FAF44((uint64_t)v14);
            a2 = v57;
            goto LABEL_27;
          }
          uint64_t v54 = *(int *)(v11 + 20);
          id v25 = objc_msgSend(v16, sel_sentences);
          sub_1DB0E2EFC(0, &qword_1EA903BC0);
          unint64_t v26 = sub_1DB1F14A0();

          unint64_t v27 = v26;
          unint64_t v61 = v26;
          if (v26 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v28 = sub_1DB1F1BB0();
            swift_bridgeObjectRelease();
            unint64_t v27 = v61;
          }
          else
          {
            uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v55 = v22;
          id v56 = v20;
          id v52 = v18;
          id v53 = v16;
          uint64_t v11 = 0;
          uint64_t v29 = 0;
          if (!v28) {
            break;
          }
          uint64_t v59 = v5 + 1;
          unint64_t v60 = v27 & 0xC000000000000001;
          uint64_t v22 = 4;
          id v58 = (id)v28;
          while (1)
          {
            uint64_t v30 = v60
                ? (void (**)(char *, uint64_t))MEMORY[0x1E018BAD0](v22 - 4, v27)
                : (void (**)(char *, uint64_t))*(id *)(v27 + 8 * v22);
            uint64_t v5 = v30;
            id v16 = (id)(v22 - 3);
            if (__OFADD__(v22 - 4, 1)) {
              break;
            }
            id v31 = objc_msgSend(v30, sel_UUID);
            sub_1DB1EF550();

            LOBYTE(v31) = sub_1DB1EF540();
            (*v59)(v7, v62);
            if (v31)
            {

              goto LABEL_30;
            }
            id v32 = objc_msgSend(v5, sel_sourceText);
            id v18 = (id)sub_1DB1F1290();
            uint64_t v20 = v33;

            uint64_t v34 = sub_1DB1F1370();
            swift_bridgeObjectRelease();
            BOOL v35 = __OFADD__(v29, v34);
            v29 += v34;
            if (v35) {
              goto LABEL_38;
            }
            id v36 = objc_msgSend(v5, sel_targetText);
            id v18 = (id)sub_1DB1F1290();
            uint64_t v20 = v37;

            uint64_t v38 = sub_1DB1F1370();
            swift_bridgeObjectRelease();

            BOOL v35 = __OFADD__(v11, v38);
            v11 += v38;
            if (v35) {
              goto LABEL_39;
            }
            ++v22;
            unint64_t v27 = v61;
            if (v16 == v58) {
              goto LABEL_30;
            }
          }
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_1DB1F1BB0();
          swift_bridgeObjectRelease();
        }
LABEL_30:
        swift_bridgeObjectRelease();
        id v39 = objc_msgSend(v56, sel_links);
        uint64_t v40 = sub_1DB1F14A0();

        unint64_t v41 = *(void *)&v14[v54];
        if ((v41 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((v40 & 0xC000000000000001) == 0)
        {
          if (v41 >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_45;
          }
          id v42 = *(id *)(v40 + 8 * v41 + 32);
LABEL_34:
          uint64_t v43 = v42;
          swift_bridgeObjectRelease();
          uint64_t v44 = (char *)objc_msgSend(v43, sel_sourceRange);
          uint64_t v46 = v45;
          char v47 = (char *)objc_msgSend(v43, sel_targetRange);
          uint64_t v49 = v48;

          sub_1DB0FAF44((uint64_t)v14);
          if (!__OFADD__(v44, v29))
          {
            char v50 = v57;
            if (!__OFADD__(v47, v11))
            {
              *uint64_t v57 = &v44[v29];
              v50[1] = v46;
              void v50[2] = &v47[v11];
              v50[3] = v49;
              *((unsigned char *)v50 + 32) = 0;
              return;
            }
            goto LABEL_46;
          }
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        id v42 = (id)MEMORY[0x1E018BAD0]();
        goto LABEL_34;
      }
      sub_1DB0FAF44((uint64_t)v14);
    }
    else
    {
      sub_1DB0FAF44((uint64_t)v14);
    }

    goto LABEL_27;
  }
  sub_1DB0E8BD4((uint64_t)v10, (uint64_t *)&unk_1EA903BB0);
LABEL_27:
  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + 1) = 0u;
  *((unsigned char *)a2 + 32) = 1;
}

void sub_1DB0F4764()
{
  if (*(void *)&v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource + 8])
  {
    LOBYTE(v12) = 0;
    unsigned __int8 v1 = &v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
    swift_beginAccess();
    char v13 = *v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DB0F6220((char *)&v12, &v13);
    LOBYTE(v12) = 1;
    char v13 = *v1;
    uint64_t v3 = sub_1DB0F6220((char *)&v12, &v13);
    uint64_t v4 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
    if (v2)
    {
      type metadata accessor for Key(0);
      sub_1DB0FB1AC((unint64_t *)&qword_1EA903D40, type metadata accessor for Key);
      uint64_t v5 = (void *)sub_1DB1F11A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
    }
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithString_attributes_, v4, v5);

    swift_getKeyPath();
    swift_getKeyPath();
    id v12 = v6;
    id v7 = v0;
    sub_1DB1EF920();
    uint64_t v8 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
    if (v3)
    {
      type metadata accessor for Key(0);
      sub_1DB0FB1AC((unint64_t *)&qword_1EA903D40, type metadata accessor for Key);
      uint64_t v9 = (void *)sub_1DB1F11A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
    }
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithString_attributes_, v8, v9);

    swift_getKeyPath();
    swift_getKeyPath();
    id v12 = v10;
    uint64_t v11 = v7;
    sub_1DB1EF920();
  }
}

void sub_1DB0F4A0C()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult];
  if (v2)
  {
    uint64_t v3 = ObjectType;
    LOBYTE(aBlock) = 0;
    uint64_t v4 = &v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
    swift_beginAccess();
    char v23 = *v4;
    id v16 = v2;
    if (!sub_1DB0F6220((char *)&aBlock, &v23)) {
      sub_1DB0EE5C8(MEMORY[0x1E4FBC860]);
    }
    LOBYTE(aBlock) = 1;
    char v23 = *v4;
    if (!sub_1DB0F6220((char *)&aBlock, &v23)) {
      sub_1DB0EE5C8(MEMORY[0x1E4FBC860]);
    }
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v3;
    type metadata accessor for Key(0);
    sub_1DB0FB1AC((unint64_t *)&qword_1EA903D40, type metadata accessor for Key);
    id v7 = (void *)sub_1DB1F11A0();
    swift_bridgeObjectRelease();
    id v21 = sub_1DB0FC578;
    uint64_t v22 = v6;
    id aBlock = (id)MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    id v19 = sub_1DB0F575C;
    uint64_t v20 = &block_descriptor_3;
    uint64_t v8 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v9 = objc_msgSend(v16, sel_generateAttributedStringForLocation_withGlobalAttributes_attributeProvider_, 0, v7, v8);
    _Block_release(v8);

    id v10 = (void *)sub_1DB1F11A0();
    swift_bridgeObjectRelease();
    id v21 = sub_1DB0FC578;
    uint64_t v22 = v6;
    id aBlock = (id)MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    id v19 = sub_1DB0F575C;
    uint64_t v20 = &block_descriptor_54;
    uint64_t v11 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v12 = objc_msgSend(v16, sel_generateAttributedStringForLocation_withGlobalAttributes_attributeProvider_, 1, v10, v11);
    _Block_release(v11);

    swift_getKeyPath();
    swift_getKeyPath();
    id aBlock = v9;
    id v13 = v9;
    uint64_t v14 = v0;
    sub_1DB1EF920();
    swift_getKeyPath();
    swift_getKeyPath();
    id aBlock = v12;
    uint64_t v15 = v14;
    sub_1DB1EF920();

    swift_release();
  }
  else
  {
    sub_1DB0F4764();
  }
}

uint64_t sub_1DB0F4DD8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1DB1F12E0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = sub_1DB1EF570();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DisambiguationLinkInfo(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  id v58 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v59 = (char *)&v56 - v19;
  swift_beginAccess();
  uint64_t v20 = (char *)MEMORY[0x1E018CB30](a6 + 16);
  if (!v20) {
    return 0;
  }
  id v57 = a2;
  unint64_t v60 = v20;
  id v21 = *(uint64_t (**)(long long *, _OWORD *))&v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_linkAttributeProvider];
  if (!v21) {
    goto LABEL_9;
  }
  if (a5)
  {
    if (a5 != 1) {
      goto LABEL_30;
    }
    char v22 = 1;
  }
  else
  {
    char v22 = 0;
  }
  LOBYTE(v63) = v22;
  char v23 = &v60[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
  swift_beginAccess();
  LOBYTE(v62[0]) = *v23;
  uint64_t v24 = v21(&v63, v62);
  if (v24)
  {
    unint64_t v25 = v24;
  }
  else
  {
LABEL_9:
    unint64_t v25 = sub_1DB0EE5C8(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
  }
  id v26 = objc_msgSend(a3, sel_links);
  sub_1DB0E2EFC(0, &qword_1EA9035A0);
  unint64_t v27 = sub_1DB1F14A0();

  sub_1DB0F5544(a4, v27);
  uint64_t v29 = v28;
  char v31 = v30;
  swift_bridgeObjectRelease();
  if (v31)
  {
    swift_bridgeObjectRelease();
    if (qword_1EA903530 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1DB1EF810();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EA90F210);
    id v42 = sub_1DB1EF7F0();
    os_log_type_t v43 = sub_1DB1F1720();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_1DB0DC000, v42, v43, "LinkAttributeProvider gave invalid arguments; can't find linkConfiguration inside node",
        v44,
        2u);
      MEMORY[0x1E018CA60](v44, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  id v32 = objc_msgSend(v57, sel_UUID);
  sub_1DB1EF550();

  if ((v29 & 0x8000000000000000) == 0)
  {
    uint64_t v33 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v59, v15, v12);
    *(void *)(v33 + *(int *)(v16 + 20)) = v29;
    sub_1DB1EF340();
    swift_allocObject();
    sub_1DB1EF330();
    sub_1DB0FB1AC((unint64_t *)&unk_1EA903D90, (void (*)(uint64_t))type metadata accessor for DisambiguationLinkInfo);
    uint64_t v47 = sub_1DB1EF320();
    unint64_t v49 = v48;
    swift_release();
    sub_1DB1F12D0();
    uint64_t v50 = sub_1DB1F12B0();
    uint64_t v52 = (uint64_t)v58;
    if (v51)
    {
      id v53 = (void *)*MEMORY[0x1E4FB3090];
      uint64_t v64 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v63 = v50;
      *((void *)&v63 + 1) = v51;
      sub_1DB0F138C(&v63, v62);
      id v54 = v53;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v61 = v25;
      sub_1DB1E3FC4(v62, v54, isUniquelyReferenced_nonNull_native);
      unint64_t v45 = v61;

      swift_bridgeObjectRelease();
      sub_1DB0FC598(v47, v49);

      sub_1DB0FAF44(v33);
      return v45;
    }
    swift_bridgeObjectRelease();
    sub_1DB0FC598(v47, v49);
    if (qword_1EA903530 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1DB1EF810();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EA90F210);
    sub_1DB0FC438(v33, v52, type metadata accessor for DisambiguationLinkInfo);
    BOOL v35 = sub_1DB1EF7F0();
    os_log_type_t v36 = sub_1DB1F1710();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(void *)&long long v63 = v38;
      *(_DWORD *)uint64_t v37 = 136446210;
      uint64_t v39 = DisambiguationLinkInfo.description.getter();
      *(void *)&v62[0] = sub_1DB11F638(v39, v40, (uint64_t *)&v63);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB0FAF44(v52);
      _os_log_impl(&dword_1DB0DC000, v35, v36, "Failed to encode link information; won't show link in string for link: %{public}s",
        v37,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v38, -1, -1);
      MEMORY[0x1E018CA60](v37, -1, -1);
    }
    else
    {

      sub_1DB0FAF44(v52);
    }
    sub_1DB0FAF44(v33);
    return 0;
  }
  sub_1DB1F1B80();
  __break(1u);
LABEL_30:
  uint64_t result = sub_1DB1F1B90();
  __break(1u);
  return result;
}

void sub_1DB0F5544(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1E018BAD0](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_1DB0E2EFC(0, &qword_1EA9035A0);
      char v6 = sub_1DB1F1890();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x1E018BAD0](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          id v9 = v8;
          char v10 = sub_1DB1F1890();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1DB1F1BB0();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t DisambiguationLinkInfo.init(sentenceUUID:linkIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for DisambiguationLinkInfo(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

id sub_1DB0F575C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  unint64_t v11 = *(uint64_t (**)(id, id, id, id, uint64_t))(a1 + 32);
  swift_retain();
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  uint64_t v16 = v11(v12, v13, v14, v15, a6);
  swift_release();

  if (v16)
  {
    type metadata accessor for Key(0);
    sub_1DB0FB1AC((unint64_t *)&qword_1EA903D40, type metadata accessor for Key);
    uint64_t v17 = (void *)sub_1DB1F11A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  return v17;
}

void sub_1DB0F5894()
{
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  unsigned __int8 v1 = &v0[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
  swift_beginAccess();
  LOBYTE(v49) = *v1;
  if (!sub_1DB0F6220((char *)&v50, (char *)&v49)) {
    sub_1DB0EE5C8(MEMORY[0x1E4FBC860]);
  }
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  LOBYTE(v49) = *v1;
  if (!sub_1DB0F6220((char *)&v50, (char *)&v49)) {
    sub_1DB0EE5C8(MEMORY[0x1E4FBC860]);
  }
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  uint64_t v2 = sub_1DB0F615C((unsigned __int8 *)&v50);
  if (v3) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v46 = v4;
  if (v3) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0xE000000000000000;
  }
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  uint64_t v6 = sub_1DB0F615C((unsigned __int8 *)&v50);
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0xE000000000000000;
  }
  id v10 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  swift_bridgeObjectRetain();
  unint64_t v11 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DB0FB1AC((unint64_t *)&qword_1EA903D40, type metadata accessor for Key);
  id v12 = (void *)sub_1DB1F11A0();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v10, sel_initWithString_attributes_, v11, v12);

  id v13 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  swift_bridgeObjectRetain();
  id v14 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v15 = (void *)sub_1DB1F11A0();
  swift_bridgeObjectRelease();
  id v47 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  uint64_t v16 = sub_1DB0F5E14(v46, v5, (unsigned __int8 *)&v50);
  swift_bridgeObjectRelease();
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  uint64_t v44 = v0;
  uint64_t v45 = sub_1DB0F5E14(v8, v9, (unsigned __int8 *)&v50);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = 0;
    uint64_t v19 = (void *)*MEMORY[0x1E4FB3090];
    uint64_t v20 = (uint64_t *)(v16 + 40);
    do
    {
      uint64_t v21 = *(v20 - 1);
      uint64_t v22 = *v20;
      uint64_t v23 = v18 + 1;
      uint64_t v50 = 0x414E4F4954434944;
      unint64_t v51 = 0xEB000000002D5952;
      uint64_t v49 = v18;
      sub_1DB1F1D80();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      uint64_t v24 = v50;
      unint64_t v25 = v51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903BA0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DB1F4170;
      *(void *)(inited + 64) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 32) = v19;
      *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v24;
      *(void *)(inited + 48) = v25;
      id v27 = v19;
      sub_1DB0EE5C8(inited);
      uint64_t v28 = (void *)sub_1DB1F11A0();
      swift_bridgeObjectRelease();
      objc_msgSend(v48, sel_addAttributes_range_, v28, v21, v22);

      v20 += 2;
      uint64_t v18 = v23;
    }
    while (v17 != v23);
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v45 + 16);
  if (v29)
  {
    uint64_t v30 = 0;
    char v31 = (void *)*MEMORY[0x1E4FB3090];
    id v32 = (uint64_t *)(v45 + 40);
    do
    {
      uint64_t v33 = *(v32 - 1);
      uint64_t v34 = *v32;
      uint64_t v35 = v30 + 1;
      uint64_t v50 = 0x414E4F4954434944;
      unint64_t v51 = 0xEB000000002D5952;
      uint64_t v49 = v30;
      sub_1DB1F1D80();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      uint64_t v37 = v50;
      unint64_t v36 = v51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903BA0);
      uint64_t v38 = swift_initStackObject();
      *(_OWORD *)(v38 + 16) = xmmword_1DB1F4170;
      *(void *)(v38 + 64) = MEMORY[0x1E4FBB1A0];
      *(void *)(v38 + 32) = v31;
      *(void *)(v38 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v37;
      *(void *)(v38 + 48) = v36;
      id v39 = v31;
      sub_1DB0EE5C8(v38);
      unint64_t v40 = (void *)sub_1DB1F11A0();
      swift_bridgeObjectRelease();
      objc_msgSend(v47, sel_addAttributes_range_, v40, v33, v34);

      v32 += 2;
      uint64_t v30 = v35;
    }
    while (v29 != v35);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v50 = (uint64_t)v48;
  id v41 = v48;
  id v42 = v44;
  sub_1DB1EF920();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v50 = (uint64_t)v47;
  id v43 = v42;
  sub_1DB1EF920();
}

uint64_t sub_1DB0F5E14(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v31 - v9;
  int v11 = *a3;
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = &OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_targetLocale;
  if (!v11) {
    id v14 = &OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_sourceLocale;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v3 + *v14, v12);
  sub_1DB1EF6B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  id v15 = (void *)sub_1DB1F1260();
  sub_1DB0E8B70((uint64_t)v10, (uint64_t)v8, &qword_1EBA4E570);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) != 1)
  {
    uint64_t v16 = (void *)sub_1DB1EF5D0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  id v17 = objc_msgSend(v15, sel_lt_wordRangesWithLocale_, v16);

  sub_1DB0E2EFC(0, &qword_1EA903D88);
  unint64_t v18 = sub_1DB1F14A0();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (!v19) {
    goto LABEL_17;
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DB12E95C(0, v19 & ~(v19 >> 63), 0);
  if ((v19 & 0x8000000000000000) == 0)
  {
    char v31 = v10;
    uint64_t v22 = 0;
    uint64_t v20 = v32;
    do
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v23 = (id)MEMORY[0x1E018BAD0](v22, v18);
      }
      else {
        id v23 = *(id *)(v18 + 8 * v22 + 32);
      }
      uint64_t v24 = v23;
      id v25 = objc_msgSend(v23, sel_rangeValue, v31);
      uint64_t v27 = v26;

      uint64_t v32 = v20;
      unint64_t v29 = *(void *)(v20 + 16);
      unint64_t v28 = *(void *)(v20 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1DB12E95C(v28 > 1, v29 + 1, 1);
        uint64_t v20 = v32;
      }
      ++v22;
      *(void *)(v20 + 16) = v29 + 1;
      uint64_t v30 = v20 + 16 * v29;
      *(void *)(v30 + 32) = v25;
      *(void *)(v30 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v27;
    }
    while (v19 != v22);
    id v10 = v31;
LABEL_17:
    sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4E570);
    swift_bridgeObjectRelease();
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB0F615C(unsigned __int8 *a1)
{
  int v2 = *a1;
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource);
  if (*(void *)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource + 8))
  {
    if (v2) {
      uint64_t v4 = v3[2];
    }
    else {
      uint64_t v4 = *v3;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult);
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = v6;
      uint64_t v8 = &selRef_targetText;
      if (!v2) {
        uint64_t v8 = &selRef_sourceText;
      }
      id v9 = [v6 *v8];
      uint64_t v4 = sub_1DB1F1290();
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_1DB0F6220(char *a1, char *a2)
{
  char v3 = *a1;
  char v4 = *a2;
  v12[16] = *a1;
  unint64_t v5 = sub_1DB0F6364();
  if (!v5) {
    unint64_t v5 = sub_1DB0EE5C8(MEMORY[0x1E4FBC860]);
  }
  uint64_t v6 = v5;
  uint64_t v7 = *(uint64_t (**)(unsigned char *, char *))(v2
                                                 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_globalAttributeProvider);
  if (v7 && (v12[0] = v3, v11 = v4, (uint64_t v8 = v7(v12, &v11)) != 0))
  {
    unint64_t v9 = v8;
  }
  else
  {
    unint64_t v9 = sub_1DB0EE5C8(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
  }
  return sub_1DB0F62D8(v9, v6);
}

uint64_t sub_1DB0F62D8(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1DB0FA308(a1, (uint64_t)sub_1DB0FA2B8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_1DB0F6364()
{
  uint64_t v0 = sub_1DB1EF690();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  char v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF6A0();
  BOOL v4 = sub_1DB1EF660() == 2;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v5, sel_setAlignment_, 2 * v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903BA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DB1F4170;
  uint64_t v7 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0738];
  *(void *)(inited + 64) = sub_1DB0E2EFC(0, &qword_1EA903BA8);
  *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  id v8 = v7;
  return sub_1DB0EE5C8(inited);
}

id DisambiguationResultModel.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DisambiguationResultModel.init()()
{
}

id DisambiguationResultModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisambiguationResultModel(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DB0F673C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DisambiguationResultModel(0);
  uint64_t result = sub_1DB1EF8B0();
  *a1 = result;
  return result;
}

void DisambiguationResultModel.disambiguableResult(_:didChangeResultFor:with:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (unsigned char *)(v3 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if (*v6)
  {
    sub_1DB0F5894();
    if (!a3) {
      return;
    }
  }
  else
  {
    sub_1DB0F4A0C();
    if (!a3) {
      return;
    }
  }
  uint64_t v7 = *(void (**)(uint64_t, id))(v3
                                          + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_userSelectionHandler);
  if (v7)
  {
    id v8 = a3;
    v7(a2, v8);
  }
}

void DisambiguationResultModel.disambiguableResultDidUpdate(_:)()
{
  id v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  swift_beginAccess();
  if (*v1) {
    sub_1DB0F5894();
  }
  else {
    sub_1DB0F4A0C();
  }
}

uint64_t DisambiguationLinkInfo.sentenceUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1EF570();
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DisambiguationLinkInfo.sentenceUUID.setter(uint64_t a1)
{
  uint64_t v3 = sub_1DB1EF570();
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*DisambiguationLinkInfo.sentenceUUID.modify())()
{
  return CGPointMake;
}

uint64_t DisambiguationLinkInfo.linkIndex.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DisambiguationLinkInfo(0) + 20));
}

uint64_t DisambiguationLinkInfo.linkIndex.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for DisambiguationLinkInfo(0);
  *(void *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

double (*DisambiguationLinkInfo.linkIndex.modify())(double, double)
{
  return CGPointMake;
}

uint64_t DisambiguationLinkInfo.description.getter()
{
  return 0;
}

uint64_t sub_1DB0F6D70()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB0F6DB4()
{
  if (*v0) {
    return 0x65646E496B6E696CLL;
  }
  else {
    return 0x65636E65746E6573;
  }
}

uint64_t sub_1DB0F6DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DB0FC26C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DB0F6E24()
{
  return 0;
}

void sub_1DB0F6E30(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DB0F6E3C(uint64_t a1)
{
  unint64_t v2 = sub_1DB0FB158();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB0F6E78(uint64_t a1)
{
  unint64_t v2 = sub_1DB0FB158();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DisambiguationLinkInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903BD8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB0FB158();
  sub_1DB1F1EF0();
  v8[15] = 0;
  sub_1DB1EF570();
  sub_1DB0FB1AC(&qword_1EA903BE8, MEMORY[0x1E4F27990]);
  sub_1DB1F1D60();
  if (!v1)
  {
    type metadata accessor for DisambiguationLinkInfo(0);
    v8[14] = 1;
    sub_1DB1F1D50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DisambiguationLinkInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_1DB1EF570();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903BF0);
  uint64_t v21 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DisambiguationLinkInfo(0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB0FB158();
  sub_1DB1F1EE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v19 = v11;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  char v26 = 0;
  sub_1DB0FB1AC(&qword_1EA903BF8, MEMORY[0x1E4F27990]);
  uint64_t v14 = v23;
  sub_1DB1F1CB0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v6, v14);
  char v25 = 1;
  uint64_t v15 = sub_1DB1F1CA0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v24);
  uint64_t v17 = (uint64_t)v19;
  uint64_t v16 = v20;
  *(void *)&v19[*(int *)(v9 + 20)] = v15;
  sub_1DB0FC438(v17, v16, type metadata accessor for DisambiguationLinkInfo);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1DB0FAF44(v17);
}

uint64_t sub_1DB0F73A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DisambiguationLinkInfo.init(from:)(a1, a2);
}

uint64_t sub_1DB0F73B8(void *a1)
{
  return DisambiguationLinkInfo.encode(to:)(a1);
}

uint64_t sub_1DB0F73D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903AE8);
  char v38 = a2;
  uint64_t v6 = sub_1DB1F1BD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1DB1F1E80();
    sub_1DB1F1360();
    uint64_t result = sub_1DB1F1EC0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1DB0F76E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B20);
  char v35 = a2;
  uint64_t v6 = sub_1DB1F1BD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1DB0F138C(v22, v36);
    }
    else
    {
      sub_1DB0E52F4((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1DB1F1290();
    sub_1DB1F1E80();
    sub_1DB1F1360();
    uint64_t v24 = sub_1DB1F1EC0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1DB0F138C(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1DB0F7A20(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E268);
  uint64_t v6 = sub_1DB1F1BD0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1DB0F138C(v24, v35);
      }
      else
      {
        sub_1DB0E52F4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1DB1F1E80();
      sub_1DB1F1360();
      uint64_t result = sub_1DB1F1EC0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1DB0F138C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1DB0F7D20(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EF570();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903D80);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1DB1F1BD0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  id v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  int64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    unint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    int64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1DB0F1454(v32 + v33 * v24, v54, &qword_1EA903B10);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1DB0E8B70(v34 + v33 * v24, v54, &qword_1EA903B10);
    }
    sub_1DB0FB1AC(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1DB1F11D0();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      int64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      int64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_1DB0F1454(v54, *(void *)(v13 + 56) + v33 * v22, &qword_1EA903B10);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  unint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v13;
  return result;
}

uint64_t sub_1DB0F8218(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DB1EF570();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v51 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TextModel();
  uint64_t v49 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B00);
  int v50 = a2;
  uint64_t v12 = v11;
  uint64_t v13 = sub_1DB1F1BD0();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 64);
  int64_t v45 = (void *)(v12 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  uint64_t v43 = v2;
  int64_t v44 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v46 = v6 + 16;
  uint64_t v48 = v6;
  unint64_t v19 = (uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v20 = v13 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  for (i = v12; ; uint64_t v12 = i)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v44) {
      break;
    }
    unint64_t v27 = v45;
    unint64_t v28 = v45[v26];
    ++v22;
    if (!v28)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v28 = v45[v22];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v45[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v22 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v44) {
              goto LABEL_34;
            }
            unint64_t v28 = v45[v22];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v49 + 72);
    uint64_t v31 = *(void *)(v12 + 48) + v30 * v25;
    if (v50)
    {
      sub_1DB0FC4A0(v31, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v32 = *(void *)(v12 + 56);
      uint64_t v33 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v51, v32 + v33 * v25, v5);
    }
    else
    {
      sub_1DB0FC438(v31, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v34 = *(void *)(v12 + 56);
      uint64_t v33 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v51, v34 + v33 * v25, v5);
    }
    sub_1DB1F1E80();
    sub_1DB0FB1AC(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
    sub_1DB1F11E0();
    uint64_t result = sub_1DB1F1EC0();
    uint64_t v35 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v20 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v36) & ~*(void *)(v20 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v20 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v23 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    sub_1DB0FC4A0((uint64_t)v10, *(void *)(v14 + 48) + v30 * v23, (uint64_t (*)(void))type metadata accessor for TextModel);
    uint64_t result = (*v19)(*(void *)(v14 + 56) + v33 * v23, v51, v5);
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v3 = v43;
  unint64_t v27 = v45;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v12 + 32);
  if (v42 >= 64) {
    bzero(v27, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v42;
  }
  *(void *)(v12 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v14;
  return result;
}

uint64_t sub_1DB0F8720(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EF570();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903D60);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1DB1F1BD0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  id v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  int64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    int64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    int64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1DB0FC4A0(v32 + v33 * v24, v54, type metadata accessor for VisualTranslationModel);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1DB0FC438(v34 + v33 * v24, v54, type metadata accessor for VisualTranslationModel);
    }
    sub_1DB0FB1AC(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1DB1F11D0();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      int64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      int64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_1DB0FC4A0(v54, *(void *)(v13 + 56) + v33 * v22, type metadata accessor for VisualTranslationModel);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  int64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v13;
  return result;
}

uint64_t sub_1DB0F8C38(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DB1EF570();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903D70);
  int v46 = a2;
  uint64_t v10 = sub_1DB1F1BD0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  BOOL v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1DB0FB1AC(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1DB1F11D0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

id sub_1DB0F905C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903AE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DB1F1BC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DB0F9210()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DB1F1BC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1DB0E52F4(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1DB0F138C(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DB0F93D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E268);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DB1F1BC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1DB0E52F4(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_1DB0F138C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DB0F95C0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B10);
  uint64_t v38 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v37 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1DB1EF570();
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  unint64_t v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903D80);
  id v30 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DB1F1BC0();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v40 = v6;
  if (!v7)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v40;
    int64_t v27 = v30;
LABEL_25:
    *int64_t v27 = v28;
    return result;
  }
  uint64_t v8 = v6;
  id result = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v40;
  }
  uint64_t v31 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  uint64_t v39 = v5;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v34 = v3 + 16;
  int64_t v32 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v33 = v3 + 32;
  uint64_t v16 = v35;
  uint64_t v15 = v36;
  uint64_t v17 = (uint64_t)v37;
  for (i = v40; ; id result = (void *)sub_1DB0F1454(v17, *(void *)(i + 56) + v23, &qword_1EA903B10))
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v11 << 6);
      uint64_t v21 = v39;
      goto LABEL_9;
    }
    int64_t v24 = v11 + 1;
    uint64_t v21 = v39;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(void *)(v21 + 48) + v22, v15);
    unint64_t v23 = *(void *)(v38 + 72) * v20;
    sub_1DB0E8B70(*(void *)(v21 + 56) + v23, v17, &qword_1EA903B10);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(i + 48) + v22, v16, v15);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    int64_t v27 = v30;
    uint64_t v28 = v40;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DB0F9930()
{
  uint64_t v39 = sub_1DB1EF570();
  uint64_t v1 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TextModel();
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B00);
  uint64_t v31 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DB1F1BC0();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v41 = v6;
  if (!v7)
  {
    id result = (void *)swift_release();
    uint64_t v29 = v41;
    uint64_t v28 = v31;
LABEL_25:
    uint64_t *v28 = v29;
    return result;
  }
  uint64_t v8 = v6;
  id result = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v41;
  }
  uint64_t v32 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5;
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v35 = v1 + 16;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v15 = (uint64_t)v36;
  uint64_t v16 = v39;
  for (uint64_t i = v41;
        ;
        id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v11 << 6);
      uint64_t v20 = v40;
      goto LABEL_9;
    }
    int64_t v25 = v11 + 1;
    uint64_t v20 = v40;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v37 + 72) * v19;
    sub_1DB0FC438(*(void *)(v20 + 48) + v21, v15, (uint64_t (*)(void))type metadata accessor for TextModel);
    unint64_t v22 = *(void *)(v1 + 72) * v19;
    unint64_t v23 = *(void *)(v20 + 56) + v22;
    int64_t v24 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v38, v23, v16);
    sub_1DB0FC4A0(v15, *(void *)(i + 48) + v21, (uint64_t (*)(void))type metadata accessor for TextModel);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v41;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

char *sub_1DB0F9CAC()
{
  uint64_t v1 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v40 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v39 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1DB1EF570();
  uint64_t v3 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903D60);
  uint64_t v32 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DB1F1BC0();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v42 = v6;
  if (!v7)
  {
    id result = (char *)swift_release();
    uint64_t v30 = v42;
    uint64_t v29 = v32;
LABEL_25:
    *uint64_t v29 = v30;
    return result;
  }
  uint64_t v8 = v6;
  id result = (char *)(v6 + 64);
  unint64_t v10 = (char *)(v5 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v33 = v5 + 64;
  if (v8 != v5 || result >= &v10[8 * v11])
  {
    id result = (char *)memmove(result, v10, 8 * v11);
    uint64_t v8 = v42;
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5;
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  uint64_t v36 = v3 + 16;
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v35 = v3 + 32;
  uint64_t v17 = v37;
  uint64_t v16 = v38;
  uint64_t v18 = (uint64_t)v39;
  for (uint64_t i = v42;
        ;
        id result = (char *)sub_1DB0FC4A0(v18, *(void *)(i + 56) + v25, type metadata accessor for VisualTranslationModel))
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v12 << 6);
      uint64_t v22 = v41;
      goto LABEL_9;
    }
    int64_t v26 = v12 + 1;
    uint64_t v22 = v41;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v12;
    if (!v27)
    {
      int64_t v12 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v12);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v27 - 1) & v27;
    unint64_t v21 = __clz(__rbit64(v27)) + (v12 << 6);
LABEL_9:
    unint64_t v23 = *(void *)(v3 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v17, *(void *)(v22 + 48) + v23, v16);
    uint64_t v24 = *(void *)(v22 + 56);
    unint64_t v25 = *(void *)(v40 + 72) * v21;
    sub_1DB0FC438(v24 + v25, v18, type metadata accessor for VisualTranslationModel);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(i + 48) + v23, v17, v16);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    id result = (char *)swift_release();
    uint64_t v29 = v32;
    uint64_t v30 = v42;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v12 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v12 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v12);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1DB0FA020()
{
  uint64_t v1 = sub_1DB1EF570();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA903D70);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DB1F1BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1DB0FA2B8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v4 = *a1;
  sub_1DB0E52F4((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;
  return v4;
}

uint64_t sub_1DB0FA308(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v48 = v8;
  uint64_t v49 = 0;
  uint64_t v50 = v11 & v9;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB0FA634((uint64_t)&v44);
  uint64_t v12 = v44;
  if (!v44) {
    goto LABEL_27;
  }
  sub_1DB0F138C(v45, v43);
  unint64_t v13 = *(void **)a5;
  unint64_t v15 = sub_1DB1A8CA0((uint64_t)v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1DB0F9210();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    unint64_t v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(void *)(v23[6] + 8 * v15) = v12;
    sub_1DB0F138C(v43, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1DB0FA634((uint64_t)&v44);
    for (uint64_t i = v44; v44; uint64_t i = v44)
    {
      sub_1DB0F138C(v45, v43);
      uint64_t v29 = *(void **)a5;
      unint64_t v31 = sub_1DB1A8CA0((uint64_t)i);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_28;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_1DB0F76E4(v34, 1);
        unint64_t v36 = sub_1DB1A8CA0((uint64_t)i);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_30;
        }
        unint64_t v31 = v36;
      }
      if (v35)
      {
        sub_1DB0E52F4((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

        int64_t v28 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
        sub_1DB0F138C(v42, v28);
      }
      else
      {
        uint64_t v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = i;
        sub_1DB0F138C(v43, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_29;
        }
        v38[2] = v40;
      }
      sub_1DB0FA634((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1DB0FC3EC();
    return swift_release();
  }
  sub_1DB0F76E4(v18, a4 & 1);
  unint64_t v20 = sub_1DB1A8CA0((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_1DB0E52F4((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

    uint64_t v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1DB0F138C(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for Key(0);
  uint64_t result = sub_1DB1F1E00();
  __break(1u);
  return result;
}

uint64_t sub_1DB0FA634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
    sub_1DB0E52F4(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(void *)&v24[0] = v11;
    id v12 = v11;
    goto LABEL_23;
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      uint64_t v9 = (v15 - 1) & v15;
      unint64_t v10 = __clz(__rbit64(v15)) + (v13 << 6);
      int64_t v7 = v13;
      goto LABEL_3;
    }
    int64_t v16 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      unint64_t v15 = *(void *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        int64_t v13 = v16;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        unint64_t v15 = *(void *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          int64_t v13 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v16 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          unint64_t v15 = *(void *)(v4 + 8 * v16);
          if (v15) {
            goto LABEL_10;
          }
          int64_t v13 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            unint64_t v15 = *(void *)(v4 + 8 * v13);
            if (v15) {
              goto LABEL_7;
            }
            int64_t v7 = v14 - 1;
            int64_t v17 = v5 + 6;
            while (v14 != v17)
            {
              unint64_t v15 = *(void *)(v4 + 8 * v17++);
              if (v15)
              {
                int64_t v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v18 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_1DB0F1454((uint64_t)v24, (uint64_t)v22, &qword_1EA903D30);
  if (*(void *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    uint64_t v21 = v23;
    v18(v20);
    return sub_1DB0E8BD4((uint64_t)v20, &qword_1EA903D38);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

char *sub_1DB0FA814(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int64_t v16 = &v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes];
  *(void *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes] = MEMORY[0x1E4FBC860];
  v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode] = 0;
  int64_t v17 = &v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource];
  _OWORD *v17 = 0u;
  v17[1] = 0u;
  *(void *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult] = a1;
  uint64_t v18 = (uint64_t *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_globalAttributeProvider];
  *uint64_t v18 = a5;
  v18[1] = a6;
  char v19 = (uint64_t *)&v10[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_linkAttributeProvider];
  *char v19 = a7;
  v19[1] = a8;
  swift_beginAccess();
  *int64_t v16 = a2;
  unint64_t v20 = v10;
  id v21 = a1;
  sub_1DB0EB758(a5);
  sub_1DB0EB758(a7);
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t *)&v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_userSelectionHandler];
  uint64_t *v22 = a9;
  v22[1] = a10;
  uint64_t v23 = &v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_sourceLocale];
  uint64_t v24 = sub_1DB1EF6B0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v26(v23, a3, v24);
  v26(&v20[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_targetLocale], a4, v24);
  sub_1DB0EB758(a9);
  id v27 = objc_msgSend(v21, sel_sourceText);
  sub_1DB1F1290();

  id v28 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v29 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_initWithString_, v29);

  swift_beginAccess();
  sub_1DB0E2EFC(0, &qword_1EBA4D948);
  sub_1DB1EF8D0();
  swift_endAccess();
  id v30 = objc_msgSend(v21, sel_targetText);
  sub_1DB1F1290();

  id v31 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v32 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v31, sel_initWithString_, v32);

  swift_beginAccess();
  id v40 = v33;
  sub_1DB1EF8D0();
  swift_endAccess();

  v39.receiver = v20;
  v39.super_class = (Class)type metadata accessor for DisambiguationResultModel(0);
  uint64_t v34 = (char *)objc_msgSendSuper2(&v39, sel_init);
  objc_msgSend(v21, sel_setDelegate_, v34);
  objc_msgSend(v21, sel_addObserver_, v34);
  char v35 = &v34[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode];
  swift_beginAccess();
  if (*v35) {
    sub_1DB0F5894();
  }
  else {
    sub_1DB0F4A0C();
  }

  unint64_t v36 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v36(a4, v24);
  v36(a3, v24);
  return v34;
}

id sub_1DB0FAC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v12 = &v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)&v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes] = MEMORY[0x1E4FBC860];
  v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode] = 0;
  int64_t v14 = &v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_displaySource];
  void *v14 = a1;
  v14[1] = a2;
  v14[2] = a3;
  v14[3] = a4;
  *(void *)&v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_disambiguableResult] = 0;
  unint64_t v15 = (uint64_t *)&v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_globalAttributeProvider];
  *unint64_t v15 = a7;
  v15[1] = a8;
  int64_t v16 = &v8[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_linkAttributeProvider];
  *int64_t v16 = 0;
  v16[1] = 0;
  swift_beginAccess();
  *id v12 = v13;
  int64_t v17 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DB0EB758(a7);
  swift_bridgeObjectRelease();
  uint64_t v18 = &v17[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_userSelectionHandler];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  char v19 = &v17[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_sourceLocale];
  uint64_t v20 = sub_1DB1EF6B0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v19, a5, v20);
  v22(&v17[OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_targetLocale], a6, v20);
  id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v24 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_initWithString_, v24);

  swift_beginAccess();
  sub_1DB0E2EFC(0, &qword_1EBA4D948);
  sub_1DB1EF8D0();
  swift_endAccess();
  id v25 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v26 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v25, sel_initWithString_, v26);

  swift_beginAccess();
  id v33 = v27;
  sub_1DB1EF8D0();
  swift_endAccess();

  v32.receiver = v17;
  v32.super_class = (Class)type metadata accessor for DisambiguationResultModel(0);
  id v28 = objc_msgSendSuper2(&v32, sel_init);
  sub_1DB0F4764();

  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v29(a6, v20);
  v29(a5, v20);
  return v28;
}

uint64_t type metadata accessor for DisambiguationLinkInfo(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, qword_1EA903CE8);
}

uint64_t sub_1DB0FAF44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DisambiguationLinkInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DisambiguationResultModel(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EBA4D700);
}

uint64_t sub_1DB0FAFC0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s13TranslationUI25DisambiguationResultModelC13excludedTypes3forShySo8NSNumberCGSgSo016_LTDisambiguableD0C_tF_0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(v2 + 16);
  unint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    unint64_t v9 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DB1F1B40();
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v5 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedInteger_, *(void *)(v2 + 8 * v5 + 32));
      sub_1DB1F1B20();
      sub_1DB1F1B50();
      sub_1DB1F1B60();
      sub_1DB1F1B30();
      uint64_t v5 = v6;
    }
    while (v3 != v6);
    unint64_t v4 = v9;
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = sub_1DB12FC0C(v4);
  swift_bridgeObjectRelease();
  return v7;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1DB0FB158()
{
  unint64_t result = qword_1EA903BE0;
  if (!qword_1EA903BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903BE0);
  }
  return result;
}

uint64_t sub_1DB0FB1AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB0FB1F8()
{
  unint64_t result = qword_1EA903C00;
  if (!qword_1EA903C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903C00);
  }
  return result;
}

unint64_t sub_1DB0FB250()
{
  unint64_t result = qword_1EA903C08;
  if (!qword_1EA903C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903C08);
  }
  return result;
}

uint64_t sub_1DB0FB2A4()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1DB0FB2B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_excludedTypes);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DB0FB30C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC13TranslationUI25DisambiguationResultModel_renderMode);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1DB0FB364()
{
  return sub_1DB0F3A7C();
}

uint64_t sub_1DB0FB384(uint64_t a1)
{
  return sub_1DB0F3AE0(a1);
}

uint64_t sub_1DB0FB3A4()
{
  return sub_1DB0F3A7C();
}

uint64_t sub_1DB0FB3C4(uint64_t a1)
{
  return sub_1DB0F3AE0(a1);
}

uint64_t sub_1DB0FB3E4()
{
  return type metadata accessor for DisambiguationResultModel(0);
}

void sub_1DB0FB3EC()
{
  sub_1DB1EF6B0();
  if (v0 <= 0x3F)
  {
    sub_1DB0FB804();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DisambiguationResultModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DisambiguationResultModel);
}

uint64_t dispatch thunk of DisambiguationResultModel.excludedTypes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.excludedTypes.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.excludedTypes.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.renderMode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.renderMode.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.renderMode.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.sourceAttributedText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DisambiguationResultModel.$sourceAttributedText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of DisambiguationResultModel.targetAttributedText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of DisambiguationResultModel.$targetAttributedText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of DisambiguationResultModel.__allocating_init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of DisambiguationResultModel.__allocating_init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of DisambiguationResultModel.didAppear()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DisambiguationResultModel.rangeOfFirstWordForDictionary(inLocation:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of DisambiguationResultModel.rangeInfo(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

void sub_1DB0FB804()
{
  if (!qword_1EBA4D7F0)
  {
    sub_1DB0E2EFC(255, &qword_1EBA4D948);
    unint64_t v0 = sub_1DB1EF930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4D7F0);
    }
  }
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.RenderingMode()
{
  return &type metadata for DisambiguationResultModel.RenderingMode;
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.TextLocation()
{
  return &type metadata for DisambiguationResultModel.TextLocation;
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.LinkRangeInfo()
{
  return &type metadata for DisambiguationResultModel.LinkRangeInfo;
}

uint64_t *initializeBufferWithCopyOfBuffer for DisambiguationLinkInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DB1EF570();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for DisambiguationLinkInfo(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF570();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB0FBBD4);
}

uint64_t sub_1DB0FBBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DisambiguationLinkInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB0FBC54);
}

uint64_t sub_1DB0FBC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF570();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DB0FBCC4()
{
  uint64_t result = sub_1DB1EF570();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for DisambiguationResultModel.DisplaySource(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DisambiguationResultModel.DisplaySource(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for DisambiguationResultModel.DisplaySource(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DisambiguationResultModel.DisplaySource(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationResultModel.DisplaySource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DisambiguationResultModel.DisplaySource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1DB0FC014(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1DB0FC02C(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationResultModel.DisplaySource()
{
  return &type metadata for DisambiguationResultModel.DisplaySource;
}

unsigned char *_s13TranslationUI25DisambiguationResultModelC12TextLocationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB0FC12CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationLinkInfo.CodingKeys()
{
  return &type metadata for DisambiguationLinkInfo.CodingKeys;
}

unint64_t sub_1DB0FC168()
{
  unint64_t result = qword_1EA903D00;
  if (!qword_1EA903D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903D00);
  }
  return result;
}

unint64_t sub_1DB0FC1C0()
{
  unint64_t result = qword_1EA903D08;
  if (!qword_1EA903D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903D08);
  }
  return result;
}

unint64_t sub_1DB0FC218()
{
  unint64_t result = qword_1EA903D10;
  if (!qword_1EA903D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903D10);
  }
  return result;
}

uint64_t sub_1DB0FC26C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E65746E6573 && a2 == 0xEC00000044495555;
  if (v2 || (sub_1DB1F1DB0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646E496B6E696CLL && a2 == 0xE900000000000078)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1DB0FC384()
{
  unint64_t result = qword_1EA903D20;
  if (!qword_1EA903D20)
  {
    sub_1DB0E2EFC(255, (unint64_t *)&qword_1EA903D18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903D20);
  }
  return result;
}

uint64_t sub_1DB0FC3EC()
{
  return swift_release();
}

uint64_t sub_1DB0FC3F4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DB0FC438(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB0FC4A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB0FC508()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DB0FC540()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB0FC578(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1DB0F4DD8(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1DB0FC598(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

double sub_1DB0FC608@<D0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v35[0] = *(_OWORD *)v1;
  v35[1] = v3;
  char v36 = *(unsigned char *)(v1 + 32);
  uint64_t v4 = sub_1DB1F01C0();
  sub_1DB0FC7C0((uint64_t)v35, (uint64_t)__src);
  char v13 = sub_1DB1F06E0();
  sub_1DB1F0F60();
  v14[272] = 1;
  memcpy(&v14[7], __src, 0x108uLL);
  char v15 = 0;
  sub_1DB1EFEE0();
  uint64_t v5 = v22;
  uint64_t v6 = v24;
  uint64_t v7 = v26;
  uint64_t v8 = v28;
  uint64_t v9 = v30;
  uint64_t v10 = v32;
  char v11 = v15;
  char v21 = v23;
  char v20 = v25;
  char v19 = v27;
  char v18 = v29;
  char v17 = v31;
  char v16 = v33;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  memcpy((void *)(a1 + 17), v14, 0x10FuLL);
  *(unsigned char *)(a1 + 288) = v13;
  *(void *)(a1 + 296) = 0x4020000000000000;
  *(_OWORD *)(a1 + 304) = xmmword_1DB1F45D0;
  *(void *)(a1 + 32__isPlatformVersionAtLeast(2, 18, 1, 0) = 0x4020000000000000;
  *(unsigned char *)(a1 + 328) = v11;
  *(void *)(a1 + 336) = v5;
  *(unsigned char *)(a1 + 344) = v21;
  *(void *)(a1 + 352) = v6;
  *(unsigned char *)(a1 + 36__isPlatformVersionAtLeast(2, 18, 1, 0) = v20;
  *(void *)(a1 + 368) = v7;
  *(unsigned char *)(a1 + 376) = v19;
  *(void *)(a1 + 384) = v8;
  *(unsigned char *)(a1 + 392) = v18;
  *(void *)(a1 + 40__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  *(unsigned char *)(a1 + 408) = v17;
  *(void *)(a1 + 416) = v10;
  *(unsigned char *)(a1 + 424) = v16;
  double result = *(double *)&v34;
  *(_OWORD *)(a1 + 432) = v34;
  return result;
}

uint64_t sub_1DB0FC7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DB1F02F0();
  sub_1DB0FCAD0((uint64_t)&v53);
  uint64_t v6 = v53;
  uint64_t v5 = v54;
  uint64_t v7 = v56;
  char v8 = v57;
  char v31 = BYTE1(v57);
  uint64_t v29 = v59;
  uint64_t v30 = v58;
  uint64_t v28 = v60;
  uint64_t v38 = v63;
  uint64_t v39 = v61;
  uint64_t v37 = v64;
  uint64_t v36 = v66;
  char v81 = 1;
  char v80 = v55;
  char v9 = v55;
  char v20 = v55;
  char v79 = v62;
  char v78 = v65;
  char v34 = v62;
  char v35 = v65;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = sub_1DB1F0C90();
  sub_1DB1F0740();
  sub_1DB1F07C0();
  uint64_t v27 = sub_1DB1F07F0();
  swift_release();
  uint64_t v26 = swift_getKeyPath();
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  char v19 = v73;
  uint64_t v24 = v74;
  uint64_t v25 = v72;
  char v18 = v75;
  uint64_t v22 = v77;
  uint64_t v23 = v76;
  if (*(unsigned char *)(a1 + 32)) {
    double v10 = 1.0;
  }
  else {
    double v10 = 0.0;
  }
  uint64_t v21 = sub_1DB1F0C00();
  uint64_t v11 = swift_getKeyPath();
  long long v40 = (unint64_t)v4;
  LOBYTE(v41) = 1;
  *((void *)&v41 + 1) = v6;
  *(void *)&long long v42 = v5;
  BYTE8(v42) = v9;
  *(void *)&long long v43 = v7;
  BYTE8(v43) = v8;
  BYTE9(v43) = v31;
  *(void *)&long long v44 = v30;
  *((void *)&v44 + 1) = v29;
  *(void *)&long long v45 = v28;
  *((void *)&v45 + 1) = v39;
  LOBYTE(v46) = v34;
  *((void *)&v46 + 1) = v38;
  *(void *)&long long v47 = v37;
  BYTE8(v47) = v35;
  *(void *)&long long v48 = v36;
  *((void *)&v48 + 1) = KeyPath;
  char v49 = 0;
  *(unsigned char *)(a2 + 144) = 0;
  long long v12 = v45;
  *(_OWORD *)(a2 + 64) = v44;
  *(_OWORD *)(a2 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v12;
  long long v13 = v43;
  *(_OWORD *)(a2 + 32) = v42;
  *(_OWORD *)(a2 + 48) = v13;
  long long v14 = v48;
  long long v15 = v46;
  *(_OWORD *)(a2 + 112) = v47;
  *(_OWORD *)(a2 + 128) = v14;
  *(_OWORD *)(a2 + 96) = v15;
  long long v16 = v41;
  *(_OWORD *)a2 = v40;
  *(_OWORD *)(a2 + 16) = v16;
  char v52 = 1;
  char v51 = v19;
  char v50 = v18;
  *(void *)(a2 + 152) = 0;
  *(unsigned char *)(a2 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  *(void *)(a2 + 168) = v32;
  *(void *)(a2 + 176) = v26;
  *(void *)(a2 + 184) = v27;
  *(void *)(a2 + 192) = v25;
  *(unsigned char *)(a2 + 20__isPlatformVersionAtLeast(2, 18, 1, 0) = v19;
  *(void *)(a2 + 208) = v24;
  *(unsigned char *)(a2 + 216) = v18;
  *(void *)(a2 + 224) = v23;
  *(void *)(a2 + 232) = v22;
  *(double *)(a2 + 24__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
  *(void *)(a2 + 248) = v11;
  *(void *)(a2 + 256) = v21;
  sub_1DB0FE574((uint64_t)&v40);
  uint64_t v53 = v4;
  uint64_t v54 = 0;
  char v55 = 1;
  uint64_t v56 = v6;
  uint64_t v57 = v5;
  LOBYTE(v58) = v20;
  uint64_t v59 = v7;
  LOBYTE(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
  BYTE1(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = v31;
  uint64_t v61 = v30;
  uint64_t v62 = v29;
  uint64_t v63 = v28;
  uint64_t v64 = v39;
  char v65 = v34;
  uint64_t v66 = v38;
  uint64_t v67 = v37;
  char v68 = v35;
  uint64_t v69 = v36;
  uint64_t v70 = KeyPath;
  char v71 = 0;
  return sub_1DB0FE620((uint64_t)&v53);
}

uint64_t sub_1DB0FCAD0@<X0>(uint64_t a1@<X8>)
{
  sub_1DB0F0708();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1DB1F0930();
  uint64_t v24 = v3;
  uint64_t v25 = v2;
  uint64_t v23 = v4;
  char v21 = v5 & 1;
  uint64_t v22 = sub_1DB1F0C50();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DB1F0930();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  sub_1DB1F0C60();
  uint64_t v11 = sub_1DB1F08E0();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  sub_1DB0EB23C(v6, v8, v10);
  swift_bridgeObjectRelease();
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v23;
  *(unsigned char *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v24;
  *(_WORD *)(a1 + 32) = 256;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = KeyPath;
  *(void *)(a1 + 48) = v22;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v11;
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 96) = v15 & 1;
  *(void *)(a1 + 104) = v17;
  sub_1DB0EB2A4(v25, v23, v21);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DB0EB2A4(v11, v13, v15 & 1);
  swift_bridgeObjectRetain();
  sub_1DB0EB23C(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  sub_1DB0EB23C(v25, v23, v21);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

TranslationUI::DisambiguationView::Item __swiftcall DisambiguationView.Item.init(title:description:)(Swift::String title, Swift::String description)
{
  *uint64_t v2 = title;
  v2[1] = description;
  result.description = description;
  result.title = title;
  return result;
}

uint64_t DisambiguationView.init(items:selection:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t DisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v40 = sub_1DB1EFEC0() - 8;
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E00);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E08);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v38 = (uint64_t)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v10 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v11 = v1[3];
  *(void *)char v5 = sub_1DB1F02E0();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  v37[2] = &v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E10) + 44)];
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DB0FDB0C(v13);
  swift_bridgeObjectRelease();
  uint64_t v42 = v14;
  v37[1] = swift_getKeyPath();
  char v15 = (void *)swift_allocObject();
  v15[2] = v9;
  v15[3] = v10;
  v15[4] = v12;
  v15[5] = v11;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1DB0FDCF4;
  *(void *)(v16 + 24) = v15;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E20);
  sub_1DB0E3C44(&qword_1EA903E28, &qword_1EA903E18);
  sub_1DB0E3C44(&qword_1EA903E30, &qword_1EA903E20);
  sub_1DB1F0E70();
  uint64_t v17 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v18 = MEMORY[0x1E018ABF0](objc_msgSend(v17, sel_tertiarySystemGroupedBackgroundColor));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1DB1F0F60();
  uint64_t v21 = v20;
  uint64_t v22 = v38;
  sub_1DB0E8B70((uint64_t)v5, v38, &qword_1EA903E00);
  uint64_t v23 = (uint64_t *)(v22 + *(int *)(v7 + 44));
  uint64_t *v23 = v18;
  v23[1] = v19;
  v23[2] = v21;
  sub_1DB0E8BD4((uint64_t)v5, &qword_1EA903E00);
  uint64_t v24 = v39;
  uint64_t v25 = &v39[*(int *)(v40 + 28)];
  uint64_t v26 = *MEMORY[0x1E4F3D4A0];
  uint64_t v27 = sub_1DB1F02B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v24 = _Q0;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E38);
  uint64_t v34 = v41;
  uint64_t v35 = v41 + *(int *)(v33 + 36);
  sub_1DB0FDD68((uint64_t)v24, v35);
  *(_WORD *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E40) + 36)) = 256;
  sub_1DB0E8B70(v22, v34, &qword_1EA903E08);
  sub_1DB0FDDCC((uint64_t)v24);
  return sub_1DB0E8BD4(v22, &qword_1EA903E08);
}

uint64_t sub_1DB0FD0EC@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v88 = a6;
  uint64_t v94 = a5;
  uint64_t v95 = a4;
  uint64_t v96 = a1;
  v93 = a7;
  uint64_t v79 = sub_1DB1F0E60();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v76 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E78);
  MEMORY[0x1F4188790](v75);
  char v81 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E80);
  MEMORY[0x1F4188790](v77);
  uint64_t v82 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E88);
  uint64_t v91 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v80 = (uint64_t)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E90);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v92 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v89 = (uint64_t)&v75 - v16;
  uint64_t v86 = sub_1DB1EFE70();
  uint64_t v87 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E98);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EA0);
  uint64_t v84 = *(void *)(v85 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v85);
  uint64_t v25 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v75 - v26;
  long long v83 = *a2;
  uint64_t v29 = *((void *)a2 + 2);
  uint64_t v28 = *((void *)a2 + 3);
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a3;
  uint64_t v31 = v95;
  uint64_t v32 = v94;
  v30[3] = v95;
  v30[4] = v32;
  uint64_t v33 = v88;
  uint64_t v34 = v96;
  v30[5] = v88;
  v30[6] = v34;
  long long v97 = v83;
  uint64_t v98 = v29;
  uint64_t v99 = v28;
  uint64_t v100 = v34;
  uint64_t v101 = a3;
  uint64_t v102 = v31;
  uint64_t v103 = v32;
  uint64_t v104 = v33;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EA8);
  sub_1DB0FE818();
  uint64_t v35 = v25;
  sub_1DB1F0D70();
  sub_1DB1EFE60();
  sub_1DB0E3C44(&qword_1EA903ED0, &qword_1EA903E98);
  sub_1DB0FE90C();
  uint64_t v36 = v86;
  sub_1DB1F0990();
  uint64_t v37 = v36;
  uint64_t v38 = v85;
  uint64_t v39 = v84;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v18, v37);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v40 = v27;
  uint64_t v41 = v27;
  uint64_t v42 = v35;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v35, v38);
  if (*(void *)(a3 + 16) - 1 == v96)
  {
    uint64_t v43 = 1;
    uint64_t v44 = v90;
    uint64_t v45 = v89;
  }
  else
  {
    long long v46 = v76;
    sub_1DB1F0E50();
    long long v47 = self;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v48 = MEMORY[0x1E018ABF0](objc_msgSend(v47, sel_separatorColor));
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    char v49 = sub_1DB1F06E0();
    uint64_t v50 = v78;
    uint64_t v51 = (uint64_t)v81;
    uint64_t v52 = v79;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v81, v46, v79);
    uint64_t v53 = v51 + *(int *)(v75 + 36);
    *(void *)uint64_t v53 = v48;
    *(unsigned char *)(v53 + 8) = v49;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v52);
    sub_1DB1F0F60();
    sub_1DB1EFC00();
    uint64_t v54 = v82;
    sub_1DB0E8B70(v51, v82, &qword_1EA903E78);
    char v55 = (_OWORD *)(v54 + *(int *)(v77 + 36));
    long long v56 = v106;
    *char v55 = v105;
    v55[1] = v56;
    v55[2] = v107;
    sub_1DB0E8BD4(v51, &qword_1EA903E78);
    char v57 = sub_1DB1F0710();
    sub_1DB1EFAC0();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v66 = v80;
    sub_1DB0E8B70(v54, v80, &qword_1EA903E80);
    uint64_t v67 = v90;
    uint64_t v68 = v66 + *(int *)(v90 + 36);
    *(unsigned char *)uint64_t v68 = v57;
    *(void *)(v68 + 8) = v59;
    *(void *)(v68 + 16) = v61;
    *(void *)(v68 + 24) = v63;
    *(void *)(v68 + 32) = v65;
    *(unsigned char *)(v68 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    sub_1DB0E8BD4(v54, &qword_1EA903E80);
    uint64_t v45 = v89;
    sub_1DB0FE964(v66, v89);
    uint64_t v43 = 0;
    uint64_t v44 = v67;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v45, v43, 1, v44);
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v69(v42, v40, v38);
  uint64_t v70 = v92;
  sub_1DB0E8B70(v45, v92, &qword_1EA903E90);
  char v71 = v93;
  v69(v93, v42, v38);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EE0);
  sub_1DB0E8B70(v70, (uint64_t)&v71[*(int *)(v72 + 48)], &qword_1EA903E90);
  sub_1DB0E8BD4(v45, &qword_1EA903E90);
  char v73 = *(void (**)(char *, uint64_t))(v39 + 8);
  v73(v40, v38);
  sub_1DB0E8BD4(v70, &qword_1EA903E90);
  return ((uint64_t (*)(char *, uint64_t))v73)(v42, v38);
}

void *sub_1DB0FDA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EE8);
  TranslationUI::DisambiguationView::Item result = MEMORY[0x1E018ADF0](&v15, v12);
  BOOL v14 = v15 == a5;
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = v14;
  *(unsigned char *)(a6 + 33) = 0;
  return result;
}

uint64_t sub_1DB0FDAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DB1F0110();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1DB0FDADC()
{
  return sub_1DB1F0120();
}

uint64_t sub_1DB0FDB0C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    char v5 = v2 + 4;
    uint64_t v24 = v1;
    uint64_t v6 = (uint64_t *)(result + 56);
    while (1)
    {
      uint64_t v7 = *(v6 - 3);
      uint64_t v8 = *(v6 - 2);
      uint64_t v10 = *(v6 - 1);
      uint64_t v9 = *v6;
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRetain();
        BOOL v11 = __OFSUB__(v3--, 1);
        if (v11) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v12 = v2[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_29;
        }
        int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1) {
          uint64_t v14 = 1;
        }
        else {
          uint64_t v14 = v13;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EF0);
        uint64_t v15 = (void *)swift_allocObject();
        uint64_t v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 40;
        v15[2] = v14;
        v15[3] = 2 * v16;
        uint64_t v17 = v15 + 4;
        uint64_t v18 = v2[3] >> 1;
        char v5 = &v15[5 * v18 + 4];
        uint64_t v19 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v18;
        if (v2[2])
        {
          if (v15 != v2 || v17 >= &v2[5 * v18 + 4]) {
            memmove(v17, v2 + 4, 40 * v18);
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t result = swift_release();
        uint64_t v2 = v15;
        uint64_t v1 = v24;
        BOOL v11 = __OFSUB__(v19, 1);
        uint64_t v3 = v19 - 1;
        if (v11)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      v6 += 4;
      *char v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5[3] = v10;
      v5[4] = v9;
      v5 += 5;
      if (v1 == ++v4)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  uint64_t v3 = 0;
LABEL_24:
  unint64_t v21 = v2[3];
  if (v21 >= 2)
  {
    unint64_t v22 = v21 >> 1;
    BOOL v11 = __OFSUB__(v22, v3);
    uint64_t v23 = v22 - v3;
    if (v11) {
      goto LABEL_30;
    }
    v2[2] = v23;
  }
  return (uint64_t)v2;
}

uint64_t sub_1DB0FDCEC()
{
  return objectdestroyTm_2();
}

uint64_t sub_1DB0FDCF4@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, char *a3@<X8>)
{
  return sub_1DB0FD0EC(a1, a2, v3[2], v3[3], v3[4], v3[5], a3);
}

uint64_t sub_1DB0FDD00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB0FDD38(void *a1)
{
  return (*(uint64_t (**)(void, void *))(v1 + 16))(*a1, a1 + 1);
}

uint64_t sub_1DB0FDD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EFEC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0FDDCC(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFEC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB0FDE28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DisambiguationView()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for DisambiguationView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DisambiguationView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for DisambiguationView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisambiguationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationView()
{
  return &type metadata for DisambiguationView;
}

void *initializeWithCopy for DisambiguationView.Item(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DisambiguationView.Item(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DisambiguationView.Item(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationView.Item(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisambiguationView.Item(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationView.Item()
{
  return &type metadata for DisambiguationView.Item;
}

unint64_t sub_1DB0FE1E0()
{
  unint64_t result = qword_1EA903E48;
  if (!qword_1EA903E48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903E38);
    sub_1DB0FE280();
    sub_1DB0E3C44(&qword_1EA903E70, &qword_1EA903E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903E48);
  }
  return result;
}

unint64_t sub_1DB0FE280()
{
  unint64_t result = qword_1EA903E50;
  if (!qword_1EA903E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903E08);
    sub_1DB0E3C44(&qword_1EA903E58, &qword_1EA903E00);
    sub_1DB0E3C44(&qword_1EA903E60, &qword_1EA903E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903E50);
  }
  return result;
}

uint64_t _s13TranslationUI18DisambiguationViewV4ItemVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DisambiguationRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DisambiguationRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DisambiguationRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisambiguationRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationRow()
{
  return &type metadata for DisambiguationRow;
}

uint64_t sub_1DB0FE540()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB0FE574(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_1DB0EB2A4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB0EB2A4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1DB0FE620(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_1DB0EB23C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DB0EB23C(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DB0FE6CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DB1F0110();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1DB0FE700()
{
  return sub_1DB1F0120();
}

uint64_t sub_1DB0FE730()
{
  return objectdestroyTm_2();
}

uint64_t objectdestroyTm_2()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB0FE78C()
{
  return sub_1DB1F0E00();
}

void *sub_1DB0FE7E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB0FDA00(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

unint64_t sub_1DB0FE818()
{
  unint64_t result = qword_1EA903EB0;
  if (!qword_1EA903EB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903EA8);
    sub_1DB0FE8B8();
    sub_1DB0E3C44(&qword_1EA903EC0, &qword_1EA903EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903EB0);
  }
  return result;
}

unint64_t sub_1DB0FE8B8()
{
  unint64_t result = qword_1EA903EB8;
  if (!qword_1EA903EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903EB8);
  }
  return result;
}

unint64_t sub_1DB0FE90C()
{
  unint64_t result = qword_1EA903ED8;
  if (!qword_1EA903ED8)
  {
    sub_1DB1EFE70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903ED8);
  }
  return result;
}

uint64_t sub_1DB0FE964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DB0FE9D4()
{
  unint64_t result = qword_1EA903EF8;
  if (!qword_1EA903EF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903F00);
    sub_1DB0FEA50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903EF8);
  }
  return result;
}

unint64_t sub_1DB0FEA50()
{
  unint64_t result = qword_1EA903F08;
  if (!qword_1EA903F08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903F10);
    sub_1DB0E3C44(&qword_1EA903F18, &qword_1EA903F20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903F08);
  }
  return result;
}

uint64_t sub_1DB0FEAF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DB1F0CA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EFB60();
  uint64_t v6 = v51;
  uint64_t v7 = v52;
  uint64_t v8 = v53;
  uint64_t v9 = v54;
  uint64_t v10 = v55;
  id v11 = objc_msgSend(self, sel_secondarySystemFillColor);
  uint64_t v12 = MEMORY[0x1E018ABF0](v11);
  uint64_t KeyPath = swift_getKeyPath();
  double v14 = COERCE_DOUBLE(sub_1DB1F0660());
  uint64_t v44 = v9;
  uint64_t v43 = v12;
  uint64_t v42 = v7;
  uint64_t v41 = v8;
  uint64_t v40 = v10;
  if (v15)
  {
    uint64_t v16 = 0x3FB999999999999ALL;
  }
  else
  {
    uint64_t v16 = *(void *)&v14;
    if (v14 < 0.1) {
      uint64_t v16 = 0x3FB999999999999ALL;
    }
  }
  sub_1DB1EFB60();
  uint64_t v17 = v56;
  uint64_t v18 = v58;
  uint64_t v19 = v59;
  uint64_t v20 = v60;
  uint64_t v39 = sub_1DB1F0FB0();
  uint64_t v21 = sub_1DB1F0660();
  char v23 = v22;
  sub_1DB1F1020();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1DB1F0C90();
  uint64_t v28 = v57;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3EBF8], v2);
  uint64_t v29 = sub_1DB1F0CD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  uint64_t v30 = v61;
  char v31 = v62;
  uint64_t v32 = v63;
  char v33 = v64;
  char v50 = v23 & 1;
  char v48 = v62;
  char v46 = v64;
  *(_DWORD *)(a1 + 129) = *(_DWORD *)v49;
  *(_DWORD *)(a1 + 132) = *(_DWORD *)&v49[3];
  *(_DWORD *)(a1 + 177) = *(_DWORD *)v47;
  *(_DWORD *)(a1 + 18__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)&v47[3];
  int v34 = *(_DWORD *)v45;
  *(_DWORD *)(a1 + 196) = *(_DWORD *)&v45[3];
  *(_DWORD *)(a1 + 193) = v34;
  uint64_t v35 = v42;
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v35;
  *(void *)(a1 + 16) = v41;
  *(void *)(a1 + 24) = v44;
  *(void *)(a1 + 32) = v40;
  uint64_t v36 = v43;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = KeyPath;
  *(void *)(a1 + 48) = v36;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v17;
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v28;
  *(void *)(a1 + 88) = v18;
  *(void *)(a1 + 96) = v19;
  *(void *)(a1 + 104) = v20;
  *(void *)(a1 + 112) = v39;
  *(void *)(a1 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
  *(unsigned char *)(a1 + 128) = v23 & 1;
  *(void *)(a1 + 136) = 0xBFF921FB54442D18;
  *(void *)(a1 + 144) = v25;
  *(void *)(a1 + 152) = v27;
  *(void *)(a1 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v29;
  *(void *)(a1 + 168) = v30;
  *(unsigned char *)(a1 + 176) = v31;
  *(void *)(a1 + 184) = v32;
  *(unsigned char *)(a1 + 192) = v33;
  *(_OWORD *)(a1 + 20__isPlatformVersionAtLeast(2, 18, 1, 0) = v65;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1DB0FEEF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DB1F0F60();
  uint64_t v4 = v3;
  sub_1DB0FEAF4((uint64_t)v12);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  long long v5 = v12[11];
  *(_OWORD *)(a1 + 176) = v12[10];
  *(_OWORD *)(a1 + 192) = v5;
  *(_OWORD *)(a1 + 208) = v12[12];
  *(void *)(a1 + 224) = v13;
  long long v6 = v12[7];
  *(_OWORD *)(a1 + 112) = v12[6];
  *(_OWORD *)(a1 + 128) = v6;
  long long v7 = v12[9];
  *(_OWORD *)(a1 + 144) = v12[8];
  *(_OWORD *)(a1 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  long long v8 = v12[3];
  *(_OWORD *)(a1 + 48) = v12[2];
  *(_OWORD *)(a1 + 64) = v8;
  long long v9 = v12[5];
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v12[4];
  *(_OWORD *)(a1 + 96) = v9;
  double result = *(double *)v12;
  long long v11 = v12[1];
  *(_OWORD *)(a1 + 16) = v12[0];
  *(_OWORD *)(a1 + 32) = v11;
  return result;
}

TranslationUI::DownloadProgressView __swiftcall DownloadProgressView.init(fractionCompleted:)(TranslationUI::DownloadProgressView fractionCompleted)
{
  *(void *)uint64_t v2 = *(void *)&fractionCompleted.fractionCompleted.is_nil;
  *(unsigned char *)(v2 + 8) = v1 & 1;
  return fractionCompleted;
}

uint64_t DownloadProgressView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = sub_1DB1F0CA0();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3);
  long long v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F28);
  MEMORY[0x1F4188790](v38);
  long long v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F30);
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F38);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  double v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F40);
  MEMORY[0x1F4188790](v37);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v33 - v18;
  if (v2[1])
  {
    sub_1DB1F0C90();
    uint64_t v21 = v35;
    uint64_t v20 = v36;
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v5, *MEMORY[0x1E4F3EBF8], v36);
    uint64_t v22 = sub_1DB1F0CD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
    sub_1DB1F0740();
    sub_1DB1F07A0();
    uint64_t v23 = sub_1DB1F07F0();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1DB1F0F60();
    sub_1DB1EFC00();
    uint64_t v25 = v41;
    char v26 = BYTE8(v41);
    uint64_t v27 = v42;
    char v28 = BYTE8(v42);
    *(void *)long long v7 = v22;
    *((void *)v7 + 1) = KeyPath;
    *((void *)v7 + 2) = v23;
    *((void *)v7 + 3) = v25;
    v7[32] = v26;
    *((void *)v7 + 5) = v27;
    v7[48] = v28;
    *(_OWORD *)(v7 + 56) = v43;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F48);
    sub_1DB0FF5B8();
    sub_1DB0FF6FC();
    return sub_1DB1F0400();
  }
  else
  {
    uint64_t v30 = *v2;
    BYTE8(v41) = 0;
    uint64_t v40 = 0x3FF0000000000000;
    *(void *)&long long v41 = v30;
    sub_1DB0EB250();
    sub_1DB1EFB90();
    sub_1DB0E3C44(&qword_1EA903F58, &qword_1EA903F30);
    sub_1DB0FF6A8();
    sub_1DB1F0960();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v8);
    sub_1DB1F0F60();
    sub_1DB1EFC00();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
    char v31 = &v16[*(int *)(v37 + 36)];
    long long v32 = v42;
    *(_OWORD *)char v31 = v41;
    *((_OWORD *)v31 + 1) = v32;
    *((_OWORD *)v31 + 2) = v43;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1DB0FF818((uint64_t)v16, (uint64_t)v19);
    sub_1DB0FF880((uint64_t)v19, (uint64_t)v7);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F48);
    sub_1DB0FF5B8();
    sub_1DB0FF6FC();
    sub_1DB1F0400();
    return sub_1DB0FF8E8((uint64_t)v19);
  }
}

uint64_t sub_1DB0FF508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1F0090();
  *a1 = result;
  return result;
}

uint64_t sub_1DB0FF534@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1F0090();
  *a1 = result;
  return result;
}

uint64_t sub_1DB0FF560()
{
  return sub_1DB1F00A0();
}

uint64_t sub_1DB0FF58C()
{
  return sub_1DB1F00A0();
}

unint64_t sub_1DB0FF5B8()
{
  unint64_t result = qword_1EA903F50;
  if (!qword_1EA903F50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903F40);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903F30);
    sub_1DB0E3C44(&qword_1EA903F58, &qword_1EA903F30);
    sub_1DB0FF6A8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903F50);
  }
  return result;
}

unint64_t sub_1DB0FF6A8()
{
  unint64_t result = qword_1EA903F60;
  if (!qword_1EA903F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903F60);
  }
  return result;
}

unint64_t sub_1DB0FF6FC()
{
  unint64_t result = qword_1EA903F68;
  if (!qword_1EA903F68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903F48);
    sub_1DB0FF778();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903F68);
  }
  return result;
}

unint64_t sub_1DB0FF778()
{
  unint64_t result = qword_1EA903F70;
  if (!qword_1EA903F70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903F78);
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903F70);
  }
  return result;
}

uint64_t sub_1DB0FF818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0FF880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB0FF8E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB0FF948()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LanguageState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DownloadProgressView(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DownloadProgressView()
{
  return &type metadata for DownloadProgressView;
}

unint64_t sub_1DB0FF9D8()
{
  unint64_t result = qword_1EA903F90;
  if (!qword_1EA903F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903F98);
    sub_1DB0FF5B8();
    sub_1DB0FF6FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903F90);
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadProgressStyle()
{
  return &type metadata for DownloadProgressStyle;
}

uint64_t sub_1DB0FFA64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB0FFA88()
{
  return sub_1DB0E3C44(&qword_1EA903FA0, &qword_1EA903FA8);
}

id sub_1DB0FFC2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmptyViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EmptyViewController()
{
  return self;
}

uint64_t sub_1DB0FFC84()
{
  uint64_t result = _LTIsInternalInstall();
  byte_1EBA4F360 = result;
  return result;
}

void sub_1DB0FFCA4()
{
  unint64_t v0 = (NSString *)sub_1DB1F1260();
  Class v1 = NSClassFromString(v0);

  if (v1) {
    BOOL v2 = swift_getObjCClassMetadata() != 0;
  }
  else {
    BOOL v2 = 0;
  }
  byte_1EA90F1F0 = v2;
}

uint64_t sub_1DB0FFD08()
{
  if (qword_1EBA4D5C0 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_1EBA4F360 == 1)
  {
    if (qword_1EBA4D5B8 != -1) {
      uint64_t result = swift_once();
    }
    char v0 = byte_1EA90F1F0;
  }
  else
  {
    char v0 = 0;
  }
  byte_1EA90F1F1 = v0;
  return result;
}

uint64_t sub_1DB0FFDA4(uint64_t a1, unint64_t a2)
{
  v31[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1DB1F12E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F12D0();
  uint64_t v8 = sub_1DB1F12A0();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15)
  {
LABEL_5:
    if (qword_1EA903540 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1DB1EF810();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EA90F240);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1DB1EF7F0();
    os_log_type_t v18 = sub_1DB1F1710();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      v31[0] = v20;
      *(_DWORD *)uint64_t v19 = 136380675;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1DB11F638(a1, a2, (uint64_t *)v31);
      sub_1DB1F1910();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DB0DC000, v17, v18, "Failed to decode Environment variable since object was not a dictionary: %{private}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v20, -1, -1);
      MEMORY[0x1E018CA60](v19, -1, -1);
LABEL_15:

      return 0;
    }

    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v11 = self;
  uint64_t v12 = (void *)sub_1DB1EF4A0();
  v31[0] = 0;
  id v13 = objc_msgSend(v11, sel_JSONObjectWithData_options_error_, v12, 16, v31);

  if (v13)
  {
    id v14 = v31[0];
    sub_1DB1F1990();
    sub_1DB10027C(v8, v10);
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FB0);
    if (swift_dynamicCast()) {
      return v30;
    }
    goto LABEL_5;
  }
  id v21 = v31[0];
  uint64_t v22 = (void *)sub_1DB1EF420();

  swift_willThrow();
  sub_1DB10027C(v8, v10);
  if (qword_1EA903540 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1DB1EF810();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EA90F240);
  id v24 = v22;
  uint64_t v17 = sub_1DB1EF7F0();
  os_log_type_t v25 = sub_1DB1F1710();
  if (!os_log_type_enabled(v17, v25))
  {

    goto LABEL_15;
  }
  char v26 = (uint8_t *)swift_slowAlloc();
  uint64_t v27 = (void *)swift_slowAlloc();
  *(_DWORD *)char v26 = 138412290;
  char v28 = (void *)sub_1DB1EF410();
  v31[0] = v28;
  sub_1DB1F1910();
  *uint64_t v27 = v28;

  _os_log_impl(&dword_1DB0DC000, v17, v25, "Failed to decode Environment variable: %@", v26, 0xCu);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
  swift_arrayDestroy();
  MEMORY[0x1E018CA60](v27, -1, -1);
  MEMORY[0x1E018CA60](v26, -1, -1);

  return 0;
}

uint64_t sub_1DB10027C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DB0FC598(a1, a2);
  }
  return a1;
}

BOOL static ErrorStateView.Context.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ErrorStateView.Context.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t ErrorStateView.Context.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

__n128 ErrorStateView.init(context:title:details:actionTitle:action:closeAction:)@<Q0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, __n128 a12, uint64_t a13)
{
  __n128 result = a12;
  *(unsigned char *)a9 = *a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = a11;
  *(__n128 *)(a9 + 96) = a12;
  *(void *)(a9 + 112) = a13;
  return result;
}

uint64_t ErrorStateView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v50 = sub_1DB1EFEC0() - 8;
  MEMORY[0x1F4188790](v50);
  char v3 = (_OWORD *)((char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FB8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9039F8);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903A00);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FC0);
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = *(_OWORD *)(v1 + 80);
  v52[4] = *(_OWORD *)(v1 + 64);
  v52[5] = v18;
  v52[6] = *(_OWORD *)(v1 + 96);
  uint64_t v53 = *(void *)(v1 + 112);
  long long v19 = *(_OWORD *)(v1 + 16);
  v52[0] = *(_OWORD *)v1;
  v52[1] = v19;
  long long v20 = *(_OWORD *)(v1 + 48);
  v52[2] = *(_OWORD *)(v1 + 32);
  v52[3] = v20;
  *(void *)uint64_t v6 = sub_1DB1F01B0();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FC8);
  sub_1DB100748((uint64_t)v52, (uint64_t)&v6[*(int *)(v21 + 44)]);
  char v22 = sub_1DB1F06E0();
  sub_1DB1EFAC0();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_1DB0E8B70((uint64_t)v6, (uint64_t)v10, &qword_1EA903FB8);
  char v31 = &v10[*(int *)(v8 + 44)];
  char *v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_1DB0E8BD4((uint64_t)v6, &qword_1EA903FB8);
  uint64_t v32 = sub_1DB1F0F60();
  sub_1DB0EC938(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v32, v33);
  sub_1DB0E8BD4((uint64_t)v10, &qword_1EA9039F8);
  id v34 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  uint64_t v35 = MEMORY[0x1E018AC80](v34);
  char v36 = sub_1DB1F06E0();
  sub_1DB0E8B70((uint64_t)v13, (uint64_t)v17, &qword_1EA903A00);
  uint64_t v37 = &v17[*(int *)(v15 + 44)];
  *(void *)uint64_t v37 = v35;
  v37[8] = v36;
  sub_1DB0E8BD4((uint64_t)v13, &qword_1EA903A00);
  uint64_t v38 = (char *)v3 + *(int *)(v50 + 28);
  uint64_t v39 = *MEMORY[0x1E4F3D4A0];
  uint64_t v40 = sub_1DB1F02B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  __asm { FMOV            V0.2D, #9.0 }
  _OWORD *v3 = _Q0;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FD0);
  uint64_t v47 = v51;
  uint64_t v48 = v51 + *(int *)(v46 + 36);
  sub_1DB0FDD68((uint64_t)v3, v48);
  *(_WORD *)(v48 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E40) + 36)) = 256;
  sub_1DB0E8B70((uint64_t)v17, v47, &qword_1EA903FC0);
  sub_1DB0FDDCC((uint64_t)v3);
  return sub_1DB0E8BD4((uint64_t)v17, &qword_1EA903FC0);
}

uint64_t sub_1DB100748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904068);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904070);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - v14;
  *(void *)uint64_t v15 = sub_1DB1F02F0();
  *((void *)v15 + 1) = 0x4030000000000000;
  v15[16] = 0;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904078);
  sub_1DB100A1C(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  if (*(void *)(a1 + 104))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904090);
    sub_1DB103B44(&qword_1EA904098, &qword_1EA904090, &qword_1EA9040A0, (void (*)(void))sub_1DB1037C4);
    sub_1DB1F0D70();
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904080);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
  }
  else
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904080);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
  }
  sub_1DB0E8B70((uint64_t)v15, (uint64_t)v12, &qword_1EA904070);
  sub_1DB0E8B70((uint64_t)v9, (uint64_t)v6, &qword_1EA904068);
  sub_1DB0E8B70((uint64_t)v12, a2, &qword_1EA904070);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904088);
  sub_1DB0E8B70((uint64_t)v6, a2 + *(int *)(v19 + 48), &qword_1EA904068);
  sub_1DB0E8BD4((uint64_t)v9, &qword_1EA904068);
  sub_1DB0E8BD4((uint64_t)v15, &qword_1EA904070);
  sub_1DB0E8BD4((uint64_t)v6, &qword_1EA904068);
  return sub_1DB0E8BD4((uint64_t)v12, &qword_1EA904070);
}

uint64_t sub_1DB100A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040C8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v43 = (uint64_t)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v35 - v7;
  uint64_t v40 = sub_1DB1F02F0();
  sub_1DB100EAC(a1, (uint64_t)&v54);
  uint64_t v41 = v54;
  uint64_t v39 = v55;
  char v9 = v56;
  uint64_t v42 = v57;
  uint64_t v10 = v59;
  uint64_t v47 = v58;
  uint64_t v46 = v60;
  uint64_t v45 = v61;
  uint64_t v11 = v63;
  uint64_t v44 = v62;
  uint64_t v48 = v64;
  uint64_t v49 = v65;
  sub_1DB103954(a1 + 56, (uint64_t)v66);
  uint64_t v12 = sub_1DB103954((uint64_t)v66, (uint64_t)&v54);
  if (v55 && *(void *)(a1 + 88))
  {
    _OWORD v35[2] = v35;
    MEMORY[0x1F4188790](v12);
    v35[-4] = v14;
    v35[-3] = v13;
    LOBYTE(v35[-2]) = v15;
    v35[-1] = v16;
    swift_retain();
    v35[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040E8);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D870);
    uint64_t v36 = v11;
    uint64_t v18 = v17;
    uint64_t v19 = sub_1DB0E3C44(&qword_1EBA4D868, &qword_1EBA4D870);
    unint64_t v20 = sub_1DB103AAC();
    uint64_t v50 = v18;
    uint64_t v51 = &type metadata for ActionButtonLabelStyle;
    uint64_t v11 = v36;
    uint64_t v52 = v19;
    unint64_t v53 = v20;
    swift_getOpaqueTypeConformance2();
    sub_1DB1F0D70();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040D8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  }
  uint64_t v38 = v8;
  uint64_t v23 = (uint64_t)v8;
  uint64_t v24 = v43;
  sub_1DB0E8B70(v23, v43, &qword_1EA9040C8);
  *(void *)a2 = v40;
  *(void *)(a2 + 8) = 0x4000000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v25 = v41;
  uint64_t v26 = v39;
  *(void *)(a2 + 24) = v41;
  *(void *)(a2 + 32) = v26;
  *(unsigned char *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  uint64_t v27 = v47;
  *(void *)(a2 + 48) = v42;
  *(void *)(a2 + 56) = v27;
  uint64_t v37 = v10;
  uint64_t v28 = v46;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v28;
  uint64_t v29 = v45;
  uint64_t v30 = v44;
  *(void *)(a2 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v45;
  *(void *)(a2 + 88) = v30;
  uint64_t v31 = v48;
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v31;
  *(void *)(a2 + 112) = v49;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040E0);
  sub_1DB0E8B70(v24, a2 + *(int *)(v32 + 48), &qword_1EA9040C8);
  sub_1DB0EB2A4(v25, v26, v9);
  swift_bridgeObjectRetain();
  uint64_t v33 = v27;
  LOBYTE(v27) = v46;
  sub_1DB1039BC(v33, v10, v46, v29);
  sub_1DB0E8BD4((uint64_t)v38, &qword_1EA9040C8);
  sub_1DB0E8BD4(v24, &qword_1EA9040C8);
  sub_1DB0EB23C(v25, v26, v9);
  swift_bridgeObjectRelease();
  return sub_1DB103A2C(v47, v37, v27, v45);
}

uint64_t sub_1DB100EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOWORD(v29) = 256;
  uint64_t v4 = sub_1DB1F0920();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_1DB1F0730();
  uint64_t v9 = sub_1DB1F0910();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  sub_1DB0EB23C(v4, v6, v8);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1DB1F0900();
  uint64_t v34 = v15;
  uint64_t v35 = v14;
  char v17 = v16;
  uint64_t v36 = v18;
  sub_1DB0EB23C(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a1 + 48);
  if (v19)
  {
    sub_1DB0F0708();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DB1F0930();
    uint64_t v32 = v21;
    uint64_t v33 = v20;
    uint64_t v31 = v22;
    uint64_t v19 = v23 & 1;
    uint64_t v30 = sub_1DB1F0730();
    uint64_t KeyPath = swift_getKeyPath();
    id v25 = objc_msgSend(self, sel_secondaryLabelColor, 0, v29);
    uint64_t v26 = MEMORY[0x1E018ABF0](v25);
    uint64_t v27 = 256;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v27 = 0;
    uint64_t KeyPath = 0;
    uint64_t v26 = 0;
  }
  *(void *)a2 = v35;
  *(void *)(a2 + 8) = v34;
  *(unsigned char *)(a2 + 16) = v17 & 1;
  *(void *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = v33;
  *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v32;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v31;
  *(void *)(a2 + 64) = v27;
  *(void *)(a2 + 72) = KeyPath;
  *(void *)(a2 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v30;
  *(void *)(a2 + 88) = v26;
  sub_1DB0EB2A4(v35, v34, v17 & 1);
  swift_bridgeObjectRetain();
  sub_1DB1039BC(v33, v32, v19, v31);
  sub_1DB103A2C(v33, v32, v19, v31);
  sub_1DB0EB23C(v35, v34, v17 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB101138()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D870);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  char v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DB1F0CF0();
  sub_1DB0E3C44(&qword_1EBA4D868, &qword_1EBA4D870);
  sub_1DB103AAC();
  sub_1DB1F0980();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DB1012B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v1 = sub_1DB1F01E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  uint64_t v31 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D870);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040B8);
  uint64_t v8 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040A0);
  MEMORY[0x1F4188790](v27);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040C0);
  uint64_t v13 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0250();
  sub_1DB1F0CF0();
  sub_1DB1F01D0();
  sub_1DB0E3C44(&qword_1EBA4D868, &qword_1EBA4D870);
  sub_1DB10390C(&qword_1EA9040B0, MEMORY[0x1E4F3D440]);
  uint64_t v16 = v30;
  sub_1DB1F0980();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v16);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  uint64_t v17 = sub_1DB1F0730();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = v29;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v29);
  uint64_t v20 = (uint64_t *)&v12[*(int *)(v27 + 36)];
  *uint64_t v20 = KeyPath;
  v20[1] = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  sub_1DB1037C4();
  sub_1DB1F0AC0();
  sub_1DB0E8BD4((uint64_t)v12, &qword_1EA9040A0);
  id v21 = objc_msgSend(self, sel_tertiaryLabelColor);
  uint64_t v22 = MEMORY[0x1E018ABF0](v21);
  uint64_t v24 = v32;
  uint64_t v23 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v33, v15, v32);
  *(void *)(v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904090) + 36)) = v22;
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v24);
}

uint64_t static ErrorStateView.airplaneMode(sourceLocale:targetLocale:context:)@<X0>(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v43 = *a1;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v8 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v7);
  unint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  if (v10) {
    uint64_t v12 = v8;
  }
  else {
    uint64_t v12 = 0x45474155474E414CLL;
  }
  if (v10) {
    unint64_t v13 = v10;
  }
  else {
    unint64_t v13 = 0xE800000000000000;
  }
  unint64_t v41 = v13;
  uint64_t v42 = v12;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v14 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v7);
  unint64_t v16 = v15;
  v11(v7, v4);
  if (v16) {
    uint64_t v17 = v14;
  }
  else {
    uint64_t v17 = 0x45474155474E414CLL;
  }
  if (v16) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xE800000000000000;
  }
  id v19 = objc_msgSend(self, sel_mainBundle);
  sub_1DB1EF400();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FD8);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DB1F4900;
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v22 = sub_1DB101A50();
  unint64_t v23 = v41;
  *(void *)(v20 + 32) = v42;
  *(void *)(v20 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v23;
  *(void *)(v20 + 96) = v21;
  *(void *)(v20 + 104) = v22;
  *(void *)(v20 + 64) = v22;
  *(void *)(v20 + 72) = v17;
  *(void *)(v20 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v18;
  uint64_t v24 = sub_1DB1F12C0();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1DB1F0250();
  uint64_t v29 = v28;
  char v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = (void *)sub_1DB1F1260();
  id v35 = (id)SFLocalizableWAPIStringKeyForKey();

  sub_1DB1F1290();
  uint64_t result = sub_1DB1F0250();
  *(unsigned char *)a2 = v43;
  *(void *)(a2 + 8) = v27;
  *(void *)(a2 + 16) = v29;
  *(unsigned char *)(a2 + 24) = v31 & 1;
  *(void *)(a2 + 32) = v33;
  *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v24;
  *(void *)(a2 + 48) = v26;
  *(void *)(a2 + 56) = result;
  *(void *)(a2 + 64) = v38;
  *(void *)(a2 + 72) = v37 & 1;
  *(void *)(a2 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v39;
  *(void *)(a2 + 88) = sub_1DB101AA4;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  return result;
}

unint64_t sub_1DB101A50()
{
  unint64_t result = qword_1EA903FE0;
  if (!qword_1EA903FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903FE0);
  }
  return result;
}

uint64_t sub_1DB101AA4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1DB1F1570();
  uint64_t v4 = sub_1DB1F1560();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBCFD8];
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v6;
  sub_1DB131F20((uint64_t)v2, (uint64_t)&unk_1EA904060, v5);
  return swift_release();
}

uint64_t sub_1DB101BA4()
{
  sub_1DB1F1570();
  *(void *)(v0 + 16) = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB101C38, v2, v1);
}

uint64_t sub_1DB101C38()
{
  swift_release();
  sub_1DB1A17E4(2);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static ErrorStateView.missingOfflineAssets(context:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EF480();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - v11;
  int v13 = *a1;
  sub_1DB1EF470();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    int v46 = v13;
    uint64_t v47 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v45(v12, v6, v7);
    uint64_t v15 = sub_1DB1F0250();
    uint64_t v42 = v16;
    uint64_t v43 = v15;
    int v41 = v17;
    uint64_t v44 = v18;
    if (qword_1EA903570 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1DB1EF400();
    uint64_t v39 = v20;
    uint64_t v40 = v19;
    uint64_t v21 = (void *)sub_1DB1F1260();
    id v22 = (id)SFLocalizableWAPIStringKeyForKey();

    sub_1DB1F1290();
    uint64_t v23 = sub_1DB1F0250();
    uint64_t v37 = v24;
    uint64_t v38 = v23;
    uint64_t v26 = v25;
    uint64_t v28 = v27 & 1;
    uint64_t v29 = v47;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v47, v12, v7);
    char v30 = v12;
    unint64_t v31 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v32 = swift_allocObject();
    v45((char *)(v32 + v31), v29, v7);
    *(unsigned char *)a2 = v46;
    uint64_t v33 = v42;
    *(void *)(a2 + 8) = v43;
    *(void *)(a2 + 16) = v33;
    *(unsigned char *)(a2 + 24) = v41 & 1;
    uint64_t v34 = v40;
    *(void *)(a2 + 32) = v44;
    *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v34;
    uint64_t v35 = v38;
    *(void *)(a2 + 48) = v39;
    *(void *)(a2 + 56) = v35;
    *(void *)(a2 + 64) = v37;
    *(void *)(a2 + 72) = v28;
    *(void *)(a2 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v26;
    *(void *)(a2 + 88) = sub_1DB1028E8;
    *(void *)(a2 + 96) = v32;
    *(void *)(a2 + 104) = 0;
    *(void *)(a2 + 112) = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v30, v7);
  }
  return result;
}

uint64_t sub_1DB102038(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF480();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_1DB1F1570();
  uint64_t v10 = sub_1DB1F1560();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBCFD8];
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v5, v2);
  sub_1DB1320CC((uint64_t)v8, (uint64_t)&unk_1EA904050, v12);
  return swift_release();
}

uint64_t sub_1DB102218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  sub_1DB1F1570();
  v4[4] = sub_1DB1F1560();
  uint64_t v6 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB1022B0, v6, v5);
}

uint64_t sub_1DB1022B0()
{
  swift_release();
  id v1 = objc_msgSend(self, sel_defaultWorkspace);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)sub_1DB1EF430();
    sub_1DB0EE490(MEMORY[0x1E4FBC860]);
    uint64_t v4 = (void *)sub_1DB1F11A0();
    swift_bridgeObjectRelease();
    unsigned __int8 v5 = objc_msgSend(v2, sel_openSensitiveURL_withOptions_, v3, v4);
  }
  else
  {
    unsigned __int8 v5 = 2;
  }
  **(unsigned char **)(v0 + 16) = v5;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

double static ErrorStateView.noInternetConnection(context:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v14 = *a1;
  uint64_t v3 = sub_1DB1F0250();
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  if (qword_1EA903570 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1DB1EF400();
  uint64_t v16 = v10;
  sub_1DB1F13A0();
  unint64_t v11 = (void *)sub_1DB1F1260();
  id v12 = (id)SFLocalizableWAPIStringKeyForKey();

  sub_1DB1F1290();
  sub_1DB1EF400();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v14;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = v7 & 1;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v15;
  *(void *)(a2 + 48) = v16;
  double result = 0.0;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  return result;
}

uint64_t sub_1DB10258C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v1 = sub_1DB1F0540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D818);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904028);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0550();
  uint64_t v12 = sub_1DB1F0730();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
  char v14 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  uint64_t *v14 = KeyPath;
  v14[1] = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DB103364();
  sub_1DB1F0AC0();
  sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4D818);
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v17 = sub_1DB1F0C70();
  uint64_t v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v21, v11, v8);
  *(void *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904040) + 36)) = v17;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DB102858()
{
  uint64_t v1 = sub_1DB1EF480();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DB1028E8()
{
  uint64_t v1 = *(void *)(sub_1DB1EF480() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DB102038(v2);
}

unint64_t sub_1DB10294C()
{
  unint64_t result = qword_1EA903FE8;
  if (!qword_1EA903FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903FE8);
  }
  return result;
}

uint64_t sub_1DB1029A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ErrorStateView(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[8];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (a1[11]) {
    uint64_t result = swift_release();
  }
  if (a1[13])
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ErrorStateView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
  }
  uint64_t v8 = *(void *)(a2 + 88);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v8;
    *(void *)(a1 + 96) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  uint64_t v10 = *(void *)(a2 + 104);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v10;
    *(void *)(a1 + 112) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  return a1;
}

uint64_t assignWithCopy for ErrorStateView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DB102D40(a1 + 56);
      long long v7 = *(_OWORD *)(a2 + 72);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 72);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 72) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v9;
      *(void *)(a1 + 96) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_15:
  uint64_t v12 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v12;
      *(void *)(a1 + 112) = v14;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DB102D40(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ErrorStateView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    uint64_t v6 = *(void *)(a2 + 64);
    if (v6)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v6;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DB102D40(a1 + 56);
  }
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v8;
      *(void *)(a1 + 96) = v9;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v8;
    *(void *)(a1 + 96) = v10;
    goto LABEL_13;
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_13:
  uint64_t v11 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v11;
      *(void *)(a1 + 112) = v13;
      return a1;
    }
LABEL_19:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorStateView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorStateView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorStateView()
{
  return &type metadata for ErrorStateView;
}

unsigned char *storeEnumTagSinglePayload for ErrorStateView.Context(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB103098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorStateView.Context()
{
  return &type metadata for ErrorStateView.Context;
}

unint64_t sub_1DB1030D4()
{
  unint64_t result = qword_1EA903FF0;
  if (!qword_1EA903FF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903FD0);
    sub_1DB103174();
    sub_1DB0E3C44(&qword_1EA903E70, &qword_1EA903E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903FF0);
  }
  return result;
}

unint64_t sub_1DB103174()
{
  unint64_t result = qword_1EA903FF8;
  if (!qword_1EA903FF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903FC0);
    sub_1DB103214();
    sub_1DB0E3C44(&qword_1EA904018, &qword_1EA904020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903FF8);
  }
  return result;
}

unint64_t sub_1DB103214()
{
  unint64_t result = qword_1EA904000;
  if (!qword_1EA904000)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903A00);
    sub_1DB103290();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904000);
  }
  return result;
}

unint64_t sub_1DB103290()
{
  unint64_t result = qword_1EA904008;
  if (!qword_1EA904008)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9039F8);
    sub_1DB0E3C44(&qword_1EA904010, &qword_1EA903FB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904008);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionButtonLabelStyle()
{
  return &type metadata for ActionButtonLabelStyle;
}

uint64_t sub_1DB103340()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1DB103364()
{
  unint64_t result = qword_1EA904030;
  if (!qword_1EA904030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D818);
    sub_1DB10390C(&qword_1EA904038, MEMORY[0x1E4F3DAE0]);
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904030);
  }
  return result;
}

uint64_t sub_1DB103434()
{
  uint64_t v1 = sub_1DB1EF480();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DB103500(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1DB1EF480() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DB103C1C;
  return sub_1DB102218(a1, v5, v6, v7);
}

uint64_t sub_1DB1035EC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB103624()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB1036D0;
  return sub_1DB101BA4();
}

uint64_t sub_1DB1036D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_1DB1037C4()
{
  unint64_t result = qword_1EA9040A8;
  if (!qword_1EA9040A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9040A0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D870);
    sub_1DB1F01E0();
    sub_1DB0E3C44(&qword_1EBA4D868, &qword_1EBA4D870);
    sub_1DB10390C(&qword_1EA9040B0, MEMORY[0x1E4F3D440]);
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9040A8);
  }
  return result;
}

uint64_t sub_1DB10390C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB103954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9040D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1039BC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DB0EB2A4(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1DB103A2C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DB0EB23C(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DB103A9C()
{
  return sub_1DB101138();
}

unint64_t sub_1DB103AAC()
{
  unint64_t result = qword_1EA9040F0;
  if (!qword_1EA9040F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9040F0);
  }
  return result;
}

uint64_t sub_1DB103B00()
{
  return sub_1DB103B44(&qword_1EA9040F8, &qword_1EA904040, &qword_1EBA4D818, (void (*)(void))sub_1DB103364);
}

uint64_t sub_1DB103B44(unint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    a4();
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA903A38, &qword_1EA903A40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB103C20()
{
  return 0xD000000000000011;
}

void *sub_1DB103D14@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1DB103D20()
{
  return sub_1DB103C20();
}

void sub_1DB103D28(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1DB103D30@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1DB103D44@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1DB103D58@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1DB103D6C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1DB103D9C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1DB103DC8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1DB103DEC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1DB103E00(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1DB103E14(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1DB103E28@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DB103E3C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1DB103E50(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1DB103E64(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1DB103E78()
{
  return *v0 == 0;
}

void *sub_1DB103E88(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_1DB103E9C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1DB103EAC(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1DB103EB8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DB103ECC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1DB0E3810(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t ExpandingText.init(_:isExpanded:_:buttonAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13 = (int *)type metadata accessor for ExpandingText();
  *(void *)(a9 + 16) = 0;
  *(void *)(a9 + 24) = 0;
  *(unsigned char *)(a9 + 32) = 0;
  uint64_t v14 = a9 + v13[6];
  uint64_t v15 = sub_1DB1EF6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  id v16 = (uint64_t *)(a9 + v13[7]);
  *id v16 = 0;
  v16[1] = 0;
  uint64_t v17 = a9 + v13[8];
  sub_1DB1F0D10();
  *(unsigned char *)uint64_t v17 = v29;
  *(void *)(v17 + 8) = *((void *)&v29 + 1);
  uint64_t v18 = (_OWORD *)(a9 + v13[9]);
  sub_1DB1F0D10();
  *uint64_t v18 = v29;
  uint64_t v19 = v13[10];
  sub_1DB1F0D10();
  *(_OWORD *)(a9 + v19) = v29;
  uint64_t v20 = a9 + v13[11];
  sub_1DB1F0D10();
  *(unsigned char *)uint64_t v20 = v29;
  *(void *)(v20 + 8) = *((void *)&v29 + 1);
  uint64_t v21 = a9 + v13[12];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(unsigned char *)(v21 + 8) = 0;
  id v22 = (uint64_t *)(a9 + v13[13]);
  uint64_t *v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  swift_storeEnumTagMultiPayload();
  sub_1DB1F08C0();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  sub_1DB106F08(*(void *)(a9 + 16), *(void *)(a9 + 24));
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  sub_1DB106F4C(a6, v14);
  uint64_t result = sub_1DB0EB788(*v16);
  *id v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t type metadata accessor for ExpandingText()
{
  uint64_t result = qword_1EA904180;
  if (!qword_1EA904180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

BOOL sub_1DB104178()
{
  uint64_t v1 = (int *)type metadata accessor for ExpandingText();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v73 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041C0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DB1F08D0();
  uint64_t v82 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v81 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v73 - v13;
  uint64_t v15 = (void *)((char *)v0 + v1[9]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  *(void *)&long long v84 = *v15;
  *((void *)&v84 + 1) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D20();
  if (v85[0] <= 0.0
    || (long long v84 = *(_OWORD *)((char *)v0 + v1[10]),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041B8),
        sub_1DB1F0D20(),
        *(void *)&v85[0] == 3))
  {
    if (qword_1EA903548 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DB1EF810();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EA90F258);
    sub_1DB106FB4((uint64_t)v0, (uint64_t)v6);
    sub_1DB106FB4((uint64_t)v0, (uint64_t)v3);
    uint64_t v19 = sub_1DB1EF7F0();
    os_log_type_t v20 = sub_1DB1F1700();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      *(double *)&uint64_t v22 = COERCE_DOUBLE(swift_slowAlloc());
      v85[0] = *(double *)&v22;
      *(_DWORD *)uint64_t v21 = 134218242;
      uint64_t v23 = sub_1DB1F1370();
      sub_1DB10952C((uint64_t)v6);
      *(void *)&long long v84 = v23;
      sub_1DB1F1910();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v24 = &v3[v1[9]];
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *((void *)v24 + 1);
      *(void *)&long long v84 = v25;
      *((void *)&v84 + 1) = v26;
      sub_1DB1F0D20();
      if (v83 <= 0.0) {
        uint64_t v27 = 0xD000000000000013;
      }
      else {
        uint64_t v27 = 0xD000000000000012;
      }
      if (v83 <= 0.0) {
        unint64_t v28 = 0x80000001DB1FBE20;
      }
      else {
        unint64_t v28 = 0x80000001DB1FBE00;
      }
      *(void *)&long long v84 = sub_1DB11F638(v27, v28, (uint64_t *)v85);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB10952C((uint64_t)v3);
      _os_log_impl(&dword_1DB0DC000, v19, v20, "Text of len %ld hard isMultiline due to: %s", (uint8_t *)v21, 0x16u);
      uint64_t v29 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v22, -1, -1);
      MEMORY[0x1E018CA60](v21, -1, -1);
    }
    else
    {
      sub_1DB10952C((uint64_t)v6);
      sub_1DB10952C((uint64_t)v3);

      return 1;
    }
  }
  else
  {
    uint64_t v80 = v9;
    *(void *)&long long v84 = v16;
    *((void *)&v84 + 1) = v17;
    sub_1DB1F0D20();
    char v30 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
    uint64_t v78 = (char *)v0 + v1[14];
    uint64_t v79 = v10;
    uint64_t v76 = v30;
    uint64_t v77 = v82 + 16;
    ((void (*)(char *))v30)(v14);
    sub_1DB1F0250();
    uint64_t v31 = sub_1DB1F0920();
    uint64_t v33 = v32;
    char v35 = v34;
    uint64_t v36 = (char *)v0 + v1[12];
    uint64_t v37 = *(void *)v36;
    uint64_t v75 = v36;
    char v38 = v36[8];
    j__swift_retain();
    uint64_t v39 = sub_1DB1C512C(v37, v38);
    j__swift_release();
    if (!v39) {
      sub_1DB1F0740();
    }
    char v40 = v35 & 1;
    uint64_t v41 = sub_1DB1F0910();
    uint64_t v43 = v42;
    v73[0] = v44;
    char v46 = v45 & 1;
    sub_1DB0EB23C(v31, v33, v40);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_1DB1F08A0();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
    uint64_t v50 = (uint64_t)v80;
    v73[1] = v48 + 56;
    uint64_t v74 = v49;
    v49(v80, 1, 1, v47);
    sub_1DB1F08B0();
    double v52 = v51;
    sub_1DB0EB23C(v41, v43, v46);
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4(v50, &qword_1EA9041C0);
    unint64_t v53 = *(void (**)(char *, uint64_t))(v82 + 8);
    uint64_t v54 = v79;
    v82 += 8;
    v73[0] = v53;
    v53(v14, v79);
    v76(v81, v78, v54);
    uint64_t v55 = v0[1];
    *(void *)&long long v84 = *v0;
    *((void *)&v84 + 1) = v55;
    sub_1DB0F0708();
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1DB1F0930();
    uint64_t v58 = v57;
    char v60 = v59;
    uint64_t v61 = *(void *)v75;
    LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = v75[8];
    j__swift_retain();
    uint64_t v62 = sub_1DB1C512C(v61, v50);
    j__swift_release();
    if (!v62) {
      sub_1DB1F0740();
    }
    uint64_t v63 = sub_1DB1F0910();
    uint64_t v65 = v64;
    char v67 = v66 & 1;
    sub_1DB0EB23C(v56, v58, v60 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v68 = (uint64_t)v80;
    v74(v80, 1, 1, v47);
    uint64_t v69 = v81;
    sub_1DB1F08B0();
    double v71 = v70;
    sub_1DB0EB23C(v63, v65, v67);
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4(v68, &qword_1EA9041C0);
    ((void (*)(char *, uint64_t))v73[0])(v69, v79);
    return v52 < v71;
  }
  return v29;
}

uint64_t sub_1DB104908@<X0>(char a1@<W0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904240);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v74 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904248);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904250);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = sub_1DB1F0C30();
  if (a1)
  {
    sub_1DB1F0250();
    uint64_t v19 = sub_1DB1F0920();
    uint64_t v73 = a3;
    uint64_t v20 = v19;
    uint64_t v71 = v9;
    uint64_t v22 = v21;
    uint64_t v72 = a2;
    uint64_t v75 = v11;
    char v24 = v23 & 1;
    sub_1DB1F0740();
    *(void *)&long long v68 = sub_1DB1F0910();
    uint64_t v26 = v25;
    uint64_t v67 = v25;
    uint64_t v69 = v8;
    char v28 = v27;
    uint64_t v70 = v29;
    swift_release();
    char v30 = v28 & 1;
    sub_1DB0EB23C(v20, v22, v24);
    swift_bridgeObjectRelease();
    int v65 = sub_1DB1F0710();
    sub_1DB1EFAC0();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v39 = sub_1DB1F0C20();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v66 = KeyPath;
    unsigned __int8 v41 = sub_1DB1F0710();
    sub_1DB1EFAC0();
    char v95 = v30;
    char v94 = 0;
    char v93 = 0;
    uint64_t v42 = v68;
    uint64_t v76 = v68;
    *(void *)&long long v77 = v26;
    BYTE8(v77) = v30;
    uint64_t v78 = v70;
    LOBYTE(v79) = v65;
    uint64_t v80 = v32;
    uint64_t v81 = v34;
    uint64_t v82 = v36;
    uint64_t v83 = v38;
    LOBYTE(v84) = 0;
    *((void *)&v84 + 1) = KeyPath;
    uint64_t v85 = v39;
    unsigned __int8 v86 = v41;
    uint64_t v88 = v43;
    uint64_t v89 = v44;
    uint64_t v90 = v45;
    uint64_t v91 = v46;
    char v92 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904260);
    sub_1DB109994(&qword_1EA904268, &qword_1EA904260, (void (*)(void))sub_1DB109A10);
    uint64_t v47 = (uint64_t)v74;
    sub_1DB1F0A60();
    sub_1DB0EB23C(v42, v67, v30);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_1DB1F01C0();
    sub_1DB104F88((uint64_t)&v76);
    uint64_t v49 = v76;
    long long v62 = v77;
    uint64_t v50 = v78;
    uint64_t v51 = v79;
    uint64_t v52 = v80;
    LOBYTE(v39) = v81;
    uint64_t v53 = v82;
    uint64_t v70 = v18;
    char v54 = v83;
    long long v68 = v84;
    uint64_t v72 = v14;
    uint64_t v67 = v85;
    LODWORD(v66) = v86;
    int v65 = v87;
    char v100 = 0;
    char v99 = v81;
    char v97 = v83;
    uint64_t v64 = sub_1DB1F0F60();
    uint64_t v63 = v55;
    uint64_t v56 = (uint64_t)v75;
    sub_1DB0E8B70(v47, (uint64_t)v75, &qword_1EA904240);
    uint64_t v57 = v69;
    uint64_t v58 = v56 + *(int *)(v69 + 36);
    *(void *)uint64_t v58 = v48;
    *(void *)(v58 + 8) = 0;
    *(unsigned char *)(v58 + 16) = 0;
    *(_DWORD *)(v58 + 17) = v76;
    *(_DWORD *)(v58 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)((char *)&v76 + 3);
    *(void *)(v58 + 24) = v49;
    *(_OWORD *)(v58 + 32) = v62;
    *(void *)(v58 + 48) = v50;
    *(void *)(v58 + 56) = v51;
    *(void *)(v58 + 64) = v52;
    *(unsigned char *)(v58 + 72) = v39;
    *(_DWORD *)(v58 + 73) = *(_DWORD *)v98;
    *(_DWORD *)(v58 + 76) = *(_DWORD *)&v98[3];
    *(void *)(v58 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v53;
    *(unsigned char *)(v58 + 88) = v54;
    uint64_t v18 = v70;
    *(_DWORD *)(v58 + 92) = *(_DWORD *)&v96[3];
    *(_DWORD *)(v58 + 89) = *(_DWORD *)v96;
    *(_OWORD *)(v58 + 96) = v68;
    *(void *)(v58 + 112) = v67;
    uint64_t v14 = v72;
    *(unsigned char *)(v58 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v66;
    *(unsigned char *)(v58 + 121) = v65;
    *(_WORD *)(v58 + 126) = v102;
    *(_DWORD *)(v58 + 122) = v101;
    a3 = v73;
    uint64_t v59 = v63;
    *(void *)(v58 + 128) = v64;
    *(void *)(v58 + 136) = v59;
    sub_1DB0E8BD4(v47, &qword_1EA904240);
    sub_1DB0F1454((uint64_t)v75, (uint64_t)v17, &qword_1EA904248);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v17, 0, 1, v57);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  }
  sub_1DB0E8B70((uint64_t)v17, (uint64_t)v14, &qword_1EA904250);
  *(void *)a3 = v18;
  *(_WORD *)(a3 + 8) = 256;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904258);
  sub_1DB0E8B70((uint64_t)v14, a3 + *(int *)(v60 + 48), &qword_1EA904250);
  swift_retain();
  sub_1DB0E8BD4((uint64_t)v17, &qword_1EA904250);
  sub_1DB0E8BD4((uint64_t)v14, &qword_1EA904250);
  return swift_release();
}

__n128 sub_1DB104F88@<Q0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904290);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DB1F4900;
  sub_1DB1F0C30();
  sub_1DB10512C();
  uint64_t v3 = sub_1DB1F0C40();
  swift_release();
  *(void *)(v2 + 32) = v3;
  sub_1DB1F0C30();
  sub_1DB10512C();
  uint64_t v4 = sub_1DB1F0C40();
  swift_release();
  *(void *)(v2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v4;
  sub_1DB1F14C0();
  sub_1DB1F1030();
  sub_1DB1F1040();
  MEMORY[0x1E018AEF0](v2);
  sub_1DB1EFD90();
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  uint64_t v5 = sub_1DB1F0C20();
  *(void *)a1 = v7;
  __n128 result = v8;
  *(__n128 *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  *(unsigned char *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(unsigned char *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v15;
  *(void *)(a1 + 88) = v5;
  *(_WORD *)(a1 + 96) = 256;
  return result;
}

uint64_t sub_1DB10512C()
{
  uint64_t v1 = sub_1DB1EFE00();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1DB1EF690();
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ExpandingText();
  sub_1DB0E8B70(v0 + *(int *)(v17 + 24), (uint64_t)v12, &qword_1EBA4E570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v12, &qword_1EBA4E570);
    sub_1DB1C5340((uint64_t)v6);
    uint64_t v19 = v25;
    uint64_t v18 = v26;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E4F3CBE8], v26);
    char v20 = sub_1DB1EFDF0();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v19 + 8);
    v21(v3, v18);
    v21(v6, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1DB1EF6A0();
    char v20 = sub_1DB1EF660() == 2;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v20 & 1;
}

uint64_t ExpandingText.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v79 = a1;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904108) - 8;
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1DB1EFE00();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v69 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904110);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904118) - 8;
  MEMORY[0x1F4188790](v61);
  uint64_t v60 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9039E8) - 8;
  MEMORY[0x1F4188790](v63);
  long long v62 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9039F0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v65 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904120);
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ExpandingText();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v64 = v13 - 8;
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v74 = v15;
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB106FB4(v1, (uint64_t)v16);
  sub_1DB1F1570();
  uint64_t v17 = sub_1DB1F1560();
  uint64_t v73 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = (v73 + 32) & ~v73;
  uint64_t v71 = v73 | 7;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = MEMORY[0x1E4FBCFD8];
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v20;
  sub_1DB107020((uint64_t)v16, v19 + v18);
  uint64_t v66 = v16;
  sub_1DB106FB4(v1, (uint64_t)v16);
  uint64_t v21 = sub_1DB1F1560();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v20;
  sub_1DB107020((uint64_t)v16, v22 + v18);
  sub_1DB1F0E20();
  uint64_t v24 = v82;
  uint64_t v23 = v83;
  uint64_t v67 = v83;
  uint64_t v68 = v82;
  LODWORD(v21) = v84;
  *uint64_t v7 = sub_1DB1F0F80();
  v7[1] = v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904128);
  uint64_t v27 = v2;
  sub_1DB105E5C(v2, v24, v23, v21, (uint64_t)v7 + *(int *)(v26 + 44));
  uint64_t v28 = v60;
  sub_1DB0E8B70((uint64_t)v7, v60, &qword_1EA904110);
  uint64_t v29 = (void *)(v28 + *(int *)(v61 + 44));
  *uint64_t v29 = CGPointMake;
  v29[1] = 0;
  sub_1DB0E8BD4((uint64_t)v7, &qword_1EA904110);
  uint64_t KeyPath = swift_getKeyPath();
  char v31 = sub_1DB10512C();
  uint64_t v33 = v69;
  uint64_t v32 = v70;
  uint64_t v34 = (unsigned int *)MEMORY[0x1E4F3CBE8];
  if ((v31 & 1) == 0) {
    uint64_t v34 = (unsigned int *)MEMORY[0x1E4F3CBD8];
  }
  uint64_t v35 = v72;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, *v34, v72);
  uint64_t v36 = (uint64_t)v62;
  uint64_t v37 = (uint64_t *)&v62[*(int *)(v63 + 44)];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904130);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v37 + *(int *)(v38 + 28), v33, v35);
  *uint64_t v37 = KeyPath;
  sub_1DB0E8B70(v28, v36, &qword_1EA904118);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v35);
  sub_1DB0E8BD4(v28, &qword_1EA904118);
  uint64_t v39 = sub_1DB1F0F60();
  uint64_t v40 = v65;
  sub_1DB0ECB64(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v65, 0.0, 1, 0.0, 1, v39, v41);
  sub_1DB0E8BD4(v36, &qword_1EA9039E8);
  uint64_t v42 = (uint64_t *)(v2 + *(int *)(v64 + 44));
  uint64_t v43 = *v42;
  uint64_t v44 = v42[1];
  uint64_t v80 = v43;
  uint64_t v81 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D40();
  uint64_t v45 = v82;
  uint64_t v46 = v83;
  uint64_t v47 = v84;
  uint64_t v48 = sub_1DB1F0F60();
  uint64_t v50 = v49;
  uint64_t v51 = v77;
  sub_1DB0E8B70(v40, v77, &qword_1EA9039F0);
  uint64_t v52 = (uint64_t (**)())(v51 + *(int *)(v78 + 44));
  void *v52 = sub_1DB106D18;
  v52[1] = 0;
  v52[2] = (uint64_t (*)())v48;
  v52[3] = v50;
  uint64_t v53 = (uint64_t (*)())swift_allocObject();
  *((void *)v53 + 2) = v45;
  *((void *)v53 + 3) = v46;
  *((void *)v53 + 4) = v47;
  uint64_t v54 = v75;
  sub_1DB0E8B70(v51, v75, &qword_1EA904108);
  uint64_t v55 = (uint64_t (**)())(v54 + *(int *)(v76 + 36));
  *uint64_t v55 = sub_1DB107440;
  v55[1] = v53;
  sub_1DB0E8BD4(v51, &qword_1EA904108);
  sub_1DB0E8BD4(v40, &qword_1EA9039F0);
  LOBYTE(v82) = sub_1DB104178();
  uint64_t v56 = (uint64_t)v66;
  sub_1DB106FB4(v27, (uint64_t)v66);
  uint64_t v57 = (v73 + 16) & ~v73;
  uint64_t v58 = swift_allocObject();
  sub_1DB107020(v56, v58 + v57);
  sub_1DB107754();
  sub_1DB1F0B40();
  swift_release();
  swift_release();
  swift_release();
  return sub_1DB0E8BD4(v54, &qword_1EA904120);
}

uint64_t sub_1DB105C4C@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ExpandingText();
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(a1 + 24);
  if (v8)
  {
    char v9 = *(unsigned char *)(a1 + 32) & 1;
    uint64_t v17 = *(void *)(a1 + 16);
    uint64_t v18 = v8;
    char v19 = v9;
    swift_retain();
    swift_retain();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    MEMORY[0x1E018ADF0](&v20, v10);
    swift_release();
    swift_release();
    char v11 = v20;
    sub_1DB106FB4(a1, (uint64_t)v7);
  }
  else
  {
    sub_1DB106FB4(a1, (uint64_t)&v16 - v6);
    uint64_t v12 = &v7[*(int *)(v4 + 32)];
    char v13 = *v12;
    uint64_t v14 = *((void *)v12 + 1);
    LOBYTE(v17) = v13;
    uint64_t v18 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
    sub_1DB1F0D20();
    char v11 = v20;
  }
  uint64_t result = sub_1DB10952C((uint64_t)v7);
  *a2 = v11;
  return result;
}

uint64_t sub_1DB105D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 24))
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    sub_1DB1F0E00();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for ExpandingText();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
    return sub_1DB1F0D30();
  }
}

uint64_t sub_1DB105E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v133 = a4;
  uint64_t v130 = a3;
  uint64_t v132 = a2;
  uint64_t v123 = a5;
  uint64_t v6 = sub_1DB1EFE70();
  uint64_t v113 = *(void *)(v6 - 8);
  uint64_t v114 = v6;
  MEMORY[0x1F4188790](v6);
  v112 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041C8);
  uint64_t v109 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  v115 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041D0);
  uint64_t v108 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  long long v107 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041D8);
  uint64_t v129 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  long long v106 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041E0);
  MEMORY[0x1F4188790](v11 - 8);
  v122 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v120 = (char *)&v102 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041E8);
  MEMORY[0x1F4188790](v15 - 8);
  v118 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for ExpandingText();
  uint64_t v103 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v105 = (uint64_t)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v119 = (uint64_t)&v102 - v19;
  uint64_t v104 = v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v102 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041F0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041F8);
  MEMORY[0x1F4188790](v117);
  uint64_t v28 = (_OWORD *)((char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904200);
  MEMORY[0x1F4188790](v126);
  uint64_t v127 = (uint64_t)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904208);
  MEMORY[0x1F4188790](v125);
  char v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v124 = (uint64_t)&v102 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v131 = (uint64_t)&v102 - v35;
  uint64_t v36 = *(void *)(a1 + 8);
  *(void *)&long long v139 = *(void *)a1;
  *((void *)&v139 + 1) = v36;
  sub_1DB0F0708();
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1DB1F0930();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  uint64_t v44 = sub_1DB1F0F30();
  sub_1DB0EC744(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v138, 0.0, 1, 0.0, 1, v44, v45, v37, v39, v43, v41);
  sub_1DB0EB23C(v37, v39, v43);
  swift_bridgeObjectRelease();
  long long v145 = v138[6];
  long long v146 = v138[7];
  long long v147 = v138[8];
  long long v141 = v138[2];
  long long v142 = v138[3];
  long long v143 = v138[4];
  long long v144 = v138[5];
  long long v139 = v138[0];
  long long v140 = v138[1];
  BOOL v46 = sub_1DB104178();
  v128 = v31;
  if (v46)
  {
    uint64_t v47 = v132;
    uint64_t v48 = v130;
    uint64_t v134 = v132;
    uint64_t v135 = v130;
    int v49 = v133 & 1;
    char v136 = v133 & 1;
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    MEMORY[0x1E018ADF0](&v137, v50);
    char v51 = v137;
    sub_1DB106FB4(a1, (uint64_t)v23);
    int v133 = v49;
    if (v51)
    {
      char v52 = 0;
    }
    else
    {
      uint64_t v53 = &v23[*(int *)(v116 + 44)];
      char v54 = *v53;
      uint64_t v55 = *((void *)v53 + 1);
      LOBYTE(v134) = v54;
      uint64_t v135 = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
      sub_1DB1F0D20();
      char v52 = v137;
    }
  }
  else
  {
    sub_1DB106FB4(a1, (uint64_t)v23);
    char v52 = 0;
    v133 &= 1u;
    uint64_t v48 = v130;
    uint64_t v47 = v132;
  }
  uint64_t v56 = v117;
  uint64_t v57 = (uint64_t)v118;
  sub_1DB10952C((uint64_t)v23);
  *(void *)uint64_t v26 = sub_1DB1F01C0();
  *((void *)v26 + 1) = 0;
  v26[16] = 0;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904210);
  sub_1DB104908(v52, (char *)a1, (uint64_t)&v26[*(int *)(v58 + 44)]);
  sub_1DB0E8B70((uint64_t)v26, v57, &qword_1EA9041F0);
  sub_1DB0E8B70(v57, (uint64_t)v28 + *(int *)(v56 + 36), &qword_1EA9041E8);
  long long v59 = v146;
  v28[6] = v145;
  v28[7] = v59;
  v28[8] = v147;
  long long v60 = v142;
  v28[2] = v141;
  v28[3] = v60;
  long long v61 = v144;
  v28[4] = v143;
  v28[5] = v61;
  long long v62 = v140;
  _OWORD *v28 = v139;
  v28[1] = v62;
  sub_1DB109588((uint64_t)&v139);
  sub_1DB0E8BD4(v57, &qword_1EA9041E8);
  sub_1DB0E8BD4((uint64_t)v26, &qword_1EA9041F0);
  sub_1DB1095C8((uint64_t)&v139);
  uint64_t v134 = v47;
  uint64_t v135 = v48;
  char v136 = v133;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
  MEMORY[0x1E018ADF0](&v137);
  char v64 = v137;
  uint64_t v65 = v48;
  BOOL v66 = (v137 & 1) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v68 = v127;
  sub_1DB0E8B70((uint64_t)v28, v127, &qword_1EA9041F8);
  uint64_t v69 = v68 + *(int *)(v126 + 36);
  *(void *)uint64_t v69 = KeyPath;
  *(void *)(v69 + 8) = v66;
  *(unsigned char *)(v69 + 16) = v64;
  sub_1DB0E8BD4((uint64_t)v28, &qword_1EA9041F8);
  uint64_t v70 = v124;
  sub_1DB0E8B70(v68, v124, &qword_1EA904200);
  *(unsigned char *)(v70 + *(int *)(v125 + 36)) = 0;
  sub_1DB0E8BD4(v68, &qword_1EA904200);
  uint64_t v71 = v131;
  sub_1DB0F1454(v70, v131, &qword_1EA904208);
  if (!sub_1DB104178())
  {
    uint64_t v74 = v119;
    sub_1DB106FB4(a1, v119);
    goto LABEL_11;
  }
  uint64_t v72 = v132;
  uint64_t v134 = v132;
  uint64_t v135 = v65;
  char v136 = v133;
  MEMORY[0x1E018ADF0](&v137, v63);
  char v73 = v137;
  uint64_t v74 = v119;
  sub_1DB106FB4(a1, v119);
  if (v73)
  {
LABEL_11:
    sub_1DB10952C(v74);
    uint64_t v98 = 1;
    uint64_t v81 = (uint64_t)v122;
    uint64_t v80 = v123;
    uint64_t v83 = (uint64_t)v120;
    uint64_t v82 = v121;
    goto LABEL_14;
  }
  uint64_t v75 = a1;
  uint64_t v76 = v74 + *(int *)(v116 + 44);
  char v77 = *(unsigned char *)v76;
  uint64_t v78 = *(void *)(v76 + 8);
  LOBYTE(v134) = v77;
  uint64_t v135 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
  sub_1DB1F0D20();
  char v79 = v137;
  sub_1DB10952C(v74);
  uint64_t v81 = (uint64_t)v122;
  uint64_t v80 = v123;
  uint64_t v83 = (uint64_t)v120;
  uint64_t v82 = v121;
  if (v79)
  {
    uint64_t v84 = v75;
    uint64_t v102 = v75;
    uint64_t v85 = v105;
    sub_1DB106FB4(v84, v105);
    unint64_t v86 = (*(unsigned __int8 *)(v103 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = v72;
    *(void *)(v87 + 24) = v130;
    *(unsigned char *)(v87 + 32) = v133;
    uint64_t v88 = sub_1DB107020(v85, v87 + v86);
    MEMORY[0x1F4188790](v88);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904228);
    sub_1DB109918();
    sub_1DB1F0D70();
    uint64_t v89 = v112;
    sub_1DB1EFE60();
    sub_1DB0E3C44(&qword_1EA904238, &qword_1EA9041C8);
    sub_1DB0FE90C();
    uint64_t v90 = v107;
    uint64_t v91 = v111;
    uint64_t v92 = v114;
    char v93 = v115;
    sub_1DB1F0990();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v89, v92);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v93, v91);
    uint64_t v94 = sub_1DB1F0C00();
    uint64_t v95 = v108;
    uint64_t v96 = (uint64_t)v106;
    uint64_t v97 = v110;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v106, v90, v110);
    *(void *)(v96 + *(int *)(v82 + 36)) = v94;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v90, v97);
    sub_1DB0F1454(v96, v83, &qword_1EA9041D8);
    uint64_t v98 = 0;
  }
  else
  {
    uint64_t v98 = 1;
  }
  uint64_t v71 = v131;
LABEL_14:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v83, v98, 1, v82);
  uint64_t v99 = (uint64_t)v128;
  sub_1DB0E8B70(v71, (uint64_t)v128, &qword_1EA904208);
  sub_1DB0E8B70(v83, v81, &qword_1EA9041E0);
  sub_1DB0E8B70(v99, v80, &qword_1EA904208);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904218);
  sub_1DB0E8B70(v81, v80 + *(int *)(v100 + 48), &qword_1EA9041E0);
  sub_1DB0E8BD4(v83, &qword_1EA9041E0);
  sub_1DB0E8BD4(v71, &qword_1EA904208);
  sub_1DB0E8BD4(v81, &qword_1EA9041E0);
  return sub_1DB0E8BD4(v99, &qword_1EA904208);
}

uint64_t sub_1DB106A58(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  char v15 = a3;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
  MEMORY[0x1E018ADF0](&v12);
  sub_1DB1F0E00();
  swift_release();
  swift_release();
  uint64_t result = type metadata accessor for ExpandingText();
  uint64_t v11 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + *(int *)(result + 28));
  if (*v11) {
    return (*v11)(result, v6, v7, v8, v9, v10);
  }
  return result;
}

uint64_t sub_1DB106B24@<X0>(uint64_t a1@<X8>)
{
  sub_1DB1F0250();
  uint64_t v2 = sub_1DB1F0920();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_1DB1F0740();
  uint64_t v7 = sub_1DB1F0910();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_1DB0EB23C(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = sub_1DB1F0710();
  uint64_t result = sub_1DB1EFAC0();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v2;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v15;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = v18;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_1DB106C2C()
{
  return sub_1DB1EFF90();
}

uint64_t sub_1DB106C50(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFE00();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1DB1EFFA0();
}

uint64_t sub_1DB106D18()
{
  return sub_1DB1EFC90();
}

uint64_t sub_1DB106D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ExpandingText();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041B8);
  sub_1DB1F0D20();
  if (v5 == 3) {
    sub_1DB104178();
  }
  swift_retain();
  sub_1DB1F0D20();
  sub_1DB1F0D30();
  uint64_t result = swift_release();
  if (*(void *)(a3 + 24))
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    sub_1DB1F0E00();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DB106E88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1F0090();
  *a1 = result;
  return result;
}

uint64_t sub_1DB106EB4()
{
  return sub_1DB1F00A0();
}

uint64_t sub_1DB106EE0()
{
  return sub_1DB1EFF90();
}

uint64_t sub_1DB106F08(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DB106F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB106FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB107020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB107084@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ExpandingText() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DB105C4C(v4, a1);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = (int *)type metadata accessor for ExpandingText();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v4 = v3 + v1[6];
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(v3 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v7 = v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v3 + v1[14];
  uint64_t v10 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1DB10738C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ExpandingText() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DB105D88(a1, v4, v5, v6);
}

uint64_t sub_1DB107400()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB107440()
{
  return sub_1DB10BEFC();
}

uint64_t sub_1DB10744C()
{
  uint64_t v1 = (int *)type metadata accessor for ExpandingText();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v3 = v2 + v1[6];
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  if (*(void *)(v2 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v6 = v2 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + v1[14];
  uint64_t v9 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

uint64_t sub_1DB1076D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ExpandingText() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1DB106D3C(a1, a2, v6);
}

unint64_t sub_1DB107754()
{
  unint64_t result = qword_1EA904138;
  if (!qword_1EA904138)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904120);
    sub_1DB1077F4();
    sub_1DB0E3C44(&qword_1EA903758, &qword_1EA903730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904138);
  }
  return result;
}

unint64_t sub_1DB1077F4()
{
  unint64_t result = qword_1EA904140;
  if (!qword_1EA904140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904108);
    sub_1DB109994(&qword_1EA904148, &qword_1EA9039F0, (void (*)(void))sub_1DB1078C0);
    sub_1DB0E3C44(&qword_1EA903750, &qword_1EA903728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904140);
  }
  return result;
}

unint64_t sub_1DB1078C0()
{
  unint64_t result = qword_1EA904150;
  if (!qword_1EA904150)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9039E8);
    sub_1DB107960();
    sub_1DB0E3C44(&qword_1EA904170, &qword_1EA904130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904150);
  }
  return result;
}

unint64_t sub_1DB107960()
{
  unint64_t result = qword_1EA904158;
  if (!qword_1EA904158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904118);
    sub_1DB0E3C44(&qword_1EA904160, &qword_1EA904110);
    sub_1DB107A00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904158);
  }
  return result;
}

unint64_t sub_1DB107A00()
{
  unint64_t result = qword_1EA904168;
  if (!qword_1EA904168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904168);
  }
  return result;
}

uint64_t sub_1DB107A54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ExpandingText(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    }
    uint64_t v10 = a3[6];
    char v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1DB1EF6B0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    if (*v18)
    {
      uint64_t v19 = v18[1];
      void *v17 = *v18;
      v17[1] = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = a1 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
    *(void *)(v22 + 8) = *(void *)(v23 + 8);
    uint64_t v24 = (void *)(a1 + v21);
    uint64_t v25 = (uint64_t *)((char *)a2 + v21);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = (void *)(a1 + v27);
    uint64_t v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a1 + v28;
    uint64_t v33 = (uint64_t)a2 + v28;
    *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
    *(void *)(v32 + 8) = *(void *)(v33 + 8);
    uint64_t v34 = a3[12];
    uint64_t v35 = a1 + v34;
    uint64_t v36 = (uint64_t *)((char *)a2 + v34);
    uint64_t v37 = *v36;
    char v38 = *((unsigned char *)v36 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(void *)uint64_t v35 = v37;
    *(unsigned char *)(v35 + 8) = v38;
    uint64_t v39 = a3[13];
    uint64_t v40 = (void *)(a1 + v39);
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_1DB1EFE00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      *uint64_t v40 = *v41;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = a3[14];
    uint64_t v44 = a1 + v43;
    uint64_t v45 = (uint64_t)a2 + v43;
    uint64_t v46 = sub_1DB1F08D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  }
  return a1;
}

uint64_t destroy for ExpandingText(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(a1 + a2[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v7 = a1 + a2[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[14];
  uint64_t v10 = sub_1DB1F08D0();
  char v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

uint64_t initializeWithCopy for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  if (*v16)
  {
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  uint64_t v22 = (void *)(a1 + v19);
  uint64_t v23 = (void *)(a2 + v19);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a1 + v26;
  uint64_t v31 = a2 + v26;
  *(unsigned char *)uint64_t v30 = *(unsigned char *)v31;
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  uint64_t v32 = a3[12];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v35 = *v34;
  char v36 = *((unsigned char *)v34 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v36;
  uint64_t v37 = a3[13];
  char v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_1DB1EFE00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  }
  else
  {
    *char v38 = *v39;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = a3[14];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  return a1;
}

uint64_t assignWithCopy for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v8)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_retain();
      swift_release();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_retain();
      swift_release();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    }
    else
    {
      sub_1DB0E8BD4(a1 + 16, &qword_1EA903B68);
      char v9 = *(unsigned char *)(a2 + 32);
      *uint64_t v6 = *v7;
      *(unsigned char *)(a1 + 32) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v10 = *v7;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *uint64_t v6 = v10;
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1DB1EF6B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_13:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_14:
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a1 + v20);
  uint64_t v24 = *(void *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = *(void *)(v22 + 8);
      *uint64_t v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *(void *)(v22 + 8);
    *uint64_t v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_21;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_21:
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_retain();
  swift_release();
  uint64_t v33 = a3[10];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_retain();
  swift_release();
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(unsigned char *)uint64_t v37 = *(unsigned char *)v38;
  *(void *)(v37 + 8) = *(void *)(v38 + 8);
  swift_retain();
  swift_release();
  uint64_t v39 = a3[12];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v42 = *v41;
  char v43 = *((unsigned char *)v41 + 8);
  j__swift_retain();
  *(void *)uint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = v43;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v44 = a3[13];
    uint64_t v45 = (void *)(a1 + v44);
    uint64_t v46 = (void *)(a2 + v44);
    sub_1DB0E8BD4(a1 + v44, &qword_1EA904100);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = sub_1DB1EFE00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    }
    else
    {
      *uint64_t v45 = *v46;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v48 = a3[14];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  return a1;
}

uint64_t initializeWithTake for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = *v15;
  if (*v15)
  {
    uint64_t v17 = v15[1];
    void *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  uint64_t v18 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = (void *)(a1 + v21);
  uint64_t v25 = (const void *)(a2 + v21);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_1DB1EFE00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v28 = a3[14];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

uint64_t assignWithTake for ExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_release();
      *(void *)(a1 + 24) = v7;
      swift_release();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      goto LABEL_6;
    }
    sub_1DB0E8BD4(a1 + 16, &qword_1EA903B68);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_6:
  uint64_t v8 = a3[6];
  char v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_12:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a1 + v17);
  uint64_t v21 = *(void *)(a2 + v17);
  if (v20)
  {
    if (v21)
    {
      uint64_t v22 = *(void *)(v19 + 8);
      *uint64_t v18 = v21;
      v18[1] = v22;
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  else if (v21)
  {
    uint64_t v23 = *(void *)(v19 + 8);
    *uint64_t v18 = v21;
    v18[1] = v23;
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
LABEL_19:
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  swift_release();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_release();
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  void *v31 = v34;
  v31[1] = v33;
  swift_release();
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
  *(void *)(v36 + 8) = *(void *)(v37 + 8);
  swift_release();
  uint64_t v38 = a3[12];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v41 = *v40;
  LOBYTE(v4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)v40 + 8);
  *(void *)uint64_t v39 = v41;
  *(unsigned char *)(v39 + 8) = (_BYTE)v40;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v42 = a3[13];
    char v43 = (void *)(a1 + v42);
    uint64_t v44 = (const void *)(a2 + v42);
    sub_1DB0E8BD4(a1 + v42, &qword_1EA904100);
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v46 = sub_1DB1EFE00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
  }
  uint64_t v47 = a3[14];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpandingText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB108E40);
}

uint64_t sub_1DB108E40(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904178);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[13];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1DB1F08D0();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[14];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ExpandingText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB108FD4);
}

uint64_t sub_1DB108FD4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904178);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[13];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1DB1F08D0();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[14];
  return v15(v17, a2, a2, v16);
}

void sub_1DB109154()
{
  sub_1DB1092E8(319, (unint64_t *)&qword_1EBA4E5E0, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1DB1092E8(319, &qword_1EA904190, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3C648]);
    if (v1 <= 0x3F)
    {
      sub_1DB1F08D0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1DB1092E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DB10934C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LayoutOptions()
{
  return &type metadata for LayoutOptions;
}

unint64_t sub_1DB1093D0()
{
  unint64_t result = qword_1EA904198;
  if (!qword_1EA904198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904198);
  }
  return result;
}

unint64_t sub_1DB109428()
{
  unint64_t result = qword_1EA9041A0;
  if (!qword_1EA9041A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9041A0);
  }
  return result;
}

unint64_t sub_1DB109480()
{
  unint64_t result = qword_1EA9041A8;
  if (!qword_1EA9041A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9041A8);
  }
  return result;
}

unint64_t sub_1DB1094D8()
{
  unint64_t result = qword_1EA9041B0;
  if (!qword_1EA9041B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9041B0);
  }
  return result;
}

uint64_t sub_1DB10952C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExpandingText();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB109588(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DB1095C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DB109610()
{
  unint64_t v1 = (int *)type metadata accessor for ExpandingText();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v4 = v3 + v1[6];
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(v3 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v7 = v3 + v1[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v3 + v1[14];
  uint64_t v10 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1DB1098A8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ExpandingText() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DB106A58(v2, v3, v4, v5);
}

uint64_t sub_1DB109910@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB106B24(a1);
}

unint64_t sub_1DB109918()
{
  unint64_t result = qword_1EA904230;
  if (!qword_1EA904230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904230);
  }
  return result;
}

uint64_t sub_1DB109994(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB109A10()
{
  unint64_t result = qword_1EA904270;
  if (!qword_1EA904270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904278);
    sub_1DB109918();
    sub_1DB0E3C44(&qword_1EA904280, &qword_1EA904288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904270);
  }
  return result;
}

uint64_t sub_1DB109AB4()
{
  return 1;
}

uint64_t sub_1DB109ABC()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB109B10()
{
  return sub_1DB1F1360();
}

uint64_t sub_1DB109B28()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB109B78@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1DB1F1C10();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1DB109BCC(void *a1@<X8>)
{
  *a1 = 0x64656C6261736964;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1DB109BF8()
{
  return 0x64656C6261736964;
}

const char *TranslateFeatures.domain.getter()
{
  return "Translate";
}

const char *TranslateFeatures.feature.getter()
{
  uint64_t result = "EnableVisualIntelligenceUI";
  switch(*v0)
  {
    case 1:
      uint64_t result = "asset_services";
      break;
    case 2:
      uint64_t result = "asset_services_adaptive_refresh";
      break;
    case 3:
      uint64_t result = "refresh_system_translation";
      break;
    case 4:
      uint64_t result = "lowConfidenceLID";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t TranslateFeatures.isEnabled.getter()
{
  char v1 = *v0;
  uint64_t v5 = &type metadata for TranslateFeatures;
  unint64_t v6 = sub_1DB109D10();
  v4[0] = v1;
  char v2 = sub_1DB1EF710();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_1DB109D10()
{
  unint64_t result = qword_1EBA4E470;
  if (!qword_1EBA4E470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4E470);
  }
  return result;
}

BOOL static TranslateFeatures.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranslateFeatures.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t TranslateFeatures.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

BOOL sub_1DB109DEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1DB109E04()
{
  unint64_t result = qword_1EA904298;
  if (!qword_1EA904298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904298);
  }
  return result;
}

const char *sub_1DB109E58()
{
  return "Translate";
}

const char *sub_1DB109E6C()
{
  unint64_t result = "EnableVisualIntelligenceUI";
  switch(*v0)
  {
    case 1:
      unint64_t result = "asset_services";
      break;
    case 2:
      unint64_t result = "asset_services_adaptive_refresh";
      break;
    case 3:
      unint64_t result = "refresh_system_translation";
      break;
    case 4:
      unint64_t result = "lowConfidenceLID";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranslateFeatures(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranslateFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB10A05CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslateFeatures()
{
  return &type metadata for TranslateFeatures;
}

uint64_t getEnumTagSinglePayload for TranslateFeaturesError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for TranslateFeaturesError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DB10A184);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB10A1AC()
{
  return 0;
}

ValueMetadata *type metadata accessor for TranslateFeaturesError()
{
  return &type metadata for TranslateFeaturesError;
}

unint64_t sub_1DB10A1C8()
{
  unint64_t result = qword_1EA9042A0;
  if (!qword_1EA9042A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9042A0);
  }
  return result;
}

uint64_t GenderDisambiguationLearnMoreView.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  return swift_storeEnumTagMultiPayload();
}

uint64_t GenderDisambiguationLearnMoreView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9042A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9042B0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9042B8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9042C0);
  unint64_t v9 = sub_1DB10ABA0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9042D8);
  uint64_t v11 = sub_1DB0E3C44(&qword_1EA9042E0, &qword_1EA9042D8);
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v7;
  uint64_t v22 = v8;
  unint64_t v23 = v9;
  uint64_t v24 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1DB1EFE30();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v15 = sub_1DB1F0C70();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  uint64_t v17 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9042E8) + 36));
  uint64_t *v17 = KeyPath;
  v17[1] = v15;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DB10A4D8()
{
  return sub_1DB1F0B20();
}

uint64_t sub_1DB10A5E4(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F0460();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9042D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DB1F0430();
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038B8);
  sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
  sub_1DB1EFB70();
  uint64_t v7 = sub_1DB0E3C44(&qword_1EA9042E0, &qword_1EA9042D8);
  MEMORY[0x1E018A4B0](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DB10A7AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenderDisambiguationLearnMoreView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DB10B920(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1DB10BA88((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return sub_1DB1F0D70();
}

uint64_t sub_1DB10A8D8()
{
  uint64_t v0 = sub_1DB1EFC80();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1C50EC((uint64_t)v3);
  sub_1DB1EFC70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DB10A9A4@<X0>(uint64_t a1@<X8>)
{
  sub_1DB1F0250();
  uint64_t result = sub_1DB1F0920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1DB10AA24()
{
  return sub_1DB1F05F0();
}

uint64_t sub_1DB10AA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1DB10B52C();
  return MEMORY[0x1F40FAB70](a1, a2, a3, v6);
}

uint64_t sub_1DB10AAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1DB10B52C();
  return MEMORY[0x1F40FAB28](a1, a2, a3, v6);
}

void sub_1DB10AB28()
{
}

uint64_t sub_1DB10AB50()
{
  return sub_1DB1F00C0();
}

uint64_t sub_1DB10AB74()
{
  return sub_1DB1F00C0();
}

uint64_t sub_1DB10AB98()
{
  return sub_1DB10A4D8();
}

unint64_t sub_1DB10ABA0()
{
  unint64_t result = qword_1EA9042C8;
  if (!qword_1EA9042C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9042B8);
    sub_1DB10AC1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9042C8);
  }
  return result;
}

unint64_t sub_1DB10AC1C()
{
  unint64_t result = qword_1EA9042D0;
  if (!qword_1EA9042D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9042D0);
  }
  return result;
}

uint64_t sub_1DB10AC70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1F0130();
  *a1 = result;
  return result;
}

uint64_t sub_1DB10AC9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1F0130();
  *a1 = result;
  return result;
}

uint64_t sub_1DB10ACC8()
{
  return sub_1DB1F0140();
}

uint64_t sub_1DB10ACF4()
{
  return sub_1DB1F0140();
}

uint64_t sub_1DB10AD20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for GenderDisambiguationLearnMoreView(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1DB1EFC80();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for GenderDisambiguationLearnMoreView(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1DB1EFC80();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for GenderDisambiguationLearnMoreView(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1DB1EFC80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for GenderDisambiguationLearnMoreView(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DB10B074((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1DB1EFC80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DB10B074(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for GenderDisambiguationLearnMoreView(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1DB1EFC80();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for GenderDisambiguationLearnMoreView(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1DB10B074((uint64_t)a1);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1DB1EFC80();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GenderDisambiguationLearnMoreView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB10B280);
}

uint64_t sub_1DB10B280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903858);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GenderDisambiguationLearnMoreView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB10B304);
}

uint64_t sub_1DB10B304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903858);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GenderDisambiguationLearnMoreView()
{
  uint64_t result = qword_1EBA4D710;
  if (!qword_1EBA4D710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DB10B3C4()
{
  sub_1DB0E9580();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1DB10B454()
{
  unint64_t result = qword_1EA9042F0;
  if (!qword_1EA9042F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9042E8);
    sub_1DB0E3C44(&qword_1EA9042F8, &qword_1EA9042A8);
    sub_1DB0E3C44(&qword_1EA904280, &qword_1EA904288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9042F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenderDisambiguationOnboardingViewController()
{
  return &type metadata for GenderDisambiguationOnboardingViewController;
}

unint64_t sub_1DB10B52C()
{
  unint64_t result = qword_1EA904300;
  if (!qword_1EA904300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904300);
  }
  return result;
}

void sub_1DB10B580()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB10B8D0();
  uint64_t v3 = (void *)sub_1DB1F1260();
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__systemImageNamed_, v3);

  if (!v4)
  {
    id v8 = 0;
    goto LABEL_5;
  }
  id v5 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v6 = (void *)sub_1DB1F1260();
  id v7 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  if (v7)
  {
    id v8 = objc_msgSend(v4, sel_imageWithTintColor_, v7);

LABEL_5:
    sub_1DB1EF400();
    id v9 = objc_allocWithZone(MEMORY[0x1E4F83AE8]);
    id v10 = v8;
    uint64_t v11 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v9, sel_initWithTitle_detailText_icon_, v11, 0, v10, 0xE000000000000000);

    sub_1DB1EF400();
    uint64_t v13 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_addSectionWithHeader_content_, 0, v13, 0xE000000000000000);

    sub_1DB1EF400();
    id v14 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_addSectionWithHeader_content_, 0, v14, 0xE000000000000000);

    sub_1DB1EF400();
    uint64_t v15 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_addSectionWithHeader_content_, 0, v15, 0xE000000000000000);

    return;
  }
  __break(1u);
}

unint64_t sub_1DB10B8D0()
{
  unint64_t result = qword_1EA904308;
  if (!qword_1EA904308)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA904308);
  }
  return result;
}

uint64_t sub_1DB10B910()
{
  return sub_1DB10A5E4(*(void *)(v0 + 16));
}

uint64_t sub_1DB10B918()
{
  return sub_1DB10A7AC(*(void *)(v0 + 16));
}

uint64_t sub_1DB10B920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenderDisambiguationLearnMoreView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB10B984()
{
  uint64_t v1 = *(void *)(type metadata accessor for GenderDisambiguationLearnMoreView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_1DB1EFC80();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB10BA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenderDisambiguationLearnMoreView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB10BAEC()
{
  type metadata accessor for GenderDisambiguationLearnMoreView();
  return sub_1DB10A8D8();
}

uint64_t View.bindGeometry(to:reader:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  v20[0] = a2;
  v20[1] = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA903728);
  uint64_t v12 = sub_1DB1EFE20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v20 - v14;
  v20[4] = a3;
  v20[5] = a4;
  swift_retain();
  sub_1DB1F0F60();
  sub_1DB10BD78();
  sub_1DB1F0970();
  swift_release();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v20[0];
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = v17;
  *(double *)(v16 + 32) = a7;
  uint64_t v18 = sub_1DB0E3C44(&qword_1EA903750, &qword_1EA903728);
  _OWORD v20[2] = a5;
  v20[3] = v18;
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  sub_1DB10BFE4();
  sub_1DB10C038();
  sub_1DB1F0A50();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1DB10BD78()
{
  unint64_t result = qword_1EA904318;
  if (!qword_1EA904318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904318);
  }
  return result;
}

void sub_1DB10BDCC()
{
  qword_1EA904310 = 0;
}

double sub_1DB10BDD8@<D0>(void *a1@<X8>)
{
  if (qword_1EA903520 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1EA904310;
  *a1 = qword_1EA904310;
  return result;
}

void *sub_1DB10BE34(double *a1, void *(*a2)(double *__return_ptr))
{
  double v3 = *a1;
  double result = a2(&v6);
  double v5 = v6;
  if (v3 > v6) {
    double v5 = v3;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1DB10BE90@<X0>(void (**a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a1 = sub_1DB10C334;
  a1[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v5;
  return swift_retain();
}

uint64_t sub_1DB10BEFC()
{
  return sub_1DB1F0E00();
}

uint64_t sub_1DB10BF4C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB10BF8C()
{
  return sub_1DB1F0E00();
}

unint64_t sub_1DB10BFE4()
{
  unint64_t result = qword_1EA904320;
  if (!qword_1EA904320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904320);
  }
  return result;
}

unint64_t sub_1DB10C038()
{
  unint64_t result = qword_1EA904328;
  if (!qword_1EA904328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904328);
  }
  return result;
}

uint64_t sub_1DB10C08C()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for GeometryPreference()
{
  return &type metadata for GeometryPreference;
}

void *initializeBufferWithCopyOfBuffer for GeometryBinding(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for GeometryBinding()
{
  return swift_release();
}

void *assignWithCopy for GeometryBinding(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for GeometryBinding(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeometryBinding(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeometryBinding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeometryBinding()
{
  return &type metadata for GeometryBinding;
}

uint64_t sub_1DB10C2E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB10C2FC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DB10C334(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(double (**)(uint64_t))(v2 + 16);
  uint64_t v6 = sub_1DB1F0C20();
  double v7 = v5(a1);
  *(void *)a2 = v6;
  *(double *)(a2 + 8) = v7;
}

uint64_t sub_1DB10C388()
{
  return sub_1DB0E3C44(&qword_1EA904338, &qword_1EA904340);
}

uint64_t GrayCapsuleButton.init(title:action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t GrayCapsuleButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v55 = a1;
  uint64_t v3 = sub_1DB1EFF10();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x1F4188790](v3);
  char v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1F02D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  uint64_t v51 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038B8);
  uint64_t v8 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  id v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904348);
  MEMORY[0x1F4188790](v45);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904350);
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v49 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v44 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904358);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v2;
  uint64_t v19 = v2[1];
  uint64_t v22 = v2[2];
  uint64_t v21 = v2[3];
  unint64_t v23 = (void *)swift_allocObject();
  v23[2] = v20;
  v23[3] = v19;
  v23[4] = v22;
  v23[5] = v21;
  uint64_t v56 = v20;
  uint64_t v57 = v19;
  uint64_t v58 = v22;
  uint64_t v59 = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB1F0D70();
  uint64_t v24 = sub_1DB1F0C60();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v46;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v46);
  uint64_t v27 = (uint64_t *)&v12[*(int *)(v45 + 36)];
  *uint64_t v27 = KeyPath;
  v27[1] = v24;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  uint64_t v28 = v47;
  sub_1DB1F02C0();
  sub_1DB10CA44();
  sub_1DB10CB08();
  uint64_t v29 = v44;
  uint64_t v30 = v50;
  sub_1DB1F0990();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v30);
  sub_1DB0E8BD4((uint64_t)v12, &qword_1EA904348);
  uint64_t v31 = v52;
  sub_1DB1EFF00();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904370);
  uint64_t v36 = v53;
  uint64_t v35 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v33 + *(int *)(v34 + 28), v31, v54);
  *uint64_t v33 = v32;
  uint64_t v38 = v48;
  uint64_t v37 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v18, v29, v49);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v35);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v37);
  uint64_t v39 = sub_1DB1F0C00();
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = v55;
  sub_1DB10CCA8((uint64_t)v18, v55);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904378) + 36));
  *uint64_t v42 = v40;
  v42[1] = v39;
  return sub_1DB0E8BD4((uint64_t)v18, &qword_1EA904358);
}

uint64_t sub_1DB10C900()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB10C940()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1DB10C968@<X0>(uint64_t a1@<X8>)
{
  sub_1DB0F0708();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DB1F0930();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1DB10C9D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB10C968(a1);
}

uint64_t sub_1DB10C9E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1EFF70();
  *a1 = result;
  return result;
}

uint64_t sub_1DB10CA10()
{
  return sub_1DB1EFF80();
}

unint64_t sub_1DB10CA44()
{
  unint64_t result = qword_1EA904360;
  if (!qword_1EA904360)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904348);
    sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
    sub_1DB0E3C44(&qword_1EA904280, &qword_1EA904288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904360);
  }
  return result;
}

unint64_t sub_1DB10CB08()
{
  unint64_t result = qword_1EA904368;
  if (!qword_1EA904368)
  {
    sub_1DB1F02D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904368);
  }
  return result;
}

uint64_t sub_1DB10CB60()
{
  return sub_1DB1F0020();
}

uint64_t sub_1DB10CB84(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFF10();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1DB1F0030();
}

uint64_t sub_1DB10CC50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1EFF70();
  *a1 = result;
  return result;
}

uint64_t sub_1DB10CC7C()
{
  return sub_1DB1EFF80();
}

uint64_t sub_1DB10CCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB10CD10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for GrayCapsuleButton()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for GrayCapsuleButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for GrayCapsuleButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GrayCapsuleButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for GrayCapsuleButton()
{
  return &type metadata for GrayCapsuleButton;
}

unint64_t sub_1DB10CE80()
{
  unint64_t result = qword_1EA904380;
  if (!qword_1EA904380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904378);
    sub_1DB10CF20();
    sub_1DB0E3C44(&qword_1EA904280, &qword_1EA904288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904380);
  }
  return result;
}

unint64_t sub_1DB10CF20()
{
  unint64_t result = qword_1EA904388;
  if (!qword_1EA904388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904358);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904348);
    sub_1DB1F02D0();
    sub_1DB10CA44();
    sub_1DB10CB08();
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA904390, &qword_1EA904370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904388);
  }
  return result;
}

uint64_t static HostedDownloadViewBridge.viewController.getter()
{
  return sub_1DB10D0E0(0);
}

id sub_1DB10D02C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1F4188790](v4 - 8);
  char v10 = a3;
  LanguageDownloadView.init(context:)(&v10, (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0)));
  id v6 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904398));
  uint64_t v7 = (void *)sub_1DB1F0340();
  return v7;
}

uint64_t static HostedDownloadViewBridge.accessibilityViewController.getter()
{
  return sub_1DB10D0E0(1);
}

uint64_t sub_1DB10D0E0(char a1)
{
  uint64_t v2 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1F4188790](v2 - 8);
  char v7 = a1;
  LanguageDownloadView.init(context:)(&v7, (uint64_t *)((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0)));
  id v4 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904398));
  return sub_1DB1F0340();
}

id HostedDownloadViewBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id HostedDownloadViewBridge.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HostedDownloadViewBridge();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for HostedDownloadViewBridge()
{
  return self;
}

id HostedDownloadViewBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HostedDownloadViewBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static ImageTranslationButtonStyle.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ImageTranslationButtonStyle.Style.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t ImageTranslationButtonStyle.Style.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

uint64_t ImageTranslationButtonStyle.init(style:highlighted:)@<X0>(char *a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  char v5 = *a1;
  a3[1] = 0;
  uint64_t v6 = (uint64_t *)&a3[*(int *)(type metadata accessor for ImageTranslationButtonStyle() + 24)];
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A0);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a3 = v5;
  a3[1] = a2;
  return result;
}

uint64_t type metadata accessor for ImageTranslationButtonStyle()
{
  uint64_t result = qword_1EA9043F0;
  if (!qword_1EA9043F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ImageTranslationButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v51 = a2;
  uint64_t v5 = sub_1DB1F0E40();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A8);
  MEMORY[0x1F4188790](v48);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DB1F0570();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043B0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043B8);
  MEMORY[0x1F4188790](v44);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043C0);
  MEMORY[0x1F4188790](v45);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043C8);
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a1;
  sub_1DB1F0580();
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v12, v9);
  uint64_t v22 = &v16[*(int *)(v14 + 44)];
  long long v23 = v53;
  *(_OWORD *)uint64_t v22 = v52;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v54;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v3[1] == 1) {
    uint64_t v24 = sub_1DB1F0C10();
  }
  else {
    uint64_t v24 = sub_1DB1F0C50();
  }
  uint64_t v25 = v24;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1DB0E8B70((uint64_t)v16, (uint64_t)v18, &qword_1EA9043B0);
  uint64_t v27 = (uint64_t *)&v18[*(int *)(v44 + 36)];
  *uint64_t v27 = KeyPath;
  v27[1] = v25;
  sub_1DB0E8BD4((uint64_t)v16, &qword_1EA9043B0);
  if (*v3) {
    uint64_t v28 = sub_1DB1F0740();
  }
  else {
    uint64_t v28 = sub_1DB1F0760();
  }
  uint64_t v29 = v28;
  uint64_t v30 = swift_getKeyPath();
  sub_1DB0E8B70((uint64_t)v18, (uint64_t)v20, &qword_1EA9043B8);
  uint64_t v31 = (uint64_t *)&v20[*(int *)(v45 + 36)];
  uint64_t *v31 = v30;
  v31[1] = v29;
  sub_1DB0E8BD4((uint64_t)v18, &qword_1EA9043B8);
  uint64_t v32 = *MEMORY[0x1E4F3D4A0];
  uint64_t v33 = sub_1DB1F02B0();
  uint64_t v34 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v49, v32, v33);
  uint64_t v35 = sub_1DB10D8C8(v50);
  sub_1DB10DE88(v34, (uint64_t)v8);
  uint64_t v36 = v48;
  *(void *)&v8[*(int *)(v48 + 52)] = v35;
  *(_WORD *)&v8[*(int *)(v36 + 56)] = 256;
  sub_1DB10DEEC(v34);
  uint64_t v37 = sub_1DB1F0F60();
  uint64_t v39 = v38;
  uint64_t v40 = (uint64_t)v46;
  uint64_t v41 = (uint64_t)&v46[*(int *)(v47 + 36)];
  sub_1DB0E8B70((uint64_t)v8, v41, &qword_1EA9043A8);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043D0) + 36));
  *uint64_t v42 = v37;
  v42[1] = v39;
  sub_1DB0E8B70((uint64_t)v20, v40, &qword_1EA9043C0);
  sub_1DB0E8BD4((uint64_t)v8, &qword_1EA9043A8);
  sub_1DB0E8BD4((uint64_t)v20, &qword_1EA9043C0);
  return sub_1DB10DF48(v40, v51);
}

uint64_t sub_1DB10D8C8(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v2 = sub_1DB1F0F20();
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1F04F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904430);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E0);
  MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v28 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v28 - v18;
  if (*(unsigned char *)(v1 + 1) != 1)
  {
    uint64_t v29 = v17;
    uint64_t v30 = v4;
    v28[0] = v8;
    v28[1] = v2;
    type metadata accessor for ImageTranslationButtonStyle();
    sub_1DB1C5638((uint64_t)v19);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v15, *MEMORY[0x1E4F3DA48], v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
    uint64_t v20 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1DB0E8B70((uint64_t)v19, (uint64_t)v11, &qword_1EA9043E0);
    sub_1DB0E8B70((uint64_t)v15, v20, &qword_1EA9043E0);
    uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v21((uint64_t)v11, 1, v5) == 1)
    {
      sub_1DB0E8BD4((uint64_t)v15, &qword_1EA9043E0);
      sub_1DB0E8BD4((uint64_t)v19, &qword_1EA9043E0);
      if (v21(v20, 1, v5) == 1)
      {
        sub_1DB0E8BD4((uint64_t)v11, &qword_1EA9043E0);
LABEL_13:
        if ((sub_1DB1F0590() & 1) == 0)
        {
          LODWORD(v32) = sub_1DB1F04D0();
          return sub_1DB1EFC10();
        }
        sub_1DB1F0C30();
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v22 = v29;
      sub_1DB0E8B70((uint64_t)v11, v29, &qword_1EA9043E0);
      if (v21(v20, 1, v5) != 1)
      {
        uint64_t v23 = v28[0];
        (*(void (**)(void, uint64_t, uint64_t))(v6 + 32))(v28[0], v20, v5);
        sub_1DB10EF50(&qword_1EA904438, MEMORY[0x1E4F3DA68]);
        char v24 = sub_1DB1F1230();
        uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v25(v23, v5);
        sub_1DB0E8BD4((uint64_t)v15, &qword_1EA9043E0);
        sub_1DB0E8BD4((uint64_t)v19, &qword_1EA9043E0);
        v25(v22, v5);
        sub_1DB0E8BD4((uint64_t)v11, &qword_1EA9043E0);
        if (v24) {
          goto LABEL_13;
        }
LABEL_9:
        if ((sub_1DB1F0590() & 1) == 0)
        {
          sub_1DB1F0F00();
          return sub_1DB1EFC10();
        }
        sub_1DB1F0C10();
LABEL_15:
        uint64_t v26 = sub_1DB1F0C40();
        swift_release();
        uint64_t v32 = v26;
        return sub_1DB1EFC10();
      }
      sub_1DB0E8BD4((uint64_t)v15, &qword_1EA9043E0);
      sub_1DB0E8BD4((uint64_t)v19, &qword_1EA9043E0);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
    }
    sub_1DB0E8BD4((uint64_t)v11, &qword_1EA904430);
    goto LABEL_9;
  }
  uint64_t v32 = sub_1DB1F0C30();
  return sub_1DB1EFC10();
}

uint64_t sub_1DB10DDBC()
{
  return sub_1DB1F0040();
}

uint64_t sub_1DB10DDE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DB0E8B70(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EA9043E0);
  return sub_1DB1F0050();
}

uint64_t sub_1DB10DE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1F0E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB10DEEC(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F0E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB10DF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DB10DFB4()
{
  unint64_t result = qword_1EA9043D8;
  if (!qword_1EA9043D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9043D8);
  }
  return result;
}

uint64_t sub_1DB10E008()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for ImageTranslationButtonStyle(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *((unsigned char *)a2 + 1);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = &a1[v5];
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1DB1F04F0();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E0);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      *uint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for ImageTranslationButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_1DB1F04F0();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
    if (!result)
    {
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(v2, v3);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

unsigned char *initializeWithCopy for ImageTranslationButtonStyle(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1DB1F04F0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E0);
      memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    }
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for ImageTranslationButtonStyle(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_1DB0E8BD4((uint64_t)&a1[v4], &qword_1EA9043A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1DB1F04F0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E0);
        memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
      }
    }
    else
    {
      *uint64_t v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for ImageTranslationButtonStyle(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1F04F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E0);
      memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for ImageTranslationButtonStyle(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_1DB0E8BD4((uint64_t)&a1[v4], &qword_1EA9043A0);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1DB1F04F0();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E0);
        memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v5, v6, v8);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageTranslationButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB10E960);
}

uint64_t sub_1DB10E960(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E8);
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 24)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ImageTranslationButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB10EA20);
}

unsigned char *sub_1DB10EA20(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9043E8);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DB10EAC8()
{
  sub_1DB10EB60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DB10EB60()
{
  if (!qword_1EA904400)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9043E0);
    unint64_t v0 = sub_1DB1EFB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA904400);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ImageTranslationButtonStyle.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB10EC88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageTranslationButtonStyle.Style()
{
  return &type metadata for ImageTranslationButtonStyle.Style;
}

unint64_t sub_1DB10ECC4()
{
  unint64_t result = qword_1EA904408;
  if (!qword_1EA904408)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9043C8);
    sub_1DB10ED64();
    sub_1DB0E3C44(&qword_1EA904428, &qword_1EA9043D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904408);
  }
  return result;
}

unint64_t sub_1DB10ED64()
{
  unint64_t result = qword_1EA904410;
  if (!qword_1EA904410)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9043C0);
    sub_1DB10EE04();
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904410);
  }
  return result;
}

unint64_t sub_1DB10EE04()
{
  unint64_t result = qword_1EA904418;
  if (!qword_1EA904418)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9043B8);
    sub_1DB10EEA4();
    sub_1DB0E3C44(&qword_1EA904280, &qword_1EA904288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904418);
  }
  return result;
}

unint64_t sub_1DB10EEA4()
{
  unint64_t result = qword_1EA904420;
  if (!qword_1EA904420)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9043B0);
    sub_1DB10EF50((unint64_t *)&qword_1EA903A98, MEMORY[0x1E4F3DB78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904420);
  }
  return result;
}

uint64_t sub_1DB10EF50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t LanguageDownloadView.init(context:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DB1F0EE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v31 - v9;
  char v11 = *a1;
  uint64_t v12 = (int *)type metadata accessor for LanguageDownloadView(0);
  uint64_t v13 = (uint64_t *)((char *)a2 + v12[5]);
  *uint64_t v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (char *)a2 + v12[6];
  LOBYTE(v32) = 0;
  sub_1DB1F0D10();
  uint64_t v15 = *((void *)&v33 + 1);
  char *v14 = v33;
  *((void *)v14 + 1) = v15;
  uint64_t v16 = (char *)a2 + v12[7];
  LOBYTE(v32) = 0;
  sub_1DB1F0D10();
  uint64_t v17 = *((void *)&v33 + 1);
  *uint64_t v16 = v33;
  *((void *)v16 + 1) = v17;
  uint64_t v18 = (char *)a2 + v12[8];
  LOBYTE(v32) = 0;
  sub_1DB1F0D10();
  uint64_t v19 = *((void *)&v33 + 1);
  *uint64_t v18 = v33;
  *((void *)v18 + 1) = v19;
  uint64_t v20 = v12[9];
  uint64_t v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904448);
  sub_1DB1F0D10();
  *(_OWORD *)((char *)a2 + v2__isPlatformVersionAtLeast(2, 18, 1, 0) = v33;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v10, *MEMORY[0x1E4F3EEE8], v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_1DB1F0D10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  uint64_t v21 = (uint64_t *)((char *)a2 + v12[11]);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v32 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  sub_1DB1F0D10();
  uint64_t v23 = *((void *)&v33 + 1);
  *uint64_t v21 = v33;
  v21[1] = v23;
  char v24 = (uint64_t *)((char *)a2 + v12[12]);
  uint64_t v32 = v22;
  sub_1DB1F0D10();
  uint64_t v25 = *((void *)&v33 + 1);
  *char v24 = v33;
  v24[1] = v25;
  uint64_t v26 = v12[13];
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(uint64_t *)((char *)a2 + v26) = (uint64_t)objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v28 = v12[14];
  LOBYTE(v33) = 0;
  type metadata accessor for LanguagesService();
  swift_allocObject();
  LanguagesService.init(task:)((unsigned __int8 *)&v33);
  sub_1DB1198E4(&qword_1EA904450, (void (*)(uint64_t))type metadata accessor for LanguagesService);
  uint64_t result = sub_1DB1EFDB0();
  *a2 = result;
  a2[1] = v30;
  *((unsigned char *)a2 + v28) = v11;
  return result;
}

uint64_t type metadata accessor for LanguageDownloadView(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA9044F8);
}

uint64_t sub_1DB10F328@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LanguageListItem(0);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v9 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v7);
  uint64_t v11 = v10;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v11)
  {
    v32[2] = v9;
    v32[3] = v11;
    sub_1DB0F0708();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DB1F0930();
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    uint64_t v18 = a1 + *(int *)(v8 + 24);
    uint64_t v19 = *(void *)v18;
    char v20 = *(unsigned char *)(v18 + 8);
    sub_1DB118D3C(*(void *)v18, v20);
    char v21 = sub_1DB1C5664(v19, v20);
    sub_1DB118DE4(v19, v20);
    uint64_t v22 = self;
    uint64_t v23 = &selRef_labelColor;
    if ((v21 & 1) == 0) {
      uint64_t v23 = &selRef_secondaryLabelColor;
    }
    MEMORY[0x1E018ABF0]([v22 *v23]);
    v32[0] = a2;
    uint64_t v24 = sub_1DB1F08E0();
    uint64_t v26 = v25;
    char v28 = v27;
    uint64_t v30 = v29;
    swift_release();
    uint64_t v31 = v28 & 1;
    sub_1DB0EB23C(v13, v15, v17);
    swift_bridgeObjectRelease();
    a2 = (uint64_t *)v32[0];
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v31 = 0;
    uint64_t v30 = 0;
  }
  *a2 = v24;
  a2[1] = v26;
  a2[2] = v31;
  a2[3] = v30;
  return result;
}

__n128 sub_1DB10F55C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1F02F0();
  sub_1DB10F328(v1, (uint64_t *)v6);
  __n128 result = (__n128)v6[0];
  long long v5 = v6[1];
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  return result;
}

uint64_t sub_1DB10F5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_1DB1F01C0();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904570);
  return sub_1DB10F60C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1DB10F60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for LanguageListItem(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  char v13 = *(unsigned char *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v27 = *(void *)(a1 + 80);
  uint64_t v15 = &v6[*(int *)(v4 + 32)];
  *(void *)uint64_t v15 = swift_getKeyPath();
  v15[8] = 0;
  *(void *)uint64_t v6 = v10;
  *((void *)v6 + 1) = v11;
  *((void *)v6 + 2) = v12;
  v6[24] = v13;
  *((void *)v6 + 4) = v27;
  *((void *)v6 + 5) = v14;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1DB1EF580();
  sub_1DB11963C((uint64_t)v6, (uint64_t)v9, type metadata accessor for LanguageListItem);
  if (v13)
  {
    type metadata accessor for LanguageDownloadButton(0);
    char v16 = sub_1DB1F0ED0();
    uint64_t v17 = v26;
    if (v16)
    {
      uint64_t v18 = 0;
      __int16 v19 = -256;
    }
    else
    {
      uint64_t v28 = 0;
      __int16 v29 = 257;
      sub_1DB1196A4();
      sub_1DB1F0400();
      uint64_t v18 = v30;
      if (v32) {
        __int16 v21 = 256;
      }
      else {
        __int16 v21 = 0;
      }
      __int16 v19 = v21 | v31;
    }
  }
  else
  {
    uint64_t v28 = v12;
    __int16 v29 = 0;
    sub_1DB1196A4();
    sub_1DB1F0400();
    uint64_t v18 = v30;
    if (v32) {
      __int16 v20 = 256;
    }
    else {
      __int16 v20 = 0;
    }
    __int16 v19 = v20 | v31;
    uint64_t v17 = v26;
  }
  sub_1DB1196F8((uint64_t)v9, (uint64_t)v6, type metadata accessor for LanguageListItem);
  sub_1DB1196F8((uint64_t)v6, v17, type metadata accessor for LanguageListItem);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904580);
  uint64_t v23 = v17 + *(int *)(v22 + 48);
  *(void *)uint64_t v23 = 0;
  *(unsigned char *)(v23 + 8) = 1;
  uint64_t v24 = v17 + *(int *)(v22 + 64);
  *(void *)uint64_t v24 = v18;
  *(_WORD *)(v24 + 8) = v19;
  sub_1DB119A14((uint64_t)v9, type metadata accessor for LanguageListItem);
  return sub_1DB119A14((uint64_t)v6, type metadata accessor for LanguageListItem);
}

uint64_t sub_1DB10F8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904550);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DB1196F8(v3, (uint64_t)&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for LanguageDownloadButton);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1DB11963C((uint64_t)&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11, type metadata accessor for LanguageDownloadButton);
  uint64_t v15 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904558);
  sub_1DB0E3C44(&qword_1EA904560, &qword_1EA904558);
  sub_1DB1F0D70();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a2, v10, v7);
  *(unsigned char *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904568) + 36)) = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DB10FB00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL static LanguageDownloadView.ContextView.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LanguageDownloadView.ContextView.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t LanguageDownloadView.ContextView.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

uint64_t LanguageDownloadView.init(languagesService:context:)@<X0>(char *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DB1F0EE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v31 - v9;
  char v11 = *a1;
  uint64_t v12 = (int *)type metadata accessor for LanguageDownloadView(0);
  char v13 = (uint64_t *)((char *)a2 + v12[5]);
  *char v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (char *)a2 + v12[6];
  LOBYTE(v32) = 0;
  sub_1DB1F0D10();
  uint64_t v15 = *((void *)&v33 + 1);
  char *v14 = v33;
  *((void *)v14 + 1) = v15;
  char v16 = (char *)a2 + v12[7];
  LOBYTE(v32) = 0;
  sub_1DB1F0D10();
  uint64_t v17 = *((void *)&v33 + 1);
  *char v16 = v33;
  *((void *)v16 + 1) = v17;
  uint64_t v18 = (char *)a2 + v12[8];
  LOBYTE(v32) = 0;
  sub_1DB1F0D10();
  uint64_t v19 = *((void *)&v33 + 1);
  *uint64_t v18 = v33;
  *((void *)v18 + 1) = v19;
  uint64_t v20 = v12[9];
  uint64_t v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904448);
  sub_1DB1F0D10();
  *(_OWORD *)((char *)a2 + v2__isPlatformVersionAtLeast(2, 18, 1, 0) = v33;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v10, *MEMORY[0x1E4F3EEE8], v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_1DB1F0D10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  __int16 v21 = (uint64_t *)((char *)a2 + v12[11]);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v32 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  sub_1DB1F0D10();
  uint64_t v23 = *((void *)&v33 + 1);
  *__int16 v21 = v33;
  v21[1] = v23;
  uint64_t v24 = (uint64_t *)((char *)a2 + v12[12]);
  uint64_t v32 = v22;
  sub_1DB1F0D10();
  uint64_t v25 = *((void *)&v33 + 1);
  *uint64_t v24 = v33;
  v24[1] = v25;
  uint64_t v26 = v12[13];
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(uint64_t *)((char *)a2 + v26) = (uint64_t)objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v28 = v12[14];
  type metadata accessor for LanguagesService();
  sub_1DB1198E4(&qword_1EA904450, (void (*)(uint64_t))type metadata accessor for LanguagesService);
  uint64_t result = sub_1DB1EFDB0();
  *a2 = result;
  a2[1] = v30;
  *((unsigned char *)a2 + v28) = v11;
  return result;
}

uint64_t sub_1DB10FF30()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = *(void *)(v6 + 16);
  if (v0)
  {
    uint64_t v1 = (unsigned char *)(v6 + 56);
    while (*v1 != 1 || *((void *)v1 - 1) != 0)
    {
      v1 += 48;
      if (!--v0) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1DB1EF400();

    sub_1DB0F0708();
    return sub_1DB1F0930();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1DB11009C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = Array<A>.downloadable.getter(v5);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  if (!v1) {
    return 0;
  }
  sub_1DB1F0250();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_1DB1F0920();
}

uint64_t sub_1DB1101F4()
{
  uint64_t v1 = sub_1DB1F0240();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v33 = self;
  uint64_t v34 = ObjCClassFromMetadata;
  id v6 = objc_msgSend(v33, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v7 = sub_1DB1EF400();
  uint64_t v9 = v8;

  uint64_t v38 = v7;
  uint64_t v39 = v9;
  sub_1DB0F0708();
  uint64_t v10 = sub_1DB1F0930();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_1DB1F0C00();
  uint64_t v35 = sub_1DB1F08E0();
  uint64_t v36 = v15;
  char v17 = v16;
  uint64_t v37 = v18;
  swift_release();
  sub_1DB0EB23C(v10, v12, v14);
  swift_bridgeObjectRelease();
  LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned __int8 *)(v0 + *(int *)(v2 + 56));
  sub_1DB1196F8(v0, (uint64_t)v4, type metadata accessor for LanguageDownloadView);
  if (v10)
  {
    int v19 = v4[*(int *)(v2 + 56)];
    sub_1DB119A14((uint64_t)v4, type metadata accessor for LanguageDownloadView);
    if (v19 != 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1DB1EF910();
      swift_release();
      swift_release();
      swift_release();
      if ((v38 & 1) == 0)
      {
        _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
        __int16 v21 = v20;
        uint64_t v22 = (void *)sub_1DB1F1260();
        unsigned int v23 = objc_msgSend(v21, sel_BOOLForKey_, v22);

        id v24 = objc_msgSend(self, sel_sharedConnection);
        if (v24)
        {
          uint64_t v25 = v24;
          unsigned int v26 = objc_msgSend(v24, sel_isOnDeviceOnlyTranslationForced);

          if ((v26 | v23)) {
            goto LABEL_6;
          }
        }
        else
        {

          if (v23) {
            goto LABEL_6;
          }
        }
        sub_1DB1F0230();
        sub_1DB1F0220();
        uint64_t v30 = v35;
        uint64_t v29 = v36;
        sub_1DB1F0200();
        sub_1DB1F0220();
        sub_1DB1F0260();
        id v31 = objc_msgSend(v33, sel_bundleForClass_, v34);
        uint64_t v28 = sub_1DB1F0920();
        sub_1DB0EB23C(v30, v29, v17 & 1);
        goto LABEL_11;
      }
LABEL_6:
      sub_1DB1F0250();
      id v27 = objc_msgSend(v33, sel_bundleForClass_, v34);
      uint64_t v28 = sub_1DB1F0920();
      sub_1DB0EB23C(v35, v36, v17 & 1);
LABEL_11:
      swift_bridgeObjectRelease();
      return v28;
    }
  }
  else
  {
    sub_1DB119A14((uint64_t)v4, type metadata accessor for LanguageDownloadView);
  }
  sub_1DB0EB23C(v35, v36, v17 & 1);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DB1106EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1EF480();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DB1101F4();
  if (v12)
  {
    uint64_t v13 = v9;
    uint64_t v14 = v10;
    char v15 = v11;
    uint64_t v16 = v12;
    sub_1DB1EF470();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      char v18 = v15 & 1;
      uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      MEMORY[0x1F4188790](v19);
      *(&v23 - 4) = v13;
      *(&v23 - 3) = v14;
      *((unsigned char *)&v23 - 16) = v18;
      *(&v23 - 1) = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904780);
      sub_1DB11AD44();
      sub_1DB1F0840();
      sub_1DB0EB23C(v13, v14, v18);
      swift_bridgeObjectRelease();
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904698);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 0, 1, v20);
    }
  }
  else
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904698);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    return v22(a1, 1, 1, v21);
  }
  return result;
}

double sub_1DB1109B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_1DB0EB2A4(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904780);
  swift_dynamicCast();
  double result = *(double *)&v6;
  *(_OWORD *)a4 = v6;
  *(unsigned char *)(a4 + 16) = v7;
  *(void *)(a4 + 24) = v8;
  *(unsigned char *)(a4 + 32) = v9;
  *(unsigned char *)(a4 + 33) = v10;
  return result;
}

uint64_t sub_1DB110A50(char a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 8);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular) = a1;
  char v7 = (uint64_t *)(v1 + *(int *)(type metadata accessor for LanguageDownloadView(0) + 48));
  uint64_t v8 = v7[1];
  uint64_t v16 = *v7;
  uint64_t v17 = v8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
  sub_1DB1F0D20();
  uint64_t v9 = v18;
  uint64_t v10 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  char v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v9;
  v11[5] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DB131F20((uint64_t)v5, (uint64_t)&unk_1EA904600, (uint64_t)v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = v7[1];
  uint64_t v16 = *v7;
  uint64_t v12 = v16;
  uint64_t v17 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DB1F0D20();
  swift_bridgeObjectRelease();
  uint64_t v16 = v12;
  uint64_t v17 = v13;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1DB1F0D30();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB110C2C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 8);
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(type metadata accessor for LanguageDownloadView(0) + 44));
  uint64_t v6 = v5[1];
  uint64_t v14 = *v5;
  uint64_t v15 = v6;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
  sub_1DB1F0D20();
  uint64_t v7 = v16;
  uint64_t v8 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  v9[5] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DB131F20((uint64_t)v3, (uint64_t)&unk_1EA904758, (uint64_t)v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = v5[1];
  uint64_t v14 = *v5;
  uint64_t v10 = v14;
  uint64_t v15 = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DB1F0D20();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1DB1F0D30();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t LanguageDownloadView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904458);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v92 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1DB1F0190();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v89 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1DB1F04A0();
  uint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v76 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904460);
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904468);
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904470);
  uint64_t v74 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v67 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904478);
  uint64_t v78 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v69 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904480);
  uint64_t v84 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  char v73 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904488);
  uint64_t v86 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v81 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904490);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v82 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904498);
  sub_1DB0E3C44(&qword_1EA9044A0, &qword_1EA904498);
  sub_1DB1F0850();
  uint64_t v16 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v17 = *(int *)(v16 + 32);
  uint64_t v75 = v16;
  uint64_t v18 = (char *)(v1 + v17);
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  char v102 = v19;
  uint64_t v103 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
  sub_1DB1F0D40();
  uint64_t v96 = v1;
  uint64_t v21 = sub_1DB0E3C44(&qword_1EA9044A8, &qword_1EA904460);
  sub_1DB1F0AD0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v8, v6);
  uint64_t v22 = (char *)(v1 + *(int *)(v16 + 28));
  char v23 = *v22;
  uint64_t v24 = *((void *)v22 + 1);
  char v102 = v23;
  uint64_t v103 = v24;
  sub_1DB1F0D40();
  uint64_t v95 = v1;
  uint64_t v66 = v1;
  uint64_t v98 = v6;
  uint64_t v99 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unsigned int v26 = v67;
  uint64_t v27 = v70;
  sub_1DB1F0AD0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v10, v27);
  uint64_t v28 = v76;
  sub_1DB1F0490();
  uint64_t v98 = v27;
  uint64_t v99 = OpaqueTypeConformance2;
  uint64_t v29 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = MEMORY[0x1E4F3D8F0];
  id v31 = v69;
  uint64_t v32 = v72;
  uint64_t v33 = v79;
  sub_1DB1F0B70();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v28, v33);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v26, v32);
  uint64_t v94 = v1;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044B0);
  uint64_t v98 = v32;
  uint64_t v99 = v34;
  uint64_t v100 = v29;
  uint64_t v101 = v30;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = sub_1DB0E3C44(&qword_1EA9044B8, &qword_1EA9044B0);
  uint64_t v38 = v73;
  uint64_t v39 = v77;
  sub_1DB1F0B20();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v31, v39);
  sub_1DB1F0250();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v42 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v43 = sub_1DB1F0920();
  uint64_t v45 = v44;
  uint64_t v98 = v40;
  uint64_t v99 = v35;
  LOBYTE(v35) = v46 & 1;
  uint64_t v100 = v36;
  uint64_t v101 = v37;
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = v81;
  uint64_t v49 = v83;
  sub_1DB1F0A30();
  sub_1DB0EB23C(v43, v45, v35);
  swift_bridgeObjectRelease();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v38, v49);
  uint64_t v51 = v90;
  long long v52 = v89;
  uint64_t v53 = v91;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, *MEMORY[0x1E4F3D320], v91);
  uint64_t v98 = v50;
  uint64_t v99 = v47;
  swift_getOpaqueTypeConformance2();
  long long v54 = v82;
  uint64_t v55 = v85;
  sub_1DB1F0AB0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v48, v55);
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  uint64_t v57 = (uint64_t)v92;
  sub_1DB1F0D40();
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044D0);
  uint64_t v60 = v93;
  long long v61 = (uint64_t *)(v93 + *(int *)(v59 + 36));
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044D8);
  sub_1DB0E8B70(v57, (uint64_t)v61 + *(int *)(v62 + 28), &qword_1EA904458);
  *long long v61 = KeyPath;
  uint64_t v63 = v87;
  uint64_t v64 = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v60, v54, v88);
  sub_1DB0E8BD4(v57, &qword_1EA904458);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v54, v64);
}

uint64_t sub_1DB111A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904618);
  uint64_t v113 = *(void *)(v3 - 8);
  uint64_t v114 = v3;
  MEMORY[0x1F4188790](v3);
  v120 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v119 = (char *)&v92 - v6;
  unint64_t v108 = sub_1DB1EFE70();
  uint64_t v106 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v105 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904620);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904628);
  MEMORY[0x1F4188790](v102);
  uint64_t v100 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904630);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v101 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904638);
  MEMORY[0x1F4188790](v109);
  long long v107 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = (void (*)(char *, char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904640);
  MEMORY[0x1F4188790](v117);
  uint64_t v116 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904648);
  uint64_t v110 = *(void *)(v15 - 8);
  uint64_t v111 = v15;
  MEMORY[0x1F4188790](v15);
  v118 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v122 = (char *)&v92 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904650);
  MEMORY[0x1F4188790](v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904658);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v98 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904660);
  uint64_t v99 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v97 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904668);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v115 = (uint64_t)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v92 - v28;
  uint64_t v126 = &type metadata for TranslateFeatures;
  unint64_t v127 = sub_1DB109D10();
  LOBYTE(v123) = 3;
  char v30 = sub_1DB1EF710();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v123);
  uint64_t v121 = v29;
  if (v30)
  {
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v32 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v33 = sub_1DB1EF400();
    uint64_t v96 = a1;
    uint64_t v94 = v19;
    uint64_t v34 = v33;
    unint64_t v36 = v35;

    uint64_t v123 = v34;
    unint64_t v124 = v36;
    sub_1DB0F0708();
    uint64_t v37 = sub_1DB1F0930();
    uint64_t v39 = v38;
    uint64_t v95 = v10;
    uint64_t v41 = v40;
    uint64_t v93 = v20;
    unint64_t v43 = v42 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v123 = v37;
    unint64_t v124 = v39;
    unint64_t v125 = v43;
    uint64_t v126 = v41;
    unint64_t v127 = KeyPath;
    char v128 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904740);
    sub_1DB11A4E0();
    sub_1DB1F0AA0();
    sub_1DB0EB23C(v37, v39, v43);
    swift_release();
    uint64_t v29 = v121;
    uint64_t v10 = v95;
    swift_bridgeObjectRelease();
    sub_1DB11A580();
    uint64_t v45 = v98;
    sub_1DB1F0EC0();
    uint64_t v46 = (uint64_t)v97;
    uint64_t v47 = v93;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v97, v45, v93);
    uint64_t v48 = v46 + *(int *)(v23 + 36);
    *(_OWORD *)uint64_t v48 = xmmword_1DB1F5570;
    *(void *)(v48 + 16) = 0;
    *(void *)(v48 + 24) = 0;
    *(unsigned char *)(v48 + 32) = 0;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v45, v47);
    sub_1DB0F1454(v46, (uint64_t)v29, &qword_1EA904660);
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v29, v49, 1, v23);
  uint64_t v50 = sub_1DB10FF30();
  uint64_t v52 = v51;
  char v54 = v53;
  uint64_t v56 = (uint64_t)v55;
  uint64_t v123 = v50;
  unint64_t v124 = v51;
  unint64_t v125 = v53;
  uint64_t v126 = v55;
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904670);
  sub_1DB119DD8();
  sub_1DB1F0AA0();
  sub_1DB119E44(v50, v52, v54, v56);
  sub_1DB1106EC((uint64_t)v10);
  uint64_t v57 = swift_getKeyPath();
  uint64_t v58 = v100;
  sub_1DB0E8B70((uint64_t)v10, v100, &qword_1EA904620);
  uint64_t v59 = v102;
  uint64_t v60 = v58 + *(int *)(v102 + 36);
  *(void *)uint64_t v60 = v57;
  *(unsigned char *)(v60 + 8) = 0;
  sub_1DB0E8BD4((uint64_t)v10, &qword_1EA904620);
  long long v61 = v105;
  sub_1DB1EFE60();
  unint64_t v62 = sub_1DB119E90();
  uint64_t v63 = sub_1DB1198E4((unint64_t *)&qword_1EA903ED8, MEMORY[0x1E4F3CD40]);
  uint64_t v64 = v101;
  unint64_t v65 = v108;
  sub_1DB1F0990();
  (*(void (**)(char *, unint64_t))(v106 + 8))(v61, v65);
  sub_1DB0E8BD4(v58, &qword_1EA904628);
  uint64_t v123 = v59;
  unint64_t v124 = v65;
  unint64_t v125 = v62;
  uint64_t v126 = (ValueMetadata *)v63;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = v104;
  sub_1DB1F0AA0();
  uint64_t v67 = (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v64, v66);
  MEMORY[0x1F4188790](v67);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9046B0);
  unint64_t v108 = sub_1DB119FD0();
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9046C0);
  unint64_t v69 = sub_1DB11A07C();
  uint64_t v123 = v68;
  unint64_t v124 = v69;
  swift_getOpaqueTypeConformance2();
  sub_1DB11A1C0();
  sub_1DB1F0EA0();
  uint64_t v70 = sub_1DB11009C();
  uint64_t v72 = v71;
  LOBYTE(v61) = v73;
  uint64_t v75 = (uint64_t)v74;
  uint64_t v123 = v70;
  unint64_t v124 = v71;
  unint64_t v125 = v73;
  uint64_t v126 = v74;
  sub_1DB1F0AA0();
  uint64_t v76 = sub_1DB119E44(v70, v72, (char)v61, v75);
  MEMORY[0x1F4188790](v76);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904700);
  sub_1DB11A2F8(&qword_1EA904708, &qword_1EA904700, (void (*)(void))sub_1DB11A364);
  uint64_t v77 = v119;
  sub_1DB1F0E90();
  uint64_t v78 = v115;
  sub_1DB0E8B70((uint64_t)v121, v115, &qword_1EA904668);
  uint64_t v79 = v110;
  uint64_t v80 = v111;
  uint64_t v117 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  uint64_t v81 = v118;
  v117(v118, v122, v111);
  uint64_t v83 = v113;
  uint64_t v82 = v114;
  uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
  v84(v120, v77, v114);
  uint64_t v85 = v112;
  sub_1DB0E8B70(v78, v112, &qword_1EA904668);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904738);
  v117((char *)(v85 + *(int *)(v86 + 48)), v81, v80);
  uint64_t v87 = v85 + *(int *)(v86 + 64);
  uint64_t v88 = v120;
  v84((char *)v87, v120, v82);
  uint64_t v89 = *(void (**)(char *, uint64_t))(v83 + 8);
  v89(v119, v82);
  uint64_t v90 = *(void (**)(char *, uint64_t))(v79 + 8);
  v90(v122, v80);
  sub_1DB0E8BD4((uint64_t)v121, &qword_1EA904668);
  v89(v88, v82);
  v90(v118, v80);
  return sub_1DB0E8BD4(v115, &qword_1EA904668);
}

uint64_t sub_1DB1127E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v26 = a2;
  uint64_t v2 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v3 = v2 - 8;
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v23 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9046D8);
  uint64_t v5 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9046C0);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = Array<A>.installed.getter(v30);
  swift_bridgeObjectRelease();
  uint64_t v30 = v10;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  type metadata accessor for LanguageListItem(0);
  sub_1DB0E3C44(&qword_1EBA4D8A8, &qword_1EBA4D8A0);
  sub_1DB1198E4(&qword_1EA9046E0, (void (*)(uint64_t))type metadata accessor for LanguageListItem);
  sub_1DB1F0E70();
  uint64_t v11 = v22;
  sub_1DB1196F8(v22, (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguageDownloadView);
  unint64_t v12 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v13 = swift_allocObject();
  sub_1DB11963C((uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for LanguageDownloadView);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1DB11AB48;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = v25;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v7, v25);
  uint64_t v16 = (uint64_t (**)())&v9[*(int *)(v24 + 36)];
  *uint64_t v16 = sub_1DB11ABF0;
  v16[1] = (uint64_t (*)())v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  uint64_t v17 = v11 + *(int *)(v3 + 32);
  char v18 = *(unsigned char *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  char v28 = v18;
  uint64_t v29 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
  sub_1DB1F0D40();
  uint64_t v27 = v11;
  sub_1DB11A07C();
  sub_1DB1F0AD0();
  swift_release();
  swift_release();
  return sub_1DB0E8BD4((uint64_t)v9, &qword_1EA9046C0);
}

uint64_t sub_1DB112C34@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  uint64_t result = sub_1DB12C368(v3, v4);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1DB112CC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  char v6 = *((unsigned char *)a1 + 24);
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v9 = a2 + *(int *)(type metadata accessor for LanguageListItem(0) + 24);
  *(void *)uint64_t v9 = swift_getKeyPath();
  *(unsigned char *)(v9 + 8) = 0;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return sub_1DB1EF580();
}

uint64_t sub_1DB112D7C(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = Array<A>.installed.getter(v11);
  swift_bridgeObjectRelease();
  v9[2] = v3;
  v9[3] = a2;
  sub_1DB113084((void (*)(void *))sub_1DB11AD10, (uint64_t)v9);
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_sharedInstance);
  unsigned __int8 v5 = objc_msgSend(v4, sel_voiceOverImageCaptionsEnabled);

  uint64_t v6 = a2 + *(int *)(type metadata accessor for LanguageDownloadView(0) + 24);
  uint64_t v7 = *(void *)(v6 + 8);
  LOBYTE(v11) = *(unsigned char *)v6;
  LOBYTE(v3) = v11;
  uint64_t v12 = v7;
  unsigned __int8 v10 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
  sub_1DB1F0D30();
  LOBYTE(v11) = v3;
  uint64_t v12 = v7;
  uint64_t result = sub_1DB1F0D20();
  if ((v10 & 1) == 0) {
    return sub_1DB110C2C();
  }
  return result;
}

uint64_t *sub_1DB112EF4(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  if ((*result & 0x8000000000000000) == 0 && v2 < *(void *)(a2 + 16))
  {
    uint64_t v3 = a2 + 48 * v2;
    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v12 = *(void *)(v3 + 48);
    uint64_t v13 = *(void *)(v3 + 32);
    char v11 = *(unsigned char *)(v3 + 56);
    uint64_t v5 = *(void *)(v3 + 72);
    uint64_t v10 = *(void *)(v3 + 64);
    type metadata accessor for LanguageDownloadView(0);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
    sub_1DB1F0D20();
    uint64_t v6 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1DB188720(0, v14[2] + 1, 1, v14);
    }
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_1DB188720((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    _OWORD v6[2] = v8 + 1;
    uint64_t v9 = &v6[6 * v8];
    void v9[4] = v13;
    v9[5] = v4;
    v9[6] = v12;
    *((unsigned char *)v9 + 56) = v11;
    v9[8] = v10;
    v9[9] = v5;
    sub_1DB1F0D30();
    swift_release();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DB113084(void (*a1)(void *), uint64_t a2)
{
  unint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v40 = sub_1DB1EF6C0();
  uint64_t v3 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  char v42 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v31 - v6;
  uint64_t v7 = sub_1DB1EF6D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904760);
  uint64_t v12 = v11 - 8;
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v33(v10, v2, v7, v13);
  sub_1DB1198E4(&qword_1EA904768, MEMORY[0x1E4F27D00]);
  uint64_t v34 = v10;
  sub_1DB1F1430();
  uint64_t v16 = *(int *)(v12 + 44);
  uint64_t v41 = v15;
  uint64_t v17 = &v15[v16];
  char v18 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v43 = v3 + 16;
  uint64_t v38 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v39 = v18;
  uint64_t v35 = v8 + 16;
  id v32 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v20 = v40;
  uint64_t v19 = (uint64_t)v41;
  while (1)
  {
    v39(v46, v17, v20);
    sub_1DB1198E4(&qword_1EA904770, MEMORY[0x1E4F27D00]);
    uint64_t v21 = v17;
    uint64_t v22 = v42;
    sub_1DB1F16B0();
    sub_1DB1198E4(&qword_1EA904778, MEMORY[0x1E4F27CC8]);
    char v23 = sub_1DB1F1230();
    uint64_t v24 = *v38;
    (*v38)(v22, v20);
    v24(v46, v20);
    if (v23) {
      break;
    }
    uint64_t v17 = v21;
    uint64_t v25 = (void (*)(void *, void))sub_1DB1F16D0();
    uint64_t v27 = *v26;
    v25(v45, 0);
    char v28 = v34;
    ((void (*)(char *, uint64_t, uint64_t))v33)(v34, v19, v7);
    sub_1DB1F16C0();
    (*v32)(v28, v7);
    v45[0] = v27;
    uint64_t v29 = v44;
    v36(v45);
    if (v29) {
      break;
    }
    uint64_t v44 = 0;
  }
  return sub_1DB0E8BD4(v19, &qword_1EA904760);
}

uint64_t sub_1DB1134AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v78 = v7;
  uint64_t v81 = (uint64_t)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1F0BE0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)v71 - v12;
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v71 - v18;
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v76 = self;
  uint64_t v77 = ObjCClassFromMetadata;
  id v21 = objc_msgSend(v76, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v22 = sub_1DB1EF400();
  unint64_t v79 = v23;
  uint64_t v80 = v22;

  uint64_t v24 = *(int *)(v5 + 52);
  uint64_t v82 = a1;
  uint64_t v25 = (uint64_t *)(a1 + v24);
  uint64_t v27 = *v25;
  unint64_t v26 = v25[1];
  uint64_t v86 = v27;
  unint64_t v87 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
  sub_1DB1F0D20();
  uint64_t v28 = v88[2];
  uint64_t v83 = v10;
  uint64_t v84 = a2;
  if (v28)
  {
    uint64_t v75 = v6;
    uint64_t v29 = v88[4];
    uint64_t v30 = v88[9];
    swift_bridgeObjectRetain_n();
    uint64_t v73 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v74 = v29;
    sub_1DB1EF580();
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v72 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v16);
    uint64_t v32 = v31;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
    v33(v16, v13);
    v33(v19, v13);
    if (v32)
    {
      id v34 = objc_msgSend(v76, sel_bundleForClass_, v77);
      sub_1DB1EF400();

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FD8);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1DB1F4170;
      *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v35 + 64) = sub_1DB101A50();
      *(void *)(v35 + 32) = v72;
      *(void *)(v35 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v32;
      uint64_t v72 = sub_1DB1F12C0();
      unint64_t v37 = v36;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v72 = 0;
      unint64_t v37 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    sub_1DB1EF580();
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v41 = Locale.sqDisplayName(context:in:)(2, (uint64_t)v16);
    uint64_t v43 = v42;
    v33(v16, v13);
    v33(v19, v13);
    if (v43)
    {
      uint64_t v74 = v41;
      swift_bridgeObjectRetain();
      sub_1DB1EF580();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v44 = Locale.sqDisplayName(context:in:)(3, (uint64_t)v16);
      uint64_t v46 = v45;
      v33(v16, v13);
      v33(v19, v13);
      if (v46)
      {
        id v47 = objc_msgSend(v76, sel_bundleForClass_, v77);
        sub_1DB1EF400();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903FD8);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_1DB1F4900;
        uint64_t v49 = MEMORY[0x1E4FBB1A0];
        *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v50 = sub_1DB101A50();
        *(void *)(v48 + 32) = v74;
        *(void *)(v48 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v43;
        *(void *)(v48 + 96) = v49;
        *(void *)(v48 + 104) = v50;
        *(void *)(v48 + 64) = v50;
        *(void *)(v48 + 72) = v44;
        *(void *)(v48 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v46;
        uint64_t v38 = sub_1DB1F12C0();
        unint64_t v40 = v51;
        swift_bridgeObjectRelease();
LABEL_11:
        uint64_t v6 = v75;
        uint64_t v39 = v72;
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = 0;
    unint64_t v40 = 0xE000000000000000;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  unint64_t v37 = 0xE000000000000000;
LABEL_12:
  uint64_t v86 = v39;
  unint64_t v87 = v37;
  sub_1DB0F0708();
  uint64_t v52 = sub_1DB1F0930();
  uint64_t v77 = v53;
  uint64_t v78 = v52;
  LODWORD(v75) = v54;
  id v76 = v55;
  uint64_t v86 = v38;
  unint64_t v87 = v40;
  uint64_t v56 = sub_1DB1F0930();
  uint64_t v73 = v57;
  uint64_t v74 = v56;
  v71[1] = v58 & 1;
  uint64_t v72 = v59;
  uint64_t v60 = v81;
  uint64_t v61 = v82;
  sub_1DB1196F8(v82, v81, type metadata accessor for LanguageDownloadView);
  unint64_t v62 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v63 = swift_allocObject();
  sub_1DB11963C(v60, v63 + v62, type metadata accessor for LanguageDownloadView);
  sub_1DB1F0BC0();
  swift_release();
  uint64_t v86 = v80;
  unint64_t v87 = v79;
  uint64_t v64 = sub_1DB1F0930();
  uint64_t v66 = v65;
  char v68 = v67 & 1;
  sub_1DB1196F8(v61, v60, type metadata accessor for LanguageDownloadView);
  uint64_t v69 = swift_allocObject();
  sub_1DB11963C(v60, v69 + v62, type metadata accessor for LanguageDownloadView);
  sub_1DB1F0BB0();
  sub_1DB0EB23C(v64, v66, v68);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1DB1F0BA0();
}

uint64_t sub_1DB113C78()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB113D24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = Array<A>.downloadable.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v10 = v5;
  swift_getKeyPath();
  sub_1DB1196F8(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguageDownloadView);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1DB11963C((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for LanguageDownloadView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904718);
  sub_1DB0E3C44(&qword_1EBA4D8A8, &qword_1EBA4D8A0);
  sub_1DB11A364();
  return sub_1DB1F0E70();
}

uint64_t sub_1DB113F44@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v75 = sub_1DB1EF6B0();
  uint64_t v82 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v72 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v81 = (char *)v66 - v7;
  uint64_t v8 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v9 = v8 - 8;
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v67 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DB1F0EE0();
  uint64_t v70 = v12;
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v13 = v71;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LanguageDownloadButton(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904728);
  MEMORY[0x1F4188790](v77);
  uint64_t v69 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  id v76 = (char *)v66 - v21;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904718) - 8;
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (uint64_t)v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = a1[2];
  long long v86 = a1[1];
  long long v87 = v23;
  long long v85 = *a1;
  uint64_t v74 = a2 + *(int *)(v9 + 48);
  sub_1DB11A6B4((uint64_t)&v85);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  uint64_t v24 = v15;
  char v68 = v15;
  sub_1DB1F0D20();
  sub_1DB1196F8(a2, (uint64_t)v11, type metadata accessor for LanguageDownloadView);
  unint64_t v25 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  unint64_t v26 = (v10 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  sub_1DB11963C((uint64_t)v11, v27 + v25, type metadata accessor for LanguageDownloadView);
  uint64_t v28 = (_OWORD *)(v27 + v26);
  long long v29 = v85;
  long long v30 = v86;
  _OWORD *v28 = v85;
  v28[1] = v30;
  long long v31 = v87;
  void v28[2] = v87;
  *(_OWORD *)uint64_t v18 = v29;
  *((_OWORD *)v18 + 1) = v30;
  *((_OWORD *)v18 + 4) = v30;
  *((_OWORD *)v18 + 5) = v31;
  *((_OWORD *)v18 + 2) = v31;
  *((_OWORD *)v18 + 3) = v29;
  v66[3] = v16;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[*(int *)(v16 + 24)], v24, v12);
  uint64_t v32 = (uint64_t (**)())&v18[*(int *)(v16 + 28)];
  *uint64_t v32 = sub_1DB11A930;
  v32[1] = (uint64_t (*)())v27;
  v66[2] = *((void *)&v85 + 1);
  uint64_t v67 = v85;
  sub_1DB11A6B4((uint64_t)&v85);
  sub_1DB11A6B4((uint64_t)&v85);
  swift_bridgeObjectRetain();
  uint64_t v33 = v81;
  sub_1DB1EF580();
  uint64_t v34 = (uint64_t)v72;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v35 = Locale.sqDisplayName(context:in:)(0, v34);
  unint64_t v37 = v36;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v82 += 8;
  uint64_t v39 = v75;
  v38(v34, v75);
  v38((uint64_t)v33, v39);
  if (v37) {
    uint64_t v40 = v35;
  }
  else {
    uint64_t v40 = 0;
  }
  unint64_t v41 = 0xE000000000000000;
  if (v37) {
    unint64_t v41 = v37;
  }
  uint64_t v83 = v40;
  unint64_t v84 = v41;
  v66[1] = sub_1DB0F0708();
  uint64_t v42 = sub_1DB1F0930();
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  sub_1DB1198E4(&qword_1EA904730, (void (*)(uint64_t))type metadata accessor for LanguageDownloadButton);
  uint64_t v47 = (uint64_t)v69;
  sub_1DB1F09F0();
  sub_1DB0EB23C(v42, v44, v46);
  swift_bridgeObjectRelease();
  sub_1DB119A14((uint64_t)v18, type metadata accessor for LanguageDownloadButton);
  swift_bridgeObjectRetain();
  uint64_t v48 = v81;
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v49 = Locale.sqDisplaySubname(context:in:)(0, v34);
  unint64_t v51 = v50;
  v38(v34, v39);
  v38((uint64_t)v48, v39);
  if (v51) {
    uint64_t v52 = v49;
  }
  else {
    uint64_t v52 = 0;
  }
  unint64_t v53 = 0xE000000000000000;
  if (v51) {
    unint64_t v53 = v51;
  }
  uint64_t v83 = v52;
  unint64_t v84 = v53;
  uint64_t v54 = sub_1DB1F0930();
  uint64_t v56 = v55;
  char v58 = v57 & 1;
  uint64_t v59 = (uint64_t)v76;
  sub_1DB1EFE10();
  sub_1DB0EB23C(v54, v56, v58);
  swift_bridgeObjectRelease();
  sub_1DB0E8BD4(v47, &qword_1EA904728);
  uint64_t v60 = v68;
  sub_1DB1F0D20();
  LOBYTE(v54) = sub_1DB1F0ED0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v60, v70);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = swift_allocObject();
  *(unsigned char *)(v62 + 16) = v54 & 1;
  uint64_t v63 = v78;
  sub_1DB0E8B70(v59, v78, &qword_1EA904728);
  uint64_t v64 = (uint64_t *)(v63 + *(int *)(v79 + 44));
  uint64_t *v64 = KeyPath;
  v64[1] = (uint64_t)sub_1DB11A9D4;
  v64[2] = v62;
  sub_1DB0E8BD4(v59, &qword_1EA904728);
  return sub_1DB0F1454(v63, v80, &qword_1EA904718);
}

uint64_t sub_1DB1146A8(uint64_t a1, long long *a2)
{
  uint64_t v63 = a2;
  uint64_t v3 = (int *)type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v58 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v58 - v14;
  if (*(unsigned char *)(a1 + v3[14]) == 1)
  {
    uint64_t v59 = v5;
    uint64_t v60 = v3;
    uint64_t v61 = a1;
    uint64_t v68 = 0x53555F6E65;
    unint64_t v69 = 0xE500000000000000;
    uint64_t v65 = 45;
    unint64_t v66 = 0xE100000000000000;
    v64[0] = 95;
    v64[1] = 0xE100000000000000;
    sub_1DB0F0708();
    uint64_t v16 = sub_1DB1F1950();
    uint64_t v18 = v17;
    swift_bridgeObjectRetain_n();
    uint64_t v62 = v16;
    sub_1DB1EF580();
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v19 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v12);
    uint64_t v21 = v20;
    uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v6);
    if (v21)
    {
      uint64_t v58 = v19;
      v22(v9, v6);
      v22(v15, v6);
    }
    else
    {
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v23 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v12);
      uint64_t v21 = v24;
      v22(v12, v6);
      v22(v9, v6);
      v22(v15, v6);
      if (v21)
      {
        uint64_t v58 = v23;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = v62;
        uint64_t v21 = v18;
      }
    }
    uint64_t v3 = v60;
    a1 = v61;
    swift_bridgeObjectRelease();
    unint64_t v25 = (uint64_t *)(a1 + v3[12]);
    uint64_t v26 = *v25;
    unint64_t v27 = v25[1];
    uint64_t v68 = *v25;
    unint64_t v69 = v27;
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
    sub_1DB1F0D20();
    uint64_t v28 = (void *)v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_1DB188720(0, v28[2] + 1, 1, v28);
    }
    unint64_t v30 = v28[2];
    unint64_t v29 = v28[3];
    if (v30 >= v29 >> 1) {
      uint64_t v28 = sub_1DB188720((void *)(v29 > 1), v30 + 1, 1, v28);
    }
    void v28[2] = v30 + 1;
    long long v31 = &v28[6 * v30];
    v31[4] = v62;
    id v31[5] = v18;
    v31[6] = 1;
    *((unsigned char *)v31 + 56) = 1;
    v31[8] = v58;
    v31[9] = v21;
    uint64_t v68 = v26;
    unint64_t v69 = v27;
    v64[0] = v28;
    sub_1DB1F0D30();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = v59;
  }
  uint64_t v32 = v63;
  sub_1DB11A9DC((uint64_t)(v63 + 1), (uint64_t)v64);
  uint64_t result = sub_1DB11A9DC((uint64_t)v64, (uint64_t)&v65);
  if (v66 == 1)
  {
    if (!v65) {
      return result;
    }
    uint64_t v34 = (uint64_t *)(a1 + v3[12]);
    uint64_t v35 = *v34;
    unint64_t v36 = v34[1];
    uint64_t v68 = *v34;
    unint64_t v69 = v36;
    swift_bridgeObjectRetain();
    sub_1DB11A6B4((uint64_t)v32);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
    sub_1DB1F0D20();
    unint64_t v37 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v37 = sub_1DB188720(0, v37[2] + 1, 1, v37);
    }
    unint64_t v39 = v37[2];
    unint64_t v38 = v37[3];
    if (v39 >= v38 >> 1) {
      unint64_t v37 = sub_1DB188720((void *)(v38 > 1), v39 + 1, 1, v37);
    }
    v37[2] = v39 + 1;
    uint64_t v40 = &v37[6 * v39];
    long long v41 = *v32;
    long long v42 = v32[2];
    v40[3] = v32[1];
    v40[4] = v42;
    v40[2] = v41;
    uint64_t v68 = v35;
    unint64_t v69 = v36;
    uint64_t v67 = v37;
    sub_1DB1F0D30();
    swift_release();
    swift_bridgeObjectRelease();
    if (!*(void *)(*(void *)(a1 + 8) + OBJC_IVAR____TtC13TranslationUI16LanguagesService_reachability))
    {
      sub_1DB1196F8(a1, (uint64_t)v5, type metadata accessor for LanguageDownloadView);
LABEL_29:
      sub_1DB119A14((uint64_t)v5, type metadata accessor for LanguageDownloadView);
      return sub_1DB110A50(0);
    }
    swift_retain();
    Reachability.networkStatus.getter((char *)&v68);
    swift_release();
    if ((_BYTE)v68 && v68 != 1)
    {
      swift_bridgeObjectRelease();
      sub_1DB1196F8(a1, (uint64_t)v5, type metadata accessor for LanguageDownloadView);
    }
    else
    {
      char v52 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
      sub_1DB1196F8(a1, (uint64_t)v5, type metadata accessor for LanguageDownloadView);
      if ((v52 & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t v53 = *((void *)v5 + 1);
    swift_retain();
    sub_1DB119A14((uint64_t)v5, type metadata accessor for LanguageDownloadView);
    char v54 = *(unsigned char *)(v53 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_askedUser);
    swift_release();
    if (v54) {
      return sub_1DB110A50(0);
    }
    uint64_t v55 = a1 + v3[7];
    char v56 = *(unsigned char *)v55;
    unint64_t v57 = *(void *)(v55 + 8);
    LOBYTE(v68) = v56;
    unint64_t v69 = v57;
    LOBYTE(v7__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
    return sub_1DB1F0D30();
  }
  else
  {
    uint64_t v43 = (uint64_t *)(a1 + v3[11]);
    uint64_t v44 = *v43;
    unint64_t v45 = v43[1];
    uint64_t v68 = *v43;
    unint64_t v69 = v45;
    sub_1DB11A6B4((uint64_t)v32);
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
    sub_1DB1F0D20();
    char v46 = v70;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v46 = sub_1DB188720(0, v46[2] + 1, 1, v46);
    }
    unint64_t v48 = v46[2];
    unint64_t v47 = v46[3];
    if (v48 >= v47 >> 1) {
      char v46 = sub_1DB188720((void *)(v47 > 1), v48 + 1, 1, v46);
    }
    v46[2] = v48 + 1;
    uint64_t v49 = &v46[6 * v48];
    long long v50 = *v32;
    long long v51 = v32[2];
    v49[3] = v32[1];
    v49[4] = v51;
    v49[2] = v50;
    uint64_t v68 = v44;
    unint64_t v69 = v45;
    uint64_t v67 = v46;
    sub_1DB1F0D30();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1DB110C2C();
  }
}

uint64_t sub_1DB114E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904608);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0250();
  uint64_t v6 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v30 = *(int *)(v6 + 52);
  id v7 = *(id *)(a1 + v30);
  uint64_t v8 = sub_1DB1F0920();
  uint64_t v33 = v9;
  uint64_t v34 = v8;
  int v31 = v10;
  uint64_t v32 = v11;
  long long v37 = *(_OWORD *)(a1 + *(int *)(v6 + 36));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904610);
  uint64_t result = sub_1DB1F0D20();
  uint64_t v13 = v38;
  if (v38)
  {
    uint64_t ErrorValue = swift_getErrorValue();
    uint64_t v15 = v36;
    uint64_t v16 = *(void *)(v36 - 8);
    __n128 v17 = MEMORY[0x1F4188790](ErrorValue);
    uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v16 + 16))(v19, v17);

    uint64_t v20 = sub_1DB1F1E30();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    *(void *)&long long v37 = v20;
    *((void *)&v37 + 1) = v22;
    sub_1DB0F0708();
    sub_1DB1F0930();
    sub_1DB1F0250();
    id v23 = *(id *)(a1 + v30);
    uint64_t v24 = sub_1DB1F0920();
    uint64_t v26 = v25;
    char v28 = v27 & 1;
    sub_1DB1F0BD0();
    sub_1DB0EB23C(v24, v26, v28);
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1DB1F0BE0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v5, 0, 1, v29);
    return sub_1DB1F0B90();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DB1151F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v3 = sub_1DB1F0240();
  MEMORY[0x1F4188790](v3 - 8);
  v76[1] = (char *)v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1DB1EF690();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v80 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E288);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v84 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1DB1EF6B0();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v77 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v81 = (char *)v76 - v10;
  uint64_t v11 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v92 = *(char **)(v11 - 8);
  uint64_t v12 = *((void *)v92 + 8);
  uint64_t v13 = v11 - 8;
  uint64_t v89 = v11 - 8;
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DB1F0BE0();
  uint64_t v93 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v91 = (char *)v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v90 = (char *)v76 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v96 = (char *)v76 - v20;
  MEMORY[0x1F4188790](v21);
  id v23 = (char *)v76 - v22;
  sub_1DB1F0250();
  uint64_t v24 = *(int *)(v13 + 60);
  uint64_t v85 = a1;
  id v25 = *(id *)(a1 + v24);
  uint64_t v26 = sub_1DB1F0920();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  sub_1DB1196F8(a1, (uint64_t)v14, type metadata accessor for LanguageDownloadView);
  uint64_t v31 = v92[80];
  uint64_t v87 = ((v31 + 16) & ~v31) + v12;
  uint64_t v88 = (v31 + 16) & ~v31;
  uint64_t v32 = v88;
  uint64_t v86 = v31 | 7;
  uint64_t v33 = swift_allocObject();
  sub_1DB11963C((uint64_t)v14, v33 + v32, type metadata accessor for LanguageDownloadView);
  uint64_t v92 = v23;
  sub_1DB1F0BD0();
  sub_1DB0EB23C(v26, v28, v30);
  uint64_t v34 = v24;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = (void *)sub_1DB1F1260();
  id v36 = (id)SFLocalizableWAPIStringKeyForKey();

  sub_1DB1F1290();
  uint64_t v37 = v85;
  sub_1DB1EF400();
  swift_bridgeObjectRelease();
  sub_1DB1196F8(v37, (uint64_t)v14, type metadata accessor for LanguageDownloadView);
  uint64_t v38 = swift_allocObject();
  sub_1DB11963C((uint64_t)v14, v38 + v88, type metadata accessor for LanguageDownloadView);
  sub_1DB1F0BD0();
  swift_release();
  swift_bridgeObjectRelease();
  *(unsigned char *)(*(void *)(v37 + 8) + OBJC_IVAR____TtC13TranslationUI16LanguagesService_askedUser) = 1;
  unint64_t v39 = (uint64_t *)(v37 + *(int *)(v89 + 56));
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  uint64_t v97 = v41;
  uint64_t v98 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F8);
  sub_1DB1F0D20();
  if (*(void *)(v99 + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v42 = v81;
    sub_1DB1EF580();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v80;
    sub_1DB1EF6A0();
    uint64_t v44 = (uint64_t)v84;
    sub_1DB1EF650();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v43, v83);
    uint64_t v45 = sub_1DB1EF5B0();
    uint64_t v46 = *(void *)(v45 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
    {
      sub_1DB0E8BD4(v44, &qword_1EBA4E288);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v79);
    }
    else
    {
      sub_1DB1EF5A0();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
      unint64_t v47 = *(void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v48 = v79;
      v47(v42, v79);
      uint64_t v49 = v77;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      sub_1DB1EF5C0();
      uint64_t v51 = v50;
      swift_bridgeObjectRelease();
      v47(v49, v48);
      if (v51)
      {
        sub_1DB1F0250();
        id v52 = *(id *)(v37 + v34);
        uint64_t v53 = sub_1DB1F0920();
        uint64_t v88 = v54;
        uint64_t v89 = v53;
        LODWORD(v86) = v55;
        uint64_t v87 = v56;
        sub_1DB1F0230();
        sub_1DB1F0220();
        sub_1DB1F0210();
        swift_bridgeObjectRelease();
        sub_1DB1F0220();
        sub_1DB1F0260();
        id v57 = v52;
        uint64_t v58 = sub_1DB1F0920();
        unint64_t v84 = v59;
        uint64_t v85 = v58;
        uint64_t v61 = v92;
        uint64_t v60 = v93;
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
        uint64_t v63 = v94;
        v62(v90, v92, v94);
        uint64_t v64 = v96;
        v62(v91, v96, v63);
        sub_1DB1F0BA0();
        uint64_t v65 = *(void (**)(char *, uint64_t))(v60 + 8);
        v65(v64, v63);
        return ((uint64_t (*)(char *, uint64_t))v65)(v61, v63);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1DB1F0250();
  id v67 = *(id *)(v37 + v34);
  uint64_t v68 = sub_1DB1F0920();
  uint64_t v88 = v69;
  uint64_t v89 = v68;
  uint64_t v71 = v92;
  uint64_t v70 = v93;
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  uint64_t v73 = v94;
  v72(v90, v92, v94);
  uint64_t v74 = v96;
  v72(v91, v96, v73);
  sub_1DB1F0BA0();
  uint64_t v75 = *(void (**)(char *, uint64_t))(v70 + 8);
  v75(v74, v73);
  return ((uint64_t (*)(char *, uint64_t))v75)(v71, v73);
}

uint64_t sub_1DB115CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904588);
  MEMORY[0x1F4188790](v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904590);
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1F0460();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904598);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0440();
  uint64_t v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045A0);
  sub_1DB11A2F8(&qword_1EA9045A8, &qword_1EA9045A0, (void (*)(void))sub_1DB119768);
  sub_1DB1EFED0();
  sub_1DB1F0450();
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045E0);
  sub_1DB119934();
  sub_1DB1EFED0();
  uint64_t v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  uint64_t v14 = v13;
  uint64_t v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  sub_1DB1F0320();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DB116004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DB1EFAE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v30 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045C8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045B8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LanguageDownloadView(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *(unsigned __int8 *)(a1 + *(int *)(v16 + 64));
  sub_1DB1196F8(a1, (uint64_t)v15, type metadata accessor for LanguageDownloadView);
  if (v17 != 3) {
    goto LABEL_10;
  }
  uint64_t v28 = v10;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = *(void *)(v31 + 16);
  if (!v18)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v10 = v28;
LABEL_10:
    sub_1DB119A14((uint64_t)v15, type metadata accessor for LanguageDownloadView);
    uint64_t v21 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v21, 1, v10);
  }
  uint64_t v19 = (unsigned char *)(v31 + 56);
  while (*v19 != 1 || *((void *)v19 - 1) != 0)
  {
    v19 += 48;
    if (!--v18) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  sub_1DB119A14((uint64_t)v15, type metadata accessor for LanguageDownloadView);
  id v23 = v30;
  sub_1DB1EFAD0();
  sub_1DB1F0740();
  uint64_t v24 = sub_1DB1F0750();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v23, v4);
  uint64_t v26 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  uint64_t *v26 = KeyPath;
  v26[1] = v24;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v23, v4);
  sub_1DB119814();
  uint64_t v27 = (uint64_t)v29;
  sub_1DB1F0AA0();
  sub_1DB0E8BD4((uint64_t)v9, &qword_1EA9045C8);
  sub_1DB0F1454(v27, a2, &qword_1EA9045B8);
  uint64_t v21 = 0;
  uint64_t v10 = v28;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v21, 1, v10);
}

uint64_t sub_1DB1163F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_1DB1EFAE0();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045C8);
  MEMORY[0x1F4188790](v36);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045B8);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045A0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9045F0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t (**)())((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for LanguageDownloadView(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16 - 8);
  if (*(unsigned char *)(a1 + *(int *)(v19 + 64)) == 3)
  {
    sub_1DB1196F8(a1, (uint64_t)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguageDownloadView);
    unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v21 = swift_allocObject();
    sub_1DB11963C((uint64_t)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for LanguageDownloadView);
    *uint64_t v15 = sub_1DB1199FC;
    v15[1] = (uint64_t (*)())v21;
    swift_storeEnumTagMultiPayload();
    sub_1DB0EB7D4();
    sub_1DB11A2F8(&qword_1EA9045A8, &qword_1EA9045A0, (void (*)(void))sub_1DB119768);
    return sub_1DB1F0400();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1DB1EF910();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v23 = *(void *)(v42 + 16);
    if (v23)
    {
      uint64_t v24 = (unsigned char *)(v42 + 56);
      while (*v24 != 1 || *((void *)v24 - 1) != 0)
      {
        v24 += 48;
        if (!--v23) {
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      sub_1DB1EFAD0();
      sub_1DB1F0740();
      uint64_t v34 = sub_1DB1F0750();
      swift_release();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v29 = v37;
      uint64_t v28 = v38;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v7, v5, v38);
      char v30 = (uint64_t *)&v7[*(int *)(v36 + 36)];
      uint64_t v31 = v34;
      *char v30 = KeyPath;
      v30[1] = v31;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
      sub_1DB119814();
      uint64_t v32 = (uint64_t)v35;
      sub_1DB1F0AA0();
      sub_1DB0E8BD4((uint64_t)v7, &qword_1EA9045C8);
      sub_1DB0F1454(v32, (uint64_t)v12, &qword_1EA9045B8);
      uint64_t v26 = 0;
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v26 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v12, v26, 1, v40);
    sub_1DB0E8B70((uint64_t)v12, (uint64_t)v15, &qword_1EA9045A0);
    swift_storeEnumTagMultiPayload();
    sub_1DB0EB7D4();
    sub_1DB11A2F8(&qword_1EA9045A8, &qword_1EA9045A0, (void (*)(void))sub_1DB119768);
    sub_1DB1F0400();
    return sub_1DB0E8BD4((uint64_t)v12, &qword_1EA9045A0);
  }
}

uint64_t sub_1DB1169B4()
{
  uint64_t v0 = sub_1DB1EFE90();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguageDownloadView(0);
  sub_1DB1C5868((uint64_t)v3);
  MEMORY[0x1E018ADF0](v1);
  sub_1DB1EFE80();
  sub_1DB1F0E00();
  return sub_1DB0E8BD4((uint64_t)v3, &qword_1EA9044E8);
}

uint64_t sub_1DB116ACC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904458);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DB0E8B70(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EA904458);
  return sub_1DB1F00E0();
}

uint64_t sub_1DB116B64()
{
  return sub_1DB1EFFF0();
}

uint64_t sub_1DB116B88()
{
  return sub_1DB1EFFF0();
}

uint64_t sub_1DB116BAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB111A4C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB116BB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB114E78(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB116BBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1151F0(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB116BC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB115CCC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB116BCC()
{
  return sub_1DB1F00D0();
}

unint64_t sub_1DB116BF8()
{
  unint64_t result = qword_1EA9044E0;
  if (!qword_1EA9044E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9044E0);
  }
  return result;
}

uint64_t sub_1DB116C4C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for LanguageDownloadView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v9 = *v10;
    if (EnumCaseMultiPayload == 1)
    {
      v9[1] = v10[1];
      swift_retain();
      swift_retain();
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
      uint64_t v13 = (char *)v9 + v12;
      uint64_t v14 = (char *)v10 + v12;
      uint64_t v15 = sub_1DB1EFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v17;
    unint64_t v20 = (char *)a2 + v17;
    *uint64_t v19 = *v20;
    *((void *)v19 + 1) = *((void *)v20 + 1);
    uint64_t v21 = (char *)a1 + v18;
    uint64_t v22 = (char *)a2 + v18;
    *uint64_t v21 = *v22;
    *((void *)v21 + 1) = *((void *)v22 + 1);
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    id v25 = (char *)a1 + v23;
    uint64_t v26 = (char *)a2 + v23;
    *id v25 = *v26;
    *((void *)v25 + 1) = *((void *)v26 + 1);
    uint64_t v27 = (void *)((char *)a1 + v24);
    uint64_t v28 = (char *)a2 + v24;
    uint64_t v29 = *(void **)((char *)a2 + v24);
    swift_retain();
    swift_retain();
    swift_retain();
    id v30 = v29;
    uint64_t v31 = *((void *)v28 + 1);
    *uint64_t v27 = v29;
    v27[1] = v31;
    uint64_t v32 = a3[10];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_1DB1F0EE0();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_retain();
    v36(v33, v34, v35);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
    *(void *)&v33[*(int *)(v37 + 28)] = *(void *)&v34[*(int *)(v37 + 28)];
    uint64_t v38 = a3[11];
    uint64_t v39 = a3[12];
    uint64_t v40 = (void *)((char *)a1 + v38);
    uint64_t v41 = (void *)((char *)a2 + v38);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = (void *)((char *)a1 + v39);
    uint64_t v44 = (void *)((char *)a2 + v39);
    uint64_t v45 = v44[1];
    void *v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = a3[13];
    uint64_t v47 = a3[14];
    uint64_t v48 = *(void **)((char *)a2 + v46);
    *(void *)((char *)a1 + v46) = v48;
    *((unsigned char *)a1 + v47) = *((unsigned char *)a2 + v47);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v49 = v48;
  }
  return a1;
}

void destroy for LanguageDownloadView(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v7 = sub_1DB1EFE90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = sub_1DB1F0EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v10 = *(void **)(a1 + a2[13]);
}

void *initializeWithCopy for LanguageDownloadView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v8 = *v9;
  if (EnumCaseMultiPayload == 1)
  {
    v8[1] = v9[1];
    swift_retain();
    swift_retain();
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_1DB1EFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  char *v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  uint64_t v19 = (char *)a1 + v16;
  unint64_t v20 = (char *)a2 + v16;
  *uint64_t v19 = *v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  char *v23 = *v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  id v25 = (void *)((char *)a1 + v22);
  uint64_t v26 = (char *)a2 + v22;
  uint64_t v27 = *(void **)((char *)a2 + v22);
  swift_retain();
  swift_retain();
  swift_retain();
  id v28 = v27;
  uint64_t v29 = *((void *)v26 + 1);
  *id v25 = v27;
  v25[1] = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_1DB1F0EE0();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  swift_retain();
  v34(v31, v32, v33);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  *(void *)&v31[*(int *)(v35 + 28)] = *(void *)&v32[*(int *)(v35 + 28)];
  uint64_t v36 = a3[11];
  uint64_t v37 = a3[12];
  uint64_t v38 = (void *)((char *)a1 + v36);
  uint64_t v39 = (void *)((char *)a2 + v36);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = (void *)((char *)a1 + v37);
  uint64_t v42 = (void *)((char *)a2 + v37);
  uint64_t v43 = v42[1];
  void *v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = a3[13];
  uint64_t v45 = a3[14];
  uint64_t v46 = *(void **)((char *)a2 + v44);
  *(void *)((char *)a1 + v44) = v46;
  *((unsigned char *)a1 + v45) = *((unsigned char *)a2 + v45);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v47 = v46;
  return a1;
}

void *assignWithCopy for LanguageDownloadView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1DB0E8BD4((uint64_t)a1 + v6, &qword_1EA904440);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v7[1] = v8[1];
      swift_retain();
      swift_retain();
      uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
      uint64_t v11 = (char *)v7 + v10;
      uint64_t v12 = (char *)v8 + v10;
      uint64_t v13 = sub_1DB1EFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *uint64_t v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *uint64_t v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_release();
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)((char *)a1 + v23);
  id v25 = (char *)a2 + v23;
  uint64_t v26 = *(void **)((char *)a1 + v23);
  uint64_t v27 = *(void **)((char *)a2 + v23);
  id v28 = v27;
  *uint64_t v24 = v27;

  v24[1] = *((void *)v25 + 1);
  swift_retain();
  swift_release();
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_1DB1F0EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  *(void *)&v30[*(int *)(v33 + 28)] = *(void *)&v31[*(int *)(v33 + 28)];
  swift_retain();
  swift_release();
  uint64_t v34 = a3[11];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_retain();
  swift_release();
  uint64_t v37 = a3[12];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  *(void *)((char *)a1 + v37) = *(void *)((char *)a2 + v37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_retain();
  swift_release();
  uint64_t v40 = a3[13];
  uint64_t v41 = *(void **)((char *)a2 + v40);
  uint64_t v42 = *(void **)((char *)a1 + v40);
  *(void *)((char *)a1 + v4__isPlatformVersionAtLeast(2, 18, 1, 0) = v41;
  id v43 = v41;

  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  return a1;
}

_OWORD *initializeWithTake for LanguageDownloadView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v10;
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_1DB1EFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v15 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  uint64_t v16 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1DB1F0EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  *(void *)&v18[*(int *)(v21 + 28)] = *(void *)&v19[*(int *)(v21 + 28)];
  uint64_t v22 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  uint64_t v23 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  return a1;
}

void *assignWithTake for LanguageDownloadView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1DB0E8BD4((uint64_t)a1 + v7, &qword_1EA904440);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v11;
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      uint64_t v15 = sub_1DB1EFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char *v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_release();
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_release();
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  char *v23 = *v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_release();
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  id v28 = *(void **)((char *)a1 + v25);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);

  *((void *)v26 + 1) = *((void *)v27 + 1);
  swift_release();
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_1DB1F0EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  *(void *)&v30[*(int *)(v33 + 28)] = *(void *)&v31[*(int *)(v33 + 28)];
  swift_release();
  uint64_t v34 = a3[11];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);
  swift_bridgeObjectRelease();
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_release();
  uint64_t v37 = a3[12];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  *(void *)((char *)a1 + v37) = *(void *)((char *)a2 + v37);
  swift_bridgeObjectRelease();
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_release();
  uint64_t v40 = a3[13];
  uint64_t v41 = *(void **)((char *)a1 + v40);
  *(void *)((char *)a1 + v4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)((char *)a2 + v40);

  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageDownloadView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB117AA4);
}

uint64_t sub_1DB117AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for LanguageDownloadView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB117BEC);
}

uint64_t sub_1DB117BEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044F0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DB117D20()
{
  sub_1DB117E20();
  if (v0 <= 0x3F)
  {
    sub_1DB117E7C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DB117E20()
{
  if (!qword_1EA904508)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9044E8);
    unint64_t v0 = sub_1DB1EFB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA904508);
    }
  }
}

void sub_1DB117E7C()
{
  if (!qword_1EA904510)
  {
    sub_1DB1F0EE0();
    unint64_t v0 = sub_1DB1F0D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA904510);
    }
  }
}

uint64_t getEnumTagSinglePayload for LanguageDownloadView.ContextView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LanguageDownloadView.ContextView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB118030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageDownloadView.ContextView()
{
  return &type metadata for LanguageDownloadView.ContextView;
}

unint64_t sub_1DB11806C()
{
  unint64_t result = qword_1EA904518;
  if (!qword_1EA904518)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9044D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904488);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904480);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904478);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9044B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904470);
    sub_1DB1F04A0();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904468);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904460);
    sub_1DB0E3C44(&qword_1EA9044A8, &qword_1EA904460);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA9044B8, &qword_1EA9044B0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA904520, &qword_1EA9044D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904518);
  }
  return result;
}

void *sub_1DB1182D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    void *v4 = *a2;
    unsigned int v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 64) = v10;
    uint64_t v11 = a2[11];
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v21 = (uint64_t)a2 + v12;
    uint64_t v22 = a1 + v12;
    *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v13 = sub_1DB1F0EE0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v22, v21, v13);
    uint64_t v15 = *(int *)(a3 + 28);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    if (*v17)
    {
      uint64_t v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
  }
  return v4;
}

uint64_t sub_1DB118450(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DB1F0EE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  if (*(void *)(a1 + *(int *)(a2 + 28)))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DB118510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v12 = sub_1DB1F0EE0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v19, v11, v12);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  if (*v16)
  {
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  return a1;
}

uint64_t sub_1DB118644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DB1F0EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *(void *)(a1 + v12);
  uint64_t v16 = *v14;
  if (!v15)
  {
    if (v16)
    {
      uint64_t v18 = v14[1];
      *uint64_t v13 = v16;
      v13[1] = v18;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v17 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DB1187C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = sub_1DB1F0EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  uint64_t v16 = *v15;
  if (*v15)
  {
    uint64_t v17 = v15[1];
    void *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  return a1;
}

uint64_t sub_1DB118888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1DB1F0EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14);
  uint64_t v18 = *v16;
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = v16[1];
      *uint64_t v15 = v18;
      v15[1] = v20;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    return a1;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v19 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v19;
  swift_release();
  return a1;
}

uint64_t sub_1DB1189BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1189D0);
}

uint64_t sub_1DB1189D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DB1F0EE0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DB118A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB118A94);
}

uint64_t sub_1DB118A94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DB1F0EE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LanguageDownloadButton(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA904528);
}

uint64_t sub_1DB118B5C()
{
  uint64_t result = sub_1DB1F0EE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1DB118BFC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a2[5];
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
    uint64_t v12 = sub_1DB1EF6B0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(void *)v16;
    LOBYTE(v6) = *(unsigned char *)(v16 + 8);
    sub_1DB118D3C(*(void *)v16, v6);
    *(void *)uint64_t v15 = v17;
    v15[8] = v6;
  }
  return v4;
}

uint64_t sub_1DB118D3C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1DB118D48(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DB1EF6B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  return sub_1DB118DE4(v7, v8);
}

uint64_t sub_1DB118DE4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DB118DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = v4 + v13;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v4) = *(unsigned char *)(v15 + 8);
  sub_1DB118D3C(*(void *)v15, v4);
  *(void *)uint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v4;
  return a1;
}

uint64_t sub_1DB118EE0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = v4[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)v4 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v4[4];
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)v4 + v7;
  uint64_t v10 = sub_1DB1EF6B0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (char *)v4 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v4) = v13[8];
  sub_1DB118D3C(*(void *)v13, (char)v4);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = (_BYTE)v4;
  sub_1DB118DE4(v15, v16);
  return a1;
}

_OWORD *sub_1DB118FE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DB1EF6B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t sub_1DB119098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DB1EF6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  LOBYTE(v14) = *((unsigned char *)v14 + 8);
  uint64_t v16 = *(void *)v13;
  char v17 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = (_BYTE)v14;
  sub_1DB118DE4(v16, v17);
  return a1;
}

uint64_t sub_1DB119174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB119188);
}

uint64_t sub_1DB119188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DB1EF6B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DB119238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB11924C);
}

uint64_t sub_1DB11924C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DB1EF6B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LanguageListItem(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA904538);
}

uint64_t sub_1DB119314()
{
  uint64_t result = sub_1DB1EF6B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1DB1193B8()
{
  unint64_t result = qword_1EA904548;
  if (!qword_1EA904548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904548);
  }
  return result;
}

uint64_t sub_1DB11940C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB119428()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB119444()
{
  unint64_t v1 = (int *)(type metadata accessor for LanguageDownloadButton(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = sub_1DB1F0EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  if (*(void *)(v2 + v1[9])) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB119568()
{
  uint64_t v1 = type metadata accessor for LanguageDownloadButton(0);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v4 = (uint64_t (**)(void))(v0
                          + *(int *)(result + 36)
                          + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  if (*v4) {
    return (*v4)();
  }
  return result;
}

uint64_t sub_1DB1195DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB10F5BC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB1195E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1F00F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DB119614()
{
  return sub_1DB1F0100();
}

uint64_t sub_1DB11963C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DB1196A4()
{
  unint64_t result = qword_1EA904578;
  if (!qword_1EA904578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904578);
  }
  return result;
}

uint64_t sub_1DB1196F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB119760@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB116004(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DB119768()
{
  unint64_t result = qword_1EA9045B0;
  if (!qword_1EA9045B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9045B8);
    sub_1DB119814();
    sub_1DB1198E4(&qword_1EA9045D8, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9045B0);
  }
  return result;
}

unint64_t sub_1DB119814()
{
  unint64_t result = qword_1EA9045C0;
  if (!qword_1EA9045C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9045C8);
    sub_1DB1198E4(&qword_1EA9045D0, MEMORY[0x1E4F3C4E8]);
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9045C0);
  }
  return result;
}

uint64_t sub_1DB1198E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB11992C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1163F8(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DB119934()
{
  unint64_t result = qword_1EA9045E8;
  if (!qword_1EA9045E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9045E0);
    sub_1DB0EB7D4();
    sub_1DB11A2F8(&qword_1EA9045A8, &qword_1EA9045A0, (void (*)(void))sub_1DB119768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9045E8);
  }
  return result;
}

uint64_t sub_1DB1199FC()
{
  return sub_1DB11AC3C((uint64_t (*)(uint64_t))sub_1DB1169B4);
}

uint64_t sub_1DB119A14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_36Tm()
{
  uint64_t v1 = (int *)type metadata accessor for LanguageDownloadView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  uint64_t v4 = v3 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v7 = sub_1DB1EFE90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v8 = v3 + v1[10];
  uint64_t v9 = sub_1DB1F0EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DB119C9C()
{
  return sub_1DB119CB0(1);
}

uint64_t sub_1DB119CA8()
{
  return sub_1DB119CB0(0);
}

uint64_t sub_1DB119CB0(char a1)
{
  return sub_1DB110A50(a1);
}

uint64_t sub_1DB119D18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DB103C1C;
  return sub_1DB13740C(a1, v4, v5, v7, v6);
}

unint64_t sub_1DB119DD8()
{
  unint64_t result = qword_1EA904678;
  if (!qword_1EA904678)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904678);
  }
  return result;
}

uint64_t sub_1DB119E44(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DB0EB23C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DB119E90()
{
  unint64_t result = qword_1EA904680;
  if (!qword_1EA904680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904628);
    sub_1DB119F30();
    sub_1DB0E3C44((unint64_t *)&qword_1EA9046A0, &qword_1EA9046A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904680);
  }
  return result;
}

unint64_t sub_1DB119F30()
{
  unint64_t result = qword_1EA904688;
  if (!qword_1EA904688)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904620);
    sub_1DB0E3C44(&qword_1EA904690, &qword_1EA904698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904688);
  }
  return result;
}

uint64_t sub_1DB119FC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1127E4(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DB119FD0()
{
  unint64_t result = qword_1EA9046B8;
  if (!qword_1EA9046B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904640);
    sub_1DB119DD8();
    sub_1DB1198E4(&qword_1EA9045D8, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9046B8);
  }
  return result;
}

unint64_t sub_1DB11A07C()
{
  unint64_t result = qword_1EA9046C8;
  if (!qword_1EA9046C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9046C0);
    sub_1DB11A11C();
    sub_1DB0E3C44(&qword_1EA9046E8, &qword_1EA9046F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9046C8);
  }
  return result;
}

unint64_t sub_1DB11A11C()
{
  unint64_t result = qword_1EA9046D0;
  if (!qword_1EA9046D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9046D8);
    sub_1DB1198E4(&qword_1EA9046E0, (void (*)(uint64_t))type metadata accessor for LanguageListItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9046D0);
  }
  return result;
}

unint64_t sub_1DB11A1C0()
{
  unint64_t result = qword_1EA9046F8;
  if (!qword_1EA9046F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904638);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904628);
    sub_1DB1EFE70();
    sub_1DB119E90();
    sub_1DB1198E4((unint64_t *)&qword_1EA903ED8, MEMORY[0x1E4F3CD40]);
    swift_getOpaqueTypeConformance2();
    sub_1DB1198E4(&qword_1EA9045D8, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9046F8);
  }
  return result;
}

uint64_t sub_1DB11A2F0()
{
  return sub_1DB113D24(*(void *)(v0 + 16));
}

uint64_t sub_1DB11A2F8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB11A364()
{
  unint64_t result = qword_1EA904710;
  if (!qword_1EA904710)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904718);
    sub_1DB11A404();
    sub_1DB0E3C44(&qword_1EBA4D850, &qword_1EBA4D858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904710);
  }
  return result;
}

unint64_t sub_1DB11A404()
{
  unint64_t result = qword_1EA904720;
  if (!qword_1EA904720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904728);
    sub_1DB1198E4(&qword_1EA904730, (void (*)(uint64_t))type metadata accessor for LanguageDownloadButton);
    sub_1DB1198E4(&qword_1EA9045D8, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904720);
  }
  return result;
}

unint64_t sub_1DB11A4E0()
{
  unint64_t result = qword_1EA904748;
  if (!qword_1EA904748)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904740);
    sub_1DB119DD8();
    sub_1DB0E3C44((unint64_t *)&qword_1EA9046A0, &qword_1EA9046A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904748);
  }
  return result;
}

unint64_t sub_1DB11A580()
{
  unint64_t result = qword_1EA904750;
  if (!qword_1EA904750)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904650);
    sub_1DB11A4E0();
    sub_1DB1198E4(&qword_1EA9045D8, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904750);
  }
  return result;
}

uint64_t sub_1DB11A634@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LanguageDownloadView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1DB113F44(a1, v6, a2);
}

uint64_t sub_1DB11A6B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DB11A6EC()
{
  uint64_t v1 = (int *)type metadata accessor for LanguageDownloadView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  uint64_t v4 = v3 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v7 = sub_1DB1EFE90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v8 = v3 + v1[10];
  uint64_t v9 = sub_1DB1F0EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044C0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB11A930()
{
  uint64_t v1 = *(void *)(type metadata accessor for LanguageDownloadView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (long long *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DB1146A8(v0 + v2, v3);
}

uint64_t sub_1DB11A9C4()
{
  return swift_deallocObject();
}

unsigned char *sub_1DB11A9D4(unsigned char *a1)
{
  return sub_1DB0EB364(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_1DB11A9DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t objectdestroy_45Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB11AA84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DB1036D0;
  return sub_1DB13A0DC(a1, v4, v5, v7, v6);
}

uint64_t sub_1DB11AB48(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for LanguageDownloadView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DB112D7C(a1, v4);
}

uint64_t sub_1DB11ABB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB11ABF0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DB11AC18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB1134AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB11AC24()
{
  return sub_1DB11AC3C((uint64_t (*)(uint64_t))sub_1DB113C78);
}

uint64_t sub_1DB11AC3C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for LanguageDownloadView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t sub_1DB11ACB4()
{
  return sub_1DB110C2C();
}

uint64_t *sub_1DB11AD10(uint64_t *a1)
{
  return sub_1DB112EF4(a1, *(void *)(v1 + 16));
}

double sub_1DB11AD2C@<D0>(uint64_t a1@<X8>)
{
  return sub_1DB1109B4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

unint64_t sub_1DB11AD44()
{
  unint64_t result = qword_1EA904788;
  if (!qword_1EA904788)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904788);
  }
  return result;
}

unint64_t sub_1DB11ADC4()
{
  unint64_t result = qword_1EA904790;
  if (!qword_1EA904790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904568);
    sub_1DB0E3C44(&qword_1EA904798, &qword_1EA904550);
    sub_1DB0E3C44(&qword_1EA903EC0, &qword_1EA903EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904790);
  }
  return result;
}

uint64_t sub_1DB11AE88()
{
  return sub_1DB0E3C44(&qword_1EA9047A0, &qword_1EA9047A8);
}

uint64_t sub_1DB11AEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for LanguageMenu();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1DB11DC94(a2, (uint64_t)&v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v12 = (v10 + *(unsigned __int8 *)(v5 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  sub_1DB11DCFC((uint64_t)&v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v13 + v11);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v13 + v12, v7, v4);
  uint64_t v16 = a1;
  return sub_1DB1F0D70();
}

uint64_t sub_1DB11B0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  type metadata accessor for LanguageMenu();
  sub_1DB0E8B70((uint64_t)v8, (uint64_t)v5, &qword_1EBA4E570);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  sub_1DB1F0E00();
  return sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E570);
}

uint64_t sub_1DB11B23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v6 = Locale.sqDisplayName(context:in:)(4, (uint64_t)v5);
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = 0;
  }
  unint64_t v10 = 0xE000000000000000;
  if (v8) {
    unint64_t v10 = v8;
  }
  v15[0] = v9;
  v15[1] = v10;
  sub_1DB0F0708();
  uint64_t result = sub_1DB1F0930();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v12;
  *(unsigned char *)(a1 + 16) = v13 & 1;
  *(void *)(a1 + 24) = v14;
  return result;
}

uint64_t LanguageMenu.init(locales:selection:suggestedLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v8 = (int *)type metadata accessor for LanguageMenu();
  uint64_t v9 = v8[6];
  *(void *)((char *)a4 + v9) = 0;
  unint64_t v10 = (void *)((char *)a4 + v8[7]);
  *unint64_t v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  swift_storeEnumTagMultiPayload();
  *a4 = a1;
  sub_1DB11C9E4(a2, (uint64_t)a4 + v8[5]);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)((char *)a4 + v9) = a3;
  return result;
}

uint64_t type metadata accessor for LanguageMenu()
{
  uint64_t result = qword_1EA9047D8;
  if (!qword_1EA9047D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LanguageMenu.body.getter()
{
  return sub_1DB1F0870();
}

uint64_t sub_1DB11B540@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = a2;
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038B8);
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v98 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v97 = (char *)v75 - v5;
  uint64_t v6 = type metadata accessor for LanguageMenu();
  uint64_t v7 = v6 - 8;
  uint64_t v94 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v87 = v8;
  uint64_t v9 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904808);
  uint64_t v10 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v12 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904810);
  MEMORY[0x1F4188790](v85);
  uint64_t v84 = (uint64_t)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904818);
  MEMORY[0x1F4188790](v86);
  uint64_t v15 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DB1F0E60();
  uint64_t v92 = *(void *)(v16 - 8);
  uint64_t v93 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v100 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v99 = (char *)v75 - v19;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904820);
  uint64_t v82 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v80 = (char *)v75 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v81 = (char *)v75 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)v75 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904828);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v96 = (uint64_t)v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v95 = (uint64_t)v75 - v31;
  uint64_t v32 = *(uint64_t *)((char *)a1 + *(int *)(v7 + 32));
  uint64_t v83 = a1;
  if (!v32 || !*(void *)(v32 + 16)) {
    goto LABEL_6;
  }
  uint64_t v77 = v15;
  uint64_t v104 = &type metadata for TranslateFeatures;
  unint64_t v105 = sub_1DB109D10();
  LOBYTE(v101) = 4;
  swift_bridgeObjectRetain();
  char v33 = sub_1DB1EF710();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v101);
  if ((v33 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v101 = *a1;
    swift_getKeyPath();
    sub_1DB11DC94((uint64_t)a1, (uint64_t)v9);
    uint64_t v47 = (uint64_t)v9;
    unint64_t v57 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    uint64_t v58 = swift_allocObject();
    sub_1DB11DCFC((uint64_t)v9, v58 + v57);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904830);
    sub_1DB0E3C44(&qword_1EA904838, &qword_1EA904830);
    sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
    uint64_t v56 = v90;
    sub_1DB1F0E70();
    uint64_t v59 = v91;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v84, v12, v91);
    swift_storeEnumTagMultiPayload();
    sub_1DB0E3C44(&qword_1EA904840, &qword_1EA904818);
    sub_1DB11DD64();
    uint64_t v55 = v95;
    sub_1DB1F0400();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v59);
    goto LABEL_7;
  }
  sub_1DB1F0250();
  uint64_t v101 = sub_1DB1F0920();
  uint64_t v102 = v34;
  uint64_t v103 = v35 & 1;
  uint64_t v104 = v36;
  MEMORY[0x1F4188790](v101);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904670);
  sub_1DB119DD8();
  unint64_t v37 = sub_1DB11DD64();
  id v76 = v27;
  v75[1] = v37;
  sub_1DB1F0E90();
  swift_bridgeObjectRelease();
  uint64_t v38 = v99;
  sub_1DB1F0E50();
  sub_1DB1F0250();
  uint64_t v101 = sub_1DB1F0920();
  uint64_t v102 = v39;
  uint64_t v103 = v40 & 1;
  uint64_t v104 = v41;
  MEMORY[0x1F4188790](v101);
  uint64_t v42 = v81;
  sub_1DB1F0E90();
  id v43 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  uint64_t v44 = v80;
  uint64_t v45 = v27;
  uint64_t v46 = v79;
  v43(v80, v45, v79);
  uint64_t v47 = (uint64_t)v9;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  v48(v100, v38, v93);
  id v49 = v78;
  v43(v78, v42, v46);
  uint64_t v50 = (uint64_t)v77;
  v43(v77, v44, v46);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904858);
  uint64_t v52 = v93;
  v48((char *)(v50 + *(int *)(v51 + 48)), v100, v93);
  v43((char *)(v50 + *(int *)(v51 + 64)), v49, v46);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v82 + 8);
  v53(v49, v46);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v92 + 8);
  v54(v100, v52);
  v53(v80, v46);
  sub_1DB0E8B70(v50, v84, &qword_1EA904818);
  swift_storeEnumTagMultiPayload();
  sub_1DB0E3C44(&qword_1EA904840, &qword_1EA904818);
  uint64_t v55 = v95;
  sub_1DB1F0400();
  sub_1DB0E8BD4(v50, &qword_1EA904818);
  v53(v81, v46);
  v54(v99, v93);
  v53(v76, v46);
  uint64_t v56 = v90;
LABEL_7:
  uint64_t v60 = v99;
  sub_1DB1F0E50();
  sub_1DB11DC94((uint64_t)v83, v47);
  unint64_t v61 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  uint64_t v62 = swift_allocObject();
  sub_1DB11DCFC(v47, v62 + v61);
  uint64_t v63 = v97;
  sub_1DB1F0D70();
  uint64_t v64 = v96;
  sub_1DB0E8B70(v55, v96, &qword_1EA904828);
  uint64_t v65 = v92;
  uint64_t v66 = v93;
  uint64_t v94 = *(void *)(v92 + 16);
  ((void (*)(char *, char *, uint64_t))v94)(v100, v60, v93);
  uint64_t v67 = v88;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  v68(v98, v63, v56);
  uint64_t v69 = v89;
  sub_1DB0E8B70(v64, v89, &qword_1EA904828);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904850);
  ((void (*)(uint64_t, char *, uint64_t))v94)(v69 + *(int *)(v70 + 48), v100, v66);
  uint64_t v71 = v98;
  v68((char *)(v69 + *(int *)(v70 + 64)), v98, v56);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v67 + 8);
  v72(v97, v56);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v65 + 8);
  v73(v99, v66);
  sub_1DB0E8BD4(v95, &qword_1EA904828);
  v72(v71, v56);
  v73(v100, v66);
  return sub_1DB0E8BD4(v96, &qword_1EA904828);
}

uint64_t sub_1DB11C1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageMenu();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  v10[1] = a2;
  swift_getKeyPath();
  sub_1DB11DC94(a1, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1DB11DCFC((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904830);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038B8);
  sub_1DB0E3C44(&qword_1EA904838, &qword_1EA904830);
  sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
  return sub_1DB1F0E70();
}

uint64_t sub_1DB11C374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LanguageMenu();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904808);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + *(int *)(v5 + 32))) {
    uint64_t v12 = *(void *)(a1 + *(int *)(v5 + 32));
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1DB12FD80(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1DB11DE70(v14, v13);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  v20[0] = v16;
  swift_getKeyPath();
  sub_1DB11DC94(a1, (uint64_t)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1DB11DCFC((uint64_t)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904830);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9038B8);
  sub_1DB0E3C44(&qword_1EA904838, &qword_1EA904830);
  sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
  sub_1DB1F0E70();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v11, v8);
}

uint64_t sub_1DB11C624()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DB1EF480();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EFCF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguageMenu();
  sub_1DB1C5B1C((uint64_t)v10);
  sub_1DB1EF470();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_1DB1EFCC0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_1DB11C858@<X0>(uint64_t a1@<X8>)
{
  sub_1DB1F0250();
  uint64_t result = sub_1DB1F0920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1DB11C8D0()
{
  return sub_1DB1F0000();
}

uint64_t sub_1DB11C8F4()
{
  return sub_1DB1F0000();
}

uint64_t sub_1DB11C918(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFCF0();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1DB1F0010();
}

uint64_t sub_1DB11C9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB11CA4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB11B540(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1DB11CA54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB11CA70()
{
  return sub_1DB1F0870();
}

uint64_t *initializeBufferWithCopyOfBuffer for LanguageMenu(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
    uint64_t v13 = (char *)v9 + v12;
    uint64_t v14 = &v10[v12];
    uint64_t v15 = sub_1DB1EF6B0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v18 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1DB1EFCF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LanguageMenu(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1DB1EFCF0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for LanguageMenu(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1DB1EFCF0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    void *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for LanguageMenu(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_1DB0E8BD4((uint64_t)a1 + v18, &qword_1EA9047B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1DB1EFCF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for LanguageMenu(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1DB1EFCF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for LanguageMenu(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    sub_1DB0E8BD4((uint64_t)a1 + v18, &qword_1EA9047B0);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1DB1EFCF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageMenu(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB11D844);
}

uint64_t sub_1DB11D844(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047D0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for LanguageMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB11D98C);
}

void *sub_1DB11D98C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047D0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DB11DAC0()
{
  sub_1DB11DBA0();
  if (v0 <= 0x3F)
  {
    sub_1DB11DBFC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DB11DBA0()
{
  if (!qword_1EA9047E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4E570);
    unint64_t v0 = sub_1DB1F0E30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA9047E8);
    }
  }
}

void sub_1DB11DBFC()
{
  if (!qword_1EA9047F0)
  {
    sub_1DB1EFCF0();
    unint64_t v0 = sub_1DB1EFB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA9047F0);
    }
  }
}

uint64_t sub_1DB11DC54()
{
  return sub_1DB0E3C44(&qword_1EA9047F8, &qword_1EA904800);
}

uint64_t sub_1DB11DC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB11DCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DB11DD64()
{
  unint64_t result = qword_1EA904848;
  if (!qword_1EA904848)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904808);
    sub_1DB0E3C44(&qword_1EA9038C0, &qword_1EA9038B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904848);
  }
  return result;
}

uint64_t sub_1DB11DE00()
{
  type metadata accessor for LanguageMenu();
  return sub_1DB11C624();
}

uint64_t sub_1DB11DE60()
{
  return sub_1DB11C1AC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DB11DE68@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB11C374(*(void *)(v1 + 16), a1);
}

void sub_1DB11DE70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v40 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v32 - v12;
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)v32 - v16;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v39 = *(void *)(a1 + 16);
  if (v39)
  {
    v32[1] = v2;
    unint64_t v17 = 0;
    uint64_t v46 = a2;
    uint64_t v47 = v9 + 16;
    uint64_t v37 = v9 + 48;
    uint64_t v38 = v9 + 56;
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v45 = a2 + 56;
    uint64_t v18 = (void (**)(char *, uint64_t))(v9 + 8);
    v32[0] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v35 = v7;
    uint64_t v36 = a1;
    uint64_t v34 = v9;
    while (v17 < *(void *)(a1 + 16))
    {
      unint64_t v42 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v19 = *(void *)(v9 + 72);
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
      v20(v7, a1 + v42 + v19 * v17, v8, v15);
      char v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v33)(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
        goto LABEL_20;
      }
      unint64_t v43 = v17;
      uint64_t v41 = *v44;
      v41(v48, v7, v8);
      uint64_t v21 = v46;
      if (*(void *)(v46 + 16)
        && (sub_1DB11E324(&qword_1EA904860),
            uint64_t v22 = sub_1DB1F11D0(),
            uint64_t v23 = -1 << *(unsigned char *)(v21 + 32),
            unint64_t v24 = v22 & ~v23,
            ((*(void *)(v45 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) != 0))
      {
        uint64_t v25 = ~v23;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v20)(v13, *(void *)(v21 + 48) + v24 * v19, v8);
          sub_1DB11E324(qword_1EA9051F0);
          char v26 = sub_1DB1F1230();
          uint64_t v27 = *v18;
          (*v18)(v13, v8);
          if (v26) {
            break;
          }
          unint64_t v24 = (v24 + 1) & v25;
          uint64_t v21 = v46;
          if (((*(void *)(v45 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
            goto LABEL_12;
          }
        }
        v27(v48, v8);
        uint64_t v7 = v35;
        a1 = v36;
        uint64_t v9 = v34;
      }
      else
      {
LABEL_12:
        uint64_t v28 = (void (*)(unint64_t, char *, uint64_t))v41;
        v41(v40, v48, v8);
        uint64_t v29 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12E97C(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v49;
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        uint64_t v9 = v34;
        if (v31 >= v30 >> 1)
        {
          sub_1DB12E97C(v30 > 1, v31 + 1, 1);
          uint64_t v29 = v49;
        }
        *(void *)(v29 + 16) = v31 + 1;
        v28(v29 + v42 + v31 * v19, v40, v8);
        uint64_t v49 = v29;
        uint64_t v7 = v35;
        a1 = v36;
      }
      unint64_t v17 = v43 + 1;
      if (v43 + 1 == v39)
      {
        v33(v7, 1, 1, v8, v15);
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v7, 1, 1, v8, v15);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4E570);
  }
}

uint64_t sub_1DB11E324(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DB1EF6B0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = type metadata accessor for LanguageMenu();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  uint64_t v4 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v2 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFCF0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB11E544(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for LanguageMenu() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DB11AEC4(a1, v4);
}

uint64_t sub_1DB11E5C4()
{
  uint64_t v1 = type metadata accessor for LanguageMenu();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v11 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v2 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  unint64_t v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = v0 + v2 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1DB1EFCF0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v11 + v5) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t sub_1DB11E7FC()
{
  uint64_t v1 = *(void *)(type metadata accessor for LanguageMenu() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1DB1EF6B0() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1DB11B0D4(v0 + v2, v5);
}

uint64_t sub_1DB11E8C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB11B23C(a1);
}

uint64_t Locale.title(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v22 - v8;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v10 = Locale.sqDisplayName(context:in:)(a1, (uint64_t)v9);
  uint64_t v12 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v9, v3);
  if (!v12)
  {
    if (qword_1EBA4E298 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1DB1EF810();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBA4F3F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
    __n128 v15 = sub_1DB1EF7F0();
    os_log_type_t v16 = sub_1DB1F1710();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v23 = v18;
      *(_DWORD *)unint64_t v17 = 136446210;
      v22[1] = v17 + 4;
      sub_1DB12015C((unint64_t *)&qword_1EA904868, MEMORY[0x1E4F27A78]);
      uint64_t v19 = sub_1DB1F1D80();
      _OWORD v22[2] = sub_1DB11F638(v19, v20, &v23);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      v13(v6, v3);
      _os_log_impl(&dword_1DB0DC000, v15, v16, "Locale %{public}s has no value for sqDisplayName()", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v18, -1, -1);
      MEMORY[0x1E018CA60](v17, -1, -1);
    }
    else
    {
      v13(v6, v3);
    }

    return 0;
  }
  return v10;
}

uint64_t Locale.subtitle(opposite:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB11FF38(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4E570);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  if ((MEMORY[0x1E01895E0](v1, v9) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = sub_1DB1EF400();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

uint64_t LanguageOption.title(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB11FFEC(v2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 2, v4))
  {
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v13 = sub_1DB1EF400();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    uint64_t v13 = Locale.title(_:)(a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v13;
}

uint64_t LanguageOption.subtitle(opposite:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  os_log_type_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v27 - v18;
  sub_1DB11FF38(a1, (uint64_t)v12);
  unint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v20(v12, 1, v13) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v12, &qword_1EBA4E570);
  }
  else
  {
    uint64_t v27 = v16;
    uint64_t v28 = v9;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v21(v19, v12, v13);
    sub_1DB11FFEC(v2, (uint64_t)v6);
    if (!v20(v6, 2, v13))
    {
      uint64_t v23 = v27;
      v21(v27, v6, v13);
      uint64_t v24 = (uint64_t)v28;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v28, v19, v13);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v13);
      uint64_t v22 = Locale.subtitle(opposite:)(v24);
      sub_1DB0E8BD4(v24, &qword_1EBA4E570);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v14 + 8);
      v25(v23, v13);
      v25(v19, v13);
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    sub_1DB120050((uint64_t)v6);
  }
  return 0;
}

uint64_t LanguageOption.id.getter()
{
  uint64_t v1 = sub_1DB1EF6B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB11FFEC(v0, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1)) {
    return LanguageOption.title(_:)(0);
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  uint64_t v8 = sub_1DB1EF590();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

uint64_t LanguageOption.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB11FFEC(v1, (uint64_t)v5);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 2, v6))
  {
    sub_1DB120050((uint64_t)v5);
    uint64_t v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    uint64_t v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v8, 1, v6);
}

uint64_t sub_1DB11F638(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1DB11F70C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1DB0E52F4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1DB0E52F4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1DB11F70C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DB1F1920();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1DB11F8C8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1DB1F1B00();
  if (!v8)
  {
    sub_1DB1F1B80();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1DB1F1BF0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1DB11F8C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1DB11F960(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DB11FB40(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1DB11FB40(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DB11F960(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1DB11FAD8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1DB1F1AC0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1DB1F1B80();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1DB1F13C0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1DB1F1BF0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1DB1F1B80();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1DB11FAD8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4F0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1DB11FB40(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904888);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DB11FFEC(a1, (uint64_t)v14);
  sub_1DB11FFEC(a2, v15);
  os_log_type_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_1DB11FFEC((uint64_t)v14, (uint64_t)v10);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v18 = MEMORY[0x1E01895E0](v10, v7);
      uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_1DB120050((uint64_t)v14);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1) {
      goto LABEL_9;
    }
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_1DB0E8BD4((uint64_t)v14, &qword_1EA904888);
    char v18 = 0;
    return v18 & 1;
  }
  sub_1DB120050((uint64_t)v14);
  char v18 = 1;
  return v18 & 1;
}

uint64_t sub_1DB11FF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LanguageOption()
{
  uint64_t result = qword_1EA904878;
  if (!qword_1EA904878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB11FFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB120050(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguageOption();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB1200AC(uint64_t a1)
{
  uint64_t result = sub_1DB12015C(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DB120104(uint64_t a1)
{
  uint64_t result = sub_1DB12015C(&qword_1EA904870, (void (*)(uint64_t))type metadata accessor for LanguageOption);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DB12015C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of LanguagePickerElement.title(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LanguagePickerElement.subtitle(opposite:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t *initializeBufferWithCopyOfBuffer for LanguageOption(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1DB1EF6B0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for LanguageOption(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for LanguageOption(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for LanguageOption(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for LanguageOption(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for LanguageOption(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageOption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB120904);
}

uint64_t sub_1DB120904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LanguageOption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB120984);
}

uint64_t sub_1DB120984(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1DB120A08(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF6B0();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_1DB120A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_1DB120AE0()
{
  uint64_t result = sub_1DB1EF6B0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DB120B58@<X0>(void *a1@<X8>)
{
  sub_1DB124D8C();
  uint64_t result = sub_1DB1F0170();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB120BA8()
{
  return sub_1DB1F0180();
}

uint64_t LanguagePicker.init(selectedLocale:preferredLocales:oppositeLocale:languageModels:disabledLanguages:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = (int *)type metadata accessor for LanguagePicker();
  uint64_t v13 = v12[5];
  *(void *)(a6 + v13) = 0;
  uint64_t v14 = v12[8];
  *(void *)(a6 + v14) = MEMORY[0x1E4FBC870];
  uint64_t v15 = a6 + v12[9];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  sub_1DB0F1454(a1, a6, &qword_1EBA4D878);
  swift_bridgeObjectRelease();
  *(void *)(a6 + v13) = a2;
  uint64_t v16 = a6 + v12[6];
  uint64_t v17 = sub_1DB1EF6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a3, v17);
  *(void *)(a6 + v12[7]) = a4;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a6 + v14) = a5;
  return result;
}

uint64_t type metadata accessor for LanguagePicker()
{
  uint64_t result = qword_1EBA4D3F0;
  if (!qword_1EBA4D3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB120D4C@<X0>(void *a1@<X8>)
{
  sub_1DB124D8C();
  uint64_t result = sub_1DB1F0170();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB120D9C()
{
  return sub_1DB1F0180();
}

uint64_t LanguagePicker.body.getter()
{
  uint64_t v1 = sub_1DB1F0FE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903518);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v0;
  uint64_t v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D828);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D890);
  sub_1DB122824();
  sub_1DB122968();
  sub_1DB1F0860();
  sub_1DB1F0FD0();
  sub_1DB0E3C44(&qword_1EA903510, &qword_1EA903518);
  sub_1DB1F0B80();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DB121018(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguagePicker();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  v8[1] = sub_1DB1211B8();
  swift_getKeyPath();
  sub_1DB124634(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1DB124860((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D808);
  sub_1DB0E3C44(&qword_1EBA4D8A8, &qword_1EBA4D8A0);
  sub_1DB1229DC();
  return sub_1DB1F0E70();
}

uint64_t sub_1DB1211B0()
{
  return sub_1DB121018(*(void *)(v0 + 16));
}

uint64_t sub_1DB1211B8()
{
  uint64_t v1 = sub_1DB1EF6B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v73 - v6;
  MEMORY[0x1F4188790](v8);
  int v10 = (char *)&v73 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)&v73 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v84 = (char *)&v73 - v14;
  uint64_t v15 = type metadata accessor for LanguagePicker();
  uint64_t v16 = *(void *)(v0 + *(int *)(v15 + 20));
  if (!v16) {
    return swift_bridgeObjectRetain();
  }
  int64_t v17 = *(void *)(v16 + 16);
  if (!v17) {
    return swift_bridgeObjectRetain();
  }
  uint64_t v73 = v15;
  uint64_t v77 = v10;
  uint64_t v78 = (uint64_t)v7;
  *(void *)&long long v79 = v4;
  uint64_t v74 = v0;
  uint64_t v91 = (char *)MEMORY[0x1E4FBC860];
  sub_1DB12E8F0(0, v17, 0);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v18 = v2 + 16;
  id v76 = v19;
  unint64_t v20 = v16 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
  uint64_t v75 = *(void *)(v18 + 56);
  uint64_t v80 = v18;
  uint64_t v21 = (void (**)(uint64_t, uint64_t))(v18 - 8);
  do
  {
    unint64_t v82 = v20;
    int64_t v83 = v17;
    uint64_t v22 = v84;
    uint64_t v23 = v76;
    v76(v84, (char *)v20, v1);
    v23(v85, v22, v1);
    *(void *)&long long v92 = sub_1DB1EF590();
    *((void *)&v92 + 1) = v24;
    uint64_t v89 = 45;
    unint64_t v90 = 0xE100000000000000;
    uint64_t v87 = 95;
    unint64_t v88 = 0xE100000000000000;
    sub_1DB0F0708();
    uint64_t v25 = sub_1DB1F1950();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    *(void *)&long long v92 = v25;
    *((void *)&v92 + 1) = v27;
    uint64_t v89 = 45;
    unint64_t v90 = 0xE100000000000000;
    uint64_t v87 = 95;
    unint64_t v88 = 0xE100000000000000;
    uint64_t v28 = sub_1DB1F1950();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    unint64_t v31 = v77;
    uint64_t v81 = v28;
    sub_1DB1EF580();
    uint64_t v32 = v78;
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v86 = Locale.sqDisplayName(context:in:)(0, v32);
    uint64_t v34 = v33;
    char v35 = *v21;
    (*v21)(v32, v1);
    uint64_t v36 = v79;
    v23((char *)v79, v31, v1);
    if (v34)
    {
      v35(v36, v1);
      v35((uint64_t)v31, v1);
LABEL_8:
      uint64_t v40 = v81;
      unint64_t v39 = v82;
      goto LABEL_9;
    }
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v37 = Locale.sqDisplaySubname(context:in:)(0, v32);
    uint64_t v34 = v38;
    v35(v32, v1);
    v35(v36, v1);
    v35((uint64_t)v31, v1);
    if (v34)
    {
      uint64_t v86 = v37;
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = v81;
    unint64_t v39 = v82;
    uint64_t v86 = v81;
    uint64_t v34 = v30;
LABEL_9:
    swift_bridgeObjectRelease();
    v35((uint64_t)v85, v1);
    v35((uint64_t)v84, v1);
    uint64_t v41 = v91;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DB12E8F0(0, *((void *)v41 + 2) + 1, 1);
      uint64_t v41 = v91;
    }
    unint64_t v43 = *((void *)v41 + 2);
    unint64_t v42 = *((void *)v41 + 3);
    int64_t v44 = v43 + 1;
    if (v43 >= v42 >> 1)
    {
      unint64_t v47 = *((void *)v41 + 2);
      sub_1DB12E8F0(v42 > 1, v44, 1);
      unint64_t v43 = v47;
      uint64_t v41 = v91;
    }
    *((void *)v41 + 2) = v44;
    uint64_t v45 = (uint64_t)(v41 + 32);
    uint64_t v46 = (uint64_t)&v41[48 * v43 + 32];
    *(void *)uint64_t v46 = v40;
    *(void *)(v46 + 8) = v30;
    *(void *)(v46 + 16) = 1;
    *(unsigned char *)(v46 + 24) = 1;
    *(void *)(v46 + 32) = v86;
    *(void *)(v46 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v34;
    unint64_t v20 = v39 + v75;
    int64_t v17 = v83 - 1;
  }
  while (v83 != 1);
  uint64_t v89 = *(void *)(v74 + *(int *)(v73 + 28));
  swift_bridgeObjectRetain();
  uint64_t v77 = v41;
  swift_retain();
  uint64_t v49 = 0;
  *(void *)&long long v50 = 136315138;
  long long v79 = v50;
  uint64_t v78 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v81 = (uint64_t)(v41 + 32);
  unint64_t v82 = v43;
  while (1)
  {
    uint64_t v85 = (char *)v49;
    uint64_t v52 = v45 + 48 * v49;
    uint64_t v53 = *(void *)v52;
    unint64_t v54 = *(void *)(v52 + 8);
    uint64_t v84 = *(char **)(v52 + 40);
    uint64_t v55 = (void *)v89;
    uint64_t v56 = *(void *)(v89 + 16);
    if (v56) {
      break;
    }
LABEL_46:
    if (qword_1EBA4E298 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_1DB1EF810();
    __swift_project_value_buffer(v68, (uint64_t)qword_1EBA4F3F0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1DB1EF7F0();
    os_log_type_t v70 = sub_1DB1F1710();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v87 = v72;
      *(_DWORD *)uint64_t v71 = v79;
      swift_bridgeObjectRetain();
      *(void *)(v71 + 4) = sub_1DB11F638(v53, v54, &v87);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DB0DC000, v69, v70, "When sorting language menu, master list does not contain LID identified language %s", (uint8_t *)v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v72, -1, -1);
      MEMORY[0x1E018CA60](v71, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v51 = (uint64_t)v85;
LABEL_19:
    uint64_t v49 = v51 + 1;
    uint64_t v45 = v81;
    if (v51 == v82)
    {
      swift_release_n();
      return v89;
    }
  }
  unint64_t v57 = 0;
  int64_t v58 = *(void *)(v52 + 16);
  int v59 = *(unsigned __int8 *)(v52 + 24);
  uint64_t v80 = *(void *)(v52 + 32);
  int64_t v83 = v58;
  if (v58) {
    char v60 = v59;
  }
  else {
    char v60 = 0;
  }
  if (v58) {
    int v61 = 0;
  }
  else {
    int v61 = v59;
  }
  LODWORD(v86) = v61;
  uint64_t v62 = 5;
  while (2)
  {
    uint64_t v63 = v55[v62 + 1];
    char v64 = v55[v62 + 2];
    BOOL v65 = v55[v62 - 1] == v53 && v55[v62] == v54;
    if (!v65 && (sub_1DB1F1DB0() & 1) == 0) {
      goto LABEL_29;
    }
    if ((v64 & 1) == 0)
    {
      if ((v59 & 1) == 0) {
        break;
      }
      goto LABEL_29;
    }
    if (v63)
    {
      if (v60) {
        break;
      }
      goto LABEL_29;
    }
    if ((v86 & 1) == 0)
    {
LABEL_29:
      ++v57;
      v62 += 6;
      if (v56 == v57) {
        goto LABEL_46;
      }
      continue;
    }
    break;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v55 = sub_1DB188FAC(v55);
  }
  unint64_t v66 = v55[2];
  if (v66 <= v57)
  {
    __break(1u);
    goto LABEL_52;
  }
  if ((uint64_t)(~v57 + v66) >= 0)
  {
    unint64_t v67 = v66 - 1;
    memmove(&v55[v62 - 1], &v55[v62 + 5], 48 * (~v57 + v66));
    v55[2] = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v89 = (uint64_t)v55;
    uint64_t v51 = (uint64_t)v85;
    if (v55[2] >= (unint64_t)v85)
    {
      *(void *)&long long v92 = v53;
      *((void *)&v92 + 1) = v54;
      int64_t v93 = v83;
      char v94 = v59;
      uint64_t v95 = v80;
      uint64_t v96 = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DB156EE8(v51, v51, &v92);
      goto LABEL_19;
    }
LABEL_52:
    __break(1u);
  }
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB121A5C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v48 = sub_1DB1EF6B0();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  int64_t v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = type metadata accessor for LanguagePicker();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v43 = v9 - 8;
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  long long v12 = a1[1];
  long long v53 = *a1;
  long long v54 = v12;
  long long v55 = a1[2];
  sub_1DB124634(a2, (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DB1F1570();
  sub_1DB11A6B4((uint64_t)&v53);
  uint64_t v13 = sub_1DB1F1560();
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = MEMORY[0x1E4FBCFD8];
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v16;
  long long v17 = v54;
  *(_OWORD *)(v15 + 32) = v53;
  *(_OWORD *)(v15 + 48) = v17;
  *(_OWORD *)(v15 + 64) = v55;
  sub_1DB124860((uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + ((v14 + 80) & ~v14));
  sub_1DB124634(a2, (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DB11A6B4((uint64_t)&v53);
  uint64_t v18 = sub_1DB1F1560();
  uint64_t v19 = (v14 + 32) & ~v14;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = MEMORY[0x1E4FBCFD8];
  sub_1DB124860((uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  uint64_t v21 = (long long *)(v20 + ((v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v22 = v54;
  *uint64_t v21 = v53;
  v21[1] = v22;
  v21[2] = v55;
  sub_1DB1F0E20();
  uint64_t v23 = *((void *)&v50 + 1);
  uint64_t v45 = v50;
  int v47 = v51;
  swift_bridgeObjectRetain();
  sub_1DB1EF580();
  uint64_t v24 = (uint64_t)v44;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v42 = Locale.sqDisplayName(context:in:)(0, v24);
  unint64_t v26 = v25;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  uint64_t v28 = v48;
  v27(v24, v48);
  v27((uint64_t)v8, v28);
  swift_bridgeObjectRetain();
  sub_1DB1EF580();
  LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = MEMORY[0x1E01895E0](v8, a2 + *(int *)(v43 + 32));
  v27((uint64_t)v8, v28);
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  if (v20)
  {
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v32 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v29 = sub_1DB1EF400();
    uint64_t v30 = v33;
  }
  if (v26) {
    unint64_t v34 = v26;
  }
  else {
    unint64_t v34 = 0xE000000000000000;
  }
  if (v26) {
    uint64_t v35 = v42;
  }
  else {
    uint64_t v35 = 0;
  }
  long long v50 = v53;
  long long v51 = v54;
  long long v52 = v55;
  uint64_t v36 = v45;
  swift_retain();
  swift_retain();
  BOOL v37 = sub_1DB1221BC(&v50);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = swift_allocObject();
  *(unsigned char *)(v39 + 16) = !v37;
  swift_release();
  uint64_t result = swift_release();
  uint64_t v41 = v49;
  void *v49 = v36;
  v41[1] = v23;
  *((unsigned char *)v41 + 16) = v47;
  v41[3] = v35;
  v41[4] = v34;
  v41[5] = v29;
  v41[6] = v30;
  v41[7] = KeyPath;
  v41[8] = sub_1DB11A9D4;
  v41[9] = v39;
  return result;
}

uint64_t sub_1DB121F18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - v7;
  swift_bridgeObjectRetain();
  sub_1DB1EF580();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878);
  MEMORY[0x1E018ADF0](v9);
  char v10 = MEMORY[0x1E01895E0](v8, v5);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
  *a1 = v10 & 1;
  return result;
}

void sub_1DB122068(unsigned char *a1)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v9 - v7;
  if (*a1 == 1)
  {
    swift_bridgeObjectRetain();
    sub_1DB1EF580();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878);
    sub_1DB1F0E00();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

BOOL sub_1DB1221BC(long long *a1)
{
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = a1[1];
  long long v21 = *a1;
  v22[0] = v7;
  v22[1] = a1[2];
  uint64_t v8 = type metadata accessor for LanguagePicker();
  if (sub_1DB15B0F4((uint64_t *)&v21, *(void *)(v1 + *(int *)(v8 + 32)))) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1DB1EF580();
  id v10 = objc_allocWithZone(MEMORY[0x1E4F42390]);
  uint64_t v11 = (void *)sub_1DB1EF5D0();
  long long v12 = (void *)sub_1DB1EF5D0();
  id v13 = objc_msgSend(v10, sel_initWithSourceLocale_targetLocale_, v11, v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (objc_msgSend(v13, sel_isVariantPair))
  {

    return 0;
  }
  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  uint64_t v15 = v14;
  uint64_t v16 = (void *)sub_1DB1F1260();
  unsigned int v17 = objc_msgSend(v15, sel_BOOLForKey_, v16);

  id v18 = objc_msgSend(self, sel_sharedConnection);
  if (!v18)
  {

    if (v17) {
      goto LABEL_7;
    }
    return 1;
  }
  uint64_t v19 = v18;
  unsigned int v20 = objc_msgSend(v18, sel_isOnDeviceOnlyTranslationForced);

  if (((v20 | v17) & 1) == 0) {
    return 1;
  }
LABEL_7:
  sub_1DB11A9DC((uint64_t)v22, (uint64_t)v23);
  sub_1DB11A9DC((uint64_t)v23, (uint64_t)&v24);
  if (v25 != 1) {
    return 0;
  }
  return v24 == 0;
}

uint64_t sub_1DB122430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v38 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D870);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  uint64_t v42 = v10;
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D860);
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D828);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878);
  MEMORY[0x1E018ADF0](v20);
  uint64_t v21 = a1 + *(int *)(type metadata accessor for LanguagePicker() + 36);
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_1DB118D3C(*(void *)v21, v23);
  uint64_t v24 = sub_1DB1C5B5C(v22, v23);
  sub_1DB118DE4(v22, v23);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v25 = Locale.sqDisplayName(context:in:)(v24, (uint64_t)v5);
  unint64_t v27 = v26;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v29 = v5;
  uint64_t v30 = v38;
  v28(v29, v38);
  v28(v8, v30);
  if (v27) {
    uint64_t v31 = v25;
  }
  else {
    uint64_t v31 = 0;
  }
  unint64_t v32 = 0xE000000000000000;
  if (v27) {
    unint64_t v32 = v27;
  }
  uint64_t v44 = v31;
  unint64_t v45 = v32;
  sub_1DB0F0708();
  sub_1DB1F0D00();
  sub_1DB0E3C44(&qword_1EBA4D868, &qword_1EBA4D870);
  sub_1DB122914();
  uint64_t v33 = v41;
  sub_1DB1F0980();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v33);
  uint64_t v35 = v39;
  uint64_t v34 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v19, v15, v40);
  uint64_t v36 = (uint64_t (**)())&v19[*(int *)(v17 + 44)];
  *uint64_t v36 = sub_1DB122AD0;
  v36[1] = 0;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v34);
  return sub_1DB0F1454((uint64_t)v19, v43, &qword_1EBA4D828);
}

uint64_t sub_1DB12281C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB122430(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DB122824()
{
  unint64_t result = qword_1EBA4D820;
  if (!qword_1EBA4D820)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D828);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D870);
    sub_1DB0E3C44(&qword_1EBA4D868, &qword_1EBA4D870);
    sub_1DB122914();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D820);
  }
  return result;
}

unint64_t sub_1DB122914()
{
  unint64_t result = qword_1EBA4D6B0;
  if (!qword_1EBA4D6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D6B0);
  }
  return result;
}

unint64_t sub_1DB122968()
{
  unint64_t result = qword_1EBA4D888;
  if (!qword_1EBA4D888)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D890);
    sub_1DB1229DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D888);
  }
  return result;
}

unint64_t sub_1DB1229DC()
{
  unint64_t result = qword_1EBA4D800;
  if (!qword_1EBA4D800)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D808);
    sub_1DB122A7C();
    sub_1DB0E3C44(&qword_1EBA4D850, &qword_1EBA4D858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D800);
  }
  return result;
}

unint64_t sub_1DB122A7C()
{
  unint64_t result = qword_1EBA4D5D0;
  if (!qword_1EBA4D5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D5D0);
  }
  return result;
}

uint64_t sub_1DB122AD0()
{
  return sub_1DB1EFB80();
}

uint64_t sub_1DB122AFC()
{
  uint64_t v1 = sub_1DB1F0FE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903518);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v0;
  uint64_t v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D828);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D890);
  sub_1DB122824();
  sub_1DB122968();
  sub_1DB1F0860();
  sub_1DB1F0FD0();
  sub_1DB0E3C44(&qword_1EA903510, &qword_1EA903518);
  sub_1DB1F0B80();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LanguagePickerLabelStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1DB1F01C0();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904890);
  return sub_1DB122D80(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1DB122D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v73 = sub_1DB1F0CC0();
  uint64_t v71 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  os_log_type_t v70 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DB1F0520();
  uint64_t v74 = *(void *)(v2 - 8);
  uint64_t v75 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v67 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D810) - 8;
  MEMORY[0x1F4188790](v69);
  uint64_t v68 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D830) - 8;
  MEMORY[0x1F4188790](v76);
  uint64_t v72 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D840) - 8;
  MEMORY[0x1F4188790](v79);
  uint64_t v77 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v78 = (uint64_t)&v60 - v8;
  uint64_t v66 = sub_1DB1F0540();
  uint64_t v9 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D818);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D838) - 8;
  MEMORY[0x1F4188790](v62);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9048A8) - 8;
  MEMORY[0x1F4188790](v63);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9048B0) - 8;
  MEMORY[0x1F4188790](v65);
  uint64_t v61 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v64 = (uint64_t)&v60 - v22;
  sub_1DB1F0550();
  sub_1DB1F0810();
  sub_1DB1F07C0();
  uint64_t v23 = sub_1DB1F07F0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = v66;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v66);
  unint64_t v26 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  uint64_t *v26 = KeyPath;
  v26[1] = v23;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  uint64_t v27 = sub_1DB1F0C00();
  uint64_t v28 = swift_getKeyPath();
  sub_1DB0E8B70((uint64_t)v15, (uint64_t)v17, &qword_1EBA4D818);
  uint64_t v29 = (uint64_t *)&v17[*(int *)(v62 + 44)];
  *uint64_t v29 = v28;
  v29[1] = v27;
  sub_1DB0E8BD4((uint64_t)v15, &qword_1EBA4D818);
  uint64_t v30 = swift_getKeyPath();
  sub_1DB0E8B70((uint64_t)v17, (uint64_t)v19, &qword_1EBA4D838);
  uint64_t v31 = &v19[*(int *)(v63 + 44)];
  *(void *)uint64_t v31 = v30;
  v31[8] = 1;
  sub_1DB0E8BD4((uint64_t)v17, &qword_1EBA4D838);
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = v61;
  sub_1DB0E8B70((uint64_t)v19, v61, &qword_1EA9048A8);
  uint64_t v34 = v33 + *(int *)(v65 + 44);
  *(void *)uint64_t v34 = v32;
  *(void *)(v34 + 8) = 1;
  *(unsigned char *)(v34 + 16) = 0;
  sub_1DB0E8BD4((uint64_t)v19, &qword_1EA9048A8);
  uint64_t v35 = v64;
  sub_1DB0F1454(v33, v64, &qword_1EA9048B0);
  uint64_t v36 = v67;
  sub_1DB1F0530();
  uint64_t v38 = v70;
  uint64_t v37 = v71;
  uint64_t v39 = v73;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, *MEMORY[0x1E4F3EC60], v73);
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = v68;
  uint64_t v42 = (uint64_t *)&v68[*(int *)(v69 + 44)];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D848);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))((char *)v42 + *(int *)(v43 + 28), v38, v39);
  *uint64_t v42 = v40;
  uint64_t v45 = v74;
  uint64_t v44 = v75;
  uint64_t v46 = (uint64_t)v41;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v41, v36, v75);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v44);
  sub_1DB1F0C00();
  uint64_t v47 = sub_1DB1F0C40();
  swift_release();
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = (uint64_t)v41;
  uint64_t v50 = v72;
  sub_1DB0E8B70(v49, v72, &qword_1EBA4D810);
  long long v51 = (uint64_t *)(v50 + *(int *)(v76 + 44));
  *long long v51 = v48;
  v51[1] = v47;
  sub_1DB0E8BD4(v46, &qword_1EBA4D810);
  sub_1DB1F0810();
  sub_1DB1F07C0();
  uint64_t v52 = sub_1DB1F07F0();
  swift_release();
  uint64_t v53 = swift_getKeyPath();
  uint64_t v54 = v77;
  sub_1DB0E8B70(v50, v77, &qword_1EBA4D830);
  long long v55 = (uint64_t *)(v54 + *(int *)(v79 + 44));
  *long long v55 = v53;
  v55[1] = v52;
  sub_1DB0E8BD4(v50, &qword_1EBA4D830);
  uint64_t v56 = v78;
  sub_1DB0F1454(v54, v78, &qword_1EBA4D840);
  sub_1DB0E8B70(v35, v33, &qword_1EA9048B0);
  sub_1DB0E8B70(v56, v54, &qword_1EBA4D840);
  uint64_t v57 = v80;
  sub_1DB0E8B70(v33, v80, &qword_1EA9048B0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9048B8);
  sub_1DB0E8B70(v54, v57 + *(int *)(v58 + 48), &qword_1EBA4D840);
  sub_1DB0E8BD4(v56, &qword_1EBA4D840);
  sub_1DB0E8BD4(v35, &qword_1EA9048B0);
  sub_1DB0E8BD4(v54, &qword_1EBA4D840);
  return sub_1DB0E8BD4(v33, &qword_1EA9048B0);
}

uint64_t sub_1DB123588@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1DB1F01C0();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904890);
  return sub_1DB122D80(a1 + *(int *)(v2 + 44));
}

uint64_t _s13TranslationUI14LanguagePickerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = type metadata accessor for LanguagePicker();
  MEMORY[0x1F4188790](v41);
  uint64_t v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v44 = (char *)&v40 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (uint64_t)&v40 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v42 = (uint64_t)&v40 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v40 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = sub_1DB1EF6B0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878);
  MEMORY[0x1E018ADF0]();
  uint64_t v25 = a2;
  MEMORY[0x1E018ADF0](v24);
  LOBYTE(a2) = MEMORY[0x1E01895E0](v23, v20);
  unint64_t v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v26(v20, v17);
  v26(v23, v17);
  uint64_t v27 = v25;
  sub_1DB124634(a1, (uint64_t)v16);
  sub_1DB124634(v25, (uint64_t)v13);
  if ((a2 & 1) == 0)
  {
    sub_1DB124698((uint64_t)v13);
    sub_1DB124698((uint64_t)v16);
    uint64_t v30 = v42;
    sub_1DB124634(a1, v42);
    uint64_t v31 = v43;
    sub_1DB124634(v25, v43);
    goto LABEL_8;
  }
  uint64_t v28 = v41;
  char v29 = MEMORY[0x1E01895E0](&v16[*(int *)(v41 + 24)], &v13[*(int *)(v41 + 24)]);
  sub_1DB124698((uint64_t)v13);
  sub_1DB124698((uint64_t)v16);
  uint64_t v30 = v42;
  sub_1DB124634(a1, v42);
  uint64_t v31 = v43;
  sub_1DB124634(v27, v43);
  if ((v29 & 1) == 0)
  {
LABEL_8:
    sub_1DB124698(v31);
    sub_1DB124698(v30);
    uint64_t v35 = (uint64_t)v44;
    uint64_t v34 = (uint64_t)v45;
LABEL_9:
    sub_1DB124634(a1, v35);
    sub_1DB124634(v27, v34);
    goto LABEL_10;
  }
  uint64_t v32 = *(int *)(v28 + 20);
  uint64_t v33 = *(void *)(v31 + v32);
  uint64_t v35 = (uint64_t)v44;
  uint64_t v34 = (uint64_t)v45;
  if (!*(void *)(v30 + v32))
  {
    swift_bridgeObjectRetain();
    sub_1DB124698(v31);
    sub_1DB124698(v30);
    if (!v33)
    {
      sub_1DB124634(a1, v35);
      sub_1DB124634(v27, v34);
LABEL_17:
      char v38 = sub_1DB168028(*(void *)(v35 + *(int *)(v28 + 28)), *(void *)(v34 + *(int *)(v28 + 28)));
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  if (!v33)
  {
    swift_bridgeObjectRetain();
    sub_1DB124698(v31);
    sub_1DB124698(v30);
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = swift_bridgeObjectRetain();
  char v37 = sub_1DB167E08(v36, v33);
  swift_bridgeObjectRelease();
  sub_1DB124698(v31);
  sub_1DB124698(v30);
  swift_bridgeObjectRelease();
  sub_1DB124634(a1, v35);
  sub_1DB124634(v27, v34);
  if (v37) {
    goto LABEL_17;
  }
LABEL_10:
  char v38 = 0;
LABEL_11:
  sub_1DB124698(v35);
  sub_1DB124698(v34);
  return v38 & 1;
}

uint64_t sub_1DB1239F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB123A0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for LanguagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DB1EF6B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = v6[6];
    *(uint64_t *)((char *)a1 + v6[5]) = *(uint64_t *)((char *)a2 + v6[5]);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v12(v14, v15, v11);
    uint64_t v16 = v6[8];
    *(uint64_t *)((char *)a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = v6[9];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    LOBYTE(v6) = v19[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DB118D3C(v20, (char)v6);
    *(void *)uint64_t v18 = v20;
    v18[8] = (char)v6;
  }
  return a1;
}

uint64_t destroy for LanguagePicker(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(a1 + *(int *)(a2 + 24), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  return sub_1DB118DE4(v8, v9);
}

void *initializeWithCopy for LanguagePicker(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  swift_bridgeObjectRetain();
  v11(v13, v14, v10);
  uint64_t v15 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  LOBYTE(a3) = v18[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DB118D3C(v19, (char)a3);
  *(void *)uint64_t v17 = v19;
  v17[8] = (char)a3;
  return a1;
}

char *assignWithCopy for LanguagePicker(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)v13;
  LOBYTE(a3) = v13[8];
  sub_1DB118D3C(*(void *)v13, (char)a3);
  uint64_t v15 = *(void *)v12;
  char v16 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)a3;
  sub_1DB118DE4(v15, v16);
  return a1;
}

char *initializeWithTake for LanguagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  v11(&a1[v12], &a2[v12], v10);
  uint64_t v13 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[9];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  return a1;
}

char *assignWithTake for LanguagePicker(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  uint64_t v15 = *(void *)v12;
  char v16 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  sub_1DB118DE4(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB124170);
}

uint64_t sub_1DB124170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB12429C);
}

uint64_t sub_1DB12429C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DB1EF6B0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DB1243B0()
{
  sub_1DB124498();
  if (v0 <= 0x3F)
  {
    sub_1DB1EF6B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DB124498()
{
  if (!qword_1EBA4D880)
  {
    sub_1DB1EF6B0();
    unint64_t v0 = sub_1DB1F0E30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4D880);
    }
  }
}

ValueMetadata *type metadata accessor for LanguagePickerLabelStyle()
{
  return &type metadata for LanguagePickerLabelStyle;
}

uint64_t sub_1DB124500()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB124580()
{
  return sub_1DB0E3C44(&qword_1EA904898, &qword_1EA9048A0);
}

uint64_t sub_1DB1245CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB1EFFB0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DB1245FC()
{
  return sub_1DB1EFFC0();
}

uint64_t sub_1DB124634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguagePicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB124698(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguagePicker();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB1246F4()
{
  uint64_t v1 = (int *)(type metadata accessor for LanguagePicker() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  swift_bridgeObjectRelease();
  v5(v2 + v1[8], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DB118DE4(*(void *)(v2 + v1[11]), *(unsigned char *)(v2 + v1[11] + 8));
  return swift_deallocObject();
}

uint64_t sub_1DB124860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguagePicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1248C4@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LanguagePicker() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1DB121A5C(a1, v6, a2);
}

uint64_t sub_1DB124944()
{
  uint64_t v1 = (int *)(type metadata accessor for LanguagePicker() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_release();
  swift_release();
  unint64_t v4 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(v3 + v1[8], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DB118DE4(*(void *)(v3 + v1[11]), *(unsigned char *)(v3 + v1[11] + 8));
  return swift_deallocObject();
}

uint64_t sub_1DB124AC8@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for LanguagePicker();
  return sub_1DB121F18(a1);
}

uint64_t sub_1DB124B40()
{
  uint64_t v1 = (int *)(type metadata accessor for LanguagePicker() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_release();
  swift_release();
  unint64_t v4 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D878) + 32);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(v3 + v1[8], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DB118DE4(*(void *)(v3 + v1[11]), *(unsigned char *)(v3 + v1[11] + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DB124CD4(unsigned char *a1)
{
  type metadata accessor for LanguagePicker();
  sub_1DB122068(a1);
}

uint64_t sub_1DB124D7C()
{
  return swift_deallocObject();
}

unint64_t sub_1DB124D8C()
{
  unint64_t result = qword_1EBA4D778;
  if (!qword_1EBA4D778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D778);
  }
  return result;
}

uint64_t LanguagePickerItem.body.getter()
{
  return sub_1DB1F0DC0();
}

uint64_t sub_1DB124EDC()
{
  return sub_1DB1EFAF0();
}

uint64_t sub_1DB124F70()
{
  return sub_1DB124EDC();
}

uint64_t sub_1DB124F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DB0F0708();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DB1F0930();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DB1F0930();
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16 & 1;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
  }
  char v18 = v8 & 1;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v13;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v15;
  sub_1DB0EB2A4(v4, v6, v18);
  swift_bridgeObjectRetain();
  sub_1DB1255E8(v11, v13, v17, v15);
  sub_1DB119E44(v11, v13, v17, v15);
  sub_1DB0EB23C(v4, v6, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1250C0()
{
  return sub_1DB1F0DC0();
}

uint64_t _s13TranslationUI18LanguagePickerItemV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[3];
  uint64_t v14 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v13 = a1[6];
  uint64_t v3 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v4 = a2[5];
  uint64_t v5 = a2[6];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
  MEMORY[0x1E018ADF0](&v15);
  int v7 = v15;
  MEMORY[0x1E018ADF0](&v15, v6);
  if (v7 == v15)
  {
    if (v2 == v3 && v14 == v11 || (v10 = sub_1DB1F1DB0(), char v8 = 0, (v10 & 1) != 0))
    {
      char v8 = (v13 | v5) == 0;
      if (v13 && v5)
      {
        if (v12 == v4 && v13 == v5) {
          char v8 = 1;
        }
        else {
          char v8 = sub_1DB1F1DB0();
        }
      }
    }
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1DB125304()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for LanguagePickerItem()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LanguagePickerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LanguagePickerItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LanguagePickerItem(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagePickerItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagePickerItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagePickerItem()
{
  return &type metadata for LanguagePickerItem;
}

uint64_t sub_1DB1255A4()
{
  return sub_1DB0E3C44(&qword_1EA9048D0, &qword_1EA9048D8);
}

uint64_t sub_1DB1255E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB124F78(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB1255E8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DB0EB2A4(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DB125630()
{
  return sub_1DB125658();
}

uint64_t sub_1DB125644()
{
  return sub_1DB125658();
}

uint64_t sub_1DB125658()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  return swift_release();
}

uint64_t sub_1DB1256C8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DB12573C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DB1257B0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__sourceLocale;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904940);
  long long v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__targetLocale, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__selection;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904948);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__suggestedLocales;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocClassInstance();
}

uint64_t sub_1DB125914()
{
  return type metadata accessor for LanguageSelectionModel();
}

uint64_t type metadata accessor for LanguageSelectionModel()
{
  uint64_t result = qword_1EA904910;
  if (!qword_1EA904910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DB125968()
{
  sub_1DB125AE4(319, &qword_1EA904920, &qword_1EBA4E570);
  if (v0 <= 0x3F)
  {
    sub_1DB125A8C();
    if (v1 <= 0x3F)
    {
      sub_1DB125AE4(319, &qword_1EA904930, &qword_1EA904938);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1DB125A8C()
{
  if (!qword_1EA904928)
  {
    unint64_t v0 = sub_1DB1EF930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA904928);
    }
  }
}

void sub_1DB125AE4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_1DB1EF930();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DB125B34()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904950);
  uint64_t v32 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v31 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904948);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904940);
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v26);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__sourceLocale;
  uint64_t v14 = sub_1DB1EF6B0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v12, 1, 1, v14);
  sub_1DB11FF38((uint64_t)v12, (uint64_t)v9);
  sub_1DB1EF8D0();
  sub_1DB125F58((uint64_t)v12);
  char v16 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v25 = v5 + 32;
  uint64_t v17 = v13;
  uint64_t v18 = v27;
  v16(v17, v7, v27);
  uint64_t v19 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__targetLocale;
  v15(v12, 1, 1, v14);
  sub_1DB11FF38((uint64_t)v12, (uint64_t)v9);
  sub_1DB1EF8D0();
  sub_1DB125F58((uint64_t)v12);
  v16(v19, v7, v18);
  uint64_t v20 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__selection;
  uint64_t v34 = 1;
  uint64_t v21 = v28;
  sub_1DB1EF8D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v20, v21, v30);
  uint64_t v22 = v0 + OBJC_IVAR____TtC13TranslationUI22LanguageSelectionModel__suggestedLocales;
  uint64_t v34 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904938);
  uint64_t v23 = v31;
  sub_1DB1EF8D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v22, v23, v33);
  return v0;
}

uint64_t sub_1DB125EF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LanguageSelectionModel();
  uint64_t result = sub_1DB1EF8B0();
  *a1 = result;
  return result;
}

uint64_t sub_1DB125F58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DB125FB8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v37 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  uint64_t v6 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    LODWORD(v32) = a3;
    uint64_t v33 = v6;
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1DB1F1B40();
    char v38 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v11 = a2 + 40;
    do
    {
      double v16 = *(double *)(v11 + 8);
      int v17 = *(unsigned __int8 *)(v11 + 16);
      uint64_t v18 = self;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v19 = (void *)sub_1DB1F1260();
      if (v17 == 1)
      {
        if (v16 == 0.0) {
          id v20 = objc_msgSend(v18, sel_discreteProgressWithIdentifier_offlineState_, v19, 2);
        }
        else {
          id v20 = objc_msgSend(v18, sel_discreteProgressWithIdentifier_offlineState_, v19, 0);
        }
        id v12 = v20;
      }
      else
      {
        id v12 = objc_msgSend(v18, sel_discreteProgressWithIdentifier_offlineState_, v19, 1);

        if (v16 > 0.001) {
          double v13 = v16;
        }
        else {
          double v13 = 0.001;
        }
        objc_msgSend(v12, sel_updatePercentComplete_, v13);
      }
      swift_bridgeObjectRetain();
      sub_1DB1EF580();
      id v14 = objc_allocWithZone(MEMORY[0x1E4F42380]);
      uint64_t v15 = (void *)sub_1DB1EF5D0();
      objc_msgSend(v14, sel_initWithLocale_progress_, v15, v12);

      (*v38)(v9, v39);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1DB1F1B20();
      sub_1DB1F1B50();
      sub_1DB1F1B60();
      sub_1DB1F1B30();
      v11 += 48;
      --v10;
    }
    while (v10);
    LOBYTE(a3) = (_BYTE)v32;
  }
  uint64_t v21 = 2;
  if (a3) {
    uint64_t v21 = 3;
  }
  uint64_t v39 = v21;
  char v38 = (void (**)(char *, uint64_t))self;
  sub_1DB12BEB8();
  uint64_t v33 = sub_1DB1F1480();
  swift_bridgeObjectRelease();
  uint64_t v23 = v34;
  uint64_t v22 = v35;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v24 = v36;
  v32(v34, v37, v36);
  unint64_t v25 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = *(void (**)(unint64_t, char *, uint64_t))(v22 + 32);
  v27(v26 + v25, v23, v24);
  uint64_t v44 = sub_1DB12BEFC;
  uint64_t v45 = v26;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_1DB126AA8;
  uint64_t v43 = &block_descriptor_4;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_release();
  v32(v23, v37, v24);
  uint64_t v29 = swift_allocObject();
  v27(v29 + v25, v23, v24);
  uint64_t v44 = sub_1DB12BFC4;
  uint64_t v45 = v29;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_1DB126B74;
  uint64_t v43 = &block_descriptor_23;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v31 = (void *)v33;
  objc_msgSend(v38, sel_setLanguageAssets_options_progress_completion_, v33, v39, v28, v30);
  _Block_release(v30);
  _Block_release(v28);
}

void sub_1DB1264D4(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v52 - v9;
  MEMORY[0x1F4188790](v11);
  double v13 = (char *)&v52 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904980);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v61 = v10;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1DB1F1BB0();
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v18)
      {
LABEL_4:
        uint64_t v62 = v7;
        uint64_t v72 = MEMORY[0x1E4FBC860];
        sub_1DB12E8F0(0, v18 & ~(v18 >> 63), 0);
        if (v18 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v58 = v18;
        uint64_t v52 = v17;
        uint64_t v53 = v15;
        uint64_t v54 = v14;
        uint64_t v55 = a2;
        uint64_t v19 = 0;
        id v20 = (void (**)(uint64_t, uint64_t))(v5 + 8);
        uint64_t v56 = (void (**)(char *, char *, uint64_t))(v5 + 16);
        unint64_t v57 = a1 & 0xC000000000000001;
        uint64_t v59 = v4;
        unint64_t v60 = a1;
        uint64_t v21 = v13;
        do
        {
          if (v57) {
            id v22 = (id)MEMORY[0x1E018BAD0](v19, a1);
          }
          else {
            id v22 = *(id *)(a1 + 8 * v19 + 32);
          }
          uint64_t v23 = v22;
          id v24 = objc_msgSend(v22, sel_state, v52, v53, v54, v55);
          if (v24 == (id)2)
          {
            int v63 = 1;
            uint64_t v27 = 0;
          }
          else if (v24 == (id)1)
          {
            id v25 = objc_msgSend(v23, sel_progress);
            objc_msgSend(v25, sel_fractionCompleted);
            uint64_t v27 = v26;

            int v63 = 0;
          }
          else
          {
            int v63 = 1;
            uint64_t v27 = 1;
          }
          id v65 = v23;
          id v28 = objc_msgSend(v23, sel_ltIdentifier);
          uint64_t v29 = sub_1DB1F1290();
          uint64_t v31 = v30;

          uint64_t v70 = v29;
          uint64_t v71 = v31;
          uint64_t v68 = 45;
          unint64_t v69 = 0xE100000000000000;
          uint64_t v66 = 95;
          unint64_t v67 = 0xE100000000000000;
          sub_1DB0F0708();
          uint64_t v32 = sub_1DB1F1950();
          uint64_t v34 = v33;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          uint64_t v64 = v32;
          sub_1DB1EF580();
          uint64_t v35 = v21;
          uint64_t v36 = (uint64_t)v61;
          _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
          uint64_t v37 = Locale.sqDisplayName(context:in:)(0, v36);
          uint64_t v39 = v38;
          uint64_t v40 = *v20;
          uint64_t v41 = v20;
          uint64_t v42 = v59;
          v40(v36, v59);
          uint64_t v43 = v62;
          (*v56)(v62, v35, v42);
          if (v39)
          {
            v40((uint64_t)v43, v42);
            v40((uint64_t)v35, v42);
            uint64_t v21 = v35;
            id v20 = v41;
            uint64_t v44 = v64;
            uint64_t v45 = v37;
          }
          else
          {
            _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
            uint64_t v46 = Locale.sqDisplaySubname(context:in:)(0, v36);
            uint64_t v39 = v47;
            v40(v36, v42);
            v40((uint64_t)v62, v42);
            v40((uint64_t)v35, v42);
            uint64_t v21 = v35;
            id v20 = v41;
            if (v39)
            {
              uint64_t v44 = v64;
              uint64_t v45 = v46;
            }
            else
            {
              swift_bridgeObjectRetain();
              uint64_t v44 = v64;
              uint64_t v45 = v64;
              uint64_t v39 = v34;
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v48 = v72;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DB12E8F0(0, *(void *)(v48 + 16) + 1, 1);
            uint64_t v48 = v72;
          }
          unint64_t v50 = *(void *)(v48 + 16);
          unint64_t v49 = *(void *)(v48 + 24);
          if (v50 >= v49 >> 1)
          {
            sub_1DB12E8F0(v49 > 1, v50 + 1, 1);
            uint64_t v48 = v72;
          }
          ++v19;
          *(void *)(v48 + 16) = v50 + 1;
          unint64_t v51 = v48 + 48 * v50;
          *(void *)(v51 + 32) = v44;
          *(void *)(v51 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v34;
          *(void *)(v51 + 48) = v27;
          *(unsigned char *)(v51 + 56) = v63;
          *(void *)(v51 + 64) = v45;
          *(void *)(v51 + 72) = v39;
          a1 = v60;
        }
        while (v58 != v19);
        swift_bridgeObjectRelease();
        uint64_t v14 = v54;
        uint64_t v15 = v53;
        int v17 = v52;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x1E4FBC860];
LABEL_27:
    uint64_t v70 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
    sub_1DB1F1610();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_1DB126AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1DB12BEB8();
    uint64_t v2 = sub_1DB1F14A0();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB126B20(void *a1)
{
  if (a1) {
    id v1 = a1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  return sub_1DB1F1620();
}

void sub_1DB126B74(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t static LanguagesInstallService.save(_:useCellular:)(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904958);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = a1;
  char v11 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBD120], v4);
  return sub_1DB1F1650();
}

void sub_1DB126D04(uint64_t a1)
{
  sub_1DB125FB8(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t static LanguagesInstallService.add(_:useCellular:)(uint64_t a1, int a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904958);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DB1EF810();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBA4F420);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1DB1EF7F0();
  os_log_type_t v10 = sub_1DB1F16F0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v25 = v5;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v13;
    *(_DWORD *)uint64_t v12 = 134349314;
    uint64_t v26 = *(void *)(a1 + 16);
    uint64_t v27 = v13;
    int v24 = a2;
    sub_1DB1F1910();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v22 = v12 + 14;
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = MEMORY[0x1E018B4B0](v14, &type metadata for LanguageModel);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1DB11F638(v15, v17, &v27);
    LOBYTE(a2) = v24;
    sub_1DB1F1910();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v9, v10, "Add %{public}ld languages: %{public}s", (uint8_t *)v12, 0x16u);
    uint64_t v18 = v23;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v18, -1, -1);
    uint64_t v19 = v12;
    uint64_t v5 = v25;
    MEMORY[0x1E018CA60](v19, -1, -1);
  }
  else
  {

    uint64_t v20 = swift_bridgeObjectRelease_n();
  }
  MEMORY[0x1F4188790](v20);
  *(&v22 - 2) = a1;
  *((unsigned char *)&v22 - 8) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBD120], v4);
  return sub_1DB1F1650();
}

uint64_t sub_1DB127044(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = a2;
  *(unsigned char *)(v14 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_bridgeObjectRetain();
  sub_1DB131F20((uint64_t)v11, (uint64_t)&unk_1EA9049C0, v14);
  return swift_release();
}

uint64_t sub_1DB12722C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 336) = a5;
  *(void *)(v6 + 184) = a4;
  *(void *)(v6 + 192) = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904980);
  *(void *)(v6 + 20__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  *(void *)(v6 + 208) = *(void *)(v7 - 8);
  *(void *)(v6 + 216) = swift_task_alloc();
  uint64_t v8 = sub_1DB1EF6B0();
  *(void *)(v6 + 224) = v8;
  *(void *)(v6 + 232) = *(void *)(v8 - 8);
  *(void *)(v6 + 24__isPlatformVersionAtLeast(2, 18, 1, 0) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904958);
  *(void *)(v6 + 248) = v9;
  *(void *)(v6 + 256) = *(void *)(v9 - 8);
  *(void *)(v6 + 264) = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904988);
  *(void *)(v6 + 272) = v10;
  *(void *)(v6 + 28__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(v10 - 8);
  *(void *)(v6 + 288) = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904990);
  *(void *)(v6 + 296) = v11;
  *(void *)(v6 + 304) = *(void *)(v11 - 8);
  *(void *)(v6 + 312) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB127470, 0, 0);
}

uint64_t sub_1DB127470()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[23];
  int64_t v3 = *(void *)(v2 + 16);
  v0[40] = v3;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v5 = v0[29];
    uint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t v34 = v1;
    sub_1DB12E8F0(0, v3, 0);
    uint64_t v33 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v6 = (void *)(v2 + 72);
    do
    {
      uint64_t v8 = *(v6 - 5);
      uint64_t v7 = *(v6 - 4);
      uint64_t v9 = *(v6 - 3);
      uint64_t v10 = *v6;
      uint64_t v36 = *(v6 - 1);
      if (*((unsigned char *)v6 - 16) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9)
        {
          uint64_t v11 = v34[30];
          uint64_t v35 = v34[28];
          swift_bridgeObjectRetain();
          sub_1DB1EF580();
          v34[2] = sub_1DB1EF590();
          v34[3] = v12;
          v34[4] = 45;
          v34[5] = 0xE100000000000000;
          v34[6] = 95;
          v34[7] = 0xE100000000000000;
          sub_1DB0F0708();
          uint64_t v13 = sub_1DB1F1950();
          uint64_t v15 = v14;
          swift_bridgeObjectRelease();
          (*v33)(v11, v35);
          v34[8] = v13;
          v34[9] = v15;
          v34[10] = 45;
          v34[11] = 0xE100000000000000;
          v34[12] = 95;
          v34[13] = 0xE100000000000000;
          swift_bridgeObjectRetain();
          uint64_t v8 = sub_1DB1F1950();
          uint64_t v17 = v16;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = 0;
          char v18 = 0;
          uint64_t v7 = v17;
        }
        else
        {
          char v18 = 1;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v18 = 0;
      }
      uint64_t v4 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v37 + 16) + 1, 1);
        uint64_t v4 = v37;
      }
      unint64_t v20 = *(void *)(v4 + 16);
      unint64_t v19 = *(void *)(v4 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DB12E8F0(v19 > 1, v20 + 1, 1);
        uint64_t v4 = v37;
      }
      v6 += 6;
      *(void *)(v4 + 16) = v20 + 1;
      uint64_t v21 = v4 + 48 * v20;
      *(void *)(v21 + 32) = v8;
      *(void *)(v21 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
      *(void *)(v21 + 48) = v9;
      *(unsigned char *)(v21 + 56) = v18;
      *(void *)(v21 + 64) = v36;
      *(void *)(v21 + 72) = v10;
      --v3;
    }
    while (v3);
    uint64_t v1 = v34;
  }
  uint64_t v22 = v1[35];
  uint64_t v23 = v1[36];
  uint64_t v25 = v1[33];
  uint64_t v24 = v1[34];
  uint64_t v27 = v1[31];
  uint64_t v26 = v1[32];
  char v28 = *((unsigned char *)v1 + 336);
  uint64_t v29 = swift_task_alloc();
  *(void *)(v29 + 16) = v4;
  *(unsigned char *)(v29 + 24) = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x1E4FBD120], v27);
  sub_1DB1F1650();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
  uint64_t v30 = (void *)swift_task_alloc();
  v1[41] = v30;
  *uint64_t v30 = v1;
  v30[1] = sub_1DB127890;
  uint64_t v31 = v1[37];
  return MEMORY[0x1F4187ED8](v1 + 14, 0, 0, v31, v1 + 15);
}

uint64_t sub_1DB127890()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1DB127DC4;
  }
  else {
    uint64_t v1 = sub_1DB1279A0;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1DB1279A0()
{
  uint64_t v36 = v0;
  uint64_t v1 = v0[14];
  if (v1)
  {
    uint64_t v3 = v0[26];
    uint64_t v2 = v0[27];
    uint64_t v4 = v0[25];
    v0[22] = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
    sub_1DB1F1610();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[41] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1DB127890;
    uint64_t v6 = v0[37];
    return MEMORY[0x1F4187ED8](v0 + 14, 0, 0, v6, v0 + 15);
  }
  else
  {
    (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1DB1EF810();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBA4F420);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_1DB1EF7F0();
    os_log_type_t v9 = sub_1DB1F16F0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = v0[40];
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v34 = v32;
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v12 = MEMORY[0x1E4FBC860];
      if (v10)
      {
        os_log_type_t v29 = v9;
        uint64_t v30 = v11;
        uint64_t v31 = v8;
        int64_t v13 = v0[40];
        uint64_t v14 = v0[23];
        uint64_t v35 = MEMORY[0x1E4FBC860];
        sub_1DB12E9B8(0, v13, 0);
        uint64_t v15 = 0;
        uint64_t v12 = v35;
        uint64_t v33 = *(void *)(v35 + 16);
        uint64_t v16 = 16 * v33;
        uint64_t v17 = (uint64_t *)(v14 + 40);
        do
        {
          uint64_t v18 = *(v17 - 1);
          uint64_t v19 = *v17;
          uint64_t v35 = v12;
          unint64_t v20 = *(void *)(v12 + 24);
          int64_t v21 = v33 + v15 + 1;
          swift_bridgeObjectRetain();
          if (v33 + v15 >= v20 >> 1)
          {
            sub_1DB12E9B8(v20 > 1, v21, 1);
            uint64_t v12 = v35;
          }
          uint64_t v22 = v0[40];
          ++v15;
          *(void *)(v12 + 16) = v21;
          uint64_t v23 = v12 + v16;
          *(void *)(v23 + 32) = v18;
          *(void *)(v23 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v19;
          v16 += 16;
          v17 += 6;
        }
        while (v15 != v22);
        uint64_t v11 = v30;
        uint64_t v8 = v31;
        os_log_type_t v9 = v29;
      }
      uint64_t v24 = MEMORY[0x1E018B4B0](v12, MEMORY[0x1E4FBB1A0]);
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      v0[21] = sub_1DB11F638(v24, v26, &v34);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DB0DC000, v8, v9, "Successfully added languages: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v32, -1, -1);
      MEMORY[0x1E018CA60](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v0[20] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
    sub_1DB1F1620();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_1DB127DC4()
{
  uint64_t v37 = v0;
  (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
  uint64_t v1 = (void *)v0[15];
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DB1EF810();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBA4F420);
  swift_bridgeObjectRetain_n();
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1DB1EF7F0();
  os_log_type_t v6 = sub_1DB1F1710();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v32 = v6;
    uint64_t v7 = v0[40];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v35 = v33;
    *(_DWORD *)uint64_t v8 = 134218498;
    v0[17] = v7;
    sub_1DB1F1910();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (v7)
    {
      uint64_t v28 = v8;
      os_log_type_t v29 = v5;
      uint64_t v30 = v1;
      int64_t v10 = v0[40];
      uint64_t v34 = v0;
      uint64_t v11 = v0[23];
      uint64_t v36 = MEMORY[0x1E4FBC860];
      sub_1DB12E9B8(0, v10, 0);
      uint64_t v12 = 0;
      uint64_t v9 = v36;
      uint64_t v13 = *(void *)(v36 + 16);
      uint64_t v14 = 16 * v13;
      uint64_t v15 = (uint64_t *)(v11 + 40);
      do
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        uint64_t v36 = v9;
        unint64_t v18 = *(void *)(v9 + 24);
        uint64_t v19 = v13 + v12 + 1;
        swift_bridgeObjectRetain();
        if (v13 + v12 >= v18 >> 1)
        {
          sub_1DB12E9B8(v18 > 1, v13 + v12 + 1, 1);
          uint64_t v9 = v36;
        }
        uint64_t v20 = v34[40];
        ++v12;
        *(void *)(v9 + 16) = v19;
        uint64_t v21 = v9 + v14;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
        v14 += 16;
        v15 += 6;
      }
      while (v12 != v20);
      uint64_t v0 = v34;
      uint64_t v5 = v29;
      uint64_t v1 = v30;
      uint64_t v8 = v28;
    }
    uint64_t v22 = MEMORY[0x1E018B4B0](v9, MEMORY[0x1E4FBB1A0]);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v0[18] = sub_1DB11F638(v22, v24, &v35);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v25 = sub_1DB1EF410();
    v0[19] = v25;
    sub_1DB1F1910();
    void *v31 = v25;

    _os_log_impl(&dword_1DB0DC000, v5, v32, "Failed to save %ld languages: %{public}s; %@", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v31, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v33, -1, -1);
    MEMORY[0x1E018CA60](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  v0[16] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  sub_1DB1F1620();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t static LanguagesInstallService.add(pair:useCellular:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904960);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v27 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalePair();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DB1EF810();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBA4F420);
  sub_1DB12B6A8(a1, (uint64_t)v11);
  uint64_t v13 = sub_1DB1EF7F0();
  os_log_type_t v14 = sub_1DB1F16F0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = a3;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v25 = v6;
    uint64_t v23 = v17;
    uint64_t v24 = v7;
    *(_DWORD *)uint64_t v16 = 136446210;
    v22[1] = v16 + 4;
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    uint64_t v30 = v17;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    uint64_t v28 = 0x203A656372756F73;
    unint64_t v29 = 0xE800000000000000;
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1DB11F638(v28, v29, &v30);
    uint64_t v7 = v24;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB12B70C((uint64_t)v11);
    _os_log_impl(&dword_1DB0DC000, v13, v14, "Add locale pair: %{public}s", v16, 0xCu);
    uint64_t v18 = v23;
    swift_arrayDestroy();
    uint64_t v6 = v25;
    MEMORY[0x1E018CA60](v18, -1, -1);
    MEMORY[0x1E018CA60](v16, -1, -1);
  }
  else
  {
    sub_1DB12B70C((uint64_t)v11);
  }

  __n128 v20 = MEMORY[0x1F4188790](v19);
  v22[-2] = a1;
  LOBYTE(v22[-1]) = a2 & 1;
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))(v27, *MEMORY[0x1E4FBD120], v6, v20);
  return sub_1DB1F1650();
}

uint64_t sub_1DB12859C(uint64_t a1, uint64_t a2, int a3)
{
  int v23 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904998);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for LocalePair();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_1DB1F1590();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1DB12B6A8(a2, (uint64_t)v12);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = v17 + v11;
  unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + v17 + v11 + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  sub_1DB12BB0C((uint64_t)v12, v20 + v17);
  *(unsigned char *)(v20 + v18) = v23;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v20 + v19, v8, v5);
  sub_1DB131F20((uint64_t)v15, (uint64_t)&unk_1EA9049A8, v20);
  return swift_release();
}

uint64_t sub_1DB128820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 265) = a5;
  *(void *)(v6 + 344) = a4;
  *(void *)(v6 + 352) = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049B0);
  *(void *)(v6 + 36__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  *(void *)(v6 + 368) = *(void *)(v7 - 8);
  *(void *)(v6 + 376) = swift_task_alloc();
  *(void *)(v6 + 384) = type metadata accessor for LocalePair();
  *(void *)(v6 + 392) = swift_task_alloc();
  *(void *)(v6 + 40__isPlatformVersionAtLeast(2, 18, 1, 0) = swift_task_alloc();
  *(void *)(v6 + 408) = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904988);
  *(void *)(v6 + 416) = v8;
  *(void *)(v6 + 424) = *(void *)(v8 - 8);
  *(void *)(v6 + 432) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904990);
  *(void *)(v6 + 44__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  *(void *)(v6 + 448) = *(void *)(v9 - 8);
  *(void *)(v6 + 456) = swift_task_alloc();
  uint64_t v10 = sub_1DB1EF6B0();
  *(void *)(v6 + 464) = v10;
  *(void *)(v6 + 472) = *(void *)(v10 - 8);
  *(void *)(v6 + 48__isPlatformVersionAtLeast(2, 18, 1, 0) = swift_task_alloc();
  *(void *)(v6 + 488) = swift_task_alloc();
  *(void *)(v6 + 496) = swift_task_alloc();
  *(void *)(v6 + 504) = swift_task_alloc();
  *(void *)(v6 + 512) = swift_task_alloc();
  *(void *)(v6 + 52__isPlatformVersionAtLeast(2, 18, 1, 0) = swift_task_alloc();
  *(void *)(v6 + 528) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB128A9C, 0, 0);
}

uint64_t sub_1DB128A9C()
{
  uint64_t v58 = *(void *)(v0 + 520);
  uint64_t v61 = *(void *)(v0 + 512);
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v65 = *(void *)(v0 + 464);
  uint64_t v66 = *(void *)(v0 + 504);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  ((void (*)(void, void))v70)(*(void *)(v0 + 528), *(void *)(v0 + 344));
  *(void *)(v0 + 16) = sub_1DB1EF590();
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = 45;
  *(void *)(v0 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0xE100000000000000;
  *(void *)(v0 + 48) = 95;
  *(void *)(v0 + 56) = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v3 = sub_1DB1F1950();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = v3;
  *(void *)(v0 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 45;
  *(void *)(v0 + 72) = v5;
  *(void *)(v0 + 88) = 0xE100000000000000;
  *(void *)(v0 + 96) = 95;
  *(void *)(v0 + 104) = 0xE100000000000000;
  uint64_t v6 = sub_1DB1F1950();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v68 = v8;
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v64 = Locale.sqDisplayName(context:in:)(0, v61);
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v11(v61, v65);
  v70(v66, v58, v65);
  uint64_t v12 = *(void *)(v0 + 520);
  uint64_t v69 = v6;
  if (v10)
  {
    uint64_t v62 = v10;
    uint64_t v13 = *(void *)(v0 + 464);
    v11(*(void *)(v0 + 504), v13);
    v11(v12, v13);
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 504);
    uint64_t v16 = *(void *)(v0 + 512);
    unint64_t v17 = v11;
    uint64_t v18 = *(void *)(v0 + 464);
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v64 = Locale.sqDisplaySubname(context:in:)(0, v16);
    uint64_t v20 = v19;
    v17(v16, v18);
    v17(v15, v18);
    v17(v12, v18);
    if (v20)
    {
      uint64_t v62 = v20;
    }
    else
    {
      uint64_t v64 = v69;
      uint64_t v62 = swift_bridgeObjectRetain();
    }
    uint64_t v14 = v17;
  }
  uint64_t v21 = *(void *)(v0 + 528);
  uint64_t v22 = *(void *)(v0 + 512);
  uint64_t v23 = *(void *)(v0 + 496);
  uint64_t v57 = *(void *)(v0 + 488);
  uint64_t v59 = *(void *)(v0 + 480);
  uint64_t v24 = *(void *)(v0 + 464);
  uint64_t v25 = *(void *)(v0 + 384);
  uint64_t v26 = *(void *)(v0 + 344);
  swift_bridgeObjectRelease();
  v14(v21, v24);
  v70(v23, v26 + *(int *)(v25 + 20), v24);
  *(void *)(v0 + 112) = sub_1DB1EF590();
  *(void *)(v0 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v27;
  *(void *)(v0 + 128) = 45;
  *(void *)(v0 + 136) = 0xE100000000000000;
  *(void *)(v0 + 144) = 95;
  *(void *)(v0 + 152) = 0xE100000000000000;
  uint64_t v28 = sub_1DB1F1950();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v28;
  *(void *)(v0 + 168) = v30;
  *(void *)(v0 + 176) = 45;
  *(void *)(v0 + 184) = 0xE100000000000000;
  *(void *)(v0 + 192) = 95;
  *(void *)(v0 + 20__isPlatformVersionAtLeast(2, 18, 1, 0) = 0xE100000000000000;
  uint64_t v31 = sub_1DB1F1950();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v63 = v31;
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v34 = Locale.sqDisplayName(context:in:)(0, v22);
  uint64_t v36 = v35;
  uint64_t v37 = v14;
  v14(v22, v24);
  v70(v59, v57, v24);
  if (v36)
  {
    uint64_t v67 = v34;
    uint64_t v71 = v36;
    uint64_t v38 = *(void *)(v0 + 488);
    uint64_t v39 = *(void *)(v0 + 464);
    v37(*(void *)(v0 + 480), v39);
    v37(v38, v39);
  }
  else
  {
    uint64_t v40 = *(void *)(v0 + 512);
    uint64_t v41 = v37;
    uint64_t v43 = *(void *)(v0 + 480);
    uint64_t v42 = *(void *)(v0 + 488);
    uint64_t v44 = *(void *)(v0 + 464);
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v67 = Locale.sqDisplaySubname(context:in:)(0, v40);
    uint64_t v46 = v45;
    v41(v40, v44);
    uint64_t v47 = v43;
    uint64_t v37 = v41;
    v41(v47, v44);
    v41(v42, v44);
    uint64_t v71 = v46;
    if (!v46)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = v63;
      uint64_t v71 = v33;
    }
  }
  uint64_t v48 = *(void *)(v0 + 496);
  uint64_t v49 = *(void *)(v0 + 464);
  uint64_t v50 = *(void *)(v0 + 424);
  uint64_t v51 = *(void *)(v0 + 432);
  uint64_t v60 = *(void *)(v0 + 416);
  int v52 = *(unsigned __int8 *)(v0 + 265);
  swift_bridgeObjectRelease();
  v37(v48, v49);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4D968);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1DB1F4900;
  *(void *)(v53 + 32) = v69;
  *(void *)(v53 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v68;
  *(void *)(v53 + 48) = 0;
  *(unsigned char *)(v53 + 56) = 0;
  *(void *)(v53 + 64) = v64;
  *(void *)(v53 + 72) = v62;
  *(void *)(v53 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v63;
  *(void *)(v53 + 88) = v33;
  *(void *)(v53 + 96) = 0;
  *(unsigned char *)(v53 + 104) = 0;
  *(void *)(v53 + 112) = v67;
  *(void *)(v53 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static LanguagesInstallService.add(_:useCellular:)(v53, v52);
  swift_bridgeObjectRelease();
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v60);
  *(void *)(v0 + 592) = v71;
  *(void *)(v0 + 584) = 0;
  *(void *)(v0 + 576) = v33;
  *(void *)(v0 + 568) = v63;
  *(void *)(v0 + 56__isPlatformVersionAtLeast(2, 18, 1, 0) = v62;
  *(_WORD *)(v0 + 266) = 0;
  *(void *)(v0 + 552) = 0;
  *(void *)(v0 + 544) = v68;
  *(void *)(v0 + 536) = v69;
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 60__isPlatformVersionAtLeast(2, 18, 1, 0) = v54;
  void *v54 = v0;
  v54[1] = sub_1DB1291B4;
  uint64_t v55 = *(void *)(v0 + 440);
  return MEMORY[0x1F4187ED8](v0 + 336, 0, 0, v55, v0 + 320);
}

uint64_t sub_1DB1291B4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1DB129DFC;
  }
  else {
    uint64_t v1 = sub_1DB1292C4;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1DB1292C4()
{
  os_log_t v72 = v0;
  Class isa = v0[42].isa;
  if (!isa)
  {
    (*((void (**)(Class, Class))v0[56].isa + 1))(v0[57].isa, v0[55].isa);
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v17 = (uint64_t)v0[51].isa;
    uint64_t v18 = (uint64_t)v0[43].isa;
    uint64_t v19 = sub_1DB1EF810();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBA4F420);
    sub_1DB12B6A8(v18, v17);
    uint64_t v20 = sub_1DB1EF7F0();
    os_log_type_t v21 = sub_1DB1F16F0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = (uint64_t)v0[51].isa;
    if (v22)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446210;
      uint64_t v70 = v25;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      v71[0] = 0x203A656372756F73;
      v71[1] = 0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      v0[36].Class isa = (Class)sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, &v70);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB12B70C(v23);
      _os_log_impl(&dword_1DB0DC000, v20, v21, "Successfully added locale pair: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v25, -1, -1);
      MEMORY[0x1E018CA60](v24, -1, -1);
    }
    else
    {
      sub_1DB12B70C((uint64_t)v0[51].isa);
    }

    v0[35].Class isa = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904998);
    sub_1DB1F1620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1].isa;
    return v30();
  }
  uint64_t v2 = v0 + 33;
  uint64_t v3 = *((void *)isa + 2);
  if (!v3)
  {
    char v26 = BYTE2(v0[33].isa);
    swift_bridgeObjectRelease();
    uint64_t v66 = v0[74].isa;
    char v16 = BYTE3(v0[33].isa);
    Class v15 = v0[72].isa;
    uint64_t v63 = v0[71].isa;
    uint64_t v59 = v0[70].isa;
    double v60 = *(double *)&v0[73].isa;
    double v69 = *(double *)&v0[69].isa;
    uint64_t v58 = v0[68].isa;
    Class v5 = v0[67].isa;
    if (v26)
    {
LABEL_31:
      if (v69 != 0.0)
      {
        char v62 = v16;
        uint64_t v65 = v15;
        char v27 = 1;
        BOOL v28 = 1;
        goto LABEL_44;
      }
      if ((v16 & 1) == 0)
      {
        char v29 = 0;
        double v69 = 0.0;
        char v27 = 1;
        double v34 = v60;
        goto LABEL_47;
      }
      uint64_t v65 = v15;
      double v69 = 0.0;
      BOOL v28 = *(void *)&v60 != 0;
      char v62 = 1;
      char v27 = 1;
LABEL_44:
      int v32 = 1;
      goto LABEL_49;
    }
    if (BYTE3(v0[33].isa)) {
      goto LABEL_34;
    }
LABEL_41:
    uint64_t v65 = v15;
    char v62 = 0;
    char v27 = 0;
    int v32 = 0;
    double v33 = (v69 + v60) * 0.5;
    goto LABEL_48;
  }
  char v61 = BYTE3(v0[33].isa);
  double v60 = *(double *)&v0[73].isa;
  Class v64 = v0[72].isa;
  uint64_t v66 = v0[74].isa;
  uint64_t v63 = v0[71].isa;
  Class v4 = v0[70].isa;
  char v68 = BYTE2(v0[33].isa);
  double v69 = *(double *)&v0[69].isa;
  Class v5 = v0[67].isa;
  Class v6 = v0[68].isa;
  uint64_t v7 = swift_bridgeObjectRetain() + 40;
  do
  {
    uint64_t v9 = *(objc_class **)(v7 - 8);
    uint64_t v8 = *(objc_class **)v7;
    double v10 = *(double *)(v7 + 8);
    char v11 = *(unsigned char *)(v7 + 16);
    uint64_t v12 = *(objc_class **)(v7 + 32);
    if (v5 == v9 && v6 == v8)
    {
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    if (sub_1DB1F1DB0())
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      Class v5 = v9;
      Class v6 = v8;
LABEL_11:
      double v69 = v10;
      char v68 = v11;
      Class v4 = v12;
      goto LABEL_12;
    }
    if (v63 == v9 && v64 == v8)
    {
      swift_bridgeObjectRetain();
LABEL_22:
      double v60 = v10;
      char v61 = v11;
      uint64_t v66 = v12;
LABEL_12:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    if (sub_1DB1F1DB0())
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v63 = v9;
      Class v64 = v8;
      goto LABEL_22;
    }
LABEL_13:
    v7 += 48;
    --v3;
  }
  while (v3);
  uint64_t v58 = v6;
  uint64_t v59 = v4;
  swift_bridgeObjectRelease_n();
  if (v68)
  {
    os_log_t v0 = log;
    uint64_t v2 = *(NSObject **)type;
    Class v15 = v64;
    char v16 = v61;
    goto LABEL_31;
  }
  os_log_t v0 = log;
  uint64_t v2 = *(NSObject **)type;
  Class v15 = v64;
  if ((v61 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_34:
  char v27 = 0;
  char v29 = 1;
  if (v60 != 0.0)
  {
    char v62 = 1;
    uint64_t v65 = v15;
    BOOL v28 = 1;
    goto LABEL_44;
  }
  double v60 = 0.0;
  double v34 = v69;
LABEL_47:
  uint64_t v65 = v15;
  char v62 = v29;
  int v32 = 0;
  double v33 = v34 * 0.5 + 0.5;
LABEL_48:
  BOOL v28 = *(void *)&v33;
LABEL_49:
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1DB1EF810();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EBA4F420);
  uint64_t v36 = sub_1DB1EF7F0();
  os_log_type_t v37 = sub_1DB1F1700();
  uint64_t v67 = v5;
  if (os_log_type_enabled(v36, v37))
  {
    char loga = v27;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v0[41].Class isa = (Class)v39;
    *(_DWORD *)uint64_t v38 = 136446210;
    if (v32)
    {
      if (v28) {
        uint64_t v40 = 0xD000000000000014;
      }
      else {
        uint64_t v40 = 0x656C6C6174736E69;
      }
      if (v28) {
        unint64_t v41 = 0x80000001DB1FC640;
      }
      else {
        unint64_t v41 = 0xE900000000000064;
      }
    }
    else
    {
      v0[26].Class isa = 0;
      v0[27].Class isa = (Class)0xE000000000000000;
      sub_1DB1F13A0();
      sub_1DB1F1670();
      sub_1DB1F13A0();
      uint64_t v40 = (uint64_t)v0[26].isa;
      unint64_t v41 = (unint64_t)v0[27].isa;
    }
    *(void *)(v38 + 4) = sub_1DB11F638(v40, v41, (uint64_t *)&v0[41]);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v36, v37, "Add locale pair state yield: %{public}s", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v39, -1, -1);
    MEMORY[0x1E018CA60](v38, -1, -1);

    char v27 = loga;
  }
  else
  {
  }
  Class v43 = v0[46].isa;
  Class v42 = v0[47].isa;
  Class v44 = v0[45].isa;
  v0[32].Class isa = (Class)v28;
  LOBYTE(v2->isa) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904998);
  sub_1DB1F1610();
  (*((void (**)(Class, Class))v43 + 1))(v42, v44);
  if (v28) {
    int v45 = 0;
  }
  else {
    int v45 = v32;
  }
  uint64_t v46 = v67;
  if (v45 == 1)
  {
    sub_1DB12B6A8((uint64_t)v0[43].isa, (uint64_t)v0[50].isa);
    uint64_t v47 = sub_1DB1EF7F0();
    os_log_type_t v48 = sub_1DB1F16F0();
    BOOL v49 = os_log_type_enabled(v47, v48);
    uint64_t v50 = (uint64_t)v0[50].isa;
    if (v49)
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v71[0] = v54;
      *(_DWORD *)uint64_t v51 = 136446210;
      v0[28].Class isa = 0;
      v0[29].Class isa = (Class)0xE000000000000000;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      v0[30].Class isa = (Class)0x203A656372756F73;
      v0[31].Class isa = (Class)0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      uint64_t v46 = v67;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      *(void *)(v51 + 4) = sub_1DB11F638((uint64_t)v0[30].isa, (unint64_t)v0[31].isa, v71);
      swift_bridgeObjectRelease();
      sub_1DB12B70C(v50);
      _os_log_impl(&dword_1DB0DC000, v47, v48, "Install complete for locale pair: %{public}s", (uint8_t *)v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v54, -1, -1);
      MEMORY[0x1E018CA60](v51, -1, -1);
    }
    else
    {
      sub_1DB12B70C((uint64_t)v0[50].isa);
    }

    v0[38].Class isa = 0;
    sub_1DB1F1620();
  }
  v0[74].Class isa = v66;
  BYTE3(v2->isa) = v62 & 1;
  *(double *)&v0[73].Class isa = v60;
  v0[72].Class isa = v65;
  v0[71].Class isa = v63;
  v0[70].Class isa = v59;
  BYTE2(v2->isa) = v27;
  *(double *)&v0[69].Class isa = v69;
  v0[68].Class isa = v58;
  v0[67].Class isa = v46;
  int v52 = (objc_class *)swift_task_alloc();
  v0[75].Class isa = v52;
  *(void *)int v52 = v0;
  *((void *)v52 + 1) = sub_1DB1291B4;
  Class v53 = v0[55].isa;
  return MEMORY[0x1F4187ED8](&v0[42], 0, 0, v53, &v0[40]);
}

uint64_t sub_1DB129DFC()
{
  uint64_t v18 = v0;
  (*(void (**)(void, void))(v0[56] + 8))(v0[57], v0[55]);
  uint64_t v1 = (void *)v0[40];
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[43];
  uint64_t v4 = sub_1DB1EF810();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBA4F420);
  sub_1DB12B6A8(v3, v2);
  id v5 = v1;
  id v6 = v1;
  uint64_t v7 = sub_1DB1EF7F0();
  os_log_type_t v8 = sub_1DB1F1710();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[49];
  if (v9)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v17[0] = v13;
    *(_DWORD *)uint64_t v11 = 136446466;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    v17[1] = 0x203A656372756F73;
    v17[2] = 0xE800000000000000;
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    v0[37] = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, v17);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB12B70C(v10);
    *(_WORD *)(v11 + 12) = 2112;
    uint64_t v14 = sub_1DB1EF410();
    v0[34] = v14;
    sub_1DB1F1910();
    *uint64_t v12 = v14;

    _os_log_impl(&dword_1DB0DC000, v7, v8, "Failed to add locale pair %{public}s: %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v13, -1, -1);
    MEMORY[0x1E018CA60](v11, -1, -1);
  }
  else
  {
    sub_1DB12B70C(v0[49]);
  }
  v0[39] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904998);
  sub_1DB1F1620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Class v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t static LanguagesInstallService.remove(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904958);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DB1EF810();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBA4F420);
  swift_bridgeObjectRetain_n();
  BOOL v9 = sub_1DB1EF7F0();
  os_log_type_t v10 = sub_1DB1F16F0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v25 = a2;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = v4;
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v12 = 134349314;
    uint64_t v26 = *(void *)(a1 + 16);
    uint64_t v27 = v13;
    uint64_t v23 = v5;
    sub_1DB1F1910();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x1E018B4B0](v15, &type metadata for LanguageModel);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1DB11F638(v16, v18, &v27);
    uint64_t v5 = v23;
    sub_1DB1F1910();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v9, v10, "Request to remove %{public}ld languages: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    uint64_t v19 = v14;
    uint64_t v4 = v24;
    MEMORY[0x1E018CA60](v19, -1, -1);
    MEMORY[0x1E018CA60](v12, -1, -1);
  }
  else
  {

    uint64_t v20 = swift_bridgeObjectRelease_n();
  }
  MEMORY[0x1F4188790](v20);
  *(&v22 - 2) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBD120], v4);
  return sub_1DB1F1650();
}

uint64_t sub_1DB12A52C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v7 - 8);
  BOOL v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_bridgeObjectRetain();
  sub_1DB131F20((uint64_t)v9, (uint64_t)&unk_1EA904978, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1DB12A704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904980);
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  uint64_t v7 = sub_1DB1EF6B0();
  v5[28] = v7;
  v5[29] = *(void *)(v7 - 8);
  v5[30] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904958);
  v5[31] = v8;
  v5[32] = *(void *)(v8 - 8);
  v5[33] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904988);
  v5[34] = v9;
  v5[35] = *(void *)(v9 - 8);
  v5[36] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904990);
  v5[37] = v10;
  v5[38] = *(void *)(v10 - 8);
  v5[39] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB12A944, 0, 0);
}

uint64_t sub_1DB12A944()
{
  uint64_t v1 = v0[23];
  int64_t v2 = *(void *)(v1 + 16);
  v0[40] = v2;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = v0[29];
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1DB12E8F0(0, v2, 0);
    char v29 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v5 = (void *)(v1 + 72);
    do
    {
      uint64_t v7 = *(v5 - 5);
      uint64_t v6 = *(v5 - 4);
      uint64_t v8 = *v5;
      uint64_t v31 = *(v5 - 1);
      int64_t v32 = v2;
      if (*((unsigned char *)v5 - 16) == 1 && *(v5 - 3))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v9 = v0[30];
        uint64_t v30 = v0[28];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1DB1EF580();
        v0[12] = sub_1DB1EF590();
        v0[13] = v10;
        v0[10] = 45;
        v0[11] = 0xE100000000000000;
        v0[8] = 95;
        v0[9] = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v11 = sub_1DB1F1950();
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        (*v29)(v9, v30);
        v0[6] = v11;
        v0[7] = v13;
        v0[4] = 45;
        v0[5] = 0xE100000000000000;
        v0[2] = 95;
        v0[3] = 0xE100000000000000;
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_1DB1F1950();
        uint64_t v15 = v14;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = v15;
      }
      uint64_t v3 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v3 = v33;
      }
      unint64_t v17 = *(void *)(v3 + 16);
      unint64_t v16 = *(void *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DB12E8F0(v16 > 1, v17 + 1, 1);
        uint64_t v3 = v33;
      }
      *(void *)(v3 + 16) = v17 + 1;
      uint64_t v18 = v3 + 48 * v17;
      *(void *)(v18 + 32) = v7;
      *(void *)(v18 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
      *(void *)(v18 + 48) = 1;
      *(unsigned char *)(v18 + 56) = 1;
      *(void *)(v18 + 64) = v31;
      *(void *)(v18 + 72) = v8;
      v5 += 6;
      --v2;
    }
    while (v32 != 1);
  }
  uint64_t v19 = v0[35];
  uint64_t v20 = v0[36];
  uint64_t v22 = v0[33];
  uint64_t v21 = v0[34];
  uint64_t v24 = v0[31];
  uint64_t v23 = v0[32];
  uint64_t v25 = swift_task_alloc();
  *(void *)(v25 + 16) = v3;
  *(unsigned char *)(v25 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v22, *MEMORY[0x1E4FBD120], v24);
  sub_1DB1F1650();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  uint64_t v26 = (void *)swift_task_alloc();
  v0[41] = v26;
  void *v26 = v0;
  v26[1] = sub_1DB12AD38;
  uint64_t v27 = v0[37];
  return MEMORY[0x1F4187ED8](v0 + 15, 0, 0, v27, v0 + 21);
}

uint64_t sub_1DB12AD38()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1DB12B280;
  }
  else {
    uint64_t v1 = sub_1DB12AE48;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1DB12AE48()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0[15];
  if (v1)
  {
    uint64_t v3 = v0[26];
    uint64_t v2 = v0[27];
    uint64_t v4 = v0[25];
    v0[16] = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
    sub_1DB1F1610();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[41] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1DB12AD38;
    uint64_t v6 = v0[37];
    return MEMORY[0x1F4187ED8](v0 + 15, 0, 0, v6, v0 + 21);
  }
  else
  {
    (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1DB1EF810();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBA4F420);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_1DB1EF7F0();
    os_log_type_t v9 = sub_1DB1F16F0();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t v34 = v9;
      int64_t v32 = v0 + 22;
      uint64_t v10 = v0[40];
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v36 = v33;
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v12 = MEMORY[0x1E4FBC860];
      if (v10)
      {
        uint64_t v30 = v11;
        uint64_t v31 = v8;
        int64_t v13 = v0[40];
        uint64_t v35 = v0;
        uint64_t v14 = v0[23];
        uint64_t v37 = MEMORY[0x1E4FBC860];
        sub_1DB12E9B8(0, v13, 0);
        uint64_t v15 = 0;
        uint64_t v12 = v37;
        uint64_t v16 = *(void *)(v37 + 16);
        uint64_t v17 = 16 * v16;
        uint64_t v18 = (uint64_t *)(v14 + 40);
        do
        {
          uint64_t v19 = *(v18 - 1);
          uint64_t v20 = *v18;
          uint64_t v37 = v12;
          unint64_t v21 = *(void *)(v12 + 24);
          uint64_t v22 = v16 + v15 + 1;
          swift_bridgeObjectRetain();
          if (v16 + v15 >= v21 >> 1)
          {
            sub_1DB12E9B8(v21 > 1, v16 + v15 + 1, 1);
            uint64_t v12 = v37;
          }
          uint64_t v23 = v35[40];
          ++v15;
          *(void *)(v12 + 16) = v22;
          uint64_t v24 = v12 + v17;
          *(void *)(v24 + 32) = v19;
          *(void *)(v24 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v20;
          v17 += 16;
          v18 += 6;
        }
        while (v15 != v23);
        uint64_t v0 = v35;
        uint64_t v8 = v31;
        uint64_t v11 = v30;
      }
      uint64_t v25 = MEMORY[0x1E018B4B0](v12, MEMORY[0x1E4FBB1A0]);
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      *int64_t v32 = sub_1DB11F638(v25, v27, &v36);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DB0DC000, v8, v34, "Successfully removed languages: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v33, -1, -1);
      MEMORY[0x1E018CA60](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v0[14] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
    sub_1DB1F1620();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_1DB12B280()
{
  uint64_t v37 = v0;
  (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
  uint64_t v1 = (void *)v0[21];
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DB1EF810();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBA4F420);
  swift_bridgeObjectRetain_n();
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1DB1EF7F0();
  os_log_type_t v6 = sub_1DB1F1710();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v32 = v6;
    uint64_t v7 = v0[40];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v35 = v33;
    *(_DWORD *)uint64_t v8 = 134349570;
    v0[19] = v7;
    sub_1DB1F1910();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (v7)
    {
      uint64_t v28 = v8;
      char v29 = v5;
      uint64_t v30 = v1;
      int64_t v10 = v0[40];
      os_log_type_t v34 = v0;
      uint64_t v11 = v0[23];
      uint64_t v36 = MEMORY[0x1E4FBC860];
      sub_1DB12E9B8(0, v10, 0);
      uint64_t v12 = 0;
      uint64_t v9 = v36;
      uint64_t v13 = *(void *)(v36 + 16);
      uint64_t v14 = 16 * v13;
      uint64_t v15 = (uint64_t *)(v11 + 40);
      do
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        uint64_t v36 = v9;
        unint64_t v18 = *(void *)(v9 + 24);
        uint64_t v19 = v13 + v12 + 1;
        swift_bridgeObjectRetain();
        if (v13 + v12 >= v18 >> 1)
        {
          sub_1DB12E9B8(v18 > 1, v13 + v12 + 1, 1);
          uint64_t v9 = v36;
        }
        uint64_t v20 = v34[40];
        ++v12;
        *(void *)(v9 + 16) = v19;
        uint64_t v21 = v9 + v14;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
        v14 += 16;
        v15 += 6;
      }
      while (v12 != v20);
      uint64_t v0 = v34;
      uint64_t v5 = v29;
      uint64_t v1 = v30;
      uint64_t v8 = v28;
    }
    uint64_t v22 = MEMORY[0x1E018B4B0](v9, MEMORY[0x1E4FBB1A0]);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v0[18] = sub_1DB11F638(v22, v24, &v35);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v25 = sub_1DB1EF410();
    v0[17] = v25;
    sub_1DB1F1910();
    void *v31 = v25;

    _os_log_impl(&dword_1DB0DC000, v5, v32, "Failed to remove %{public}ld languages: %{public}s: %@", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v31, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v33, -1, -1);
    MEMORY[0x1E018CA60](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  v0[20] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  sub_1DB1F1620();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_1DB12B69C(uint64_t a1)
{
  return sub_1DB127044(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1DB12B6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalePair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB12B70C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocalePair();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB12B768(uint64_t a1)
{
  return sub_1DB12859C(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1DB12B774(uint64_t a1)
{
  return sub_1DB12A52C(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for LanguagesInstallService()
{
  return &type metadata for LanguagesInstallService;
}

uint64_t sub_1DB12B78C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DB12B864(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1DB103C1C;
  return sub_1DB12A704(a1, v5, v6, v7, v8);
}

uint64_t sub_1DB12B964()
{
  uint64_t v1 = (int *)(type metadata accessor for LocalePair() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904998);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + v2 + *(unsigned __int8 *)(v5 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v7 + v1[7], v8);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_1DB12BB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalePair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB12BB70(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for LocalePair() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904998) - 8) + 80);
  uint64_t v9 = v7 + v8 + 1;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  char v13 = *(unsigned char *)(v1 + v7);
  uint64_t v14 = v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_1DB1036D0;
  return sub_1DB128820(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_1DB12BCD8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DB12BDB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1DB103C1C;
  return sub_1DB12722C(a1, v5, v6, v7, v8, v9);
}

unint64_t sub_1DB12BEB8()
{
  unint64_t result = qword_1EBA4D958;
  if (!qword_1EBA4D958)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBA4D958);
  }
  return result;
}

uint64_t sub_1DB12BEFC(uint64_t a1)
{
  return sub_1DB12BFDC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1DB1264D4);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DB12BFC4(uint64_t a1)
{
  return sub_1DB12BFDC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1DB126B20);
}

uint64_t sub_1DB12BFDC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t LanguageModel.init(identifier:state:displayName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v35 = *(char **)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v33 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = *a3;
  int v36 = *((unsigned __int8 *)a3 + 8);
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v41 = 45;
  unint64_t v42 = 0xE100000000000000;
  uint64_t v39 = 95;
  unint64_t v40 = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v21 = sub_1DB1F1950();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v37 = v21;
  if (a5)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v34 = v20;
    swift_bridgeObjectRetain_n();
    sub_1DB1EF580();
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v38 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v16);
    a5 = v24;
    uint64_t v25 = v35;
    unint64_t v26 = (void (*)(char *, uint64_t))*((void *)v35 + 1);
    v26(v16, v11);
    unint64_t v27 = (void (*)(char *, char *, uint64_t))*((void *)v25 + 2);
    uint64_t v35 = v13;
    v27(v13, v19, v11);
    if (a5)
    {
      v26(v35, v11);
      v26(v19, v11);
    }
    else
    {
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v28 = v35;
      uint64_t v29 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v16);
      a5 = v30;
      v26(v16, v11);
      v26(v28, v11);
      v26(v19, v11);
      if (a5)
      {
        uint64_t v38 = v29;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = v37;
        a5 = v23;
      }
    }
    uint64_t v20 = v34;
  }
  char v31 = v36;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a6 = v37;
  *(void *)(a6 + 8) = v23;
  *(void *)(a6 + 16) = v20;
  *(unsigned char *)(a6 + 24) = v31;
  *(void *)(a6 + 32) = v38;
  *(void *)(a6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a5;
  return result;
}

uint64_t sub_1DB12C368(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    sub_1DB1F13A0();
    sub_1DB1F1670();
    sub_1DB1F13A0();
  }
  sub_1DB1F13A0();
  return swift_bridgeObjectRelease();
}

uint64_t LanguageModel.locale.getter()
{
  swift_bridgeObjectRetain();
  return sub_1DB1EF580();
}

uint64_t Array<A>.installedLanguagesExist.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1 - 1;
  unint64_t v3 = (unsigned __int8 *)(a1 + 56);
  do
  {
    uint64_t v4 = v2;
    if (*((void *)v3 - 1)) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = *v3;
    }
    if (result) {
      break;
    }
    --v2;
    v3 += 48;
  }
  while (v4);
  return result;
}

uint64_t Array<A>.downloadable.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v7 = *(v2 - 3);
    int v8 = *((unsigned __int8 *)v2 - 16);
    if (v8 != 1 || v7 != 0)
    {
      uint64_t v11 = *(v2 - 5);
      uint64_t v10 = *(v2 - 4);
      uint64_t v12 = *v2;
      uint64_t v14 = *(v2 - 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DB12E8F0(0, *(void *)(v3 + 16) + 1, 1);
      }
      unint64_t v5 = *(void *)(v3 + 16);
      unint64_t v4 = *(void *)(v3 + 24);
      if (v5 >= v4 >> 1) {
        sub_1DB12E8F0(v4 > 1, v5 + 1, 1);
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 48 * v5;
      *(void *)(v6 + 32) = v11;
      *(void *)(v6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
      *(void *)(v6 + 48) = v7;
      *(unsigned char *)(v6 + 56) = v8;
      *(void *)(v6 + 64) = v14;
      *(void *)(v6 + 72) = v12;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.installed.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (void *)(swift_bridgeObjectRetain() + 72);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  do
  {
    if (*((unsigned char *)v2 - 16) == 1 && !*(v2 - 3))
    {
      uint64_t v8 = *(v2 - 5);
      uint64_t v7 = *(v2 - 4);
      uint64_t v10 = *(v2 - 1);
      uint64_t v9 = *v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DB12E8F0(0, *(void *)(v3 + 16) + 1, 1);
      }
      unint64_t v5 = *(void *)(v3 + 16);
      unint64_t v4 = *(void *)(v3 + 24);
      if (v5 >= v4 >> 1) {
        sub_1DB12E8F0(v4 > 1, v5 + 1, 1);
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 48 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
      *(void *)(v6 + 48) = 0;
      *(unsigned char *)(v6 + 56) = 1;
      *(void *)(v6 + 64) = v10;
      *(void *)(v6 + 72) = v9;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t LanguageModel.identifierForDownloads.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  sub_1DB12C368(v1, v2);
  return 0;
}

uint64_t LanguageModel.init(locale:state:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  int v36 = a3;
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v31 - v9;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v31 - v12;
  uint64_t v34 = *a2;
  uint64_t v35 = a1;
  int v33 = *((unsigned __int8 *)a2 + 8);
  uint64_t v41 = sub_1DB1EF590();
  uint64_t v42 = v14;
  uint64_t v39 = 45;
  unint64_t v40 = 0xE100000000000000;
  uint64_t v37 = 95;
  unint64_t v38 = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v15 = sub_1DB1F1950();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v41 = v15;
  uint64_t v42 = v17;
  uint64_t v39 = 45;
  unint64_t v40 = 0xE100000000000000;
  uint64_t v37 = 95;
  unint64_t v38 = 0xE100000000000000;
  uint64_t v18 = v7;
  uint64_t v19 = sub_1DB1F1950();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v31 = v19;
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v22 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v10);
  uint64_t v24 = v23;
  uint64_t v25 = v32;
  unint64_t v26 = *(void (**)(char *, uint64_t))(v32 + 8);
  v26(v10, v5);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v18, v13, v5);
  if (v24)
  {
    v26(v18, v5);
    v26(v13, v5);
  }
  else
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v22 = Locale.sqDisplaySubname(context:in:)(0, (uint64_t)v10);
    uint64_t v24 = v27;
    v26(v10, v5);
    v26(v18, v5);
    v26(v13, v5);
    if (!v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = v31;
      uint64_t v22 = v31;
      uint64_t v24 = v21;
      goto LABEL_5;
    }
  }
  uint64_t v28 = v31;
LABEL_5:
  swift_bridgeObjectRelease();
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v26)(v35, v5);
  uint64_t v30 = v36;
  *int v36 = v28;
  v30[1] = v21;
  v30[2] = v34;
  *((unsigned char *)v30 + 24) = v33;
  v30[4] = v22;
  v30[5] = v24;
  return result;
}

uint64_t static LanguageState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) != 1) {
    return (v4 & 1) == 0 && v2 == v3;
  }
  BOOL v5 = *(void *)&v3 == 0;
  if (v3 == 0.0) {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v5) {
    unsigned int v4 = 0;
  }
  if (v2 == 0.0) {
    return v6;
  }
  else {
    return v4;
  }
}

uint64_t LanguageModel.replacing(state:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  int v21 = *((unsigned __int8 *)a1 + 8);
  uint64_t v9 = *(void *)(v2 + 32);
  uint64_t v19 = *(void *)(v2 + 40);
  uint64_t v20 = v9;
  swift_bridgeObjectRetain();
  sub_1DB1EF580();
  uint64_t v27 = sub_1DB1EF590();
  uint64_t v28 = v10;
  uint64_t v25 = 45;
  unint64_t v26 = 0xE100000000000000;
  uint64_t v23 = 95;
  unint64_t v24 = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v11 = sub_1DB1F1950();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v27 = v11;
  uint64_t v28 = v13;
  uint64_t v25 = 45;
  unint64_t v26 = 0xE100000000000000;
  uint64_t v23 = 95;
  unint64_t v24 = 0xE100000000000000;
  uint64_t v14 = v19;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DB1F1950();
  uint64_t v17 = v16;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v22;
  *(unsigned char *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v14;
  return result;
}

uint64_t LanguageState.combine(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  double v3 = *(double *)result;
  char v4 = *(unsigned char *)(result + 8);
  double v5 = *(double *)v2;
  if (*(unsigned char *)(v2 + 8) == 1)
  {
    if (v5 == 0.0)
    {
      if (*(unsigned char *)(result + 8))
      {
        if (v3 == 0.0)
        {
          *(void *)a2 = 0;
          *(unsigned char *)(a2 + 8) = 1;
          return result;
        }
        goto LABEL_8;
      }
      double v5 = *(double *)result;
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  if (*(unsigned char *)(result + 8))
  {
    if (v3 == 0.0)
    {
LABEL_11:
      char v4 = 0;
      double v6 = v5 * 0.5 + 0.5;
      goto LABEL_12;
    }
LABEL_8:
    *(void *)a2 = 1;
    *(unsigned char *)(a2 + 8) = 1;
    return result;
  }
  double v6 = (v3 + v5) * 0.5;
LABEL_12:
  *(double *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

unint64_t sub_1DB12CE24(char a1)
{
  unint64_t result = 0x6C69614664616572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x546C6C6174736E69;
      break;
    case 3:
      unint64_t result = 0x466C6C6174736E69;
      break;
    case 4:
      unint64_t result = 0x6E61697261567369;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DB12CF40(char a1)
{
  unint64_t result = 0x6C69614664616572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x546C6C6174736E69;
      break;
    case 3:
      unint64_t result = 0x466C6C6174736E69;
      break;
    case 4:
      unint64_t result = 0x6E61697261567369;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB12D05C(unsigned __int8 *a1, char *a2)
{
  return sub_1DB161A4C(*a1, *a2);
}

uint64_t sub_1DB12D068()
{
  return sub_1DB1B6514();
}

uint64_t sub_1DB12D074()
{
  return sub_1DB1B5F94();
}

uint64_t sub_1DB12D07C()
{
  return sub_1DB1B6514();
}

uint64_t sub_1DB12D084@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB130FE8();
  *a1 = result;
  return result;
}

unint64_t sub_1DB12D0B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DB12CF40(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1DB12D0E0()
{
  return sub_1DB12CE24(*v0);
}

uint64_t TranslationTaskHint.rawValue.getter()
{
  if (*v0) {
    return 5;
  }
  else {
    return 1;
  }
}

TranslationUI::TranslationTaskHint_optional __swiftcall TranslationTaskHint.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 5) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 1) {
    char v2 = 0;
  }
  char *v1 = v2;
  return (TranslationUI::TranslationTaskHint_optional)rawValue;
}

uint64_t sub_1DB12D118()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB12D168()
{
  return sub_1DB1F1E90();
}

uint64_t sub_1DB12D1A0()
{
  return sub_1DB1F1EC0();
}

void *sub_1DB12D1EC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 5) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_1DB12D20C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 5;
  if (!*v1) {
    uint64_t v2 = 1;
  }
  *a1 = v2;
}

uint64_t LocalePair.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1EF6B0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t LocalePair.targetLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LocalePair() + 20);
  uint64_t v4 = sub_1DB1EF6B0();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t LocalePair.init(sourceLocale:targetLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v9)((void *)(v6 - 8), a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for LocalePair() + 20);
  return v9(v7, a2, v6);
}

uint64_t LocalePair.identifier.getter()
{
  type metadata accessor for LocalePair();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F42390]);
  uint64_t v1 = (void *)sub_1DB1EF5D0();
  uint64_t v2 = (void *)sub_1DB1EF5D0();
  id v3 = objc_msgSend(v0, sel_initWithSourceLocale_targetLocale_, v1, v2);

  id v4 = objc_msgSend(v3, sel_identifier);
  uint64_t v5 = sub_1DB1F1290();

  return v5;
}

uint64_t LocalePair.description.getter()
{
  return 0x203A656372756F73;
}

uint64_t LanguageState.description.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    if (*(void *)v0) {
      return 0xD000000000000014;
    }
    else {
      return 0x656C6C6174736E69;
    }
  }
  else
  {
    sub_1DB1F13A0();
    sub_1DB1F1670();
    sub_1DB1F13A0();
    return 0;
  }
}

uint64_t sub_1DB12D61C(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) != 1) {
    return (v4 & 1) == 0 && v2 == v3;
  }
  BOOL v5 = *(void *)&v3 == 0;
  if (v3 == 0.0) {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v5) {
    unsigned int v4 = 0;
  }
  if (v2 == 0.0) {
    return v6;
  }
  else {
    return v4;
  }
}

uint64_t LanguageModel.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void LanguageModel.state.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t LanguageModel.state.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 16) = *(void *)result;
  *(unsigned char *)(v1 + 24) = v2;
  return result;
}

uint64_t (*LanguageModel.state.modify())()
{
  return CGPointMake;
}

uint64_t LanguageModel.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LanguageModel.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

BOOL static LanguageModel.< infix(_:_:)()
{
  return sub_1DB1F1960() == -1;
}

uint64_t LanguageModel.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  swift_bridgeObjectRetain();
  sub_1DB1F13A0();
  swift_bridgeObjectRelease();
  sub_1DB1F13A0();
  sub_1DB12C368(v1, v2);
  return 0;
}

uint64_t LanguageModel.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB12D900@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DB12D90C()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB12D968()
{
  swift_bridgeObjectRetain();
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB12D9C0()
{
  return sub_1DB1F1EC0();
}

BOOL sub_1DB12DA1C()
{
  return sub_1DB1F1960() == -1;
}

BOOL sub_1DB12DA7C()
{
  return sub_1DB1F1960() != -1;
}

BOOL sub_1DB12DADC()
{
  return sub_1DB1F1960() != -1;
}

BOOL sub_1DB12DB3C()
{
  return sub_1DB1F1960() == -1;
}

uint64_t Array<A>.set.getter(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1DB12E9B8(0, v1, 0);
    uint64_t v2 = v12;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_1DB12E9B8(v8 > 1, v7 + 1, 1);
      }
      v4 += 6;
      *(void *)(v12 + 16) = v7 + 1;
      unint64_t v9 = v12 + 16 * v7;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
      --v1;
    }
    while (v1);
  }
  uint64_t v10 = sub_1DB130028(v2);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t Array<A>.available.getter(uint64_t a1)
{
  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  double v3 = v2;
  unsigned int v4 = (void *)sub_1DB1F1260();
  unsigned int v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  id v6 = objc_msgSend(self, sel_sharedConnection);
  if (!v6)
  {

    if (v5) {
      goto LABEL_3;
    }
LABEL_5:
    swift_bridgeObjectRetain();
    return a1;
  }
  unint64_t v7 = v6;
  unsigned int v8 = objc_msgSend(v6, sel_isOnDeviceOnlyTranslationForced);

  if (((v8 | v5) & 1) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v9 = Array<A>.installed.getter(a1);
  uint64_t v10 = Array<A>.downloadable.getter(a1);
  sub_1DB12F888(v10);
  return v9;
}

uint64_t Array<A>.downloading.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (void *)(swift_bridgeObjectRetain() + 72);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  do
  {
    if (*((unsigned char *)v2 - 16) != 1)
    {
      uint64_t v8 = *(v2 - 5);
      uint64_t v7 = *(v2 - 4);
      uint64_t v9 = *(v2 - 3);
      uint64_t v11 = *(v2 - 1);
      uint64_t v10 = *v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DB12E8F0(0, *(void *)(v3 + 16) + 1, 1);
      }
      unint64_t v5 = *(void *)(v3 + 16);
      unint64_t v4 = *(void *)(v3 + 24);
      if (v5 >= v4 >> 1) {
        sub_1DB12E8F0(v4 > 1, v5 + 1, 1);
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 48 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
      *(void *)(v6 + 48) = v9;
      *(unsigned char *)(v6 + 56) = 0;
      *(void *)(v6 + 64) = v11;
      *(void *)(v6 + 72) = v10;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.localeState(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1DB1EF590();
  sub_1DB0F0708();
  uint64_t v4 = sub_1DB1F1950();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = (unsigned char *)(a1 + 56);
    while (1)
    {
      uint64_t v9 = *((void *)v8 - 1);
      char v10 = *v8;
      BOOL v11 = *((void *)v8 - 3) == v4 && *((void *)v8 - 2) == v6;
      if (v11 || (sub_1DB1F1DB0() & 1) != 0) {
        break;
      }
      v8 += 48;
      if (!--v7) {
        goto LABEL_9;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    char v13 = 0;
  }
  else
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    char v10 = 0;
    char v13 = 1;
  }
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 9) = v13;
  return result;
}

BOOL sub_1DB12DFD8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v38 = a1;
  uint64_t v39 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v9 - 8);
  BOOL v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v34 = v8;
    uint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    uint64_t v32 = (void (**)(char *))(v13 + 16);
    int v33 = (void (**)(char *, uint64_t))(v13 - 8);
    v29[2] = a3;
    swift_bridgeObjectRetain();
    int v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      uint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      uint64_t v30 = v19;
      uint64_t v22 = v11;
      uint64_t v23 = v34;
      unint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      BOOL v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t Array<A>.defaultPair(userLanguages:)@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v49 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v54 = (char *)&v49 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v49 - v17;
  MEMORY[0x1F4188790](v19);
  BOOL v21 = (char *)&v49 - v20;
  sub_1DB1EF580();
  sub_1DB1EF580();
  int64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v23 = (unsigned char *)(a1 + 56);
    uint64_t v24 = *(void *)(a1 + 16);
    while (*v23 != 1 || *((void *)v23 - 1) != 0)
    {
      v23 += 48;
      if (!--v24) {
        goto LABEL_8;
      }
    }
    BOOL v49 = v21;
    uint64_t v50 = v7;
    uint64_t v51 = v18;
    unint64_t v52 = a2;
    Class v53 = v15;
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v55 = MEMORY[0x1E4FBC860];
    sub_1DB12E97C(0, v22, 0);
    uint64_t v29 = v55;
    uint64_t v30 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DB1EF580();
      uint64_t v55 = v29;
      unint64_t v32 = *(void *)(v29 + 16);
      unint64_t v31 = *(void *)(v29 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1DB12E97C(v31 > 1, v32 + 1, 1);
        uint64_t v29 = v55;
      }
      v30 += 48;
      *(void *)(v29 + 16) = v32 + 1;
      unint64_t v33 = v29
          + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
          + *(void *)(v5 + 72) * v32;
      uint64_t v34 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
      uint64_t v35 = v34(v33, v10, v4);
      --v22;
    }
    while (v22);
    MEMORY[0x1F4188790](v35);
    int v36 = v53;
    *(&v49 - 2) = v53;
    if (sub_1DB12DFD8((uint64_t (*)(char *))sub_1DB13040C, (uint64_t)(&v49 - 4), v29))
    {
      uint64_t v37 = v49;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v49, v4);
      unint64_t v38 = v54;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v54, v36, v4);
    }
    else
    {
      unint64_t v38 = v54;
      uint64_t v37 = v49;
      v34((unint64_t)v54, v49, v4);
    }
    v34((unint64_t)v37, v38, v4);
    uint64_t v39 = self;
    unint64_t v40 = (void *)sub_1DB1EF5D0();
    uint64_t v41 = (void *)sub_1DB1EF5D0();
    uint64_t v42 = (void *)sub_1DB1F1480();
    id v43 = objc_msgSend(v39, sel_lt_defaultTargetForSource_systemLocale_availableLocales_targetMap_, v40, v41, v42, 0);

    uint64_t v44 = v50;
    sub_1DB1EF5F0();
    swift_release();

    int v45 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v46 = v51;
    v45(v51, v4);
    v34((unint64_t)v46, v44, v4);
    unint64_t v47 = v52;
    v34(v52, v37, v4);
    uint64_t v48 = type metadata accessor for LocalePair();
    v34(v47 + *(int *)(v48 + 20), v46, v4);
    return ((uint64_t (*)(char *, uint64_t))v45)(v53, v4);
  }
  else
  {
LABEL_8:
    char v26 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
    v26(a2, v21, v4);
    uint64_t v27 = type metadata accessor for LocalePair();
    return ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(a2 + *(int *)(v27 + 20), v18, v4);
  }
}

uint64_t sub_1DB12E780()
{
  sub_1DB1EF590();
  sub_1DB0F0708();
  char v0 = 1;
  uint64_t v1 = sub_1DB1F1950();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  sub_1DB1EF590();
  uint64_t v4 = sub_1DB1F1950();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (v1 != v4 || v3 != v6) {
    char v0 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1DB12E8F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12EB48(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for LocalePair()
{
  uint64_t result = qword_1EBA4E460;
  if (!qword_1EBA4E460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB12E95C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12ECD0(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1DB12E97C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F640(a1, a2, a3, (void *)*v3, &qword_1EA904A00, MEMORY[0x1E4F27A78]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DB12E9B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12EE50(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DB12E9D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F640(a1, a2, a3, (void *)*v3, &qword_1EA904A18, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DB12EA14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12EFBC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DB12EA34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F204(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DB12EA54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F374(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DB12EA74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F640(a1, a2, a3, (void *)*v3, &qword_1EBA4E4E0, (uint64_t (*)(void))type metadata accessor for TextModel);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DB12EAB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F640(a1, a2, a3, (void *)*v3, &qword_1EA9049E8, MEMORY[0x1E4F27990]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DB12EAEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F4D4(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DB12EB0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DB12F640(a1, a2, a3, (void *)*v3, &qword_1EBA4E4D8, type metadata accessor for VisualTranslationModel);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DB12EB48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4D968);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12ECD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A20);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12EE30(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DB12F640(a1, a2, a3, a4, &qword_1EA904A00, MEMORY[0x1E4F27A78]);
}

uint64_t sub_1DB12EE50(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E600);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12EFBC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A08);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A10) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A10) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  BOOL v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12F204(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12F374(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12F4D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12F640(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  BOOL v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12F888(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DB188720(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB12F9E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1DB188C40(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for TextModel() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t _s13TranslationUI13LanguageModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (char v7 = sub_1DB1F1DB0(), result = 0, (v7 & 1) != 0))
  {
    if (v4) {
      unsigned int v9 = v5;
    }
    else {
      unsigned int v9 = 0;
    }
    if (v4) {
      unsigned int v10 = 0;
    }
    else {
      unsigned int v10 = v5;
    }
    if (!v2) {
      unsigned int v9 = v10;
    }
    if (v3) {
      return v9;
    }
    else {
      return v5 ^ 1;
    }
  }
  return result;
}

uint64_t sub_1DB12FC0C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
  }
  sub_1DB131034();
  sub_1DB131074((unint64_t *)&qword_1EA903D20, (void (*)(uint64_t))sub_1DB131034);
  uint64_t result = sub_1DB1F16A0();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DB1F1BB0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        BOOL v6 = (void *)MEMORY[0x1E018BAD0](i, a1);
        sub_1DB1E48BC(&v9, v6);
      }
    }
    else
    {
      char v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1DB1E48BC(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB12FD80(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1DB131074(&qword_1EA904860, MEMORY[0x1E4F27A78]);
  uint64_t v29 = sub_1DB1F16A0();
  if (v10)
  {
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    unint64_t v25 = v12;
    int64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    unint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1DB1E4B5C(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1DB130028(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1DB1F16A0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1DB1E4E80(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1DB1300C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1DB1193B8();
  uint64_t result = sub_1DB1F16A0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (_OWORD *)(a1 + 32);
    do
    {
      long long v5 = v4[1];
      v8[0] = *v4;
      v8[1] = v5;
      void v8[2] = v4[2];
      sub_1DB11A6B4((uint64_t)v8);
      sub_1DB1E5030((uint64_t)v6, (uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 3;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1DB130164(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF570();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049E0);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1DB131074(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]);
  uint64_t v29 = sub_1DB1F16A0();
  if (v10)
  {
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    unint64_t v25 = v12;
    int64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    unint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1DB1E52B0(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1DB13040C()
{
  return sub_1DB12E780() & 1;
}

unint64_t sub_1DB130430()
{
  unint64_t result = qword_1EA9049C8;
  if (!qword_1EA9049C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9049C8);
  }
  return result;
}

uint64_t sub_1DB130484()
{
  return MEMORY[0x1E4FBB1B0];
}

unint64_t sub_1DB130494()
{
  unint64_t result = qword_1EA9049D0;
  if (!qword_1EA9049D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9049D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranslationTaskHint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1305B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationTaskHint()
{
  return &type metadata for TranslationTaskHint;
}

uint64_t *initializeBufferWithCopyOfBuffer for LocalePair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DB1EF6B0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for LocalePair(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1309E8);
}

uint64_t sub_1DB1309E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocalePair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB130A68);
}

uint64_t sub_1DB130A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1DB130AD8()
{
  uint64_t result = sub_1DB1EF6B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LanguageState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1DB130B94(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DB130BB0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageState()
{
  return &type metadata for LanguageState;
}

uint64_t destroy for LanguageModel()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LanguageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LanguageModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LanguageModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguageModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageModel()
{
  return &type metadata for LanguageModel;
}

uint64_t getEnumTagSinglePayload for LanguageError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LanguageError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB130F58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageError()
{
  return &type metadata for LanguageError;
}

unint64_t sub_1DB130F94()
{
  unint64_t result = qword_1EA9049D8;
  if (!qword_1EA9049D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9049D8);
  }
  return result;
}

uint64_t sub_1DB130FE8()
{
  unint64_t v0 = sub_1DB1F1C10();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DB131034()
{
  unint64_t result = qword_1EA903D18;
  if (!qword_1EA903D18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA903D18);
  }
  return result;
}

uint64_t sub_1DB131074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t LanguagesProgressView.init(progress:action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = result;
  *(void *)(a3 + 16) = a2;
  return result;
}

uint64_t LanguagesProgressView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9039D8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = *v1;
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v7 = *((void *)v1 + 2);
  *(void *)uint64_t v5 = sub_1DB1F02E0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A28);
  sub_1DB1311E8(v8, v7, (uint64_t)&v5[*(int *)(v9 + 44)], v6);
  uint64_t v10 = sub_1DB1F0F60();
  sub_1DB0ECBC0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v10, v11);
  return sub_1DB0E8BD4((uint64_t)v5, &qword_1EA9039D8);
}

uint64_t sub_1DB1311E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_1DB1EF6B0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1DB1F1250();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A40);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = &v25[-v14];
  *(void *)unint64_t v15 = sub_1DB1F01C0();
  *((void *)v15 + 1) = 0x4020000000000000;
  unsigned char v15[16] = 0;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A48);
  sub_1DB1314B0(&v15[*(int *)(v16 + 44)], a4);
  sub_1DB1F1240();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v18 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v19 = sub_1DB1F12F0();
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject();
  *(double *)(v22 + 16) = a4;
  *(void *)(v22 + 24) = a1;
  *(void *)(v22 + 32) = a2;
  sub_1DB131D38((uint64_t)v15, (uint64_t)v12);
  sub_1DB131D38((uint64_t)v12, a3);
  uint64_t v23 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A50) + 48));
  uint64_t *v23 = v19;
  v23[1] = v21;
  v23[2] = (uint64_t)sub_1DB131D10;
  v23[3] = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1DB0E8BD4((uint64_t)v15, &qword_1EA904A40);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1DB0E8BD4((uint64_t)v12, &qword_1EA904A40);
}

uint64_t sub_1DB131494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1314B0@<X0>(char *a1@<X8>, double a2@<D0>)
{
  uint64_t v39 = a1;
  uint64_t v3 = sub_1DB1F0240();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1DB1F05B0();
  uint64_t v37 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903F30);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A58);
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = v40;
  uint64_t v41 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v37 - v16;
  unint64_t v38 = (char *)&v37 - v16;
  sub_1DB1EFBA0();
  sub_1DB1F05A0();
  sub_1DB0E3C44(&qword_1EA903F58, &qword_1EA903F30);
  sub_1DB131DA0();
  sub_1DB1F0960();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v14, v41);
  sub_1DB1F0230();
  sub_1DB1F0220();
  double v43 = a2 * 100.0;
  sub_1DB1F01F0();
  sub_1DB1F0220();
  sub_1DB1F0260();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v20 = sub_1DB1F0920();
  uint64_t v22 = v21;
  LOBYTE(v4) = v23 & 1;
  int v42 = sub_1DB1F04E0();
  uint64_t v24 = sub_1DB1F08F0();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  LOBYTE(v8) = v29 & 1;
  sub_1DB0EB23C(v20, v22, v4);
  swift_bridgeObjectRelease();
  uint64_t v30 = v41;
  unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  unint64_t v32 = v38;
  v31(v14, v38, v41);
  unint64_t v33 = v39;
  v31(v39, v14, v30);
  uint64_t v34 = &v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A68) + 48)];
  *(void *)uint64_t v34 = v24;
  *((void *)v34 + 1) = v26;
  v34[16] = v8;
  *((void *)v34 + 3) = v28;
  sub_1DB0EB2A4(v24, v26, v8);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v40 + 8);
  swift_bridgeObjectRetain();
  v35(v32, v30);
  sub_1DB0EB23C(v24, v26, v8);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v35)(v14, v30);
}

uint64_t sub_1DB1319A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9039D8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = *v1;
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v7 = *((void *)v1 + 2);
  *(void *)uint64_t v5 = sub_1DB1F02E0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A28);
  sub_1DB1311E8(v8, v7, (uint64_t)&v5[*(int *)(v9 + 44)], v6);
  uint64_t v10 = sub_1DB1F0F60();
  sub_1DB0ECBC0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v10, v11);
  return sub_1DB0E8BD4((uint64_t)v5, &qword_1EA9039D8);
}

uint64_t destroy for LanguagesProgressView()
{
  return swift_release();
}

void *_s13TranslationUI21LanguagesProgressViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for LanguagesProgressView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LanguagesProgressView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagesProgressView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagesProgressView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagesProgressView()
{
  return &type metadata for LanguagesProgressView;
}

unint64_t sub_1DB131C38()
{
  unint64_t result = qword_1EA904A30;
  if (!qword_1EA904A30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9039E0);
    sub_1DB0E3C44(&qword_1EA904A38, &qword_1EA9039D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904A30);
  }
  return result;
}

uint64_t sub_1DB131CD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB131D10()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1DB131D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DB131DA0()
{
  unint64_t result = qword_1EA904A60;
  if (!qword_1EA904A60)
  {
    sub_1DB1F05B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904A60);
  }
  return result;
}

void *sub_1DB131DF8(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1DB1F1BB0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E018BAD0](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DB131F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1F1590();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DB1F1580();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1DB0E8BD4(a1, (uint64_t *)&unk_1EBA4E610);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DB1F1510();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1DB1320CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB13211C(a1, a2, a3, (uint64_t)&unk_1F3545F58, &qword_1EA904C08);
}

uint64_t sub_1DB1320F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB13211C(a1, a2, a3, (uint64_t)&unk_1F3545D50, &qword_1EA904B48);
}

uint64_t sub_1DB13211C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_1DB1F1590();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_1DB1F1580();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1DB0E8BD4(a1, (uint64_t *)&unk_1EBA4E610);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DB1F1510();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_1DB1322CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB13211C(a1, a2, a3, (uint64_t)&unk_1F3545D78, &qword_1EA904B60);
}

uint64_t LanguagesService.__allocating_init(task:)(unsigned __int8 *a1)
{
  uint64_t v2 = swift_allocObject();
  LanguagesService.init(task:)(a1);
  return v2;
}

uint64_t LanguagesService.models.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t LanguagesService.airplaneModeEnabled.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

Swift::Void __swiftcall LanguagesService.download(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall LanguagesService.delete(_:)(Swift::OpaquePointer a1)
{
}

uint64_t sub_1DB13245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  v10[5] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB131F20((uint64_t)v8, a3, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1DB132560@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB1325E0()
{
  return sub_1DB1EF920();
}

uint64_t LanguagesService.models.setter()
{
  return sub_1DB1EF920();
}

uint64_t (*LanguagesService.models.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DB1EF900();
  return sub_1DB132758;
}

uint64_t LanguagesService.$models.getter()
{
  return sub_1DB13303C((uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1EBA4D7E0);
}

uint64_t LanguagesService.$models.setter(uint64_t a1)
{
  return sub_1DB1332AC(a1, &qword_1EA904A80, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1EBA4D7E0);
}

uint64_t (*LanguagesService.$models.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A80);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUI16LanguagesService__models;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7E0);
  sub_1DB1EF8E0();
  swift_endAccess();
  return sub_1DB13289C;
}

uint64_t LanguagesService.autoDetectSpeechUnsupportedPairs.getter()
{
  return sub_1DB13B7B8();
}

uint64_t LanguagesService.autoDetectSpeechUnsupportedPairs.setter(uint64_t a1)
{
  return sub_1DB13B88C(a1, &OBJC_IVAR____TtC13TranslationUI16LanguagesService_autoDetectSpeechUnsupportedPairs);
}

uint64_t (*LanguagesService.autoDetectSpeechUnsupportedPairs.modify())()
{
  return j__swift_endAccess;
}

uint64_t LanguagesService.localeModalities.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DB13298C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB132A0C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1DB1EF920();
}

uint64_t LanguagesService.localeModalities.setter()
{
  return sub_1DB1EF920();
}

uint64_t (*LanguagesService.localeModalities.modify(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DB1EF900();
  return sub_1DB132758;
}

uint64_t LanguagesService.$localeModalities.getter()
{
  return sub_1DB13303C((uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EA904A90);
}

uint64_t LanguagesService.$localeModalities.setter(uint64_t a1)
{
  return sub_1DB1332AC(a1, &qword_1EA904A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EA904A90);
}

uint64_t (*LanguagesService.$localeModalities.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A98);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A90);
  sub_1DB1EF8E0();
  swift_endAccess();
  return sub_1DB13289C;
}

uint64_t LanguagesService.asrUnsupportedModels.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  if (!v5) {
    return MEMORY[0x1E4FBC870];
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  id v0 = v5;
  sub_1DB13EAA0((uint64_t)v5, v0);
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();

  uint64_t v3 = sub_1DB1300C0(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DB132DD0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB132E50()
{
  return sub_1DB1EF920();
}

uint64_t LanguagesService.airplaneModeEnabled.setter()
{
  return sub_1DB1EF920();
}

uint64_t (*LanguagesService.airplaneModeEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DB1EF900();
  return sub_1DB132758;
}

void sub_1DB132FC0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t LanguagesService.$airplaneModeEnabled.getter()
{
  return sub_1DB13303C((uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1EBA4E248);
}

uint64_t sub_1DB13303C(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_1DB1330A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return swift_endAccess();
}

uint64_t sub_1DB133114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v19 - v15;
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v17((char *)&v19 - v15, a1, v9, v14);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1DB1EF8F0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t LanguagesService.$airplaneModeEnabled.setter(uint64_t a1)
{
  return sub_1DB1332AC(a1, &qword_1EBA4D7C8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1EBA4E248);
}

uint64_t sub_1DB1332AC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v8);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1DB1EF8F0();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*LanguagesService.$airplaneModeEnabled.modify(void *a1))()
{
  char v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7C8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  sub_1DB1EF8E0();
  swift_endAccess();
  return sub_1DB13289C;
}

void sub_1DB1334EC(uint64_t a1, char a2)
{
  char v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1DB1EF8F0();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_1DB1EF8F0();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t LanguagesService.init(task:)(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v50 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D928);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v46 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7A8);
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v47 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  uint64_t v10 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v12 = &v43[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A90);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7E0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = &v43[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v44 = *a1;
  uint64_t v21 = v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__models;
  *(void *)&address.sa_len = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  sub_1DB1EF8D0();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v18 + 32))(v21, v20, v17);
  *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_autoDetectSpeechUnsupportedPairs) = MEMORY[0x1E4FBC870];
  uint64_t v22 = v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities;
  *(void *)&address.sa_len = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904AA0);
  sub_1DB1EF8D0();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v14 + 32))(v22, v16, v13);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_askedUser) = 0;
  uint64_t v23 = OBJC_IVAR____TtC13TranslationUI16LanguagesService_airplaneModeConfiguration;
  *(void *)(v2 + v23) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AirplaneModeConfiguration()), sel_init);
  char v24 = sub_1DB0E4588();
  if (v24 == 2)
  {
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4BE78]), sel_init);
    __uint8_t v26 = objc_msgSend(v25, sel_airplaneMode);
  }
  else
  {
    __uint8_t v26 = v24 & 1;
  }
  uint64_t v27 = v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled;
  address.sa_len = v26;
  sub_1DB1EF8D0();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 32))(v27, v12, v45);
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  uint64_t v28 = (uint64_t)SCNetworkReachabilityCreateWithAddress(0, &address);
  if (v28)
  {
    uint64_t v29 = v28;
    type metadata accessor for Reachability();
    swift_allocObject();
    uint64_t v28 = Reachability.init(networkReachability:)(v29);
  }
  *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_reachability) = v28;
  *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_subscriptions) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_handle) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_task) = v44;
  LanguagesService.refresh()();
  id v30 = *(id *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_airplaneModeConfiguration);
  uint64_t v31 = sub_1DB0E392C();

  *(void *)&address.sa_len = v31;
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D940);
  id v51 = (id)sub_1DB1F1790();
  uint64_t v32 = sub_1DB1F1770();
  uint64_t v33 = (uint64_t)v46;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v46, 1, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7B8);
  sub_1DB0E3C44(&qword_1EBA4D7B0, &qword_1EBA4D7B8);
  sub_1DB13ED60();
  uint64_t v34 = v47;
  sub_1DB1EF970();
  sub_1DB0E8BD4(v33, &qword_1EBA4D928);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1DB0E3C44(&qword_1EBA4D7A0, &qword_1EBA4D7A8);
  uint64_t v35 = v49;
  sub_1DB1EF9A0();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v34, v35);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8C8);
  sub_1DB0E3C44((unint64_t *)&unk_1EBA4D8D0, &qword_1EBA4D8C8);
  sub_1DB1EF8A0();
  swift_endAccess();
  swift_release();
  int v36 = (void *)*MEMORY[0x1E4FB2730];
  uint64_t v37 = sub_1DB1F1590();
  uint64_t v38 = (uint64_t)v50;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v50, 1, 1, v37);
  uint64_t v39 = swift_allocObject();
  swift_weakInit();
  uint64_t v40 = (void *)swift_allocObject();
  v40[2] = 0;
  v40[3] = 0;
  v40[4] = v36;
  v40[5] = v39;
  id v41 = v36;
  *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_handle) = sub_1DB131F20(v38, (uint64_t)&unk_1EA904AB0, (uint64_t)v40);
  swift_release();
  return v2;
}

Swift::Void __swiftcall LanguagesService.refresh()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v1 - 8);
  char v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DB1F1590();
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  swift_retain();
  sub_1DB136A2C((uint64_t)v3, (uint64_t)&unk_1EA904AC0, (uint64_t)v6);
  swift_release();
  v5(v3, 1, 1, v4);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v0;
  swift_retain();
  sub_1DB131F20((uint64_t)v3, (uint64_t)&unk_1EA904AD0, (uint64_t)v7);
  swift_release();
  v5(v3, 1, 1, v4);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  _OWORD v8[3] = 0;
  v8[4] = v0;
  swift_retain();
  sub_1DB131F20((uint64_t)v3, (uint64_t)&unk_1EA904AE0, (uint64_t)v8);
  swift_release();
}

uint64_t sub_1DB13403C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1DB1EF920();
  }
  return result;
}

uint64_t sub_1DB1340C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF70);
  v5[23] = swift_task_alloc();
  uint64_t v6 = sub_1DB1F1810();
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB134204, 0, 0);
}

uint64_t sub_1DB134204()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  sub_1DB1F1820();

  sub_1DB1F1800();
  swift_beginAccess();
  unint64_t v2 = sub_1DB13FAEC();
  char v3 = (void *)swift_task_alloc();
  v0[27] = v3;
  void *v3 = v0;
  v3[1] = sub_1DB134324;
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[24];
  return MEMORY[0x1F4187C78](v4, v5, v2);
}

uint64_t sub_1DB134324()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1DB134BA8;
  }
  else {
    unint64_t v2 = sub_1DB134438;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB134438()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = sub_1DB1EF390();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1DB1EF810();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBA4F420);
    uint64_t v6 = sub_1DB1EF7F0();
    os_log_type_t v7 = sub_1DB1F1700();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1DB0DC000, v6, v7, "Foreground event refresh", v8, 2u);
      MEMORY[0x1E018CA60](v8, -1, -1);
    }

    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = Strong;
      uint64_t v11 = v0[22];
      uint64_t v12 = sub_1DB1F1590();
      uint64_t v13 = *(void *)(v12 - 8);
      id v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v41(v11, 1, 1, v12);
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = 0;
      v14[3] = 0;
      v14[4] = v10;
      uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      int v15 = v40(v11, 1, v12);
      swift_retain();
      uint64_t v16 = v0[22];
      if (v15 == 1)
      {
        sub_1DB0E8BD4(v0[22], (uint64_t *)&unk_1EBA4E610);
      }
      else
      {
        sub_1DB1F1580();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
        if (v14[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v17 = sub_1DB1F1510();
          uint64_t v19 = v18;
          swift_unknownObjectRelease();
          if (v19 | v17)
          {
            v0[2] = 0;
            v0[3] = 0;
            v0[4] = v17;
            v0[5] = v19;
          }
        }
      }
      uint64_t v20 = v0[21];
      swift_task_create();
      swift_release();
      v41(v20, 1, 1, v12);
      uint64_t v21 = (void *)swift_allocObject();
      void v21[2] = 0;
      v21[3] = 0;
      v21[4] = v10;
      int v22 = v40(v20, 1, v12);
      swift_retain();
      uint64_t v23 = v0[21];
      if (v22 == 1)
      {
        sub_1DB0E8BD4(v0[21], (uint64_t *)&unk_1EBA4E610);
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      else
      {
        sub_1DB1F1580();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v23, v12);
        if (v21[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v24 = sub_1DB1F1510();
          uint64_t v25 = v26;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v24 = 0;
          uint64_t v25 = 0;
        }
      }
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &unk_1EA904BD0;
      *(void *)(v27 + 24) = v21;
      if (v25 | v24)
      {
        v0[6] = 0;
        v0[7] = 0;
        v0[8] = v24;
        v0[9] = v25;
      }
      uint64_t v28 = v0[20];
      swift_task_create();
      swift_release();
      v41(v28, 1, 1, v12);
      uint64_t v29 = (void *)swift_allocObject();
      v29[2] = 0;
      void v29[3] = 0;
      v29[4] = v10;
      int v30 = v40(v28, 1, v12);
      swift_retain();
      uint64_t v31 = v0[20];
      if (v30 == 1)
      {
        sub_1DB0E8BD4(v0[20], (uint64_t *)&unk_1EBA4E610);
        uint64_t v32 = 0;
        uint64_t v33 = 0;
      }
      else
      {
        sub_1DB1F1580();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
        if (v29[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v32 = sub_1DB1F1510();
          uint64_t v33 = v34;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v32 = 0;
          uint64_t v33 = 0;
        }
      }
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = &unk_1EA904BE0;
      *(void *)(v35 + 24) = v29;
      if (v33 | v32)
      {
        v0[10] = 0;
        v0[11] = 0;
        v0[12] = v32;
        v0[13] = v33;
      }
      swift_task_create();
      swift_release();
      swift_release();
    }
    sub_1DB0E8BD4(v0[23], &qword_1EBA4CF70);
    unint64_t v36 = sub_1DB13FAEC();
    uint64_t v37 = (void *)swift_task_alloc();
    v0[27] = v37;
    *uint64_t v37 = v0;
    v37[1] = sub_1DB134324;
    uint64_t v38 = v0[23];
    uint64_t v39 = v0[24];
    return MEMORY[0x1F4187C78](v38, v39, v36);
  }
}

uint64_t sub_1DB134BA8()
{
  *(void *)(v0 + 136) = *(void *)(v0 + 224);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4DE28);
  uint64_t v1 = MEMORY[0x1E4FBC248];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x1E4FBC278];
  return MEMORY[0x1F41868E8](v2, v1, v3);
}

uint64_t LanguagesService.deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_handle))
  {
    swift_retain();
    sub_1DB1F15F0();
    swift_release();
  }
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__models;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E248);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LanguagesService.__deallocating_deinit()
{
  LanguagesService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1DB134E0C(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v1;
  return MEMORY[0x1F4188298](sub_1DB134E2C, 0, 0);
}

uint64_t sub_1DB134E2C()
{
  *(void *)(v0 + 48) = sub_1DB1F1570();
  *(void *)(v0 + 56) = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB134EC4, v2, v1);
}

uint64_t sub_1DB134EC4()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  *(void *)(v0 + 64) = *(void *)(v0 + 24);
  return MEMORY[0x1F4188298](sub_1DB134F88, 0, 0);
}

uint64_t sub_1DB134F88()
{
  uint64_t v21 = v0;
  *(void *)(v0 + 16) = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 104) = 0;
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)(v1 + 72);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      char v6 = *((unsigned char *)v3 - 16);
      uint64_t v7 = *(v3 - 3);
      long long v16 = *(_OWORD *)(v3 - 5);
      uint64_t v17 = v7;
      char v18 = v6;
      uint64_t v19 = v5;
      uint64_t v20 = v4;
      sub_1DB1354C4(&v16, (uint64_t *)(v0 + 16), (unsigned char *)(v0 + 104));
      v3 += 6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    int v8 = *(unsigned __int8 *)(v0 + 104);
    if (v8 == 2)
    {
      *(void *)&long long v16 = *(void *)(v0 + 16);
      swift_bridgeObjectRetain_n();
      sub_1DB13DA40((uint64_t *)&v16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 88) = v16;
      *(void *)(v0 + 96) = sub_1DB1F1560();
      uint64_t v9 = sub_1DB1F1510();
      uint64_t v11 = v15;
      uint64_t v12 = sub_1DB1352B0;
      goto LABEL_11;
    }
    if (v8 == 1)
    {
      *(void *)(v0 + 72) = *(void *)(v0 + 16);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_1DB1F1560();
      uint64_t v9 = sub_1DB1F1510();
      uint64_t v11 = v10;
      uint64_t v12 = sub_1DB135190;
LABEL_11:
      return MEMORY[0x1F4188298](v12, v9, v11);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1DB135190()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 24) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB135250, 0, 0);
}

uint64_t sub_1DB135250()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB1352B0()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 24) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB13FD7C, 0, 0);
}

uint64_t sub_1DB135370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  sub_1DB1F1570();
  v5[5] = sub_1DB1F1560();
  uint64_t v7 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB135408, v7, v6);
}

uint64_t sub_1DB135408()
{
  uint64_t v1 = (void *)v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v1;
  id v2 = v1;
  swift_retain();
  sub_1DB1EF920();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1DB1354C4(long long *a1, uint64_t *a2, unsigned char *a3)
{
  long long v5 = a1[1];
  long long v26 = *a1;
  long long v27 = v5;
  long long v28 = a1[2];
  uint64_t v6 = (void *)*a2;
  unint64_t v7 = sub_1DB13F908(*a2, (uint64_t *)&v26);
  if (v8)
  {
    sub_1DB11A6B4((uint64_t)&v26);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = (uint64_t)v6;
    if (result)
    {
LABEL_10:
      unint64_t v17 = v6[2];
      unint64_t v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DB188720((void *)(v16 > 1), v17 + 1, 1, v6);
        uint64_t v6 = (void *)result;
        *a2 = result;
      }
      _OWORD v6[2] = v17 + 1;
      uint64_t v20 = &v6[6 * v17];
      long long v18 = v26;
      long long v19 = v28;
      v20[3] = v27;
      v20[4] = v19;
      void v20[2] = v18;
      LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = 2;
      goto LABEL_38;
    }
LABEL_42:
    uint64_t result = (uint64_t)sub_1DB188720(0, v6[2] + 1, 1, v6);
    uint64_t v6 = (void *)result;
    *a2 = result;
    goto LABEL_10;
  }
  unint64_t v9 = v7;
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v7 >= v6[2])
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v10 = (double *)&v6[6 * v7];
  double v13 = v10[6];
  uint64_t v11 = v10 + 6;
  double v12 = v13;
  int v14 = *((unsigned __int8 *)v11 + 8);
  sub_1DB11A9DC((uint64_t)&v27, (uint64_t)v29);
  if (v14 == 1)
  {
    if (v12 == 0.0)
    {
      uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v32);
      if (v33 == 1 && v32 == 0.0) {
        return result;
      }
    }
    else
    {
      uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v32);
      if (v33 == 1 && v32 != 0.0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v32);
    if ((v33 & 1) == 0 && v32 == v12) {
      return result;
    }
  }
  if ((_BYTE)v11[1]) {
    goto LABEL_33;
  }
  double v21 = *v11;
  uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v30);
  if (v31) {
    goto LABEL_33;
  }
  double v22 = v21 * 100.0;
  if (v21 * 100.0 <= -9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  double v23 = v30 * 100.0;
  if ((*(void *)&v22 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (COERCE_UNSIGNED_INT64(v30 * 100.0) & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_46;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_48:
    __break(1u);
    return result;
  }
  if (*(uint64_t *)&v22 != *(uint64_t *)&v23 && v30 > v21)
  {
LABEL_33:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = (uint64_t)v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DB188FAC(v6);
      uint64_t v6 = (void *)result;
    }
    if (v9 < v6[2])
    {
      uint64_t result = sub_1DB11A9DC((uint64_t)v29, (uint64_t)&v6[6 * v9 + 6]);
      *a2 = (uint64_t)v6;
      LODWORD(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = *a3;
      if (v20 <= 1) {
        LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
      }
LABEL_38:
      *a3 = (_BYTE)v20;
      return result;
    }
    __break(1u);
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_1DB13579C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  v4[9] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904958);
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904988);
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904990);
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB135950, 0, 0);
}

uint64_t sub_1DB135950()
{
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F420);
  id v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F1700();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1DB0DC000, v2, v3, "refresh", v4, 2u);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }
  uint64_t v5 = v0[8];

  int v6 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular);
  uint64_t v7 = sub_1DB1EF7F0();
  os_log_type_t v8 = sub_1DB1F1700();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1DB0DC000, v7, v8, "Requested refresh of language asset query", v9, 2u);
    MEMORY[0x1E018CA60](v9, -1, -1);
  }
  uint64_t v10 = v0[14];
  uint64_t v11 = v0[15];
  uint64_t v13 = v0[12];
  uint64_t v12 = v0[13];
  uint64_t v15 = v0[10];
  uint64_t v14 = v0[11];

  if (v6) {
    uint64_t v16 = 17;
  }
  else {
    uint64_t v16 = 16;
  }
  *(void *)(swift_task_alloc() + 16) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E4FBD120], v15);
  sub_1DB1F1650();
  swift_task_dealloc();
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  unint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  void *v17 = v0;
  v17[1] = sub_1DB135C0C;
  uint64_t v18 = v0[16];
  return MEMORY[0x1F4187ED8](v0 + 2, 0, 0, v18, v0 + 3);
}

uint64_t sub_1DB135C0C()
{
  *(void *)(*(void *)v1 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1DB13697C;
  }
  else {
    id v2 = sub_1DB135D20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB135D20()
{
  uint64_t v1 = v0[2];
  v0[21] = v1;
  if (v1)
  {
    v0[22] = sub_1DB1F1570();
    v0[23] = sub_1DB1F1560();
    uint64_t v3 = sub_1DB1F1510();
    return MEMORY[0x1F4188298](sub_1DB135E5C, v3, v2);
  }
  else
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    int v6 = (uint64_t (*)(void))((char *)&dword_1EA904C18 + dword_1EA904C18);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[25] = v4;
    void *v4 = v0;
    v4[1] = sub_1DB1363E8;
    return v6();
  }
}

uint64_t sub_1DB135E5C()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  *(void *)(v0 + 192) = *(void *)(v0 + 32);
  return MEMORY[0x1F4188298](sub_1DB135F20, 0, 0);
}

uint64_t sub_1DB135F20()
{
  uint64_t v1 = v0[21];
  uint64_t v44 = *(void *)(v1 + 16);
  if (!v44)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v36 = (void *)swift_task_alloc();
    v0[19] = v36;
    *unint64_t v36 = v0;
    v36[1] = sub_1DB135C0C;
    uint64_t v4 = v0[16];
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 2);
    uint64_t v19 = 0;
    uint64_t v3 = 0;
    uint64_t v5 = v0 + 3;
    return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
  }
  uint64_t v40 = v0 + 5;
  uint64_t v43 = v1 + 32;
  uint64_t v2 = (void *)v0[24];
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  char v41 = 0;
  uint64_t v42 = v0;
  do
  {
    uint64_t v9 = (double *)(v43 + 48 * v6);
    double v10 = *v9;
    uint64_t v11 = *((void *)v9 + 1);
    double v12 = v9[2];
    int v13 = *((unsigned __int8 *)v9 + 24);
    uint64_t v14 = *((void *)v9 + 5);
    uint64_t v45 = *((void *)v9 + 4);
    unint64_t v15 = v2[2];
    if (!v15)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_1DB188720(0, v15 + 1, 1, v2);
      }
      unint64_t v22 = v2[2];
      unint64_t v21 = v2[3];
      if (v22 >= v21 >> 1) {
        uint64_t v2 = sub_1DB188720((void *)(v21 > 1), v22 + 1, 1, v2);
      }
      v2[2] = v22 + 1;
      uint64_t v7 = (double *)&v2[6 * v22];
      v7[4] = v10;
      *((void *)v7 + 5) = v11;
      v7[6] = v12;
      *((unsigned char *)v7 + 56) = v13;
      *((void *)v7 + 8) = v45;
      *((void *)v7 + 9) = v14;
      char v8 = 2;
LABEL_4:
      char v41 = v8;
      goto LABEL_5;
    }
    unint64_t v16 = 0;
    uint64_t v17 = 7;
    while (1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = v2[v17 - 3];
      uint64_t v19 = v2[v17 - 2];
      if (isUniquelyReferenced_nonNull_native == *(void *)&v10 && v19 == v11) {
        break;
      }
      uint64_t isUniquelyReferenced_nonNull_native = sub_1DB1F1DB0();
      if (isUniquelyReferenced_nonNull_native) {
        break;
      }
      ++v16;
      v17 += 6;
      if (v15 == v16) {
        goto LABEL_14;
      }
    }
    if (v16 >= v15)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
    }
    double v23 = *(double *)&v2[v17 - 1];
    if (LOBYTE(v2[v17]) == 1)
    {
      if (v23 == 0.0)
      {
        if (v12 == 0.0) {
          char v30 = v13;
        }
        else {
          char v30 = 0;
        }
        if ((v30 & 1) == 0) {
          goto LABEL_47;
        }
      }
      else
      {
        if (v12 == 0.0) {
          int v24 = 0;
        }
        else {
          int v24 = v13;
        }
        if (v24 != 1) {
          goto LABEL_47;
        }
      }
    }
    else
    {
      double v25 = *(double *)&v2[v17 - 1];
      if (v23 == v12) {
        char v26 = v13;
      }
      else {
        char v26 = 1;
      }
      if (v26)
      {
        if (v13) {
          goto LABEL_47;
        }
        double v27 = v25 * 100.0;
        if (v25 * 100.0 <= -9.22337204e18) {
          goto LABEL_68;
        }
        if (v27 >= 9.22337204e18) {
          goto LABEL_69;
        }
        double v28 = v12 * 100.0;
        if ((~COERCE__INT64(v12 * 100.0) & 0x7FF0000000000000) == 0
          || (*(void *)&v27 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_70;
        }
        if (v28 <= -9.22337204e18) {
          goto LABEL_71;
        }
        if (v28 >= 9.22337204e18) {
          goto LABEL_72;
        }
        if (*(uint64_t *)&v27 != *(uint64_t *)&v28 && v25 < v12)
        {
LABEL_47:
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DB188FAC(v2);
            uint64_t v2 = (void *)isUniquelyReferenced_nonNull_native;
          }
          if (v16 >= v2[2]) {
            goto LABEL_67;
          }
          char v31 = (double *)&v2[v17];
          *(v31 - 1) = v12;
          *(unsigned char *)char v31 = v13;
          char v8 = v41;
          if ((v41 & 0xFE) == 0) {
            char v8 = 1;
          }
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    uint64_t v0 = v42;
    v42[27] = v2;
    ++v6;
  }
  while (v6 != v44);
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_55;
  }
  if (v41 == 1)
  {
    swift_bridgeObjectRetain();
    v42[28] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v33;
    uint64_t v35 = sub_1DB13672C;
    goto LABEL_63;
  }
  uint64_t v37 = v42[20];
  v42[5] = v2;
  swift_bridgeObjectRetain_n();
  sub_1DB13DA40(v40);
  if (v37)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v42[29] = v42[5];
    v42[30] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v39;
    uint64_t v35 = sub_1DB1367EC;
LABEL_63:
    return MEMORY[0x1F4188298](v35, v32, v34);
  }
}

uint64_t sub_1DB1363E8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1364E8, 0, 0);
}

uint64_t sub_1DB1364E8()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 72);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v8 = *(v3 - 3);
      int v9 = *((unsigned __int8 *)v3 - 16);
      if (v9 != 1 || v8 != 0)
      {
        uint64_t v12 = *(v3 - 5);
        uint64_t v11 = *(v3 - 4);
        uint64_t v13 = *v3;
        uint64_t v21 = *(v3 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DB12E8F0(0, *(void *)(v4 + 16) + 1, 1);
        }
        unint64_t v6 = *(void *)(v4 + 16);
        unint64_t v5 = *(void *)(v4 + 24);
        if (v6 >= v5 >> 1) {
          sub_1DB12E8F0(v5 > 1, v6 + 1, 1);
        }
        *(void *)(v4 + 16) = v6 + 1;
        uint64_t v7 = v4 + 48 * v6;
        *(void *)(v7 + 32) = v12;
        *(void *)(v7 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v11;
        *(void *)(v7 + 48) = v8;
        *(unsigned char *)(v7 + 56) = v9;
        *(void *)(v7 + 64) = v21;
        *(void *)(v7 + 72) = v13;
      }
      v3 += 6;
      --v2;
    }
    while (v2);
    uint64_t v0 = v20;
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  uint64_t v15 = v0[8];
  uint64_t v14 = v0[9];
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1DB1F1590();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  uint64_t v17[3] = 0;
  v17[4] = v4;
  v17[5] = v15;
  swift_retain();
  swift_retain();
  sub_1DB131F20(v14, (uint64_t)&unk_1EA904BB8, (uint64_t)v17);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1DB13672C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 56) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB13FD74, 0, 0);
}

uint64_t sub_1DB1367EC()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 48) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB1368AC, 0, 0);
}

uint64_t sub_1DB1368AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB135C0C;
  uint64_t v2 = *(void *)(v0 + 128);
  return MEMORY[0x1F4187ED8](v0 + 16, 0, 0, v2, v0 + 24);
}

uint64_t sub_1DB13697C()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1DB136A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DB1F1590();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1DB1F1580();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1DB0E8BD4(a1, (uint64_t *)&unk_1EBA4E610);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DB1F1510();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1DB136BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x1F4188298](sub_1DB136BD4, 0, 0);
}

uint64_t sub_1DB136BD4()
{
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F420);
  uint64_t v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F16F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1DB0DC000, v2, v3, "Bootstrapping language service speech auto-detect unsupported pairs", v4, 2u);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D910);
  *uint64_t v5 = v0;
  v5[1] = sub_1DB136D74;
  return MEMORY[0x1F41880D8](v0 + 40, 0, 0, 0xD000000000000022, 0x80000001DB1FC890, sub_1DB1429DC, 0, v6);
}

uint64_t sub_1DB136D74()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB136E70, 0, 0);
}

uint64_t sub_1DB136E70()
{
  v0[8] = v0[5];
  sub_1DB1F1570();
  v0[9] = sub_1DB1F1560();
  uint64_t v2 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB136F0C, v2, v1);
}

uint64_t sub_1DB136F0C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  swift_release();
  os_log_type_t v3 = (void *)(v2 + OBJC_IVAR____TtC13TranslationUI16LanguagesService_autoDetectSpeechUnsupportedPairs);
  swift_beginAccess();
  void *v3 = v1;
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1DB136FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  *(void *)(v4 + 32) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB13703C, 0, 0);
}

uint64_t sub_1DB13703C()
{
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F420);
  uint64_t v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F16F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1DB0DC000, v2, v3, "Bootstrapping locale modalities", v4, 2u);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  uint64_t v6 = sub_1DB0E2EFC(0, &qword_1EA904BA0);
  *uint64_t v5 = v0;
  v5[1] = sub_1DB1371E8;
  return MEMORY[0x1F41880D8](v0 + 16, 0, 0, 0xD000000000000012, 0x80000001DB1FC870, sub_1DB142CF8, 0, v6);
}

uint64_t sub_1DB1371E8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1372E4, 0, 0);
}

uint64_t sub_1DB1372E4()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  os_log_type_t v3 = (void *)v0[2];
  uint64_t v4 = sub_1DB1F1590();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  sub_1DB1F1570();
  swift_retain();
  id v5 = v3;
  uint64_t v6 = sub_1DB1F1560();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBCFD8];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v2;
  v7[5] = v5;
  sub_1DB131F20(v1, (uint64_t)&unk_1EA904BB0, (uint64_t)v7);

  swift_release();
  swift_task_dealloc();
  int v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1DB13740C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904988);
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904990);
  v5[27] = v7;
  v5[28] = *(void *)(v7 - 8);
  v5[29] = swift_task_alloc();
  uint64_t v8 = sub_1DB1EF6B0();
  v5[30] = v8;
  v5[31] = *(void *)(v8 - 8);
  v5[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB13758C, 0, 0);
}

uint64_t sub_1DB13758C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[22];
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v5 = v0[31];
    uint64_t v29 = MEMORY[0x1E4FBC860];
    char v26 = v1;
    sub_1DB12E8F0(0, v3, 0);
    double v25 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v6 = (void *)(v2 + 72);
    do
    {
      uint64_t v8 = *(v6 - 5);
      uint64_t v7 = *(v6 - 4);
      uint64_t v9 = *(v6 - 3);
      uint64_t v10 = *v6;
      uint64_t v28 = *(v6 - 1);
      if (*((unsigned char *)v6 - 16) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9)
        {
          uint64_t v11 = v26[32];
          uint64_t v27 = v26[30];
          swift_bridgeObjectRetain();
          sub_1DB1EF580();
          _OWORD v26[2] = sub_1DB1EF590();
          v26[3] = v12;
          v26[4] = 45;
          v26[5] = 0xE100000000000000;
          v26[6] = 95;
          v26[7] = 0xE100000000000000;
          sub_1DB0F0708();
          uint64_t v13 = sub_1DB1F1950();
          uint64_t v15 = v14;
          swift_bridgeObjectRelease();
          (*v25)(v11, v27);
          v26[8] = v13;
          v26[9] = v15;
          v26[10] = 45;
          v26[11] = 0xE100000000000000;
          unsigned char v26[12] = 95;
          v26[13] = 0xE100000000000000;
          swift_bridgeObjectRetain();
          uint64_t v8 = sub_1DB1F1950();
          uint64_t v17 = v16;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = 0;
          char v18 = 0;
          uint64_t v7 = v17;
        }
        else
        {
          char v18 = 1;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v18 = 0;
      }
      uint64_t v4 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v4 = v29;
      }
      unint64_t v20 = *(void *)(v4 + 16);
      unint64_t v19 = *(void *)(v4 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DB12E8F0(v19 > 1, v20 + 1, 1);
        uint64_t v4 = v29;
      }
      v6 += 6;
      *(void *)(v4 + 16) = v20 + 1;
      uint64_t v21 = v4 + 48 * v20;
      *(void *)(v21 + 32) = v8;
      *(void *)(v21 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
      *(void *)(v21 + 48) = v9;
      *(unsigned char *)(v21 + 56) = v18;
      *(void *)(v21 + 64) = v28;
      *(void *)(v21 + 72) = v10;
      --v3;
    }
    while (v3);
    uint64_t v1 = v26;
  }
  v1[33] = v4;
  uint64_t v22 = (void *)swift_task_alloc();
  v1[34] = v22;
  void *v22 = v1;
  v22[1] = sub_1DB1378DC;
  uint64_t v23 = v1[23];
  v22[4] = v4;
  v22[5] = v23;
  return MEMORY[0x1F4188298](sub_1DB134E2C, 0, 0);
}

uint64_t sub_1DB1378DC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1379D8, 0, 0);
}

uint64_t sub_1DB1379D8()
{
  uint64_t v17 = v0;
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F420);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F1730();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v16 = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x1E018B4B0](v6, &type metadata for LanguageModel);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[21] = sub_1DB11F638(v7, v9, &v16);
    sub_1DB1F1910();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v2, v3, "Requested download of: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v5, -1, -1);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v12 = v0[24];
  static LanguagesInstallService.add(_:useCellular:)(v0[33], *(unsigned __int8 *)(v0[23] + OBJC_IVAR____TtC13TranslationUI16LanguagesService_useCellular));
  swift_bridgeObjectRelease();
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[36] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1DB137CA0;
  uint64_t v14 = v0[27];
  return MEMORY[0x1F4187ED8](v0 + 14, 0, 0, v14, v0 + 15);
}

uint64_t sub_1DB137CA0()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DB138818;
  }
  else {
    uint64_t v2 = sub_1DB137DB4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB137DB4()
{
  uint64_t v1 = v0[14];
  v0[38] = v1;
  if (v1)
  {
    v0[39] = sub_1DB1F1570();
    v0[40] = sub_1DB1F1560();
    uint64_t v3 = sub_1DB1F1510();
    return MEMORY[0x1F4188298](sub_1DB137EC0, v3, v2);
  }
  else
  {
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1DB137EC0()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  *(void *)(v0 + 328) = *(void *)(v0 + 136);
  return MEMORY[0x1F4188298](sub_1DB137F84, 0, 0);
}

uint64_t sub_1DB137F84()
{
  uint64_t v1 = v0[38];
  uint64_t v44 = *(void *)(v1 + 16);
  if (!v44)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v36 = (void *)swift_task_alloc();
    v0[36] = v36;
    *unint64_t v36 = v0;
    v36[1] = sub_1DB137CA0;
    uint64_t v4 = v0[27];
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 14);
    uint64_t v19 = 0;
    uint64_t v3 = 0;
    uint64_t v5 = v0 + 15;
    return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
  }
  uint64_t v40 = v0 + 18;
  uint64_t v43 = v1 + 32;
  uint64_t v2 = (void *)v0[41];
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  char v41 = 0;
  uint64_t v42 = v0;
  do
  {
    unint64_t v9 = (double *)(v43 + 48 * v6);
    double v10 = *v9;
    uint64_t v11 = *((void *)v9 + 1);
    double v12 = v9[2];
    int v13 = *((unsigned __int8 *)v9 + 24);
    uint64_t v14 = *((void *)v9 + 5);
    uint64_t v45 = *((void *)v9 + 4);
    unint64_t v15 = v2[2];
    if (!v15)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_1DB188720(0, v15 + 1, 1, v2);
      }
      unint64_t v22 = v2[2];
      unint64_t v21 = v2[3];
      if (v22 >= v21 >> 1) {
        uint64_t v2 = sub_1DB188720((void *)(v21 > 1), v22 + 1, 1, v2);
      }
      v2[2] = v22 + 1;
      uint64_t v7 = (double *)&v2[6 * v22];
      v7[4] = v10;
      *((void *)v7 + 5) = v11;
      v7[6] = v12;
      *((unsigned char *)v7 + 56) = v13;
      *((void *)v7 + 8) = v45;
      *((void *)v7 + 9) = v14;
      char v8 = 2;
LABEL_4:
      char v41 = v8;
      goto LABEL_5;
    }
    unint64_t v16 = 0;
    uint64_t v17 = 7;
    while (1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = v2[v17 - 3];
      uint64_t v19 = v2[v17 - 2];
      if (isUniquelyReferenced_nonNull_native == *(void *)&v10 && v19 == v11) {
        break;
      }
      uint64_t isUniquelyReferenced_nonNull_native = sub_1DB1F1DB0();
      if (isUniquelyReferenced_nonNull_native) {
        break;
      }
      ++v16;
      v17 += 6;
      if (v15 == v16) {
        goto LABEL_14;
      }
    }
    if (v16 >= v15)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
    }
    double v23 = *(double *)&v2[v17 - 1];
    if (LOBYTE(v2[v17]) == 1)
    {
      if (v23 == 0.0)
      {
        if (v12 == 0.0) {
          char v30 = v13;
        }
        else {
          char v30 = 0;
        }
        if ((v30 & 1) == 0) {
          goto LABEL_47;
        }
      }
      else
      {
        if (v12 == 0.0) {
          int v24 = 0;
        }
        else {
          int v24 = v13;
        }
        if (v24 != 1) {
          goto LABEL_47;
        }
      }
    }
    else
    {
      double v25 = *(double *)&v2[v17 - 1];
      if (v23 == v12) {
        char v26 = v13;
      }
      else {
        char v26 = 1;
      }
      if (v26)
      {
        if (v13) {
          goto LABEL_47;
        }
        double v27 = v25 * 100.0;
        if (v25 * 100.0 <= -9.22337204e18) {
          goto LABEL_68;
        }
        if (v27 >= 9.22337204e18) {
          goto LABEL_69;
        }
        double v28 = v12 * 100.0;
        if ((~COERCE__INT64(v12 * 100.0) & 0x7FF0000000000000) == 0
          || (*(void *)&v27 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_70;
        }
        if (v28 <= -9.22337204e18) {
          goto LABEL_71;
        }
        if (v28 >= 9.22337204e18) {
          goto LABEL_72;
        }
        if (*(uint64_t *)&v27 != *(uint64_t *)&v28 && v25 < v12)
        {
LABEL_47:
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DB188FAC(v2);
            uint64_t v2 = (void *)isUniquelyReferenced_nonNull_native;
          }
          if (v16 >= v2[2]) {
            goto LABEL_67;
          }
          char v31 = (double *)&v2[v17];
          *(v31 - 1) = v12;
          *(unsigned char *)char v31 = v13;
          char v8 = v41;
          if ((v41 & 0xFE) == 0) {
            char v8 = 1;
          }
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    uint64_t v0 = v42;
    v42[42] = v2;
    ++v6;
  }
  while (v6 != v44);
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_55;
  }
  if (v41 == 1)
  {
    swift_bridgeObjectRetain();
    v42[43] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v33;
    uint64_t v35 = sub_1DB13844C;
    goto LABEL_63;
  }
  uint64_t v37 = v42[37];
  v42[18] = v2;
  swift_bridgeObjectRetain_n();
  sub_1DB13DA40(v40);
  if (v37)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v42[44] = v42[18];
    v42[45] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v39;
    uint64_t v35 = sub_1DB13850C;
LABEL_63:
    return MEMORY[0x1F4188298](v35, v32, v34);
  }
}

uint64_t sub_1DB13844C()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB13FD54, 0, 0);
}

uint64_t sub_1DB13850C()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 152) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB1385CC, 0, 0);
}

uint64_t sub_1DB1385CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB137CA0;
  uint64_t v2 = *(void *)(v0 + 216);
  return MEMORY[0x1F4187ED8](v0 + 112, 0, 0, v2, v0 + 120);
}

uint64_t sub_1DB13869C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB138798, 0, 0);
}

uint64_t sub_1DB138798()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB138818()
{
  (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 232), *(void *)(v0 + 216));
  uint64_t v1 = *(void **)(v0 + 120);
  *(void *)(v0 + 376) = v1;
  id v2 = v1;
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F1710();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = sub_1DB1EF410();
    *(void *)(v0 + 128) = v7;
    sub_1DB1F1910();
    *uint64_t v6 = v7;

    _os_log_impl(&dword_1DB0DC000, v3, v4, "Failed to download a language model: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v6, -1, -1);
    MEMORY[0x1E018CA60](v5, -1, -1);
  }
  else
  {
  }
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 368) = v8;
  *(void *)uint64_t v8 = v0;
  *(void *)(v8 + 8) = sub_1DB13869C;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v0 + 176);
  return MEMORY[0x1F4188298](sub_1DB134E2C, 0, 0);
}

Swift::Void __swiftcall LanguagesService.cancelDownloads()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v2 - 8);
  os_log_type_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1F1590();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1DB0E8BD4((uint64_t)v4, (uint64_t *)&unk_1EBA4E610);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1DB1F1580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1DB1F1510();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA904AF0;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v9;
    v13[3] = v10;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1DB138C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[22] = a4;
  uint64_t v5 = sub_1DB1EF6B0();
  v4[23] = v5;
  unsigned char v4[24] = *(void *)(v5 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904988);
  v4[26] = v6;
  v4[27] = *(void *)(v6 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904990);
  v4[29] = v7;
  v4[30] = *(void *)(v7 - 8);
  v4[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB138DC8, 0, 0);
}

uint64_t sub_1DB138DC8()
{
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  v0[32] = __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F420);
  uint64_t v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F16F0();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl(&dword_1DB0DC000, v2, v3, "Requested cancelling downloads", v4, 2u);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }

  v0[33] = sub_1DB1F1570();
  v0[34] = sub_1DB1F1560();
  uint64_t v6 = sub_1DB1F1510();
  return MEMORY[0x1F4188298](sub_1DB138F20, v6, v5);
}

uint64_t sub_1DB138F20()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  *(void *)(v0 + 28__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1DB138FE4, 0, 0);
}

uint64_t sub_1DB138FE4()
{
  uint64_t v1 = Array<A>.downloading.getter(v0[35]);
  swift_bridgeObjectRelease();
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[24];
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1DB12E8F0(0, v2, 0);
    int v24 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    os_log_type_t v4 = (uint64_t *)(v1 + 72);
    do
    {
      int64_t v27 = v2;
      uint64_t v5 = v0[25];
      uint64_t v25 = v0[23];
      uint64_t v6 = *v4;
      uint64_t v26 = *(v4 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1DB1EF580();
      v0[4] = sub_1DB1EF590();
      v0[5] = v7;
      v0[6] = 45;
      v0[7] = 0xE100000000000000;
      v0[8] = 95;
      v0[9] = 0xE100000000000000;
      sub_1DB0F0708();
      uint64_t v8 = sub_1DB1F1950();
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      (*v24)(v5, v25);
      v0[10] = v8;
      v0[11] = v10;
      v0[12] = 45;
      v0[13] = 0xE100000000000000;
      v0[2] = 95;
      v0[3] = 0xE100000000000000;
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1DB1F1950();
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v14 = v28;
      }
      unint64_t v16 = *(void *)(v14 + 16);
      unint64_t v15 = *(void *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1DB12E8F0(v15 > 1, v16 + 1, 1);
        uint64_t v14 = v28;
      }
      *(void *)(v14 + 16) = v16 + 1;
      uint64_t v17 = v14 + 48 * v16;
      *(void *)(v17 + 32) = v11;
      *(void *)(v17 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v13;
      *(void *)(v17 + 48) = 1;
      *(unsigned char *)(v17 + 56) = 1;
      *(void *)(v17 + 64) = v26;
      *(void *)(v17 + 72) = v6;
      v4 += 6;
      --v2;
    }
    while (v27 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  v0[36] = v14;
  uint64_t v19 = v0[27];
  uint64_t v18 = v0[28];
  uint64_t v20 = v0[26];
  static LanguagesInstallService.remove(_:)(v14, v18);
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  unint64_t v21 = (void *)swift_task_alloc();
  v0[37] = v21;
  *unint64_t v21 = v0;
  v21[1] = sub_1DB139360;
  uint64_t v22 = v0[29];
  return MEMORY[0x1F4187ED8](v0 + 15, 0, 0, v22, v0 + 16);
}

uint64_t sub_1DB139360()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    int64_t v2 = sub_1DB139EF4;
  }
  else {
    int64_t v2 = sub_1DB139474;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB139474()
{
  uint64_t v1 = v0[15];
  v0[39] = v1;
  if (v1)
  {
    v0[40] = sub_1DB1F1560();
    uint64_t v3 = sub_1DB1F1510();
    return MEMORY[0x1F4188298](sub_1DB139580, v3, v2);
  }
  else
  {
    (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1DB139580()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  *(void *)(v0 + 328) = *(void *)(v0 + 144);
  return MEMORY[0x1F4188298](sub_1DB139644, 0, 0);
}

uint64_t sub_1DB139644()
{
  uint64_t v1 = v0[39];
  uint64_t v44 = *(void *)(v1 + 16);
  if (!v44)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v36 = (void *)swift_task_alloc();
    v0[37] = v36;
    *unint64_t v36 = v0;
    v36[1] = sub_1DB139360;
    uint64_t v4 = v0[29];
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 15);
    uint64_t v19 = 0;
    uint64_t v3 = 0;
    uint64_t v5 = v0 + 16;
    return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
  }
  uint64_t v40 = v0 + 19;
  uint64_t v43 = v1 + 32;
  uint64_t v2 = (void *)v0[41];
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  char v41 = 0;
  uint64_t v42 = v0;
  do
  {
    uint64_t v9 = (double *)(v43 + 48 * v6);
    double v10 = *v9;
    uint64_t v11 = *((void *)v9 + 1);
    double v12 = v9[2];
    int v13 = *((unsigned __int8 *)v9 + 24);
    uint64_t v14 = *((void *)v9 + 5);
    uint64_t v45 = *((void *)v9 + 4);
    unint64_t v15 = v2[2];
    if (!v15)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_1DB188720(0, v15 + 1, 1, v2);
      }
      unint64_t v22 = v2[2];
      unint64_t v21 = v2[3];
      if (v22 >= v21 >> 1) {
        uint64_t v2 = sub_1DB188720((void *)(v21 > 1), v22 + 1, 1, v2);
      }
      v2[2] = v22 + 1;
      uint64_t v7 = (double *)&v2[6 * v22];
      v7[4] = v10;
      *((void *)v7 + 5) = v11;
      v7[6] = v12;
      *((unsigned char *)v7 + 56) = v13;
      *((void *)v7 + 8) = v45;
      *((void *)v7 + 9) = v14;
      char v8 = 2;
LABEL_4:
      char v41 = v8;
      goto LABEL_5;
    }
    unint64_t v16 = 0;
    uint64_t v17 = 7;
    while (1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = v2[v17 - 3];
      uint64_t v19 = v2[v17 - 2];
      if (isUniquelyReferenced_nonNull_native == *(void *)&v10 && v19 == v11) {
        break;
      }
      uint64_t isUniquelyReferenced_nonNull_native = sub_1DB1F1DB0();
      if (isUniquelyReferenced_nonNull_native) {
        break;
      }
      ++v16;
      v17 += 6;
      if (v15 == v16) {
        goto LABEL_14;
      }
    }
    if (v16 >= v15)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
    }
    double v23 = *(double *)&v2[v17 - 1];
    if (LOBYTE(v2[v17]) == 1)
    {
      if (v23 == 0.0)
      {
        if (v12 == 0.0) {
          char v30 = v13;
        }
        else {
          char v30 = 0;
        }
        if ((v30 & 1) == 0) {
          goto LABEL_47;
        }
      }
      else
      {
        if (v12 == 0.0) {
          int v24 = 0;
        }
        else {
          int v24 = v13;
        }
        if (v24 != 1) {
          goto LABEL_47;
        }
      }
    }
    else
    {
      double v25 = *(double *)&v2[v17 - 1];
      if (v23 == v12) {
        char v26 = v13;
      }
      else {
        char v26 = 1;
      }
      if (v26)
      {
        if (v13) {
          goto LABEL_47;
        }
        double v27 = v25 * 100.0;
        if (v25 * 100.0 <= -9.22337204e18) {
          goto LABEL_68;
        }
        if (v27 >= 9.22337204e18) {
          goto LABEL_69;
        }
        double v28 = v12 * 100.0;
        if ((~COERCE__INT64(v12 * 100.0) & 0x7FF0000000000000) == 0
          || (*(void *)&v27 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_70;
        }
        if (v28 <= -9.22337204e18) {
          goto LABEL_71;
        }
        if (v28 >= 9.22337204e18) {
          goto LABEL_72;
        }
        if (*(uint64_t *)&v27 != *(uint64_t *)&v28 && v25 < v12)
        {
LABEL_47:
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DB188FAC(v2);
            uint64_t v2 = (void *)isUniquelyReferenced_nonNull_native;
          }
          if (v16 >= v2[2]) {
            goto LABEL_67;
          }
          char v31 = (double *)&v2[v17];
          *(v31 - 1) = v12;
          *(unsigned char *)char v31 = v13;
          char v8 = v41;
          if ((v41 & 0xFE) == 0) {
            char v8 = 1;
          }
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    uint64_t v0 = v42;
    v42[42] = v2;
    ++v6;
  }
  while (v6 != v44);
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_55;
  }
  if (v41 == 1)
  {
    swift_bridgeObjectRetain();
    v42[43] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v33;
    uint64_t v35 = sub_1DB139B0C;
    goto LABEL_63;
  }
  uint64_t v37 = v42[38];
  v42[19] = v2;
  swift_bridgeObjectRetain_n();
  sub_1DB13DA40(v40);
  if (v37)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v42[44] = v42[19];
    v42[45] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v39;
    uint64_t v35 = sub_1DB139BCC;
LABEL_63:
    return MEMORY[0x1F4188298](v35, v32, v34);
  }
}

uint64_t sub_1DB139B0C()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 168) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB13FD78, 0, 0);
}

uint64_t sub_1DB139BCC()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB139C8C, 0, 0);
}

uint64_t sub_1DB139C8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB139360;
  uint64_t v2 = *(void *)(v0 + 232);
  return MEMORY[0x1F4187ED8](v0 + 120, 0, 0, v2, v0 + 128);
}

uint64_t sub_1DB139D5C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1DB139E74, 0, 0);
}

uint64_t sub_1DB139E74()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB139EF4()
{
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  uint64_t v1 = (void *)v0[16];
  v0[47] = v1;
  id v2 = v1;
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F1710();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = sub_1DB1EF410();
    v0[17] = v7;
    sub_1DB1F1910();
    *uint64_t v6 = v7;

    _os_log_impl(&dword_1DB0DC000, v3, v4, "Failed to cancel downloads: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v6, -1, -1);
    MEMORY[0x1E018CA60](v5, -1, -1);
  }
  else
  {
  }
  char v8 = (void *)swift_task_alloc();
  v0[46] = v8;
  *char v8 = v0;
  v8[1] = sub_1DB139D5C;
  uint64_t v9 = v0[22];
  v8[4] = v0[36];
  v8[5] = v9;
  return MEMORY[0x1F4188298](sub_1DB134E2C, 0, 0);
}

uint64_t sub_1DB13A0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  uint64_t v6 = sub_1DB1EF6B0();
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904988);
  v5[28] = v7;
  v5[29] = *(void *)(v7 - 8);
  v5[30] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904990);
  v5[31] = v8;
  v5[32] = *(void *)(v8 - 8);
  v5[33] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB13A25C, 0, 0);
}

uint64_t sub_1DB13A25C()
{
  uint64_t v39 = v0;
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 23;
  uint64_t v2 = sub_1DB1EF810();
  v0[34] = __swift_project_value_buffer(v2, (uint64_t)qword_1EBA4F420);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F1730();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[23];
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v38 = v36;
    *(_DWORD *)uint64_t v7 = 134349314;
    v0[21] = *(void *)(v6 + 16);
    sub_1DB1F1910();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = MEMORY[0x1E018B4B0](v8, &type metadata for LanguageModel);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[22] = sub_1DB11F638(v9, v11, &v38);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DB0DC000, v3, v4, "Requested delete of %{public}ld languages: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v36, -1, -1);
    MEMORY[0x1E018CA60](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = *v1;
  int64_t v13 = *(void *)(*v1 + 16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v13)
  {
    uint64_t v15 = v0[26];
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1DB12E8F0(0, v13, 0);
    uint64_t v33 = (void (**)(uint64_t, uint64_t))(v15 + 8);
    unint64_t v16 = (void *)(v12 + 72);
    do
    {
      uint64_t v18 = *(v16 - 5);
      uint64_t v17 = *(v16 - 4);
      uint64_t v19 = *v16;
      uint64_t v35 = *(v16 - 1);
      int64_t v37 = v13;
      if (*((unsigned char *)v16 - 16) == 1 && *(v16 - 3))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v20 = v0[27];
        uint64_t v34 = v0[25];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1DB1EF580();
        v0[2] = sub_1DB1EF590();
        v0[3] = v21;
        v0[12] = 45;
        v0[13] = 0xE100000000000000;
        v0[10] = 95;
        v0[11] = 0xE100000000000000;
        sub_1DB0F0708();
        uint64_t v22 = sub_1DB1F1950();
        uint64_t v24 = v23;
        swift_bridgeObjectRelease();
        (*v33)(v20, v34);
        v0[8] = v22;
        v0[9] = v24;
        v0[6] = 45;
        v0[7] = 0xE100000000000000;
        v0[4] = 95;
        v0[5] = 0xE100000000000000;
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1DB1F1950();
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v26;
      }
      uint64_t v14 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v38;
      }
      unint64_t v28 = *(void *)(v14 + 16);
      unint64_t v27 = *(void *)(v14 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1DB12E8F0(v27 > 1, v28 + 1, 1);
        uint64_t v14 = v38;
      }
      *(void *)(v14 + 16) = v28 + 1;
      uint64_t v29 = v14 + 48 * v28;
      *(void *)(v29 + 32) = v18;
      *(void *)(v29 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
      *(void *)(v29 + 48) = 1;
      *(unsigned char *)(v29 + 56) = 1;
      *(void *)(v29 + 64) = v35;
      *(void *)(v29 + 72) = v19;
      v16 += 6;
      --v13;
    }
    while (v37 != 1);
  }
  v0[35] = v14;
  char v30 = (void *)swift_task_alloc();
  v0[36] = v30;
  *char v30 = v0;
  v30[1] = sub_1DB13A740;
  uint64_t v31 = v0[24];
  v30[4] = v14;
  v30[5] = v31;
  return MEMORY[0x1F4188298](sub_1DB134E2C, 0, 0);
}

uint64_t sub_1DB13A740()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB13A83C, 0, 0);
}

uint64_t sub_1DB13A83C()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[28];
  static LanguagesInstallService.remove(_:)(v0[35], v1);
  swift_bridgeObjectRelease();
  sub_1DB1F15C0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  void *v4 = v0;
  v4[1] = sub_1DB13A954;
  uint64_t v5 = v0[31];
  return MEMORY[0x1F4187ED8](v0 + 15, 0, 0, v5, v0 + 20);
}

uint64_t sub_1DB13A954()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DB13B4CC;
  }
  else {
    uint64_t v2 = sub_1DB13AA68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB13AA68()
{
  uint64_t v1 = v0[15];
  v0[39] = v1;
  if (v1)
  {
    v0[40] = sub_1DB1F1570();
    v0[41] = sub_1DB1F1560();
    uint64_t v3 = sub_1DB1F1510();
    return MEMORY[0x1F4188298](sub_1DB13AB74, v3, v2);
  }
  else
  {
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1DB13AB74()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  *(void *)(v0 + 336) = *(void *)(v0 + 144);
  return MEMORY[0x1F4188298](sub_1DB13AC38, 0, 0);
}

uint64_t sub_1DB13AC38()
{
  uint64_t v1 = v0[39];
  uint64_t v44 = *(void *)(v1 + 16);
  if (!v44)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = (void *)swift_task_alloc();
    v0[37] = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_1DB13A954;
    uint64_t v4 = v0[31];
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 15);
    uint64_t v19 = 0;
    uint64_t v3 = 0;
    uint64_t v5 = v0 + 20;
    return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
  }
  uint64_t v40 = v0 + 17;
  uint64_t v43 = v1 + 32;
  uint64_t v2 = (void *)v0[42];
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  char v41 = 0;
  uint64_t v42 = v0;
  do
  {
    uint64_t v9 = (double *)(v43 + 48 * v6);
    double v10 = *v9;
    uint64_t v11 = *((void *)v9 + 1);
    double v12 = v9[2];
    int v13 = *((unsigned __int8 *)v9 + 24);
    uint64_t v14 = *((void *)v9 + 5);
    uint64_t v45 = *((void *)v9 + 4);
    unint64_t v15 = v2[2];
    if (!v15)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_1DB188720(0, v15 + 1, 1, v2);
      }
      unint64_t v22 = v2[2];
      unint64_t v21 = v2[3];
      if (v22 >= v21 >> 1) {
        uint64_t v2 = sub_1DB188720((void *)(v21 > 1), v22 + 1, 1, v2);
      }
      v2[2] = v22 + 1;
      uint64_t v7 = (double *)&v2[6 * v22];
      v7[4] = v10;
      *((void *)v7 + 5) = v11;
      v7[6] = v12;
      *((unsigned char *)v7 + 56) = v13;
      *((void *)v7 + 8) = v45;
      *((void *)v7 + 9) = v14;
      char v8 = 2;
LABEL_4:
      char v41 = v8;
      goto LABEL_5;
    }
    unint64_t v16 = 0;
    uint64_t v17 = 7;
    while (1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = v2[v17 - 3];
      uint64_t v19 = v2[v17 - 2];
      if (isUniquelyReferenced_nonNull_native == *(void *)&v10 && v19 == v11) {
        break;
      }
      uint64_t isUniquelyReferenced_nonNull_native = sub_1DB1F1DB0();
      if (isUniquelyReferenced_nonNull_native) {
        break;
      }
      ++v16;
      v17 += 6;
      if (v15 == v16) {
        goto LABEL_14;
      }
    }
    if (v16 >= v15)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return MEMORY[0x1F4187ED8](isUniquelyReferenced_nonNull_native, v19, v3, v4, v5);
    }
    double v23 = *(double *)&v2[v17 - 1];
    if (LOBYTE(v2[v17]) == 1)
    {
      if (v23 == 0.0)
      {
        if (v12 == 0.0) {
          char v30 = v13;
        }
        else {
          char v30 = 0;
        }
        if ((v30 & 1) == 0) {
          goto LABEL_47;
        }
      }
      else
      {
        if (v12 == 0.0) {
          int v24 = 0;
        }
        else {
          int v24 = v13;
        }
        if (v24 != 1) {
          goto LABEL_47;
        }
      }
    }
    else
    {
      double v25 = *(double *)&v2[v17 - 1];
      if (v23 == v12) {
        char v26 = v13;
      }
      else {
        char v26 = 1;
      }
      if (v26)
      {
        if (v13) {
          goto LABEL_47;
        }
        double v27 = v25 * 100.0;
        if (v25 * 100.0 <= -9.22337204e18) {
          goto LABEL_68;
        }
        if (v27 >= 9.22337204e18) {
          goto LABEL_69;
        }
        double v28 = v12 * 100.0;
        if ((~COERCE__INT64(v12 * 100.0) & 0x7FF0000000000000) == 0
          || (*(void *)&v27 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_70;
        }
        if (v28 <= -9.22337204e18) {
          goto LABEL_71;
        }
        if (v28 >= 9.22337204e18) {
          goto LABEL_72;
        }
        if (*(uint64_t *)&v27 != *(uint64_t *)&v28 && v25 < v12)
        {
LABEL_47:
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DB188FAC(v2);
            uint64_t v2 = (void *)isUniquelyReferenced_nonNull_native;
          }
          if (v16 >= v2[2]) {
            goto LABEL_67;
          }
          uint64_t v31 = (double *)&v2[v17];
          *(v31 - 1) = v12;
          *(unsigned char *)uint64_t v31 = v13;
          char v8 = v41;
          if ((v41 & 0xFE) == 0) {
            char v8 = 1;
          }
          goto LABEL_4;
        }
      }
    }
LABEL_5:
    uint64_t v0 = v42;
    v42[43] = v2;
    ++v6;
  }
  while (v6 != v44);
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_55;
  }
  if (v41 == 1)
  {
    swift_bridgeObjectRetain();
    v42[44] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v33;
    uint64_t v35 = sub_1DB13B100;
    goto LABEL_63;
  }
  uint64_t v37 = v42[38];
  v42[17] = v2;
  swift_bridgeObjectRetain_n();
  sub_1DB13DA40(v40);
  if (v37)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v42[45] = v42[17];
    v42[46] = sub_1DB1F1560();
    uint64_t v32 = sub_1DB1F1510();
    uint64_t v34 = v39;
    uint64_t v35 = sub_1DB13B1C0;
LABEL_63:
    return MEMORY[0x1F4188298](v35, v32, v34);
  }
}

uint64_t sub_1DB13B100()
{
  uint64_t v1 = *(void *)(v0 + 344);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB13FD50, 0, 0);
}

uint64_t sub_1DB13B1C0()
{
  uint64_t v1 = *(void *)(v0 + 360);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 128) = v1;
  swift_retain();
  sub_1DB1EF920();
  return MEMORY[0x1F4188298](sub_1DB13B280, 0, 0);
}

uint64_t sub_1DB13B280()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB13A954;
  uint64_t v2 = *(void *)(v0 + 248);
  return MEMORY[0x1F4187ED8](v0 + 120, 0, 0, v2, v0 + 160);
}

uint64_t sub_1DB13B350()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB13B44C, 0, 0);
}

uint64_t sub_1DB13B44C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB13B4CC()
{
  (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
  uint64_t v1 = *(void **)(v0 + 160);
  *(void *)(v0 + 384) = v1;
  id v2 = v1;
  uint64_t v3 = sub_1DB1EF7F0();
  os_log_type_t v4 = sub_1DB1F1710();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = sub_1DB1EF410();
    *(void *)(v0 + 152) = v7;
    sub_1DB1F1910();
    *uint64_t v6 = v7;

    _os_log_impl(&dword_1DB0DC000, v3, v4, "Failed to delete language: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v6, -1, -1);
    MEMORY[0x1E018CA60](v5, -1, -1);
  }
  else
  {
  }
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 376) = v8;
  *(void *)uint64_t v8 = v0;
  *(void *)(v8 + 8) = sub_1DB13B350;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v0 + 184);
  return MEMORY[0x1F4188298](sub_1DB134E2C, 0, 0);
}

uint64_t sub_1DB13B6C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1EF8B0();
  *a1 = result;
  return result;
}

uint64_t LanguagesServiceBridge.models.getter()
{
  return sub_1DB13B7B8();
}

uint64_t sub_1DB13B7B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t LanguagesServiceBridge.models.setter(uint64_t a1)
{
  return sub_1DB13B88C(a1, &OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_models);
}

uint64_t sub_1DB13B88C(uint64_t a1, void *a2)
{
  os_log_type_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_bridgeObjectRelease();
}

void sub_1DB13B8DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_models);
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D958);
  uint64_t v4 = sub_1DB1F14A0();

  *a2 = v4;
}

void sub_1DB13B950(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D958);
  id v3 = (id)sub_1DB1F1480();
  objc_msgSend(v2, sel_setModels_, v3);
}

uint64_t static LanguagesServiceBridge.modelsKeyPath.getter()
{
  return 0x736C65646F6DLL;
}

id LanguagesServiceBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id LanguagesServiceBridge.init()()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_service;
  unsigned __int8 v10 = 0;
  type metadata accessor for LanguagesService();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v1;
  LanguagesService.init(task:)(&v10);
  *(void *)&v1[v3] = v4;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)&v5[OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_subscriptions] = MEMORY[0x1E4FBC860];
  *(void *)&v5[OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_models] = v6;

  v9.receiver = v5;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1DB13BB18();
  sub_1DB13BEE0();

  return v7;
}

uint64_t sub_1DB13BB18()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D928);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904B80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unsigned __int8 v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D7E0);
  sub_1DB1EF8E0();
  swift_endAccess();
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D940);
  id v14 = (id)sub_1DB1F1790();
  uint64_t v11 = sub_1DB1F1770();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_1DB0E3C44(&qword_1EA904B88, &qword_1EA904A80);
  sub_1DB13ED60();
  sub_1DB1EF970();
  sub_1DB0E8BD4((uint64_t)v2, &qword_1EBA4D928);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DB0E3C44(&qword_1EA904B90, &qword_1EA904B80);
  sub_1DB1EF9A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8C8);
  sub_1DB0E3C44((unint64_t *)&unk_1EBA4D8D0, &qword_1EBA4D8C8);
  sub_1DB1EF8A0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1DB13BEE0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DB1F1590();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1DB0E8BD4((uint64_t)v3, (uint64_t *)&unk_1EBA4E610);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1DB1F1580();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1DB1F1510();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA904B70;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1DB13C144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_1DB1EF6B0();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  id v8 = (uint64_t (__cdecl *)())((char *)&dword_1EA904C18 + dword_1EA904C18);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[6] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DB13C244;
  return v8();
}

uint64_t sub_1DB13C244(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB13C344, 0, 0);
}

uint64_t sub_1DB13C344()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(v1 + 72);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = *(v4 - 3);
      int v10 = *((unsigned __int8 *)v4 - 16);
      if (v10 != 1 || v9 != 0)
      {
        uint64_t v12 = *(v4 - 4);
        uint64_t v13 = *v4;
        uint64_t v25 = *(v4 - 5);
        uint64_t v26 = *(v4 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DB12E8F0(0, *(void *)(v5 + 16) + 1, 1);
        }
        unint64_t v7 = *(void *)(v5 + 16);
        unint64_t v6 = *(void *)(v5 + 24);
        if (v7 >= v6 >> 1) {
          sub_1DB12E8F0(v6 > 1, v7 + 1, 1);
        }
        *(void *)(v5 + 16) = v7 + 1;
        uint64_t v8 = v5 + 48 * v7;
        *(void *)(v8 + 32) = v25;
        *(void *)(v8 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v12;
        *(void *)(v8 + 48) = v9;
        *(unsigned char *)(v8 + 56) = v10;
        *(void *)(v8 + 64) = v26;
        *(void *)(v8 + 72) = v13;
        uint64_t v0 = v24;
      }
      v4 += 6;
      --v2;
    }
    while (v2);
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  int64_t v14 = *(void *)(v5 + 16);
  if (v14)
  {
    uint64_t v15 = v0[4];
    sub_1DB12E97C(0, v14, 0);
    v16._rawValue = v3;
    uint64_t v17 = v5 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DB1EF580();
      unint64_t v19 = v3[2];
      unint64_t v18 = v3[3];
      if (v19 >= v18 >> 1) {
        sub_1DB12E97C(v18 > 1, v19 + 1, 1);
      }
      uint64_t v20 = v0[5];
      uint64_t v21 = v0[3];
      v3[2] = v19 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))((unint64_t)v3+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v19, v20, v21);
      v17 += 48;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    v16._rawValue = (void *)MEMORY[0x1E4FBC860];
  }
  LanguagesServiceBridge.download(locales:)(v16);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

Swift::Void __swiftcall LanguagesServiceBridge.download(locales:)(Swift::OpaquePointer locales)
{
  uint64_t v63 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v59 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v58 = (char *)&v52 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v52 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v52 - v11;
  MEMORY[0x1F4188790](v13);
  Class v64 = (char *)&v52 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = *((void *)locales._rawValue + 2);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (v18)
  {
    uint64_t v57 = v9;
    unint64_t v52 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v53 = v1;
    uint64_t v72 = MEMORY[0x1E4FBC860];
    sub_1DB12E8F0(0, v18, 0);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v20 = v3 + 16;
    unint64_t v22 = (char *)locales._rawValue
        + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v55 = *(void *)(v20 + 56);
    uint64_t v56 = v21;
    double v23 = (void (**)(uint64_t, uint64_t))(v20 - 8);
    uint64_t v62 = v20;
    uint64_t v54 = v12;
    do
    {
      double v60 = v22;
      int64_t v61 = v18;
      uint64_t v25 = v63;
      int v24 = v64;
      uint64_t v26 = v22;
      uint64_t v27 = v56;
      v56(v64, v26, v63);
      v27(v12, v24, v25);
      uint64_t v70 = sub_1DB1EF590();
      uint64_t v71 = v28;
      uint64_t v68 = 45;
      unint64_t v69 = 0xE100000000000000;
      uint64_t v66 = 95;
      unint64_t v67 = 0xE100000000000000;
      sub_1DB0F0708();
      uint64_t v29 = sub_1DB1F1950();
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v70 = v29;
      uint64_t v71 = v31;
      uint64_t v68 = 45;
      unint64_t v69 = 0xE100000000000000;
      uint64_t v66 = 95;
      unint64_t v67 = 0xE100000000000000;
      uint64_t v32 = sub_1DB1F1950();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v35 = v57;
      sub_1DB1EF580();
      uint64_t v36 = (uint64_t)v58;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v65 = Locale.sqDisplayName(context:in:)(0, v36);
      uint64_t v38 = v37;
      uint64_t v39 = *v23;
      (*v23)(v36, v25);
      uint64_t v40 = v59;
      v27(v59, v35, v25);
      if (v38)
      {
        v39((uint64_t)v40, v25);
        v39((uint64_t)v35, v25);
      }
      else
      {
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        uint64_t v41 = Locale.sqDisplaySubname(context:in:)(0, v36);
        uint64_t v38 = v42;
        v39(v36, v25);
        v39((uint64_t)v40, v25);
        v39((uint64_t)v35, v25);
        if (v38)
        {
          uint64_t v65 = v41;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v65 = v32;
          uint64_t v38 = v34;
        }
      }
      uint64_t v12 = v54;
      uint64_t v43 = v60;
      swift_bridgeObjectRelease();
      uint64_t v44 = v63;
      v39((uint64_t)v12, v63);
      v39((uint64_t)v64, v44);
      uint64_t v19 = v72;
      uint64_t v45 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v72;
      }
      unint64_t v47 = *(void *)(v19 + 16);
      unint64_t v46 = *(void *)(v19 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1DB12E8F0(v46 > 1, v47 + 1, 1);
        uint64_t v19 = v72;
      }
      *(void *)(v19 + 16) = v47 + 1;
      uint64_t v48 = v19 + 48 * v47;
      *(void *)(v48 + 32) = v45;
      *(void *)(v48 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v34;
      *(void *)(v48 + 48) = 1;
      *(unsigned char *)(v48 + 56) = 1;
      *(void *)(v48 + 64) = v65;
      *(void *)(v48 + 72) = v38;
      unint64_t v22 = &v43[v55];
      int64_t v18 = v61 - 1;
    }
    while (v61 != 1);
    uint64_t v17 = v52;
    uint64_t v1 = v53;
  }
  uint64_t v49 = *(void *)(v1 + OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_service);
  uint64_t v50 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v17, 1, 1, v50);
  id v51 = (void *)swift_allocObject();
  v51[2] = 0;
  v51[3] = 0;
  unsigned char v51[4] = v19;
  v51[5] = v49;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB131F20((uint64_t)v17, (uint64_t)&unk_1EA904B20, (uint64_t)v51);
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_1DB13CB78(uint64_t *a1, uint64_t a2)
{
  uint64_t v25 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  swift_beginAccess();
  uint64_t v8 = (void *)MEMORY[0x1E018CB30](a2 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(v7 + 16);
    if (v9)
    {
      id v23 = v8;
      uint64_t v26 = MEMORY[0x1E4FBC860];
      sub_1DB1F1B40();
      int v24 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v10 = v7 + 40;
      do
      {
        double v15 = *(double *)(v10 + 8);
        int v16 = *(unsigned __int8 *)(v10 + 16);
        uint64_t v17 = self;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        int64_t v18 = (void *)sub_1DB1F1260();
        if (v16 == 1)
        {
          if (v15 == 0.0) {
            id v19 = objc_msgSend(v17, sel_discreteProgressWithIdentifier_offlineState_, v18, 2);
          }
          else {
            id v19 = objc_msgSend(v17, sel_discreteProgressWithIdentifier_offlineState_, v18, 0);
          }
          id v11 = v19;
        }
        else
        {
          id v11 = objc_msgSend(v17, sel_discreteProgressWithIdentifier_offlineState_, v18, 1);

          if (v15 > 0.001) {
            double v12 = v15;
          }
          else {
            double v12 = 0.001;
          }
          objc_msgSend(v11, sel_updatePercentComplete_, v12);
        }
        swift_bridgeObjectRetain();
        sub_1DB1EF580();
        id v13 = objc_allocWithZone(MEMORY[0x1E4F42380]);
        uint64_t v14 = (void *)sub_1DB1EF5D0();
        objc_msgSend(v13, sel_initWithLocale_progress_, v14, v11);

        (*v24)(v6, v25);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1DB1F1B20();
        sub_1DB1F1B50();
        sub_1DB1F1B60();
        sub_1DB1F1B30();
        v10 += 48;
        --v9;
      }
      while (v9);
      sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D958);
      uint64_t v20 = sub_1DB1F1480();
      swift_release();
      id v21 = v23;
      objc_msgSend(v23, sel_setModels_, v20);

      uint64_t v8 = (void *)v20;
    }
  }
}

void *LanguagesServiceBridge.model(locale:)(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_models);
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D958);
  unint64_t v4 = sub_1DB1F14A0();

  v7[2] = a1;
  uint64_t v5 = sub_1DB131DF8(sub_1DB13F2F0, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DB13CF38(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_ltIdentifier);
  uint64_t v2 = sub_1DB1F1290();
  uint64_t v4 = v3;

  sub_1DB1EF590();
  sub_1DB0F0708();
  char v5 = 1;
  uint64_t v6 = sub_1DB1F1950();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v2 != v6 || v4 != v8) {
    char v5 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t LanguagesServiceBridge.delete(locale:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v46 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v39 - v7;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v39 - v10;
  __n128 v13 = MEMORY[0x1F4188790](v12);
  double v15 = (char *)&v39 - v14;
  uint64_t v42 = *(void (**)(char *, uint64_t, __n128))(v4 + 16);
  v42((char *)&v39 - v14, a1, v13);
  uint64_t v44 = v15;
  uint64_t v51 = sub_1DB1EF590();
  uint64_t v52 = v16;
  uint64_t v49 = 45;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 95;
  unint64_t v48 = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v17 = sub_1DB1F1950();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v51 = v17;
  uint64_t v52 = v19;
  uint64_t v49 = 45;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 95;
  unint64_t v48 = 0xE100000000000000;
  uint64_t v20 = v40;
  uint64_t v21 = sub_1DB1F1950();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v43 = v21;
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v39 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v8);
  uint64_t v25 = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v27 = (uint64_t)v8;
  uint64_t v28 = v8;
  uint64_t v29 = v41;
  v26(v28, v41);
  ((void (*)(char *, char *, uint64_t))v42)(v20, v11, v29);
  if (v25)
  {
    v26(v20, v29);
    v26(v11, v29);
    uint64_t v30 = v43;
    uint64_t v31 = v39;
  }
  else
  {
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v31 = Locale.sqDisplaySubname(context:in:)(0, v27);
    uint64_t v25 = v32;
    v26((char *)v27, v29);
    v26(v20, v29);
    v26(v11, v29);
    if (v25)
    {
      uint64_t v30 = v43;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = v43;
      uint64_t v31 = v43;
      uint64_t v25 = v23;
    }
  }
  swift_bridgeObjectRelease();
  v26(v44, v29);
  uint64_t v33 = *(void *)(v45 + OBJC_IVAR____TtC13TranslationUI22LanguagesServiceBridge_service);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4D968);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1DB1F4170;
  *(void *)(v34 + 32) = v30;
  *(void *)(v34 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v23;
  *(void *)(v34 + 48) = 1;
  *(unsigned char *)(v34 + 56) = 1;
  *(void *)(v34 + 64) = v31;
  *(void *)(v34 + 72) = v25;
  uint64_t v35 = sub_1DB1F1590();
  uint64_t v36 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v46, 1, 1, v35);
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = 0;
  void v37[3] = 0;
  v37[4] = v34;
  v37[5] = v33;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DB131F20(v36, (uint64_t)&unk_1EA904B28, (uint64_t)v37);
  swift_bridgeObjectRelease();
  return swift_release();
}

id LanguagesServiceBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DB13D86C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DB13D948;
  return v6(a1);
}

uint64_t sub_1DB13D948()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1DB13DA40(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DB160B98(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DB13DAAC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DB13DAAC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DB1F1D70();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      return sub_1DB13E248(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  uint64_t v104 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v103 = MEMORY[0x1E4FBC860];
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v94) {
            goto LABEL_139;
          }
          uint64_t v96 = *(void *)&v8[16 * v95 + 32];
          uint64_t v97 = *(void *)&v8[16 * v11 + 24];
          sub_1DB13E374((char *)(v94 + 48 * v96), (char *)(v94 + 48 * *(void *)&v8[16 * v11 + 16]), v94 + 48 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1DB160B84((uint64_t)v8);
          }
          if (v95 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          uint64_t v98 = &v8[16 * v95 + 32];
          *(void *)uint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v8 + 2);
          if (v11 > v99) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v99 - v11));
          *((void *)v8 + 2) = v99 - 1;
          unint64_t v11 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DB1F14E0();
    *(void *)(v7 + 16) = v6;
    uint64_t v103 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v102 = *a1 + 136;
  uint64_t v100 = *a1 + 40;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v105 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    uint64_t v106 = v12;
    if (v9 < v3)
    {
      sub_1DB0F0708();
      uint64_t v13 = sub_1DB1F1960();
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v14 = v102 + 48 * v12;
        while ((v13 == -1) != (sub_1DB1F1960() != -1))
        {
          v14 += 48;
          ++v9;
          uint64_t v3 = v105;
          if (v105 == v9)
          {
            uint64_t v9 = v105;
            goto LABEL_22;
          }
        }
        uint64_t v3 = v105;
      }
LABEL_22:
      if (v13 == -1)
      {
        if (v9 < v12) {
          goto LABEL_135;
        }
        if (v12 < v9)
        {
          uint64_t v15 = 48 * v9;
          uint64_t v16 = 48 * v12;
          uint64_t v17 = v9;
          uint64_t v18 = v12;
          do
          {
            if (v18 != --v17)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v19 = (_OWORD *)(v10 + v16);
              long long v20 = *(_OWORD *)(v10 + v16);
              uint64_t v21 = v10 + v15;
              uint64_t v22 = *(void *)(v10 + v16 + 16);
              char v23 = *(unsigned char *)(v10 + v16 + 24);
              uint64_t v24 = *(void *)(v10 + v16 + 32);
              uint64_t v25 = *(void *)(v10 + v16 + 40);
              long long v27 = *(_OWORD *)(v10 + v15 - 32);
              long long v26 = *(_OWORD *)(v10 + v15 - 16);
              *uint64_t v19 = *(_OWORD *)(v10 + v15 - 48);
              v19[1] = v27;
              v19[2] = v26;
              *(_OWORD *)(v21 - 48) = v20;
              *(void *)(v21 - 32) = v22;
              *(unsigned char *)(v21 - 24) = v23;
              *(void *)(v21 - 16) = v24;
              *(void *)(v21 - 8) = v25;
            }
            ++v18;
            v15 -= 48;
            v16 += 48;
          }
          while (v18 < v17);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v104) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1DB160878(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v41 = *((void *)v8 + 2);
    unint64_t v40 = *((void *)v8 + 3);
    unint64_t v11 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v8 = sub_1DB160878((char *)(v40 > 1), v41 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    uint64_t v42 = v8 + 32;
    uint64_t v43 = &v8[16 * v41 + 32];
    *(void *)uint64_t v43 = v12;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v49 = &v42[16 * v11];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_115;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_116;
          }
          unint64_t v56 = v11 - 2;
          uint64_t v57 = &v42[16 * v11 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_118;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_121;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_125;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v73 = *((void *)v8 + 4);
            uint64_t v74 = *((void *)v8 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_80;
          }
          uint64_t v46 = *((void *)v8 + 4);
          uint64_t v45 = *((void *)v8 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_117;
        }
        unint64_t v56 = v11 - 2;
        uint64_t v62 = &v42[16 * v11 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_120;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_123;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_124;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_86:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v67) {
          goto LABEL_119;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_122;
        }
        if (v78 < v66) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10) {
          goto LABEL_137;
        }
        uint64_t v84 = v8;
        uint64_t v85 = v10;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v42;
        unint64_t v89 = v44;
        unint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v85;
        sub_1DB13E374((char *)(v85 + 48 * *(void *)v86), (char *)(v85 + 48 * *(void *)v90), v85 + 48 * v91, __dst);
        if (v1) {
          goto LABEL_109;
        }
        if (v91 < v87) {
          goto LABEL_112;
        }
        if (v89 > *((void *)v84 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v84 + 2);
        if (v89 >= v93) {
          goto LABEL_114;
        }
        uint64_t v8 = v84;
        unint64_t v11 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v84 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v105;
    if (v9 >= v105) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v104)) {
    goto LABEL_133;
  }
  if (v12 + v104 >= v3) {
    uint64_t v28 = v3;
  }
  else {
    uint64_t v28 = v12 + v104;
  }
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      sub_1DB0F0708();
      uint64_t v29 = v100 + 48 * v9;
      do
      {
        uint64_t v30 = v29;
        do
        {
          if (sub_1DB1F1960() != -1) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          uint64_t v31 = (_OWORD *)(v30 - 40);
          uint64_t v32 = (_OWORD *)(v30 - 88);
          long long v34 = *(_OWORD *)(v30 - 72);
          long long v33 = *(_OWORD *)(v30 - 56);
          *(void *)(v30 - 48) = *(void *)v30;
          v30 -= 48;
          uint64_t v35 = *(void *)(v30 + 8);
          uint64_t v36 = *(void *)(v30 + 16);
          uint64_t v37 = *(void *)(v30 + 24);
          char v38 = *(unsigned char *)(v30 + 32);
          uint64_t v39 = *(void *)(v30 + 40);
          _OWORD *v31 = *v32;
          v31[1] = v34;
          v31[2] = v33;
          *(void *)(v30 - 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v35;
          *(void *)(v30 - 32) = v36;
          *(void *)(v30 - 24) = v37;
          *(unsigned char *)(v30 - 16) = v38;
          *(void *)(v30 - 8) = v39;
          ++v12;
        }
        while (v9 != v12);
        ++v9;
        v29 += 48;
        uint64_t v12 = v106;
      }
      while (v9 != v28);
      uint64_t v9 = v28;
    }
    goto LABEL_48;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  uint64_t result = sub_1DB1F1B80();
  __break(1u);
  return result;
}

uint64_t sub_1DB13E248(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    sub_1DB0F0708();
    uint64_t v7 = v6 + 48 * v4 + 40;
LABEL_5:
    uint64_t v8 = v19;
    uint64_t v9 = v7;
    while (1)
    {
      uint64_t result = sub_1DB1F1960();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v7 += 48;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v10 = (_OWORD *)(v9 - 40);
      unint64_t v11 = (_OWORD *)(v9 - 88);
      long long v13 = *(_OWORD *)(v9 - 72);
      long long v12 = *(_OWORD *)(v9 - 56);
      *(void *)(v9 - 48) = *(void *)v9;
      v9 -= 48;
      uint64_t v14 = *(void *)(v9 + 8);
      uint64_t v15 = *(void *)(v9 + 16);
      uint64_t v16 = *(void *)(v9 + 24);
      char v17 = *(unsigned char *)(v9 + 32);
      uint64_t v18 = *(void *)(v9 + 40);
      *uint64_t v10 = *v11;
      v10[1] = v13;
      void v10[2] = v12;
      *(void *)(v9 - 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v14;
      *(void *)(v9 - 32) = v15;
      *(void *)(v9 - 24) = v16;
      *(unsigned char *)(v9 - 16) = v17;
      *(void *)(v9 - 8) = v18;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DB13E374(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v29 = __src;
  uint64_t v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      uint64_t v18 = &v4[48 * v11];
      long long v27 = v18;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        sub_1DB0F0708();
        uint64_t v19 = (char *)(a3 - 48);
        do
        {
          long long v20 = v19 + 48;
          if (sub_1DB1F1960() == -1)
          {
            char v23 = v6 - 48;
            if (v20 != v6 || v19 >= v6)
            {
              long long v24 = *(_OWORD *)v23;
              long long v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v19 + 2) = v25;
              *(_OWORD *)uint64_t v19 = v24;
            }
            uint64_t v29 = v6 - 48;
            if (v23 <= v7) {
              break;
            }
          }
          else
          {
            long long v27 = v18 - 48;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
            {
              long long v21 = *((_OWORD *)v18 - 3);
              long long v22 = *((_OWORD *)v18 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 2) = v22;
              *(_OWORD *)uint64_t v19 = v21;
            }
            char v23 = v6;
            v18 -= 48;
            if (v6 <= v7) {
              break;
            }
          }
          v19 -= 48;
          uint64_t v6 = v23;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1DB160974((void **)&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    long long v12 = &v4[48 * v9];
    long long v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      sub_1DB0F0708();
      long long v13 = v4;
      while (1)
      {
        if (sub_1DB1F1960() == -1)
        {
          uint64_t v15 = v6 + 48;
          uint64_t v14 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v4 = v13 + 48;
          uint64_t v14 = v13;
          uint64_t v15 = v6;
          if (v7 == v13)
          {
            v13 += 48;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 48;
          }
        }
        long long v16 = *(_OWORD *)v14;
        long long v17 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v7 + 2) = v17;
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 48;
        if (v13 < v12)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v28 = v4;
        uint64_t v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB13E69C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_1DB13E77C;
  return v5(v2 + 32);
}

uint64_t sub_1DB13E77C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1DB13E890(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  void *v3 = v2;
  v3[1] = sub_1DB13E970;
  return v5(v2 + 16);
}

uint64_t sub_1DB13E970()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

void sub_1DB13EAA0(uint64_t a1, void *a2)
{
  id v40 = a2;
  uint64_t v39 = sub_1DB1EF6B0();
  MEMORY[0x1F4188790](v39);
  char v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v37 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v7 = a1 + 40;
    unint64_t v31 = v5 - 1;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v32 = v7;
    unint64_t v36 = v5;
    do
    {
      uint64_t v33 = v8;
      if (v6 <= v5) {
        unint64_t v9 = v5;
      }
      else {
        unint64_t v9 = v6;
      }
      unint64_t v41 = v9;
      for (uint64_t i = (uint64_t *)(v7 + 48 * v6); ; i += 6)
      {
        if (v41 == v6)
        {
          __break(1u);
          return;
        }
        uint64_t v12 = *(i - 1);
        uint64_t v11 = *i;
        uint64_t v35 = i[1];
        int v34 = *((unsigned __int8 *)i + 16);
        unint64_t v13 = v6 + 1;
        unint64_t v14 = i[3];
        uint64_t v15 = i[4];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        long long v16 = v38;
        sub_1DB1EF580();
        long long v17 = (void *)sub_1DB1EF5D0();
        (*v37)(v16, v39);
        LOBYTE(v16) = objc_msgSend(v40, sel_locale_supportsModality_, v17, 1);

        if ((v16 & 1) == 0) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v6;
        if (v36 == v13) {
          return;
        }
      }
      unint64_t v41 = v14;
      uint64_t v18 = v15;
      unint64_t v30 = v6;
      char v19 = v34;
      uint64_t v20 = v35;
      uint64_t v8 = v33;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v42;
      }
      uint64_t v22 = v20;
      char v23 = v19;
      uint64_t v24 = v12;
      unint64_t v25 = v41;
      unint64_t v27 = *(void *)(v8 + 16);
      unint64_t v26 = *(void *)(v8 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1DB12E8F0(v26 > 1, v27 + 1, 1);
        unint64_t v25 = v41;
        uint64_t v24 = v12;
        char v23 = v19;
        uint64_t v22 = v20;
        uint64_t v8 = v42;
      }
      *(void *)(v8 + 16) = v27 + 1;
      uint64_t v28 = v8 + 48 * v27;
      *(void *)(v28 + 32) = v24;
      *(void *)(v28 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v11;
      *(void *)(v28 + 48) = v22;
      *(unsigned char *)(v28 + 56) = v23;
      *(void *)(v28 + 64) = v25;
      *(void *)(v28 + 72) = v18;
      unint64_t v5 = v36;
      uint64_t v7 = v32;
      ++v6;
    }
    while (v31 != v30);
  }
}

unint64_t sub_1DB13ED60()
{
  unint64_t result = qword_1EBA4D930;
  if (!qword_1EBA4D930)
  {
    sub_1DB0E2EFC(255, (unint64_t *)&qword_1EBA4D940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D930);
  }
  return result;
}

uint64_t sub_1DB13EDC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DB13EE00()
{
  return sub_1DB13403C();
}

uint64_t sub_1DB13EE08()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB13EE50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DB103C1C;
  return sub_1DB1340C8(a1, v4, v5, v7, v6);
}

uint64_t sub_1DB13EF14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DB103C1C;
  return sub_1DB13579C(a1, v4, v5, v6);
}

uint64_t sub_1DB13EFCC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1DB103C1C;
  v3[6] = v2;
  return MEMORY[0x1F4188298](sub_1DB136BD4, 0, 0);
}

uint64_t sub_1DB13F07C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DB103C1C;
  return sub_1DB136FA8(a1, v4, v5, v6);
}

uint64_t sub_1DB13F134(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DB1036D0;
  return sub_1DB138C48(a1, v4, v5, v6);
}

uint64_t sub_1DB13F1E8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DB103C1C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA904AF8 + dword_1EA904AF8);
  return v6(a1, v4);
}

uint64_t type metadata accessor for LanguagesService()
{
  uint64_t result = qword_1EBA4D4B8;
  if (!qword_1EBA4D4B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB13F2F0(id *a1)
{
  return sub_1DB13CF38(a1) & 1;
}

uint64_t sub_1DB13F314(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DB103C1C;
  return sub_1DB13A0DC(a1, v4, v5, v7, v6);
}

uint64_t sub_1DB13F3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB1330A4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1EBA4D7E0);
}

uint64_t sub_1DB13F3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB133114(a1, a2, a3, a4, &qword_1EA904A80, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__models, &qword_1EBA4D7E0);
}

uint64_t sub_1DB13F42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB1330A4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EA904A90);
}

uint64_t sub_1DB13F454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB133114(a1, a2, a3, a4, &qword_1EA904A98, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__localeModalities, &qword_1EA904A90);
}

uint64_t sub_1DB13F484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DB1330A4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1EBA4E248);
}

uint64_t sub_1DB13F4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB133114(a1, a2, a3, a4, &qword_1EBA4D7C8, (uint64_t)&OBJC_IVAR____TtC13TranslationUI16LanguagesService__airplaneModeEnabled, &qword_1EBA4E248);
}

char *keypath_get_selector_models()
{
  return sel_models;
}

uint64_t sub_1DB13F4F0()
{
  return type metadata accessor for LanguagesService();
}

void sub_1DB13F4F8()
{
  sub_1DB125AE4(319, &qword_1EBA4D7E8, &qword_1EBA4D8A0);
  if (v0 <= 0x3F)
  {
    sub_1DB125AE4(319, &qword_1EA904B30, &qword_1EA904AA0);
    if (v1 <= 0x3F)
    {
      sub_1DB0E4F04();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for LanguagesService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LanguagesService);
}

uint64_t dispatch thunk of LanguagesService.__allocating_init(task:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t type metadata accessor for LanguagesServiceBridge()
{
  return self;
}

uint64_t sub_1DB13F6A4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DB103C1C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA904B38 + dword_1EA904B38);
  return v6(a1, v4);
}

uint64_t sub_1DB13F75C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DB103C1C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA904B50 + dword_1EA904B50);
  return v6(a1, v4);
}

uint64_t sub_1DB13F814()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DB13F854(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DB103C1C;
  return sub_1DB13C144(a1, v4, v5, v6);
}

uint64_t sub_1DB13F908(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  for (uint64_t i = (void *)(a1 + 40); ; i += 6)
  {
    BOOL v7 = *(i - 1) == v4 && *i == v5;
    if (v7 || (sub_1DB1F1DB0() & 1) != 0) {
      break;
    }
    if (v2 == ++v3) {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1DB13F998()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DB13F9D0(uint64_t *a1)
{
  sub_1DB13CB78(a1, v1);
}

uint64_t sub_1DB13F9D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DB13FA20(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DB103C1C;
  return sub_1DB135370(a1, v4, v5, v7, v6);
}

void sub_1DB13FAE0(uint64_t a1)
{
  sub_1DB14040C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1DB13FAEC()
{
  unint64_t result = qword_1EA904BC0;
  if (!qword_1EA904BC0)
  {
    sub_1DB1F1810();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904BC0);
  }
  return result;
}

uint64_t sub_1DB13FB48(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DB1036D0;
  return sub_1DB13579C(a1, v4, v5, v6);
}

uint64_t sub_1DB13FC00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_29Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB13FC7C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DB103C1C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA904BF8 + dword_1EA904BF8);
  return v6(a1, v4);
}

uint64_t sub_1DB13FD34(id *a1)
{
  return sub_1DB13F2F0(a1) & 1;
}

uint64_t static LanguagesStatusService.refresh(task:useCellular:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904958);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DB1EF810();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBA4F420);
  uint64_t v5 = sub_1DB1EF7F0();
  os_log_type_t v6 = sub_1DB1F1700();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1DB0DC000, v5, v6, "Requested refresh of language asset query", v7, 2u);
    MEMORY[0x1E018CA60](v7, -1, -1);
  }

  MEMORY[0x1F4188790](v8);
  *(&v11 - 2) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBD120], v0);
  return sub_1DB1F1650();
}

uint64_t static LanguagesStatusService.selected()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA904C18 + dword_1EA904C18);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB14832C;
  return v3();
}

uint64_t static LanguagesStatusService.autoDetectSpeechUnsupportedPairs()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D910);
  void *v1 = v0;
  v1[1] = sub_1DB14010C;
  return MEMORY[0x1F41880D8](v0 + 16, 0, 0, 0xD000000000000022, 0x80000001DB1FC890, sub_1DB1429DC, 0, v2);
}

uint64_t sub_1DB14010C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB148348, 0, 0);
}

uint64_t static LanguagesStatusService.localeModalities()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = sub_1DB0E2EFC(0, &qword_1EA904BA0);
  void *v1 = v0;
  v1[1] = sub_1DB1402F8;
  return MEMORY[0x1F41880D8](v0 + 16, 0, 0, 0xD000000000000012, 0x80000001DB1FC870, sub_1DB142CF8, 0, v2);
}

uint64_t sub_1DB1402F8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1403F4, 0, 0);
}

uint64_t sub_1DB1403F4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void sub_1DB14040C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1DB14814C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB140BB4;
  aBlock[3] = &block_descriptor_40;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_languageAssetsWithOptions_completion_, a2, v10);
  _Block_release(v10);
}

uint64_t sub_1DB1405C8(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v70 = *(char **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v55 - v10;
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904980);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v75 = (uint64_t)a2;
    id v19 = a2;
LABEL_30:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
    return sub_1DB1F1620();
  }
  uint64_t v20 = v70;
  BOOL v65 = v14;
  uint64_t v66 = v11;
  char v67 = v8;
  if (!a1)
  {
LABEL_29:
    uint64_t v75 = 0;
    goto LABEL_30;
  }
  uint64_t v64 = v6;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v22 = (uint64_t)v66;
  char v23 = v20;
  uint64_t v24 = (unint64_t *)MEMORY[0x1E4FBC860];
  if (!v21)
  {
LABEL_28:
    uint64_t v75 = (uint64_t)v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968);
    sub_1DB1F1610();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    goto LABEL_29;
  }
  unint64_t v56 = v18;
  uint64_t v57 = v16;
  uint64_t v58 = v15;
  uint64_t v59 = a3;
  uint64_t v77 = (unint64_t *)MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DB12E8F0(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v26 = 0;
    unint64_t v27 = (void (**)(uint64_t, uint64_t))(v23 + 8);
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v23 + 16);
    unint64_t v61 = a1 & 0xC000000000000001;
    uint64_t v62 = v21;
    unint64_t v63 = a1;
    do
    {
      if (v61) {
        uint64_t v28 = (char *)MEMORY[0x1E018BAD0](v26, a1);
      }
      else {
        uint64_t v28 = (char *)*(id *)(a1 + 8 * v26 + 32);
      }
      uint64_t v29 = v28;
      uint64_t v30 = v64;
      id v31 = objc_msgSend(v28, sel_state);
      if (v31 == (id)2)
      {
        int v68 = 1;
        uint64_t v34 = 0;
      }
      else if (v31 == (id)1)
      {
        id v32 = objc_msgSend(v29, sel_progress);
        objc_msgSend(v32, sel_fractionCompleted);
        uint64_t v34 = v33;

        int v68 = 0;
      }
      else
      {
        int v68 = 1;
        uint64_t v34 = 1;
      }
      uint64_t v70 = v29;
      id v35 = objc_msgSend(v29, sel_ltIdentifier);
      uint64_t v36 = sub_1DB1F1290();
      uint64_t v38 = v37;

      uint64_t v75 = v36;
      uint64_t v76 = v38;
      uint64_t v73 = 45;
      unint64_t v74 = 0xE100000000000000;
      uint64_t v71 = 95;
      unint64_t v72 = 0xE100000000000000;
      sub_1DB0F0708();
      uint64_t v39 = sub_1DB1F1950();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v42 = v65;
      uint64_t v69 = v39;
      sub_1DB1EF580();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v43 = Locale.sqDisplayName(context:in:)(0, v22);
      unint64_t v45 = v44;
      uint64_t v46 = *v27;
      (*v27)(v22, v30);
      uint64_t v47 = v67;
      (*v60)(v67, v42, v30);
      if (v45)
      {
        v46((uint64_t)v47, v30);
        v46((uint64_t)v42, v30);
        uint64_t v48 = v69;
        uint64_t v49 = v43;
      }
      else
      {
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        uint64_t v50 = Locale.sqDisplaySubname(context:in:)(0, v22);
        unint64_t v45 = v51;
        v46(v22, v30);
        v46((uint64_t)v67, v30);
        v46((uint64_t)v42, v30);
        if (v45)
        {
          uint64_t v48 = v69;
          uint64_t v49 = v50;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v48 = v69;
          uint64_t v49 = v69;
          unint64_t v45 = v41;
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v24 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, v24[2] + 1, 1);
        uint64_t v24 = v77;
      }
      unint64_t v53 = v24[2];
      unint64_t v52 = v24[3];
      if (v53 >= v52 >> 1)
      {
        sub_1DB12E8F0(v52 > 1, v53 + 1, 1);
        uint64_t v24 = v77;
      }
      ++v26;
      _OWORD v24[2] = v53 + 1;
      uint64_t v54 = &v24[6 * v53];
      v54[4] = v48;
      v54[5] = v41;
      v54[6] = v34;
      *((unsigned char *)v54 + 56) = v68;
      v54[8] = v49;
      v54[9] = v45;
      a1 = v63;
      uint64_t v22 = (uint64_t)v66;
    }
    while (v62 != v26);
    uint64_t v15 = v58;
    uint64_t v16 = v57;
    uint64_t v18 = v56;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB140BB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D958);
    uint64_t v4 = sub_1DB1F14A0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t static LanguagesStatusService.available(task:)()
{
  uint64_t v1 = sub_1DB1EF6B0();
  v0[22] = v1;
  v0[23] = *(void *)(v1 - 8);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB140D30, 0, 0);
}

uint64_t sub_1DB140D30()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 21;
  v0[3] = sub_1DB140E3C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DB14145C;
  v0[13] = &block_descriptor;
  v0[14] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 16, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB140E3C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    uint64_t v2 = sub_1DB1413CC;
  }
  else {
    uint64_t v2 = sub_1DB140F4C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB140F4C()
{
  unint64_t v1 = v0[21];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = (uint64_t (*)(uint64_t))v0[1];
    return v37(v33);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_25;
  }
LABEL_3:
  uint64_t v51 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DB12E8F0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v0[23];
    unint64_t v43 = v1 & 0xC000000000000001;
    unint64_t v45 = v1;
    uint64_t v46 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v42 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v44 = v2;
    while (1)
    {
      if (v43) {
        id v6 = (id)MEMORY[0x1E018BAD0](v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_state, v38, v39, v40, v41);
      if (v8 == (id)2)
      {
        char v47 = 1;
        uint64_t v11 = 0;
      }
      else if (v8 == (id)1)
      {
        id v9 = objc_msgSend(v7, sel_progress);
        objc_msgSend(v9, sel_fractionCompleted);
        uint64_t v11 = v10;

        char v47 = 0;
      }
      else
      {
        char v47 = 1;
        uint64_t v11 = 1;
      }
      uint64_t v13 = v0[25];
      uint64_t v12 = v0[26];
      uint64_t v48 = v0[24];
      uint64_t v14 = v0[22];
      uint64_t v50 = v7;
      id v15 = objc_msgSend(v7, sel_ltIdentifier);
      uint64_t v16 = sub_1DB1F1290();
      uint64_t v18 = v17;

      v0[15] = v16;
      v0[16] = v18;
      v0[17] = 45;
      v0[18] = 0xE100000000000000;
      v0[19] = 95;
      v0[20] = 0xE100000000000000;
      unint64_t v40 = sub_1DB0F0708();
      unint64_t v41 = v40;
      unint64_t v39 = v40;
      uint64_t v38 = MEMORY[0x1E4FBB1A0];
      uint64_t v19 = sub_1DB1F1950();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v49 = v19;
      sub_1DB1EF580();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v22 = Locale.sqDisplayName(context:in:)(0, v13);
      uint64_t v24 = v23;
      unint64_t v25 = *v46;
      (*v46)(v13, v14);
      (*v42)(v48, v12, v14);
      uint64_t v26 = v0[26];
      if (v24)
      {
        uint64_t v27 = v0[22];
        v25(v0[24], v27);
        v25(v26, v27);
      }
      else
      {
        uint64_t v28 = v0[24];
        uint64_t v29 = v0[25];
        uint64_t v30 = v0[22];
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        uint64_t v22 = Locale.sqDisplaySubname(context:in:)(0, v29);
        uint64_t v24 = v31;
        v25(v29, v30);
        v25(v28, v30);
        v25(v26, v30);
        if (!v24)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = v49;
          uint64_t v22 = v49;
          uint64_t v24 = v21;
          goto LABEL_17;
        }
      }
      uint64_t v32 = v49;
LABEL_17:
      swift_bridgeObjectRelease();

      uint64_t v33 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v51 + 16) + 1, 1);
        uint64_t v33 = v51;
      }
      unint64_t v35 = *(void *)(v33 + 16);
      unint64_t v34 = *(void *)(v33 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1DB12E8F0(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v51;
      }
      ++v4;
      *(void *)(v33 + 16) = v35 + 1;
      uint64_t v36 = v33 + 48 * v35;
      *(void *)(v36 + 32) = v32;
      *(void *)(v36 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
      *(void *)(v36 + 48) = v11;
      *(unsigned char *)(v36 + 56) = v47;
      *(void *)(v36 + 64) = v22;
      *(void *)(v36 + 72) = v24;
      unint64_t v1 = v45;
      if (v44 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB1413CC()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB14145C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4DE28);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D958);
    **(void **)(*(void *)(v3 + 64) + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_1DB1F14A0();
    return swift_continuation_throwingResume();
  }
}

uint64_t static LanguagesStatusService.offline()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA904C40 + dword_1EA904C40);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB1415D8;
  return v3();
}

uint64_t sub_1DB1415D8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t static LanguagesStatusService.status(task:)()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA904C50 + dword_1EA904C50);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB14177C;
  return v3();
}

uint64_t sub_1DB14177C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t static LanguagesStatusService.isInstalled(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA904C60 + dword_1EA904C60);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1DB1415D8;
  return v5(a1);
}

uint64_t static LanguagesStatusService.languagePairState(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = a2;
  *(void *)(v2 + 24__isPlatformVersionAtLeast(2, 18, 1, 0) = type metadata accessor for LocalePair();
  *(void *)(v2 + 248) = swift_task_alloc();
  uint64_t v3 = sub_1DB1EF6B0();
  *(void *)(v2 + 256) = v3;
  *(void *)(v2 + 264) = *(void *)(v3 - 8);
  *(void *)(v2 + 272) = swift_task_alloc();
  *(void *)(v2 + 28__isPlatformVersionAtLeast(2, 18, 1, 0) = swift_task_alloc();
  *(void *)(v2 + 288) = swift_task_alloc();
  *(void *)(v2 + 296) = swift_task_alloc();
  *(void *)(v2 + 304) = swift_task_alloc();
  *(void *)(v2 + 312) = swift_task_alloc();
  *(void *)(v2 + 32__isPlatformVersionAtLeast(2, 18, 1, 0) = swift_task_alloc();
  *(unsigned char *)(v2 + 352) = 1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_1EA904C50 + dword_1EA904C50);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 328) = v4;
  void *v4 = v2;
  v4[1] = sub_1DB141AB4;
  return v6(v2 + 352);
}

uint64_t sub_1DB141AB4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1DB142690;
  }
  else {
    uint64_t v4 = sub_1DB141BC8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1DB141BC8()
{
  uint64_t v92 = v0;
  uint64_t v77 = v0[39];
  uint64_t v79 = v0[38];
  uint64_t v1 = v0[33];
  uint64_t v82 = v0[32];
  uint64_t v83 = v0[37];
  uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  ((void (*)(void, void))v85)(v0[40], v0[29]);
  v0[4] = sub_1DB1EF590();
  v0[5] = v2;
  v0[6] = 45;
  v0[7] = 0xE100000000000000;
  v0[8] = 95;
  v0[9] = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v3 = sub_1DB1F1950();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  v0[10] = v3;
  v0[12] = 45;
  v0[11] = v5;
  v0[13] = 0xE100000000000000;
  v0[14] = 95;
  v0[15] = 0xE100000000000000;
  uint64_t v6 = sub_1DB1F1950();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  Locale.sqDisplayName(context:in:)(0, v79);
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v11(v79, v82);
  v85(v83, v77, v82);
  uint64_t v12 = v0[39];
  uint64_t v76 = v6;
  if (v10)
  {
    uint64_t v13 = v0[32];
    v11(v0[37], v13);
    uint64_t v14 = v11;
    v11(v12, v13);
  }
  else
  {
    uint64_t v16 = v0[37];
    uint64_t v15 = v0[38];
    uint64_t v17 = v0[32];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v15);
    uint64_t v19 = v18;
    v11(v15, v17);
    v11(v16, v17);
    uint64_t v14 = v11;
    v11(v12, v17);
    if (!v19) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v20 = v0[40];
  uint64_t v21 = v0[36];
  uint64_t v78 = v0[38];
  uint64_t v80 = v0[34];
  uint64_t v22 = v0[32];
  uint64_t v75 = v0[35];
  uint64_t v23 = v0[29];
  uint64_t v24 = v0[30];
  swift_bridgeObjectRelease();
  v14(v20, v22);
  v85(v21, v23 + *(int *)(v24 + 20), v22);
  v0[2] = sub_1DB1EF590();
  v0[3] = v25;
  v0[18] = 45;
  v0[19] = 0xE100000000000000;
  v0[20] = 95;
  v0[21] = 0xE100000000000000;
  uint64_t v26 = sub_1DB1F1950();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  v0[22] = v26;
  v0[23] = v28;
  v0[24] = 45;
  v0[25] = 0xE100000000000000;
  v0[16] = 95;
  v0[17] = 0xE100000000000000;
  uint64_t v29 = sub_1DB1F1950();
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v87 = v29;
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  Locale.sqDisplayName(context:in:)(0, v78);
  uint64_t v33 = v32;
  v14(v78, v22);
  v85(v80, v75, v22);
  unint64_t v34 = v14;
  if (v33)
  {
    uint64_t v35 = v0[35];
    uint64_t v36 = v0[32];
    v14(v0[34], v36);
    v14(v35, v36);
    uint64_t v37 = v76;
  }
  else
  {
    uint64_t v38 = v0[38];
    uint64_t v40 = v0[34];
    uint64_t v39 = v0[35];
    uint64_t v41 = v0[32];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v38);
    uint64_t v43 = v42;
    v34(v38, v41);
    v34(v40, v41);
    v34(v39, v41);
    uint64_t v37 = v76;
    if (!v43) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v44 = v0[42];
  uint64_t v45 = v0[36];
  uint64_t v46 = v0[32];
  swift_bridgeObjectRelease();
  v34(v45, v46);
  uint64_t v84 = v44;
  uint64_t v47 = *(void *)(v44 + 16);
  if (!v47) {
    goto LABEL_26;
  }
  uint64_t v81 = v0[42];
  uint64_t v48 = v81 + 40;
  while (1)
  {
    uint64_t v49 = *(void *)(v48 + 8);
    char v50 = *(unsigned char *)(v48 + 16);
    BOOL v51 = *(void *)(v48 - 8) == v37 && *(void *)v48 == v8;
    if (v51 || (sub_1DB1F1DB0() & 1) != 0) {
      break;
    }
    v48 += 48;
    if (!--v47) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v84 + 16);
  if (v52)
  {
    unint64_t v53 = (unsigned char *)(v81 + 56);
    uint64_t v54 = v87;
    while (1)
    {
      uint64_t v55 = *((void *)v53 - 1);
      char v56 = *v53;
      if (*((void *)v53 - 3) == v54 && *((void *)v53 - 2) == v31) {
        break;
      }
      char v58 = sub_1DB1F1DB0();
      uint64_t v54 = v87;
      if (v58) {
        break;
      }
      v53 += 48;
      if (!--v52) {
        goto LABEL_26;
      }
    }
    uint64_t v74 = v0[28];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v90 = v49;
    char v91 = v50;
    uint64_t v88 = v55;
    LOBYTE(v89) = v56;
    LanguageState.combine(_:)((uint64_t)&v88, v74);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v72 = (uint64_t (*)(void))v0[1];
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v59 = v0[31];
    uint64_t v60 = v0[29];
    uint64_t v61 = sub_1DB1EF810();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EBA4F420);
    sub_1DB12B6A8(v60, v59);
    uint64_t v62 = sub_1DB1EF7F0();
    os_log_type_t v63 = sub_1DB1F1710();
    BOOL v64 = os_log_type_enabled(v62, v63);
    uint64_t v65 = v0[31];
    if (v64)
    {
      uint64_t v66 = swift_slowAlloc();
      char v67 = (void *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136446466;
      uint64_t v90 = v86;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      uint64_t v88 = 0x203A656372756F73;
      unint64_t v89 = 0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      v0[27] = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, &v90);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB147F60(v65, (uint64_t (*)(void))type metadata accessor for LocalePair);
      *(_WORD *)(v66 + 12) = 2112;
      sub_1DB145888();
      int v68 = (void *)swift_allocError();
      *uint64_t v69 = 0;
      uint64_t v70 = sub_1DB1EF410();

      v0[26] = v70;
      sub_1DB1F1910();
      void *v67 = v70;
      _os_log_impl(&dword_1DB0DC000, v62, v63, "Failed to read pair state for pair %{public}s: %@", (uint8_t *)v66, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v67, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v86, -1, -1);
      MEMORY[0x1E018CA60](v66, -1, -1);
    }
    else
    {
      sub_1DB147F60(v0[31], (uint64_t (*)(void))type metadata accessor for LocalePair);
    }

    sub_1DB145888();
    swift_allocError();
    unsigned char *v71 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v72 = (uint64_t (*)(void))v0[1];
  }
  return v72();
}

uint64_t sub_1DB142690()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static LanguagesStatusService.languagePairPath(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA904C80 + dword_1EA904C80);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1DB1415D8;
  return v5(a1);
}

uint64_t static LanguagesStatusService.isReady(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA904C80 + dword_1EA904C80);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1DB1428A8;
  return v5(a1);
}

uint64_t sub_1DB1428A8(unsigned __int8 a1)
{
  unsigned int v3 = a1;
  uint64_t v6 = *v1;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4((v3 > 5) | (6u >> a1) & 1);
}

uint64_t LanguagePairPath.isReady.getter(unsigned __int8 a1)
{
  return (a1 > 5u) | (6u >> a1) & 1;
}

void sub_1DB1429DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D900);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1DB148010;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB15D210;
  aBlock[3] = &block_descriptor_33;
  uint64_t v8 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v5, sel_autoDetectSpeechUnsupportedPairsWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_1DB142B90(unint64_t a1)
{
  uint64_t v13 = MEMORY[0x1E4FBC870];
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC870];
LABEL_12:
    uint64_t v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D900);
    return sub_1DB1F1530();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DB1F1BB0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1E018BAD0](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      unint64_t v6 = v5;
      ++v4;
      id v7 = objc_msgSend(v5, sel_canonicalIdentifier);
      uint64_t v8 = sub_1DB1F1290();
      uint64_t v10 = v9;

      sub_1DB1E4E80(&v12, v8, v10);
      swift_bridgeObjectRelease();
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    uint64_t v11 = v13;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1DB142CF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CA0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  id v5 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1DB147FCC;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB142EF4;
  aBlock[3] = &block_descriptor_27;
  uint64_t v8 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v5, sel_modalitiesPerLocaleWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_1DB142EAC(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CA0);
  return sub_1DB1F1530();
}

void sub_1DB142EF4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

unint64_t LanguagePairPath.description.getter(char a1)
{
  unint64_t result = 0x6F72687473736170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6563697665446E6FLL;
      break;
    case 2:
      unint64_t result = 0x6B726F7774656ELL;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t LanguagePairPath.rawValue.getter(char a1)
{
  unint64_t result = 0x6F72687473736170;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6563697665446E6FLL;
      break;
    case 2:
      unint64_t result = 0x6B726F7774656ELL;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB143108(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = LanguagePairPath.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == LanguagePairPath.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DB143194()
{
  char v1 = *v0;
  sub_1DB1F1E80();
  LanguagePairPath.rawValue.getter(v1);
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1431F8()
{
  LanguagePairPath.rawValue.getter(*v0);
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB14324C()
{
  char v1 = *v0;
  sub_1DB1F1E80();
  LanguagePairPath.rawValue.getter(v1);
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1432AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13TranslationUI16LanguagePairPathO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1DB1432DC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LanguagePairPath.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1DB143308()
{
  return LanguagePairPath.description.getter(*v0);
}

uint64_t sub_1DB143310(char *a1, char *a2)
{
  return sub_1DB161888(*a1, *a2);
}

uint64_t sub_1DB14331C()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB1433A0()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB143410()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB143490@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DB1F1C10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DB1434F0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6563697665446E6FLL;
  if (*v1) {
    uint64_t v2 = 0x6B726F7774656ELL;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DB143530()
{
  if (*v0) {
    return 0x6B726F7774656ELL;
  }
  else {
    return 0x6563697665446E6FLL;
  }
}

uint64_t sub_1DB14356C()
{
  if (getenv("LT_ONDEVICE_MODE"))
  {
    uint64_t v0 = sub_1DB1F13B0();
    uint64_t v2 = sub_1DB0FFDA4(v0, v1);
    swift_bridgeObjectRelease();
    if (v2)
    {
      sub_1DB1F1A40();
      if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1DB1A8BE4((uint64_t)v18), (v4 & 1) != 0))
      {
        sub_1DB0E52F4(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v19);
      }
      else
      {
        long long v19 = 0u;
        long long v20 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1DB0E5240((uint64_t)v18);
      if (*((void *)&v20 + 1))
      {
        if (swift_dynamicCast())
        {
          unint64_t v5 = sub_1DB1F1C10();
          swift_bridgeObjectRelease();
          if (v5 <= 1)
          {
            if (qword_1EBA4D780 != -1) {
              swift_once();
            }
            uint64_t v6 = sub_1DB1EF810();
            __swift_project_value_buffer(v6, (uint64_t)qword_1EBA4F3A0);
            uint64_t v7 = sub_1DB1EF7F0();
            os_log_type_t v8 = sub_1DB1F16F0();
            if (!os_log_type_enabled(v7, v8))
            {

              return v5;
            }
            uint64_t v9 = (uint8_t *)swift_slowAlloc();
            uint64_t v10 = swift_slowAlloc();
            *(_DWORD *)uint64_t v9 = 136315138;
            v18[0] = v10;
            if (v5) {
              uint64_t v11 = 0x6B726F7774656ELL;
            }
            else {
              uint64_t v11 = 0x6563697665446E6FLL;
            }
            if (v5) {
              unint64_t v12 = 0xE700000000000000;
            }
            else {
              unint64_t v12 = 0xE800000000000000;
            }
            *(void *)&long long v19 = sub_1DB11F638(v11, v12, v18);
            sub_1DB1F1910();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DB0DC000, v7, v8, "Model path fixture found %s", v9, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E018CA60](v10, -1, -1);
            uint64_t v13 = v9;
            goto LABEL_25;
          }
        }
      }
      else
      {
        sub_1DB0E5294((uint64_t)&v19);
      }
    }
  }
  if (qword_1EBA4D780 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1DB1EF810();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBA4F3A0);
  uint64_t v7 = sub_1DB1EF7F0();
  os_log_type_t v15 = sub_1DB1F16F0();
  if (!os_log_type_enabled(v7, v15))
  {

    return 2;
  }
  unint64_t v5 = 2;
  uint64_t v16 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v16 = 0;
  _os_log_impl(&dword_1DB0DC000, v7, v15, "Model path fixture not found", v16, 2u);
  uint64_t v13 = v16;
LABEL_25:
  MEMORY[0x1E018CA60](v13, -1, -1);

  return v5;
}

uint64_t sub_1DB1438D8()
{
  uint64_t v1 = sub_1DB1EF6B0();
  v0[22] = v1;
  v0[23] = *(void *)(v1 - 8);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1439B0, 0, 0);
}

uint64_t sub_1DB1439B0()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 21;
  v0[3] = sub_1DB143ABC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DB14145C;
  v0[13] = &block_descriptor_34;
  v0[14] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 32, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB143ABC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    uint64_t v2 = sub_1DB148340;
  }
  else {
    uint64_t v2 = sub_1DB148344;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB143BCC()
{
  uint64_t v1 = sub_1DB1EF6B0();
  v0[22] = v1;
  v0[23] = *(void *)(v1 - 8);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB143CA4, 0, 0);
}

uint64_t sub_1DB143CA4()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 21;
  v0[3] = sub_1DB143DB0;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DB14145C;
  v0[13] = &block_descriptor_26;
  v0[14] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 64, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB143DB0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    uint64_t v2 = sub_1DB14433C;
  }
  else {
    uint64_t v2 = sub_1DB143EC0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB143EC0()
{
  unint64_t v1 = v0[21];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = (uint64_t (*)(uint64_t))v0[1];
    return v37(v33);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_25;
  }
LABEL_3:
  uint64_t v51 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DB12E8F0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v0[23];
    unint64_t v43 = v1 & 0xC000000000000001;
    unint64_t v45 = v1;
    uint64_t v46 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v42 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v44 = v2;
    while (1)
    {
      if (v43) {
        id v6 = (id)MEMORY[0x1E018BAD0](v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_state, v38, v39, v40, v41);
      if (v8 == (id)2)
      {
        char v47 = 1;
        uint64_t v11 = 0;
      }
      else if (v8 == (id)1)
      {
        id v9 = objc_msgSend(v7, sel_progress);
        objc_msgSend(v9, sel_fractionCompleted);
        uint64_t v11 = v10;

        char v47 = 0;
      }
      else
      {
        char v47 = 1;
        uint64_t v11 = 1;
      }
      uint64_t v13 = v0[25];
      uint64_t v12 = v0[26];
      uint64_t v48 = v0[24];
      uint64_t v14 = v0[22];
      char v50 = v7;
      id v15 = objc_msgSend(v7, sel_ltIdentifier);
      uint64_t v16 = sub_1DB1F1290();
      uint64_t v18 = v17;

      v0[15] = v16;
      v0[16] = v18;
      v0[17] = 45;
      v0[18] = 0xE100000000000000;
      v0[19] = 95;
      v0[20] = 0xE100000000000000;
      unint64_t v40 = sub_1DB0F0708();
      unint64_t v41 = v40;
      unint64_t v39 = v40;
      uint64_t v38 = MEMORY[0x1E4FBB1A0];
      uint64_t v19 = sub_1DB1F1950();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      uint64_t v49 = v19;
      sub_1DB1EF580();
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v22 = Locale.sqDisplayName(context:in:)(0, v13);
      uint64_t v24 = v23;
      uint64_t v25 = *v46;
      (*v46)(v13, v14);
      (*v42)(v48, v12, v14);
      uint64_t v26 = v0[26];
      if (v24)
      {
        uint64_t v27 = v0[22];
        v25(v0[24], v27);
        v25(v26, v27);
      }
      else
      {
        uint64_t v28 = v0[24];
        uint64_t v29 = v0[25];
        uint64_t v30 = v0[22];
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        uint64_t v22 = Locale.sqDisplaySubname(context:in:)(0, v29);
        uint64_t v24 = v31;
        v25(v29, v30);
        v25(v28, v30);
        v25(v26, v30);
        if (!v24)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = v49;
          uint64_t v22 = v49;
          uint64_t v24 = v21;
          goto LABEL_17;
        }
      }
      uint64_t v32 = v49;
LABEL_17:
      swift_bridgeObjectRelease();

      uint64_t v33 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *(void *)(v51 + 16) + 1, 1);
        uint64_t v33 = v51;
      }
      unint64_t v35 = *(void *)(v33 + 16);
      unint64_t v34 = *(void *)(v33 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1DB12E8F0(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v51;
      }
      ++v4;
      *(void *)(v33 + 16) = v35 + 1;
      uint64_t v36 = v33 + 48 * v35;
      *(void *)(v36 + 32) = v32;
      *(void *)(v36 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
      *(void *)(v36 + 48) = v11;
      *(unsigned char *)(v36 + 56) = v47;
      *(void *)(v36 + 64) = v22;
      *(void *)(v36 + 72) = v24;
      unint64_t v1 = v45;
      if (v44 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DB14433C()
{
  unint64_t v1 = *(void **)(v0 + 216);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  return v2(v3);
}

uint64_t sub_1DB1443D4()
{
  uint64_t v1 = sub_1DB1EF6B0();
  v0[28] = v1;
  v0[29] = *(void *)(v1 - 8);
  v0[30] = swift_task_alloc();
  v0[31] = swift_task_alloc();
  v0[32] = swift_task_alloc();
  v0[33] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1444B8, 0, 0);
}

uint64_t sub_1DB1444B8()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 27;
  v0[3] = sub_1DB1445C4;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DB14145C;
  v0[13] = &block_descriptor_24;
  v0[14] = v2;
  objc_msgSend(v1, sel_languageAssetsWithOptions_completion_, 0, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB1445C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 272) = v1;
  if (v1) {
    uint64_t v2 = sub_1DB144BB4;
  }
  else {
    uint64_t v2 = sub_1DB1446D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB1446D4()
{
  unint64_t v1 = v0[27];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    goto LABEL_24;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_23;
  }
LABEL_3:
  uint64_t v53 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DB12E8F0(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v0[29];
  unint64_t v45 = v1;
  uint64_t v46 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v42 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  unint64_t v43 = v1 & 0xC000000000000001;
  uint64_t v44 = v2;
  do
  {
    if (v43) {
      id v6 = (id)MEMORY[0x1E018BAD0](v4, v1);
    }
    else {
      id v6 = *(id *)(v1 + 8 * v4 + 32);
    }
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_locale, v38, v39, v40, v41);
    sub_1DB1EF5F0();

    id v9 = objc_msgSend(v7, sel_state);
    uint64_t v52 = v7;
    if (v9 == (id)1)
    {
      BOOL v48 = 0;
      char v47 = 0;
    }
    else
    {
      BOOL v48 = v9 != (id)2;
      char v47 = 1;
    }
    uint64_t v10 = v0[32];
    uint64_t v11 = v0[31];
    uint64_t v49 = v0[28];
    uint64_t v50 = v0[30];
    v0[17] = sub_1DB1EF590();
    v0[18] = v12;
    v0[15] = 45;
    v0[16] = 0xE100000000000000;
    v0[21] = 95;
    v0[22] = 0xE100000000000000;
    unint64_t v13 = sub_1DB0F0708();
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    uint64_t v15 = sub_1DB1F1950();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[23] = v15;
    v0[24] = v17;
    v0[25] = 45;
    v0[26] = 0xE100000000000000;
    v0[19] = 95;
    v0[20] = 0xE100000000000000;
    unint64_t v40 = v13;
    unint64_t v41 = v13;
    uint64_t v38 = v14;
    unint64_t v39 = v13;
    uint64_t v18 = sub_1DB1F1950();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    sub_1DB1EF580();
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    uint64_t v21 = Locale.sqDisplayName(context:in:)(0, v11);
    uint64_t v23 = v22;
    uint64_t v24 = *v46;
    (*v46)(v11, v49);
    (*v42)(v50, v10, v49);
    uint64_t v25 = v0[32];
    if (v23)
    {
      uint64_t v26 = v0[28];
      v24(v0[30], v26);
      v24(v25, v26);
    }
    else
    {
      uint64_t v51 = v18;
      uint64_t v27 = v0[30];
      uint64_t v28 = v0[31];
      uint64_t v29 = v0[28];
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      uint64_t v21 = Locale.sqDisplaySubname(context:in:)(0, v28);
      uint64_t v23 = v30;
      v24(v28, v29);
      v24(v27, v29);
      v24(v25, v29);
      if (v23)
      {
        uint64_t v18 = v51;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = v51;
        uint64_t v21 = v51;
        uint64_t v23 = v20;
      }
    }
    uint64_t v31 = v0[33];
    uint64_t v32 = v0[28];
    swift_bridgeObjectRelease();
    v24(v31, v32);

    uint64_t v33 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DB12E8F0(0, *(void *)(v53 + 16) + 1, 1);
      uint64_t v33 = v53;
    }
    unint64_t v35 = *(void *)(v33 + 16);
    unint64_t v34 = *(void *)(v33 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_1DB12E8F0(v34 > 1, v35 + 1, 1);
      uint64_t v33 = v53;
    }
    ++v4;
    *(void *)(v33 + 16) = v35 + 1;
    uint64_t v36 = v33 + 48 * v35;
    *(void *)(v36 + 32) = v18;
    *(void *)(v36 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v20;
    *(void *)(v36 + 48) = v48;
    *(unsigned char *)(v36 + 56) = v47;
    *(void *)(v36 + 64) = v21;
    *(void *)(v36 + 72) = v23;
    unint64_t v1 = v45;
  }
  while (v44 != v4);
  swift_bridgeObjectRelease();
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(uint64_t))v0[1];
  return v37(v33);
}

uint64_t sub_1DB144BB4()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB144C50(uint64_t a1)
{
  v1[27] = a1;
  uint64_t v2 = sub_1DB1EF6B0();
  v1[28] = v2;
  v1[29] = *(void *)(v2 - 8);
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = type metadata accessor for LocalePair();
  v1[38] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB144D8C, 0, 0);
}

uint64_t sub_1DB144D8C()
{
  uint64_t v14 = v0;
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[38];
  uint64_t v3 = sub_1DB1EF810();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBA4F420);
  sub_1DB12B6A8(v1, v2);
  uint64_t v4 = sub_1DB1EF7F0();
  os_log_type_t v5 = sub_1DB1F1700();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[38];
  if (v6)
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)id v8 = 136446210;
    v13[0] = v9;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    v13[1] = 0x203A656372756F73;
    v13[2] = 0xE800000000000000;
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    v0[26] = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, v13);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB147F60(v7, (uint64_t (*)(void))type metadata accessor for LocalePair);
    _os_log_impl(&dword_1DB0DC000, v4, v5, "Querying whether locale pair is installed: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v9, -1, -1);
    MEMORY[0x1E018CA60](v8, -1, -1);
  }
  else
  {
    sub_1DB147F60(v0[38], (uint64_t (*)(void))type metadata accessor for LocalePair);
  }

  uint64_t v12 = (uint64_t (__cdecl *)())((char *)&dword_1EA904C40 + dword_1EA904C40);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[39] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1DB145080;
  return v12();
}

uint64_t sub_1DB145080(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32__isPlatformVersionAtLeast(2, 18, 1, 0) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB145180, 0, 0);
}

uint64_t sub_1DB145180()
{
  uint64_t v1 = v0;
  uint64_t v65 = v0[35];
  uint64_t v72 = v0[34];
  uint64_t v68 = v0[33];
  uint64_t v2 = v0[29];
  uint64_t v67 = v0[28];
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  ((void (*)(void, void))v70)(v0[36], v0[27]);
  v0[2] = sub_1DB1EF590();
  v0[3] = v3;
  v0[4] = 45;
  v0[5] = 0xE100000000000000;
  v0[6] = 95;
  v0[7] = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v4 = sub_1DB1F1950();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  v1[8] = v4;
  v1[10] = 45;
  v1[9] = v6;
  v1[11] = 0xE100000000000000;
  v1[12] = 95;
  v1[13] = 0xE100000000000000;
  uint64_t v7 = sub_1DB1F1950();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  Locale.sqDisplayName(context:in:)(0, v72);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v72, v67);
  v70(v68, v65, v67);
  uint64_t v13 = v1[35];
  uint64_t v69 = v12;
  if (v11)
  {
    uint64_t v14 = v1[28];
    v12(v1[33], v14);
    v12(v13, v14);
  }
  else
  {
    uint64_t v15 = v1[33];
    uint64_t v16 = v1[34];
    uint64_t v17 = v1[28];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v16);
    uint64_t v18 = v16;
    uint64_t v20 = v19;
    v12(v18, v17);
    v12(v15, v17);
    v12(v13, v17);
    if (!v20) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v21 = v1[36];
  uint64_t v22 = v1[37];
  uint64_t v23 = v1[32];
  uint64_t v63 = v1[31];
  uint64_t v64 = v1[34];
  uint64_t v66 = v1[30];
  uint64_t v24 = v1[27];
  uint64_t v25 = v1[28];
  swift_bridgeObjectRelease();
  v69(v21, v25);
  v70(v23, v24 + *(int *)(v22 + 20), v25);
  v1[14] = sub_1DB1EF590();
  v1[15] = v26;
  v1[16] = 45;
  v1[17] = 0xE100000000000000;
  v1[18] = 95;
  v1[19] = 0xE100000000000000;
  uint64_t v27 = sub_1DB1F1950();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  v1[20] = v27;
  v1[21] = v29;
  v1[22] = 45;
  v1[23] = 0xE100000000000000;
  v1[24] = 95;
  v1[25] = 0xE100000000000000;
  uint64_t v30 = sub_1DB1F1950();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  sub_1DB1EF580();
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  Locale.sqDisplayName(context:in:)(0, v64);
  uint64_t v34 = v33;
  v69(v64, v25);
  v70(v66, v63, v25);
  if (v34)
  {
    uint64_t v35 = v1[31];
    uint64_t v36 = v1[28];
    uint64_t v37 = v69;
    v69(v1[30], v36);
    v69(v35, v36);
  }
  else
  {
    uint64_t v38 = v1[34];
    uint64_t v39 = v1[30];
    uint64_t v71 = v1[31];
    uint64_t v40 = v1[28];
    _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
    Locale.sqDisplaySubname(context:in:)(0, v38);
    uint64_t v42 = v41;
    v69(v38, v40);
    v69(v39, v40);
    v69(v71, v40);
    uint64_t v37 = v69;
    if (!v42) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v43 = v1[40];
  uint64_t v44 = v1[32];
  uint64_t v45 = v1[28];
  swift_bridgeObjectRelease();
  v37(v44, v45);
  uint64_t v46 = *(void *)(v43 + 16);
  uint64_t v47 = v1[40];
  if (!v46)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  uint64_t v73 = v43;
  BOOL v48 = (unsigned __int8 *)(v47 + 56);
  while (1)
  {
    uint64_t v50 = *((void *)v48 - 1);
    if (*((void *)v48 - 3) == v7 && *((void *)v48 - 2) == v9) {
      break;
    }
    int v51 = *v48;
    if ((sub_1DB1F1DB0() & v51) == 1 && v50 == 0) {
      goto LABEL_25;
    }
LABEL_15:
    v48 += 48;
    if (!--v46) {
      goto LABEL_42;
    }
  }
  if (v50) {
    char v53 = 0;
  }
  else {
    char v53 = *v48;
  }
  if ((v53 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(v73 + 16);
  if (v54)
  {
    uint64_t v55 = (unsigned __int8 *)(v47 + 56);
    do
    {
      uint64_t v57 = *((void *)v55 - 1);
      if (*((void *)v55 - 3) == v30 && *((void *)v55 - 2) == v32)
      {
        if (v57) {
          char v56 = 0;
        }
        else {
          char v56 = *v55;
        }
        if (v56)
        {
LABEL_41:
          swift_bridgeObjectRelease();
          unsigned int v74 = 1;
          goto LABEL_44;
        }
      }
      else
      {
        int v58 = *v55;
        if ((sub_1DB1F1DB0() & v58) == 1 && v57 == 0) {
          goto LABEL_41;
        }
      }
      v55 += 48;
      --v54;
    }
    while (v54);
  }
LABEL_43:
  swift_bridgeObjectRelease();
  unsigned int v74 = 0;
LABEL_44:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v61 = (uint64_t (*)(void))v1[1];
  return v61(v74);
}

unint64_t sub_1DB145888()
{
  unint64_t result = qword_1EA904C70;
  if (!qword_1EA904C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904C70);
  }
  return result;
}

uint64_t _s13TranslationUI22LanguagesStatusServiceO25languagePairIsPassthroughySbAA06LocaleG0VFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocalePair();
  MEMORY[0x1F4188790](v2);
  uint64_t v35 = (uint8_t *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v34 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v34 - v8;
  uint64_t v10 = type metadata accessor for Signpost();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v36 = (uint64_t)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB173814(11, 0, v36);
  id v12 = objc_allocWithZone(MEMORY[0x1E4F42390]);
  uint64_t v13 = (void *)sub_1DB1EF5D0();
  uint64_t v14 = (void *)sub_1DB1EF5D0();
  id v15 = objc_msgSend(v12, sel_initWithSourceLocale_targetLocale_, v13, v14);

  LODWORD(v14) = objc_msgSend(v15, sel_isVariantPair);
  sub_1DB12B6A8(a1, (uint64_t)v9);
  uint64_t v37 = v2;
  if (v14)
  {
    sub_1DB147F60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LocalePair);
LABEL_4:
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1DB1EF810();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EBA4F420);
    sub_1DB12B6A8(a1, (uint64_t)v6);
    uint64_t v21 = sub_1DB1EF7F0();
    os_log_type_t v22 = sub_1DB1F1700();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446210;
      uint64_t v35 = v23 + 4;
      uint64_t v38 = 0;
      unint64_t v39 = 0xE000000000000000;
      uint64_t v40 = v24;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      uint64_t v38 = 0x203A656372756F73;
      unint64_t v39 = 0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_1DB11F638(v38, v39, &v40);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB147F60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1DB0DC000, v21, v22, "Pair %{public}s is passthrough", v23, 0xCu);
      uint64_t v25 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v24, -1, -1);
      MEMORY[0x1E018CA60](v23, -1, -1);
    }
    else
    {
      sub_1DB147F60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LocalePair);

      uint64_t v25 = 1;
    }
    goto LABEL_15;
  }
  id v16 = objc_allocWithZone(MEMORY[0x1E4F42390]);
  uint64_t v17 = (void *)sub_1DB1EF5D0();
  uint64_t v18 = (void *)sub_1DB1EF5D0();
  id v19 = objc_msgSend(v16, sel_initWithSourceLocale_targetLocale_, v17, v18);

  LODWORD(v18) = objc_msgSend(v19, sel_isPassthrough);
  sub_1DB147F60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LocalePair);
  if (v18) {
    goto LABEL_4;
  }
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1DB1EF810();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBA4F420);
  uint64_t v27 = (uint64_t)v35;
  sub_1DB12B6A8(a1, (uint64_t)v35);
  uint64_t v28 = sub_1DB1EF7F0();
  os_log_type_t v29 = sub_1DB1F1700();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136446210;
    v34[1] = v30 + 4;
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    uint64_t v40 = v31;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    uint64_t v38 = 0x203A656372756F73;
    unint64_t v39 = 0xE800000000000000;
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1DB11F638(v38, v39, &v40);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB147F60(v27, (uint64_t (*)(void))type metadata accessor for LocalePair);
    _os_log_impl(&dword_1DB0DC000, v28, v29, "Pair %{public}s is not passthrough", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v31, -1, -1);
    MEMORY[0x1E018CA60](v30, -1, -1);
  }
  else
  {
    sub_1DB147F60(v27, (uint64_t (*)(void))type metadata accessor for LocalePair);
  }

  uint64_t v25 = 0;
LABEL_15:
  uint64_t v32 = v36;
  sub_1DB173B88(v25);
  sub_1DB173E68();
  sub_1DB147F60(v32, (uint64_t (*)(void))type metadata accessor for Signpost);
  return v25;
}

uint64_t sub_1DB145FA4()
{
  return MEMORY[0x1F4188298](sub_1DB145FC0, 0, 0);
}

uint64_t sub_1DB145FC0()
{
  char v1 = sub_1DB0E45A8();
  if (v1 == 2)
  {
    uint64_t v2 = self;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1DB146114;
    uint64_t v3 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1DB1D35E0;
    v0[13] = &block_descriptor_21;
    v0[14] = v3;
    objc_msgSend(v2, sel_onDeviceModeEnabledWithDedicatedMachPort_completion_, 1, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    uint64_t v4 = v1 & 1;
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(v4);
  }
}

uint64_t sub_1DB146114()
{
  return MEMORY[0x1F4188298](sub_1DB1461F4, 0, 0);
}

uint64_t sub_1DB1461F4()
{
  return (*(uint64_t (**)(BOOL))(v0 + 8))((*(unsigned char *)(v0 + 120) & 1) == 0);
}

uint64_t sub_1DB146214(uint64_t a1)
{
  v1[9] = a1;
  v1[10] = type metadata accessor for LocalePair();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  type metadata accessor for Signpost();
  v1[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB146320, 0, 0);
}

uint64_t sub_1DB146320()
{
  uint64_t v17 = v0;
  uint64_t v1 = v0[9];
  sub_1DB173814(10, 0, v0[18]);
  if (_s13TranslationUI22LanguagesStatusServiceO25languagePairIsPassthroughySbAA06LocaleG0VFZ_0(v1))
  {
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v2 = v0[11];
    uint64_t v3 = v0[9];
    uint64_t v4 = sub_1DB1EF810();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBA4F420);
    sub_1DB12B6A8(v3, v2);
    uint64_t v5 = sub_1DB1EF7F0();
    os_log_type_t v6 = sub_1DB1F16F0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = v0[11];
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      v16[0] = v10;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      v16[1] = 0x203A656372756F73;
      void v16[2] = 0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      v0[8] = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, v16);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB147F60(v8, (uint64_t (*)(void))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1DB0DC000, v5, v6, "Pair %{public}s is passthrough", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v10, -1, -1);
      MEMORY[0x1E018CA60](v9, -1, -1);
    }
    else
    {
      sub_1DB147F60(v0[11], (uint64_t (*)(void))type metadata accessor for LocalePair);
    }

    uint64_t v13 = v0[18];
    sub_1DB173B88(1);
    sub_1DB173E68();
    sub_1DB147F60(v13, (uint64_t (*)(void))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14(0);
  }
  else
  {
    id v15 = (uint64_t (__cdecl *)())((char *)&dword_1EA904C98 + dword_1EA904C98);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1DB1466F4;
    return v15();
  }
}

uint64_t sub_1DB1466F4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1467F4, 0, 0);
}

uint64_t sub_1DB1467F4()
{
  if ((*(unsigned char *)(v0 + 184) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_4:
    os_log_type_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_1EA904C60 + dword_1EA904C60);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1DB147730;
    uint64_t v3 = *(void *)(v0 + 72);
    return v6(v3);
  }
  char v1 = sub_1DB1F1DB0();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_4;
  }
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1DB146958;
  return static NetworkPathService.isDisconnected()();
}

uint64_t sub_1DB146958(char a1)
{
  *(unsigned char *)(*(void *)v1 + 185) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB146A58, 0, 0);
}

uint64_t sub_1DB146A58()
{
  uint64_t v17 = v0;
  if (*(unsigned char *)(v0 + 185))
  {
    id v15 = (uint64_t (*)(uint64_t))((char *)&dword_1EA904C60 + dword_1EA904C60);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v1;
    void *v1 = v0;
    v1[1] = sub_1DB146E0C;
    uint64_t v2 = *(void *)(v0 + 72);
    return v15(v2);
  }
  else
  {
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = sub_1DB1EF810();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBA4F420);
    sub_1DB12B6A8(v5, v4);
    uint64_t v7 = sub_1DB1EF7F0();
    os_log_type_t v8 = sub_1DB1F16F0();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 136);
    if (v9)
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      v16[0] = v12;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      v16[1] = 0x203A656372756F73;
      void v16[2] = 0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, v16);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB147F60(v10, (uint64_t (*)(void))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1DB0DC000, v7, v8, "Pair %{public}s is available to use via network", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v12, -1, -1);
      MEMORY[0x1E018CA60](v11, -1, -1);
    }
    else
    {
      sub_1DB147F60(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for LocalePair);
    }

    uint64_t v13 = *(void *)(v0 + 144);
    sub_1DB173B88(0);
    sub_1DB173E68();
    sub_1DB147F60(v13, (uint64_t (*)(void))type metadata accessor for Signpost);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v14(2);
  }
}

uint64_t sub_1DB146E0C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 186) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB146F0C, 0, 0);
}

uint64_t sub_1DB146F0C()
{
  uint64_t v41 = v0;
  if (*(unsigned char *)(v0 + 186))
  {
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void *)(v0 + 112);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = sub_1DB1EF810();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EBA4F420);
    sub_1DB12B6A8(v2, v1);
    uint64_t v4 = sub_1DB1EF7F0();
    os_log_type_t v5 = sub_1DB1F16F0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void *)(v0 + 112);
    if (v6)
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v8 = 136446210;
      uint64_t v38 = v9;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      uint64_t v39 = 0x203A656372756F73;
      unint64_t v40 = 0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, &v38);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB147F60(v7, (uint64_t (*)(void))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1DB0DC000, v4, v5, "Pair %{public}s is available on-device", v8, 0xCu);
      uint64_t v37 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v9, -1, -1);
      MEMORY[0x1E018CA60](v8, -1, -1);

      int v10 = 0;
      goto LABEL_22;
    }
    sub_1DB147F60(*(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for LocalePair);

    int v10 = 0;
    uint64_t v23 = 1;
    goto LABEL_13;
  }
  char v11 = sub_1DB0E4588();
  if (v11 == 2)
  {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4BE78]), sel_init);
    unsigned __int8 v13 = objc_msgSend(v12, sel_airplaneMode);

    if ((v13 & 1) == 0)
    {
LABEL_8:
      if (qword_1EBA4E5E8 != -1) {
        swift_once();
      }
      uint64_t v14 = *(void *)(v0 + 128);
      uint64_t v15 = *(void *)(v0 + 72);
      uint64_t v16 = sub_1DB1EF810();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EBA4F420);
      sub_1DB12B6A8(v15, v14);
      uint64_t v17 = sub_1DB1EF7F0();
      os_log_type_t v18 = sub_1DB1F16F0();
      BOOL v19 = os_log_type_enabled(v17, v18);
      uint64_t v20 = *(void *)(v0 + 128);
      if (v19)
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136446210;
        uint64_t v38 = v22;
        sub_1DB1F1AB0();
        swift_bridgeObjectRelease();
        uint64_t v39 = 0x203A656372756F73;
        unint64_t v40 = 0xE800000000000000;
        sub_1DB1EF590();
        sub_1DB1F13A0();
        swift_bridgeObjectRelease();
        sub_1DB1F13A0();
        sub_1DB1EF590();
        sub_1DB1F13A0();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 24) = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, &v38);
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        sub_1DB147F60(v20, (uint64_t (*)(void))type metadata accessor for LocalePair);
        _os_log_impl(&dword_1DB0DC000, v17, v18, "Pair %{public}s isn't available due to no network", v21, 0xCu);
        int v10 = 1;
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v22, -1, -1);
        MEMORY[0x1E018CA60](v21, -1, -1);

        uint64_t v23 = 5;
LABEL_13:
        uint64_t v37 = v23;
        goto LABEL_22;
      }
      sub_1DB147F60(*(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for LocalePair);

      uint64_t v33 = 5;
      goto LABEL_21;
    }
  }
  else if ((v11 & 1) == 0)
  {
    goto LABEL_8;
  }
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v24 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 72);
  uint64_t v26 = sub_1DB1EF810();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBA4F420);
  sub_1DB12B6A8(v25, v24);
  uint64_t v27 = sub_1DB1EF7F0();
  os_log_type_t v28 = sub_1DB1F16F0();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 120);
  if (v29)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446210;
    uint64_t v38 = v32;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    uint64_t v39 = 0x203A656372756F73;
    unint64_t v40 = 0xE800000000000000;
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, &v38);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB147F60(v30, (uint64_t (*)(void))type metadata accessor for LocalePair);
    _os_log_impl(&dword_1DB0DC000, v27, v28, "Pair %{public}s is not available due to airplane mode", v31, 0xCu);
    int v10 = 1;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v32, -1, -1);
    MEMORY[0x1E018CA60](v31, -1, -1);

    uint64_t v37 = 4;
    goto LABEL_22;
  }
  sub_1DB147F60(*(void *)(v0 + 120), (uint64_t (*)(void))type metadata accessor for LocalePair);

  uint64_t v33 = 4;
LABEL_21:
  uint64_t v37 = v33;
  int v10 = 1;
LABEL_22:
  uint64_t v34 = *(void *)(v0 + 144);
  sub_1DB173B88(v10);
  sub_1DB173E68();
  sub_1DB147F60(v34, (uint64_t (*)(void))type metadata accessor for Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v35(v37);
}

uint64_t sub_1DB147730(char a1)
{
  *(unsigned char *)(*(void *)v1 + 187) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB147830, 0, 0);
}

uint64_t sub_1DB147830()
{
  uint64_t v28 = v0;
  if (*(unsigned char *)(v0 + 187))
  {
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void *)(v0 + 96);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = sub_1DB1EF810();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EBA4F420);
    sub_1DB12B6A8(v2, v1);
    uint64_t v4 = sub_1DB1EF7F0();
    os_log_type_t v5 = sub_1DB1F16F0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void *)(v0 + 96);
    if (v6)
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v9 = v25;
      *(_DWORD *)os_log_type_t v8 = 136446210;
      sub_1DB1F1AB0();
      swift_bridgeObjectRelease();
      uint64_t v26 = 0x203A656372756F73;
      unint64_t v27 = 0xE800000000000000;
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      sub_1DB1F13A0();
      sub_1DB1EF590();
      sub_1DB1F13A0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 56) = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, &v25);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      sub_1DB147F60(v7, (uint64_t (*)(void))type metadata accessor for LocalePair);
      _os_log_impl(&dword_1DB0DC000, v4, v5, "Pair %{public}s is ready to use on-device", v8, 0xCu);
      uint64_t v24 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v9, -1, -1);
      MEMORY[0x1E018CA60](v8, -1, -1);

      int v10 = 0;
      goto LABEL_13;
    }
    sub_1DB147F60(*(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for LocalePair);

    int v10 = 0;
    uint64_t v20 = 1;
    goto LABEL_11;
  }
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = sub_1DB1EF810();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBA4F420);
  sub_1DB12B6A8(v12, v11);
  uint64_t v14 = sub_1DB1EF7F0();
  os_log_type_t v15 = sub_1DB1F16F0();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(void *)(v0 + 104);
  if (v16)
  {
    os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v19 = v25;
    *(_DWORD *)os_log_type_t v18 = 136446210;
    sub_1DB1F1AB0();
    swift_bridgeObjectRelease();
    uint64_t v26 = 0x203A656372756F73;
    unint64_t v27 = 0xE800000000000000;
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    sub_1DB1EF590();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 48) = sub_1DB11F638(0x203A656372756F73, 0xE800000000000000, &v25);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    sub_1DB147F60(v17, (uint64_t (*)(void))type metadata accessor for LocalePair);
    _os_log_impl(&dword_1DB0DC000, v14, v15, "Pair %{public}s is not available on-device", v18, 0xCu);
    int v10 = 1;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v19, -1, -1);
    MEMORY[0x1E018CA60](v18, -1, -1);

    uint64_t v20 = 3;
LABEL_11:
    uint64_t v24 = v20;
    goto LABEL_13;
  }
  sub_1DB147F60(*(void *)(v0 + 104), (uint64_t (*)(void))type metadata accessor for LocalePair);

  uint64_t v24 = 3;
  int v10 = 1;
LABEL_13:
  uint64_t v21 = *(void *)(v0 + 144);
  sub_1DB173B88(v10);
  sub_1DB173E68();
  sub_1DB147F60(v21, (uint64_t (*)(void))type metadata accessor for Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v22(v24);
}

uint64_t _s13TranslationUI16LanguagePairPathO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1DB1F1C10();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DB147DF8()
{
  unint64_t result = qword_1EA904C90;
  if (!qword_1EA904C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904C90);
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagesStatusService()
{
  return &type metadata for LanguagesStatusService;
}

unsigned char *storeEnumTagSinglePayload for LanguagePairPath(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB147F28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagePairPath()
{
  return &type metadata for LanguagePairPath;
}

uint64_t sub_1DB147F60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DB147FC0()
{
  return objectdestroyTm_5(&qword_1EA904CA0);
}

uint64_t sub_1DB147FCC(uint64_t a1)
{
  return sub_1DB148030(a1, &qword_1EA904CA0, (uint64_t (*)(uint64_t, uint64_t))sub_1DB142EAC);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1DB148004()
{
  return objectdestroyTm_5(&qword_1EBA4D900);
}

uint64_t sub_1DB148010(uint64_t a1)
{
  return sub_1DB148030(a1, &qword_1EBA4D900, (uint64_t (*)(uint64_t, uint64_t))sub_1DB142B90);
}

uint64_t sub_1DB148030(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

uint64_t sub_1DB1480B4()
{
  return objectdestroyTm_5(&qword_1EA904968);
}

uint64_t objectdestroyTm_5(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1DB14814C(unint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904968) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1DB1405C8(a1, a2, v6);
}

unsigned char *storeEnumTagSinglePayload for LanguageModelPath(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB14829CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageModelPath()
{
  return &type metadata for LanguageModelPath;
}

unint64_t sub_1DB1482D8()
{
  unint64_t result = qword_1EA904CA8;
  if (!qword_1EA904CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904CA8);
  }
  return result;
}

uint64_t sub_1DB14834C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1EF590();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DB148378()
{
  unsigned __int8 v1 = 0;
  type metadata accessor for LanguagesService();
  swift_allocObject();
  return LanguagesService.init(task:)(&v1);
}

uint64_t LanguagesView.init(sourceLocale:targetLocale:selection:showsManageLanguages:requiresOnDeviceAvailability:suggestedLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int v23 = a6;
  os_log_type_t v15 = (int *)type metadata accessor for LanguagesView(0);
  uint64_t v16 = v15[6];
  *(void *)(a9 + v16) = 0;
  uint64_t v17 = v15[7];
  *(unsigned char *)(a9 + v17) = 1;
  os_log_type_t v18 = (uint64_t *)(a9 + v15[9]);
  *os_log_type_t v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a9 + v15[10];
  *(void *)uint64_t v19 = sub_1DB148378;
  *(void *)(v19 + 8) = 0;
  *(unsigned char *)(v19 + 16) = 0;
  sub_1DB0F1454(a1, a9, &qword_1EA9047B8);
  sub_1DB0F1454(a2, a9 + v15[5], &qword_1EA9047B8);
  uint64_t v20 = (void *)(a9 + v15[11]);
  *uint64_t v20 = a3;
  v20[1] = a4;
  void v20[2] = a5;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a9 + v16) = a8;
  *(unsigned char *)(a9 + v15[8]) = a7;
  if (v23 != 2) {
    *(unsigned char *)(a9 + v17) = a6 & 1;
  }
  return result;
}

uint64_t type metadata accessor for LanguagesView(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA904CF0);
}

uint64_t sub_1DB14853C(uint64_t a1)
{
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v40 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v6 - 8);
  os_log_type_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = type metadata accessor for LanguagesView(0);
  uint64_t v41 = v1;
  type metadata accessor for LanguagesService();
  sub_1DB14FC80(&qword_1EA904450, (void (*)(uint64_t))type metadata accessor for LanguagesService);
  sub_1DB1EFB50();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v13 = v42;
  v38[1] = a1;
  *(void *)&long long v42 = sub_1DB1EF590();
  *((void *)&v42 + 1) = v14;
  v46[0] = 45;
  v46[1] = 0xE100000000000000;
  uint64_t v44 = 95;
  unint64_t v45 = 0xE100000000000000;
  sub_1DB0F0708();
  uint64_t v15 = sub_1DB1F1950();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v13 + 16);
  if (v18)
  {
    v38[0] = v8;
    uint64_t v39 = v11;
    uint64_t v19 = v4;
    uint64_t v20 = v3;
    uint64_t v21 = (unsigned __int8 *)(v13 + 56);
    while (1)
    {
      uint64_t v22 = *((void *)v21 - 1);
      int v23 = *v21;
      BOOL v24 = *((void *)v21 - 3) == v15 && *((void *)v21 - 2) == v17;
      if (v24 || (sub_1DB1F1DB0() & 1) != 0) {
        break;
      }
      v21 += 48;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v25 = 0;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      int v25 = 0;
    }
    else {
      int v25 = v23;
    }
LABEL_13:
    uint64_t v3 = v20;
    uint64_t v4 = v19;
    uint64_t v11 = v39;
    os_log_type_t v8 = (char *)v38[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v25 = 0;
  }
  if (*(unsigned char *)(v41 + *(int *)(v12 + 32)) == 1 && v25 == 0) {
    return 0;
  }
  unint64_t v27 = (long long *)(v41 + *(int *)(v12 + 44));
  long long v28 = *v27;
  uint64_t v29 = *((void *)v27 + 2);
  long long v42 = v28;
  uint64_t v43 = v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EE8);
  MEMORY[0x1E018ADF0](v46, v30);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  MEMORY[0x1E018ADF0](v31);
  sub_1DB0E8B70((uint64_t)v11, (uint64_t)v8, &qword_1EBA4E570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v11, &qword_1EBA4E570);
    sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E570);
    return 1;
  }
  else
  {
    uint64_t v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v40, v8, v3);
    id v34 = objc_allocWithZone(MEMORY[0x1E4F42390]);
    uint64_t v35 = (void *)sub_1DB1EF5D0();
    uint64_t v36 = (void *)sub_1DB1EF5D0();
    id v37 = objc_msgSend(v34, sel_initWithSourceLocale_targetLocale_, v35, v36);

    LODWORD(v36) = objc_msgSend(v37, sel_isVariantPair);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v33, v3);
    sub_1DB0E8BD4((uint64_t)v11, &qword_1EBA4E570);
    return v36 ^ 1;
  }
}

uint64_t sub_1DB1489FC()
{
  type metadata accessor for LanguagesView(0);
  type metadata accessor for LanguagesService();
  sub_1DB14FC80(&qword_1EA904450, (void (*)(uint64_t))type metadata accessor for LanguagesService);
  sub_1DB1EFB50();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  if ((v6 & 1) == 0)
  {
    _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
    uint64_t v1 = v0;
    uint64_t v2 = (void *)sub_1DB1F1260();
    objc_msgSend(v1, sel_BOOLForKey_, v2);

    id v3 = objc_msgSend(self, sel_sharedConnection);
    if (v3)
    {
      uint64_t v4 = v3;
      objc_msgSend(v3, sel_isOnDeviceOnlyTranslationForced);
    }
    else
    {
    }
  }
  return sub_1DB1F0250();
}

uint64_t sub_1DB148BC8()
{
  uint64_t v1 = sub_1DB1EF6B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for LanguagesView(0) + 24);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (*(void *)(v0 + v5)) {
    uint64_t v7 = *(void *)(v0 + v5);
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DB12FD80(v7);
  swift_bridgeObjectRelease();
  type metadata accessor for LanguagesService();
  sub_1DB14FC80(&qword_1EA904450, (void (*)(uint64_t))type metadata accessor for LanguagesService);
  sub_1DB1EFB50();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v20;
  int64_t v10 = *(void *)(v20 + 16);
  if (v10)
  {
    uint64_t v19 = v8;
    uint64_t v20 = v6;
    sub_1DB12E97C(0, v10, 0);
    uint64_t v11 = v20;
    uint64_t v12 = v9 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DB1EF580();
      uint64_t v20 = v11;
      unint64_t v14 = *(void *)(v11 + 16);
      unint64_t v13 = *(void *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DB12E97C(v13 > 1, v14 + 1, 1);
        uint64_t v11 = v20;
      }
      v12 += 48;
      *(void *)(v11 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v11+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v14, v4, v1);
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v8 = v19;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  sub_1DB14FCD0(v11, v8);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1DB148E80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v114 = a1;
  uint64_t v2 = type metadata accessor for LanguagesView(0);
  uint64_t v100 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v101 = v3;
  uint64_t v102 = (uint64_t)v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D88);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v94 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D90);
  MEMORY[0x1F4188790](v99);
  uint64_t v98 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D98);
  uint64_t v110 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v97 = (char *)v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DA0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v113 = (uint64_t)v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v111 = (char *)v85 - v10;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DA8);
  uint64_t v11 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  unint64_t v13 = (char *)v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DB0);
  MEMORY[0x1F4188790](v105);
  uint64_t v15 = (char *)v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DB8);
  MEMORY[0x1F4188790](v106);
  uint64_t v93 = (char *)v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DC0);
  uint64_t v92 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v91 = (char *)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v90 = (char *)v85 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v104 = (char *)v85 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v103 = (char *)v85 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DC8);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v109 = (uint64_t)v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v115 = (uint64_t)v85 - v29;
  uint64_t v108 = v2;
  uint64_t v30 = v1;
  uint64_t v31 = *(void *)(v1 + *(int *)(v2 + 24));
  if (v31 && *(void *)(v31 + 16))
  {
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v89 = ObjCClassFromMetadata;
    uint64_t v33 = self;
    id v88 = v33;
    swift_bridgeObjectRetain();
    id v34 = objc_msgSend(v33, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v35 = sub_1DB1EF400();
    uint64_t v37 = v36;

    uint64_t v116 = v35;
    uint64_t v117 = v37;
    unint64_t v87 = sub_1DB0F0708();
    uint64_t v38 = sub_1DB1F0930();
    v85[0] = v85;
    uint64_t v116 = v38;
    uint64_t v117 = v39;
    uint64_t v118 = v40 & 1;
    uint64_t v119 = v41;
    MEMORY[0x1F4188790](v38);
    uint64_t v86 = v30;
    v85[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904670);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904E30);
    sub_1DB14F42C((unint64_t *)&qword_1EA904678, &qword_1EA904670);
    sub_1DB14F8D8(&qword_1EA904E38, &qword_1EA904E30);
    long long v42 = v103;
    sub_1DB1F0E90();
    swift_bridgeObjectRelease();
    id v43 = objc_msgSend(v88, sel_bundleForClass_, v89);
    uint64_t v44 = sub_1DB1EF400();
    uint64_t v46 = v45;

    uint64_t v116 = v44;
    uint64_t v117 = v46;
    uint64_t v116 = sub_1DB1F0930();
    uint64_t v117 = v47;
    uint64_t v118 = v48 & 1;
    uint64_t v119 = v49;
    MEMORY[0x1F4188790](v116);
    uint64_t v50 = (uint64_t)v15;
    uint64_t v51 = v86;
    uint64_t v52 = v104;
    sub_1DB1F0E90();
    uint64_t v53 = v92;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
    uint64_t v55 = v90;
    v54(v90, v42, v17);
    char v56 = v91;
    v54(v91, v52, v17);
    uint64_t v57 = (uint64_t)v93;
    v54(v93, v55, v17);
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904E40);
    v54((char *)(v57 + *(int *)(v58 + 48)), v56, v17);
    uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
    v59(v56, v17);
    uint64_t v30 = v51;
    v59(v55, v17);
    sub_1DB0E8B70(v57, v50, &qword_1EA904DB8);
    swift_storeEnumTagMultiPayload();
    sub_1DB0E3C44(&qword_1EA904DF8, &qword_1EA904DB8);
    sub_1DB14F578();
    sub_1DB1F0400();
    sub_1DB0E8BD4(v57, &qword_1EA904DB8);
    v59(v104, v17);
    v59(v103, v17);
  }
  else
  {
    MEMORY[0x1F4188790](v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DD0);
    sub_1DB14F8D8(&qword_1EA904DD8, &qword_1EA904DD0);
    sub_1DB1F0EB0();
    uint64_t v60 = v107;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v107);
    swift_storeEnumTagMultiPayload();
    sub_1DB0E3C44(&qword_1EA904DF8, &qword_1EA904DB8);
    sub_1DB14F578();
    sub_1DB1F0400();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v60);
  }
  if (*(unsigned char *)(v30 + *(int *)(v108 + 28)) == 1)
  {
    sub_1DB1489FC();
    type metadata accessor for _BundleObject();
    uint64_t v61 = swift_getObjCClassFromMetadata();
    id v62 = objc_msgSend(self, sel_bundleForClass_, v61);
    uint64_t v116 = sub_1DB1F0920();
    uint64_t v117 = v63;
    LOBYTE(v118) = v64 & 1;
    uint64_t v119 = v65;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904E10);
    sub_1DB0E3C44(&qword_1EA904E18, &qword_1EA904E10);
    uint64_t v66 = v94;
    sub_1DB1F0EC0();
    uint64_t v67 = v95;
    uint64_t v68 = (uint64_t)v98;
    uint64_t v69 = v96;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v98, v66, v96);
    *(unsigned char *)(v68 + *(int *)(v99 + 36)) = 0;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v69);
    uint64_t v70 = v102;
    sub_1DB14F608(v30, v102, type metadata accessor for LanguagesView);
    unint64_t v71 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    uint64_t v72 = swift_allocObject();
    sub_1DB14F674(v70, v72 + v71, type metadata accessor for LanguagesView);
    sub_1DB14F784();
    uint64_t v73 = v97;
    sub_1DB1F09E0();
    swift_release();
    sub_1DB0E8BD4(v68, &qword_1EA904D90);
    uint64_t v74 = v110;
    uint64_t v75 = (uint64_t)v111;
    uint64_t v76 = v73;
    uint64_t v77 = v112;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v111, v76, v112);
    uint64_t v78 = 0;
  }
  else
  {
    uint64_t v78 = 1;
    uint64_t v75 = (uint64_t)v111;
    uint64_t v77 = v112;
    uint64_t v74 = v110;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, v78, 1, v77);
  uint64_t v79 = v115;
  uint64_t v80 = v109;
  sub_1DB0E8B70(v115, v109, &qword_1EA904DC8);
  uint64_t v81 = v113;
  sub_1DB0E8B70(v75, v113, &qword_1EA904DA0);
  uint64_t v82 = v114;
  sub_1DB0E8B70(v80, v114, &qword_1EA904DC8);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904E08);
  sub_1DB0E8B70(v81, v82 + *(int *)(v83 + 48), &qword_1EA904DA0);
  sub_1DB0E8BD4(v75, &qword_1EA904DA0);
  sub_1DB0E8BD4(v79, &qword_1EA904DC8);
  sub_1DB0E8BD4(v81, &qword_1EA904DA0);
  return sub_1DB0E8BD4(v80, &qword_1EA904DC8);
}

uint64_t sub_1DB149C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguagesView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  v10[1] = a1;
  swift_getKeyPath();
  sub_1DB14F608(a2, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguagesView);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1DB14F674((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for LanguagesView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904830);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DE8);
  sub_1DB0E3C44(&qword_1EA904838, &qword_1EA904830);
  sub_1DB14F4A8();
  return sub_1DB1F0E70();
}

uint64_t sub_1DB149E04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguagesView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  v8[1] = sub_1DB148BC8();
  swift_getKeyPath();
  sub_1DB14F608(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguagesView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1DB14F674((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for LanguagesView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904830);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DE8);
  sub_1DB0E3C44(&qword_1EA904838, &qword_1EA904830);
  sub_1DB14F4A8();
  return sub_1DB1F0E70();
}

uint64_t sub_1DB149FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for LanguageListButton(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DE8);
  __n128 v17 = MEMORY[0x1F4188790](v36);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  uint64_t v37 = a1;
  v20(v13, a1, v10, v17);
  uint64_t v21 = type metadata accessor for LanguagesView(0);
  uint64_t v22 = a2 + *(int *)(v21 + 44);
  long long v23 = *(_OWORD *)v22;
  uint64_t v24 = *(void *)(v22 + 16);
  long long v41 = v23;
  uint64_t v42 = v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EE8);
  MEMORY[0x1E018ADF0](&v43, v25);
  uint64_t v26 = a2;
  if (v43) {
    uint64_t v26 = a2 + *(int *)(v21 + 20);
  }
  sub_1DB0E8B70(v26, (uint64_t)v9, &qword_1EA9047B8);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&v16[v14[7]] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
  sub_1DB0F1454((uint64_t)v9, (uint64_t)&v16[v14[5]], &qword_1EA9047B8);
  uint64_t v28 = &v16[v14[6]];
  *(void *)uint64_t v28 = KeyPath;
  v28[8] = 0;
  char v29 = sub_1DB14853C(v37);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = (v29 & 1) == 0;
  sub_1DB14F608((uint64_t)v16, (uint64_t)v19, type metadata accessor for LanguageListButton);
  uint64_t v32 = (uint64_t *)&v19[*(int *)(v36 + 36)];
  uint64_t v33 = v39;
  *uint64_t v32 = v30;
  v32[1] = v33;
  void v32[2] = v31;
  sub_1DB14FC24((uint64_t)v16);
  return sub_1DB0F1454((uint64_t)v19, v40, &qword_1EA904DE8);
}

uint64_t sub_1DB14A314(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguagesView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  type metadata accessor for LanguagesService();
  sub_1DB14FC80(&qword_1EA904450, (void (*)(uint64_t))type metadata accessor for LanguagesService);
  sub_1DB1EFB50();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  sub_1DB14F608(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LanguagesView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1DB14F674((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for LanguagesView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DE8);
  sub_1DB0E3C44(&qword_1EBA4D8A8, &qword_1EBA4D8A0);
  sub_1DB14F4A8();
  sub_1DB1502F4();
  return sub_1DB1F0E80();
}

uint64_t sub_1DB14A584@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1DB1EF6B0();
  uint64_t v8 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v34 - v11;
  unint64_t v13 = (int *)type metadata accessor for LanguageListButton(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904DE8);
  MEMORY[0x1F4188790](v35);
  __n128 v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  swift_bridgeObjectRetain();
  v34[1] = v18;
  sub_1DB1EF580();
  uint64_t v19 = type metadata accessor for LanguagesView(0);
  uint64_t v20 = a2 + *(int *)(v19 + 44);
  long long v21 = *(_OWORD *)v20;
  uint64_t v22 = *(void *)(v20 + 16);
  long long v39 = v21;
  uint64_t v40 = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903EE8);
  MEMORY[0x1E018ADF0](&v41, v23);
  uint64_t v24 = a2;
  if (v41) {
    uint64_t v24 = a2 + *(int *)(v19 + 20);
  }
  sub_1DB0E8B70(v24, (uint64_t)v7, &qword_1EA9047B8);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&v15[v13[7]] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v12, v37);
  sub_1DB0F1454((uint64_t)v7, (uint64_t)&v15[v13[5]], &qword_1EA9047B8);
  uint64_t v27 = &v15[v13[6]];
  *(void *)uint64_t v27 = KeyPath;
  v27[8] = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = (uint64_t)v36;
  sub_1DB1EF580();
  char v29 = sub_1DB14853C(v28);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v28, v26);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = (v29 & 1) == 0;
  sub_1DB14F608((uint64_t)v15, (uint64_t)v17, type metadata accessor for LanguageListButton);
  uint64_t v32 = (uint64_t *)&v17[*(int *)(v35 + 36)];
  *uint64_t v32 = v30;
  v32[1] = (uint64_t)sub_1DB150394;
  void v32[2] = v31;
  sub_1DB14FC24((uint64_t)v15);
  return sub_1DB0F1454((uint64_t)v17, v38, &qword_1EA904DE8);
}

__n128 sub_1DB14A940@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DB1F01C0();
  sub_1DB14A9A4((uint64_t)&v8);
  char v3 = v9;
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  char v6 = v12;
  __n128 result = v8;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  return result;
}

uint64_t sub_1DB14A9A4@<X0>(uint64_t a1@<X8>)
{
  sub_1DB1F0250();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_1DB1F0920();
  uint64_t v6 = v5;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v8 = v7 & 1;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  sub_1DB0EB2A4(v4, v5, v7 & 1);
  swift_bridgeObjectRetain();
  sub_1DB0EB23C(v4, v6, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB14AAC4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DB1EF480();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EFCF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguagesView(0);
  sub_1DB1C5B1C((uint64_t)v10);
  sub_1DB1EF470();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_1DB1EFCC0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t LanguagesView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v1 = sub_1DB1F04A0();
  uint64_t v38 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CB0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CB8);
  uint64_t v40 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CC0);
  uint64_t v42 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  long long v39 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (char *)v37 - v12;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CC8);
  MEMORY[0x1F4188790](v44);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CD0);
  MEMORY[0x1F4188790](v15);
  __n128 v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = &type metadata for TranslateFeatures;
  unint64_t v52 = sub_1DB109D10();
  LOBYTE(v48) = 4;
  char v18 = sub_1DB1EF710();
  uint64_t v19 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v48);
  if (v18)
  {
    sub_1DB148E80((uint64_t)v17);
    sub_1DB0E8B70((uint64_t)v17, (uint64_t)v14, &qword_1EA904CD0);
    swift_storeEnumTagMultiPayload();
    sub_1DB0E3C44(&qword_1EA904CD8, &qword_1EA904CD0);
    uint64_t v20 = sub_1DB0E3C44(&qword_1EA904CE0, &qword_1EA904CB0);
    uint64_t v48 = v4;
    uint64_t v49 = v1;
    uint64_t v50 = v20;
    uint64_t v51 = (ValueMetadata *)MEMORY[0x1E4F3D8F0];
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v48 = v45;
    uint64_t v49 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_1DB1F0400();
    return sub_1DB0E8BD4((uint64_t)v17, &qword_1EA904CD0);
  }
  else
  {
    MEMORY[0x1F4188790](v19);
    uint64_t v43 = sub_1DB0E3C44(&qword_1EA904CD8, &qword_1EA904CD0);
    v37[1] = v15;
    sub_1DB1F0850();
    sub_1DB1F0490();
    uint64_t v23 = sub_1DB0E3C44(&qword_1EA904CE0, &qword_1EA904CB0);
    sub_1DB1F0B70();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1DB1F0250();
    type metadata accessor for _BundleObject();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v25 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v26 = sub_1DB1F0920();
    uint64_t v28 = v27;
    uint64_t v48 = v4;
    uint64_t v49 = v1;
    char v30 = v29 & 1;
    uint64_t v50 = v23;
    uint64_t v51 = (ValueMetadata *)MEMORY[0x1E4F3D8F0];
    uint64_t v31 = swift_getOpaqueTypeConformance2();
    uint64_t v32 = v39;
    uint64_t v33 = v45;
    sub_1DB1F0A30();
    sub_1DB0EB23C(v26, v28, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v33);
    uint64_t v35 = v41;
    uint64_t v34 = v42;
    uint64_t v36 = v46;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v32, v46);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v14, v35, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = v33;
    uint64_t v49 = v31;
    swift_getOpaqueTypeConformance2();
    sub_1DB1F0400();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  }
}

uint64_t sub_1DB14B430@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB148E80(a1);
}

uint64_t sub_1DB14B458(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFE90();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  type metadata accessor for LanguageListButton(0);
  sub_1DB0E8B70((uint64_t)v11, (uint64_t)v8, &qword_1EBA4E570);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  sub_1DB1F0E00();
  sub_1DB0E8BD4((uint64_t)v11, &qword_1EBA4E570);
  sub_1DB1C5868((uint64_t)v5);
  MEMORY[0x1E018ADF0](v3);
  sub_1DB1EFE80();
  sub_1DB1F0E00();
  return sub_1DB0E8BD4((uint64_t)v5, &qword_1EA9044E8);
}

uint64_t sub_1DB14B6A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D38);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = a1;
  uint64_t v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904670);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D50);
  sub_1DB14F42C((unint64_t *)&qword_1EA904678, &qword_1EA904670);
  sub_1DB14F42C(&qword_1EA904D58, &qword_1EA904D50);
  sub_1DB1F0CE0();
  sub_1DB0E3C44(&qword_1EA904D40, &qword_1EA904D38);
  sub_1DB14F3C8();
  sub_1DB1F0980();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DB14B880@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v8 = Locale.sqDisplayName(context:in:)(0, (uint64_t)v7);
  uint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10)
  {
    v31[2] = v8;
    v31[3] = v10;
    sub_1DB0F0708();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DB1F0930();
    uint64_t v14 = v13;
    char v16 = v15 & 1;
    uint64_t v17 = a1 + *(int *)(type metadata accessor for LanguageListButton(0) + 24);
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    sub_1DB118D3C(*(void *)v17, v19);
    char v20 = sub_1DB1C5664(v18, v19);
    sub_1DB118DE4(v18, v19);
    long long v21 = self;
    uint64_t v22 = &selRef_labelColor;
    if ((v20 & 1) == 0) {
      uint64_t v22 = &selRef_secondaryLabelColor;
    }
    MEMORY[0x1E018ABF0]([v21 *v22]);
    v31[0] = a2;
    uint64_t v23 = sub_1DB1F08E0();
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v29 = v28;
    swift_release();
    uint64_t v30 = v27 & 1;
    sub_1DB0EB23C(v12, v14, v16);
    swift_bridgeObjectRelease();
    a2 = (uint64_t *)v31[0];
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    uint64_t v30 = 0;
    uint64_t v29 = 0;
  }
  *a2 = v23;
  a2[1] = v25;
  a2[2] = v30;
  a2[3] = v29;
  return result;
}

uint64_t sub_1DB14BAAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguageListButton(0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  MEMORY[0x1E018ADF0](v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E570);
    sub_1DB1EF590();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E570);
    uint64_t v11 = sub_1DB1EF590();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v14 = sub_1DB1EF590();
    if (v13)
    {
      if (v11 == v14 && v13 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v17 = sub_1DB1F1DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0) {
          goto LABEL_4;
        }
      }
      uint64_t result = sub_1DB1F0C90();
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_4:
  uint64_t result = 0;
LABEL_5:
  *a1 = result;
  return result;
}

uint64_t sub_1DB14BCF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](a1 - 8);
  sub_1DB14F608(v1, (uint64_t)&v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for LanguageListButton);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_1DB14F674((uint64_t)&v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], v5 + v4, type metadata accessor for LanguageListButton);
  uint64_t v11 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D30);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904D38);
  uint64_t v7 = sub_1DB0E3C44(&qword_1EA904D40, &qword_1EA904D38);
  unint64_t v8 = sub_1DB14F3C8();
  uint64_t v12 = v6;
  uint64_t v13 = &type metadata for ListLabelStyle;
  uint64_t v14 = v7;
  unint64_t v15 = v8;
  swift_getOpaqueTypeConformance2();
  return sub_1DB1F0D70();
}

uint64_t ListLabelStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1DB1F01C0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CE8);
  return sub_1DB14BF10(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1DB14BF10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v40 = sub_1DB1F0CC0();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  long long v39 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DB1F0520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D60);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D68);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v37 = (uint64_t)&v36 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D70);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v36 = (uint64_t)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v36 - v19;
  *(void *)char v20 = sub_1DB1F02F0();
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D78);
  sub_1DB1F0550();
  sub_1DB1F0530();
  sub_1DB1F0740();
  sub_1DB1F07A0();
  uint64_t v21 = sub_1DB1F07F0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v23 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  uint64_t *v23 = KeyPath;
  v23[1] = v21;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  uint64_t v26 = v40;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v39, *MEMORY[0x1E4F3EC70], v40);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D848);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)v28 + *(int *)(v29 + 28), v24, v26);
  uint64_t *v28 = v27;
  sub_1DB0E8B70((uint64_t)v9, (uint64_t)v13, &qword_1EA904D60);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v26);
  sub_1DB0E8BD4((uint64_t)v9, &qword_1EA904D60);
  uint64_t v30 = v37;
  sub_1DB0F1454((uint64_t)v13, v37, &qword_1EA904D68);
  uint64_t v31 = v36;
  sub_1DB0E8B70((uint64_t)v20, v36, &qword_1EA904D70);
  sub_1DB0E8B70(v30, (uint64_t)v13, &qword_1EA904D68);
  uint64_t v32 = v41;
  sub_1DB0E8B70(v31, v41, &qword_1EA904D70);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904D80);
  uint64_t v34 = v32 + *(int *)(v33 + 48);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  sub_1DB0E8B70((uint64_t)v13, v32 + *(int *)(v33 + 64), &qword_1EA904D68);
  sub_1DB0E8BD4(v30, &qword_1EA904D68);
  sub_1DB0E8BD4((uint64_t)v20, &qword_1EA904D70);
  sub_1DB0E8BD4((uint64_t)v13, &qword_1EA904D68);
  return sub_1DB0E8BD4(v31, &qword_1EA904D70);
}

uint64_t sub_1DB14C39C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB14C3B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB14C3D4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1DB1F01C0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904CE8);
  return sub_1DB14BF10(a1 + *(int *)(v2 + 44));
}

char *initializeBufferWithCopyOfBuffer for LanguagesView(char *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_retain();
    swift_retain();
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
    uint64_t v9 = *(int *)(v8 + 32);
    uint64_t v10 = sub_1DB1EF6B0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v36(&a2[v9], 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(&v7[v9], &a2[v9], *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v7[v9], &a2[v9], v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(&v7[v9], 0, 1, v10);
      uint64_t v9 = *(int *)(v8 + 32);
    }
    uint64_t v13 = a3[5];
    uint64_t v14 = &v7[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = &v14[v9];
    uint64_t v18 = &v15[v9];
    swift_retain();
    swift_retain();
    if (v36(v18, 1, v10))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    }
    uint64_t v20 = a3[7];
    *(void *)&v7[a3[6]] = *(void *)&a2[a3[6]];
    v7[v20] = a2[v20];
    uint64_t v21 = a3[9];
    v7[a3[8]] = a2[a3[8]];
    uint64_t v22 = &v7[v21];
    uint64_t v23 = &a2[v21];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_1DB1EFCF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[10];
    uint64_t v26 = &v7[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *((void *)v27 + 1);
    char v30 = v27[16];
    sub_1DB14C78C();
    *(void *)uint64_t v26 = v28;
    *((void *)v26 + 1) = v29;
    v26[16] = v30;
    uint64_t v31 = a3[11];
    uint64_t v32 = &v7[v31];
    uint64_t v33 = &a2[v31];
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    *((void *)v32 + 2) = *((void *)v33 + 2);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1DB14C78C()
{
  return swift_retain();
}

uint64_t destroy for LanguagesView(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v5 = a1 + *(int *)(v4 + 32);
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(v4 + 32);
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1DB1EFCF0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  sub_1DB14C974();
  swift_release();
  return swift_release();
}

uint64_t sub_1DB14C974()
{
  return swift_release();
}

char *initializeWithCopy for LanguagesView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v8 = *(int *)(v7 + 32);
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v35(&a2[v8], 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(&a1[v8], &a2[v8], *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&a1[v8], &a2[v8], v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(&a1[v8], 0, 1, v9);
    uint64_t v8 = *(int *)(v7 + 32);
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = &v13[v8];
  uint64_t v17 = &v14[v8];
  swift_retain();
  swift_retain();
  if (v35(v17, 1, v9))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  }
  uint64_t v19 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_1DB1EFCF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *(void *)uint64_t v21 = *(void *)v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[10];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *((void *)v26 + 1);
  char v29 = v26[16];
  sub_1DB14C78C();
  *(void *)uint64_t v25 = v27;
  *((void *)v25 + 1) = v28;
  unsigned char v25[16] = v29;
  uint64_t v30 = a3[11];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  *((void *)v31 + 2) = *((void *)v32 + 2);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LanguagesView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v6 = *(int *)(v5 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[5];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  uint64_t v18 = *(int *)(v5 + 32);
  uint64_t v19 = &v16[v18];
  uint64_t v20 = &v17[v18];
  LODWORD(v16) = v11(&v16[v18], 1, v9);
  int v21 = v11(v20, 1, v9);
  if (v16)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
LABEL_12:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v19, v20, v9);
LABEL_13:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v23 = a3[9];
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    sub_1DB0E8BD4((uint64_t)a1 + v23, &qword_1EA9047B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_1DB1EFCF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = a3[10];
  uint64_t v28 = (char *)a1 + v27;
  char v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *((void *)v29 + 1);
  char v32 = v29[16];
  sub_1DB14C78C();
  *(void *)uint64_t v28 = v30;
  *((void *)v28 + 1) = v31;
  v28[16] = v32;
  sub_1DB14C974();
  uint64_t v33 = a3[11];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  swift_retain();
  swift_release();
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_retain();
  swift_release();
  *((void *)v34 + 2) = *((void *)v35 + 2);
  return a1;
}

char *initializeWithTake for LanguagesView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v8 = *(int *)(v7 + 32);
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  char v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v32(&a2[v8], 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(&a1[v8], &a2[v8], *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a1[v8], &a2[v8], v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(&a1[v8], 0, 1, v9);
    uint64_t v8 = *(int *)(v7 + 32);
  }
  uint64_t v12 = a3[5];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)int v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = &v13[v8];
  uint64_t v17 = &v14[v8];
  if (v32(&v14[v8], 1, v9))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  }
  uint64_t v19 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  int v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_1DB1EFCF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  char v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  *(_OWORD *)char v29 = *(_OWORD *)v30;
  *((void *)v29 + 2) = *((void *)v30 + 2);
  return a1;
}

void *assignWithTake for LanguagesView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v6 = *(int *)(v5 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[5];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_release();
  uint64_t v18 = *(int *)(v5 + 32);
  uint64_t v19 = &v16[v18];
  uint64_t v20 = &v17[v18];
  LODWORD(v17) = v11(v19, 1, v9);
  int v21 = v11(v20, 1, v9);
  if (v17)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
LABEL_12:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v19, v20, v9);
LABEL_13:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  if (a1 != a2)
  {
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DB0E8BD4((uint64_t)a1 + v24, &qword_1EA9047B0);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_1DB1EFCF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  char v32 = v31[16];
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  v30[16] = v32;
  sub_1DB14C974();
  uint64_t v33 = a3[11];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (void *)((char *)a2 + v33);
  *(void *)((char *)a1 + v33) = *v35;
  swift_release();
  *((void *)v34 + 1) = v35[1];
  swift_release();
  *((void *)v34 + 2) = v35[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagesView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB14D814);
}

uint64_t sub_1DB14D814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047D0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 44) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagesView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB14D948);
}

uint64_t sub_1DB14D948(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047D0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 44) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DB14DA64()
{
  sub_1DB14F100(319, (unint64_t *)&qword_1EA9047E8, &qword_1EBA4E570, MEMORY[0x1E4F3EE18]);
  if (v0 <= 0x3F)
  {
    sub_1DB11DBFC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for ListLabelStyle()
{
  return &type metadata for ListLabelStyle;
}

unint64_t sub_1DB14DB90()
{
  unint64_t result = qword_1EA904D00;
  if (!qword_1EA904D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904D08);
    sub_1DB0E3C44(&qword_1EA904CD8, &qword_1EA904CD0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904CB8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904CB0);
    sub_1DB1F04A0();
    sub_1DB0E3C44(&qword_1EA904CE0, &qword_1EA904CB0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904D00);
  }
  return result;
}

uint64_t sub_1DB14DCE4()
{
  return sub_1DB0E3C44(&qword_1EA904D10, &qword_1EA904D18);
}

uint64_t *sub_1DB14DD20(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DB1EF6B0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
    *uint64_t v11 = *(uint64_t *)((char *)a2 + v10);
    v11[1] = v13;
    swift_retain();
    swift_retain();
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
    uint64_t v15 = (char *)v11 + v14;
    uint64_t v16 = &v12[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&v12[v14], 1, v7))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v15, (uint64_t *)v16, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    uint64_t v19 = a3[6];
    uint64_t v20 = (char *)a1 + v19;
    int v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)v21;
    char v23 = v21[8];
    sub_1DB118D3C(*(void *)v21, v23);
    *(void *)uint64_t v20 = v22;
    v20[8] = v23;
    uint64_t v24 = a3[7];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v25 = *v26;
    if (EnumCaseMultiPayload == 1)
    {
      v25[1] = v26[1];
      swift_retain();
      swift_retain();
      uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
      uint64_t v29 = (char *)v25 + v28;
      uint64_t v30 = (char *)v26 + v28;
      uint64_t v31 = sub_1DB1EFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DB14DFDC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + a2[5];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4)) {
    v6(v8, v4);
  }
  sub_1DB118DE4(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v9 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v12 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v13 = sub_1DB1EFE90();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    return v14(v12, v13);
  }
  return result;
}

uint64_t sub_1DB14E1A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *uint64_t v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  swift_retain();
  swift_retain();
  uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v14 = (char *)v10 + v13;
  uint64_t v15 = (const void *)(v11 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11 + v13, 1, v6))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_1DB118D3C(*(void *)v19, v21);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  uint64_t v22 = a3[7];
  char v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  void *v23 = *v24;
  if (EnumCaseMultiPayload == 1)
  {
    v23[1] = v24[1];
    swift_retain();
    swift_retain();
    uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v27 = (char *)v23 + v26;
    uint64_t v28 = (char *)v24 + v26;
    uint64_t v29 = sub_1DB1EFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DB14E404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v34 = a1;
  uint64_t v35 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  *uint64_t v10 = *(void *)(a2 + v9);
  swift_retain();
  swift_release();
  v10[1] = *(void *)(v11 + 8);
  swift_retain();
  swift_release();
  uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v13 = (char *)v10 + v12;
  uint64_t v14 = (char *)(v11 + v12);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(v11) = v15(v13, 1, v6);
  int v16 = v15(v14, 1, v6);
  if (v11)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  uint64_t v18 = *(int *)(v35 + 24);
  uint64_t v19 = v34 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_1DB118D3C(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  sub_1DB118DE4(v23, v24);
  if (v34 != a2)
  {
    uint64_t v25 = *(int *)(v35 + 28);
    uint64_t v26 = (void *)(v34 + v25);
    uint64_t v27 = (void *)(a2 + v25);
    sub_1DB0E8BD4(v34 + v25, &qword_1EA904440);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    void *v26 = *v27;
    if (EnumCaseMultiPayload == 1)
    {
      v26[1] = v27[1];
      swift_retain();
      swift_retain();
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
      uint64_t v30 = (char *)v26 + v29;
      uint64_t v31 = (char *)v27 + v29;
      uint64_t v32 = sub_1DB1EFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v34;
}

uint64_t sub_1DB14E718(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *uint64_t v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v14 = (char *)v10 + v13;
  uint64_t v15 = (const void *)(v11 + v13);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = (void *)(a1 + v18);
  char v22 = (void *)(a2 + v18);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v24;
    uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v26 = (char *)v21 + v25;
    uint64_t v27 = (char *)v22 + v25;
    uint64_t v28 = sub_1DB1EFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1DB14E960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v35 = a1;
  uint64_t v36 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  *uint64_t v10 = *(void *)(a2 + v9);
  swift_release();
  v10[1] = *(void *)(v11 + 8);
  swift_release();
  uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  uint64_t v13 = (char *)v10 + v12;
  uint64_t v14 = (char *)(v11 + v12);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v16 = v15(v13, 1, v6);
  int v17 = v15(v14, 1, v6);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  uint64_t v19 = *(int *)(v36 + 24);
  uint64_t v20 = v35 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  LOBYTE(v21) = *((unsigned char *)v21 + 8);
  uint64_t v23 = *(void *)v20;
  char v24 = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = (_BYTE)v21;
  sub_1DB118DE4(v23, v24);
  if (v35 != a2)
  {
    uint64_t v25 = *(int *)(v36 + 28);
    uint64_t v26 = (void *)(v35 + v25);
    uint64_t v27 = (void *)(a2 + v25);
    sub_1DB0E8BD4(v35 + v25, &qword_1EA904440);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = v27[1];
      void *v26 = *v27;
      v26[1] = v29;
      uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
      uint64_t v31 = (char *)v26 + v30;
      uint64_t v32 = (char *)v27 + v30;
      uint64_t v33 = sub_1DB1EFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  return v35;
}

uint64_t sub_1DB14EC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB14EC6C);
}

uint64_t sub_1DB14EC6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6] + 8);
    if (v14 > 1) {
      return (v14 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044F0);
    int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1DB14EDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB14EE04);
}

uint64_t sub_1DB14EE04(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044F0);
    int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[7];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for LanguageListButton(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA904D20);
}

void sub_1DB14EFAC()
{
  sub_1DB1EF6B0();
  if (v0 <= 0x3F)
  {
    sub_1DB14F100(319, (unint64_t *)&qword_1EA9047E8, &qword_1EBA4E570, MEMORY[0x1E4F3EE18]);
    if (v1 <= 0x3F)
    {
      sub_1DB14F100(319, (unint64_t *)&qword_1EA904508, &qword_1EA9044E8, MEMORY[0x1E4F3C648]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1DB14F100(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DB14F160()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB14F17C()
{
  unint64_t v1 = (int *)type metadata accessor for LanguageListButton(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  uint64_t v6 = v2 + v1[5];
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8) + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3)) {
    v5(v7, v3);
  }
  sub_1DB118DE4(*(void *)(v2 + v1[6]), *(unsigned char *)(v2 + v1[6] + 8));
  uint64_t v8 = v2 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904440);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v10 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9044E8) + 32);
    uint64_t v11 = sub_1DB1EFE90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  return swift_deallocObject();
}

uint64_t sub_1DB14F394()
{
  return sub_1DB14F708(type metadata accessor for LanguageListButton, sub_1DB14B458);
}

uint64_t sub_1DB14F3C0()
{
  return sub_1DB14B6A4(*(void *)(v0 + 16));
}

unint64_t sub_1DB14F3C8()
{
  unint64_t result = qword_1EA904D48;
  if (!qword_1EA904D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904D48);
  }
  return result;
}

uint64_t sub_1DB14F41C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DB14B880(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DB14F424@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DB14BAAC(a1);
}

uint64_t sub_1DB14F42C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB14F4A0()
{
  return sub_1DB14A314(*(void *)(v0 + 16));
}

unint64_t sub_1DB14F4A8()
{
  unint64_t result = qword_1EA904DE0;
  if (!qword_1EA904DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904DE8);
    sub_1DB14FC80(&qword_1EA904DF0, (void (*)(uint64_t))type metadata accessor for LanguageListButton);
    sub_1DB0E3C44(&qword_1EBA4D850, &qword_1EBA4D858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904DE0);
  }
  return result;
}

unint64_t sub_1DB14F578()
{
  unint64_t result = qword_1EA904E00;
  if (!qword_1EA904E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904DA8);
    sub_1DB14F8D8(&qword_1EA904DD8, &qword_1EA904DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904E00);
  }
  return result;
}

uint64_t sub_1DB14F608(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB14F674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB14F6DC()
{
  return sub_1DB14F708(type metadata accessor for LanguagesView, (uint64_t (*)(uint64_t))sub_1DB14AAC4);
}

uint64_t sub_1DB14F708(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4);
}

unint64_t sub_1DB14F784()
{
  unint64_t result = qword_1EA904E20;
  if (!qword_1EA904E20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904D90);
    sub_1DB14F824();
    sub_1DB0E3C44(&qword_1EA903EC0, &qword_1EA903EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904E20);
  }
  return result;
}

unint64_t sub_1DB14F824()
{
  unint64_t result = qword_1EA904E28;
  if (!qword_1EA904E28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904D88);
    sub_1DB0E3C44(&qword_1EA904E18, &qword_1EA904E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904E28);
  }
  return result;
}

uint64_t sub_1DB14F8D0()
{
  return sub_1DB149C44(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DB14F8D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1DB14F4A8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB14F940()
{
  return sub_1DB149E04(*(void *)(v0 + 16));
}

uint64_t sub_1DB14F948@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB1EF590();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v1 = type metadata accessor for LanguagesView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  uint64_t v4 = v2 + *(int *)(v3 + 32);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = v2 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  uint64_t v9 = v8 + *(int *)(v3 + 32);
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + *(int *)(v1 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1DB1EFCF0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  sub_1DB14C974();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB14FBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DB1501CC(a1, (uint64_t)&unk_1F3546248, (uint64_t)sub_1DB11A9D4, a2);
}

uint64_t sub_1DB14FC14()
{
  return swift_deallocObject();
}

uint64_t sub_1DB14FC24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguageListButton(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB14FC80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1DB14FCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v32 - v12;
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)v32 - v16;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v39 = *(void *)(a1 + 16);
  if (v39)
  {
    v32[1] = v2;
    unint64_t v17 = 0;
    uint64_t v46 = a2;
    uint64_t v47 = v9 + 16;
    uint64_t v37 = v9 + 48;
    uint64_t v38 = v9 + 56;
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v45 = a2 + 56;
    uint64_t v18 = (void (**)(char *, uint64_t))(v9 + 8);
    v32[0] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v35 = v7;
    uint64_t v36 = a1;
    uint64_t v34 = v9;
    while (v17 < *(void *)(a1 + 16))
    {
      unint64_t v42 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v19 = *(void *)(v9 + 72);
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
      v20(v7, a1 + v42 + v19 * v17, v8, v15);
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v33)(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
        goto LABEL_20;
      }
      unint64_t v43 = v17;
      uint64_t v41 = *v44;
      v41(v48, v7, v8);
      uint64_t v21 = v46;
      if (*(void *)(v46 + 16)
        && (sub_1DB14FC80(&qword_1EA904860, MEMORY[0x1E4F27A78]),
            uint64_t v22 = sub_1DB1F11D0(),
            uint64_t v23 = -1 << *(unsigned char *)(v21 + 32),
            unint64_t v24 = v22 & ~v23,
            ((*(void *)(v45 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) != 0))
      {
        uint64_t v25 = ~v23;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v20)(v13, *(void *)(v21 + 48) + v24 * v19, v8);
          sub_1DB14FC80(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
          char v26 = sub_1DB1F1230();
          uint64_t v27 = *v18;
          (*v18)(v13, v8);
          if (v26) {
            break;
          }
          unint64_t v24 = (v24 + 1) & v25;
          uint64_t v21 = v46;
          if (((*(void *)(v45 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
            goto LABEL_12;
          }
        }
        v27(v48, v8);
        uint64_t v7 = v35;
        a1 = v36;
        uint64_t v9 = v34;
      }
      else
      {
LABEL_12:
        uint64_t v28 = (void (*)(unint64_t, char *, uint64_t))v41;
        v41(v40, v48, v8);
        uint64_t v29 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12E97C(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v49;
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        uint64_t v9 = v34;
        if (v31 >= v30 >> 1)
        {
          sub_1DB12E97C(v30 > 1, v31 + 1, 1);
          uint64_t v29 = v49;
        }
        *(void *)(v29 + 16) = v31 + 1;
        v28(v29 + v42 + v31 * v19, v40, v8);
        uint64_t v49 = v29;
        uint64_t v7 = v35;
        a1 = v36;
      }
      unint64_t v17 = v43 + 1;
      if (v43 + 1 == v39)
      {
        v33(v7, 1, 1, v8, v15);
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v7, 1, 1, v8, v15);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4E570);
  }
}

uint64_t sub_1DB1501AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DB1501CC(a1, (uint64_t)&unk_1F3546298, (uint64_t)sub_1DB150394, a2);
}

uint64_t sub_1DB1501CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(type metadata accessor for LanguagesView(0) - 8);
  return sub_1DB149FC0(a1, v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a2, a3, a4);
}

uint64_t sub_1DB150258()
{
  return swift_deallocObject();
}

uint64_t sub_1DB150274@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LanguagesView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1DB14A584(a1, v6, a2);
}

unint64_t sub_1DB1502F4()
{
  unint64_t result = qword_1EA904E48;
  if (!qword_1EA904E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904E48);
  }
  return result;
}

uint64_t sub_1DB150348()
{
  return swift_deallocObject();
}

uint64_t sub_1DB150358()
{
  return sub_1DB0E3C44(&qword_1EA904E50, &qword_1EA904E58);
}

uint64_t sub_1DB150398()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  return MEMORY[0x1E018CB30](v1);
}

void sub_1DB1503E8(void *a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
}

void (*sub_1DB150450(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1E018CB30](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1DB1504D8;
}

void sub_1DB1504D8(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  *(void *)((char *)(*a1)[6] + (void)(*a1)[5] + 8) = (*a1)[4];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  free(v3);
}

id LanguagesViewController.__allocating_init(initialSelection:showsCloseButton:requireOnDevice:)(uint64_t a1, char a2, char a3)
{
  id v7 = objc_allocWithZone(v3);
  return LanguagesViewController.init(initialSelection:showsCloseButton:requireOnDevice:)(a1, a2, a3);
}

id LanguagesViewController.init(initialSelection:showsCloseButton:requireOnDevice:)(uint64_t a1, char a2, char a3)
{
  *(void *)&v3[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl] = 0;
  uint64_t v6 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  type metadata accessor for LanguageSelectionModel();
  swift_allocObject();
  id v7 = v3;
  *(void *)&v3[v6] = sub_1DB125B34();
  *(void *)&v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_subscriptions] = MEMORY[0x1E4FBC860];
  v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_showsCloseButton] = a2;
  v7[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_requireOnDevice] = a3;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for LanguagesViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF920();
  return v8;
}

uint64_t type metadata accessor for LanguagesViewController()
{
  return self;
}

uint64_t sub_1DB1507E0()
{
  return sub_1DB150B30();
}

uint64_t sub_1DB1507F4(uint64_t a1)
{
  return sub_1DB150BCC(a1);
}

void (*sub_1DB150808(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void *v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  uint64_t v5 = malloc(v4);
  uint64_t v6 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  v3[4] = v5;
  v3[5] = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  return sub_1DB150918;
}

void sub_1DB150918(uint64_t a1, char a2)
{
}

uint64_t sub_1DB15092C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DB1509BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v2 - 8);
  size_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v12 - v6;
  MEMORY[0x1F4188790](v8);
  objc_super v10 = (char *)&v12 - v9;
  sub_1DB11FF38(a1, (uint64_t)&v12 - v9);
  sub_1DB11FF38((uint64_t)v10, (uint64_t)v7);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB11FF38((uint64_t)v7, (uint64_t)v4);
  swift_retain_n();
  sub_1DB1EF920();
  sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4E570);
  swift_release();
  return sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4E570);
}

uint64_t sub_1DB150B1C()
{
  return sub_1DB150B30();
}

uint64_t sub_1DB150B30()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DB150BB8(uint64_t a1)
{
  return sub_1DB150BCC(a1);
}

uint64_t sub_1DB150BCC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v2 - 8);
  size_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v9 - v6;
  sub_1DB11FF38(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB11FF38((uint64_t)v7, (uint64_t)v4);
  swift_retain_n();
  sub_1DB1EF920();
  sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4E570);
  swift_release();
  return sub_1DB0E8BD4(a1, &qword_1EBA4E570);
}

void (*sub_1DB150CF8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void *v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  uint64_t v5 = malloc(v4);
  uint64_t v6 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  v3[4] = v5;
  v3[5] = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  return sub_1DB150E08;
}

void sub_1DB150E08(uint64_t a1, char a2)
{
}

void sub_1DB150E1C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  size_t v4 = *(void **)(*(void *)a1 + 16);
  uint64_t v5 = *(void **)(*(void *)a1 + 24);
  uint64_t v6 = *(void **)(*(void *)a1 + 8);
  if (a2)
  {
    sub_1DB11FF38(*(void *)(*(void *)a1 + 32), (uint64_t)v5);
    sub_1DB11FF38((uint64_t)v5, (uint64_t)v4);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DB11FF38((uint64_t)v4, (uint64_t)v6);
    swift_retain_n();
    sub_1DB1EF920();
    sub_1DB0E8BD4((uint64_t)v4, &qword_1EBA4E570);
    swift_release();
    sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4E570);
  }
  else
  {
    sub_1DB11FF38(*(void *)(*(void *)a1 + 32), (uint64_t)v5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DB11FF38((uint64_t)v5, (uint64_t)v4);
    swift_retain_n();
    sub_1DB1EF920();
    sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4E570);
    swift_release();
  }
  sub_1DB0E8BD4((uint64_t)v3, &qword_1EBA4E570);
  free(v3);
  free(v5);
  free(v4);
  free(v6);
  free(v2);
}

void sub_1DB150FB0()
{
  uint64_t v1 = v0;
  v91.receiver = v0;
  v91.super_class = (Class)type metadata accessor for LanguagesViewController();
  objc_msgSendSuper2(&v91, sel_viewDidLoad);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9049F8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DB1F4900;
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v89 = self;
  id v4 = objc_msgSend(v89, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v5 = sub_1DB1EF400();
  uint64_t v7 = v6;

  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 32) = v5;
  *(void *)(v2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  id v9 = objc_msgSend(v89, (SEL)&selRef_setDisableActions_ + 5, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v10 = sub_1DB1EF400();
  uint64_t v12 = v11;

  *(void *)(v2 + 88) = v8;
  *(void *)(v2 + 64) = v10;
  *(void *)(v2 + 72) = v12;
  id v13 = objc_allocWithZone(MEMORY[0x1E4FB1C10]);
  uint64_t v14 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithItems_, v14, 0xE000000000000000);

  objc_msgSend(v15, sel_addTarget_action_forControlEvents_, v1, sel_updateSelectedTarget, 4096);
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  objc_msgSend(v15, sel_setSelectedSegmentIndex_, v90);
  objc_msgSend(v15, sel_sizeToFit);
  objc_msgSend(v15, sel_frame);
  double Height = CGRectGetHeight(v92);
  unint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl];
  *(void *)&v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl] = v15;
  id v18 = v15;

  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v19, sel_addSubview_, v18);
  id v88 = v19;
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB21F8]), sel_initWithContentView_, v19);
  uint64_t v21 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DB1F6BE0;
  id v23 = objc_msgSend(v18, sel_heightAnchor);
  id v24 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToConstant_, Height);

  *(void *)(v22 + 32) = v24;
  id v25 = objc_msgSend(v18, sel_topAnchor);
  id v26 = objc_msgSend(v20, sel_topAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(void *)(v22 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v27;
  id v28 = objc_msgSend(v18, sel_leadingAnchor);
  id v29 = objc_msgSend(v20, sel_safeAreaLayoutGuide);
  id v30 = objc_msgSend(v29, sel_leadingAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 20.0);
  *(void *)(v22 + 48) = v31;
  id v32 = objc_msgSend(v20, sel_safeAreaLayoutGuide);
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = objc_msgSend(v18, sel_trailingAnchor);
  id v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v34, 20.0);

  *(void *)(v22 + 56) = v35;
  id v36 = objc_msgSend(v20, sel_bottomAnchor);
  id v37 = objc_msgSend(v18, sel_bottomAnchor);
  id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v37, 8.0);

  *(void *)(v22 + 64) = v38;
  sub_1DB1F14C0();
  sub_1DB0E2EFC(0, &qword_1EA904E90);
  uint64_t v39 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  id v87 = v21;
  objc_msgSend(v21, sel_activateConstraints_, v39);

  objc_msgSend(v20, sel_setPreferredHeight_, Height + 8.0);
  id v40 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v40, sel__setBottomPalette_, v20);

  id v41 = objc_msgSend(v1, sel_navigationItem);
  id v42 = objc_msgSend(v89, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DB1EF400();

  unint64_t v43 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_setTitle_, v43, 0xE000000000000000);

  if (v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_showsCloseButton] == 1)
  {
    id v44 = objc_msgSend(v1, sel_navigationItem);
    id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 24, v1, sel_closeActionWithSender_);
    objc_msgSend(v44, sel_setRightBarButtonItem_, v45);
  }
  id v46 = objc_msgSend(v1, sel_view);
  if (!v46)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v47 = v46;
  id v48 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v47, sel_setBackgroundColor_, v48);

  type metadata accessor for LanguageSelectionModel();
  sub_1DB153A94(&qword_1EA904E98, (void (*)(uint64_t))type metadata accessor for LanguageSelectionModel);
  swift_retain();
  sub_1DB1EFDB0();
  id v49 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904EA0));
  uint64_t v50 = (void *)sub_1DB1F0340();
  id v51 = objc_msgSend(v50, sel_view);
  if (!v51)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v52 = v51;
  objc_msgSend(v51, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v1, sel_addChildViewController_, v50);
  id v53 = objc_msgSend(v1, sel_view);
  if (!v53)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v54 = v53;
  id v55 = objc_msgSend(v50, sel_view);
  if (!v55)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  char v56 = v55;
  objc_msgSend(v54, sel_addSubview_, v55);

  objc_msgSend(v50, sel_didMoveToParentViewController_, v1);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1DB1F6BF0;
  id v58 = objc_msgSend(v50, sel_view);
  if (!v58)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v59 = v58;
  id v60 = objc_msgSend(v58, sel_topAnchor);

  id v61 = objc_msgSend(v1, sel_view);
  if (!v61)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v62 = v61;
  id v63 = objc_msgSend(v61, sel_topAnchor);

  id v64 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v63);
  *(void *)(v57 + 32) = v64;
  id v65 = objc_msgSend(v50, sel_view);
  if (!v65)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v66 = v65;
  id v67 = objc_msgSend(v65, sel_leadingAnchor);

  id v68 = objc_msgSend(v1, sel_view);
  if (!v68)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v69 = v68;
  id v70 = objc_msgSend(v68, sel_leadingAnchor);

  id v71 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v70);
  *(void *)(v57 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v71;
  id v72 = objc_msgSend(v1, sel_view);
  if (!v72)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v73 = v72;
  id v74 = objc_msgSend(v72, sel_trailingAnchor);

  id v75 = objc_msgSend(v50, sel_view);
  if (!v75)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v76 = v75;
  id v77 = objc_msgSend(v75, sel_trailingAnchor);

  id v78 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v77);
  *(void *)(v57 + 48) = v78;
  id v79 = objc_msgSend(v1, sel_view);
  if (!v79)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v80 = v79;
  id v81 = objc_msgSend(v79, sel_bottomAnchor);

  id v82 = objc_msgSend(v50, sel_view);
  if (v82)
  {
    uint64_t v83 = v82;
    id v84 = objc_msgSend(v82, sel_bottomAnchor);

    id v85 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v84);
    *(void *)(v57 + 56) = v85;
    sub_1DB1F14C0();
    uint64_t v86 = (void *)sub_1DB1F1480();
    swift_bridgeObjectRelease();
    objc_msgSend(v87, sel_activateConstraints_, v86);

    return;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1DB151BCC(char a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D928);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904EA8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904EB0);
  uint64_t v69 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904EB8);
  uint64_t v68 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904EC0);
  uint64_t v70 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904EC8);
  uint64_t v71 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  id v63 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (objc_class *)type metadata accessor for LanguagesViewController();
  v73.receiver = v1;
  v73.super_class = v18;
  objc_msgSendSuper2(&v73, sel_viewWillAppear_, a1 & 1);
  id v19 = &v1[OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_subscriptions];
  id v49 = v1;
  swift_beginAccess();
  uint64_t v66 = v19;
  *(void *)id v19 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v62 = OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_selectionModel;
  swift_beginAccess();
  swift_retain();
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904940);
  sub_1DB1EF8E0();
  swift_endAccess();
  swift_release();
  uint64_t v60 = sub_1DB0E3C44(&qword_1EA904ED0, &qword_1EA904EA8);
  uint64_t v57 = v6;
  sub_1DB1EF980();
  id v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v58 = v7 + 8;
  uint64_t v59 = v20;
  v20(v9, v6);
  uint64_t v56 = sub_1DB1EF6B0();
  uint64_t v55 = sub_1DB0E3C44(&qword_1EA904ED8, &qword_1EA904EB0);
  uint64_t v53 = v10;
  sub_1DB1EF950();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v69 + 8);
  v69 += 8;
  uint64_t v54 = v21;
  v21(v12, v10);
  uint64_t v52 = sub_1DB0E3C44(&qword_1EA904EE0, &qword_1EA904EB8);
  uint64_t v51 = sub_1DB153A94(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
  uint64_t v22 = v64;
  sub_1DB1EF990();
  id v23 = *(void (**)(char *, uint64_t))(v68 + 8);
  v68 += 8;
  uint64_t v50 = v23;
  v23(v14, v22);
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D940);
  id v72 = (id)sub_1DB1F1790();
  uint64_t v47 = sub_1DB1F1770();
  uint64_t v24 = *(void *)(v47 - 8);
  id v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v48 = v24 + 56;
  id v40 = v5;
  v46(v5, 1, 1, v47);
  uint64_t v45 = sub_1DB0E3C44(&qword_1EA904EE8, &qword_1EA904EC0);
  unint64_t v44 = sub_1DB13ED60();
  id v25 = v63;
  uint64_t v26 = v65;
  v39[0] = v16;
  sub_1DB1EF970();
  sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4D928);

  id v27 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  v70 += 8;
  unint64_t v43 = v27;
  v27((uint64_t)v16, v26);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v42 = sub_1DB0E3C44(&qword_1EA904EF0, &qword_1EA904EC8);
  uint64_t v28 = v67;
  sub_1DB1EF9A0();
  swift_release();
  id v29 = *(void (**)(char *, uint64_t))(v71 + 8);
  v71 += 8;
  id v41 = v29;
  v29(v25, v28);
  swift_beginAccess();
  v39[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8C8);
  v39[1] = sub_1DB0E3C44((unint64_t *)&unk_1EBA4D8D0, &qword_1EBA4D8C8);
  sub_1DB1EF8A0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1DB1EF8E0();
  swift_endAccess();
  swift_release();
  uint64_t v30 = v57;
  sub_1DB1EF980();
  v59(v9, v30);
  uint64_t v31 = v53;
  sub_1DB1EF950();
  v54(v12, v31);
  uint64_t v32 = v39[0];
  uint64_t v33 = v64;
  sub_1DB1EF990();
  v50(v14, v33);
  id v72 = (id)sub_1DB1F1790();
  uint64_t v34 = (uint64_t)v40;
  v46(v40, 1, 1, v47);
  id v35 = v63;
  uint64_t v36 = v65;
  sub_1DB1EF970();
  sub_1DB0E8BD4(v34, &qword_1EBA4D928);

  v43(v32, v36);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v37 = v67;
  sub_1DB1EF9A0();
  swift_release();
  v41(v35, v37);
  swift_beginAccess();
  sub_1DB1EF8A0();
  swift_endAccess();
  return swift_release();
}

void sub_1DB152670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EF6B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + 16;
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DB1EF810();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBA4F420);
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v41 = v8 + 16;
  v40(v10, a1, v7);
  uint64_t v13 = sub_1DB1EF7F0();
  os_log_type_t v14 = sub_1DB1F16F0();
  int v15 = v14;
  BOOL v16 = os_log_type_enabled(v13, v14);
  uint64_t v42 = v8;
  if (v16)
  {
    int v38 = v15;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v43[0] = v37;
    uint64_t v39 = a1;
    *(_DWORD *)uint64_t v17 = 136446210;
    id v35 = v17 + 4;
    uint64_t v36 = v17;
    uint64_t v44 = sub_1DB1EF590();
    uint64_t v45 = v18;
    unsigned char v43[4] = 45;
    v43[5] = 0xE100000000000000;
    v43[1] = 95;
    _OWORD v43[2] = 0xE100000000000000;
    sub_1DB0F0708();
    uint64_t v19 = sub_1DB1F1950();
    uint64_t v20 = v7;
    uint64_t v21 = v11;
    uint64_t v22 = v6;
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_1DB11F638(v19, v24, v43);
    a1 = v39;
    sub_1DB1F1910();
    uint64_t v6 = v22;
    uint64_t v11 = v21;
    uint64_t v7 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
    id v25 = v36;
    _os_log_impl(&dword_1DB0DC000, v13, (os_log_type_t)v38, "Source language changed %{public}s", v36, 0xCu);
    uint64_t v26 = v37;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v26, -1, -1);
    MEMORY[0x1E018CA60](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  swift_beginAccess();
  uint64_t v27 = MEMORY[0x1E018CB30](v11);
  if (v27)
  {
    uint64_t v28 = (void *)v27;
    uint64_t v29 = v27 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
    swift_beginAccess();
    uint64_t v30 = (void *)MEMORY[0x1E018CB30](v29);
    uint64_t v31 = *(void *)(v29 + 8);

    if (v30)
    {
      uint64_t ObjectType = swift_getObjectType();
      v40(v6, a1, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v6, 0, 1, v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 8))(v6, ObjectType, v31);

      sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4E570);
    }
  }
  swift_beginAccess();
  uint64_t v33 = (void *)MEMORY[0x1E018CB30](v11);
  if (v33)
  {
    uint64_t v34 = v33;
    objc_msgSend(v33, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

uint64_t sub_1DB152AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DB11FF38(a1, a2);
}

void sub_1DB152AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DB1EF6B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + 16;
  if (qword_1EBA4E5E8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DB1EF810();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBA4F420);
  id v40 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v41 = v8 + 16;
  v40(v10, a1, v7);
  uint64_t v13 = sub_1DB1EF7F0();
  os_log_type_t v14 = sub_1DB1F16F0();
  int v15 = v14;
  BOOL v16 = os_log_type_enabled(v13, v14);
  uint64_t v42 = v8;
  if (v16)
  {
    int v38 = v15;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v43[0] = v37;
    uint64_t v39 = a1;
    *(_DWORD *)uint64_t v17 = 136446210;
    id v35 = v17 + 4;
    uint64_t v36 = v17;
    uint64_t v44 = sub_1DB1EF590();
    uint64_t v45 = v18;
    unsigned char v43[4] = 45;
    v43[5] = 0xE100000000000000;
    v43[1] = 95;
    _OWORD v43[2] = 0xE100000000000000;
    sub_1DB0F0708();
    uint64_t v19 = sub_1DB1F1950();
    uint64_t v20 = v7;
    uint64_t v21 = v11;
    uint64_t v22 = v6;
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_1DB11F638(v19, v24, v43);
    a1 = v39;
    sub_1DB1F1910();
    uint64_t v6 = v22;
    uint64_t v11 = v21;
    uint64_t v7 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
    id v25 = v36;
    _os_log_impl(&dword_1DB0DC000, v13, (os_log_type_t)v38, "Target language changed %{public}s", v36, 0xCu);
    uint64_t v26 = v37;
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v26, -1, -1);
    MEMORY[0x1E018CA60](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  swift_beginAccess();
  uint64_t v27 = MEMORY[0x1E018CB30](v11);
  if (v27)
  {
    uint64_t v28 = (void *)v27;
    uint64_t v29 = v27 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
    swift_beginAccess();
    uint64_t v30 = (void *)MEMORY[0x1E018CB30](v29);
    uint64_t v31 = *(void *)(v29 + 8);

    if (v30)
    {
      uint64_t ObjectType = swift_getObjectType();
      v40(v6, a1, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v6, 0, 1, v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v6, ObjectType, v31);

      sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4E570);
    }
  }
  swift_beginAccess();
  uint64_t v33 = (void *)MEMORY[0x1E018CB30](v11);
  if (v33)
  {
    uint64_t v34 = v33;
    objc_msgSend(v33, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

uint64_t sub_1DB152F8C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_segmentedControl);
  swift_retain();
  if (v1) {
    objc_msgSend(v1, sel_selectedSegmentIndex);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  return sub_1DB1EF920();
}

id LanguagesViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void LanguagesViewController.init(nibName:bundle:)()
{
}

id LanguagesViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LanguagesViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DB153270@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v32 = a1;
  uint64_t v33 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v30 - v6;
  uint64_t v8 = (int *)type metadata accessor for LanguagesView(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v31 = (uint64_t)&v30 - v12;
  type metadata accessor for LanguageSelectionModel();
  sub_1DB153A94(&qword_1EA904E98, (void (*)(uint64_t))type metadata accessor for LanguageSelectionModel);
  sub_1DB1EFDC0();
  swift_getKeyPath();
  sub_1DB1EFDD0();
  swift_release();
  swift_release();
  sub_1DB1EFDC0();
  swift_getKeyPath();
  sub_1DB1EFDD0();
  swift_release();
  swift_release();
  sub_1DB1EFDC0();
  swift_getKeyPath();
  sub_1DB1EFDD0();
  swift_release();
  swift_release();
  long long v30 = v35;
  uint64_t v13 = v36;
  unsigned int v14 = MKBGetDeviceLockState();
  unsigned int v15 = (v14 > 3) | (9u >> (v14 & 0xF));
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1DB1EF910();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = v34;
  uint64_t v17 = v8[6];
  *(void *)&v10[v17] = 0;
  uint64_t v18 = v8[7];
  v10[v18] = 1;
  uint64_t v19 = (uint64_t *)&v10[v8[9]];
  *uint64_t v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9047B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = &v10[v8[10]];
  *(void *)uint64_t v20 = sub_1DB148378;
  *((void *)v20 + 1) = 0;
  v20[16] = 0;
  sub_1DB11C9E4((uint64_t)v7, (uint64_t)v10);
  sub_1DB11C9E4((uint64_t)v4, (uint64_t)&v10[v8[5]]);
  uint64_t v21 = &v10[v8[11]];
  *(_OWORD *)uint64_t v21 = v30;
  *((void *)v21 + 2) = v13;
  swift_bridgeObjectRelease();
  *(void *)&v10[v17] = v16;
  v10[v8[8]] = v32;
  v10[v18] = v15 & 1;
  uint64_t v22 = v31;
  sub_1DB154190((uint64_t)v10, v31);
  sub_1DB1F0250();
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v24 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v25 = sub_1DB1F0920();
  uint64_t v27 = v26;
  LOBYTE(v4) = v28 & 1;
  sub_1DB153A94(&qword_1EA904EF8, (void (*)(uint64_t))type metadata accessor for LanguagesView);
  sub_1DB1F0A30();
  sub_1DB0EB23C(v25, v27, (char)v4);
  swift_bridgeObjectRelease();
  return sub_1DB1541F4(v22);
}

uint64_t sub_1DB153720()
{
  return sub_1DB15375C();
}

uint64_t sub_1DB153734(uint64_t a1)
{
  return sub_1DB1537E8(a1);
}

uint64_t sub_1DB153748()
{
  return sub_1DB15375C();
}

uint64_t sub_1DB15375C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  return swift_release();
}

uint64_t sub_1DB1537D4(uint64_t a1)
{
  return sub_1DB1537E8(a1);
}

uint64_t sub_1DB1537E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v9 - v6;
  sub_1DB11FF38(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB11FF38((uint64_t)v7, (uint64_t)v4);
  swift_retain();
  sub_1DB1EF920();
  return sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4E570);
}

uint64_t sub_1DB1538F8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB15397C()
{
  return sub_1DB1EF920();
}

uint64_t sub_1DB1539F4()
{
  return sub_1DB15375C();
}

uint64_t sub_1DB153A1C(uint64_t a1)
{
  return sub_1DB1537E8(a1);
}

uint64_t sub_1DB153A44()
{
  return sub_1DB15375C();
}

uint64_t sub_1DB153A6C(uint64_t a1)
{
  return sub_1DB1537E8(a1);
}

uint64_t sub_1DB153A94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB153ADC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DB153B14(uint64_t a1)
{
  sub_1DB152670(a1, v1);
}

void sub_1DB153B1C(uint64_t a1)
{
  sub_1DB152AD8(a1, v1);
}

uint64_t sub_1DB153B24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E018CB30](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DB153B80(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC13TranslationUI23LanguagesViewController_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1DB153BE4()
{
  return sub_1DB15092C();
}

uint64_t sub_1DB153C0C(uint64_t a1)
{
  return sub_1DB1509BC(a1);
}

uint64_t sub_1DB153C34()
{
  return sub_1DB15092C();
}

uint64_t sub_1DB153C5C(uint64_t a1)
{
  return sub_1DB1509BC(a1);
}

uint64_t dispatch thunk of LanguageSelectionDelegate.sourceChanged(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LanguageSelectionDelegate.targetChanged(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for LanguagesViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LanguagesViewController);
}

uint64_t dispatch thunk of LanguagesViewController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of LanguagesViewController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of LanguagesViewController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of LanguagesViewController.__allocating_init(initialSelection:showsCloseButton:requireOnDevice:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of LanguagesViewController.sourceLocale.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of LanguagesViewController.sourceLocale.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of LanguagesViewController.sourceLocale.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of LanguagesViewController.targetLocale.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of LanguagesViewController.targetLocale.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of LanguagesViewController.targetLocale.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t sub_1DB153EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LanguagesViewController.LanguageModelWrapper(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LanguagesViewController.LanguageModelWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguagesViewController.LanguageModelWrapper(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguagesViewController.LanguageModelWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguagesViewController.LanguageModelWrapper()
{
  return &type metadata for LanguagesViewController.LanguageModelWrapper;
}

uint64_t sub_1DB15405C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB154078@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB153270(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_1DB154084@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DB1EF910();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB154108()
{
  return sub_1DB1EF920();
}

uint64_t sub_1DB154190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguagesView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1541F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguagesView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB154250(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DB154278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t EnvironmentValues.languageLabelContext.getter()
{
  sub_1DB124D8C();
  sub_1DB1F0170();
  return v1;
}

uint64_t EnvironmentValues.languageLabelContext.setter()
{
  return sub_1DB1F0180();
}

uint64_t LIDOrLanguagePicker.body.getter()
{
  uint64_t v1 = sub_1DB1F0FE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v0;
  uint64_t v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D828);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F08);
  sub_1DB122824();
  sub_1DB156A7C();
  sub_1DB1F0860();
  sub_1DB1F0FD0();
  sub_1DB0E3C44(&qword_1EA904F38, &qword_1EA904F00);
  sub_1DB1F0B80();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DB1545AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LIDOrLanguagePicker();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  v8[1] = sub_1DB154770();
  swift_getKeyPath();
  sub_1DB15919C(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1DB15947C((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F20);
  sub_1DB0E3C44(&qword_1EA904F68, &qword_1EA904F60);
  sub_1DB156AF0();
  return sub_1DB1F0E70();
}

uint64_t sub_1DB154768()
{
  return sub_1DB1545AC(*(void *)(v0 + 16));
}

uint64_t sub_1DB154770()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F70);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v95 = (uint64_t)v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LanguageOption();
  uint64_t v103 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v97 = (char *)v93 - v7;
  uint64_t v112 = sub_1DB1EF6B0();
  uint64_t v8 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v107 = (char *)v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v93 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v104 = (char *)v93 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v114 = (char *)v93 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v113 = (char *)v93 - v18;
  uint64_t v19 = type metadata accessor for LIDOrLanguagePicker();
  if (*(void *)(v0 + *(int *)(v19 + 20))) {
    uint64_t v20 = *(void *)(v0 + *(int *)(v19 + 20));
  }
  else {
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  int64_t v21 = *(void *)(v20 + 16);
  uint64_t v105 = v5;
  uint64_t v98 = v0;
  uint64_t v96 = v8;
  if (v21)
  {
    uint64_t v94 = v19;
    uint64_t v102 = v12;
    uint64_t v119 = (char *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DB12E8F0(0, v21, 0);
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v22 = v8 + 16;
    uint64_t v100 = v23;
    unint64_t v24 = (*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64);
    v93[1] = v20;
    uint64_t v25 = (char *)(v20 + v24);
    uint64_t v99 = *(void *)(v22 + 56);
    uint64_t v101 = v22;
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v22 - 8);
    while (1)
    {
      uint64_t v110 = v25;
      int64_t v111 = v21;
      uint64_t v28 = v112;
      uint64_t v27 = v113;
      uint64_t v29 = v25;
      long long v30 = v100;
      v100(v113, v29, v112);
      v30(v114, v27, v28);
      *(void *)&long long v120 = sub_1DB1EF590();
      *((void *)&v120 + 1) = v31;
      uint64_t v117 = 45;
      unint64_t v118 = 0xE100000000000000;
      uint64_t v115 = 95;
      unint64_t v116 = 0xE100000000000000;
      sub_1DB0F0708();
      uint64_t v32 = sub_1DB1F1950();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)&long long v120 = v32;
      *((void *)&v120 + 1) = v34;
      uint64_t v117 = 45;
      unint64_t v118 = 0xE100000000000000;
      uint64_t v115 = 95;
      unint64_t v116 = 0xE100000000000000;
      uint64_t v35 = sub_1DB1F1950();
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      int v38 = v104;
      uint64_t v108 = v37;
      uint64_t v109 = v35;
      sub_1DB1EF580();
      uint64_t v39 = (uint64_t)v102;
      _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
      *(void *)&long long v106 = Locale.sqDisplayName(context:in:)(0, v39);
      uint64_t v41 = v40;
      uint64_t v42 = *v26;
      (*v26)(v39, v28);
      unint64_t v43 = v107;
      v30(v107, v38, v28);
      if (v41)
      {
        v42((uint64_t)v43, v28);
        v42((uint64_t)v38, v28);
        uint64_t v45 = v110;
        int64_t v44 = v111;
        uint64_t v46 = v109;
        uint64_t v47 = v106;
      }
      else
      {
        _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
        uint64_t v48 = Locale.sqDisplaySubname(context:in:)(0, v39);
        uint64_t v41 = v49;
        v42(v39, v28);
        v42((uint64_t)v107, v28);
        v42((uint64_t)v38, v28);
        if (!v41)
        {
          uint64_t v50 = v108;
          swift_bridgeObjectRetain();
          uint64_t v46 = v109;
          uint64_t v45 = v110;
          uint64_t v47 = v109;
          uint64_t v41 = v50;
          int64_t v44 = v111;
          goto LABEL_11;
        }
        uint64_t v45 = v110;
        int64_t v44 = v111;
        uint64_t v46 = v109;
        uint64_t v47 = v48;
      }
      uint64_t v50 = v108;
LABEL_11:
      swift_bridgeObjectRelease();
      v42((uint64_t)v114, v28);
      v42((uint64_t)v113, v28);
      uint64_t v51 = v119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E8F0(0, *((void *)v51 + 2) + 1, 1);
        uint64_t v51 = v119;
      }
      unint64_t v53 = *((void *)v51 + 2);
      unint64_t v52 = *((void *)v51 + 3);
      if (v53 >= v52 >> 1)
      {
        sub_1DB12E8F0(v52 > 1, v53 + 1, 1);
        uint64_t v51 = v119;
      }
      *((void *)v51 + 2) = v53 + 1;
      uint64_t v54 = &v51[48 * v53];
      *((void *)v54 + 4) = v46;
      *((void *)v54 + 5) = v50;
      *((void *)v54 + 6) = 1;
      v54[56] = 1;
      *((void *)v54 + 8) = v47;
      *((void *)v54 + 9) = v41;
      uint64_t v25 = &v45[v99];
      int64_t v21 = v44 - 1;
      if (!v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = v51;
        uint64_t v0 = v98;
        unint64_t v5 = v105;
        uint64_t v19 = v94;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = (char *)MEMORY[0x1E4FBC860];
LABEL_19:
  uint64_t v117 = *(void *)(v0 + *(int *)(v19 + 28));
  uint64_t v110 = (char *)*((void *)v55 + 2);
  if (!v110)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  uint64_t v109 = (uint64_t)(v55 + 32);
  swift_bridgeObjectRetain();
  uint64_t v102 = v55;
  swift_bridgeObjectRetain();
  uint64_t v56 = 0;
  *(void *)&long long v57 = 136446210;
  long long v106 = v57;
  uint64_t v104 = (char *)(MEMORY[0x1E4FBC840] + 8);
  while (1)
  {
    uint64_t v113 = (char *)v56;
    uint64_t v59 = v109 + 48 * v56;
    uint64_t v60 = *(void *)v59;
    unint64_t v61 = *(void *)(v59 + 8);
    int64_t v111 = *(void *)(v59 + 40);
    uint64_t v62 = (void *)v117;
    uint64_t v63 = *(void *)(v117 + 16);
    if (v63) {
      break;
    }
LABEL_50:
    if (qword_1EBA4E298 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_1DB1EF810();
    __swift_project_value_buffer(v75, (uint64_t)qword_1EBA4F3F0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_1DB1EF7F0();
    os_log_type_t v77 = sub_1DB1F1710();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      uint64_t v115 = v79;
      *(_DWORD *)uint64_t v78 = v106;
      swift_bridgeObjectRetain();
      *(void *)(v78 + 4) = sub_1DB11F638(v60, v61, &v115);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DB0DC000, v76, v77, "When sorting language menu, master list does not contain LID identified language %{public}s", (uint8_t *)v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v79, -1, -1);
      MEMORY[0x1E018CA60](v78, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unint64_t v5 = v105;
    uint64_t v58 = (uint64_t)v113;
LABEL_23:
    uint64_t v56 = v58 + 1;
    if ((char *)v56 == v110)
    {
      swift_bridgeObjectRelease_n();
LABEL_56:
      uint64_t v80 = v117;
      int64_t v81 = *(void *)(v117 + 16);
      uint64_t v82 = MEMORY[0x1E4FBC860];
      if (v81)
      {
        uint64_t v115 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1DB12E9D8(0, v81, 0);
        uint64_t v82 = v115;
        uint64_t v83 = (void (**)(char *, void, uint64_t, uint64_t))(v96 + 56);
        uint64_t v84 = v80 + 40;
        do
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1DB1EF580();
          (*v83)(v5, 0, 2, v112);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v115 = v82;
          unint64_t v86 = *(void *)(v82 + 16);
          unint64_t v85 = *(void *)(v82 + 24);
          if (v86 >= v85 >> 1)
          {
            sub_1DB12E9D8(v85 > 1, v86 + 1, 1);
            uint64_t v82 = v115;
          }
          *(void *)(v82 + 16) = v86 + 1;
          sub_1DB15947C((uint64_t)v5, v82+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v86, (uint64_t (*)(void))type metadata accessor for LanguageOption);
          v84 += 48;
          --v81;
        }
        while (v81);
        swift_bridgeObjectRelease();
      }
      uint64_t v115 = v82;
      swift_bridgeObjectRetain();
      uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
      uint64_t v88 = (uint64_t)v97;
      MEMORY[0x1E018ADF0]();
      char v89 = sub_1DB168680(v88, v82);
      sub_1DB158E8C(v88, (uint64_t (*)(void))type metadata accessor for LanguageOption);
      swift_bridgeObjectRelease();
      if ((v89 & 1) == 0)
      {
        MEMORY[0x1E018ADF0](v87);
        uint64_t v90 = v95;
        sub_1DB15947C(v88, v95, (uint64_t (*)(void))type metadata accessor for LanguageOption);
        sub_1DB157080(0, 0, v90);
      }
      uint64_t v91 = v115;
      swift_bridgeObjectRelease();
      return v91;
    }
  }
  unint64_t v64 = 0;
  uint64_t v65 = *(void *)(v59 + 16);
  int v66 = *(unsigned __int8 *)(v59 + 24);
  uint64_t v107 = *(char **)(v59 + 32);
  uint64_t v108 = v65;
  if (v65) {
    char v67 = v66;
  }
  else {
    char v67 = 0;
  }
  if (v65) {
    int v68 = 0;
  }
  else {
    int v68 = v66;
  }
  LODWORD(v114) = v68;
  uint64_t v69 = 5;
  while (1)
  {
    uint64_t v70 = v62[v69 + 1];
    char v71 = v62[v69 + 2];
    BOOL v72 = v62[v69 - 1] == v60 && v62[v69] == v61;
    if (!v72 && (sub_1DB1F1DB0() & 1) == 0) {
      goto LABEL_33;
    }
    if ((v71 & 1) == 0)
    {
      if ((v66 & 1) == 0) {
        goto LABEL_44;
      }
      goto LABEL_33;
    }
    if (!v70) {
      break;
    }
    if (v67) {
      goto LABEL_44;
    }
LABEL_33:
    ++v64;
    v69 += 6;
    if (v63 == v64) {
      goto LABEL_50;
    }
  }
  if ((v114 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_44:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v62 = sub_1DB188FAC(v62);
  }
  unint64_t v5 = v105;
  unint64_t v73 = v62[2];
  if (v73 <= v64)
  {
    __break(1u);
    goto LABEL_66;
  }
  if ((uint64_t)(~v64 + v73) >= 0)
  {
    unint64_t v74 = v73 - 1;
    memmove(&v62[v69 - 1], &v62[v69 + 5], 48 * (~v64 + v73));
    _OWORD v62[2] = v74;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v117 = (uint64_t)v62;
    uint64_t v58 = (uint64_t)v113;
    if (v62[2] >= (unint64_t)v113)
    {
      *(void *)&long long v120 = v60;
      *((void *)&v120 + 1) = v61;
      uint64_t v121 = v108;
      char v122 = v66;
      uint64_t v123 = v107;
      int64_t v124 = v111;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DB156EE8(v58, v58, &v120);
      goto LABEL_23;
    }
LABEL_66:
    __break(1u);
  }
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB155380@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB15919C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 2, v4))
  {
    uint64_t result = LanguageOption.title(_:)(0);
    uint64_t v12 = result;
    uint64_t v14 = v13;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    uint64_t v12 = sub_1DB1EF590();
    uint64_t v14 = v15;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t sub_1DB15551C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v40 = a1;
  uint64_t v42 = a3;
  uint64_t v5 = type metadata accessor for LIDOrLanguagePicker();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v41 = v5 - 8;
  uint64_t v39 = v6;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v38 = v7;
  uint64_t v43 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LanguageOption();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v44 = type metadata accessor for LanguageOption;
  sub_1DB15919C(a1, (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LanguageOption);
  sub_1DB15919C(a2, (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  sub_1DB1F1570();
  uint64_t v11 = sub_1DB1F1560();
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v14 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v39 = v12 | v14 | 7;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = MEMORY[0x1E4FBCFD8];
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v16;
  uint64_t v17 = v44;
  sub_1DB15947C((uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13, (uint64_t (*)(void))v44);
  uint64_t v18 = v43;
  sub_1DB15947C(v43, v15 + ((v10 + v14 + v13) & ~v14), (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  sub_1DB15919C(v45, v18, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  uint64_t v19 = v40;
  sub_1DB15919C(v40, (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))v17);
  uint64_t v20 = sub_1DB1F1560();
  uint64_t v21 = (v14 + 32) & ~v14;
  uint64_t v22 = (v38 + v12 + v21) & ~v12;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v20;
  *(void *)(v23 + 24) = MEMORY[0x1E4FBCFD8];
  sub_1DB15947C(v43, v23 + v21, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  sub_1DB15947C((uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, (uint64_t (*)(void))v44);
  sub_1DB1F0E20();
  uint64_t v24 = v46;
  uint64_t v25 = v47;
  LODWORD(v44) = v48;
  uint64_t v26 = LanguageOption.title(_:)(0);
  uint64_t v28 = v27;
  uint64_t v29 = v19;
  uint64_t v30 = LanguageOption.subtitle(opposite:)(v45 + *(int *)(v41 + 32));
  uint64_t v32 = v31;
  swift_retain();
  swift_retain();
  LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_1DB155AA0(v29);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = (v20 & 1) == 0;
  swift_release();
  uint64_t result = swift_release();
  uint64_t v36 = v42;
  *uint64_t v42 = v24;
  v36[1] = v25;
  *((unsigned char *)v36 + 16) = (_BYTE)v44;
  v36[3] = v26;
  v36[4] = v28;
  v36[5] = v30;
  v36[6] = v32;
  v36[7] = KeyPath;
  v36[8] = sub_1DB11A9D4;
  v36[9] = v34;
  return result;
}

uint64_t sub_1DB1558CC@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
  MEMORY[0x1E018ADF0](v7);
  LOBYTE(a1) = _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
  uint64_t result = sub_1DB158E8C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  *a2 = a1 & 1;
  return result;
}

void sub_1DB15598C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v13 - v11;
  if (*a1 == 1)
  {
    sub_1DB15919C(a5, (uint64_t)&v13 - v11, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    sub_1DB15919C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
    sub_1DB1F0E00();
    sub_1DB158E8C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  }
}

uint64_t sub_1DB155AA0(uint64_t a1)
{
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F58);
  MEMORY[0x1F4188790](v118);
  uint64_t v125 = (uint64_t)&v101 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v119 = (uint64_t)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v101 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v117 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v116 = (uint64_t)&v101 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v115 = (uint64_t)&v101 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v122 = (uint64_t)&v101 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v123 = (char *)&v101 - v17;
  uint64_t v18 = sub_1DB1EF6B0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v101 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v101 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v101 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v101 - v32;
  uint64_t v120 = a1;
  sub_1DB15919C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v34(v7, 2, v18))
  {
    sub_1DB158E8C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    uint64_t v35 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v123, 1, 1, v18);
LABEL_4:
    sub_1DB0E8BD4(v35, &qword_1EBA4E570);
    if (qword_1EBA4E298 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1DB1EF810();
    __swift_project_value_buffer(v38, (uint64_t)qword_1EBA4F3F0);
    uint64_t v39 = sub_1DB1EF7F0();
    os_log_type_t v40 = sub_1DB1F1710();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_1DB0DC000, v39, v40, "LanguageOption does not contain a locale", v41, 2u);
      MEMORY[0x1E018CA60](v41, -1, -1);
    }

    goto LABEL_9;
  }
  uint64_t v110 = v24;
  int64_t v111 = v27;
  uint64_t v121 = v30;
  uint64_t v104 = v21;
  long long v106 = v33;
  uint64_t v36 = v19 + 32;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v35 = (uint64_t)v123;
  v37(v123, v7, v18);
  int64_t v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v124(v35, 0, 1, v18);
  if (v34((char *)v35, 1, v18) == 1) {
    goto LABEL_4;
  }
  int64_t v44 = (char *)(v19 + 48);
  uint64_t v114 = v19 + 56;
  uint64_t v45 = v106;
  v37(v106, (char *)v35, v18);
  uint64_t v112 = v19;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v46(v121, v45, v18);
  uint64_t v102 = (int *)type metadata accessor for LIDOrLanguagePicker();
  uint64_t v47 = v122;
  sub_1DB11FF38(v113 + v102[6], v122);
  unsigned __int8 v48 = v110;
  v46(v110, v45, v18);
  uint64_t v49 = v47;
  uint64_t v50 = v44;
  unsigned int v51 = v34((char *)v47, 1, v18);
  uint64_t v123 = (char *)v34;
  uint64_t v52 = v18;
  uint64_t v107 = (void (*)(uint64_t, uint64_t, uint64_t))v37;
  uint64_t v108 = v36;
  if (v51 == 1)
  {
    unint64_t v53 = v111;
    v37(v111, v48, v52);
    sub_1DB0E8BD4(v49, &qword_1EBA4E570);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v48, v18);
    unint64_t v53 = v111;
    v37(v111, (char *)v49, v52);
  }
  uint64_t v54 = v115;
  id v55 = objc_allocWithZone(MEMORY[0x1E4F42390]);
  uint64_t v56 = v121;
  long long v57 = (void *)sub_1DB1EF5D0();
  uint64_t v58 = (void *)sub_1DB1EF5D0();
  id v59 = objc_msgSend(v55, sel_initWithSourceLocale_targetLocale_, v57, v58);

  uint64_t v61 = v112 + 8;
  uint64_t v60 = *(void (**)(char *, uint64_t))(v112 + 8);
  v60(v53, v52);
  v60(v56, v52);
  id v103 = v59;
  unsigned int v62 = objc_msgSend(v59, sel_isVariantPair);
  uint64_t v63 = v116;
  if (v62 || (v112 = v61, v64 = *(void *)(v113 + v102[7]), (uint64_t v65 = *(void *)(v64 + 16)) == 0))
  {
LABEL_29:
    v60(v106, v52);
LABEL_30:

LABEL_9:
    char v42 = 0;
    return v42 & 1;
  }
  uint64_t v105 = (void (*)(uint64_t, uint64_t))v60;
  swift_bridgeObjectRetain_n();
  uint64_t v101 = v64;
  int v66 = (char **)(v64 + 40);
  int64_t v111 = v50;
  while (1)
  {
    char v67 = *v66;
    uint64_t v110 = v66[1];
    int v109 = *((unsigned __int8 *)v66 + 16);
    uint64_t v68 = (uint64_t)v66[4];
    swift_bridgeObjectRetain_n();
    uint64_t v122 = v68;
    swift_bridgeObjectRetain();
    sub_1DB1EF580();
    v124(v54, 0, 1, v52);
    uint64_t v69 = v119;
    sub_1DB15919C(v120, v119, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    int v70 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v123)(v69, 2, v52);
    uint64_t v121 = v67;
    if (v70)
    {
      sub_1DB158E8C(v69, (uint64_t (*)(void))type metadata accessor for LanguageOption);
      uint64_t v71 = 1;
    }
    else
    {
      v107(v63, v69, v52);
      uint64_t v71 = 0;
    }
    uint64_t v72 = v118;
    v124(v63, v71, 1, v52);
    uint64_t v73 = v63;
    uint64_t v74 = v125;
    uint64_t v75 = v125 + *(int *)(v72 + 48);
    sub_1DB11FF38(v54, v125);
    sub_1DB11FF38(v73, v75);
    uint64_t v76 = v123;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v123)(v74, 1, v52) == 1) {
      break;
    }
    uint64_t v77 = v117;
    sub_1DB11FF38(v74, v117);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v76)(v75, 1, v52) == 1)
    {
      uint64_t v63 = v116;
      sub_1DB0E8BD4(v116, &qword_1EBA4E570);
      sub_1DB0E8BD4(v54, &qword_1EBA4E570);
      v105(v77, v52);
      goto LABEL_18;
    }
    uint64_t v78 = v104;
    v107((uint64_t)v104, v75, v52);
    sub_1DB158EEC();
    char v79 = sub_1DB1F1230();
    uint64_t v80 = v105;
    v105((uint64_t)v78, v52);
    uint64_t v81 = v116;
    sub_1DB0E8BD4(v116, &qword_1EBA4E570);
    sub_1DB0E8BD4(v115, &qword_1EBA4E570);
    v80(v117, v52);
    uint64_t v82 = v74;
    uint64_t v63 = v81;
    uint64_t v54 = v115;
    sub_1DB0E8BD4(v82, &qword_1EBA4E570);
    if (v79) {
      goto LABEL_32;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v66 += 6;
    if (!--v65)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v60 = (void (*)(char *, uint64_t))v105;
      goto LABEL_29;
    }
  }
  sub_1DB0E8BD4(v73, &qword_1EBA4E570);
  sub_1DB0E8BD4(v54, &qword_1EBA4E570);
  uint64_t v63 = v73;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v76)(v75, 1, v52) != 1)
  {
LABEL_18:
    sub_1DB0E8BD4(v125, &qword_1EA904F58);
    goto LABEL_19;
  }
  sub_1DB0E8BD4(v125, &qword_1EBA4E570);
LABEL_32:
  swift_bridgeObjectRelease_n();
  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  uint64_t v84 = v83;
  unint64_t v85 = (void *)sub_1DB1F1260();
  unsigned int v86 = objc_msgSend(v84, sel_BOOLForKey_, v85, v101);

  id v87 = objc_msgSend(self, sel_sharedConnection);
  if (!v87)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v86) {
      goto LABEL_36;
    }
    goto LABEL_39;
  }
  uint64_t v88 = v87;
  unsigned int v89 = objc_msgSend(v87, sel_isOnDeviceOnlyTranslationForced);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (((v89 | v86) & 1) == 0) {
    goto LABEL_39;
  }
LABEL_36:
  char v90 = v109;
  if (v110) {
    char v90 = 0;
  }
  if ((v90 & 1) == 0)
  {
    v105((uint64_t)v106, v52);
    goto LABEL_30;
  }
LABEL_39:
  uint64_t v91 = v106;
  if (*(unsigned char *)(v113 + v102[8]) == 1)
  {
    CGRect v92 = self;
    uint64_t v93 = (void *)sub_1DB1EF5D0();
    id v94 = objc_msgSend(v93, sel_languageIdentifier);

    sub_1DB1F1290();
    uint64_t v95 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
    id v96 = objc_msgSend(v92, sel_baseLanguageFromLanguage_, v95);

    uint64_t v97 = sub_1DB1F1290();
    uint64_t v99 = v98;

    if (qword_1EBA4E290 != -1) {
      swift_once();
    }
    uint64_t v100 = qword_1EBA4F3E8;
    swift_bridgeObjectRetain();
    char v42 = sub_1DB15AFBC(v97, v99, v100);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v105((uint64_t)v91, v52);
  }
  else
  {
    v105((uint64_t)v106, v52);

    char v42 = 1;
  }
  return v42 & 1;
}

uint64_t sub_1DB156764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D870);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D860);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
  MEMORY[0x1E018ADF0](v14);
  uint64_t v15 = a1 + *(int *)(type metadata accessor for LIDOrLanguagePicker() + 36);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_1DB118D3C(*(void *)v15, v17);
  uint64_t v18 = sub_1DB1C5B5C(v16, v17);
  sub_1DB118DE4(v16, v17);
  uint64_t v19 = LanguageOption.title(_:)(v18);
  uint64_t v21 = v20;
  sub_1DB158E8C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  uint64_t v27 = v19;
  uint64_t v28 = v21;
  sub_1DB0F0708();
  sub_1DB1F0D00();
  sub_1DB0E3C44(&qword_1EBA4D868, &qword_1EBA4D870);
  sub_1DB122914();
  sub_1DB1F0980();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v22 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v26, v13, v10);
  uint64_t v23 = (uint64_t (**)())(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D828) + 36));
  void *v23 = sub_1DB122AD0;
  v23[1] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1DB156A74@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB156764(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DB156A7C()
{
  unint64_t result = qword_1EA904F10;
  if (!qword_1EA904F10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904F08);
    sub_1DB156AF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904F10);
  }
  return result;
}

unint64_t sub_1DB156AF0()
{
  unint64_t result = qword_1EA904F18;
  if (!qword_1EA904F18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA904F20);
    sub_1DB0E3C44(&qword_1EA904F28, &qword_1EA904F30);
    sub_1DB0E3C44(&qword_1EBA4D850, &qword_1EBA4D858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904F18);
  }
  return result;
}

uint64_t sub_1DB156BB8()
{
  uint64_t v1 = sub_1DB1F0FE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v0;
  uint64_t v11 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D828);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F08);
  sub_1DB122824();
  sub_1DB156A7C();
  sub_1DB1F0860();
  sub_1DB1F0FD0();
  sub_1DB0E3C44(&qword_1EA904F38, &qword_1EA904F00);
  sub_1DB1F0B80();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DB156DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1DB158E38();
  return MEMORY[0x1F40F8670](a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.languageLabelContext.modify(uint64_t a1))(void *a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_1DB124D8C();
  sub_1DB1F0170();
  return sub_1DB156EB0;
}

uint64_t sub_1DB156EB0(void *a1)
{
  a1[1] = *a1;
  return sub_1DB1F0180();
}

char *sub_1DB156EE8(uint64_t a1, int64_t a2, _OWORD *a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1DB188720(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = &v5[6 * a1 + 4];
  unint64_t result = (char *)swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_26;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    unint64_t result = (char *)(v14 + 3);
    uint64_t v19 = (char *)&v5[6 * a2 + 4];
    if (v14 + 3 != (_OWORD *)v19 || result >= &v19[48 * v18]) {
      unint64_t result = (char *)memmove(result, v19, 48 * v18);
    }
    uint64_t v20 = v5[2];
    BOOL v17 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v17)
    {
      uint64_t v5[2] = v21;
LABEL_20:
      long long v22 = a3[1];
      _OWORD *v14 = *a3;
      v14[1] = v22;
      v14[2] = a3[2];
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  unint64_t result = (char *)sub_1DB1F1BF0();
  __break(1u);
  return result;
}

uint64_t sub_1DB157080(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1DB188848(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    unint64_t *v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for LanguageOption() - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_1DB1F1BF0();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_1DB15919C(a3, v17, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  }
  return sub_1DB0E8BD4(a3, &qword_1EA904F70);
}

uint64_t _s13TranslationUI19LIDOrLanguagePickerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  long long v57 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F58);
  MEMORY[0x1F4188790](v61);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LIDOrLanguagePicker();
  MEMORY[0x1F4188790](v10);
  uint64_t v63 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (uint64_t)&v56 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v64 = (uint64_t)&v56 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v65 = (uint64_t)&v56 - v17;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v56 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v56 - v22;
  uint64_t v24 = type metadata accessor for LanguageOption();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v56 - v28;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
  MEMORY[0x1E018ADF0]();
  MEMORY[0x1E018ADF0](v30);
  char v31 = _s13TranslationUI14LanguageOptionO2eeoiySbAC_ACtFZ_0((uint64_t)v29, (uint64_t)v26);
  sub_1DB158E8C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  uint64_t v32 = a2;
  sub_1DB158E8C((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  sub_1DB15919C(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  sub_1DB15919C(a2, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  if ((v31 & 1) == 0)
  {
    sub_1DB158E8C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB158E8C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
LABEL_11:
    uint64_t v40 = v62;
    uint64_t v39 = v64;
    uint64_t v38 = v65;
    sub_1DB15919C(a1, v65, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB15919C(v32, v39, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    goto LABEL_12;
  }
  uint64_t v33 = v61;
  uint64_t v34 = *(int *)(v10 + 20);
  uint64_t v35 = *(void *)&v20[v34];
  if (!*(void *)&v23[v34])
  {
    swift_bridgeObjectRetain();
    sub_1DB158E8C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB158E8C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    if (!v35)
    {
      uint64_t v56 = v10;
      uint64_t v38 = v65;
      sub_1DB15919C(a1, v65, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
      uint64_t v39 = v64;
      sub_1DB15919C(v32, v64, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
      uint64_t v40 = v62;
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  if (!v35)
  {
    swift_bridgeObjectRetain();
    sub_1DB158E8C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB158E8C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v56 = v10;
  swift_bridgeObjectRetain();
  uint64_t v36 = swift_bridgeObjectRetain();
  char v37 = sub_1DB167E08(v36, v35);
  swift_bridgeObjectRelease();
  sub_1DB158E8C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  sub_1DB158E8C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  swift_bridgeObjectRelease();
  uint64_t v38 = v65;
  sub_1DB15919C(a1, v65, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  uint64_t v39 = v64;
  sub_1DB15919C(v32, v64, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  uint64_t v40 = v62;
  if ((v37 & 1) == 0)
  {
LABEL_12:
    sub_1DB158E8C(v39, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB158E8C(v38, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    uint64_t v41 = v63;
LABEL_13:
    sub_1DB15919C(a1, v40, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB15919C(v32, v41, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    goto LABEL_14;
  }
LABEL_17:
  uint64_t v62 = v32;
  uint64_t v44 = *(int *)(v56 + 24);
  uint64_t v45 = v39 + v44;
  uint64_t v46 = (uint64_t)&v9[*(int *)(v33 + 48)];
  sub_1DB11FF38(v38 + v44, (uint64_t)v9);
  sub_1DB11FF38(v45, v46);
  uint64_t v47 = v59;
  uint64_t v48 = (uint64_t)v9;
  uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  uint64_t v50 = v9;
  uint64_t v51 = v60;
  if (v49((uint64_t)v50, 1, v60) == 1)
  {
    sub_1DB158E8C(v39, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB158E8C(v38, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    if (v49(v46, 1, v51) == 1)
    {
      sub_1DB0E8BD4(v48, &qword_1EBA4E570);
      sub_1DB15919C(a1, v40, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
      uint64_t v41 = v63;
      sub_1DB15919C(v62, v63, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
LABEL_24:
      char v42 = sub_1DB168028(*(void *)(v40 + *(int *)(v56 + 28)), *(void *)(v41 + *(int *)(v56 + 28)));
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  uint64_t v52 = v58;
  sub_1DB11FF38(v48, v58);
  if (v49(v46, 1, v51) == 1)
  {
    sub_1DB158E8C(v64, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    sub_1DB158E8C(v65, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v52, v51);
LABEL_22:
    sub_1DB0E8BD4(v48, &qword_1EA904F58);
    uint64_t v32 = v62;
    uint64_t v41 = v63;
    goto LABEL_13;
  }
  unint64_t v53 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v57, v46, v51);
  sub_1DB158EEC();
  char v54 = sub_1DB1F1230();
  id v55 = *(void (**)(char *, uint64_t))(v47 + 8);
  v55(v53, v51);
  sub_1DB158E8C(v64, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  sub_1DB158E8C(v65, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  v55((char *)v52, v51);
  sub_1DB0E8BD4(v48, &qword_1EBA4E570);
  sub_1DB15919C(a1, v40, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  uint64_t v41 = v63;
  sub_1DB15919C(v62, v63, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  if (v54) {
    goto LABEL_24;
  }
LABEL_14:
  char v42 = 0;
LABEL_15:
  sub_1DB158E8C(v40, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  sub_1DB158E8C(v41, (uint64_t (*)(void))type metadata accessor for LIDOrLanguagePicker);
  return v42 & 1;
}

uint64_t sub_1DB157B0C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for LIDOrLanguagePicker(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DB1EF6B0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 2, v11))
    {
      uint64_t v14 = type metadata accessor for LanguageOption();
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 2, v11);
    }
    uint64_t v15 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    swift_bridgeObjectRetain();
    if (v13(v17, 1, v11))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(void *)v22;
    char v24 = v22[8];
    swift_bridgeObjectRetain();
    sub_1DB118D3C(v23, v24);
    *(void *)uint64_t v21 = v23;
    v21[8] = v24;
  }
  return a1;
}

uint64_t destroy for LIDOrLanguagePicker(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 2, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(a2 + 36);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  return sub_1DB118DE4(v10, v11);
}

void *initializeWithCopy for LIDOrLanguagePicker(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 2, v10))
  {
    uint64_t v13 = type metadata accessor for LanguageOption();
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  }
  uint64_t v14 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  swift_bridgeObjectRetain();
  if (v12(v16, 1, v10))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = v21[8];
  swift_bridgeObjectRetain();
  sub_1DB118D3C(v22, v23);
  *(void *)uint64_t v20 = v22;
  v20[8] = v23;
  return a1;
}

char *assignWithCopy for LIDOrLanguagePicker(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = type metadata accessor for LanguageOption();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  *(void *)&a1[a3[7]] = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  char v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_1DB118D3C(*(void *)v23, v25);
  uint64_t v26 = *(void *)v22;
  char v27 = v22[8];
  *(void *)uint64_t v22 = v24;
  v22[8] = v25;
  sub_1DB118DE4(v26, v27);
  return a1;
}

void *initializeWithTake for LIDOrLanguagePicker(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 2, v10))
  {
    uint64_t v13 = type metadata accessor for LanguageOption();
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  }
  uint64_t v14 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)&a2[a3[5]];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)&a2[a3[7]];
  *((unsigned char *)a1 + v18) = a2[v18];
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  return a1;
}

char *assignWithTake for LIDOrLanguagePicker(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_release();
  *((void *)a1 + 1) = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = type metadata accessor for LanguageOption();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  *(void *)&a1[a3[7]] = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
  uint64_t v22 = &a1[v21];
  char v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v23) = v23[8];
  uint64_t v25 = *(void *)v22;
  char v26 = v22[8];
  *(void *)uint64_t v22 = v24;
  v22[8] = (char)v23;
  sub_1DB118DE4(v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for LIDOrLanguagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB158960);
}

uint64_t sub_1DB158960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for LIDOrLanguagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB158A90);
}

uint64_t sub_1DB158A90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LIDOrLanguagePicker()
{
  uint64_t result = qword_1EA904F40;
  if (!qword_1EA904F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DB158BF4()
{
  sub_1DB158D44(319, (unint64_t *)&qword_1EA903B50, (uint64_t (*)(uint64_t))type metadata accessor for LanguageOption, MEMORY[0x1E4F3EE18]);
  if (v0 <= 0x3F)
  {
    sub_1DB158D44(319, (unint64_t *)&qword_1EBA4E5E0, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DB158D44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DB158DA8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LanguagePickerLabelFormatEnvironmentKey()
{
  return &type metadata for LanguagePickerLabelFormatEnvironmentKey;
}

unint64_t sub_1DB158E38()
{
  unint64_t result = qword_1EA904F50;
  if (!qword_1EA904F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904F50);
  }
  return result;
}

uint64_t sub_1DB158E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DB158EEC()
{
  unint64_t result = qword_1EA9051F0[0];
  if (!qword_1EA9051F0[0])
  {
    sub_1DB1EF6B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA9051F0);
  }
  return result;
}

uint64_t sub_1DB158F48()
{
  uint64_t v1 = type metadata accessor for LIDOrLanguagePicker();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 2, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v2 + *(int *)(v1 + 24);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  sub_1DB118DE4(*(void *)(v2 + *(int *)(v1 + 36)), *(unsigned char *)(v2 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1DB15911C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LIDOrLanguagePicker() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1DB15551C(a1, v6, a2);
}

uint64_t sub_1DB15919C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB159204()
{
  uint64_t v1 = *(void *)(type metadata accessor for LanguageOption() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for LIDOrLanguagePicker();
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v2;
  uint64_t v7 = sub_1DB1EF6B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 2, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = v0 + v5;
  swift_release();
  swift_release();
  uint64_t v11 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  if (!v9(v11, 2, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v10 + *(int *)(v4 + 24);
  if (!v9(v12, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v7);
  }
  swift_bridgeObjectRelease();
  sub_1DB118DE4(*(void *)(v10 + *(int *)(v4 + 36)), *(unsigned char *)(v10 + *(int *)(v4 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_1DB15947C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB1594E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LanguageOption() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  type metadata accessor for LIDOrLanguagePicker();
  return sub_1DB1558CC(v1 + v4, a1);
}

uint64_t sub_1DB1595BC()
{
  uint64_t v1 = type metadata accessor for LIDOrLanguagePicker();
  uint64_t v14 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v14 + 32) & ~v14;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for LanguageOption() - 8) + 80);
  uint64_t v5 = v2 + v3 + v4;
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v2;
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B30) + 32);
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 2, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = v5 & ~v4;
  swift_bridgeObjectRelease();
  uint64_t v12 = v6 + *(int *)(v1 + 24);
  if (!v10(v12, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  }
  swift_bridgeObjectRelease();
  sub_1DB118DE4(*(void *)(v6 + *(int *)(v1 + 36)), *(unsigned char *)(v6 + *(int *)(v1 + 36) + 8));
  if (!v10(v0 + v11, 2, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v8);
  }
  return swift_deallocObject();
}

void sub_1DB159830(unsigned char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for LIDOrLanguagePicker() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for LanguageOption() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  sub_1DB15598C(a1, v7, v8, v1 + v4, v9);
}

uint64_t sub_1DB159910()
{
  return swift_deallocObject();
}

uint64_t Locale.ltLanguageCode.getter()
{
  uint64_t v0 = sub_1DB1EF690();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E288);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF6A0();
  sub_1DB1EF650();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_1DB1EF5B0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DB159AE8((uint64_t)v6);
    return 0;
  }
  else
  {
    uint64_t v9 = sub_1DB1EF5A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_1DB159AE8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E288);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void Locale.ltDefaultTarget(for:availableLocales:map:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)sub_1DB1EF5D0();
  uint64_t v5 = (void *)sub_1DB1EF5D0();
  sub_1DB1EF6B0();
  uint64_t v6 = (void *)sub_1DB1F1480();
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F78);
    a3 = (void *)sub_1DB1F11A0();
  }
  id v7 = objc_msgSend(self, sel_lt_defaultTargetForSource_systemLocale_availableLocales_targetMap_, v4, v5, v6, a3);

  sub_1DB1EF5F0();
}

uint64_t static Locale.ensureSupported(locale:availableLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A00);
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v5 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DB1F4170;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v7 + v6, a1, v5);
  uint64_t v8 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1DB1F1480();
  id v10 = objc_msgSend(v4, sel_lt_bestMatchForPreferredLocales_fromSupportedLocales_, v8, v9);

  if (v10)
  {
    sub_1DB1EF5F0();

    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 1;
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  return v12(a2, v11, 1, v5);
}

void static Locale.fallback(for:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1DB1EF5D0();
  id v2 = objc_msgSend(v0, sel_lt_fallbackForLocale_, v1);

  sub_1DB1EF5F0();
}

uint64_t sub_1DB159E8C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1DB1F1410();
  }
  else {
    return 0;
  }
}

uint64_t Locale.ltIdentifier.getter()
{
  sub_1DB1EF590();
  sub_1DB0F0708();
  uint64_t v0 = sub_1DB1F1950();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Locale.sqDisplayName(context:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = a1;
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)v63 - v9;
  uint64_t v11 = sub_1DB1EF690();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E288);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v2;
  sub_1DB1EF6A0();
  sub_1DB1EF650();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v18 = sub_1DB1EF5B0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v17, &qword_1EBA4E288);
    return 0;
  }
  uint64_t v21 = sub_1DB1EF5A0();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  v63[1] = v21;
  uint64_t v24 = sub_1DB1EF5C0();
  uint64_t v20 = v24;
  uint64_t v66 = v23;
  if (v25)
  {
    uint64_t v69 = v24;
    uint64_t v70 = v25;
    sub_1DB0F0708();
    uint64_t v20 = sub_1DB1F1930();
    uint64_t v64 = v26;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v64 = 0;
  }
  v63[2] = Locale.sqDisplaySubname(context:in:)(v67, a2);
  uint64_t v65 = v27;
  _s10Foundation6LocaleV13TranslationUIE9ltCurrentACvgZ_0();
  uint64_t v28 = sub_1DB1EF590();
  uint64_t v30 = v29;
  char v31 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31(v10, v4);
  if (v28 == sub_1DB1EF590() && v30 == v32)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v68, v4);
LABEL_10:
    uint64_t v34 = sub_1DB1EF5D0();
    id v35 = objc_msgSend((id)v34, sel_languageIdentifier);

    sub_1DB1F1290();
    LOBYTE(v34) = sub_1DB1F1400();
    swift_bridgeObjectRelease();
    v31(v7, v4);
    uint64_t v36 = v64;
    if (v34)
    {
      type metadata accessor for _BundleObject();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v38 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v20 = sub_1DB1EF400();
      uint64_t v40 = v39;

      swift_bridgeObjectRelease();
      uint64_t v36 = v40;
    }
    uint64_t v41 = v65;
    goto LABEL_14;
  }
  char v33 = sub_1DB1F1DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v68, v4);
  if (v33) {
    goto LABEL_10;
  }
  v31(v7, v4);
  uint64_t v36 = v64;
  uint64_t v41 = v65;
LABEL_14:
  switch(v67)
  {
    case 0:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      if (!v41) {
        return v20;
      }
      goto LABEL_39;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_41;
    case 2:
      uint64_t v46 = sub_1DB1EF5D0();
      id v47 = objc_msgSend((id)v46, sel_languageIdentifier);

      sub_1DB1F1290();
      LOBYTE(v46) = sub_1DB1F1400();
      swift_bridgeObjectRelease();
      if (v46)
      {
        swift_bridgeObjectRelease();
        if (sub_1DB15B9C4(2))
        {
          if (!v36) {
            goto LABEL_38;
          }
          uint64_t v69 = v20;
          uint64_t v70 = v36;
          sub_1DB0F0708();
          uint64_t v48 = sub_1DB1F1930();
        }
        else
        {
          if (!v36) {
            goto LABEL_38;
          }
          uint64_t v48 = sub_1DB1F1310();
        }
        uint64_t v20 = v48;
        uint64_t v61 = v49;
      }
      else
      {
        id v56 = objc_msgSend(self, sel_sharedIntlUtility);
        long long v57 = (void *)sub_1DB1F1260();
        swift_bridgeObjectRelease();
        sub_1DB1EF590();
        uint64_t v58 = (void *)sub_1DB1F1260();
        swift_bridgeObjectRelease();
        id v59 = objc_msgSend(v56, sel_displayNameForLanguage_context_displayLanguage_, v57, 2, v58);

        uint64_t v20 = sub_1DB1F1290();
        uint64_t v61 = v60;
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = v61;
LABEL_38:
      if (v41) {
        goto LABEL_39;
      }
      return v20;
    case 3:
      uint64_t v42 = sub_1DB1EF5D0();
      id v43 = objc_msgSend((id)v42, sel_languageIdentifier);

      sub_1DB1F1290();
      LOBYTE(v42) = sub_1DB1F1400();
      swift_bridgeObjectRelease();
      if (v42)
      {
        swift_bridgeObjectRelease();
        if (sub_1DB15B9C4(1))
        {
          if (!v36) {
            goto LABEL_32;
          }
          uint64_t v69 = v20;
          uint64_t v70 = v36;
          sub_1DB0F0708();
          uint64_t v44 = sub_1DB1F1930();
        }
        else
        {
          if (!v36) {
            goto LABEL_32;
          }
          uint64_t v44 = sub_1DB1F1310();
        }
        uint64_t v20 = v44;
        uint64_t v55 = v45;
      }
      else
      {
        id v50 = objc_msgSend(self, sel_sharedIntlUtility);
        uint64_t v51 = (void *)sub_1DB1F1260();
        swift_bridgeObjectRelease();
        sub_1DB1EF590();
        uint64_t v52 = (void *)sub_1DB1F1260();
        swift_bridgeObjectRelease();
        id v53 = objc_msgSend(v50, sel_displayNameForLanguage_context_displayLanguage_, v51, 1, v52);

        uint64_t v20 = sub_1DB1F1290();
        uint64_t v55 = v54;
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = v55;
LABEL_32:
      if (v41)
      {
LABEL_39:
        if (v36)
        {
          uint64_t v69 = v20;
          uint64_t v70 = v36;
          swift_bridgeObjectRetain();
          sub_1DB1F13A0();
          sub_1DB1F13A0();
          sub_1DB1F13A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v20 = v69;
        }
        else
        {
LABEL_41:
          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      uint64_t v69 = v67;
      sub_1DB1F1DE0();
      __break(1u);
      JUMPOUT(0x1DB15A81CLL);
  }
  return v20;
}

uint64_t Locale.sqDisplaySubname(context:in:)(uint64_t a1, uint64_t a2)
{
  v41[3] = a2;
  uint64_t v42 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E288);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1EF690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v41 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF88);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF6A0();
  sub_1DB1EF670();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v12, v6);
  uint64_t v17 = sub_1DB1EF610();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v15, &qword_1EBA4CF88);
  }
  else
  {
    v41[2] = sub_1DB1EF5A0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    v41[1] = v2;
    sub_1DB1EF6A0();
    sub_1DB1EF650();
    v16(v9, v6);
    uint64_t v19 = sub_1DB1EF5B0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v5, 1, v19) == 1)
    {
      sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4E288);
    }
    else
    {
      uint64_t v23 = sub_1DB1EF5A0();
      uint64_t v25 = v24;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
      uint64_t v26 = sub_1DB15C1A4((uint64_t)&unk_1F3543500);
      swift_arrayDestroy();
      char v27 = sub_1DB15AFBC(v23, v25, v26);
      swift_bridgeObjectRelease();
      if (v27)
      {
        uint64_t v28 = (void *)sub_1DB1EF5D0();
        uint64_t v29 = (void *)sub_1DB1F1260();
        id v30 = objc_msgSend(v28, sel_localizedStringForRegion_context_short_, v29, 3, 1);

        uint64_t v31 = v42;
        if (v30)
        {
          uint64_t v21 = sub_1DB1F1290();
        }
        else
        {
          uint64_t v21 = 0;
        }
        if (Locale.isTraditionalChinese()())
        {
          swift_bridgeObjectRelease();
          switch(v31)
          {
            case 0:
            case 1:
            case 3:
            case 4:
              type metadata accessor for _BundleObject();
              uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
              id v33 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
              uint64_t v21 = sub_1DB1EF400();

              break;
            case 2:
            case 5:
LABEL_18:
              swift_bridgeObjectRelease();
              goto LABEL_5;
            default:
LABEL_26:
              uint64_t v43 = v31;
              sub_1DB1F1DE0();
              __break(1u);
              JUMPOUT(0x1DB15AF8CLL);
          }
        }
        if (Locale.isSimplifiedChinese()())
        {
          swift_bridgeObjectRelease();
          switch(v31)
          {
            case 0:
            case 1:
            case 3:
            case 4:
              type metadata accessor for _BundleObject();
              uint64_t v34 = swift_getObjCClassFromMetadata();
              id v35 = objc_msgSend(self, sel_bundleForClass_, v34);
              uint64_t v21 = sub_1DB1EF400();

              break;
            case 2:
            case 5:
              goto LABEL_18;
            default:
              goto LABEL_26;
          }
        }
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v31 = v42;
      }
      uint64_t v36 = sub_1DB15C1A4((uint64_t)&unk_1F3543540);
      swift_arrayDestroy();
      if (v31)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v21;
      }
      char v37 = sub_1DB15AFBC(v23, v25, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
      swift_bridgeObjectRelease();
      id v38 = (void *)sub_1DB1EF5D0();
      uint64_t v39 = (void *)sub_1DB1F1260();
      id v40 = objc_msgSend(v38, sel_localizedStringForRegion_context_short_, v39, 3, 0);

      if (v40)
      {
        uint64_t v21 = sub_1DB1F1290();
        swift_bridgeObjectRelease();

        return v21;
      }
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1DB15AFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1DB1F1E80();
    sub_1DB1F1360();
    uint64_t v6 = sub_1DB1F1EC0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1DB1F1DB0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1DB1F1DB0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1DB15B0F4(uint64_t *a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1DB1F1E80();
    uint64_t v4 = *a1;
    uint64_t v5 = a1[1];
    swift_bridgeObjectRetain();
    sub_1DB1F1360();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1DB1F1EC0();
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = ~v7;
      uint64_t v11 = *(void *)(a2 + 48);
      sub_1DB11A9DC((uint64_t)(a1 + 2), (uint64_t)v19);
      do
      {
        uint64_t v12 = v11 + 48 * v8;
        double v13 = *(double *)(v12 + 16);
        char v14 = *(unsigned char *)(v12 + 24);
        BOOL v15 = *(void *)v12 == v4 && *(void *)(v12 + 8) == v5;
        if (v15 || (sub_1DB1F1DB0() & 1) != 0)
        {
          if (v14)
          {
            if (v13 == 0.0)
            {
              sub_1DB11A9DC((uint64_t)v19, (uint64_t)&v23);
              if (v24 == 1 && !v23) {
                return 1;
              }
            }
            else
            {
              sub_1DB11A9DC((uint64_t)v19, (uint64_t)&v17);
              if (v18 == 1 && v17) {
                return 1;
              }
            }
          }
          else
          {
            sub_1DB11A9DC((uint64_t)v19, (uint64_t)v20);
            if ((v20[8] & 1) == 0) {
              return 1;
            }
            sub_1DB11A9DC((uint64_t)v19, (uint64_t)&v21);
            if ((v22 & 1) == 0 && v21 == v13) {
              return 1;
            }
          }
        }
        unint64_t v8 = (v8 + 1) & v10;
      }
      while (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1DB15B29C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DB1EF570();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1DB15C684(&qword_1EBA4D9F8, MEMORY[0x1E4F27990]),
        uint64_t v7 = sub_1DB1F11D0(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    char v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1DB15C684(&qword_1EA904F98, MEMORY[0x1E4F27990]);
      char v15 = sub_1DB1F1230();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

Swift::String_optional __swiftcall Locale.localizedString(forRegion:context:short:)(Swift::String forRegion, NSFormattingContext context, Swift::Bool a3)
{
  uint64_t v5 = (void *)sub_1DB1EF5D0();
  uint64_t v6 = (void *)sub_1DB1F1260();
  id v7 = objc_msgSend(v5, sel_localizedStringForRegion_context_short_, v6, context, a3);

  if (v7)
  {
    uint64_t v8 = sub_1DB1F1290();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

uint64_t Locale.languageIdentifier.getter()
{
  uint64_t v0 = (void *)sub_1DB1EF5D0();
  id v1 = objc_msgSend(v0, sel_languageIdentifier);

  uint64_t v2 = sub_1DB1F1290();
  return v2;
}

unint64_t DisplayNameContext.init(rawValue:)(unint64_t a1)
{
  return sub_1DB15C348(a1);
}

uint64_t sub_1DB15B5E4()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB15B62C()
{
  return sub_1DB1F1E90();
}

uint64_t sub_1DB15B658()
{
  return sub_1DB1F1EC0();
}

unint64_t sub_1DB15B69C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1DB15C348(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

Swift::String __swiftcall Locale.ltLocalizedAppString(_:table:bundle:)(Swift::String _, Swift::String table, NSBundle bundle)
{
  id v4 = [(objc_class *)bundle.super.isa localizations];
  if (!v4)
  {
    sub_1DB1F14A0();
    id v4 = (id)sub_1DB1F1480();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E600);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DB1F4170;
  *(void *)(v6 + 32) = sub_1DB1EF590();
  *(void *)(v6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
  uint64_t v8 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v5, sel_preferredLocalizationsFromArray_forPreferences_, v4, v8);

  uint64_t v10 = sub_1DB1F14A0();
  if (*(void *)(v10 + 16))
  {
    uint64_t v11 = (void *)sub_1DB1F1260();
    uint64_t v12 = (void *)sub_1DB1F1260();
    uint64_t v13 = (void *)sub_1DB1F1260();
    if (*(void *)(v10 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v14 = (void *)sub_1DB1F1260();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      char v14 = 0;
    }
    id v15 = [(objc_class *)bundle.super.isa localizedStringForKey:v11 value:v12 table:v13 localization:v14];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1DB1F1260();
    uint64_t v13 = (void *)sub_1DB1F1260();
    char v14 = (void *)sub_1DB1F1260();
    id v15 = [(objc_class *)bundle.super.isa localizedStringForKey:v12 value:v13 table:v14];
  }

  uint64_t v16 = sub_1DB1F1290();
  uint64_t v18 = v17;

  uint64_t v19 = v16;
  uint64_t v20 = v18;
  result._object = v20;
  result._countAndFlagsBits = v19;
  return result;
}

uint64_t Locale.isChinese.getter()
{
  uint64_t v0 = sub_1DB1EF5D0();
  id v1 = objc_msgSend((id)v0, sel_languageIdentifier);

  sub_1DB1F1290();
  LOBYTE(v__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_1DB1F1400();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1DB15B9C4(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF690();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E288);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_sharedIntlUtility);
  sub_1DB1EF6A0();
  sub_1DB1EF650();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v10 = sub_1DB1EF5B0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4E288);
  }
  else
  {
    sub_1DB1EF5A0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  uint64_t v12 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  sub_1DB1EF590();
  uint64_t v13 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v9, sel_displayNameForLanguage_context_displayLanguage_, v12, a1, v13);

  uint64_t v15 = sub_1DB1F1290();
  unint64_t v17 = v16;

  sub_1DB159E8C(v15, v17);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    char v20 = sub_1DB1F11F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = 1;
  }
  return v20 & 1;
}

Swift::Bool __swiftcall Locale.supportsVerticalText()()
{
  uint64_t v0 = sub_1DB1EF690();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E288);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF6A0();
  sub_1DB1EF650();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_1DB1EF5B0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4E288);
    char v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1DB1EF5A0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    BOOL v13 = v10 == 24938 && v12 == 0xE200000000000000;
    if (v13 || (sub_1DB1F1DB0() & 1) != 0 || (v10 == 26746 ? (BOOL v14 = v12 == 0xE200000000000000) : (BOOL v14 = 0), v14))
    {
      swift_bridgeObjectRelease();
      char v9 = 1;
    }
    else
    {
      char v9 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
    }
  }
  return v9 & 1;
}

uint64_t NSLocale.sqDisplayName(context:in:)(uint64_t a1, uint64_t a2)
{
  return sub_1DB15BF04(a1, a2, Locale.sqDisplayName(context:in:));
}

id sub_1DB15BED4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB15C020(a1, a2, a3, a4, (void (*)(uint64_t, char *))Locale.sqDisplayName(context:in:));
}

uint64_t NSLocale.sqDisplaySubname(context:in:)(uint64_t a1, uint64_t a2)
{
  return sub_1DB15BF04(a1, a2, Locale.sqDisplaySubname(context:in:));
}

uint64_t sub_1DB15BF04(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF5F0();
  uint64_t v10 = a3(a1, a2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

id sub_1DB15C008(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DB15C020(a1, a2, a3, a4, (void (*)(uint64_t, char *))Locale.sqDisplaySubname(context:in:));
}

id sub_1DB15C020(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, char *))
{
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  BOOL v14 = (char *)&v21 - v13;
  sub_1DB1EF5F0();
  sub_1DB1EF5F0();
  id v15 = a1;
  a5(a3, v14);
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);

  v18(v14, v8);
  if (v17)
  {
    uint64_t v19 = (void *)sub_1DB1F1260();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  return v19;
}

uint64_t sub_1DB15C1A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E5F8);
    uint64_t v3 = sub_1DB1F1A80();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1DB1F1E80();
      swift_bridgeObjectRetain();
      sub_1DB1F1360();
      uint64_t result = sub_1DB1F1EC0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1DB1F1DB0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1DB1F1DB0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1DB15C348(unint64_t result)
{
  if (result > 5) {
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayNameContext()
{
  return &type metadata for DisplayNameContext;
}

uint64_t sub_1DB15C36C(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F02A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904F80);
    uint64_t v9 = sub_1DB1F1A80();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    id v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1DB15C684(&qword_1EA904F88, MEMORY[0x1E4F3D480]);
      uint64_t v16 = sub_1DB1F11D0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1DB15C684(&qword_1EA904F90, MEMORY[0x1E4F3D480]);
          char v23 = sub_1DB1F1230();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1DB15C684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Bool __swiftcall Locale.isRTL()()
{
  uint64_t v0 = sub_1DB1EF690();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF6A0();
  Swift::Bool v4 = sub_1DB1EF660() == 2;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

BOOL Locale.Language.isRTL.getter()
{
  return sub_1DB1EF660() == 2;
}

Swift::Bool __swiftcall Locale.isTraditionalChinese()()
{
  uint64_t v1 = sub_1DB1EF690();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  Swift::Bool v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF90);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v40 = v0;
  uint64_t v15 = sub_1DB1EF590();
  uint64_t v39 = v11;
  if (v15 == 0x57545F687ALL && v16 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v17 = 1;
  }
  else
  {
    char v17 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v40;
  id v38 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v38(v14, v40, v8);
  if ((v17 & 1) == 0)
  {
    sub_1DB1EF6A0();
    sub_1DB1EF680();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v22 = sub_1DB1EF630();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v22) == 1)
    {
      sub_1DB15CCB8((uint64_t)v7);
      unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
      v19(v14, v8);
      uint64_t v20 = v39;
      v38(v39, v40, v8);
    }
    else
    {
      uint64_t v24 = sub_1DB1EF5A0();
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
      uint64_t v43 = v24;
      uint64_t v44 = v26;
      sub_1DB0F0708();
      uint64_t v27 = sub_1DB1F1930();
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      if (v27 == 1414414664 && v29 == 0xE400000000000000)
      {
        unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
        v19(v14, v8);
        swift_bridgeObjectRelease();
        uint64_t v20 = v39;
        uint64_t v18 = v40;
        goto LABEL_7;
      }
      char v30 = sub_1DB1F1DB0();
      unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
      v19(v14, v8);
      swift_bridgeObjectRelease();
      uint64_t v20 = v39;
      v38(v39, v40, v8);
      if (v30) {
        goto LABEL_8;
      }
    }
    uint64_t v31 = (void *)sub_1DB1EF5D0();
    id v32 = objc_msgSend(v31, sel_languageIdentifier);

    uint64_t v33 = sub_1DB1F1290();
    uint64_t v35 = v34;

    uint64_t v43 = v33;
    uint64_t v44 = v35;
    uint64_t v41 = 0x2D746E61482DLL;
    unint64_t v42 = 0xE600000000000000;
    sub_1DB0F0708();
    char v21 = sub_1DB1F1980();
    swift_bridgeObjectRelease();
    v19(v20, v8);
    return v21 & 1;
  }
  unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  uint64_t v20 = v39;
LABEL_7:
  v38(v20, v18, v8);
LABEL_8:
  v19(v20, v8);
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_1DB15CCB8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Bool __swiftcall Locale.isSimplifiedChinese()()
{
  uint64_t v1 = sub_1DB1EF690();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  Swift::Bool v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF90);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v40 = v0;
  uint64_t v15 = sub_1DB1EF590();
  uint64_t v39 = v11;
  if (v15 == 0x4E435F687ALL && v16 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v17 = 1;
  }
  else
  {
    char v17 = sub_1DB1F1DB0();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v40;
  id v38 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v38(v14, v40, v8);
  if ((v17 & 1) == 0)
  {
    sub_1DB1EF6A0();
    sub_1DB1EF680();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v22 = sub_1DB1EF630();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v22) == 1)
    {
      sub_1DB15CCB8((uint64_t)v7);
      unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
      v19(v14, v8);
      uint64_t v20 = v39;
      v38(v39, v40, v8);
    }
    else
    {
      uint64_t v24 = sub_1DB1EF5A0();
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
      uint64_t v43 = v24;
      uint64_t v44 = v26;
      sub_1DB0F0708();
      uint64_t v27 = sub_1DB1F1930();
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      if (v27 == 1397637448 && v29 == 0xE400000000000000)
      {
        unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
        v19(v14, v8);
        swift_bridgeObjectRelease();
        uint64_t v20 = v39;
        uint64_t v18 = v40;
        goto LABEL_7;
      }
      char v30 = sub_1DB1F1DB0();
      unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
      v19(v14, v8);
      swift_bridgeObjectRelease();
      uint64_t v20 = v39;
      v38(v39, v40, v8);
      if (v30) {
        goto LABEL_8;
      }
    }
    uint64_t v31 = (void *)sub_1DB1EF5D0();
    id v32 = objc_msgSend(v31, sel_languageIdentifier);

    uint64_t v33 = sub_1DB1F1290();
    uint64_t v35 = v34;

    uint64_t v43 = v33;
    uint64_t v44 = v35;
    uint64_t v41 = 0x2D736E61482DLL;
    unint64_t v42 = 0xE600000000000000;
    sub_1DB0F0708();
    char v21 = sub_1DB1F1980();
    swift_bridgeObjectRelease();
    v19(v20, v8);
    return v21 & 1;
  }
  unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  uint64_t v20 = v39;
LABEL_7:
  v38(v20, v18, v8);
LABEL_8:
  v19(v20, v8);
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_1DB15D210(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1DB15E9F0();
  uint64_t v2 = sub_1DB1F14A0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static LocaleService.lastTargetLocale.getter()
{
  _sSo14NSUserDefaultsC13TranslationUIE016translationGroupB0ABvgZ_0();
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1DB1F1260();
  id v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (v3)
  {
    sub_1DB1F1290();
  }
  else
  {
  }
  return sub_1DB1EF580();
}

void static LocaleService.localePairs(forSpeech:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = 5;
  }
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  void v9[4] = sub_1DB15E808;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1DB15D210;
  v9[3] = &block_descriptor_5;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_availableLocalePairsForTask_useDedicatedMachPort_completion_, v5, 1, v8);
  _Block_release(v8);
}

uint64_t sub_1DB15D45C(unint64_t a1, void (*a2)(uint64_t, void, __n128), uint64_t a3)
{
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A10);
  uint64_t v6 = *(void *)(v22 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v22);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DB1F1BB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (!v10)
  {
LABEL_13:
    a2(v11, 0, v7);
    return swift_bridgeObjectRelease();
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DB12EA14(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = a3;
    char v21 = a2;
    uint64_t v13 = 0;
    uint64_t v11 = v23;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x1E018BAD0](v13, a1);
      }
      else {
        id v14 = *(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_sourceLocale, v20, v21, v22);
      sub_1DB1EF5F0();

      id v17 = objc_msgSend(v15, sel_targetLocale);
      sub_1DB1EF5F0();

      uint64_t v23 = v11;
      unint64_t v19 = *(void *)(v11 + 16);
      unint64_t v18 = *(void *)(v11 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1DB12EA14(v18 > 1, v19 + 1, 1);
        uint64_t v11 = v23;
      }
      ++v13;
      *(void *)(v11 + 16) = v19 + 1;
      sub_1DB15EA30((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v19);
    }
    while (v10 != v13);
    a2 = v21;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t static LocaleService.sanitizeLocale(_:supportedLocales:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  __n128 v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - v12;
  static Locale.ensureSupported(locale:availableLocales:)(a1, (uint64_t)&v18 - v12);
  sub_1DB0E8B70((uint64_t)v13, (uint64_t)v10, &qword_1EBA4E570);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    id v14 = self;
    uint64_t v15 = (void *)sub_1DB1EF5D0();
    id v16 = objc_msgSend(v14, sel_lt_fallbackForLocale_, v15);

    sub_1DB1EF5F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4E570);
    return sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4E570);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1DB0E8BD4((uint64_t)v13, &qword_1EBA4E570);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v10, v4);
  }
}

uint64_t static LocaleService.supportedTargetLocale(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v12 = (void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = a2;
  v12[1] = a3;
  uint64_t v13 = self;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1DB15E82C;
  *(void *)(v14 + 24) = v11;
  aBlock[4] = sub_1DB15EAB0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB15D210;
  aBlock[3] = &block_descriptor_10;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_availableLocalePairsForTask_useDedicatedMachPort_completion_, 5, 1, v15);
  _Block_release(v15);
  return swift_release();
}

uint64_t sub_1DB15DB28(void *a1, char a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A10);
  uint64_t v10 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (char *)v53 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FA0);
  MEMORY[0x1F4188790](v14);
  id v16 = (void *)((char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1DB1EF6B0();
  uint64_t v65 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v53 - v21;
  if (a2)
  {
    long long v57 = a4;
    uint64_t v40 = a1;
    if (qword_1EBA4E5E8 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1DB1EF810();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EBA4F420);
    unint64_t v42 = a1;
    uint64_t v43 = sub_1DB1EF7F0();
    os_log_type_t v44 = sub_1DB1F1710();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v56 = a5;
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 138412290;
      id v47 = v16;
      uint64_t v48 = sub_1DB1EF410();
      uint64_t v67 = v48;
      sub_1DB1F1910();
      *uint64_t v46 = v48;
      id v16 = v47;
      sub_1DB15E9E4(a1, 1);
      _os_log_impl(&dword_1DB0DC000, v43, v44, "Failed to obtain supported target locale: %@", v45, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v46, -1, -1);
      MEMORY[0x1E018CA60](v45, -1, -1);
    }
    else
    {
      sub_1DB15E9E4(a1, 1);
    }

    *id v16 = a1;
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = a1;
    v57(v16);
    sub_1DB15E9E4(a1, 1);
    return sub_1DB0E8BD4((uint64_t)v16, &qword_1EA904FA0);
  }
  else
  {
    uint64_t v55 = a3;
    int64_t v23 = a1[2];
    if (v23)
    {
      v53[0] = (char *)v53 - v21;
      v53[1] = v14;
      uint64_t v54 = v16;
      uint64_t v56 = a5;
      long long v57 = a4;
      uint64_t v67 = MEMORY[0x1E4FBC860];
      sub_1DB12E97C(0, v23, 0);
      uint64_t v24 = (uint64_t)a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v25 = *(void *)(v10 + 72);
      uint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v65 + 16);
      uint64_t v61 = v25;
      uint64_t v26 = (void (**)(char *, char *, uint64_t))(v65 + 32);
      uint64_t v58 = (void (**)(char *, uint64_t))(v65 + 8);
      id v59 = (void (**)(char *, char *, uint64_t))(v65 + 32);
      uint64_t v27 = (uint64_t)v62;
      do
      {
        int64_t v66 = v23;
        sub_1DB0E8B70(v24, v27, &qword_1EA904A10);
        uint64_t v28 = *(int *)(v64 + 48);
        uint64_t v29 = v19;
        char v30 = v63;
        uint64_t v31 = &v63[v28];
        id v32 = v26;
        uint64_t v33 = v27 + v28;
        uint64_t v34 = *v60;
        (*v60)(v63, v27, v17);
        v34(v31, v33, v17);
        uint64_t v35 = *v32;
        (*v32)(v29, v31, v17);
        (*v58)(v30, v17);
        sub_1DB0E8BD4(v27, &qword_1EA904A10);
        uint64_t v36 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DB12E97C(0, *(void *)(v36 + 16) + 1, 1);
          uint64_t v36 = v67;
        }
        unint64_t v38 = *(void *)(v36 + 16);
        unint64_t v37 = *(void *)(v36 + 24);
        unint64_t v19 = v29;
        int64_t v39 = v66;
        if (v38 >= v37 >> 1)
        {
          sub_1DB12E97C(v37 > 1, v38 + 1, 1);
          uint64_t v36 = v67;
        }
        *(void *)(v36 + 16) = v38 + 1;
        uint64_t v26 = v59;
        v35((char *)(v36+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(void *)(v65 + 72) * v38), v29, v17);
        uint64_t v67 = v36;
        v24 += v61;
        int64_t v23 = v39 - 1;
      }
      while (v23);
      a4 = v57;
      id v16 = v54;
      uint64_t v22 = (char *)v53[0];
    }
    uint64_t v49 = v22;
    static LocaleService.sanitizeLocale(_:supportedLocales:)(v55, (uint64_t)v22);
    swift_bridgeObjectRelease();
    uint64_t v50 = v65;
    (*(void (**)(void *, char *, uint64_t))(v65 + 16))(v16, v49, v17);
    swift_storeEnumTagMultiPayload();
    a4(v16);
    sub_1DB0E8BD4((uint64_t)v16, &qword_1EA904FA0);
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v49, v17);
  }
}

uint64_t static LocaleService.supportedTargetLocaleSync(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v3);
  uint64_t v40 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1F10A0();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v37 = (char *)&v33 - v8;
  uint64_t v9 = sub_1DB1EF6B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = swift_allocBox();
  uint64_t v35 = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v13, 1, 1, v9);
  uint64_t v14 = dispatch_group_create();
  dispatch_group_enter(v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v12;
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v34 = v9;
  v16((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v33 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v33(v18 + v17, (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  unint64_t v19 = (void (**)(uint64_t))(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v19 = sub_1DB15E870;
  v19[1] = (void (*)(uint64_t))v15;
  uint64_t v20 = self;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1DB15E82C;
  *(void *)(v21 + 24) = v18;
  aBlock[4] = sub_1DB15EAB0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB15D210;
  aBlock[3] = &block_descriptor_24_0;
  uint64_t v22 = _Block_copy(aBlock);
  int64_t v23 = v14;
  uint64_t v41 = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_availableLocalePairsForTask_useDedicatedMachPort_completion_, 5, 1, v22);
  _Block_release(v22);
  swift_release();
  swift_release();
  uint64_t v24 = v36;
  sub_1DB1F1090();
  uint64_t v25 = v37;
  MEMORY[0x1E018B0B0](v24, 1.0);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v27 = v24;
  uint64_t v28 = v39;
  v26(v27, v39);
  sub_1DB1F1750();
  uint64_t v29 = v34;
  v26(v25, v28);
  uint64_t v30 = (uint64_t)v40;
  uint64_t v31 = v35;
  swift_beginAccess();
  sub_1DB0E8B70(v31, v30, &qword_1EBA4E570);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v30, 1, v29) == 1)
  {
    sub_1DB1EF580();

    sub_1DB0E8BD4(v30, &qword_1EBA4E570);
  }
  else
  {

    v33(v42, (char *)v30, v29);
  }
  return swift_release();
}

void sub_1DB15E5FC(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FA0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = swift_projectBox();
  sub_1DB0E8B70(a1, (uint64_t)v9, &qword_1EA904FA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    uint64_t v11 = sub_1DB1EF6B0();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, id *, uint64_t))(v12 + 32))(v6, v9, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    swift_beginAccess();
    sub_1DB106F4C((uint64_t)v6, v10);
  }
  dispatch_group_leave(a2);
}

uint64_t sub_1DB15E7D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB15E808(unint64_t a1)
{
  return sub_1DB15D45C(a1, *(void (**)(uint64_t, void, __n128))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1DB15E830()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DB15E870(uint64_t a1)
{
  sub_1DB15E5FC(a1, *(NSObject **)(v1 + 16));
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v1 = sub_1DB1EF6B0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB15E924(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_1DB1EF6B0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(void *))v8;
  uint64_t v10 = *(void *)(v8 + 8);
  return sub_1DB15DB28(a1, v4, v7, v9, v10);
}

ValueMetadata *type metadata accessor for LocaleService()
{
  return &type metadata for LocaleService;
}

void sub_1DB15E9E4(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1DB15E9F0()
{
  unint64_t result = qword_1EBA4D918;
  if (!qword_1EBA4D918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBA4D918);
  }
  return result;
}

uint64_t sub_1DB15EA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB15EAB4(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1DB12EA34(0, v6, 0);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v15 = v9;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v11 = *(void *)(v8 + 56);
    do
    {
      v15(v5, v10, v2);
      swift_dynamicCast();
      uint64_t v7 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12EA34(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v17;
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1DB12EA34(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v17;
      }
      *(void *)(v7 + 16) = v13 + 1;
      sub_1DB0F138C(&v16, (_OWORD *)(v7 + 32 * v13 + 32));
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t Sequence<>.sortedLocalized(for:)()
{
  return sub_1DB1F1440();
}

BOOL sub_1DB15ECD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Locale.sqDisplayName(context:in:)(0, a3);
  Locale.sqDisplaySubname(context:in:)(0, a3);
  if (v4)
  {
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
  }
  Locale.sqDisplayName(context:in:)(0, a3);
  Locale.sqDisplaySubname(context:in:)(0, a3);
  if (v5)
  {
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
    sub_1DB1F13A0();
    swift_bridgeObjectRelease();
  }
  sub_1DB0F0708();
  uint64_t v6 = sub_1DB1F1960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 == -1;
}

BOOL sub_1DB15EE44(uint64_t a1, uint64_t a2)
{
  return sub_1DB15ECD4(a1, a2, *(void *)(v2 + 16));
}

uint64_t NSArray.sortedLocalized(for:)()
{
  sub_1DB1EF6B0();
  sub_1DB1F1490();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_1DB15EF50(void *a1)
{
  uint64_t v2 = sub_1DB1EF6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1EF5F0();
  id v6 = a1;
  NSArray.sortedLocalized(for:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v7 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1DB15F070(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  sub_1DB1EF6B0();
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1DB160BAC(v5);
  }
  sub_1DB15F130(a1, a2);
  *uint64_t v2 = v5;
}

void sub_1DB15F130(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  uint64_t v168 = a2;
  v167 = (uint64_t (*)(char *, char *))a1;
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v154 = (char *)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v161 = (char *)&v139 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v139 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v139 - v13;
  MEMORY[0x1F4188790](v15);
  long long v147 = (char *)&v139 - v16;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v139 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v139 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v139 - v24;
  v166 = v2;
  uint64_t v26 = v2[1];
  uint64_t v27 = sub_1DB1F1D70();
  if (v27 >= v26)
  {
    if (v26 < 0) {
      goto LABEL_144;
    }
    if (v26) {
      sub_1DB15FE78(0, v26, 1, v167, v168);
    }
    return;
  }
  if (v26 >= 0) {
    uint64_t v28 = v26;
  }
  else {
    uint64_t v28 = v26 + 1;
  }
  if (v26 <= -2) {
    goto LABEL_153;
  }
  uint64_t v164 = v5;
  uint64_t v165 = v4;
  long long v144 = v22;
  long long v143 = v25;
  uint64_t v142 = v27;
  if (v26 < 2)
  {
    uint64_t v31 = v5;
    uint64_t v33 = MEMORY[0x1E4FBC860];
    unint64_t v162 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    if (v26 != 1)
    {
      unint64_t v83 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v35 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v36 = v3;
LABEL_110:
      uint64_t v145 = v33;
      if (v83 >= 2)
      {
        uint64_t v132 = *v166;
        do
        {
          unint64_t v133 = v83 - 2;
          if (v83 < 2) {
            goto LABEL_139;
          }
          if (!v132) {
            goto LABEL_152;
          }
          uint64_t v134 = *(void *)&v35[16 * v133 + 32];
          uint64_t v135 = *(void *)&v35[16 * v83 + 24];
          sub_1DB1601B4(v132 + *(void *)(v164 + 72) * v134, v132 + *(void *)(v164 + 72) * *(void *)&v35[16 * v83 + 16], v132 + *(void *)(v164 + 72) * v135, v162, (uint64_t (*)(char *, unint64_t))v167, v168);
          if (v36) {
            break;
          }
          if (v135 < v134) {
            goto LABEL_140;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v35 = sub_1DB160B84((uint64_t)v35);
          }
          if (v133 >= *((void *)v35 + 2)) {
            goto LABEL_141;
          }
          char v136 = &v35[16 * v133 + 32];
          *(void *)char v136 = v134;
          *((void *)v136 + 1) = v135;
          unint64_t v137 = *((void *)v35 + 2);
          if (v83 > v137) {
            goto LABEL_142;
          }
          memmove(&v35[16 * v83 + 16], &v35[16 * v83 + 32], 16 * (v137 - v83));
          *((void *)v35 + 2) = v137 - 1;
          unint64_t v83 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_123:
      swift_bridgeObjectRelease();
      *(void *)(v145 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v148 = v19;
    v152 = v14;
    v153 = v11;
    uint64_t v145 = MEMORY[0x1E4FBC860];
  }
  else
  {
    v148 = v19;
    v152 = v14;
    v153 = v11;
    uint64_t v29 = v28 >> 1;
    uint64_t v30 = sub_1DB1F14E0();
    uint64_t v31 = v5;
    *(void *)(v30 + 16) = v29;
    unint64_t v32 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = v30;
    unint64_t v162 = v30 + v32;
  }
  uint64_t v34 = 0;
  uint64_t v158 = v31 + 16;
  v159 = (void (**)(unint64_t, uint64_t))(v31 + 8);
  v163 = (void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v35 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v36 = v3;
  while (1)
  {
    uint64_t v37 = (uint64_t)v34;
    uint64_t v38 = (uint64_t)(v34 + 1);
    if ((uint64_t)(v34 + 1) >= v26) {
      goto LABEL_57;
    }
    uint64_t v156 = v26;
    uint64_t v39 = *v166;
    uint64_t v40 = *(void *)(v31 + 72);
    uint64_t v151 = (uint64_t)(v34 + 1);
    uint64_t v41 = v39 + v40 * v38;
    unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
    uint64_t v43 = v143;
    uint64_t v44 = (uint64_t)v34;
    uint64_t v45 = v165;
    v42(v143, v41, v165);
    uint64_t v160 = v40;
    uint64_t v46 = v39 + v40 * v44;
    unint64_t v47 = (unint64_t)v144;
    v157 = (char *)v42;
    v42(v144, v46, v45);
    LODWORD(v155) = v167(v43, (char *)v47);
    if (v36)
    {
      v138 = *v159;
      (*v159)(v47, v45);
      v138((unint64_t)v43, v45);
      goto LABEL_123;
    }
    long long v146 = v35;
    uint64_t v48 = *v159;
    (*v159)(v47, v45);
    v48((unint64_t)v43, v45);
    uint64_t v49 = v44 + 2;
    uint64_t v50 = v156;
    uint64_t v149 = v39;
    uint64_t v37 = v44;
    if (v44 + 2 >= v156)
    {
      uint64_t v38 = v44 + 2;
    }
    else
    {
      long long v141 = (char *)v44;
      uint64_t v51 = v39;
      uint64_t v150 = v160 * v49;
      v151 *= v160;
      unint64_t v52 = (unint64_t)v147;
      while (1)
      {
        id v53 = v148;
        uint64_t v54 = v165;
        uint64_t v55 = v157;
        ((void (*)(char *, uint64_t, uint64_t))v157)(v148, v51 + v150, v165);
        ((void (*)(unint64_t, uint64_t, uint64_t))v55)(v52, v51 + v151, v54);
        int v56 = v167(v53, (char *)v52);
        v48(v52, v54);
        v48((unint64_t)v53, v54);
        if ((v155 ^ v56)) {
          break;
        }
        ++v49;
        v51 += v160;
        if (v156 == v49)
        {
          uint64_t v50 = v156;
          uint64_t v38 = v156;
          uint64_t v37 = (uint64_t)v141;
          goto LABEL_24;
        }
      }
      uint64_t v38 = v49;
      uint64_t v37 = (uint64_t)v141;
      uint64_t v50 = v156;
    }
LABEL_24:
    uint64_t v35 = v146;
    uint64_t v57 = v164;
    if ((v155 & 1) == 0)
    {
      uint64_t v58 = v165;
      goto LABEL_38;
    }
    if (v38 < v37) {
      goto LABEL_148;
    }
    uint64_t v58 = v165;
    if (v37 < v38) {
      break;
    }
LABEL_38:
    if (v38 < v50) {
      goto LABEL_39;
    }
LABEL_57:
    if (v38 < v37) {
      goto LABEL_143;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v35 = sub_1DB160878(0, *((void *)v35 + 2) + 1, 1, v35);
    }
    unint64_t v82 = *((void *)v35 + 2);
    unint64_t v81 = *((void *)v35 + 3);
    unint64_t v83 = v82 + 1;
    if (v82 >= v81 >> 1) {
      uint64_t v35 = sub_1DB160878((char *)(v81 > 1), v82 + 1, 1, v35);
    }
    *((void *)v35 + 2) = v83;
    uint64_t v84 = v35 + 32;
    unint64_t v85 = &v35[16 * v82 + 32];
    *(void *)unint64_t v85 = v37;
    *((void *)v85 + 1) = v38;
    v157 = (char *)v38;
    if (v82)
    {
      while (1)
      {
        unint64_t v86 = v83 - 1;
        if (v83 >= 4)
        {
          uint64_t v91 = &v84[16 * v83];
          uint64_t v92 = *((void *)v91 - 8);
          uint64_t v93 = *((void *)v91 - 7);
          BOOL v97 = __OFSUB__(v93, v92);
          uint64_t v94 = v93 - v92;
          if (v97) {
            goto LABEL_128;
          }
          uint64_t v96 = *((void *)v91 - 6);
          uint64_t v95 = *((void *)v91 - 5);
          BOOL v97 = __OFSUB__(v95, v96);
          uint64_t v89 = v95 - v96;
          char v90 = v97;
          if (v97) {
            goto LABEL_129;
          }
          unint64_t v98 = v83 - 2;
          uint64_t v99 = &v84[16 * v83 - 32];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v97 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v97) {
            goto LABEL_131;
          }
          BOOL v97 = __OFADD__(v89, v102);
          uint64_t v103 = v89 + v102;
          if (v97) {
            goto LABEL_134;
          }
          if (v103 >= v94)
          {
            uint64_t v121 = &v84[16 * v86];
            uint64_t v123 = *(void *)v121;
            uint64_t v122 = *((void *)v121 + 1);
            BOOL v97 = __OFSUB__(v122, v123);
            uint64_t v124 = v122 - v123;
            if (v97) {
              goto LABEL_138;
            }
            BOOL v114 = v89 < v124;
            goto LABEL_94;
          }
        }
        else
        {
          if (v83 != 3)
          {
            uint64_t v115 = *((void *)v35 + 4);
            uint64_t v116 = *((void *)v35 + 5);
            BOOL v97 = __OFSUB__(v116, v115);
            uint64_t v108 = v116 - v115;
            char v109 = v97;
            goto LABEL_88;
          }
          uint64_t v88 = *((void *)v35 + 4);
          uint64_t v87 = *((void *)v35 + 5);
          BOOL v97 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          char v90 = v97;
        }
        if (v90) {
          goto LABEL_130;
        }
        unint64_t v98 = v83 - 2;
        uint64_t v104 = &v84[16 * v83 - 32];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v107 = __OFSUB__(v105, v106);
        uint64_t v108 = v105 - v106;
        char v109 = v107;
        if (v107) {
          goto LABEL_133;
        }
        uint64_t v110 = &v84[16 * v86];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v97 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v97) {
          goto LABEL_136;
        }
        if (__OFADD__(v108, v113)) {
          goto LABEL_137;
        }
        if (v108 + v113 >= v89)
        {
          BOOL v114 = v89 < v113;
LABEL_94:
          if (v114) {
            unint64_t v86 = v98;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v109) {
          goto LABEL_132;
        }
        uint64_t v117 = &v84[16 * v86];
        uint64_t v119 = *(void *)v117;
        uint64_t v118 = *((void *)v117 + 1);
        BOOL v97 = __OFSUB__(v118, v119);
        uint64_t v120 = v118 - v119;
        if (v97) {
          goto LABEL_135;
        }
        if (v120 < v108) {
          goto LABEL_105;
        }
LABEL_96:
        unint64_t v125 = v86 - 1;
        if (v86 - 1 >= v83)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (!*v166) {
          goto LABEL_149;
        }
        uint64_t v126 = v35;
        unint64_t v127 = &v84[16 * v125];
        uint64_t v128 = *(void *)v127;
        uint64_t v129 = &v84[16 * v86];
        uint64_t v130 = *((void *)v129 + 1);
        sub_1DB1601B4(*v166 + *(void *)(v164 + 72) * *(void *)v127, *v166 + *(void *)(v164 + 72) * *(void *)v129, *v166 + *(void *)(v164 + 72) * v130, v162, (uint64_t (*)(char *, unint64_t))v167, v168);
        if (v36) {
          goto LABEL_123;
        }
        if (v130 < v128) {
          goto LABEL_125;
        }
        if (v86 > *((void *)v126 + 2)) {
          goto LABEL_126;
        }
        *(void *)unint64_t v127 = v128;
        *(void *)&v84[16 * v125 + 8] = v130;
        unint64_t v131 = *((void *)v126 + 2);
        if (v86 >= v131) {
          goto LABEL_127;
        }
        uint64_t v35 = v126;
        unint64_t v83 = v131 - 1;
        memmove(&v84[16 * v86], v129 + 16, 16 * (v131 - 1 - v86));
        *((void *)v35 + 2) = v131 - 1;
        if (v131 <= 2) {
          goto LABEL_105;
        }
      }
    }
    unint64_t v83 = 1;
LABEL_105:
    uint64_t v26 = v166[1];
    uint64_t v34 = v157;
    uint64_t v31 = v164;
    if ((uint64_t)v157 >= v26)
    {
      uint64_t v33 = v145;
      goto LABEL_110;
    }
  }
  uint64_t v59 = 0;
  uint64_t v60 = v160 * (v38 - 1);
  uint64_t v61 = v38 * v160;
  long long v141 = (char *)v37;
  uint64_t v62 = v37 * v160;
  v157 = (char *)v38;
  do
  {
    if (v37 != v38 + v59 - 1)
    {
      uint64_t v63 = v149;
      if (!v149) {
        goto LABEL_151;
      }
      unint64_t v64 = v149 + v62;
      uint64_t v65 = (char *)(v149 + v60);
      v155 = *v163;
      v155(v154, (char *)(v149 + v62), v165);
      if (v62 < v60 || v64 >= v63 + v61)
      {
        uint64_t v58 = v165;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        uint64_t v58 = v165;
        if (v62 != v60) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v155(v65, v154, v58);
      uint64_t v57 = v164;
      uint64_t v38 = (uint64_t)v157;
    }
    ++v37;
    --v59;
    v60 -= v160;
    v61 -= v160;
    v62 += v160;
  }
  while (v37 < v38 + v59);
  uint64_t v35 = v146;
  uint64_t v37 = (uint64_t)v141;
  uint64_t v50 = v156;
  if (v38 >= v156) {
    goto LABEL_57;
  }
LABEL_39:
  if (__OFSUB__(v38, v37)) {
    goto LABEL_145;
  }
  if (v38 - v37 >= v142) {
    goto LABEL_57;
  }
  if (__OFADD__(v37, v142)) {
    goto LABEL_146;
  }
  if (v37 + v142 >= v50) {
    uint64_t v66 = v50;
  }
  else {
    uint64_t v66 = v37 + v142;
  }
  if (v66 >= v37)
  {
    if (v38 != v66)
    {
      long long v146 = v35;
      uint64_t v67 = *(void (**)(void, void, void))(v57 + 16);
      uint64_t v149 = *(void *)(v57 + 72);
      uint64_t v150 = (uint64_t)v67;
      uint64_t v160 = v149 * (v38 - 1);
      uint64_t v68 = v38 * v149;
      long long v141 = (char *)v37;
      uint64_t v140 = v66;
      do
      {
        uint64_t v69 = 0;
        v157 = (char *)v38;
        uint64_t v151 = v68;
        while (1)
        {
          uint64_t v71 = *v166;
          v155 = (void (*)(char *, char *, uint64_t))(v68 + v69);
          uint64_t v156 = v37;
          uint64_t v72 = v152;
          uint64_t v73 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, uint64_t, uint64_t))v150)(v152, v68 + v69 + v71, v58);
          unint64_t v74 = (unint64_t)v153;
          v73(v153, v160 + v69 + v71, v58);
          char v75 = v167(v72, (char *)v74);
          uint64_t v76 = *v159;
          (*v159)(v74, v58);
          v76((unint64_t)v72, v58);
          if ((v75 & 1) == 0) {
            break;
          }
          uint64_t v77 = *v166;
          if (!*v166) {
            goto LABEL_150;
          }
          uint64_t v68 = v151;
          uint64_t v78 = (char *)(v77 + v160 + v69);
          char v79 = *v163;
          uint64_t v80 = v165;
          (*v163)(v161, (char *)(v77 + v151 + v69), v165);
          uint64_t v58 = v80;
          swift_arrayInitWithTakeFrontToBack();
          v79(v78, v161, v80);
          v69 -= v149;
          uint64_t v70 = v157;
          uint64_t v37 = v156 + 1;
          uint64_t v36 = 0;
          if (v157 == (char *)(v156 + 1)) {
            goto LABEL_54;
          }
        }
        uint64_t v58 = v165;
        uint64_t v36 = 0;
        uint64_t v70 = v157;
        uint64_t v68 = v151;
LABEL_54:
        uint64_t v38 = (uint64_t)(v70 + 1);
        v160 += v149;
        v68 += v149;
        uint64_t v37 = (uint64_t)v141;
      }
      while (v38 != v140);
      uint64_t v38 = v140;
      uint64_t v35 = v146;
    }
    goto LABEL_57;
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  sub_1DB1F1B80();
  __break(1u);
}

void sub_1DB15FE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v52 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v44 = (char *)&v36 - v14;
  __n128 v17 = MEMORY[0x1F4188790](v15);
  uint64_t v38 = a2;
  if (a3 != a2)
  {
    uint64_t v43 = (char *)&v36 - v16;
    unint64_t v19 = *(void (**)(void, void, void, __n128))(v11 + 16);
    uint64_t v18 = v11 + 16;
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v41 = (void (**)(char *, uint64_t))(v18 - 8);
    unint64_t v42 = (void (*)(char *, uint64_t, uint64_t))v19;
    uint64_t v49 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v54 = v20 * (a3 - 1);
    uint64_t v39 = v18;
    uint64_t v40 = v20;
    uint64_t v21 = v20 * a3;
    uint64_t v23 = (char *)&v36 - v16;
    uint64_t v22 = v44;
    uint64_t v37 = a1;
    while (2)
    {
      uint64_t v24 = 0;
      uint64_t v45 = v21;
      uint64_t v46 = a3;
      while (1)
      {
        uint64_t v26 = *v53;
        uint64_t v50 = v21 + v24;
        uint64_t v51 = a1;
        uint64_t v27 = v21 + v24 + v26;
        uint64_t v28 = v42;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v42)(v23, v27, v10, v17);
        v28(v22, v54 + v24 + v26, v10);
        char v29 = v47(v23, v22);
        if (v6)
        {
          uint64_t v35 = *v41;
          (*v41)(v22, v10);
          v35(v23, v10);
          return;
        }
        char v30 = v29;
        uint64_t v31 = *v41;
        (*v41)(v22, v10);
        v31(v23, v10);
        if ((v30 & 1) == 0) {
          break;
        }
        uint64_t v32 = *v53;
        if (!*v53)
        {
          __break(1u);
          return;
        }
        uint64_t v6 = 0;
        uint64_t v21 = v45;
        uint64_t v33 = (char *)(v32 + v54 + v24);
        uint64_t v34 = *v49;
        (*v49)(v52, v32 + v45 + v24, v10);
        swift_arrayInitWithTakeFrontToBack();
        v34(v33, (uint64_t)v52, v10);
        v24 -= v40;
        a1 = v51 + 1;
        uint64_t v25 = v46;
        uint64_t v22 = v44;
        if (v46 == v51 + 1) {
          goto LABEL_10;
        }
      }
      uint64_t v6 = 0;
      uint64_t v21 = v45;
      uint64_t v25 = v46;
LABEL_10:
      a3 = v25 + 1;
      v54 += v40;
      v21 += v40;
      a1 = v37;
      if (a3 != v38) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_1DB1601B4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, unint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v75 = a6;
  uint64_t v76 = a5;
  uint64_t v12 = sub_1DB1EF6B0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v66 - v15;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v66 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v66 - v22;
  uint64_t v77 = *(void *)(v24 + 72);
  if (!v77)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (a2 - a1 == 0x8000000000000000 && v77 == -1) {
    goto LABEL_77;
  }
  int64_t v25 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v77 == -1) {
    goto LABEL_78;
  }
  uint64_t v26 = (uint64_t)(a2 - a1) / v77;
  unint64_t v82 = a1;
  unint64_t v81 = a4;
  uint64_t v27 = v25 / v77;
  unint64_t v78 = a3;
  if (v26 >= v25 / v77)
  {
    if ((v27 & 0x8000000000000000) == 0)
    {
      unint64_t v30 = a1;
      uint64_t v31 = v27 * v77;
      unint64_t v71 = v21;
      if (a4 < a2 || a2 + v31 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v45 = a4 + v31;
      unint64_t v80 = a4 + v31;
      unint64_t v82 = a2;
      if (v31 >= 1 && v30 < a2)
      {
        uint64_t v47 = -v77;
        uint64_t v48 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16);
        uint64_t v74 = v13 + 16;
        uint64_t v69 = v48;
        uint64_t v70 = (void (**)(unint64_t, uint64_t))(v13 + 8);
        uint64_t v66 = -v77;
        unint64_t v67 = a4;
        uint64_t v72 = v12;
        unint64_t v68 = v30;
        while (1)
        {
          uint64_t v49 = v47;
          uint64_t v50 = v69;
          v69((unint64_t)v16, v45 + v47, v12);
          uint64_t v77 = a2;
          unint64_t v51 = a2 + v49;
          unint64_t v52 = v16;
          unint64_t v53 = v71;
          v50(v71, v51, v12);
          char v54 = v76(v52, v53);
          if (v7) {
            break;
          }
          char v55 = v54;
          uint64_t v79 = 0;
          unint64_t v56 = v78;
          uint64_t v73 = (char *)(v78 + v49);
          uint64_t v57 = *v70;
          (*v70)(v53, v12);
          v57((unint64_t)v52, v12);
          uint64_t v16 = v52;
          if (v55)
          {
            uint64_t v58 = v73;
            if (v56 < v77 || (unint64_t)v73 >= v77)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v7 = v79;
              unint64_t v60 = v68;
            }
            else
            {
              BOOL v59 = v56 == v77;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
              if (!v59) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v47 = v66;
            v82 += v66;
          }
          else
          {
            unint64_t v61 = v80;
            v80 += v49;
            uint64_t v58 = v73;
            BOOL v62 = v56 < v61 || (unint64_t)v73 >= v61;
            unint64_t v51 = v77;
            if (v62)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v47 = v66;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
            }
            else
            {
              BOOL v59 = v56 == v61;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
              if (v59)
              {
                uint64_t v47 = v49;
              }
              else
              {
                swift_arrayInitWithTakeBackToFront();
                uint64_t v47 = v66;
              }
            }
          }
          unint64_t v45 = v80;
          if (v80 > v67)
          {
            a2 = v51;
            unint64_t v78 = (unint64_t)v58;
            uint64_t v12 = v72;
            if (v51 > v60) {
              continue;
            }
          }
          goto LABEL_75;
        }
        unint64_t v64 = *v70;
        (*v70)(v53, v12);
        v64((unint64_t)v52, v12);
      }
      goto LABEL_75;
    }
  }
  else if ((v26 & 0x8000000000000000) == 0)
  {
    unint64_t v28 = a1;
    uint64_t v29 = v26 * v77;
    uint64_t v73 = v19;
    if (a4 < v28 || v28 + v29 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v28)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v71 = a4 + v29;
    unint64_t v80 = a4 + v29;
    BOOL v32 = v29 < 1 || a2 >= v78;
    if (!v32)
    {
      uint64_t v70 = *(void (***)(unint64_t, uint64_t))(v13 + 16);
      uint64_t v74 = v13 + 16;
      uint64_t v33 = (void (**)(char *, uint64_t))(v13 + 8);
      while (1)
      {
        uint64_t v34 = v70;
        ((void (*)(char *, unint64_t, uint64_t))v70)(v23, a2, v12);
        uint64_t v35 = v23;
        uint64_t v36 = v73;
        ((void (*)(char *, unint64_t, uint64_t))v34)(v73, a4, v12);
        char v37 = v76(v35, (unint64_t)v36);
        if (v7) {
          break;
        }
        char v38 = v37;
        uint64_t v79 = 0;
        uint64_t v39 = *v33;
        (*v33)(v36, v12);
        v39(v35, v12);
        unint64_t v40 = v82;
        uint64_t v23 = v35;
        if (v38)
        {
          unint64_t v41 = a2 + v77;
          if (v82 < a2 || v82 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v82 == a2)
          {
            unint64_t v40 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v43 = v81 + v77;
          if (v82 < v81 || v82 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v82 != v81)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v81 = v43;
          unint64_t v41 = a2;
        }
        unint64_t v82 = v40 + v77;
        a4 = v81;
        if (v81 < v71)
        {
          a2 = v41;
          BOOL v32 = v41 >= v78;
          uint64_t v7 = v79;
          if (!v32) {
            continue;
          }
        }
        goto LABEL_75;
      }
      uint64_t v63 = *v33;
      (*v33)(v36, v12);
      v63(v35, v12);
    }
LABEL_75:
    sub_1DB160A44(&v82, &v81, (uint64_t *)&v80);
    return 1;
  }
LABEL_79:
  uint64_t result = sub_1DB1F1BF0();
  __break(1u);
  return result;
}

char *sub_1DB160878(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FA8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DB160974(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_1DB1F1BF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

uint64_t sub_1DB160A44(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1DB1F1BF0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1DB160B84(uint64_t a1)
{
  return sub_1DB160878(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DB160B98(uint64_t a1)
{
  return sub_1DB12EB48(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DB160BAC(void *a1)
{
  return sub_1DB12EE30(0, a1[2], 0, a1);
}

BOOL sub_1DB160BC0(uint64_t a1, uint64_t a2)
{
  return sub_1DB15EE44(a1, a2);
}

uint64_t sub_1DB160BDC(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EA90F1F8);
}

uint64_t sub_1DB160C00(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EBA4F420);
}

uint64_t sub_1DB160C1C(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EA90F210);
}

uint64_t sub_1DB160C48(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EBA4F3B8);
}

uint64_t sub_1DB160C6C(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EBA4F3F0);
}

uint64_t sub_1DB160C84(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EBA4F3A0);
}

uint64_t sub_1DB160CB0(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EA90F228);
}

uint64_t sub_1DB160CD4(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EA90F240);
}

uint64_t sub_1DB160CF8(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EA90F258);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1DB160D80(uint64_t a1)
{
  return sub_1DB160DA4(a1, qword_1EBA4F408);
}

uint64_t sub_1DB160DA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1DB1EF810();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1DB1EF800();
}

uint64_t LTUILocalizedStrings.string.getter()
{
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1DB1EF400();

  return v2;
}

uint64_t static LTUILocalizedStrings.== infix(_:_:)()
{
  return 1;
}

uint64_t LTUILocalizedStrings.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t LTUILocalizedStrings.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB160F44()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB160F88()
{
  return sub_1DB1F1E90();
}

uint64_t sub_1DB160FB0()
{
  return sub_1DB1F1EC0();
}

unint64_t sub_1DB160FF4()
{
  unint64_t result = qword_1EA904FB0;
  if (!qword_1EA904FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904FB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LTUILocalizedStrings(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DB1610E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LTUILocalizedStrings()
{
  return &type metadata for LTUILocalizedStrings;
}

uint64_t sub_1DB16111C(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x7865646E69;
      break;
    case 2:
      uint64_t v5 = 0x656372756F73;
      goto LABEL_6;
    case 3:
      uint64_t v6 = 0x656372756F73;
      goto LABEL_8;
    case 4:
      uint64_t v5 = 0x746567726174;
LABEL_6:
      uint64_t v4 = v5 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
      unint64_t v3 = 0xEC000000676E6972;
      break;
    case 5:
      uint64_t v6 = 0x746567726174;
LABEL_8:
      uint64_t v4 = v6 & 0xFFFFFFFFFFFFLL | 0x6F4C000000000000;
      unint64_t v3 = 0xEC000000656C6163;
      break;
    case 6:
      uint64_t v4 = 0x6E656469666E6F63;
      unint64_t v3 = 0xEA00000000006563;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE200000000000000;
  uint64_t v8 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      if (v4 == 0x7865646E69) {
        goto LABEL_21;
      }
      goto LABEL_24;
    case 2:
      uint64_t v9 = 0x656372756F73;
      goto LABEL_16;
    case 3:
      uint64_t v10 = 0x6F4C656372756F73;
      uint64_t v11 = 1701601635;
      goto LABEL_17;
    case 4:
      uint64_t v9 = 0x746567726174;
LABEL_16:
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL | 0x7453000000000000;
      uint64_t v11 = 1735289202;
LABEL_17:
      unint64_t v7 = v11 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v4 != v10) {
        goto LABEL_24;
      }
      goto LABEL_21;
    case 5:
      uint64_t v8 = 0x6F4C746567726174;
      unint64_t v7 = 0xEC000000656C6163;
      goto LABEL_20;
    case 6:
      unint64_t v7 = 0xEA00000000006563;
      if (v4 != 0x6E656469666E6F63) {
        goto LABEL_24;
      }
      goto LABEL_21;
    default:
LABEL_20:
      if (v4 != v8) {
        goto LABEL_24;
      }
LABEL_21:
      if (v3 == v7) {
        char v12 = 1;
      }
      else {
LABEL_24:
      }
        char v12 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1DB161350(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x657474696D6D6F63;
  }
  else {
    uint64_t v3 = 0x65736F706D6F63;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000064;
  }
  if (a2) {
    uint64_t v5 = 0x657474696D6D6F63;
  }
  else {
    uint64_t v5 = 0x65736F706D6F63;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000064;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DB1613FC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001DLL;
  }
  else {
    unint64_t v3 = 0xD000000000000016;
  }
  if (v2) {
    unint64_t v4 = 0x80000001DB1FAFA0;
  }
  else {
    unint64_t v4 = 0x80000001DB1FAFC0;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001DLL;
  }
  else {
    unint64_t v5 = 0xD000000000000016;
  }
  if (a2) {
    unint64_t v6 = 0x80000001DB1FAFC0;
  }
  else {
    unint64_t v6 = 0x80000001DB1FAFA0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DB1614A8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001DB1FAFF0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x7463416B63697571;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 2:
      unint64_t v5 = 0x74616C736E617274;
      unint64_t v3 = 0xEE006261546E6F69;
      break;
    case 3:
      unint64_t v5 = 0x61546172656D6163;
      unint64_t v3 = 0xE900000000000062;
      break;
    case 4:
      unint64_t v5 = 0x61737265766E6F63;
      unint64_t v3 = 0xEF6261546E6F6974;
      break;
    case 5:
      unint64_t v5 = 0x657469726F766166;
      unint64_t v3 = 0xEC00000062615473;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000001DB1FAFF0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB000000006E6F69;
      if (v5 == 0x7463416B63697571) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEE006261546E6F69;
      if (v5 != 0x74616C736E617274) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE900000000000062;
      if (v5 != 0x61546172656D6163) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0x61737265766E6F63;
      unint64_t v6 = 0xEF6261546E6F6974;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEC00000062615473;
      if (v5 != 0x657469726F766166) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DB161708(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC000000656C6163;
  uint64_t v3 = 0x6F4C656372756F73;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F4C656372756F73;
  unint64_t v6 = 0xEC000000656C6163;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F4C746567726174;
      break;
    case 2:
      uint64_t v7 = 0x656372756F73;
      goto LABEL_5;
    case 3:
      uint64_t v7 = 0x746567726174;
LABEL_5:
      uint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0x6554000000000000;
      unint64_t v6 = 0xEA00000000007478;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x6F4C746567726174;
      break;
    case 2:
      uint64_t v8 = 0x656372756F73;
      goto LABEL_10;
    case 3:
      uint64_t v8 = 0x746567726174;
LABEL_10:
      uint64_t v3 = v8 & 0xFFFFFFFFFFFFLL | 0x6554000000000000;
      unint64_t v2 = 0xEA00000000007478;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DB161888(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6B726F7774656ELL;
  }
  else {
    uint64_t v3 = 0x6563697665446E6FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6B726F7774656ELL;
  }
  else {
    uint64_t v5 = 0x6563697665446E6FLL;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DB161930(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED00006E6F697463;
  uint64_t v3 = 0x656E6E6F43206F4ELL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1768319319;
    }
    else {
      uint64_t v5 = 0x72616C756C6C6543;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x656E6E6F43206F4ELL;
  unint64_t v6 = 0xED00006E6F697463;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 1768319319;
    }
    else {
      uint64_t v3 = 0x72616C756C6C6543;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE400000000000000;
    }
    else {
      unint64_t v2 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DB161A4C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000657275;
  unint64_t v3 = 0x6C69614664616572;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C69614664616572;
  unint64_t v6 = 0xEB00000000657275;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000001DB1FB060;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v5 = 0x546C6C6174736E69;
      unint64_t v6 = 0xEE0074756F656D69;
      break;
    case 3:
      unint64_t v5 = 0x466C6C6174736E69;
      unint64_t v6 = 0xEE006572756C6961;
      break;
    case 4:
      unint64_t v5 = 0x6E61697261567369;
      unint64_t v6 = 0xE900000000000074;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000016;
      int v7 = "unavailableForOnDevice";
      goto LABEL_8;
    case 6:
      unint64_t v5 = 0xD00000000000001ALL;
      int v7 = "unavailableForAirplaneMode";
LABEL_8:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001DB1FB060;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v3 = 0x546C6C6174736E69;
      unint64_t v2 = 0xEE0074756F656D69;
      break;
    case 3:
      unint64_t v3 = 0x466C6C6174736E69;
      unint64_t v2 = 0xEE006572756C6961;
      break;
    case 4:
      unint64_t v3 = 0x6E61697261567369;
      unint64_t v2 = 0xE900000000000074;
      break;
    case 5:
      unint64_t v3 = 0xD000000000000016;
      char v8 = "unavailableForOnDevice";
      goto LABEL_16;
    case 6:
      unint64_t v3 = 0xD00000000000001ALL;
      char v8 = "unavailableForAirplaneMode";
LABEL_16:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DB161CDC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656C62;
  uint64_t v3 = 0x616C696176616E75;
  uint64_t v4 = a1;
  uint64_t v5 = 0x616C696176616E75;
  unint64_t v6 = 0xEB00000000656C62;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x656E6E6F63736964;
      unint64_t v6 = 0xEC00000064657463;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x72616C756C6C6563;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1768319351;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6465726977;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000064657463;
      if (v5 == 0x656E6E6F63736964) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x72616C756C6C6563) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1768319351;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6465726977) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DB161EB0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED0000656C676E41;
  uint64_t v3 = 0x656E696C65736162;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656E696C65736162;
  unint64_t v6 = 0xED0000656C676E41;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1684108657;
      break;
    case 2:
      unint64_t v5 = 0x6E6172546A6F7270;
      unint64_t v6 = 0xED00006D726F6673;
      break;
    case 3:
      unint64_t v6 = 0x80000001DB1FB320;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1684108657) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6E6172546A6F7270;
      unint64_t v2 = 0xED00006D726F6673;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x80000001DB1FB320;
      if (v5 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DB162068(char a1, char a2)
{
  if (a1) {
    unint64_t v2 = 0x80000001DB1FB2C0;
  }
  else {
    unint64_t v2 = 0x80000001DB1FB2A0;
  }
  if (a2) {
    unint64_t v3 = 0x80000001DB1FB2C0;
  }
  else {
    unint64_t v3 = 0x80000001DB1FB2A0;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1DB162108(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v4 = 0x73646E756F62;
      break;
    case 2:
      unint64_t v4 = 0x695473646E756F62;
      unint64_t v3 = 0xEF706D617473656DLL;
      break;
    case 3:
      unint64_t v4 = 0x7061726761726170;
      unint64_t v3 = 0xEA00000000007368;
      break;
    case 4:
      unint64_t v4 = 0x664F7265626D756ELL;
      unint64_t v3 = 0xED000073656E694CLL;
      break;
    case 5:
      unint64_t v3 = 0x80000001DB1FB3A0;
      unint64_t v4 = 0xD000000000000015;
      break;
    case 6:
      unint64_t v4 = 0x67696C4174786574;
      unint64_t v3 = 0xED0000746E656D6ELL;
      break;
    case 7:
      unint64_t v4 = 0xD00000000000001BLL;
      unint64_t v3 = 0x80000001DB1FB3D0;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE600000000000000;
      if (v4 == 0x73646E756F62) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v5 = 0xEF706D617473656DLL;
      if (v4 != 0x695473646E756F62) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v5 = 0xEA00000000007368;
      if (v4 != 0x7061726761726170) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v5 = 0xED000073656E694CLL;
      if (v4 != 0x664F7265626D756ELL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v5 = 0x80000001DB1FB3A0;
      if (v4 != 0xD000000000000015) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v6 = 0x67696C4174786574;
      unint64_t v5 = 0xED0000746E656D6ELL;
      goto LABEL_21;
    case 7:
      unint64_t v5 = 0x80000001DB1FB3D0;
      if (v4 != 0xD00000000000001BLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v4 != v6) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DB1623E0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000016;
  }
  else {
    unint64_t v3 = 0x76726573624F6F6ELL;
  }
  if (v2) {
    unint64_t v4 = 0xEE00736E6F697461;
  }
  else {
    unint64_t v4 = 0x80000001DB1FB350;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000016;
  }
  else {
    unint64_t v5 = 0x76726573624F6F6ELL;
  }
  if (a2) {
    unint64_t v6 = 0x80000001DB1FB350;
  }
  else {
    unint64_t v6 = 0xEE00736E6F697461;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DB162498(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7466654C706F74;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7466654C706F74;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7468676952706F74;
      break;
    case 2:
      uint64_t v5 = 0x654C6D6F74746F62;
      unint64_t v3 = 0xEA00000000007466;
      break;
    case 3:
      uint64_t v5 = 0x69526D6F74746F62;
      unint64_t v3 = 0xEB00000000746867;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x7468676952706F74) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x654C6D6F74746F62;
      unint64_t v6 = 0xEA00000000007466;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEB00000000746867;
      if (v5 == 0x69526D6F74746F62) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1DB1F1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t static NetworkPathService.isDisconnected()()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DB1626D8;
  return static NetworkPathService.read()(v0 + 24);
}

uint64_t sub_1DB1626D8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1627D4, 0, 0);
}

uint64_t sub_1DB1627D4()
{
  char v1 = 1;
  switch(*(unsigned char *)(v0 + 24))
  {
    case 1:
      break;
    default:
      char v1 = sub_1DB1F1DB0();
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(v1 & 1);
}

uint64_t NetworkPath.description.getter()
{
  uint64_t result = 0x616C696176616E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E6E6F63736964;
      break;
    case 2:
      uint64_t result = 0x72616C756C6C6563;
      break;
    case 3:
      uint64_t result = 1768319351;
      break;
    case 4:
      uint64_t result = 0x6465726977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t NetworkPath.rawValue.getter()
{
  uint64_t result = 0x616C696176616E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E6E6F63736964;
      break;
    case 2:
      uint64_t result = 0x72616C756C6C6563;
      break;
    case 3:
      uint64_t result = 1768319351;
      break;
    case 4:
      uint64_t result = 0x6465726977;
      break;
    default:
      return result;
  }
  return result;
}

TranslationUI::NetworkPath_optional __swiftcall NetworkPath.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DB1F1C10();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1DB162AC4(unsigned __int8 *a1, char *a2)
{
  return sub_1DB161CDC(*a1, *a2);
}

uint64_t sub_1DB162AD0()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB162BCC()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB162CB0()
{
  return sub_1DB1F1EC0();
}

TranslationUI::NetworkPath_optional sub_1DB162DA8(Swift::String *a1)
{
  return NetworkPath.init(rawValue:)(*a1);
}

void sub_1DB162DB4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000656C62;
  uint64_t v3 = 0x616C696176616E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000064657463;
      uint64_t v3 = 0x656E6E6F63736964;
      goto LABEL_3;
    case 2:
      *a1 = 0x72616C756C6C6563;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 1768319351;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x6465726977;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DB162E74()
{
  return sub_1DB1F1460();
}

uint64_t sub_1DB162ED4()
{
  return sub_1DB1F1450();
}

uint64_t sub_1DB162F24()
{
  uint64_t result = 0x616C696176616E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E6E6F63736964;
      break;
    case 2:
      uint64_t result = 0x72616C756C6C6563;
      break;
    case 3:
      uint64_t result = 1768319351;
      break;
    case 4:
      uint64_t result = 0x6465726977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static NetworkPathService.read()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for Signpost();
  *(void *)(v1 + 24) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB163064, 0, 0);
}

uint64_t sub_1DB163064()
{
  uint64_t v13 = v0;
  if (qword_1EBA4D780 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F3A0);
  unint64_t v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F16F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1DB0DC000, v2, v3, "Network status read", v4, 2u);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }

  sub_1DB0E47C0(&v12);
  if (v12 == 5)
  {
    uint64_t v5 = v0[3];
    sub_1DB173814(12, 0, v5);
    sub_1DB1EFA00();
    swift_allocObject();
    uint64_t v6 = sub_1DB1EF9F0();
    v0[4] = v6;
    uint64_t v7 = swift_task_alloc();
    v0[5] = v7;
    *(void *)(v7 + 16) = v6;
    *(void *)(v7 + 24) = v5;
    char v8 = (void *)swift_task_alloc();
    v0[6] = v8;
    *char v8 = v0;
    v8[1] = sub_1DB163298;
    uint64_t v9 = v0[2];
    return MEMORY[0x1F41880D8](v9, 0, 0, 0x292864616572, 0xE600000000000000, sub_1DB163708, v7, &type metadata for NetworkPath);
  }
  else
  {
    *(unsigned char *)v0[2] = v12;
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1DB163298()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB1633B0, 0, 0);
}

uint64_t sub_1DB1633B0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_1DB163710(v1);
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1DB163420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v5 = sub_1DB1F1060();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Signpost();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FD8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __n128 v14 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a1, v11, v14);
  sub_1DB164090(a3, (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + v17 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v16, v15, v11);
  *(void *)(v19 + v17) = v24;
  sub_1DB1642C8((uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  swift_retain();
  sub_1DB1EF9C0();
  sub_1DB0E5350();
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v7, *MEMORY[0x1E4FBCB48], v26);
  uint64_t v22 = (void *)sub_1DB1F17C0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
  sub_1DB1EF9D0();
}

void sub_1DB163708(uint64_t a1)
{
  sub_1DB163420(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DB163710(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB16376C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v23[0] = a3;
  v23[1] = a4;
  v23[2] = a2;
  uint64_t v4 = sub_1DB1EF9B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DB1EFA20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  __n128 v14 = (char *)v23 - v13;
  sub_1DB1EFA30();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F38B20], v8);
  sub_1DB164414();
  char v15 = sub_1DB1F1230();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  v16(v14, v8);
  if ((v15 & 1) == 0)
  {
    char v28 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FD8);
    goto LABEL_7;
  }
  unint64_t v17 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v17(v7, *MEMORY[0x1E4F38998], v4);
  char v18 = sub_1DB1EFA10();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v7, v4);
  if (v18)
  {
    char v24 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FD8);
LABEL_7:
    sub_1DB1F1530();
    goto LABEL_8;
  }
  v17(v7, *MEMORY[0x1E4F389A0], v4);
  char v20 = sub_1DB1EFA10();
  v19(v7, v4);
  if (v20)
  {
    char v25 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FD8);
    goto LABEL_7;
  }
  v17(v7, *MEMORY[0x1E4F389B8], v4);
  char v22 = sub_1DB1EFA10();
  v19(v7, v4);
  if (v22) {
    char v26 = 2;
  }
  else {
    char v27 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FD8);
  sub_1DB1F1530();
LABEL_8:
  sub_1DB1EF9E0();
  return sub_1DB173E68();
}

void sub_1DB163AFC(unsigned char *a1@<X8>)
{
  if (!getenv("LT_NETWORK_PATH")) {
    goto LABEL_15;
  }
  uint64_t v2 = sub_1DB1F13B0();
  uint64_t v4 = sub_1DB0FFDA4(v2, v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_15;
  }
  sub_1DB1F1A40();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1DB1A8BE4((uint64_t)v20), (v6 & 1) != 0))
  {
    sub_1DB0E52F4(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1DB0E5240((uint64_t)v20);
  if (!*((void *)&v22 + 1))
  {
    sub_1DB0E5294((uint64_t)&v21);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    if (qword_1EBA4D780 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1DB1EF810();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBA4F3A0);
    unint64_t v17 = sub_1DB1EF7F0();
    os_log_type_t v18 = sub_1DB1F16F0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1DB0DC000, v17, v18, "Network path fixture not found", v19, 2u);
      MEMORY[0x1E018CA60](v19, -1, -1);
    }

    LOBYTE(v8) = 5;
    goto LABEL_20;
  }
  v7._countAndFlagsBits = 0x4F5754454E5F544CLL;
  v7._object = (void *)0xEF485441505F4B52;
  NetworkPath.init(rawValue:)(v7);
  int v8 = LOBYTE(v20[0]);
  if (qword_1EBA4D780 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DB1EF810();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBA4F3A0);
  uint64_t v10 = sub_1DB1EF7F0();
  os_log_type_t v11 = sub_1DB1F16F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v20[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    unint64_t v14 = 0xEB00000000656C62;
    uint64_t v15 = 0x616C696176616E75;
    switch(v8)
    {
      case 0:
        break;
      case 1:
        unint64_t v14 = 0xEC00000064657463;
        uint64_t v15 = 0x656E6E6F63736964;
        break;
      case 2:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x72616C756C6C6563;
        break;
      case 3:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1768319351;
        break;
      case 4:
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x6465726977;
        break;
      default:
        goto LABEL_15;
    }
    *(void *)&long long v21 = sub_1DB11F638(v15, v14, v20);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DB0DC000, v10, v11, "Network path fixture found %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v13, -1, -1);
    MEMORY[0x1E018CA60](v12, -1, -1);
  }

LABEL_20:
  *a1 = v8;
}

unint64_t sub_1DB163ED4()
{
  unint64_t result = qword_1EA904FC8;
  if (!qword_1EA904FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904FC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NetworkPath(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB163FF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkPath()
{
  return &type metadata for NetworkPath;
}

ValueMetadata *type metadata accessor for NetworkPathService()
{
  return &type metadata for NetworkPathService;
}

unint64_t sub_1DB16403C()
{
  unint64_t result = qword_1EA904FD0;
  if (!qword_1EA904FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904FD0);
  }
  return result;
}

uint64_t sub_1DB164090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB1640F4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FD8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = (int *)(type metadata accessor for Signpost() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(*(void *)v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  uint64_t v7 = sub_1DB1EF790();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v6, v7);
  unint64_t v8 = v0 + v6 + v5[7];
  uint64_t v9 = sub_1DB1EF760();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB1642C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB16432C(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FD8) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for Signpost() - 8);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_1DB16376C(a1, v1 + v4, v7, v8);
}

unint64_t sub_1DB164414()
{
  unint64_t result = qword_1EA904FE0;
  if (!qword_1EA904FE0)
  {
    sub_1DB1EFA20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA904FE0);
  }
  return result;
}

uint64_t sub_1DB16446C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v49 = sub_1DB1EFEC0();
  MEMORY[0x1F4188790](v49);
  uint64_t v50 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1DB1F0570();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905008);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905010);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905018);
  MEMORY[0x1F4188790](v45);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905020);
  MEMORY[0x1F4188790](v46);
  unint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905028);
  MEMORY[0x1F4188790](v47);
  uint64_t v48 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0580();
  sub_1DB1F0F60();
  sub_1DB1EFEE0();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v19 = &v9[*(int *)(v7 + 44)];
  long long v20 = v57;
  *((_OWORD *)v19 + 4) = v56;
  *((_OWORD *)v19 + 5) = v20;
  *((_OWORD *)v19 + 6) = v58;
  long long v21 = v53;
  *(_OWORD *)uint64_t v19 = v52;
  *((_OWORD *)v19 + 1) = v21;
  long long v22 = v55;
  *((_OWORD *)v19 + 2) = v54;
  *((_OWORD *)v19 + 3) = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1DB1F0C00();
  sub_1DB1F0590();
  uint64_t v23 = sub_1DB1F0C40();
  swift_release();
  LOBYTE(v5) = sub_1DB1F06E0();
  sub_1DB0E8B70((uint64_t)v9, (uint64_t)v13, &qword_1EA905008);
  char v24 = &v13[*(int *)(v11 + 44)];
  *(void *)char v24 = v23;
  v24[8] = (char)v5;
  sub_1DB0E8BD4((uint64_t)v9, &qword_1EA905008);
  if (sub_1DB1F0590())
  {
    uint64_t v25 = sub_1DB1F0C60();
  }
  else
  {
    id v26 = objc_msgSend(self, sel_systemBackgroundColor);
    uint64_t v25 = MEMORY[0x1E018ABF0](v26);
  }
  uint64_t v27 = v25;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1DB0E8B70((uint64_t)v13, (uint64_t)v15, &qword_1EA905010);
  uint64_t v29 = (uint64_t *)&v15[*(int *)(v45 + 36)];
  *uint64_t v29 = KeyPath;
  v29[1] = v27;
  sub_1DB0E8BD4((uint64_t)v13, &qword_1EA905010);
  sub_1DB1F0740();
  uint64_t v30 = sub_1DB1F0750();
  swift_release();
  uint64_t v31 = swift_getKeyPath();
  sub_1DB0E8B70((uint64_t)v15, (uint64_t)v17, &qword_1EA905018);
  BOOL v32 = (uint64_t *)&v17[*(int *)(v46 + 36)];
  *BOOL v32 = v31;
  v32[1] = v30;
  sub_1DB0E8BD4((uint64_t)v15, &qword_1EA905018);
  uint64_t v33 = v50;
  uint64_t v34 = &v50[*(int *)(v49 + 20)];
  uint64_t v35 = *MEMORY[0x1E4F3D4A0];
  uint64_t v36 = sub_1DB1F02B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v33 = _Q0;
  uint64_t v42 = (uint64_t)v48;
  uint64_t v43 = (uint64_t)&v48[*(int *)(v47 + 36)];
  sub_1DB0FDD68((uint64_t)v33, v43);
  *(_WORD *)(v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903E40) + 36)) = 256;
  sub_1DB0E8B70((uint64_t)v17, v42, &qword_1EA905020);
  sub_1DB0FDDCC((uint64_t)v33);
  sub_1DB0E8BD4((uint64_t)v17, &qword_1EA905020);
  return sub_1DB165168(v42, v51);
}

TranslationUI::PanelButtonStyle __swiftcall PanelButtonStyle.init(isProminent:)(TranslationUI::PanelButtonStyle isProminent)
{
  v1->prominent = isProminent.prominent;
  return isProminent;
}

uint64_t PanelButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F06A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v3 + 16))(&v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v3 + 32))(v11 + v10, &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  uint64_t v14 = a1;
  sub_1DB1F0670();
  sub_1DB1655F0(&qword_1EA904FF0, MEMORY[0x1E4F3DFC0]);
  sub_1DB1F0D70();
  sub_1DB0E3C44(&qword_1EA904FF8, &qword_1EA904FE8);
  sub_1DB164C9C();
  sub_1DB1F09A0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DB164C78()
{
  return sub_1DB1F0680();
}

unint64_t sub_1DB164C9C()
{
  unint64_t result = qword_1EA905000;
  if (!qword_1EA905000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905000);
  }
  return result;
}

uint64_t sub_1DB164CF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB164D0C(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F06A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904FE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v3 + 16))(&v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v3 + 32))(v11 + v10, &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  uint64_t v14 = a1;
  sub_1DB1F0670();
  sub_1DB1655F0(&qword_1EA904FF0, MEMORY[0x1E4F3DFC0]);
  sub_1DB1F0D70();
  sub_1DB0E3C44(&qword_1EA904FF8, &qword_1EA904FE8);
  sub_1DB164C9C();
  sub_1DB1F09A0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unsigned char *storeEnumTagSinglePayload for PanelButtonStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB165060);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PanelButtonStyle()
{
  return &type metadata for PanelButtonStyle;
}

uint64_t sub_1DB165098()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for BorderedButtonAlternative()
{
  return &type metadata for BorderedButtonAlternative;
}

uint64_t sub_1DB16513C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB165168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_6()
{
  uint64_t v1 = sub_1DB1F06A0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DB165264()
{
  return sub_1DB1F0690();
}

unint64_t sub_1DB1652C4()
{
  unint64_t result = qword_1EA905030;
  if (!qword_1EA905030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905028);
    sub_1DB165364();
    sub_1DB0E3C44(&qword_1EA903E70, &qword_1EA903E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905030);
  }
  return result;
}

unint64_t sub_1DB165364()
{
  unint64_t result = qword_1EA905038;
  if (!qword_1EA905038)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905020);
    sub_1DB165404();
    sub_1DB0E3C44(&qword_1EA903F80, &qword_1EA903F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905038);
  }
  return result;
}

unint64_t sub_1DB165404()
{
  unint64_t result = qword_1EA905040;
  if (!qword_1EA905040)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905018);
    sub_1DB1654A4();
    sub_1DB0E3C44(&qword_1EA904280, &qword_1EA904288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905040);
  }
  return result;
}

unint64_t sub_1DB1654A4()
{
  unint64_t result = qword_1EA905048;
  if (!qword_1EA905048)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905010);
    sub_1DB165544();
    sub_1DB0E3C44(&qword_1EA904018, &qword_1EA904020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905048);
  }
  return result;
}

unint64_t sub_1DB165544()
{
  unint64_t result = qword_1EA905050;
  if (!qword_1EA905050)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905008);
    sub_1DB1655F0((unint64_t *)&qword_1EA903A98, MEMORY[0x1E4F3DB78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905050);
  }
  return result;
}

uint64_t sub_1DB1655F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static PlayButton.Size.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PlayButton.Size.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t PlayButton.Size.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

uint64_t PlayButton.init(isPlaying:size:action:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  *(unsigned char *)a5 = result;
  *(unsigned char *)(a5 + 1) = v5;
  *(void *)(a5 + 8) = a3;
  *(void *)(a5 + 16) = a4;
  return result;
}

uint64_t PlayButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905058);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DB1EFE70();
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905060);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905068);
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  char v13 = v1[1];
  uint64_t v15 = *((void *)v1 + 1);
  uint64_t v14 = *((void *)v1 + 2);
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v12;
  *(unsigned char *)(v16 + 17) = v13;
  *(void *)(v16 + 24) = v15;
  *(void *)(v16 + 32) = v14;
  char v33 = v12;
  unint64_t v17 = v11;
  uint64_t v18 = (uint64_t)v30;
  char v34 = v13;
  uint64_t v35 = v15;
  uint64_t v36 = v14;
  sub_1DB0EB758(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905070);
  sub_1DB166054();
  sub_1DB1F0D70();
  sub_1DB1EFE60();
  uint64_t v19 = sub_1DB0E3C44(&qword_1EA9050B8, &qword_1EA905060);
  uint64_t v20 = sub_1DB166210((unint64_t *)&qword_1EA903ED8, MEMORY[0x1E4F3CD40]);
  sub_1DB1F0990();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  uint64_t v21 = *MEMORY[0x1E4F3CB80];
  uint64_t v22 = sub_1DB1EFDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v18, v21, v22);
  sub_1DB166210(&qword_1EA9050C0, MEMORY[0x1E4F3CB98]);
  uint64_t result = sub_1DB1F1230();
  if (result)
  {
    uint64_t v37 = v6;
    uint64_t v38 = v3;
    uint64_t v39 = v19;
    uint64_t v40 = v20;
    swift_getOpaqueTypeConformance2();
    sub_1DB0E3C44(&qword_1EA9050C8, &qword_1EA905058);
    uint64_t v24 = v27;
    sub_1DB1F0A20();
    sub_1DB0E8BD4(v18, &qword_1EA905058);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v17, v24);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DB165B88()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB165BC8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1DB165BF8@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v32 = a2;
  uint64_t v35 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D848);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DB1F0CC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9050D8);
  MEMORY[0x1F4188790](v33);
  char v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9050A8);
  MEMORY[0x1F4188790](v34);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v32 - v16;
  if ((a1 & 0xFF00) == 0x200)
  {
    uint64_t v18 = sub_1DB1F0C90();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F3EC48], v7);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 28), v10, v7);
    *uint64_t v6 = KeyPath;
    sub_1DB0E8B70((uint64_t)v6, (uint64_t)v14 + *(int *)(v34 + 36), &qword_1EBA4D848);
    uint64_t *v14 = v18;
    swift_retain();
    sub_1DB0E8BD4((uint64_t)v6, &qword_1EBA4D848);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
    sub_1DB166AE0((uint64_t)v14, (uint64_t)v17);
    sub_1DB0E8B70((uint64_t)v17, (uint64_t)v12, &qword_1EA9050A8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905088);
    sub_1DB1660D0();
    sub_1DB166170();
    sub_1DB1F0400();
    return sub_1DB0E8BD4((uint64_t)v17, &qword_1EA9050A8);
  }
  else
  {
    uint64_t v21 = sub_1DB1F0F60();
    uint64_t v23 = v22;
    sub_1DB1662CC(a1 & 0xFFFFFF01, (uint64_t)&v36);
    uint64_t v24 = v37;
    uint64_t v25 = v38;
    char v26 = v39;
    char v27 = BYTE1(v39);
    long long v32 = v36;
    sub_1DB1F0F60();
    sub_1DB1EFC00();
    uint64_t v28 = v36;
    char v29 = BYTE8(v36);
    uint64_t v30 = v37;
    char v31 = v38;
    *(void *)char v12 = v21;
    *((void *)v12 + 1) = v23;
    *((_OWORD *)v12 + 1) = v32;
    *((void *)v12 + 4) = v24;
    *((void *)v12 + 5) = v25;
    v12[48] = v26;
    v12[49] = v27;
    *((void *)v12 + 7) = v28;
    v12[64] = v29;
    *((void *)v12 + 9) = v30;
    v12[80] = v31;
    *(_OWORD *)(v12 + 88) = v39;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905088);
    sub_1DB1660D0();
    sub_1DB166170();
    return sub_1DB1F0400();
  }
}

uint64_t sub_1DB166040@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB165BF8(*(unsigned __int8 *)(v1 + 16) | (*(unsigned __int8 *)(v1 + 17) << 8), *(void *)(v1 + 24), a1);
}

unint64_t sub_1DB166054()
{
  unint64_t result = qword_1EA905078;
  if (!qword_1EA905078)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905070);
    sub_1DB1660D0();
    sub_1DB166170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905078);
  }
  return result;
}

unint64_t sub_1DB1660D0()
{
  unint64_t result = qword_1EA905080;
  if (!qword_1EA905080)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905088);
    sub_1DB0E3C44(&qword_1EA905090, &qword_1EA905098);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905080);
  }
  return result;
}

unint64_t sub_1DB166170()
{
  unint64_t result = qword_1EA9050A0;
  if (!qword_1EA9050A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9050A8);
    sub_1DB0E3C44(&qword_1EA9050B0, &qword_1EBA4D848);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9050A0);
  }
  return result;
}

uint64_t sub_1DB166210(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DB16625C()
{
  unint64_t result = qword_1EA9050D0;
  if (!qword_1EA9050D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9050D0);
  }
  return result;
}

uint64_t sub_1DB1662B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1662CC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v16 = a1;
  uint64_t v3 = sub_1DB1F0CA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1F0C90();
  uint64_t v7 = *MEMORY[0x1E4F3EBF8];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v15(v6, v7, v3);
  uint64_t v8 = sub_1DB1F0CD0();
  swift_release();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  type metadata accessor for _BundleObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = sub_1DB1F0C70();
  sub_1DB1F0C90();
  v15(v6, v7, v3);
  uint64_t v13 = sub_1DB1F0CD0();
  swift_release();
  v9(v6, v3);
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = 0;
  *(_WORD *)(a2 + 32) = 1;
  swift_retain();
  return swift_release();
}

uint64_t destroy for PlayButton(uint64_t result)
{
  if (*(void *)(result + 8)) {
    return swift_release();
  }
  return result;
}

uint64_t _s13TranslationUI10PlayButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for PlayButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    _OWORD *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PlayButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    _OWORD *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayButton(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayButton()
{
  return &type metadata for PlayButton;
}

unsigned char *storeEnumTagSinglePayload for PlayButton.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB166848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayButton.Size()
{
  return &type metadata for PlayButton.Size;
}

uint64_t sub_1DB166880()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB1669CC()
{
  return sub_1DB1EFF20();
}

uint64_t sub_1DB1669F0()
{
  return sub_1DB1EFF20();
}

uint64_t sub_1DB166A14(uint64_t a1)
{
  uint64_t v2 = sub_1DB1F0CC0();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1DB1EFF30();
}

uint64_t sub_1DB166AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9050A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DB166B48(void *a1@<X8>)
{
  *a1 = CGPointMake;
  a1[1] = 0;
}

uint64_t sub_1DB166B60(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t (*EnvironmentValues.presentLanguageSelection.getter())()
{
  sub_1DB166D68();
  sub_1DB1F0170();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_1DB166DF4;
}

uint64_t sub_1DB166BF8()
{
  return sub_1DB1F0180();
}

uint64_t sub_1DB166C58(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t EnvironmentValues.presentLanguageSelection.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1DB166D68();
  return sub_1DB1F0180();
}

uint64_t (*EnvironmentValues._presentLanguageSelection.getter())()
{
  sub_1DB166D68();
  sub_1DB1F0170();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_1DB1672B0;
}

unint64_t sub_1DB166D68()
{
  unint64_t result = qword_1EA9050E0;
  if (!qword_1EA9050E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9050E0);
  }
  return result;
}

uint64_t sub_1DB166DBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB166DF4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t EnvironmentValues._presentLanguageSelection.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1DB166D68();
  return sub_1DB1F0180();
}

uint64_t sub_1DB166E98()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void (*EnvironmentValues.presentLanguageSelection.modify(void *a1))(uint64_t **a1, char a2)
{
  __n128 v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1DB166D68();
  sub_1DB1F0170();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *((_OWORD *)v3 + 1);
  void *v3 = sub_1DB1672B0;
  v3[1] = v4;
  return sub_1DB166F6C;
}

void sub_1DB166F6C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  if (a2)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
    v2[2] = (uint64_t)sub_1DB1672D8;
    v2[3] = v5;
    swift_retain();
    sub_1DB1F0180();
    swift_release();
  }
  else
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v3;
    v2[2] = (uint64_t)sub_1DB1672D8;
    v2[3] = v6;
    sub_1DB1F0180();
  }
  free(v2);
}

void (*EnvironmentValues._presentLanguageSelection.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1DB166D68();
  sub_1DB1F0170();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *((_OWORD *)v3 + 1);
  void *v3 = sub_1DB1672B0;
  v3[1] = v4;
  return sub_1DB167108;
}

void sub_1DB167108(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  if (a2)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
    v2[2] = (uint64_t)sub_1DB1672D8;
    v2[3] = v5;
    swift_retain();
    sub_1DB1F0180();
    swift_release();
  }
  else
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v3;
    v2[2] = (uint64_t)sub_1DB1672D8;
    v2[3] = v6;
    sub_1DB1F0180();
  }
  free(v2);
}

double sub_1DB1671F8@<D0>(_OWORD *a1@<X8>)
{
  sub_1DB166D68();
  sub_1DB1F0170();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_1DB16724C@<D0>(_OWORD *a1@<X8>)
{
  sub_1DB166D68();
  sub_1DB1F0170();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for PresentActionKey()
{
  return &type metadata for PresentActionKey;
}

const __SCNetworkReachability *Reachability.networkStatus.getter@<X0>(char *a1@<X8>)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  double result = *(const __SCNetworkReachability **)(v1 + 48);
  if (result
    && (SCNetworkReachabilityFlags flags = 0,
        double result = (const __SCNetworkReachability *)SCNetworkReachabilityGetFlags(result, &flags),
        result)
    && (flags & 2) != 0)
  {
    uint64_t v5 = *(const __SCNetworkReachability **)(v1 + 48);
    if (v5 && (SCNetworkReachabilityFlags flags = 0, SCNetworkReachabilityGetFlags(v5, &flags)) && (flags & 4) != 0)
    {
      char v4 = 0;
      double result = *(const __SCNetworkReachability **)(v1 + 48);
      if (!result) {
        goto LABEL_5;
      }
    }
    else
    {
      char v4 = 1;
      double result = *(const __SCNetworkReachability **)(v1 + 48);
      if (!result) {
        goto LABEL_5;
      }
    }
    SCNetworkReachabilityFlags flags = 0;
    if (SCNetworkReachabilityGetFlags(result, &flags) && (flags & 0x20) != 0) {
      goto LABEL_15;
    }
    double result = *(const __SCNetworkReachability **)(v1 + 48);
    if (!result) {
      goto LABEL_5;
    }
    SCNetworkReachabilityFlags flags = 0;
    if (SCNetworkReachabilityGetFlags(result, &flags))
    {
      if ((flags & 8) != 0)
      {
LABEL_15:
        uint64_t v6 = *(const __SCNetworkReachability **)(v1 + 48);
        if (!v6 || (SCNetworkReachabilityFlags flags = 0, !SCNetworkReachabilityGetFlags(v6, &flags)) || (flags & 0x10) == 0) {
          char v4 = 1;
        }
      }
    }
    double result = *(const __SCNetworkReachability **)(v1 + 48);
    if (result)
    {
      SCNetworkReachabilityFlags flags = 0;
      double result = (const __SCNetworkReachability *)SCNetworkReachabilityGetFlags(result, &flags);
      if (result)
      {
        if ((flags & 0x40000) != 0) {
          char v4 = 2;
        }
      }
    }
  }
  else
  {
    char v4 = 0;
  }
LABEL_5:
  *a1 = v4;
  return result;
}

TranslationUI::NetworkStatus_optional __swiftcall NetworkStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DB1F1C10();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t NetworkStatus.rawValue.getter()
{
  uint64_t v1 = 1768319319;
  if (*v0 != 1) {
    uint64_t v1 = 0x72616C756C6C6543;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656E6E6F43206F4ELL;
  }
}

uint64_t sub_1DB1674E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DB161930(*a1, *a2);
}

uint64_t sub_1DB1674EC()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB167594()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB167628()
{
  return sub_1DB1F1EC0();
}

TranslationUI::NetworkStatus_optional sub_1DB1676CC(Swift::String *a1)
{
  return NetworkStatus.init(rawValue:)(*a1);
}

void sub_1DB1676D8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED00006E6F697463;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1768319319;
  if (v2 != 1)
  {
    uint64_t v5 = 0x72616C756C6C6543;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x656E6E6F43206F4ELL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t static Reachability.reachibilityChangedNotificationName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1DB167758()
{
  uint64_t result = sub_1DB1F1260();
  qword_1EA9050E8 = result;
  return result;
}

id static Reachability.reachibilityChangedNotification.getter()
{
  if (qword_1EA903550 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA9050E8;
  return v0;
}

uint64_t Reachability.__allocating_init(networkReachability:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Reachability.init(networkReachability:)(a1);
  return v2;
}

uint64_t Reachability.init(networkReachability:)(uint64_t a1)
{
  v10[0] = a1;
  uint64_t v2 = sub_1DB1F1780();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DB1F1760();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1DB1F1080();
  MEMORY[0x1F4188790](v7 - 8);
  *(_OWORD *)(v1 + 44) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(unsigned char *)(v1 + 6__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  sub_1DB0E5350();
  sub_1DB1F1070();
  v10[1] = MEMORY[0x1E4FBC860];
  sub_1DB167B18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8F0);
  sub_1DB167B70();
  sub_1DB1F19B0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v2);
  *(void *)(v1 + 64) = sub_1DB1F17B0();
  *(unsigned char *)(v1 + 72) = 0;
  *(void *)(v1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = objc_msgSend(self, sel_defaultCenter);
  uint64_t v8 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = v10[0];

  return v1;
}

uint64_t Reachability.deinit()
{
  sub_1DB0EB788(*(void *)(v0 + 16));
  sub_1DB0EB788(*(void *)(v0 + 32));

  return v0;
}

uint64_t Reachability.__deallocating_deinit()
{
  sub_1DB0EB788(*(void *)(v0 + 16));
  sub_1DB0EB788(*(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

unint64_t sub_1DB167B18()
{
  unint64_t result = qword_1EBA4D920;
  if (!qword_1EBA4D920)
  {
    sub_1DB1F1760();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D920);
  }
  return result;
}

unint64_t sub_1DB167B70()
{
  unint64_t result = qword_1EBA4D8F8;
  if (!qword_1EBA4D8F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D8F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D8F8);
  }
  return result;
}

unint64_t sub_1DB167BD0()
{
  unint64_t result = qword_1EA9050F0;
  if (!qword_1EA9050F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9050F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB167D80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

uint64_t type metadata accessor for Reachability()
{
  return self;
}

uint64_t method lookup function for Reachability(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Reachability);
}

uint64_t dispatch thunk of Reachability.__allocating_init(networkReachability:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t sub_1DB167E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      long long v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        uint64_t v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_1DB171374(qword_1EA9051F0, MEMORY[0x1E4F27A78]);
        char v23 = sub_1DB1F1230();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1DB168028(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    int v3 = (unsigned __int8 *)(a2 + 56);
    for (uint64_t i = (unsigned char *)(a1 + 56); ; i += 48)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      uint64_t v7 = *((void *)v3 - 1);
      int v8 = *v3;
      BOOL v9 = *((void *)i - 3) == *((void *)v3 - 3) && *((void *)i - 2) == *((void *)v3 - 2);
      if (!v9 && (sub_1DB1F1DB0() & 1) == 0) {
        break;
      }
      if (v6)
      {
        if (v5)
        {
          if (v7) {
            int v10 = v8;
          }
          else {
            int v10 = 0;
          }
          if (v10 != 1) {
            return 0;
          }
        }
        else
        {
          if (v7) {
            char v11 = 0;
          }
          else {
            char v11 = v8;
          }
          if ((v11 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v8)
      {
        return 0;
      }
      v3 += 48;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1DB1680F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v8);
  int v10 = (char *)&v50 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v50 - v12;
  MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v50 - v17;
  MEMORY[0x1F4188790](v19);
  BOOL v26 = (char *)&v50 - v25;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 == *(void *)(a2 + 16))
  {
    if (!v27 || a1 == a2) {
      return 1;
    }
    uint64_t v54 = v21;
    uint64_t v55 = v24;
    uint64_t v59 = v20;
    uint64_t v56 = v23;
    long long v57 = v6;
    unint64_t v28 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v50 = *(void *)(v22 + 72);
    uint64_t v51 = a2;
    uint64_t v52 = a1;
    long long v53 = v10;
    uint64_t v29 = v21;
    while (1)
    {
      uint64_t v58 = v27;
      sub_1DB171504(a1 + v28, (uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
      sub_1DB171504(a2 + v28, (uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
      char v31 = MEMORY[0x1E01895E0](v26, v18);
      sub_1DB171504((uint64_t)v26, v29, type metadata accessor for SharedTranslations.Translation);
      uint64_t v32 = v55;
      sub_1DB171504((uint64_t)v18, v55, type metadata accessor for SharedTranslations.Translation);
      if ((v31 & 1) == 0) {
        break;
      }
      uint64_t v33 = (uint64_t)v13;
      uint64_t v34 = v59;
      char v35 = MEMORY[0x1E01895E0](v29 + *(int *)(v59 + 20), v32 + *(int *)(v59 + 20));
      sub_1DB17156C(v32, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C(v29, type metadata accessor for SharedTranslations.Translation);
      uint64_t v36 = (uint64_t)v26;
      sub_1DB171504((uint64_t)v26, v33, type metadata accessor for SharedTranslations.Translation);
      sub_1DB171504((uint64_t)v18, (uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
      if ((v35 & 1) == 0) {
        goto LABEL_21;
      }
      uint64_t v37 = *(int *)(v34 + 24);
      uint64_t v38 = *(void *)(v33 + v37);
      uint64_t v39 = *(void *)(v33 + v37 + 8);
      uint64_t v40 = &v10[v37];
      BOOL v41 = v38 == *(void *)v40 && v39 == *((void *)v40 + 1);
      uint64_t v13 = (char *)v33;
      if (v41)
      {
        sub_1DB17156C(v33, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C((uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
        uint64_t v43 = v56;
        sub_1DB171504((uint64_t)v26, v56, type metadata accessor for SharedTranslations.Translation);
        uint64_t v44 = (uint64_t)v57;
        sub_1DB171504((uint64_t)v18, (uint64_t)v57, type metadata accessor for SharedTranslations.Translation);
      }
      else
      {
        char v42 = sub_1DB1F1DB0();
        sub_1DB17156C(v33, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C((uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
        uint64_t v43 = v56;
        sub_1DB171504((uint64_t)v26, v56, type metadata accessor for SharedTranslations.Translation);
        uint64_t v44 = (uint64_t)v57;
        sub_1DB171504((uint64_t)v18, (uint64_t)v57, type metadata accessor for SharedTranslations.Translation);
        if ((v42 & 1) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t v45 = *(int *)(v59 + 28);
      uint64_t v46 = *(void *)(v43 + v45);
      uint64_t v47 = *(void *)(v43 + v45 + 8);
      uint64_t v48 = (void *)(v44 + v45);
      if (v46 == *v48 && v47 == v48[1])
      {
        sub_1DB17156C(v43, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C(v44, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C((uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C((uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
      }
      else
      {
        char v30 = sub_1DB1F1DB0();
        sub_1DB17156C(v43, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C((uint64_t)v57, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C((uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
        sub_1DB17156C((uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
        if ((v30 & 1) == 0) {
          return 0;
        }
      }
      a2 = v51;
      v28 += v50;
      uint64_t v27 = v58 - 1;
      a1 = v52;
      int v10 = v53;
      if (v58 == 1) {
        return 1;
      }
    }
    sub_1DB17156C(v32, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C(v29, type metadata accessor for SharedTranslations.Translation);
    uint64_t v36 = (uint64_t)v26;
    sub_1DB171504((uint64_t)v26, (uint64_t)v13, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504((uint64_t)v18, (uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
    uint64_t v33 = (uint64_t)v13;
LABEL_21:
    sub_1DB17156C(v33, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v10, type metadata accessor for SharedTranslations.Translation);
    BOOL v26 = (char *)v36;
    uint64_t v43 = v56;
    sub_1DB171504(v36, v56, type metadata accessor for SharedTranslations.Translation);
    uint64_t v44 = (uint64_t)v57;
    sub_1DB171504((uint64_t)v18, (uint64_t)v57, type metadata accessor for SharedTranslations.Translation);
LABEL_22:
    sub_1DB17156C(v43, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C(v44, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v18, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v26, type metadata accessor for SharedTranslations.Translation);
  }
  return 0;
}

uint64_t sub_1DB168680(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v32 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904888);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LanguageOption() - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = *(void *)(a2 + 16);
  if (!v16) {
    return 0;
  }
  uint64_t v17 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v18 = a2;
  uint64_t v19 = (uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v29 = v18;
  char v30 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v20 = *(void *)(v13 + 72);
  uint64_t v34 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v35 = v20;
  swift_bridgeObjectRetain();
  uint64_t v31 = v6;
  while (1)
  {
    sub_1DB171504(v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    uint64_t v21 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_1DB171504((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    sub_1DB171504(v36, v21, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    uint64_t v22 = *v19;
    unsigned int v23 = (*v19)(v8, 2, v3);
    if (v23)
    {
      if (v23 == 1)
      {
        if (v22((char *)v21, 2, v3) == 1) {
          goto LABEL_16;
        }
      }
      else if (v22((char *)v21, 2, v3) == 2)
      {
        goto LABEL_16;
      }
      goto LABEL_4;
    }
    sub_1DB171504((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    if (!v22((char *)v21, 2, v3)) {
      break;
    }
    (*v34)(v11, v3);
LABEL_4:
    sub_1DB0E8BD4((uint64_t)v8, &qword_1EA904888);
LABEL_5:
    sub_1DB17156C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    v17 += v35;
    if (!--v16)
    {
      uint64_t v27 = 0;
      goto LABEL_17;
    }
  }
  uint64_t v24 = v32;
  (*v30)(v32, v21, v3);
  int v33 = MEMORY[0x1E01895E0](v11, v24);
  uint64_t v25 = *v34;
  BOOL v26 = v24;
  uint64_t v6 = v31;
  (*v34)(v26, v3);
  v25(v11, v3);
  if ((v33 & 1) == 0)
  {
    sub_1DB17156C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LanguageOption);
    goto LABEL_5;
  }
LABEL_16:
  sub_1DB17156C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  sub_1DB17156C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LanguageOption);
  uint64_t v27 = 1;
LABEL_17:
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1DB168A94(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = (int *)type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1F4188790](v49);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v48 - v8;
  MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v48 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v48 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)v48 - v21;
  uint64_t v23 = *(void *)(a2 + 16);
  if (!v23) {
    return 0;
  }
  uint64_t v52 = v20;
  uint64_t v54 = v19;
  uint64_t v24 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v50 = *(void *)(v18 + 72);
  v48[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v51 = v9;
  long long v53 = v16;
  do
  {
    uint64_t v26 = (uint64_t)v5;
    sub_1DB171504(v24, (uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
    char v27 = MEMORY[0x1E01895E0](v22, a1);
    sub_1DB171504((uint64_t)v22, (uint64_t)v16, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504(a1, (uint64_t)v13, type metadata accessor for SharedTranslations.Translation);
    if ((v27 & 1) == 0)
    {
      sub_1DB17156C((uint64_t)v13, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v16, type metadata accessor for SharedTranslations.Translation);
      uint64_t v41 = v52;
      sub_1DB171504((uint64_t)v22, v52, type metadata accessor for SharedTranslations.Translation);
      sub_1DB171504(a1, (uint64_t)v9, type metadata accessor for SharedTranslations.Translation);
      uint64_t v31 = v41;
      uint64_t v5 = (char *)v26;
LABEL_14:
      sub_1DB17156C(v31, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v9, type metadata accessor for SharedTranslations.Translation);
      uint64_t v40 = v54;
      sub_1DB171504((uint64_t)v22, v54, type metadata accessor for SharedTranslations.Translation);
      sub_1DB171504(a1, (uint64_t)v5, type metadata accessor for SharedTranslations.Translation);
      uint64_t v16 = v53;
LABEL_15:
      sub_1DB17156C(v40, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v5, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
      goto LABEL_4;
    }
    char v28 = MEMORY[0x1E01895E0](&v16[v49[5]], &v13[v49[5]]);
    sub_1DB17156C((uint64_t)v13, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v16, type metadata accessor for SharedTranslations.Translation);
    uint64_t v29 = v13;
    uint64_t v30 = v52;
    sub_1DB171504((uint64_t)v22, v52, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504(a1, (uint64_t)v9, type metadata accessor for SharedTranslations.Translation);
    uint64_t v31 = v30;
    uint64_t v13 = v29;
    uint64_t v5 = (char *)v26;
    if ((v28 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v32 = v49[6];
    uint64_t v33 = *(void *)(v31 + v32);
    uint64_t v34 = *(void *)(v31 + v32 + 8);
    uint64_t v35 = &v9[v32];
    if (v33 == *(void *)v35 && v34 == *((void *)v35 + 1))
    {
      sub_1DB17156C(v31, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v9, type metadata accessor for SharedTranslations.Translation);
      uint64_t v40 = v54;
      sub_1DB171504((uint64_t)v22, v54, type metadata accessor for SharedTranslations.Translation);
      sub_1DB171504(a1, v26, type metadata accessor for SharedTranslations.Translation);
      uint64_t v16 = v53;
    }
    else
    {
      uint64_t v37 = v31;
      char v38 = sub_1DB1F1DB0();
      uint64_t v39 = v37;
      uint64_t v13 = v29;
      sub_1DB17156C(v39, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v9, type metadata accessor for SharedTranslations.Translation);
      uint64_t v40 = v54;
      sub_1DB171504((uint64_t)v22, v54, type metadata accessor for SharedTranslations.Translation);
      uint64_t v5 = (char *)v26;
      sub_1DB171504(a1, v26, type metadata accessor for SharedTranslations.Translation);
      uint64_t v16 = v53;
      if ((v38 & 1) == 0) {
        goto LABEL_15;
      }
    }
    uint64_t v42 = v49[7];
    uint64_t v43 = *(void *)(v40 + v42);
    uint64_t v44 = *(void *)(v40 + v42 + 8);
    uint64_t v45 = &v5[v42];
    if (v43 == *(void *)v45 && v44 == *((void *)v45 + 1))
    {
      sub_1DB17156C(v40, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v5, type metadata accessor for SharedTranslations.Translation);
      sub_1DB17156C((uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
LABEL_20:
      uint64_t v46 = 1;
      goto LABEL_22;
    }
    char v25 = sub_1DB1F1DB0();
    sub_1DB17156C(v40, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C(v26, type metadata accessor for SharedTranslations.Translation);
    uint64_t v5 = (char *)v26;
    sub_1DB17156C((uint64_t)v22, type metadata accessor for SharedTranslations.Translation);
    if (v25) {
      goto LABEL_20;
    }
LABEL_4:
    uint64_t v9 = v51;
    v24 += v50;
    --v23;
  }
  while (v23);
  uint64_t v46 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1DB168FE0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_1DB169070()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_1DB169128(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unsigned __int8 *v3 = a1;
}

void sub_1DB16917C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unsigned __int8 *v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_1DB1691E0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DB169378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  return sub_1DB1693CC(v3, a1);
}

uint64_t sub_1DB1693CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB169574(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1695D0(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1DB1695D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB169638(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1693CC(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1695D0((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t (*sub_1DB1696F8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1DB169754(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  void *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB1697C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DB16980C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  void *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DB169860())()
{
  return j__swift_endAccess;
}

uint64_t sub_1DB1698BC@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1DB171224;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1DB0EB758(v4);
}

uint64_t sub_1DB16995C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1DB17121C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1DB0EB758(v3);
  return sub_1DB0EB788(v8);
}

uint64_t sub_1DB169A24()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1DB0EB758(*v1);
  return v2;
}

uint64_t sub_1DB169A80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1DB0EB788(v6);
}

uint64_t (*sub_1DB169AE0())()
{
  return j_j__swift_endAccess;
}

uint64_t static SharedTranslations.translationGroupSharedTranslations()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v25 - v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - v13;
  id v15 = objc_msgSend(self, sel_defaultManager);
  uint64_t v16 = (void *)sub_1DB1F1260();
  id v17 = objc_msgSend(v15, sel_containerURLForSecurityApplicationGroupIdentifier_, v16);

  if (v17)
  {
    sub_1DB1EF450();

    uint64_t v18 = sub_1DB1EF480();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 1, v18);
  }
  else
  {
    uint64_t v18 = sub_1DB1EF480();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  sub_1DB169E8C((uint64_t)v11, (uint64_t)v14);
  sub_1DB1693CC((uint64_t)v14, (uint64_t)v5);
  sub_1DB1EF480();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v5, 1, v18) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v5, &qword_1EBA4CF78);
    uint64_t v21 = 1;
  }
  else
  {
    sub_1DB1EF440();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v18);
    uint64_t v21 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v8, v21, 1, v18);
  sub_1DB1693CC((uint64_t)v8, (uint64_t)v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v2, 1, v18);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    id v23 = objc_allocWithZone((Class)type metadata accessor for SharedTranslations(0));
    id v24 = SharedTranslations.init(_:)((uint64_t)v2);
    sub_1DB0E8BD4((uint64_t)v8, &qword_1EBA4CF78);
    sub_1DB0E8BD4((uint64_t)v14, &qword_1EBA4CF78);
    return (uint64_t)v24;
  }
  return result;
}

uint64_t sub_1DB169E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id SharedTranslations.__allocating_init(_:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return SharedTranslations.init(_:)(a1);
}

uint64_t type metadata accessor for SharedTranslations(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EBA4D6A0);
}

id SharedTranslations.init(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue;
  uint64_t v9 = self;
  uint64_t v10 = v1;
  *(void *)&v1[v8] = objc_msgSend(v9, sel_mainQueue);
  uint64_t v11 = &v10[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL];
  uint64_t v12 = sub_1DB1EF480();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v14(v11, 1, 1, v12);
  *(void *)&v10[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations] = MEMORY[0x1E4FBC860];
  id v15 = &v10[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction];
  *(void *)id v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  objc_msgSend(v17, sel_setQualityOfService_, 25);
  *(void *)&v10[v16] = v17;

  uint64_t v18 = (objc_class *)type metadata accessor for SharedTranslations(0);
  v34.receiver = v10;
  v34.super_class = v18;
  id v19 = objc_msgSendSuper2(&v34, sel_init);
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_defaultManager);
  sub_1DB1EF460();
  id v23 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  LOBYTE(v19) = objc_msgSend(v22, sel_fileExistsAtPath_, v23);

  if ((v19 & 1) == 0)
  {
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1DB1EF810();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EBA4F3B8);
    uint64_t v25 = sub_1DB1EF7F0();
    os_log_type_t v26 = sub_1DB1F16F0();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v27 = 0;
      _os_log_impl(&dword_1DB0DC000, v25, v26, "Shared translations file doesn't exist, creating empty file", v27, 2u);
      MEMORY[0x1E018CA60](v27, -1, -1);
    }

    sub_1DB16D98C();
  }
  objc_msgSend(self, sel_addFilePresenter_, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  v14(v7, 0, 1, v12);
  uint64_t v28 = (uint64_t)v21 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1695D0((uint64_t)v7, v28);
  swift_endAccess();
  uint64_t v29 = sub_1DB1F1590();
  uint64_t v30 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v33, 1, 1, v29);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  void v31[4] = v21;
  sub_1DB131F20(v30, (uint64_t)&unk_1EA905118, (uint64_t)v31);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  return v21;
}

uint64_t sub_1DB16A3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  v4[14] = swift_task_alloc();
  uint64_t v5 = sub_1DB1EF480();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB16A490, 0, 0);
}

uint64_t sub_1DB16A490()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[13] + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1693CC(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DB0E8BD4(v0[14], &qword_1EBA4CF78);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[14], v0[15]);
    return MEMORY[0x1F4188298](sub_1DB16A5C0, 0, 0);
  }
}

uint64_t sub_1DB16A5C0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_1DB16A668;
  uint64_t v3 = swift_continuation_init();
  sub_1DB16AF40(v3, v1, v2);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB16A668()
{
  return MEMORY[0x1F4188298](sub_1DB1715FC, 0, 0);
}

id SharedTranslations.__deallocating_deinit()
{
  sub_1DB16A858();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedTranslations(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DB16A858()
{
  uint64_t v1 = sub_1DB1F1050();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DB1F1080();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D940);
  uint64_t v9 = (void *)sub_1DB1F1790();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_1DB16F828;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB168FE0;
  aBlock[3] = &block_descriptor_6;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  sub_1DB1F1070();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1DB171374(&qword_1EBA4D898, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8E0);
  sub_1DB16F888();
  sub_1DB1F19B0();
  MEMORY[0x1E018B7A0](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DB16AB14()
{
  v1[13] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  v1[14] = swift_task_alloc();
  uint64_t v2 = sub_1DB1EF480();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB16AC04, 0, 0);
}

uint64_t sub_1DB16AC04()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[13] + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1693CC(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DB0E8BD4(v0[14], &qword_1EBA4CF78);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[14], v0[15]);
    return MEMORY[0x1F4188298](sub_1DB16AD34, 0, 0);
  }
}

uint64_t sub_1DB16AD34()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_1DB16ADDC;
  uint64_t v3 = swift_continuation_init();
  sub_1DB16AF40(v3, v1, v2);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB16ADDC()
{
  return MEMORY[0x1F4188298](sub_1DB16AEBC, 0, 0);
}

uint64_t sub_1DB16AEBC()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1DB16AF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_1DB1EF430();
  id v7 = objc_msgSend(v5, sel_readingIntentWithURL_options_, v6, 1);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_initWithFilePresenter_, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DB1F7640;
  *(void *)(v9 + 32) = v7;
  v17[0] = v9;
  sub_1DB1F14C0();
  sub_1DB0E2EFC(0, &qword_1EBA4D950);
  id v10 = v7;
  uint64_t v11 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a3 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  void v14[4] = v10;
  v17[4] = sub_1DB1714F8;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1DB126B74;
  uint64_t v17[3] = &block_descriptor_61;
  id v15 = _Block_copy(v17);
  id v16 = v10;
  swift_release();
  objc_msgSend(v8, sel_coordinateAccessWithIntents_queue_byAccessor_, v11, v12, v15);
  _Block_release(v15);
}

void sub_1DB16B150(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_1DB1EF480();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1E018CB30](a2 + 16);
  if (!v11)
  {
    swift_continuation_throwingResume();
    return;
  }
  uint64_t v12 = (char *)v11;
  if (a1)
  {
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1DB1EF810();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBA4F3B8);
    id v14 = a1;
    id v15 = sub_1DB1EF7F0();
    os_log_type_t v16 = sub_1DB1F1710();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)id v17 = 138412290;
      uint64_t v19 = sub_1DB1EF410();
      uint64_t v37 = v19;
      sub_1DB1F1910();
      *uint64_t v18 = v19;

      _os_log_impl(&dword_1DB0DC000, v15, v16, "Failed to load shared translations from disk: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v18, -1, -1);
      MEMORY[0x1E018CA60](v17, -1, -1);
    }
    else
    {
    }
    goto LABEL_10;
  }
  id v20 = objc_msgSend(a4, sel_URL);
  sub_1DB1EF450();

  uint64_t v21 = sub_1DB1EF490();
  unint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1DB1EF2D0();
  swift_allocObject();
  sub_1DB1EF2C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8B0);
  sub_1DB171404(&qword_1EBA4D8C0, &qword_1EBA4D5E8);
  sub_1DB1EF2B0();
  uint64_t v24 = v37;
  uint64_t v25 = &v12[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations];
  swift_beginAccess();
  uint64_t v26 = swift_bridgeObjectRetain();
  char v27 = sub_1DB1680F8(v26, v24);
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_bridgeObjectRelease();
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1DB1EF810();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBA4F3B8);
    id v15 = sub_1DB1EF7F0();
    os_log_type_t v29 = sub_1DB1F16F0();
    if (!os_log_type_enabled(v15, v29)) {
      goto LABEL_22;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_1DB0DC000, v15, v29, "Did not load translations from disk because no changes", v30, 2u);
    uint64_t v31 = v30;
  }
  else
  {
    *(void *)uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1DB1EF810();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EBA4F3B8);
    uint64_t v33 = v12;
    id v15 = sub_1DB1EF7F0();
    os_log_type_t v34 = sub_1DB1F16F0();
    if (!os_log_type_enabled(v15, v34))
    {

      goto LABEL_22;
    }
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 134217984;
    uint64_t v36 = *(void *)(*(void *)v25 + 16);
    sub_1DB1F1910();

    _os_log_impl(&dword_1DB0DC000, v15, v34, "Loaded %ld translations from disk", v35, 0xCu);
    uint64_t v31 = v35;
  }
  MEMORY[0x1E018CA60](v31, -1, -1);
LABEL_22:
  swift_release();
  sub_1DB0FC598(v21, v23);
LABEL_10:

  swift_continuation_throwingResume();
}

uint64_t sub_1DB16B82C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SharedTranslations.Translation(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1EF480();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1693CC(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4CF78);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v39 = v5;
  uint64_t v17 = self;
  uint64_t v40 = v11;
  uint64_t v18 = (void *)v17;
  uint64_t v19 = (void *)sub_1DB1EF430();
  id v20 = objc_msgSend(v18, sel_readingIntentWithURL_options_, v19, 0);

  uint64_t v21 = (void *)sub_1DB1EF430();
  id v22 = objc_msgSend(v18, sel_writingIntentWithURL_options_, v21, 4);

  id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_initWithFilePresenter_, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DB1F7650;
  *(void *)(v23 + 32) = v20;
  *(void *)(v23 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v22;
  aBlock[0] = v23;
  sub_1DB1F14C0();
  uint64_t v37 = v12;
  uint64_t v24 = a1;
  sub_1DB0E2EFC(0, &qword_1EBA4D950);
  id v25 = v20;
  id v26 = v22;
  char v27 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue);
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DB171504(v24, (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharedTranslations.Translation);
  unint64_t v29 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v30 = (v6 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v28;
  *(void *)(v31 + 24) = v25;
  sub_1DB16FA90((uint64_t)v7, v31 + v29);
  *(void *)(v31 + v3__isPlatformVersionAtLeast(2, 18, 1, 0) = v26;
  aBlock[4] = sub_1DB16FAF4;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB126B74;
  aBlock[3] = &block_descriptor_13;
  uint64_t v32 = _Block_copy(aBlock);
  id v33 = v25;
  id v34 = v26;
  swift_release();
  id v35 = v38;
  objc_msgSend(v38, sel_coordinateAccessWithIntents_queue_byAccessor_, v27, v36, v32);
  _Block_release(v32);

  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v14, v40);
}

void sub_1DB16BCC4(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v79 = a5;
  uint64_t v80 = a4;
  uint64_t v8 = sub_1DB1F1050();
  uint64_t v75 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1F1080();
  uint64_t v77 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SharedTranslations.Translation(0);
  uint64_t v81 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DB1EF480();
  uint64_t v82 = *(void *)(v16 - 8);
  unint64_t v83 = v16;
  MEMORY[0x1F4188790](v16);
  unint64_t v78 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v66 - v19;
  swift_beginAccess();
  uint64_t v21 = (void *)MEMORY[0x1E018CB30](a2 + 16);
  if (v21)
  {
    id v22 = v21;
    if (a1)
    {
      if (qword_1EBA4D788 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1DB1EF810();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EBA4F3B8);
      id v24 = a1;
      id v25 = a1;
      id v26 = sub_1DB1EF7F0();
      os_log_type_t v27 = sub_1DB1F1710();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        unint64_t v29 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 138412290;
        uint64_t v30 = sub_1DB1EF410();
        aBlock[0] = v30;
        sub_1DB1F1910();
        *unint64_t v29 = v30;

        _os_log_impl(&dword_1DB0DC000, v26, v27, "Failed to write translations to disk: %@", v28, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
        swift_arrayDestroy();
        MEMORY[0x1E018CA60](v29, -1, -1);
        MEMORY[0x1E018CA60](v28, -1, -1);

        return;
      }

LABEL_21:
      return;
    }
    id v73 = v21;
    id v31 = objc_msgSend(a3, sel_URL);
    sub_1DB1EF450();

    uint64_t v32 = sub_1DB1EF490();
    uint64_t v71 = v11;
    uint64_t v70 = v10;
    unint64_t v34 = v33;
    uint64_t v35 = v32;
    uint64_t v72 = *(void (**)(char *, unint64_t))(v82 + 8);
    v72(v20, v83);
    sub_1DB1EF2D0();
    swift_allocObject();
    sub_1DB1EF2C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8B0);
    sub_1DB171404(&qword_1EBA4D8C0, &qword_1EBA4D5E8);
    sub_1DB1EF2B0();
    uint64_t v74 = 0;
    uint64_t v69 = v35;
    unint64_t v65 = aBlock[0];
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1DB1EF810();
    __swift_project_value_buffer(v48, (uint64_t)qword_1EBA4F3B8);
    unint64_t v68 = (char *)v73;
    uint64_t v49 = sub_1DB1EF7F0();
    os_log_type_t v50 = sub_1DB1F16F0();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      unint64_t v67 = v49;
      *(_DWORD *)uint64_t v51 = 134217984;
      uint64_t v66 = v51 + 4;
      id v52 = v68;
      long long v53 = &v68[OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations];
      swift_beginAccess();
      aBlock[0] = *(void *)(*(void *)v53 + 16);
      uint64_t v49 = v67;
      sub_1DB1F1910();

      _os_log_impl(&dword_1DB0DC000, v49, v50, "Read %ld translations from disk", v51, 0xCu);
      MEMORY[0x1E018CA60](v51, -1, -1);
    }
    else
    {
    }
    swift_release();
    sub_1DB0FC598(v69, v34);

    sub_1DB171504(v80, (uint64_t)v15, type metadata accessor for SharedTranslations.Translation);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v65 = sub_1DB18887C(0, *(void *)(v65 + 16) + 1, 1, v65);
    }
    unint64_t v37 = *(void *)(v65 + 16);
    unint64_t v36 = *(void *)(v65 + 24);
    if (v37 >= v36 >> 1) {
      unint64_t v65 = sub_1DB18887C(v36 > 1, v37 + 1, 1, v65);
    }
    *(void *)(v65 + 16) = v37 + 1;
    sub_1DB16FA90((uint64_t)v15, v65+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v37);
    sub_1DB1EF340();
    swift_allocObject();
    sub_1DB1EF330();
    aBlock[0] = v65;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8B0);
    sub_1DB171404(&qword_1EBA4D8B8, &qword_1EBA4D5E0);
    a1 = v74;
    uint64_t v38 = sub_1DB1EF320();
    if (a1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      if (qword_1EBA4D788 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1DB1EF810();
      __swift_project_value_buffer(v44, (uint64_t)qword_1EBA4F3B8);
      swift_bridgeObjectRetain();
      id v26 = sub_1DB1EF7F0();
      os_log_type_t v45 = sub_1DB1F1710();
      if (os_log_type_enabled(v26, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 134217984;
        uint64_t v47 = *(void *)(v65 + 16);
        swift_bridgeObjectRelease();
        aBlock[0] = v47;
        sub_1DB1F1910();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DB0DC000, v26, v45, "Failed to write %ld (already on disk + 1) shared translations to disk", v46, 0xCu);
        MEMORY[0x1E018CA60](v46, -1, -1);

        return;
      }
      swift_bridgeObjectRelease_n();

      goto LABEL_21;
    }
    uint64_t v40 = v38;
    unint64_t v41 = v39;
    swift_bridgeObjectRelease();
    id v42 = objc_msgSend(v79, sel_URL);
    uint64_t v43 = v78;
    sub_1DB1EF450();

    sub_1DB1EF4B0();
    v72(v43, v83);
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    unint64_t v83 = v41;
    uint64_t v54 = sub_1DB1EF810();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EBA4F3B8);
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1DB1EF7F0();
    os_log_type_t v56 = sub_1DB1F1730();
    if (os_log_type_enabled(v55, v56))
    {
      long long v57 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)long long v57 = 134217984;
      aBlock[0] = *(void *)(v65 + 16);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DB0DC000, v55, v56, "Wrote total of %ld (already on disk + 1) shared translations to disk", v57, 0xCu);
      MEMORY[0x1E018CA60](v57, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    sub_1DB0E2EFC(0, (unint64_t *)&qword_1EBA4D940);
    uint64_t v58 = (void *)sub_1DB1F1790();
    uint64_t v59 = swift_allocObject();
    id v60 = v73;
    *(void *)(v59 + 16) = v65;
    *(void *)(v59 + 24) = v60;
    aBlock[4] = sub_1DB1713FC;
    aBlock[5] = v59;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DB168FE0;
    aBlock[3] = &block_descriptor_54_0;
    unint64_t v61 = _Block_copy(aBlock);
    id v62 = v60;
    swift_release();
    uint64_t v63 = v76;
    sub_1DB1F1070();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1DB171374(&qword_1EBA4D898, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8E0);
    sub_1DB16F888();
    unint64_t v64 = v70;
    sub_1DB1F19B0();
    MEMORY[0x1E018B7A0](0, v63, v64, v61);
    _Block_release(v61);

    sub_1DB0FC598(v40, v83);
    swift_release();

    (*(void (**)(char *, uint64_t))(v75 + 8))(v64, v8);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v63, v71);
  }
}

uint64_t sub_1DB16CB08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a2 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  char v5 = sub_1DB1680F8(a1, v4);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t *v3 = a1;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DB16CB98(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1DB168A94(a1, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_1DB16CC08()
{
  v1[8] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  v1[9] = swift_task_alloc();
  uint64_t v2 = sub_1DB1EF480();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB16CCF8, 0, 0);
}

uint64_t sub_1DB16CCF8()
{
  if (qword_1EBA4D788 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DB1EF810();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBA4F3B8);
  uint64_t v2 = sub_1DB1EF7F0();
  os_log_type_t v3 = sub_1DB1F1730();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1DB0DC000, v2, v3, "Clearing loaded translations then disk", v4, 2u);
    MEMORY[0x1E018CA60](v4, -1, -1);
  }
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[8];
  uint64_t v7 = v0[9];

  uint64_t v9 = (void *)(v8 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  *uint64_t v9 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v10 = v8 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1693CC(v10, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    sub_1DB0E8BD4(v0[9], &qword_1EBA4CF78);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[8];
    (*(void (**)(uint64_t, void, void))(v0[11] + 32))(v13, v0[9], v0[10]);
    uint64_t v15 = swift_task_alloc();
    v0[13] = v15;
    *(void *)(v15 + 16) = v13;
    *(void *)(v15 + 24) = v14;
    uint64_t v16 = (void *)swift_task_alloc();
    v0[14] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1DB16CFC4;
    uint64_t v17 = MEMORY[0x1E4FBC848] + 8;
    return MEMORY[0x1F41880D8](v16, 0, 0, 0x7369447261656C63, 0xEB0000000029286BLL, sub_1DB16FB94, v15, v17);
  }
}

uint64_t sub_1DB16CFC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB16D0DC, 0, 0);
}

uint64_t sub_1DB16D0DC()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1DB16D160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D908);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1DB1EF430();
  id v9 = objc_msgSend(v7, sel_writingIntentWithURL_options_, v8, 4);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_initWithFilePresenter_, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DB1F7640;
  *(void *)(v11 + 32) = v9;
  aBlock[0] = v11;
  sub_1DB1F14C0();
  sub_1DB0E2EFC(0, &qword_1EBA4D950);
  id v12 = v9;
  uint64_t v13 = (void *)sub_1DB1F1480();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_fileAccessQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v4);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v16 + ((v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
  aBlock[4] = sub_1DB1712D4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB126B74;
  aBlock[3] = &block_descriptor_48;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v12;
  swift_release();
  objc_msgSend(v10, sel_coordinateAccessWithIntents_queue_byAccessor_, v13, v14, v17);
  _Block_release(v17);
}

uint64_t sub_1DB16D424(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1DB1EF480();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1DB1EF810();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EBA4F3B8);
    id v10 = a1;
    uint64_t v11 = sub_1DB1EF7F0();
    os_log_type_t v12 = sub_1DB1F1710();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      uint64_t v15 = sub_1DB1EF410();
      uint64_t v25 = v15;
      sub_1DB1F1910();
      void *v14 = v15;

      _os_log_impl(&dword_1DB0DC000, v11, v12, "Failed to remove translations from disk: %@", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v14, -1, -1);
      MEMORY[0x1E018CA60](v13, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    sub_1DB1EF340();
    swift_allocObject();
    sub_1DB1EF330();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8B0);
    sub_1DB171404(&qword_1EBA4D8B8, &qword_1EBA4D5E0);
    uint64_t v16 = sub_1DB1EF320();
    unint64_t v18 = v17;
    id v19 = objc_msgSend(a3, sel_URL);
    sub_1DB1EF450();

    sub_1DB1EF4B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (qword_1EBA4D788 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1DB1EF810();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBA4F3B8);
    uint64_t v11 = sub_1DB1EF7F0();
    os_log_type_t v22 = sub_1DB1F1730();
    if (os_log_type_enabled(v11, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1DB0DC000, v11, v22, "Cleared shared translations from disk", v23, 2u);
      MEMORY[0x1E018CA60](v23, -1, -1);
    }
    sub_1DB0FC598(v16, v18);
    swift_release();
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D908);
  return sub_1DB1F1530();
}

void sub_1DB16D98C()
{
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_initWithFilePresenter_, v0);
  id v2 = (id)sub_1DB1EF430();
  aBlock[4] = sub_1DB16DFC0;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1DB16DFC4;
  aBlock[3] = &block_descriptor_64;
  uint64_t v3 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v1, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v2, 0, aBlock, v3);
  _Block_release(v3);

  id v4 = aBlock[0];
  id v5 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (!v5) {
    goto LABEL_8;
  }
  uint64_t v6 = qword_1EBA4D788;
  id v2 = v5;
  if (v6 != -1) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v7 = sub_1DB1EF810();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBA4F3B8);
  uint64_t v8 = v2;
  uint64_t v9 = sub_1DB1EF7F0();
  os_log_type_t v10 = sub_1DB1F1710();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v14 = v4;
    os_log_type_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    aBlock[0] = v8;
    id v15 = v1;
    uint64_t v13 = v8;
    sub_1DB1F1910();
    *os_log_type_t v12 = v14;

    _os_log_impl(&dword_1DB0DC000, v9, v10, "Failed to create empty SharedFavorites.json file: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v12, -1, -1);
    MEMORY[0x1E018CA60](v11, -1, -1);
    uint64_t v8 = v9;
    uint64_t v9 = v13;
    id v1 = v15;
  }
  else
  {
  }
LABEL_8:
}

uint64_t sub_1DB16DC80()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1DB16DC98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DB103C1C;
  return sub_1DB16A3A0(a1, v4, v5, v6);
}

uint64_t sub_1DB16DD4C()
{
  sub_1DB1EF340();
  swift_allocObject();
  sub_1DB1EF330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D8B0);
  sub_1DB171404(&qword_1EBA4D8B8, &qword_1EBA4D5E0);
  uint64_t v0 = sub_1DB1EF320();
  unint64_t v2 = v1;
  sub_1DB1EF4B0();
  sub_1DB0FC598(v0, v2);
  return swift_release();
}

uint64_t sub_1DB16DFC4(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EF480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1DB1EF450();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DB16E0A8()
{
  unint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBA4D788 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DB1EF810();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBA4F3B8);
  uint64_t v6 = sub_1DB1EF7F0();
  os_log_type_t v7 = sub_1DB1F16F0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1DB0DC000, v6, v7, "File update detected", v8, 2u);
    MEMORY[0x1E018CA60](v8, -1, -1);
  }

  uint64_t v9 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  os_log_type_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  id v11 = v1;
  sub_1DB131F20((uint64_t)v4, (uint64_t)&unk_1EA905138, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1DB16E260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4CF78);
  v4[17] = swift_task_alloc();
  uint64_t v5 = sub_1DB1EF480();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB16E350, 0, 0);
}

uint64_t sub_1DB16E350()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[16] + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  sub_1DB1693CC(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DB0E8BD4(v0[17], &qword_1EBA4CF78);
    uint64_t v5 = (void (**)(uint64_t))(v0[16]
                                       + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
    swift_beginAccess();
    uint64_t v6 = *v5;
    if (*v5)
    {
      uint64_t v7 = swift_retain();
      v6(v7);
      sub_1DB0EB788((uint64_t)v6);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[19] + 32))(v0[20], v0[17], v0[18]);
    return MEMORY[0x1F4188298](sub_1DB16E4D0, 0, 0);
  }
}

uint64_t sub_1DB16E4D0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[16];
  v0[2] = v0;
  v0[3] = sub_1DB16E578;
  uint64_t v3 = swift_continuation_init();
  sub_1DB16AF40(v3, v1, v2);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DB16E578()
{
  return MEMORY[0x1F4188298](sub_1DB16E658, 0, 0);
}

uint64_t sub_1DB16E658()
{
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  uint64_t v1 = (void (**)(uint64_t))(v0[16]
                                     + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemChangedAction);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*v1)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_1DB0EB788((uint64_t)v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

id SharedTranslations.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharedTranslations.init()()
{
}

uint64_t SharedTranslations.Translation.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SharedTranslations.Translation.sourceLocale.setter(uint64_t a1)
{
  uint64_t v3 = sub_1DB1EF6B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SharedTranslations.Translation.sourceLocale.modify())()
{
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.targetLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 20);
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SharedTranslations.Translation.targetLocale.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 20);
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

double (*SharedTranslations.Translation.targetLocale.modify())(double, double)
{
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.sourceText.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharedTranslations.Translation.sourceText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*SharedTranslations.Translation.sourceText.modify())(double, double)
{
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.targetText.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharedTranslations.Translation.targetText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SharedTranslations.Translation(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*SharedTranslations.Translation.targetText.modify())(double, double)
{
  return CGPointMake;
}

uint64_t SharedTranslations.Translation.init(sourceLocale:targetLocale:sourceText:targetText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_1DB1EF6B0();
  id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(a7, a1, v14);
  uint64_t v16 = (int *)type metadata accessor for SharedTranslations.Translation(0);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(a7 + v16[5], a2, v14);
  unint64_t v18 = (void *)(a7 + v16[6]);
  *unint64_t v18 = a3;
  v18[1] = a4;
  id v19 = (void *)(a7 + v16[7]);
  *id v19 = a5;
  v19[1] = a6;
  return result;
}

uint64_t SharedTranslations.Translation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = sub_1DB1EF6B0();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  unint64_t v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v31 - v5;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905140);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB16FC68();
  os_log_type_t v12 = v40;
  sub_1DB1F1EE0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v32 = (void (*)(void, void, void))v6;
  uint64_t v33 = v9;
  uint64_t v40 = a1;
  uint64_t v13 = v37;
  uint64_t v14 = v38;
  char v44 = 2;
  uint64_t v15 = sub_1DB1F1C60();
  uint64_t v16 = v33;
  unint64_t v17 = (uint64_t *)&v11[*(int *)(v33 + 24)];
  uint64_t *v17 = v15;
  v17[1] = v18;
  char v43 = 3;
  uint64_t v19 = sub_1DB1F1C60();
  uint64_t v20 = (uint64_t *)&v11[*(int *)(v16 + 28)];
  *uint64_t v20 = v19;
  v20[1] = v21;
  char v42 = 0;
  sub_1DB1F1C60();
  id v31 = v17;
  os_log_type_t v22 = v32;
  sub_1DB1EF580();
  uint64_t v23 = v11;
  uint64_t v24 = v22;
  uint64_t v25 = v11;
  uint64_t v26 = v14;
  uint64_t v32 = *(void (**)(void, void, void))(v36 + 32);
  v32(v23, v24, v14);
  char v41 = 1;
  sub_1DB1F1C60();
  uint64_t v27 = (uint64_t)v40;
  uint64_t v28 = (uint64_t)v25;
  unint64_t v29 = v34;
  sub_1DB1EF580();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v39);
  v32(v28 + *(int *)(v33 + 20), v29, v26);
  sub_1DB171504(v28, v35, type metadata accessor for SharedTranslations.Translation);
  __swift_destroy_boxed_opaque_existential_0(v27);
  return sub_1DB17156C(v28, type metadata accessor for SharedTranslations.Translation);
}

uint64_t SharedTranslations.Translation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA905150);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DB16FC68();
  sub_1DB1F1EF0();
  sub_1DB1EF590();
  v8[15] = 0;
  sub_1DB1F1D00();
  if (v1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for SharedTranslations.Translation(0);
    sub_1DB1EF590();
    v8[14] = 1;
    sub_1DB1F1D00();
    swift_bridgeObjectRelease();
    v8[13] = 2;
    sub_1DB1F1D00();
    v8[12] = 3;
    sub_1DB1F1D00();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1DB16F330(unsigned __int8 *a1, char *a2)
{
  return sub_1DB161708(*a1, *a2);
}

uint64_t sub_1DB16F33C()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB16F418()
{
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB16F4DC()
{
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB16F5B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB171198();
  *a1 = result;
  return result;
}

void sub_1DB16F5E4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6F4C656372756F73;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6F4C746567726174;
      goto LABEL_3;
    case 2:
      uint64_t v3 = 0x656372756F73;
      goto LABEL_6;
    case 3:
      uint64_t v3 = 0x746567726174;
LABEL_6:
      *a1 = v3 & 0xFFFFFFFFFFFFLL | 0x6554000000000000;
      a1[1] = 0xEA00000000007478;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xEC000000656C6163;
      break;
  }
}

uint64_t sub_1DB16F67C()
{
  uint64_t result = 0x6F4C656372756F73;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F4C746567726174;
      break;
    case 2:
      uint64_t v2 = 0x656372756F73;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x746567726174;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6554000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB16F70C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB171198();
  *a1 = result;
  return result;
}

void sub_1DB16F734(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DB16F740(uint64_t a1)
{
  unint64_t v2 = sub_1DB16FC68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DB16F77C(uint64_t a1)
{
  unint64_t v2 = sub_1DB16FC68();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DB16F7BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SharedTranslations.Translation.init(from:)(a1, a2);
}

uint64_t sub_1DB16F7D4(void *a1)
{
  return SharedTranslations.Translation.encode(to:)(a1);
}

uint64_t sub_1DB16F7F0()
{
  return swift_deallocObject();
}

id sub_1DB16F828()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = self;
  return objc_msgSend(v2, sel_removeFilePresenter_, v1);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

unint64_t sub_1DB16F888()
{
  unint64_t result = qword_1EBA4D8E8;
  if (!qword_1EBA4D8E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D8E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4D8E8);
  }
  return result;
}

uint64_t type metadata accessor for SharedTranslations.Translation(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, qword_1EBA4D5F0);
}

uint64_t sub_1DB16F904()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DB16F93C()
{
  uint64_t v1 = (int *)(type metadata accessor for SharedTranslations.Translation(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v4 + v1[7], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DB16FA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedTranslations.Translation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DB16FAF4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SharedTranslations.Translation(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void **)(v1 + 24);
  uint64_t v7 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1DB16BCC4(a1, v5, v6, v1 + v4, v7);
}

void sub_1DB16FB94(uint64_t a1)
{
  sub_1DB16D160(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DB16FB9C()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1DB16FBB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DB103C1C;
  return sub_1DB16E260(a1, v4, v5, v6);
}

unint64_t sub_1DB16FC68()
{
  unint64_t result = qword_1EA905148;
  if (!qword_1EA905148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905148);
  }
  return result;
}

uint64_t _s13TranslationUI18SharedTranslationsC0A0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for SharedTranslations.Translation(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v38 - v7;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v38 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v38 - v16;
  __n128 v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v38 - v20;
  char v22 = MEMORY[0x1E01895E0](a1, a2, v19);
  sub_1DB171504(a1, (uint64_t)v21, type metadata accessor for SharedTranslations.Translation);
  sub_1DB171504(a2, (uint64_t)v17, type metadata accessor for SharedTranslations.Translation);
  if ((v22 & 1) == 0)
  {
    sub_1DB17156C((uint64_t)v17, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v21, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504(a1, (uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504(a2, (uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    goto LABEL_10;
  }
  char v23 = MEMORY[0x1E01895E0](&v21[v4[5]], &v17[v4[5]]);
  sub_1DB17156C((uint64_t)v17, type metadata accessor for SharedTranslations.Translation);
  sub_1DB17156C((uint64_t)v21, type metadata accessor for SharedTranslations.Translation);
  sub_1DB171504(a1, (uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
  sub_1DB171504(a2, (uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
  if ((v23 & 1) == 0)
  {
LABEL_10:
    sub_1DB17156C((uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504(a1, (uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
    uint64_t v30 = v39;
    sub_1DB171504(a2, v39, type metadata accessor for SharedTranslations.Translation);
    char v31 = 0;
    goto LABEL_11;
  }
  uint64_t v24 = v4[6];
  uint64_t v25 = *(void *)&v14[v24];
  uint64_t v26 = *(void *)&v14[v24 + 8];
  uint64_t v27 = &v11[v24];
  if (v25 == *(void *)v27 && v26 == *((void *)v27 + 1))
  {
    sub_1DB17156C((uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504(a1, (uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
    uint64_t v30 = v39;
    sub_1DB171504(a2, v39, type metadata accessor for SharedTranslations.Translation);
  }
  else
  {
    char v29 = sub_1DB1F1DB0();
    sub_1DB17156C((uint64_t)v14, type metadata accessor for SharedTranslations.Translation);
    sub_1DB17156C((uint64_t)v11, type metadata accessor for SharedTranslations.Translation);
    sub_1DB171504(a1, (uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
    uint64_t v30 = v39;
    sub_1DB171504(a2, v39, type metadata accessor for SharedTranslations.Translation);
    char v31 = 0;
    if ((v29 & 1) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v33 = v4[7];
  uint64_t v34 = *(void *)&v8[v33];
  uint64_t v35 = *(void *)&v8[v33 + 8];
  uint64_t v36 = (void *)(v30 + v33);
  if (v34 == *v36 && v35 == v36[1]) {
    char v31 = 1;
  }
  else {
    char v31 = sub_1DB1F1DB0();
  }
LABEL_11:
  sub_1DB17156C((uint64_t)v8, type metadata accessor for SharedTranslations.Translation);
  sub_1DB17156C(v30, type metadata accessor for SharedTranslations.Translation);
  return v31 & 1;
}

id sub_1DB170084@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemOperationQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1DB1700EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_presentedItemURL;
  swift_beginAccess();
  return sub_1DB1693CC(v3, a2);
}

uint64_t sub_1DB170148@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC13TranslationUI18SharedTranslations_translations);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DB1701AC()
{
  return type metadata accessor for SharedTranslations(0);
}

void sub_1DB1701B4()
{
  sub_1DB1707F0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SharedTranslations(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharedTranslations);
}

uint64_t dispatch thunk of SharedTranslations.presentedItemOperationQueue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemOperationQueue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemOperationQueue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemURL.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemURL.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SharedTranslations.translations.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SharedTranslations.translations.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SharedTranslations.translations.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemChangedAction.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemChangedAction.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemChangedAction.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SharedTranslations.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SharedTranslations.unregister()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SharedTranslations.loadTranslations()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1DB1036D0;
  return v5();
}

uint64_t dispatch thunk of SharedTranslations.addTranslation(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SharedTranslations.contains(translation:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SharedTranslations.clear()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1DB103C1C;
  return v5();
}

uint64_t dispatch thunk of SharedTranslations.presentedItemDidChange()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

void sub_1DB1707F0()
{
  if (!qword_1EBA4CF80)
  {
    sub_1DB1EF480();
    unint64_t v0 = sub_1DB1F1900();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA4CF80);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SharedTranslations.Translation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DB1EF6B0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    id v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *id v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (uint64_t *)((char *)a1 + v10);
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SharedTranslations.Translation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF6B0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v8);
  id v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SharedTranslations.Translation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedTranslations.Translation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB170D5C);
}

uint64_t sub_1DB170D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SharedTranslations.Translation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB170E34);
}

uint64_t sub_1DB170E34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1DB170EF4()
{
  uint64_t result = sub_1DB1EF6B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharedTranslations.Translation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB171058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedTranslations.Translation.CodingKeys()
{
  return &type metadata for SharedTranslations.Translation.CodingKeys;
}

unint64_t sub_1DB171094()
{
  unint64_t result = qword_1EA9051D0;
  if (!qword_1EA9051D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9051D0);
  }
  return result;
}

unint64_t sub_1DB1710EC()
{
  unint64_t result = qword_1EA9051D8;
  if (!qword_1EA9051D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9051D8);
  }
  return result;
}

unint64_t sub_1DB171144()
{
  unint64_t result = qword_1EA9051E0;
  if (!qword_1EA9051E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9051E0);
  }
  return result;
}

uint64_t sub_1DB171198()
{
  unint64_t v0 = sub_1DB1F1C10();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DB1711E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB17121C()
{
  return sub_1DB166C58(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1DB171224()
{
  return sub_1DB166B60(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1DB17122C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D908);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1DB1712D4(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4D908) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DB16D424(a1, v1 + v4, v5);
}

uint64_t sub_1DB171374(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB1713BC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DB1713FC()
{
  return sub_1DB16CB08(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DB171404(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4D8B0);
    sub_1DB171374(a2, (void (*)(uint64_t))type metadata accessor for SharedTranslations.Translation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB171498()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroyTm_7(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocObject();
}

void sub_1DB1714F8(void *a1)
{
  sub_1DB16B150(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1DB171504(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB17156C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SheetPanel.init(content:button:)(void (*a1)(void), uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  a1();
  uint64_t v4 = type metadata accessor for SheetPanel();
  a3(v4, v5, v6, v7);
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for SheetPanel()
{
  return swift_getGenericMetadata();
}

uint64_t SheetPanel.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v49 = *(a1 - 1);
  uint64_t v4 = *(void *)(v49 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v51 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  long long v53 = (char *)v35 - v6;
  uint64_t v40 = *(void *)(v7 + 16);
  sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9046A8);
  sub_1DB1EFE20();
  uint64_t v50 = a1[4];
  uint64_t v64 = v50;
  uint64_t v65 = MEMORY[0x1E4F3CE20];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v9 = sub_1DB171BAC();
  uint64_t v62 = WitnessTable;
  unint64_t v63 = v9;
  swift_getWitnessTable();
  sub_1DB1F0DE0();
  uint64_t v10 = sub_1DB1EFE20();
  uint64_t v47 = v10;
  uint64_t v42 = a1[3];
  uint64_t v11 = sub_1DB1EFE20();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = MEMORY[0x1E4F3CAA8];
  uint64_t v60 = v12;
  uint64_t v61 = MEMORY[0x1E4F3CAA8];
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v45 = v14;
  uint64_t v38 = a1[5];
  uint64_t v58 = v38;
  uint64_t v59 = v13;
  uint64_t v46 = v11;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v54 = v10;
  uint64_t v55 = v11;
  uint64_t v56 = v14;
  uint64_t v57 = v44;
  uint64_t v43 = type metadata accessor for BottomPanelContainer();
  uint64_t v48 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v39 = (uint64_t)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v41 = (uint64_t)v35 - v18;
  uint64_t v19 = v49;
  uint64_t v36 = *(void (**)(char *, uint64_t, void *, __n128))(v49 + 16);
  uint64_t v20 = a1;
  v36(v53, v2, a1, v17);
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = (v21 + 48) & ~v21;
  _OWORD v35[2] = v22 + v4;
  v35[1] = v21 | 7;
  char v23 = (void *)swift_allocObject();
  uint64_t v24 = v40;
  uint64_t v25 = v42;
  v23[2] = v40;
  void v23[3] = v25;
  uint64_t v26 = v50;
  uint64_t v27 = v38;
  v23[4] = v50;
  v23[5] = v27;
  uint64_t v49 = *(void *)(v19 + 32);
  v35[0] = v20;
  ((void (*)(char *, char *, void *))v49)((char *)v23 + v22, v53, v20);
  uint64_t v28 = v51;
  ((void (*)(char *, uint64_t, void *))v36)(v51, v37, v20);
  char v29 = (void *)swift_allocObject();
  v29[2] = v24;
  void v29[3] = v25;
  v29[4] = v26;
  v29[5] = v27;
  ((void (*)(char *, char *, void))v49)((char *)v29 + v22, v28, v35[0]);
  uint64_t v30 = v39;
  BottomPanelContainer.init(content:panel:)((uint64_t (*)(uint64_t))sub_1DB171E04, (void (*)(uint64_t))sub_1DB172234, v47, v46, v39);
  uint64_t v31 = v43;
  swift_getWitnessTable();
  uint64_t v32 = v41;
  sub_1DB0E6ADC(v30, v31, v41);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v33(v30, v31);
  sub_1DB0E6ADC(v32, v31, v52);
  return ((uint64_t (*)(uint64_t, uint64_t))v33)(v32, v31);
}

unint64_t sub_1DB171BAC()
{
  unint64_t result = qword_1EA9046A0;
  if (!qword_1EA9046A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9046A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9046A0);
  }
  return result;
}

uint64_t sub_1DB171C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v16[1] = a6;
  sub_1DB1EFE20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9046A8);
  sub_1DB1EFE20();
  v16[12] = a4;
  v16[13] = MEMORY[0x1E4F3CE20];
  v16[10] = swift_getWitnessTable();
  v16[11] = sub_1DB171BAC();
  swift_getWitnessTable();
  uint64_t v11 = sub_1DB1F0DE0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v16 - v13;
  void v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  v16[7] = a5;
  v16[8] = a1;
  sub_1DB1F02E0();
  sub_1DB1F0DD0();
  sub_1DB1F06E0();
  swift_getWitnessTable();
  sub_1DB1F0B10();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1DB171E04()
{
  return sub_1DB17224C((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DB171C08);
}

uint64_t sub_1DB171E1C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_1DB1EFE20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - v5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9046A8);
  uint64_t v7 = sub_1DB1EFE20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - v12;
  sub_1DB1F0B60();
  uint64_t v22 = a1;
  uint64_t v23 = MEMORY[0x1E4F3CE20];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DB1F0A90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  unint64_t v15 = sub_1DB171BAC();
  uint64_t v20 = WitnessTable;
  unint64_t v21 = v15;
  swift_getWitnessTable();
  sub_1DB0E6ADC((uint64_t)v10, v7, (uint64_t)v13);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  sub_1DB0E6ADC((uint64_t)v13, v7, v19);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
}

uint64_t sub_1DB172084()
{
  return sub_1DB1F0B10();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for SheetPanel() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[15]);
  return swift_deallocObject();
}

uint64_t sub_1DB172234()
{
  return sub_1DB17224C((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DB172084);
}

uint64_t sub_1DB17224C(uint64_t (*a1)(char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for SheetPanel() - 8);
  uint64_t v7 = (char *)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1(v7, v2, v3, v4, v5);
}

uint64_t sub_1DB172304()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DB17234C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1DB172354()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DB172424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_1DB172580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_1DB172624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DB1726CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DB172774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DB17281C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DB1728C4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1DB172ABC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1DB172D88);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_1DB172DB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DB172F30@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB171E1C(*(void *)(v1 + 32), a1);
}

void *sub_1DB172F40(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1DB1EF790();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DB1EF760();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DB173064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DB1EF790();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DB1EF760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_release();
}

uint64_t sub_1DB173120(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DB1EF760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  swift_retain();
  return a1;
}

uint64_t sub_1DB1731F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DB1EF760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DB1732E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DB1EF760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  return a1;
}

uint64_t sub_1DB1733B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DB1EF790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DB1EF760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DB173494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB1734A8);
}

uint64_t sub_1DB1734A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1EF790();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DB1EF760();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_1DB1735C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB1735DC);
}

uint64_t sub_1DB1735DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DB1EF790();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DB1EF760();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for Signpost()
{
  uint64_t result = qword_1EBA4E478;
  if (!qword_1EBA4E478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DB173738()
{
  uint64_t result = sub_1DB1EF790();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DB1EF760();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DB173814@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DB1EF760();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for Signpost();
  uint64_t v30 = *(int *)(v13 + 24);
  *(void *)(a3 + v3__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  uint64_t v14 = v13;
  sub_1DB1EF780();
  *(unsigned char *)(a3 + *(int *)(v14 + 28)) = a1;
  uint64_t v15 = a3 + *(int *)(v14 + 20);
  sub_1DB1EF770();
  uint64_t result = sub_1DB1EF740();
  if ((a2 & 1) == 0)
  {
    int v17 = sub_1DB174244(a1);
    uint64_t v29 = v7;
    unsigned int v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v18(v12, v15, v6);
    int v19 = sub_1DB1EF770();
    os_signpost_type_t v20 = sub_1DB1F17E0();
    if (sub_1DB1F18F0())
    {
      if (!v17)
      {
        __break(1u);
        JUMPOUT(0x1DB173B70);
      }
      v18(v9, (uint64_t)v12, v6);
      int v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = v17;
      unint64_t v22 = v21;
      *(_WORD *)int v21 = 0;
      os_signpost_id_t v23 = sub_1DB1EF750();
      _os_signpost_emit_with_name_impl(&dword_1DB0DC000, v19, v20, v23, v28, "", v22, 2u);
      MEMORY[0x1E018CA60](v22, -1, -1);

      uint64_t v24 = v29;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v6);
    }
    else
    {

      uint64_t v24 = v29;
    }
    v18(v9, (uint64_t)v12, v6);
    sub_1DB1EF7D0();
    swift_allocObject();
    uint64_t v25 = sub_1DB1EF7C0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v6);
    uint64_t v26 = v30;
    uint64_t result = swift_release();
    *(void *)(a3 + v26) = v25;
  }
  return result;
}

uint64_t sub_1DB173B88(int a1)
{
  LODWORD(v24) = a1;
  uint64_t v2 = sub_1DB1EF760();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v25 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v22[-v6];
  uint64_t v8 = sub_1DB1EF790();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, v1, v8, v10);
  uint64_t v13 = type metadata accessor for Signpost();
  uint64_t v14 = *(void (**)(void))(v3 + 16);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v14)(v7, v1 + *(int *)(v13 + 20), v2);
  uint64_t v15 = sub_1DB1EF770();
  int v23 = sub_1DB1F17F0();
  if (sub_1DB1F18F0())
  {
    unsigned int v16 = "failure";
    if ((v24 & 1) == 0) {
      unsigned int v16 = "success";
    }
    uint64_t v24 = v16;
    int v17 = v25;
    v14();
    unsigned int v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v18 = 0;
    os_signpost_id_t v19 = sub_1DB1EF750();
    _os_signpost_emit_with_name_impl(&dword_1DB0DC000, v15, (os_signpost_type_t)v23, v19, v24, "", v18, 2u);
    MEMORY[0x1E018CA60](v18, -1, -1);

    os_signpost_type_t v20 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v20(v7, v2);
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
    return ((uint64_t (*)(unsigned char *, uint64_t))v20)(v17, v2);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

uint64_t sub_1DB173E68()
{
  uint64_t v1 = sub_1DB1EF7A0();
  uint64_t v26 = *(const char **)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DB1EF760();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_1DB1EF790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for Signpost();
  if (*(void *)(v0 + *(int *)(result + 24)))
  {
    uint64_t v14 = result;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v0, v9);
    uint64_t v15 = sub_1DB174244(*(unsigned char *)(v0 + *(int *)(v14 + 28)));
    swift_retain();
    unsigned int v16 = sub_1DB1EF770();
    sub_1DB1EF7B0();
    int v25 = sub_1DB1F17D0();
    uint64_t result = sub_1DB1F18F0();
    if (result)
    {
      if (v15)
      {
        uint64_t v24 = v15;
        swift_retain();
        sub_1DB1EF7E0();
        swift_release();
        int v17 = v26;
        if ((*((unsigned int (**)(char *, uint64_t))v26 + 11))(v3, v1) == *MEMORY[0x1E4FBD340])
        {
          unsigned int v18 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(char *, uint64_t))v17 + 1))(v3, v1);
          unsigned int v18 = "";
        }
        uint64_t v26 = v18;
        uint64_t v19 = v28;
        uint64_t v20 = v29;
        (*(void (**)(void))(v28 + 16))();
        int v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v21 = 0;
        os_signpost_id_t v22 = sub_1DB1EF750();
        _os_signpost_emit_with_name_impl(&dword_1DB0DC000, v16, (os_signpost_type_t)v25, v22, v24, v26, v21, 2u);
        MEMORY[0x1E018CA60](v21, -1, -1);

        int v23 = *(void (**)(char *, uint64_t))(v19 + 8);
        v23(v8, v20);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v23)(v27, v20);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return swift_release();
    }
  }
  return result;
}

const char *sub_1DB174244(char a1)
{
  uint64_t result = "lid_pass";
  switch(a1)
  {
    case 1:
      uint64_t result = "translate_pass";
      break;
    case 2:
      uint64_t result = "network_path";
      break;
    case 3:
      uint64_t result = "ondevice_path";
      break;
    case 4:
      uint64_t result = "cache_path";
      break;
    case 5:
      uint64_t result = "read_status";
      break;
    case 6:
      uint64_t result = "read_available";
      break;
    case 7:
      uint64_t result = "read_selected";
      break;
    case 8:
      uint64_t result = "read_installed";
      break;
    case 9:
      uint64_t result = "download";
      break;
    case 10:
      uint64_t result = "pair_state";
      break;
    case 11:
      uint64_t result = "passthrough_pair";
      break;
    case 12:
      uint64_t result = "network_available";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB17437C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DB1EF760();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_1DB1EF790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for Signpost();
  uint64_t v14 = *(int *)(result + 24);
  if (!*(void *)(v0 + v14))
  {
    uint64_t v15 = result;
    uint64_t v24 = v10;
    uint64_t v25 = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
    int v23 = sub_1DB174244(*(unsigned char *)(v1 + *(int *)(v15 + 28)));
    uint64_t v16 = v1 + *(int *)(v15 + 20);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v26(v8, v16, v2);
    int v17 = sub_1DB1EF770();
    int v22 = sub_1DB1F17E0();
    uint64_t result = sub_1DB1F18F0();
    if (result)
    {
      uint64_t v21 = v3;
      if (!v23)
      {
        __break(1u);
        return result;
      }
      v26(v5, (uint64_t)v8, v2);
      unsigned int v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v18 = 0;
      os_signpost_id_t v19 = sub_1DB1EF750();
      _os_signpost_emit_with_name_impl(&dword_1DB0DC000, v17, (os_signpost_type_t)v22, v19, v23, "", v18, 2u);
      MEMORY[0x1E018CA60](v18, -1, -1);

      uint64_t v3 = v21;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v2);
    }
    else
    {
    }
    v26(v5, (uint64_t)v8, v2);
    sub_1DB1EF7D0();
    swift_allocObject();
    uint64_t v20 = sub_1DB1EF7C0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
    uint64_t result = swift_release();
    *(void *)(v1 + v14) = v20;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Signpost.Operation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Signpost.Operation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB1747F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Signpost.Operation()
{
  return &type metadata for Signpost.Operation;
}

unint64_t sub_1DB174834()
{
  unint64_t result = qword_1EA905278;
  if (!qword_1EA905278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905278);
  }
  return result;
}

uint64_t SimpleExpandingText.init(_:isExpanded:_:buttonAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13 = (int *)type metadata accessor for SimpleExpandingText();
  *(void *)(a9 + 16) = 0;
  *(void *)(a9 + 24) = 0;
  *(unsigned char *)(a9 + 32) = 0;
  uint64_t v14 = a9 + v13[6];
  uint64_t v15 = sub_1DB1EF6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = (uint64_t *)(a9 + v13[7]);
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = a9 + v13[8];
  sub_1DB1F0D10();
  *(unsigned char *)uint64_t v17 = v28;
  *(void *)(v17 + 8) = v29;
  unsigned int v18 = (void *)(a9 + v13[9]);
  sub_1DB1F0D10();
  *unsigned int v18 = v28;
  v18[1] = v29;
  uint64_t v19 = a9 + v13[10];
  sub_1DB1F0D10();
  *(unsigned char *)uint64_t v19 = v28;
  *(void *)(v19 + 8) = v29;
  uint64_t v20 = a9 + v13[11];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t v21 = (uint64_t *)(a9 + v13[12]);
  *uint64_t v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  swift_storeEnumTagMultiPayload();
  sub_1DB1F08C0();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  sub_1DB106F08(*(void *)(a9 + 16), *(void *)(a9 + 24));
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  sub_1DB106F4C(a6, v14);
  uint64_t result = sub_1DB0EB788(*v16);
  *uint64_t v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t type metadata accessor for SimpleExpandingText()
{
  uint64_t result = qword_1EA905288;
  if (!qword_1EA905288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

BOOL sub_1DB174AD0()
{
  uint64_t v1 = (int *)type metadata accessor for SimpleExpandingText();
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v73 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041C0);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v86 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DB1F08D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v84 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v73 - v13;
  uint64_t v15 = (uint64_t *)((char *)v0 + v1[9]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v87 = *v15;
  uint64_t v88 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903840);
  sub_1DB1F0D20();
  if (v89 <= 0.0)
  {
    if (qword_1EA903548 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_1DB1EF810();
    __swift_project_value_buffer(v68, (uint64_t)qword_1EA90F258);
    sub_1DB1773C0((uint64_t)v0, (uint64_t)v3);
    uint64_t v64 = sub_1DB1EF7F0();
    os_log_type_t v69 = sub_1DB1F1700();
    if (os_log_type_enabled(v64, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 134217984;
      uint64_t v71 = sub_1DB1F1370();
      sub_1DB179458((uint64_t)v3);
      uint64_t v87 = v71;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v64, v69, "Text of len %ld hard isMultiline due to: zero availableWidth", v70, 0xCu);
      MEMORY[0x1E018CA60](v70, -1, -1);
    }
    else
    {
      sub_1DB179458((uint64_t)v3);
    }
    BOOL v61 = 1;
  }
  else
  {
    uint64_t v81 = v6;
    uint64_t v87 = v16;
    uint64_t v88 = v17;
    sub_1DB1F0D20();
    unsigned int v18 = (char *)v0 + v1[13];
    uint64_t v85 = v10;
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v79 = v10 + 16;
    uint64_t v80 = v18;
    uint64_t v82 = v9;
    unint64_t v78 = v19;
    ((void (*)(char *))v19)(v14);
    sub_1DB1F0250();
    uint64_t v20 = sub_1DB1F0920();
    uint64_t v22 = v21;
    char v24 = v23;
    uint64_t v25 = (char *)v0 + v1[11];
    uint64_t v26 = *(void *)v25;
    uint64_t v77 = v25;
    char v27 = v25[8];
    j__swift_retain();
    uint64_t v28 = sub_1DB1C512C(v26, v27);
    j__swift_release();
    unint64_t v83 = v0;
    if (!v28) {
      sub_1DB1F0740();
    }
    uint64_t v29 = sub_1DB1F0910();
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    sub_1DB0EB23C(v20, v22, v24 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1DB1F08A0();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    uint64_t v37 = (uint64_t)v86;
    uint64_t v75 = v35 + 56;
    uint64_t v76 = v36;
    v36(v86, 1, 1, v34);
    sub_1DB1F08B0();
    double v39 = v38;
    sub_1DB0EB23C(v29, v31, v33);
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4(v37, &qword_1EA9041C0);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v85 + 8);
    uint64_t v41 = v82;
    v85 += 8;
    uint64_t v74 = v40;
    v40(v14, v82);
    v78(v84, v80, v41);
    uint64_t v42 = v83[1];
    uint64_t v87 = *v83;
    uint64_t v88 = v42;
    sub_1DB0F0708();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1DB1F0930();
    uint64_t v45 = v44;
    char v47 = v46;
    uint64_t v48 = *(void *)v77;
    char v49 = v77[8];
    j__swift_retain();
    uint64_t v50 = sub_1DB1C512C(v48, v49);
    j__swift_release();
    if (!v50) {
      sub_1DB1F0740();
    }
    char v51 = v47 & 1;
    uint64_t v52 = sub_1DB1F0910();
    uint64_t v54 = v53;
    char v56 = v55 & 1;
    sub_1DB0EB23C(v43, v45, v51);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v86;
    v76(v86, 1, 1, v34);
    uint64_t v58 = v84;
    sub_1DB1F08B0();
    double v60 = v59;
    sub_1DB0EB23C(v52, v54, v56);
    swift_bridgeObjectRelease();
    sub_1DB0E8BD4(v57, &qword_1EA9041C0);
    v74(v58, v82);
    BOOL v61 = v39 < v60;
    if (qword_1EA903548 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_1DB1EF810();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EA90F258);
    uint64_t v63 = (uint64_t)v81;
    sub_1DB1773C0((uint64_t)v83, (uint64_t)v81);
    uint64_t v64 = sub_1DB1EF7F0();
    os_log_type_t v65 = sub_1DB1F1700();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 67109376;
      LODWORD(v87) = v39 < v60;
      sub_1DB1F1910();
      *(_WORD *)(v66 + 8) = 2048;
      uint64_t v67 = sub_1DB1F1370();
      sub_1DB179458(v63);
      uint64_t v87 = v67;
      sub_1DB1F1910();
      _os_log_impl(&dword_1DB0DC000, v64, v65, "isMultiline: %{BOOL}d for text of %ld characters (approx)", (uint8_t *)v66, 0x12u);
      MEMORY[0x1E018CA60](v66, -1, -1);
    }
    else
    {
      sub_1DB179458(v63);
    }
  }

  return v61;
}

uint64_t sub_1DB175280@<X0>(char a1@<W0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904240);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v74 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904248);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904250);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = sub_1DB1F0C30();
  if (a1)
  {
    sub_1DB1F0250();
    uint64_t v19 = sub_1DB1F0920();
    uint64_t v73 = a3;
    uint64_t v20 = v19;
    uint64_t v71 = v9;
    uint64_t v22 = v21;
    uint64_t v72 = a2;
    uint64_t v75 = v11;
    char v24 = v23 & 1;
    sub_1DB1F0740();
    *(void *)&long long v68 = sub_1DB1F0910();
    uint64_t v26 = v25;
    uint64_t v67 = v25;
    uint64_t v69 = v8;
    char v28 = v27;
    uint64_t v70 = v29;
    swift_release();
    char v30 = v28 & 1;
    sub_1DB0EB23C(v20, v22, v24);
    swift_bridgeObjectRelease();
    int v65 = sub_1DB1F0710();
    sub_1DB1EFAC0();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v39 = sub_1DB1F0C20();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v66 = KeyPath;
    unsigned __int8 v41 = sub_1DB1F0710();
    sub_1DB1EFAC0();
    char v95 = v30;
    char v94 = 0;
    char v93 = 0;
    uint64_t v42 = v68;
    uint64_t v76 = v68;
    *(void *)&long long v77 = v26;
    BYTE8(v77) = v30;
    uint64_t v78 = v70;
    LOBYTE(v79) = v65;
    uint64_t v80 = v32;
    uint64_t v81 = v34;
    uint64_t v82 = v36;
    uint64_t v83 = v38;
    LOBYTE(v84) = 0;
    *((void *)&v84 + 1) = KeyPath;
    uint64_t v85 = v39;
    unsigned __int8 v86 = v41;
    uint64_t v88 = v43;
    uint64_t v89 = v44;
    uint64_t v90 = v45;
    uint64_t v91 = v46;
    char v92 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904260);
    sub_1DB1797BC(&qword_1EA904268, &qword_1EA904260, (void (*)(void))sub_1DB109A10);
    uint64_t v47 = (uint64_t)v74;
    sub_1DB1F0A60();
    sub_1DB0EB23C(v42, v67, v30);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_1DB1F01C0();
    sub_1DB175900((uint64_t)&v76);
    uint64_t v49 = v76;
    long long v62 = v77;
    uint64_t v50 = v78;
    uint64_t v51 = v79;
    uint64_t v52 = v80;
    LOBYTE(v39) = v81;
    uint64_t v53 = v82;
    uint64_t v70 = v18;
    char v54 = v83;
    long long v68 = v84;
    uint64_t v72 = v14;
    uint64_t v67 = v85;
    LODWORD(v66) = v86;
    int v65 = v87;
    char v100 = 0;
    char v99 = v81;
    char v97 = v83;
    uint64_t v64 = sub_1DB1F0F60();
    uint64_t v63 = v55;
    uint64_t v56 = (uint64_t)v75;
    sub_1DB0E8B70(v47, (uint64_t)v75, &qword_1EA904240);
    uint64_t v57 = v69;
    uint64_t v58 = v56 + *(int *)(v69 + 36);
    *(void *)uint64_t v58 = v48;
    *(void *)(v58 + 8) = 0;
    *(unsigned char *)(v58 + 16) = 0;
    *(_DWORD *)(v58 + 17) = v76;
    *(_DWORD *)(v58 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_DWORD *)((char *)&v76 + 3);
    *(void *)(v58 + 24) = v49;
    *(_OWORD *)(v58 + 32) = v62;
    *(void *)(v58 + 48) = v50;
    *(void *)(v58 + 56) = v51;
    *(void *)(v58 + 64) = v52;
    *(unsigned char *)(v58 + 72) = v39;
    *(_DWORD *)(v58 + 73) = *(_DWORD *)v98;
    *(_DWORD *)(v58 + 76) = *(_DWORD *)&v98[3];
    *(void *)(v58 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v53;
    *(unsigned char *)(v58 + 88) = v54;
    uint64_t v18 = v70;
    *(_DWORD *)(v58 + 92) = *(_DWORD *)&v96[3];
    *(_DWORD *)(v58 + 89) = *(_DWORD *)v96;
    *(_OWORD *)(v58 + 96) = v68;
    *(void *)(v58 + 112) = v67;
    uint64_t v14 = v72;
    *(unsigned char *)(v58 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v66;
    *(unsigned char *)(v58 + 121) = v65;
    *(_WORD *)(v58 + 126) = v102;
    *(_DWORD *)(v58 + 122) = v101;
    a3 = v73;
    uint64_t v59 = v63;
    *(void *)(v58 + 128) = v64;
    *(void *)(v58 + 136) = v59;
    sub_1DB0E8BD4(v47, &qword_1EA904240);
    sub_1DB0F1454((uint64_t)v75, (uint64_t)v17, &qword_1EA904248);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v17, 0, 1, v57);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  }
  sub_1DB0E8B70((uint64_t)v17, (uint64_t)v14, &qword_1EA904250);
  *(void *)a3 = v18;
  *(_WORD *)(a3 + 8) = 256;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904258);
  sub_1DB0E8B70((uint64_t)v14, a3 + *(int *)(v60 + 48), &qword_1EA904250);
  swift_retain();
  sub_1DB0E8BD4((uint64_t)v17, &qword_1EA904250);
  sub_1DB0E8BD4((uint64_t)v14, &qword_1EA904250);
  return swift_release();
}

__n128 sub_1DB175900@<Q0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904290);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DB1F4900;
  sub_1DB1F0C30();
  sub_1DB175AA4();
  uint64_t v3 = sub_1DB1F0C40();
  swift_release();
  *(void *)(v2 + 32) = v3;
  sub_1DB1F0C30();
  sub_1DB175AA4();
  uint64_t v4 = sub_1DB1F0C40();
  swift_release();
  *(void *)(v2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v4;
  sub_1DB1F14C0();
  sub_1DB1F1030();
  sub_1DB1F1040();
  MEMORY[0x1E018AEF0](v2);
  sub_1DB1EFD90();
  sub_1DB1F0F60();
  sub_1DB1EFC00();
  uint64_t v5 = sub_1DB1F0C20();
  *(void *)a1 = v7;
  __n128 result = v8;
  *(__n128 *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  *(unsigned char *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(unsigned char *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v15;
  *(void *)(a1 + 88) = v5;
  *(_WORD *)(a1 + 96) = 256;
  return result;
}

uint64_t sub_1DB175AA4()
{
  uint64_t v1 = sub_1DB1EFE00();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1DB1EF690();
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DB1EF6B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SimpleExpandingText();
  sub_1DB0E8B70(v0 + *(int *)(v17 + 24), (uint64_t)v12, &qword_1EBA4E570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v12, &qword_1EBA4E570);
    sub_1DB1C5340((uint64_t)v6);
    uint64_t v19 = v25;
    uint64_t v18 = v26;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v3, *MEMORY[0x1E4F3CBE8], v26);
    char v20 = sub_1DB1EFDF0();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v19 + 8);
    v21(v3, v18);
    v21(v6, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1DB1EF6A0();
    char v20 = sub_1DB1EF660() == 2;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v20 & 1;
}

uint64_t SimpleExpandingText.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = sub_1DB1EFE00();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v47 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904110);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9039C8) - 8;
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9039D0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v48 = (uint64_t)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SimpleExpandingText();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v46 = v12;
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB1773C0(v1, (uint64_t)v13);
  sub_1DB1F1570();
  uint64_t v14 = sub_1DB1F1560();
  uint64_t v45 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (v45 + 32) & ~v45;
  v42[1] = v45 | 7;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = MEMORY[0x1E4FBCFD8];
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v17;
  sub_1DB177428((uint64_t)v13, v16 + v15);
  uint64_t v18 = v1;
  sub_1DB1773C0(v1, (uint64_t)v13);
  uint64_t v19 = sub_1DB1F1560();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v17;
  sub_1DB177428((uint64_t)v13, v20 + v15);
  sub_1DB1F0E20();
  uint64_t v21 = v52;
  uint64_t v22 = v53;
  LODWORD(v19) = v54;
  *uint64_t v6 = sub_1DB1F0F80();
  v6[1] = v23;
  uint64_t v24 = (uint64_t)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA904128) + 44);
  v42[0] = v18;
  sub_1DB176540(v18, v21, v22, v19, v24);
  uint64_t KeyPath = swift_getKeyPath();
  char v26 = sub_1DB175AA4();
  uint64_t v27 = v49;
  uint64_t v28 = v50;
  uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3CBE8];
  if ((v26 & 1) == 0) {
    uint64_t v29 = (unsigned int *)MEMORY[0x1E4F3CBD8];
  }
  char v30 = v47;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v47, *v29, v50);
  uint64_t v31 = (uint64_t)v43;
  uint64_t v32 = (uint64_t *)&v43[*(int *)(v44 + 44)];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904130);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v32 + *(int *)(v33 + 28), v30, v28);
  *uint64_t v32 = KeyPath;
  sub_1DB0E8B70((uint64_t)v6, v31, &qword_1EA904110);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v28);
  sub_1DB0E8BD4((uint64_t)v6, &qword_1EA904110);
  uint64_t v34 = sub_1DB1F0F60();
  uint64_t v35 = v48;
  sub_1DB0ECC1C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v48, 0.0, 1, 0.0, 1, v34, v36);
  swift_release();
  swift_release();
  sub_1DB0E8BD4(v31, &qword_1EA9039C8);
  sub_1DB1773C0(v42[0], (uint64_t)v13);
  uint64_t v37 = (v45 + 16) & ~v45;
  uint64_t v38 = swift_allocObject();
  sub_1DB177428((uint64_t)v13, v38 + v37);
  uint64_t v39 = v51;
  sub_1DB0E8B70(v35, v51, &qword_1EA9039D0);
  uint64_t v40 = (void *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905280) + 36));
  *uint64_t v40 = sub_1DB177310;
  v40[1] = 0;
  v40[2] = sub_1DB177A70;
  v40[3] = v38;
  return sub_1DB0E8BD4(v35, &qword_1EA9039D0);
}

uint64_t sub_1DB176330@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SimpleExpandingText();
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = *(void *)(a1 + 24);
  if (v8)
  {
    char v9 = *(unsigned char *)(a1 + 32) & 1;
    uint64_t v17 = *(void *)(a1 + 16);
    uint64_t v18 = v8;
    char v19 = v9;
    swift_retain();
    swift_retain();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    MEMORY[0x1E018ADF0](&v20, v10);
    swift_release();
    swift_release();
    char v11 = v20;
    sub_1DB1773C0(a1, (uint64_t)v7);
  }
  else
  {
    sub_1DB1773C0(a1, (uint64_t)&v16 - v6);
    uint64_t v12 = &v7[*(int *)(v4 + 32)];
    char v13 = *v12;
    uint64_t v14 = *((void *)v12 + 1);
    LOBYTE(v17) = v13;
    uint64_t v18 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
    sub_1DB1F0D20();
    char v11 = v20;
  }
  uint64_t result = sub_1DB179458((uint64_t)v7);
  *a2 = v11;
  return result;
}

uint64_t sub_1DB17646C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 24))
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    sub_1DB1F0E00();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for SimpleExpandingText();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
    return sub_1DB1F0D30();
  }
}

uint64_t sub_1DB176540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v133 = a4;
  uint64_t v130 = a3;
  uint64_t v132 = a2;
  uint64_t v123 = a5;
  uint64_t v6 = sub_1DB1EFE70();
  uint64_t v113 = *(void *)(v6 - 8);
  uint64_t v114 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v112 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041C8);
  uint64_t v109 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v115 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041D0);
  uint64_t v108 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  BOOL v107 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041D8);
  uint64_t v129 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  uint64_t v106 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041E0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v122 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v120 = (char *)&v102 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041E8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v118 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for SimpleExpandingText();
  uint64_t v103 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v105 = (uint64_t)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v119 = (uint64_t)&v102 - v19;
  uint64_t v104 = v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v102 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041F0);
  MEMORY[0x1F4188790](v24 - 8);
  char v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9041F8);
  MEMORY[0x1F4188790](v117);
  uint64_t v28 = (_OWORD *)((char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904200);
  MEMORY[0x1F4188790](v126);
  uint64_t v127 = (uint64_t)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904208);
  MEMORY[0x1F4188790](v125);
  uint64_t v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v124 = (uint64_t)&v102 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v131 = (uint64_t)&v102 - v35;
  uint64_t v36 = *(void *)(a1 + 8);
  *(void *)&long long v139 = *(void *)a1;
  *((void *)&v139 + 1) = v36;
  sub_1DB0F0708();
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1DB1F0930();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  uint64_t v44 = sub_1DB1F0F30();
  sub_1DB0EC744(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v138, 0.0, 1, 0.0, 1, v44, v45, v37, v39, v43, v41);
  sub_1DB0EB23C(v37, v39, v43);
  swift_bridgeObjectRelease();
  long long v145 = v138[6];
  long long v146 = v138[7];
  long long v147 = v138[8];
  long long v141 = v138[2];
  long long v142 = v138[3];
  long long v143 = v138[4];
  long long v144 = v138[5];
  long long v139 = v138[0];
  long long v140 = v138[1];
  BOOL v46 = sub_1DB174AD0();
  uint64_t v128 = v31;
  if (v46)
  {
    uint64_t v47 = v132;
    uint64_t v48 = v130;
    uint64_t v134 = v132;
    uint64_t v135 = v130;
    int v49 = v133 & 1;
    char v136 = v133 & 1;
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    MEMORY[0x1E018ADF0](&v137, v50);
    char v51 = v137;
    sub_1DB1773C0(a1, (uint64_t)v23);
    int v133 = v49;
    if (v51)
    {
      char v52 = 0;
    }
    else
    {
      uint64_t v53 = &v23[*(int *)(v116 + 40)];
      char v54 = *v53;
      uint64_t v55 = *((void *)v53 + 1);
      LOBYTE(v134) = v54;
      uint64_t v135 = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
      sub_1DB1F0D20();
      char v52 = v137;
    }
  }
  else
  {
    sub_1DB1773C0(a1, (uint64_t)v23);
    char v52 = 0;
    v133 &= 1u;
    uint64_t v48 = v130;
    uint64_t v47 = v132;
  }
  uint64_t v56 = v117;
  uint64_t v57 = (uint64_t)v118;
  sub_1DB179458((uint64_t)v23);
  *(void *)char v26 = sub_1DB1F01C0();
  *((void *)v26 + 1) = 0;
  v26[16] = 0;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904210);
  sub_1DB175280(v52, (char *)a1, (uint64_t)&v26[*(int *)(v58 + 44)]);
  sub_1DB0E8B70((uint64_t)v26, v57, &qword_1EA9041F0);
  sub_1DB0E8B70(v57, (uint64_t)v28 + *(int *)(v56 + 36), &qword_1EA9041E8);
  long long v59 = v146;
  v28[6] = v145;
  v28[7] = v59;
  v28[8] = v147;
  long long v60 = v142;
  void v28[2] = v141;
  v28[3] = v60;
  long long v61 = v144;
  v28[4] = v143;
  v28[5] = v61;
  long long v62 = v140;
  _OWORD *v28 = v139;
  v28[1] = v62;
  sub_1DB109588((uint64_t)&v139);
  sub_1DB0E8BD4(v57, &qword_1EA9041E8);
  sub_1DB0E8BD4((uint64_t)v26, &qword_1EA9041F0);
  sub_1DB1095C8((uint64_t)&v139);
  uint64_t v134 = v47;
  uint64_t v135 = v48;
  char v136 = v133;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
  MEMORY[0x1E018ADF0](&v137);
  char v64 = v137;
  uint64_t v65 = v48;
  BOOL v66 = (v137 & 1) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v68 = v127;
  sub_1DB0E8B70((uint64_t)v28, v127, &qword_1EA9041F8);
  uint64_t v69 = v68 + *(int *)(v126 + 36);
  *(void *)uint64_t v69 = KeyPath;
  *(void *)(v69 + 8) = v66;
  *(unsigned char *)(v69 + 16) = v64;
  sub_1DB0E8BD4((uint64_t)v28, &qword_1EA9041F8);
  uint64_t v70 = v124;
  sub_1DB0E8B70(v68, v124, &qword_1EA904200);
  *(unsigned char *)(v70 + *(int *)(v125 + 36)) = 0;
  sub_1DB0E8BD4(v68, &qword_1EA904200);
  uint64_t v71 = v131;
  sub_1DB0F1454(v70, v131, &qword_1EA904208);
  if (!sub_1DB174AD0())
  {
    uint64_t v74 = v119;
    sub_1DB1773C0(a1, v119);
    goto LABEL_11;
  }
  uint64_t v72 = v132;
  uint64_t v134 = v132;
  uint64_t v135 = v65;
  char v136 = v133;
  MEMORY[0x1E018ADF0](&v137, v63);
  char v73 = v137;
  uint64_t v74 = v119;
  sub_1DB1773C0(a1, v119);
  if (v73)
  {
LABEL_11:
    sub_1DB179458(v74);
    uint64_t v98 = 1;
    uint64_t v81 = (uint64_t)v122;
    uint64_t v80 = v123;
    uint64_t v83 = (uint64_t)v120;
    uint64_t v82 = v121;
    goto LABEL_14;
  }
  uint64_t v75 = a1;
  uint64_t v76 = v74 + *(int *)(v116 + 40);
  char v77 = *(unsigned char *)v76;
  uint64_t v78 = *(void *)(v76 + 8);
  LOBYTE(v134) = v77;
  uint64_t v135 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904220);
  sub_1DB1F0D20();
  char v79 = v137;
  sub_1DB179458(v74);
  uint64_t v81 = (uint64_t)v122;
  uint64_t v80 = v123;
  uint64_t v83 = (uint64_t)v120;
  uint64_t v82 = v121;
  if (v79)
  {
    uint64_t v84 = v75;
    uint64_t v102 = v75;
    uint64_t v85 = v105;
    sub_1DB1773C0(v84, v105);
    unint64_t v86 = (*(unsigned __int8 *)(v103 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = v72;
    *(void *)(v87 + 24) = v130;
    *(unsigned char *)(v87 + 32) = v133;
    uint64_t v88 = sub_1DB177428(v85, v87 + v86);
    MEMORY[0x1F4188790](v88);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904228);
    sub_1DB109918();
    sub_1DB1F0D70();
    uint64_t v89 = v112;
    sub_1DB1EFE60();
    sub_1DB0E3C44(&qword_1EA904238, &qword_1EA9041C8);
    sub_1DB0FE90C();
    uint64_t v90 = v107;
    uint64_t v91 = v111;
    uint64_t v92 = v114;
    char v93 = v115;
    sub_1DB1F0990();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v89, v92);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v93, v91);
    uint64_t v94 = sub_1DB1F0C00();
    uint64_t v95 = v108;
    uint64_t v96 = (uint64_t)v106;
    uint64_t v97 = v110;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v106, v90, v110);
    *(void *)(v96 + *(int *)(v82 + 36)) = v94;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v90, v97);
    sub_1DB0F1454(v96, v83, &qword_1EA9041D8);
    uint64_t v98 = 0;
  }
  else
  {
    uint64_t v98 = 1;
  }
  uint64_t v71 = v131;
LABEL_14:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v83, v98, 1, v82);
  uint64_t v99 = (uint64_t)v128;
  sub_1DB0E8B70(v71, (uint64_t)v128, &qword_1EA904208);
  sub_1DB0E8B70(v83, v81, &qword_1EA9041E0);
  sub_1DB0E8B70(v99, v80, &qword_1EA904208);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904218);
  sub_1DB0E8B70(v81, v80 + *(int *)(v100 + 48), &qword_1EA9041E0);
  sub_1DB0E8BD4(v83, &qword_1EA9041E0);
  sub_1DB0E8BD4(v71, &qword_1EA904208);
  sub_1DB0E8BD4(v81, &qword_1EA9041E0);
  return sub_1DB0E8BD4(v99, &qword_1EA904208);
}

uint64_t sub_1DB17713C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  char v15 = a3;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
  MEMORY[0x1E018ADF0](&v12);
  sub_1DB1F0E00();
  swift_release();
  swift_release();
  uint64_t result = type metadata accessor for SimpleExpandingText();
  uint64_t v11 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + *(int *)(result + 28));
  if (*v11) {
    return (*v11)(result, v6, v7, v8, v9, v10);
  }
  return result;
}

uint64_t sub_1DB177208@<X0>(uint64_t a1@<X8>)
{
  sub_1DB1F0250();
  uint64_t v2 = sub_1DB1F0920();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_1DB1F0740();
  uint64_t v7 = sub_1DB1F0910();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_1DB0EB23C(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = sub_1DB1F0710();
  uint64_t result = sub_1DB1EFAC0();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v2;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v15;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = v18;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_1DB177310@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1DB1EFC90();
  *a1 = v3;
  return result;
}

uint64_t sub_1DB17733C()
{
  return sub_1DB1F0D30();
}

uint64_t sub_1DB1773C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SimpleExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB177428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SimpleExpandingText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB17748C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SimpleExpandingText() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DB176330(v4, a1);
}

uint64_t objectdestroyTm_9()
{
  uint64_t v1 = (int *)type metadata accessor for SimpleExpandingText();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v4 = v3 + v1[6];
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(v3 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v7 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v3 + v1[13];
  uint64_t v10 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1DB177784(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SimpleExpandingText() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DB17646C(a1, v4, v5, v6);
}

uint64_t sub_1DB1777F8()
{
  uint64_t v1 = (int *)type metadata accessor for SimpleExpandingText();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v3 = v2 + v1[6];
  uint64_t v4 = sub_1DB1EF6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  if (*(void *)(v2 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v6 = v2 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + v1[13];
  uint64_t v9 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

uint64_t sub_1DB177A70()
{
  type metadata accessor for SimpleExpandingText();
  return sub_1DB17733C();
}

uint64_t sub_1DB177AE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for SimpleExpandingText(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    }
    uint64_t v10 = a3[6];
    char v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1DB1EF6B0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    if (*v18)
    {
      uint64_t v19 = v18[1];
      void *v17 = *v18;
      v17[1] = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = a1 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
    *(void *)(v22 + 8) = *(void *)(v23 + 8);
    uint64_t v24 = (void *)(a1 + v21);
    uint64_t v25 = (uint64_t *)((char *)a2 + v21);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = a1 + v27;
    uint64_t v30 = (uint64_t)a2 + v27;
    *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    uint64_t v31 = a1 + v28;
    uint64_t v32 = *(uint64_t *)((char *)a2 + v28);
    char v33 = *((unsigned char *)a2 + v28 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(void *)uint64_t v31 = v32;
    *(unsigned char *)(v31 + 8) = v33;
    uint64_t v34 = a3[12];
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (uint64_t *)((char *)a2 + v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_1DB1EFE00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      *uint64_t v35 = *v36;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = a3[13];
    uint64_t v39 = a1 + v38;
    uint64_t v40 = (uint64_t)a2 + v38;
    uint64_t v41 = sub_1DB1F08D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return a1;
}

uint64_t destroy for SimpleExpandingText(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(a1 + a2[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v7 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[13];
  uint64_t v10 = sub_1DB1F08D0();
  char v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

uint64_t initializeWithCopy for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  if (*v16)
  {
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  uint64_t v22 = (void *)(a1 + v19);
  uint64_t v23 = (void *)(a2 + v19);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = *(void *)(a2 + v26);
  char v31 = *(unsigned char *)(a2 + v26 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(void *)uint64_t v29 = v30;
  *(unsigned char *)(v29 + 8) = v31;
  uint64_t v32 = a3[12];
  char v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = sub_1DB1EFE00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  else
  {
    *char v33 = *v34;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = a3[13];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  return a1;
}

uint64_t assignWithCopy for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v8)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_retain();
      swift_release();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_retain();
      swift_release();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    }
    else
    {
      sub_1DB0E8BD4(a1 + 16, &qword_1EA903B68);
      char v9 = *(unsigned char *)(a2 + 32);
      *uint64_t v6 = *v7;
      *(unsigned char *)(a1 + 32) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v10 = *v7;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *uint64_t v6 = v10;
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1DB1EF6B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_13:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_14:
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a1 + v20);
  uint64_t v24 = *(void *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = *(void *)(v22 + 8);
      *uint64_t v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *(void *)(v22 + 8);
    *uint64_t v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_21;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_21:
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[9];
  char v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_retain();
  swift_release();
  uint64_t v33 = a3[10];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(unsigned char *)uint64_t v34 = *(unsigned char *)v35;
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  swift_retain();
  swift_release();
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v39 = *v38;
  char v40 = *((unsigned char *)v38 + 8);
  j__swift_retain();
  *(void *)uint64_t v37 = v39;
  *(unsigned char *)(v37 + 8) = v40;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v41 = a3[12];
    char v42 = (void *)(a1 + v41);
    char v43 = (void *)(a2 + v41);
    sub_1DB0E8BD4(a1 + v41, &qword_1EA904100);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = sub_1DB1EFE00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      *char v42 = *v43;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v45 = a3[13];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  return a1;
}

uint64_t initializeWithTake for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1DB1EF6B0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = *v15;
  if (*v15)
  {
    uint64_t v17 = v15[1];
    void *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  uint64_t v18 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_1DB1EFE00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  uint64_t v27 = a3[13];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for SimpleExpandingText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_release();
      *(void *)(a1 + 24) = v7;
      swift_release();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      goto LABEL_6;
    }
    sub_1DB0E8BD4(a1 + 16, &qword_1EA903B68);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_6:
  uint64_t v8 = a3[6];
  char v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_12:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a1 + v17);
  uint64_t v21 = *(void *)(a2 + v17);
  if (v20)
  {
    if (v21)
    {
      uint64_t v22 = *(void *)(v19 + 8);
      *uint64_t v18 = v21;
      v18[1] = v22;
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  else if (v21)
  {
    uint64_t v23 = *(void *)(v19 + 8);
    *uint64_t v18 = v21;
    v18[1] = v23;
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
LABEL_19:
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  swift_release();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_release();
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(unsigned char *)uint64_t v31 = *(unsigned char *)v32;
  *(void *)(v31 + 8) = *(void *)(v32 + 8);
  swift_release();
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v37 = a3[12];
    uint64_t v38 = (void *)(a1 + v37);
    uint64_t v39 = (const void *)(a2 + v37);
    sub_1DB0E8BD4(a1 + v37, &qword_1EA904100);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v41 = sub_1DB1EFE00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
  }
  uint64_t v42 = a3[13];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleExpandingText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB178E20);
}

uint64_t sub_1DB178E20(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904178);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1DB1F08D0();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[13];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SimpleExpandingText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB178FB4);
}

uint64_t sub_1DB178FB4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904178);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1DB1F08D0();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[13];
  return v15(v17, a2, a2, v16);
}

void sub_1DB179134()
{
  sub_1DB1092E8(319, (unint64_t *)&qword_1EBA4E5E0, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1DB1092E8(319, &qword_1EA904190, MEMORY[0x1E4F3CBF0], MEMORY[0x1E4F3C648]);
    if (v1 <= 0x3F)
    {
      sub_1DB1F08D0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_1DB1792C8()
{
  unint64_t result = qword_1EA905298;
  if (!qword_1EA905298)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905280);
    sub_1DB1797BC(&qword_1EA9052A0, &qword_1EA9039D0, (void (*)(void))sub_1DB179394);
    sub_1DB0E3C44(&qword_1EA9052B0, &qword_1EA9052B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905298);
  }
  return result;
}

unint64_t sub_1DB179394()
{
  unint64_t result = qword_1EA9052A8;
  if (!qword_1EA9052A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9039C8);
    sub_1DB0E3C44(&qword_1EA904160, &qword_1EA904110);
    sub_1DB0E3C44(&qword_1EA904170, &qword_1EA904130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9052A8);
  }
  return result;
}

uint64_t sub_1DB179458(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SimpleExpandingText();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DB1794BC()
{
  unint64_t v1 = (int *)type metadata accessor for SimpleExpandingText();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 24))
  {
    swift_release();
    swift_release();
  }
  uint64_t v4 = v3 + v1[6];
  uint64_t v5 = sub_1DB1EF6B0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(v3 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  j__swift_release();
  uint64_t v7 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA904100);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1DB1EFE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v3 + v1[13];
  uint64_t v10 = sub_1DB1F08D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1DB179744()
{
  uint64_t v1 = *(void *)(type metadata accessor for SimpleExpandingText() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DB17713C(v2, v3, v4, v5);
}

uint64_t sub_1DB1797AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DB177208(a1);
}

uint64_t sub_1DB1797BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

NSAttributedString __swiftcall String.applyingAttributes(from:)(NSAttributedString from)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithString_, v3);

  id v5 = [(objc_class *)from.super.isa length];
  id v6 = objc_msgSend(v4, sel_length);
  if ((uint64_t)v6 >= (uint64_t)v5) {
    id v7 = v5;
  }
  else {
    id v7 = v6;
  }
  objc_msgSend(v4, sel_beginEditing);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1DB179B88;
  *(void *)(v9 + 24) = v8;
  void v14[4] = sub_1DB179BA0;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1DB179AB0;
  v14[3] = &block_descriptor_7;
  uint64_t v10 = _Block_copy(v14);
  id v11 = v4;
  swift_retain();
  swift_release();
  -[objc_class enumerateAttributesInRange:options:usingBlock:](from.super.isa, sel_enumerateAttributesInRange_options_usingBlock_, 0, v7, 0, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result.super.Class isa = (Class)swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v11, sel_endEditing);
    swift_release();
    return (NSAttributedString)v11;
  }
  return result;
}

void sub_1DB179A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  sub_1DB179C38(a1, v8, a2, a3);
}

uint64_t sub_1DB179AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1DB179BE0();
  uint64_t v9 = sub_1DB1F11B0();
  v8(v9, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB179B50()
{
  return swift_deallocObject();
}

void sub_1DB179B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DB179A44(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1DB179B90()
{
  return swift_deallocObject();
}

uint64_t sub_1DB179BA0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1DB179BE0()
{
  unint64_t result = qword_1EA903D40;
  if (!qword_1EA903D40)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA903D40);
  }
  return result;
}

uint64_t sub_1DB179C38(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v18 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v19) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v19) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v18 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v19) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v18 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v19) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v18 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = *(void **)(*(void *)(a1 + 48) + 8 * v11);
    sub_1DB0E52F4(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v25 + 8);
    *(void *)&v25[0] = v12;
    v23[0] = v25[0];
    v23[1] = v25[1];
    uint64_t v24 = v26;
    sub_1DB0E52F4((uint64_t)v23 + 8, (uint64_t)v22);
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    id v13 = v12;
    uint64_t v14 = sub_1DB1F1DA0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    objc_msgSend(a2, sel_addAttribute_value_range_, v12, v14, a3, v27);
    swift_unknownObjectRelease();
    uint64_t result = sub_1DB179E84((uint64_t)v23);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v19) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v18 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v19) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v18 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DB179E84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA903D38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static String.TRANSLATION_LIMIT.getter()
{
  return qword_1EA9052C0;
}

uint64_t static String.TRANSLATION_LIMIT.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  qword_1EA9052C0 = a1;
  return result;
}

uint64_t (*static String.TRANSLATION_LIMIT.modify())()
{
  return j__swift_endAccess;
}

id String.isWhitespaceOnly.getter()
{
  uint64_t v0 = (void *)sub_1DB1F1260();
  id v1 = objc_msgSend(v0, sel_lt_isWhiteSpaceOnlyString);

  return v1;
}

Swift::tuple_Bool_String __swiftcall String.truncated(limit:)(Swift::Int limit)
{
  unint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_1DB1EF380();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1DB1F1370() >= limit)
  {
    uint64_t v33 = v6;
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F38908]), sel_initWithUnit_, 0);
    uint64_t v12 = (void *)sub_1DB1F1260();
    objc_msgSend(v11, sel_setString_, v12);

    sub_1DB1F1390();
    uint64_t v13 = sub_1DB1F16E0();
    unint64_t v15 = v14;
    uint64_t v36 = v13;
    unint64_t v37 = v14;
    uint64_t v34 = v4;
    unint64_t v35 = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052C8);
    sub_1DB17A2B0();
    sub_1DB0F0708();
    sub_1DB1F18E0();
    if (v16 >= 21) {
      unint64_t v15 = sub_1DB1F1390();
    }
    uint64_t v17 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v17 = v4 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v10 = v15 >> 14 < 4 * v17;
    swift_bridgeObjectRetain();
    sub_1DB1F1380();
    uint64_t v18 = sub_1DB1F1420();
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E018B320](v18, v20, v22, v24);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v36 = v25;
    unint64_t v37 = v27;
    sub_1DB1EF360();
    uint64_t v4 = sub_1DB1F1940();
    unint64_t v3 = v28;

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    BOOL v10 = 0;
  }
  Swift::Bool v29 = v10;
  uint64_t v30 = v4;
  uint64_t v31 = (void *)v3;
  result._1._object = v31;
  result._1._countAndFlagsBits = v30;
  result._0 = v29;
  return result;
}

unint64_t sub_1DB17A2B0()
{
  unint64_t result = qword_1EA9052D0;
  if (!qword_1EA9052D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9052C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9052D0);
  }
  return result;
}

Swift::tuple_Bool_NSAttributedString __swiftcall NSAttributedString.truncated(limit:)(Swift::Int limit)
{
  id v3 = objc_msgSend(v1, sel_string);
  sub_1DB1F1290();

  Swift::Int v4 = sub_1DB1F1370();
  swift_bridgeObjectRelease();
  if (v4 >= limit)
  {
    id v7 = objc_msgSend(v1, sel_string);
    sub_1DB1F1290();

    unsigned __int8 v6 = String.truncated(limit:)(limit);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1DB1F13E0();
    swift_bridgeObjectRelease();
    uint64_t v5 = (objc_class *)objc_msgSend(v1, sel_attributedSubstringFromRange_, 0, v8);
  }
  else
  {
    uint64_t v5 = v1;
    unsigned __int8 v6 = 0;
  }
  Swift::Bool v9 = v6 & 1;
  result._1.super.Class isa = v5;
  result._0 = v9;
  return result;
}

uint64_t destroy for SystemWideConsentPresentation(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 56))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for SystemWideConsentPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  unsigned __int8 v6 = (_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for SystemWideConsentPresentation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a1 + 56);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v5;
      *(void *)(a1 + 64) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SystemWideConsentPresentation(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 56);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  if (!v5)
  {
    if (v4)
    {
      uint64_t v8 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v4;
      *(void *)(a1 + 64) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemWideConsentPresentation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemWideConsentPresentation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemWideConsentPresentation()
{
  return &type metadata for SystemWideConsentPresentation;
}

uint64_t *sub_1DB17A758(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
    Swift::Bool v9 = (char *)a1 + v8;
    BOOL v10 = (char *)a2 + v8;
    id v11 = (int *)type metadata accessor for VisualTranslationModel(0);
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1DB1EF570();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
      uint64_t v15 = v11[5];
      uint64_t v16 = &v9[v15];
      uint64_t v17 = &v10[v15];
      long long v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((void *)v16 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v17 + 20);
      long long v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      long long v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      long long v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      long long v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      uint64_t v23 = v11[6];
      uint64_t v24 = &v9[v23];
      uint64_t v25 = &v10[v23];
      uint64_t v26 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
      v9[v11[9]] = v10[v11[9]];
      v9[v11[10]] = v10[v11[10]];
      v9[v11[11]] = v10[v11[11]];
      unint64_t v27 = *(void (**)(char *, void, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      v27(v9, 0, 1, v11);
    }
    uint64_t v28 = *(int *)(a3 + 20);
    uint64_t v29 = *(int *)(a3 + 24);
    uint64_t v30 = (_OWORD *)((char *)a1 + v28);
    uint64_t v31 = (_OWORD *)((char *)a2 + v28);
    long long v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (uint64_t *)((char *)a1 + v29);
    uint64_t v34 = (uint64_t *)((char *)a2 + v29);
    if (*v34)
    {
      uint64_t v35 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v35;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    }
  }
  return a1;
}

uint64_t sub_1DB17AA08(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v5 = type metadata accessor for VisualTranslationModel(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
    uint64_t v8 = v4 + *(int *)(v5 + 24);
    uint64_t v9 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + *(int *)(a2 + 24)))
  {
    return swift_release();
  }
  return result;
}

void *sub_1DB17AB60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  BOOL v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1DB1EF570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
    uint64_t v14 = v10[5];
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    long long v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((void *)v15 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v16 + 20);
    long long v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    long long v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    long long v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    long long v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    uint64_t v22 = v10[6];
    uint64_t v23 = &v8[v22];
    uint64_t v24 = &v9[v22];
    uint64_t v25 = sub_1DB1EF520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
    *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    uint64_t v26 = *(void (**)(char *, void, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    v26(v8, 0, 1, v10);
  }
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = *(int *)(a3 + 24);
  uint64_t v29 = (_OWORD *)((char *)a1 + v27);
  uint64_t v30 = (_OWORD *)((char *)a2 + v27);
  long long v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  long long v32 = (void *)((char *)a1 + v28);
  uint64_t v33 = (void *)((char *)a2 + v28);
  if (*v33)
  {
    uint64_t v34 = v33[1];
    *long long v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)long long v32 = *(_OWORD *)v33;
  }
  return a1;
}

void *sub_1DB17ADC0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1DB1EF570();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      uint64_t v15 = v9[5];
      uint64_t v16 = &v7[v15];
      long long v17 = &v8[v15];
      uint64_t v18 = *((void *)v17 + 20);
      long long v20 = *((_OWORD *)v17 + 8);
      long long v19 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 7) = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 8) = v20;
      *((_OWORD *)v16 + 9) = v19;
      *((void *)v16 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = v18;
      long long v22 = *((_OWORD *)v17 + 5);
      long long v21 = *((_OWORD *)v17 + 6);
      long long v23 = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 3) = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 4) = v23;
      *((_OWORD *)v16 + 5) = v22;
      *((_OWORD *)v16 + 6) = v21;
      long long v25 = *((_OWORD *)v17 + 1);
      long long v24 = *((_OWORD *)v17 + 2);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v25;
      *((_OWORD *)v16 + 2) = v24;
      uint64_t v26 = v9[6];
      uint64_t v27 = &v7[v26];
      uint64_t v28 = &v8[v26];
      uint64_t v29 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      uint64_t v30 = *(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      v30(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1DB17DD68((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v7, v8, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v43 = sub_1DB1EF570();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 24))(v7, v8, v43);
  uint64_t v44 = v9[5];
  uint64_t v45 = &v7[v44];
  uint64_t v46 = &v8[v44];
  uint64_t v47 = *(void *)v46;
  v45[8] = v46[8];
  *(void *)uint64_t v45 = v47;
  *((void *)v45 + 2) = *((void *)v46 + 2);
  *((void *)v45 + 3) = *((void *)v46 + 3);
  *((void *)v45 + 4) = *((void *)v46 + 4);
  *((void *)v45 + 5) = *((void *)v46 + 5);
  *((void *)v45 + 6) = *((void *)v46 + 6);
  *((void *)v45 + 7) = *((void *)v46 + 7);
  *((void *)v45 + 8) = *((void *)v46 + 8);
  *((void *)v45 + 9) = *((void *)v46 + 9);
  *((void *)v45 + 1__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v46 + 10);
  *((void *)v45 + 11) = *((void *)v46 + 11);
  *((void *)v45 + 12) = *((void *)v46 + 12);
  *((void *)v45 + 13) = *((void *)v46 + 13);
  *((void *)v45 + 14) = *((void *)v46 + 14);
  *((void *)v45 + 15) = *((void *)v46 + 15);
  *((void *)v45 + 16) = *((void *)v46 + 16);
  *((void *)v45 + 17) = *((void *)v46 + 17);
  *((void *)v45 + 18) = *((void *)v46 + 18);
  *((void *)v45 + 19) = *((void *)v46 + 19);
  *((void *)v45 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v46 + 20);
  uint64_t v48 = v9[6];
  int v49 = &v7[v48];
  uint64_t v50 = &v8[v48];
  uint64_t v51 = sub_1DB1EF520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v33[3] = v34[3];
  uint64_t v35 = *(int *)(a3 + 24);
  uint64_t v36 = (void *)((char *)a1 + v35);
  unint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = *(void *)((char *)a1 + v35);
  uint64_t v39 = *v37;
  if (!v38)
  {
    if (v39)
    {
      uint64_t v41 = v37[1];
      *uint64_t v36 = v39;
      v36[1] = v41;
      swift_retain();
      return a1;
    }
LABEL_13:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    return a1;
  }
  if (!v39)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v40 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v40;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1DB17B258(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1DB1EF570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    uint64_t v14 = v10[5];
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    long long v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((void *)v15 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v16 + 20);
    long long v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    long long v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    long long v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    long long v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    uint64_t v22 = v10[6];
    long long v23 = &v8[v22];
    long long v24 = &v9[v22];
    uint64_t v25 = sub_1DB1EF520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
    *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = *(int *)(a3 + 24);
  uint64_t v28 = (_OWORD *)((char *)a1 + v26);
  uint64_t v29 = (_OWORD *)((char *)a2 + v26);
  long long v30 = v29[1];
  _OWORD *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = (void *)((char *)a1 + v27);
  uint64_t v32 = (void *)((char *)a2 + v27);
  uint64_t v33 = *v32;
  if (*v32)
  {
    uint64_t v34 = v32[1];
    void *v31 = v33;
    v31[1] = v34;
  }
  else
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  }
  return a1;
}

void *sub_1DB17B4A4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1DB1EF570();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      uint64_t v15 = v9[5];
      uint64_t v16 = &v7[v15];
      long long v17 = &v8[v15];
      long long v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((void *)v16 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v17 + 20);
      long long v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      long long v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      long long v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      long long v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      uint64_t v23 = v9[6];
      long long v24 = &v7[v23];
      uint64_t v25 = &v8[v23];
      uint64_t v26 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1DB17DD68((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v7, v8, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v39 = sub_1DB1EF570();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 40))(v7, v8, v39);
  uint64_t v40 = v9[5];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  long long v43 = *((_OWORD *)v42 + 2);
  *((_OWORD *)v41 + 1) = *((_OWORD *)v42 + 1);
  *((_OWORD *)v41 + 2) = v43;
  long long v44 = *((_OWORD *)v42 + 4);
  *((_OWORD *)v41 + 3) = *((_OWORD *)v42 + 3);
  *((_OWORD *)v41 + 4) = v44;
  long long v45 = *((_OWORD *)v42 + 6);
  *((_OWORD *)v41 + 5) = *((_OWORD *)v42 + 5);
  *((_OWORD *)v41 + 6) = v45;
  long long v46 = *((_OWORD *)v42 + 8);
  *((_OWORD *)v41 + 7) = *((_OWORD *)v42 + 7);
  *((_OWORD *)v41 + 8) = v46;
  *((_OWORD *)v41 + 9) = *((_OWORD *)v42 + 9);
  *((void *)v41 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v42 + 20);
  uint64_t v47 = v9[6];
  uint64_t v48 = &v7[v47];
  int v49 = &v8[v47];
  uint64_t v50 = sub_1DB1EF520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = *(int *)(a3 + 24);
  long long v30 = (_OWORD *)((char *)a1 + v28);
  uint64_t v31 = (_OWORD *)((char *)a2 + v28);
  long long v32 = v31[1];
  *long long v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = (void *)((char *)a1 + v29);
  uint64_t v34 = (void *)((char *)a2 + v29);
  uint64_t v35 = *v34;
  if (!*(void *)((char *)a1 + v29))
  {
    if (v35)
    {
      uint64_t v37 = v34[1];
      *uint64_t v33 = v35;
      v33[1] = v37;
      return a1;
    }
LABEL_13:
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    return a1;
  }
  if (!v35)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v36 = v34[1];
  *uint64_t v33 = v35;
  v33[1] = v36;
  swift_release();
  return a1;
}

uint64_t sub_1DB17B888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB17B89C);
}

uint64_t sub_1DB17B89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1DB17B96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB17B980);
}

uint64_t sub_1DB17B980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for SystemWidePresentation(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA9052E0);
}

void sub_1DB17BA60()
{
  sub_1DB17BB00();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DB17BB00()
{
  if (!qword_1EA9052F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBA4E458);
    unint64_t v0 = sub_1DB1F0E30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA9052F0);
    }
  }
}

uint64_t sub_1DB17BB5C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1DB17BB78(uint64_t a1)
{
  id v3 = objc_msgSend(self, sel__viewControllerForFullScreenPresentationFromView_, v1);
  id v4 = v3;
  if (!a1) {
    goto LABEL_7;
  }
  if (v3)
  {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v6 = v4;
    if (objc_msgSend(v6, sel_isKindOfClass_, ObjCClassFromMetadata))
    {
      id v4 = objc_msgSend(v6, sel_presentingViewController);

LABEL_11:
    }
    else
    {

      do
      {
        id v8 = objc_msgSend(v4, sel_presentedViewController);
        if (!v8) {
          break;
        }
        id v6 = v8;
        if (a1 && objc_msgSend(v8, sel_isKindOfClass_, swift_getObjCClassFromMetadata())) {
          goto LABEL_11;
        }
        id v7 = objc_msgSend(v6, sel_presentedViewController);

        id v4 = v7;
LABEL_7:
        ;
      }
      while (v4);
    }
  }
  return v4;
}

void sub_1DB17BC9C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SystemWideConsentView(0);
  uint64_t v5 = *(unsigned __int8 **)(v4 - 8);
  uint64_t v6 = *((void *)v5 + 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v67 = sub_1DB1EFB30();
  uint64_t v7 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  int v13 = (char *)&v62 - v12;
  id v68 = a1;
  id v14 = objc_msgSend(a1, sel_view, v11);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_1DB0E2EFC(0, &qword_1EA9053B0);
    id v17 = sub_1DB17BB78(v16);

    BOOL v66 = v9;
    if (!v17) {
      id v17 = v68;
    }
    uint64_t v18 = *(void *)(v2 + 8);
    char v19 = *(unsigned char *)(v2 + 16);
    double aBlock = *(double *)v2;
    uint64_t v70 = v18;
    LOBYTE(v71) = v19;
    uint64_t v65 = (double *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA903B68);
    MEMORY[0x1E018ADF0](&v75);
    if (v75 == 1
      && (id v20 = objc_msgSend(v17, sel_presentedViewController),
          v20,
          !v20))
    {
      uint64_t v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      char v64 = v5;
      id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FAFFF8]), sel_initWithNibName_bundle_, 0, 0);
      objc_msgSend(v38, sel_setModalPresentationStyle_, 7);
      objc_msgSend(v38, sel_setConsentDisplayOnly_, 1);
      uint64_t v65 = (double *)v2;
      id v39 = v38;
      sub_1DB1C5D68((uint64_t)v13);
      uint64_t v40 = v66;
      uint64_t v41 = v67;
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v66, *MEMORY[0x1E4F3C5B8], v67);
      uint64_t v42 = sub_1DB1EFB20();
      long long v43 = *(void (**)(char *, uint64_t))(v7 + 8);
      v43(v40, v41);
      uint64_t v44 = v41;
      long long v45 = v39;
      v43(v13, v44);
      if (v42) {
        uint64_t v46 = 2;
      }
      else {
        uint64_t v46 = 1;
      }
      objc_msgSend(v39, sel_setOverrideUserInterfaceStyle_, v46);

      id v47 = objc_msgSend(v39, sel_sheetPresentationController);
      if (v47)
      {
        uint64_t v48 = v47;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1DB1F7650;
        uint64_t v50 = self;
        *(void *)(v49 + 32) = objc_msgSend(v50, sel_mediumDetent);
        *(void *)(v49 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = objc_msgSend(v50, sel_largeDetent);
        double aBlock = *(double *)&v49;
        sub_1DB1F14C0();
        sub_1DB0E2EFC(0, &qword_1EA9053B8);
        uint64_t v51 = (void *)sub_1DB1F1480();
        swift_bridgeObjectRelease();
        objc_msgSend(v48, sel_setDetents_, v51);
      }
      id v52 = objc_msgSend(v39, sel_popoverPresentationController);
      uint64_t v53 = (uint64_t)v63;
      if (v52)
      {
        char v54 = v52;
        id v55 = objc_msgSend(v68, sel_view);
        objc_msgSend(v54, sel_setSourceView_, v55);
      }
      id v56 = objc_msgSend(v45, sel_popoverPresentationController);
      uint64_t v57 = (uint64_t)v65;
      if (v56)
      {
        uint64_t v58 = v56;
        objc_msgSend(v56, sel_setSourceRect_, v65[3], v65[4], v65[5], v65[6]);
      }
      sub_1DB17DDE8(v57, v53, type metadata accessor for SystemWideConsentView);
      unint64_t v59 = (v64[80] + 24) & ~(unint64_t)v64[80];
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = v45;
      sub_1DB18032C(v53, v60 + v59, type metadata accessor for SystemWideConsentView);
      char v73 = sub_1DB180770;
      uint64_t v74 = v60;
      double aBlock = MEMORY[0x1E4F143A8];
      uint64_t v70 = 1107296256;
      uint64_t v71 = sub_1DB168FE0;
      uint64_t v72 = &block_descriptor_15;
      long long v61 = _Block_copy(&aBlock);
      id v32 = v45;
      swift_release();
      objc_msgSend(v32, sel_setDismissCompletionHandler_, v61);
      _Block_release(v61);
      objc_msgSend(v17, sel_presentViewController_animated_completion_, v32, 1, 0);
    }
    else
    {
      id v21 = objc_msgSend(v17, sel_presentedViewController);
      if (v21)
      {
        long long v22 = v21;
        self;
        uint64_t v23 = swift_dynamicCastObjCClass();
        if (v23)
        {
          long long v24 = (void *)v23;
          char v64 = v22;
          sub_1DB1C5D68((uint64_t)v13);
          uint64_t v25 = v66;
          uint64_t v26 = v13;
          uint64_t v27 = v67;
          (*(void (**)(char *, void, uint64_t))(v7 + 104))(v66, *MEMORY[0x1E4F3C5B8], v67);
          char v28 = sub_1DB1EFB20();
          uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
          v29(v25, v27);
          v29(v26, v27);
          if (v28) {
            uint64_t v30 = 2;
          }
          else {
            uint64_t v30 = 1;
          }
          objc_msgSend(v24, sel_setOverrideUserInterfaceStyle_, v30);
        }
      }
      id v31 = objc_msgSend(v17, sel_presentedViewController);
      if (!v31) {
        goto LABEL_31;
      }
      id v32 = v31;
      self;
      uint64_t v33 = swift_dynamicCastObjCClass();
      if (!v33
        || (uint64_t v34 = (void *)v33,
            uint64_t v35 = *(void *)(v2 + 8),
            char v36 = *(unsigned char *)(v2 + 16),
            double aBlock = *(double *)v2,
            uint64_t v70 = v35,
            LOBYTE(v71) = v36,
            MEMORY[0x1E018ADF0](&v75, v65),
            (v75 & 1) != 0)
        || !objc_msgSend(v34, sel_consentDisplayOnly))
      {
        uint64_t v37 = v32;
        id v32 = v17;
LABEL_30:

        id v17 = v32;
LABEL_31:

        return;
      }
      objc_msgSend(v68, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
    uint64_t v37 = v17;
    goto LABEL_30;
  }
  __break(1u);
}

void sub_1DB17C3F0(void *a1, uint64_t a2)
{
  if (qword_1EA903538 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DB1EF810();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EA90F228);
  id v5 = a1;
  uint64_t v6 = sub_1DB1EF7F0();
  os_log_type_t v7 = sub_1DB1F1730();
  if (!os_log_type_enabled(v6, v7))
  {

    uint64_t v9 = *(void (**)(id))(a2 + 56);
    if (!v9) {
      return;
    }
    goto LABEL_7;
  }
  uint64_t v8 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v8 = 67240192;
  objc_msgSend(v5, sel_userConsentConfirmed);
  sub_1DB1F1910();

  _os_log_impl(&dword_1DB0DC000, v6, v7, "System wide dismissed, consent: %{BOOL,public}d", v8, 8u);
  MEMORY[0x1E018CA60](v8, -1, -1);

  uint64_t v9 = *(void (**)(id))(a2 + 56);
  if (v9) {
LABEL_7:
  }
    v9(objc_msgSend(v5, sel_userConsentConfirmed));
}

uint64_t sub_1DB17C574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1802E4(&qword_1EA9053C8, (void (*)(uint64_t))type metadata accessor for SystemWideConsentView);
  return MEMORY[0x1F40FAB70](a1, a2, a3, v6);
}

uint64_t sub_1DB17C608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1802E4(&qword_1EA9053C8, (void (*)(uint64_t))type metadata accessor for SystemWideConsentView);
  return MEMORY[0x1F40FAB28](a1, a2, a3, v6);
}

void sub_1DB17C69C()
{
}

void sub_1DB17C6F4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v101 = type metadata accessor for SystemWideSheetView(0);
  v96[0] = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  v96[1] = v4;
  uint64_t v97 = (uint64_t)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1DB1EFB30();
  uint64_t v5 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  os_log_type_t v7 = (char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v99 = (uint64_t)v96 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v96 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v105 = (char *)v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)v96 - v19;
  uint64_t v106 = type metadata accessor for VisualTranslationModel(0);
  uint64_t v21 = *(void *)(v106 - 8);
  *(void *)&double v22 = MEMORY[0x1F4188790](v106).n128_u64[0];
  uint64_t v102 = (char *)v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = objc_msgSend(a1, sel_view, v22);
  if (!v24)
  {
    __break(1u);
    return;
  }
  uint64_t v25 = v24;
  uint64_t v26 = sub_1DB0E2EFC(0, &qword_1EA9053B0);
  id v27 = sub_1DB17BB78(v26);

  id v107 = v27;
  id v98 = a1;
  if (!v27) {
    id v107 = a1;
  }
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  MEMORY[0x1E018ADF0]();
  uint64_t v28 = v106;
  uint64_t v104 = *(void *)(v21 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v104)(v20, 1, v106) == 1)
  {
    sub_1DB0E8BD4((uint64_t)v20, &qword_1EBA4E458);
LABEL_8:
    id v32 = v107;
    id v33 = objc_msgSend(v107, sel_presentedViewController, v96[0]);
    if (v33)
    {
      uint64_t v34 = v33;
      self;
      uint64_t v35 = swift_dynamicCastObjCClass();
      if (v35)
      {
        char v36 = (void *)v35;
        uint64_t v102 = v34;
        uint64_t v37 = v7;
        uint64_t v38 = v99;
        sub_1DB1C5D68(v99);
        uint64_t v39 = v100;
        (*(void (**)(char *, void, uint64_t))(v5 + 104))(v37, *MEMORY[0x1E4F3C5B8], v100);
        char v40 = sub_1DB1EFB20();
        uint64_t v41 = *(void (**)(char *, uint64_t))(v5 + 8);
        v41(v37, v39);
        uint64_t v42 = v39;
        uint64_t v28 = v106;
        v41((char *)v38, v42);
        id v32 = v107;
        if (v40) {
          uint64_t v43 = 2;
        }
        else {
          uint64_t v43 = 1;
        }
        objc_msgSend(v36, sel_setOverrideUserInterfaceStyle_, v43);
      }
    }
    uint64_t v44 = (uint64_t)v105;
    MEMORY[0x1E018ADF0](v103);
    int v45 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v104)(v44, 1, v28);
    sub_1DB0E8BD4(v44, &qword_1EBA4E458);
    if (v45 == 1)
    {
      id v46 = objc_msgSend(v32, sel_presentedViewController);

      if (v46) {
        objc_msgSend(v98, sel_dismissViewControllerAnimated_completion_, 1, 0);
      }
    }

    return;
  }
  uint64_t v29 = (uint64_t)v20;
  uint64_t v30 = v102;
  sub_1DB18032C(v29, (uint64_t)v102, type metadata accessor for VisualTranslationModel);
  id v31 = objc_msgSend(v107, sel_presentedViewController);

  if (v31)
  {
    sub_1DB17DD68((uint64_t)v30, type metadata accessor for VisualTranslationModel);
    goto LABEL_8;
  }
  id v47 = v7;
  uint64_t v104 = v5;
  uint64_t v105 = v2;
  id v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FAFFF8]), sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v48, sel_setModalPresentationStyle_, 7);
  uint64_t v49 = *(int *)(v28 + 28);
  uint64_t v50 = *(void *)&v30[v49];
  uint64_t v51 = v48;
  uint64_t v52 = swift_bridgeObjectRetain();
  Array<A>.sourceParagraph.getter(v52);
  swift_bridgeObjectRelease();
  id v53 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  char v54 = (void *)sub_1DB1F1260();
  swift_bridgeObjectRelease();
  id v55 = objc_msgSend(v53, sel_initWithString_, v54);

  objc_msgSend(v51, sel_setText_, v55);
  if (*(void *)(v50 + 16))
  {
    uint64_t v56 = type metadata accessor for TextModel();
    sub_1DB0E8B70(v50+ ((*(unsigned __int8 *)(*(void *)(v56 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v56 - 8) + 80))+ *(int *)(v56 + 28), (uint64_t)v15, &qword_1EBA4E570);
    uint64_t v57 = sub_1DB1EF6B0();
    uint64_t v58 = *(void *)(v57 - 8);
    int v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48))(v15, 1, v57);
    uint64_t v60 = 0;
    uint64_t v61 = v101;
    if (v59 != 1)
    {
      uint64_t v60 = (void *)sub_1DB1EF5D0();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v57);
    }
  }
  else
  {
    uint64_t v62 = sub_1DB1EF6B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v15, 1, 1, v62);
    uint64_t v60 = 0;
    uint64_t v61 = v101;
  }
  objc_msgSend(v51, sel_setSourceLocale_, v60, v96[0]);

  uint64_t v63 = (uint64_t)v102;
  uint64_t v64 = *(void *)&v102[v49];
  if (*(void *)(v64 + 16))
  {
    uint64_t v65 = type metadata accessor for TextModel();
    uint64_t v66 = v64
        + ((*(unsigned __int8 *)(*(void *)(v65 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v65 - 8) + 80))
        + *(int *)(v65 + 36);
    uint64_t v67 = sub_1DB1EF6B0();
    uint64_t v68 = *(void *)(v67 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v12, v66, v67);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v12, 0, 1, v67);
    int v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48))(v12, 1, v67);
    uint64_t v70 = 0;
    uint64_t v71 = (uint64_t)v105;
    if (v69 != 1)
    {
      uint64_t v70 = (void *)sub_1DB1EF5D0();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v67);
    }
  }
  else
  {
    uint64_t v72 = sub_1DB1EF6B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v12, 1, 1, v72);
    uint64_t v70 = 0;
    uint64_t v71 = (uint64_t)v105;
  }
  objc_msgSend(v51, sel_setTargetLocale_, v70);

  id v73 = v51;
  uint64_t v74 = v99;
  sub_1DB1C5D68(v99);
  uint64_t v75 = v104;
  uint64_t v76 = v100;
  (*(void (**)(char *, void, uint64_t))(v104 + 104))(v47, *MEMORY[0x1E4F3C5B8], v100);
  char v77 = sub_1DB1EFB20();
  uint64_t v78 = *(void (**)(char *, uint64_t))(v75 + 8);
  v78(v47, v76);
  v78((char *)v74, v76);
  if (v77) {
    uint64_t v79 = 2;
  }
  else {
    uint64_t v79 = 1;
  }
  objc_msgSend(v73, sel_setOverrideUserInterfaceStyle_, v79);

  id v80 = objc_msgSend(v73, sel_sheetPresentationController);
  if (v80)
  {
    uint64_t v81 = v80;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E278);
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1DB1F7650;
    uint64_t v83 = self;
    *(void *)(v82 + 32) = objc_msgSend(v83, sel_mediumDetent);
    uint64_t v84 = v83;
    uint64_t v71 = (uint64_t)v105;
    *(void *)(v82 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = objc_msgSend(v84, sel_largeDetent);
    aBlock[0] = v82;
    sub_1DB1F14C0();
    sub_1DB0E2EFC(0, &qword_1EA9053B8);
    uint64_t v85 = (void *)sub_1DB1F1480();
    swift_bridgeObjectRelease();
    objc_msgSend(v81, sel_setDetents_, v85);

    uint64_t v63 = (uint64_t)v102;
  }
  id v86 = objc_msgSend(v73, sel_popoverPresentationController);
  if (v86)
  {
    uint64_t v87 = v86;
    id v88 = objc_msgSend(v98, sel_view);
    objc_msgSend(v87, sel_setSourceView_, v88);
  }
  id v89 = objc_msgSend(v73, sel_popoverPresentationController);
  if (v89)
  {
    uint64_t v90 = v89;
    objc_msgSend(v89, sel_setSourceRect_, *(double *)(v71 + *(int *)(v61 + 20)), *(double *)(v71 + *(int *)(v61 + 20) + 8), *(double *)(v71 + *(int *)(v61 + 20) + 16), *(double *)(v71 + *(int *)(v61 + 20) + 24));
  }
  uint64_t v91 = v97;
  sub_1DB17DDE8(v71, v97, type metadata accessor for SystemWideSheetView);
  unint64_t v92 = (*(unsigned __int8 *)(v96[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v96[0] + 80);
  uint64_t v93 = swift_allocObject();
  sub_1DB18032C(v91, v93 + v92, type metadata accessor for SystemWideSheetView);
  aBlock[4] = sub_1DB1805BC;
  aBlock[5] = v93;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DB168FE0;
  aBlock[3] = &block_descriptor_8;
  uint64_t v94 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v73, sel_setDismissCompletionHandler_, v94);
  _Block_release(v94);
  id v95 = v107;
  objc_msgSend(v107, sel_presentViewController_animated_completion_, v73, 1, 0);

  sub_1DB17DD68(v63, type metadata accessor for VisualTranslationModel);
}

uint64_t sub_1DB17D354(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v7 = (char *)&v11 - v6;
  uint64_t v8 = type metadata accessor for VisualTranslationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1DB0E8B70((uint64_t)v7, (uint64_t)v4, &qword_1EBA4E458);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  sub_1DB1F0E00();
  sub_1DB0E8BD4((uint64_t)v7, &qword_1EBA4E458);
  uint64_t result = type metadata accessor for SystemWideSheetView(0);
  uint64_t v10 = (uint64_t (**)(void))(a1 + *(int *)(result + 24));
  if (*v10) {
    return (*v10)();
  }
  return result;
}

id sub_1DB17D484()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FB1EC0]);
  return objc_msgSend(v0, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1DB17D4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1802E4(&qword_1EA9053C0, (void (*)(uint64_t))type metadata accessor for SystemWideSheetView);
  return MEMORY[0x1F40FAB70](a1, a2, a3, v6);
}

uint64_t sub_1DB17D55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DB1802E4(&qword_1EA9053C0, (void (*)(uint64_t))type metadata accessor for SystemWideSheetView);
  return MEMORY[0x1F40FAB28](a1, a2, a3, v6);
}

void sub_1DB17D5F0()
{
}

uint64_t sub_1DB17D648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SystemWideSheetView(0);
  os_log_type_t v7 = (int *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052F8);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DB0E8B70(v2, (uint64_t)v5, &qword_1EA9052D8);
  uint64_t v17 = type metadata accessor for SystemWidePresentation(0);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v19 = v2 + *(int *)(v17 + 20);
  long long v37 = *(_OWORD *)v19;
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = *(void *)(v19 + 24);
  uint64_t v22 = *(void *)(v2 + v18);
  uint64_t v23 = *(void *)(v2 + v18 + 8);
  id v24 = (uint64_t *)&v9[v7[8]];
  *id v24 = 0;
  v24[1] = 0;
  uint64_t v25 = (uint64_t *)&v9[v7[9]];
  *uint64_t v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  swift_storeEnumTagMultiPayload();
  sub_1DB17DD00((uint64_t)v5, (uint64_t)v9);
  uint64_t v26 = &v9[v7[7]];
  *(_OWORD *)uint64_t v26 = v37;
  *((void *)v26 + 2) = v20;
  *((void *)v26 + 3) = v21;
  uint64_t v27 = *v24;
  sub_1DB0EB758(v22);
  sub_1DB0EB788(v27);
  *id v24 = v22;
  v24[1] = v23;
  sub_1DB18032C((uint64_t)v9, (uint64_t)v12, type metadata accessor for SystemWideSheetView);
  sub_1DB17DDE8((uint64_t)v12, (uint64_t)v16, type metadata accessor for SystemWideSheetView);
  *(void *)&v16[*(int *)(v14 + 44)] = 0;
  sub_1DB17DD68((uint64_t)v12, type metadata accessor for SystemWideSheetView);
  uint64_t v28 = sub_1DB1F0F60();
  uint64_t v30 = v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905308);
  uint64_t v32 = v38;
  uint64_t v33 = v38 + *(int *)(v31 + 36);
  sub_1DB0E8B70((uint64_t)v16, v33, &qword_1EA9052F8);
  uint64_t v34 = (uint64_t *)(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905310) + 36));
  uint64_t *v34 = v28;
  v34[1] = v30;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v32, v39, v35);
  return sub_1DB0E8BD4((uint64_t)v16, &qword_1EA9052F8);
}

uint64_t sub_1DB17D954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t v3 = type metadata accessor for SystemWideConsentView(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905320);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2[1];
  char v13 = *((unsigned char *)v2 + 16);
  uint64_t v28 = *v2;
  uint64_t v11 = v28;
  uint64_t v15 = v2[7];
  uint64_t v14 = v2[8];
  *(void *)&v6[*(int *)(v4 + 36)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v6 = v11;
  *((void *)v6 + 1) = v12;
  v6[16] = v13;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(v2 + 3);
  *(_OWORD *)(v6 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(v2 + 5);
  *((void *)v6 + 7) = v15;
  *((void *)v6 + 8) = v14;
  sub_1DB17DDE8((uint64_t)v6, (uint64_t)v10, type metadata accessor for SystemWideConsentView);
  *(void *)&v10[*(int *)(v8 + 44)] = 0;
  sub_1DB17DE50((uint64_t)&v28);
  swift_retain();
  sub_1DB0EB758(v15);
  sub_1DB17DD68((uint64_t)v6, type metadata accessor for SystemWideConsentView);
  uint64_t v16 = sub_1DB1F0F60();
  uint64_t v18 = v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905328);
  uint64_t v20 = v26;
  uint64_t v21 = v26 + *(int *)(v19 + 36);
  sub_1DB0E8B70((uint64_t)v10, v21, &qword_1EA905320);
  uint64_t v22 = (uint64_t *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA905330) + 36));
  uint64_t *v22 = v16;
  v22[1] = v18;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v20, v27, v23);
  return sub_1DB0E8BD4((uint64_t)v10, &qword_1EA905320);
}

uint64_t sub_1DB17DB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DB17D954(a1, a2);
}

uint64_t sub_1DB17DBD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SystemWideSheetView(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905348);
}

uint64_t sub_1DB17DC10()
{
  return sub_1DB1EFF40();
}

uint64_t sub_1DB17DC34(uint64_t a1)
{
  uint64_t v2 = sub_1DB1EFB30();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1DB1EFF50();
}

uint64_t sub_1DB17DD00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB17DD68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SystemWideConsentView(uint64_t a1)
{
  return sub_1DB0FAFC0(a1, (uint64_t *)&unk_1EA905360);
}

uint64_t sub_1DB17DDE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB17DE50(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1DB17DE7C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = (int *)type metadata accessor for VisualTranslationModel(0);
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1DB1EF570();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
      uint64_t v15 = v11[5];
      uint64_t v16 = &v9[v15];
      uint64_t v17 = &v10[v15];
      long long v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((void *)v16 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v17 + 20);
      long long v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      long long v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      long long v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      long long v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      uint64_t v23 = v11[6];
      id v24 = &v9[v23];
      uint64_t v25 = &v10[v23];
      uint64_t v26 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
      v9[v11[9]] = v10[v11[9]];
      v9[v11[10]] = v10[v11[10]];
      v9[v11[11]] = v10[v11[11]];
      uint64_t v27 = *(void (**)(char *, void, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      v27(v9, 0, 1, v11);
    }
    uint64_t v28 = a3[5];
    uint64_t v29 = a3[6];
    uint64_t v30 = (_OWORD *)((char *)a1 + v28);
    uint64_t v31 = (_OWORD *)((char *)a2 + v28);
    long long v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (uint64_t *)((char *)a1 + v29);
    uint64_t v34 = (uint64_t *)((char *)a2 + v29);
    if (*v34)
    {
      uint64_t v35 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v35;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    }
    uint64_t v36 = a3[7];
    long long v37 = (uint64_t *)((char *)a1 + v36);
    uint64_t v38 = (uint64_t *)((char *)a2 + v36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_1DB1EFB30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *long long v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DB17E1C4(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v5 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = v4 + *(int *)(v5 + 24);
    uint64_t v8 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + *(int *)(a2 + 24))) {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1DB1EFB30();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1DB17E390(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1DB1EF570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
    uint64_t v14 = v10[5];
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    long long v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((void *)v15 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v16 + 20);
    long long v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    long long v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    long long v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    long long v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    uint64_t v22 = v10[6];
    uint64_t v23 = &v8[v22];
    id v24 = &v9[v22];
    uint64_t v25 = sub_1DB1EF520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
    *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    uint64_t v26 = *(void (**)(char *, void, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    v26(v8, 0, 1, v10);
  }
  uint64_t v27 = a3[5];
  uint64_t v28 = a3[6];
  uint64_t v29 = (_OWORD *)((char *)a1 + v27);
  uint64_t v30 = (_OWORD *)((char *)a2 + v27);
  long long v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  long long v32 = (void *)((char *)a1 + v28);
  uint64_t v33 = (void *)((char *)a2 + v28);
  if (*v33)
  {
    uint64_t v34 = v33[1];
    *long long v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)long long v32 = *(_OWORD *)v33;
  }
  uint64_t v35 = a3[7];
  uint64_t v36 = (void *)((char *)a1 + v35);
  long long v37 = (void *)((char *)a2 + v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_1DB1EFB30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  }
  else
  {
    *uint64_t v36 = *v37;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DB17E680(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1DB1EF570();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      uint64_t v15 = v9[5];
      uint64_t v16 = &v7[v15];
      long long v17 = &v8[v15];
      uint64_t v18 = *((void *)v17 + 20);
      long long v20 = *((_OWORD *)v17 + 8);
      long long v19 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 7) = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 8) = v20;
      *((_OWORD *)v16 + 9) = v19;
      *((void *)v16 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = v18;
      long long v22 = *((_OWORD *)v17 + 5);
      long long v21 = *((_OWORD *)v17 + 6);
      long long v23 = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 3) = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 4) = v23;
      *((_OWORD *)v16 + 5) = v22;
      *((_OWORD *)v16 + 6) = v21;
      long long v25 = *((_OWORD *)v17 + 1);
      long long v24 = *((_OWORD *)v17 + 2);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v25;
      *((_OWORD *)v16 + 2) = v24;
      uint64_t v26 = v9[6];
      uint64_t v27 = &v7[v26];
      uint64_t v28 = &v8[v26];
      uint64_t v29 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      uint64_t v30 = *(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      v30(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1DB17DD68((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v7, v8, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v47 = sub_1DB1EF570();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 24))(v7, v8, v47);
  uint64_t v48 = v9[5];
  uint64_t v49 = &v7[v48];
  uint64_t v50 = &v8[v48];
  uint64_t v51 = *(void *)v50;
  v49[8] = v50[8];
  *(void *)uint64_t v49 = v51;
  *((void *)v49 + 2) = *((void *)v50 + 2);
  *((void *)v49 + 3) = *((void *)v50 + 3);
  *((void *)v49 + 4) = *((void *)v50 + 4);
  *((void *)v49 + 5) = *((void *)v50 + 5);
  *((void *)v49 + 6) = *((void *)v50 + 6);
  *((void *)v49 + 7) = *((void *)v50 + 7);
  *((void *)v49 + 8) = *((void *)v50 + 8);
  *((void *)v49 + 9) = *((void *)v50 + 9);
  *((void *)v49 + 1__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v50 + 10);
  *((void *)v49 + 11) = *((void *)v50 + 11);
  *((void *)v49 + 12) = *((void *)v50 + 12);
  *((void *)v49 + 13) = *((void *)v50 + 13);
  *((void *)v49 + 14) = *((void *)v50 + 14);
  *((void *)v49 + 15) = *((void *)v50 + 15);
  *((void *)v49 + 16) = *((void *)v50 + 16);
  *((void *)v49 + 17) = *((void *)v50 + 17);
  *((void *)v49 + 18) = *((void *)v50 + 18);
  *((void *)v49 + 19) = *((void *)v50 + 19);
  *((void *)v49 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v50 + 20);
  uint64_t v52 = v9[6];
  id v53 = &v7[v52];
  char v54 = &v8[v52];
  uint64_t v55 = sub_1DB1EF520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  uint64_t v32 = a3[5];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v33[3] = v34[3];
  uint64_t v35 = a3[6];
  uint64_t v36 = (void *)((char *)a1 + v35);
  long long v37 = (char *)a2 + v35;
  uint64_t v38 = *(void *)((char *)a1 + v35);
  uint64_t v39 = *(void *)((char *)a2 + v35);
  if (v38)
  {
    if (v39)
    {
      uint64_t v40 = *((void *)v37 + 1);
      *uint64_t v36 = v39;
      v36[1] = v40;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v39)
  {
    uint64_t v41 = *((void *)v37 + 1);
    *uint64_t v36 = v39;
    v36[1] = v41;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
LABEL_14:
  if (a1 != a2)
  {
    uint64_t v42 = a3[7];
    uint64_t v43 = (void *)((char *)a1 + v42);
    uint64_t v44 = (void *)((char *)a2 + v42);
    sub_1DB0E8BD4((uint64_t)a1 + v42, &qword_1EA905300);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = sub_1DB1EFB30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    }
    else
    {
      void *v43 = *v44;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DB17EBC0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1DB1EF570();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    uint64_t v14 = v10[5];
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    long long v17 = *((_OWORD *)v16 + 9);
    *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
    *((_OWORD *)v15 + 9) = v17;
    *((void *)v15 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v16 + 20);
    long long v18 = *((_OWORD *)v16 + 5);
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    *((_OWORD *)v15 + 5) = v18;
    long long v19 = *((_OWORD *)v16 + 7);
    *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
    *((_OWORD *)v15 + 7) = v19;
    long long v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    long long v21 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v21;
    uint64_t v22 = v10[6];
    long long v23 = &v8[v22];
    long long v24 = &v9[v22];
    uint64_t v25 = sub_1DB1EF520();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
    *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v26 = a3[5];
  uint64_t v27 = a3[6];
  uint64_t v28 = (_OWORD *)((char *)a1 + v26);
  uint64_t v29 = (_OWORD *)((char *)a2 + v26);
  long long v30 = v29[1];
  _OWORD *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = (void *)((char *)a1 + v27);
  uint64_t v32 = (void *)((char *)a2 + v27);
  uint64_t v33 = *v32;
  if (*v32)
  {
    uint64_t v34 = v32[1];
    void *v31 = v33;
    v31[1] = v34;
  }
  else
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  }
  uint64_t v35 = a3[7];
  uint64_t v36 = (char *)a1 + v35;
  long long v37 = (char *)a2 + v35;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = sub_1DB1EFB30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  return a1;
}

void *sub_1DB17EEAC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for VisualTranslationModel(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1DB1EF570();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      uint64_t v15 = v9[5];
      uint64_t v16 = &v7[v15];
      long long v17 = &v8[v15];
      long long v18 = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
      *((_OWORD *)v16 + 9) = v18;
      *((void *)v16 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v17 + 20);
      long long v19 = *((_OWORD *)v17 + 5);
      *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
      *((_OWORD *)v16 + 5) = v19;
      long long v20 = *((_OWORD *)v17 + 7);
      *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
      *((_OWORD *)v16 + 7) = v20;
      long long v21 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      long long v22 = *((_OWORD *)v17 + 3);
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
      *((_OWORD *)v16 + 3) = v22;
      uint64_t v23 = v9[6];
      long long v24 = &v7[v23];
      uint64_t v25 = &v8[v23];
      uint64_t v26 = sub_1DB1EF520();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1DB17DD68((uint64_t)v7, type metadata accessor for VisualTranslationModel);
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E458);
    memcpy(v7, v8, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v44 = sub_1DB1EF570();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 40))(v7, v8, v44);
  uint64_t v45 = v9[5];
  id v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  *(void *)id v46 = *(void *)v47;
  v46[8] = v47[8];
  long long v48 = *((_OWORD *)v47 + 2);
  *((_OWORD *)v46 + 1) = *((_OWORD *)v47 + 1);
  *((_OWORD *)v46 + 2) = v48;
  long long v49 = *((_OWORD *)v47 + 4);
  *((_OWORD *)v46 + 3) = *((_OWORD *)v47 + 3);
  *((_OWORD *)v46 + 4) = v49;
  long long v50 = *((_OWORD *)v47 + 6);
  *((_OWORD *)v46 + 5) = *((_OWORD *)v47 + 5);
  *((_OWORD *)v46 + 6) = v50;
  long long v51 = *((_OWORD *)v47 + 8);
  *((_OWORD *)v46 + 7) = *((_OWORD *)v47 + 7);
  *((_OWORD *)v46 + 8) = v51;
  *((_OWORD *)v46 + 9) = *((_OWORD *)v47 + 9);
  *((void *)v46 + 2__isPlatformVersionAtLeast(2, 18, 1, 0) = *((void *)v47 + 20);
  uint64_t v52 = v9[6];
  id v53 = &v7[v52];
  char v54 = &v8[v52];
  uint64_t v55 = sub_1DB1EF520();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 40))(v53, v54, v55);
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
LABEL_7:
  uint64_t v28 = a3[5];
  uint64_t v29 = a3[6];
  long long v30 = (_OWORD *)((char *)a1 + v28);
  uint64_t v31 = (_OWORD *)((char *)a2 + v28);
  long long v32 = v31[1];
  *long long v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = (void *)((char *)a1 + v29);
  uint64_t v34 = (char *)a2 + v29;
  uint64_t v35 = *(void *)((char *)a2 + v29);
  if (*(void *)((char *)a1 + v29))
  {
    if (v35)
    {
      uint64_t v36 = *((void *)v34 + 1);
      *uint64_t v33 = v35;
      v33[1] = v36;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v35)
  {
    uint64_t v37 = *((void *)v34 + 1);
    *uint64_t v33 = v35;
    v33[1] = v37;
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_14:
  if (a1 != a2)
  {
    uint64_t v38 = a3[7];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    sub_1DB0E8BD4((uint64_t)a1 + v38, &qword_1EA905300);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_1DB1EFB30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DB17F348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB17F35C);
}

uint64_t sub_1DB17F35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905340);
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1DB17F49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB17F4B0);
}

uint64_t sub_1DB17F4B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905340);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1DB17F5E4()
{
  sub_1DB17BB00();
  if (v0 <= 0x3F)
  {
    sub_1DB17F6C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DB17F6C0()
{
  if (!qword_1EA905358)
  {
    sub_1DB1EFB30();
    unint64_t v0 = sub_1DB1EFB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA905358);
    }
  }
}

uint64_t sub_1DB17F718(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 7;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    long long v10 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
    swift_retain();
    swift_retain();
    if (v9)
    {
      uint64_t v11 = a2[8];
      *(void *)(a1 + 56) = v9;
      *(void *)(a1 + 64) = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *v8;
    }
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1DB1EFB30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DB17F88C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  if (*(void *)(a1 + 56)) {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1DB1EFB30();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1DB17F95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_1DB1EFB30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DB17FA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a1 + 56);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  if (v6)
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_1DB0E8BD4(a1 + v10, &qword_1EA905300);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1DB1EFB30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DB17FC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v4;
    *(void *)(a1 + 64) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1DB1EFB30();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1DB17FD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a1 + 56);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
  if (v7)
  {
    if (v6)
    {
      uint64_t v9 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v6;
      *(void *)(a1 + 64) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v10 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_1DB0E8BD4(a1 + v11, &qword_1EA905300);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1DB1EFB30();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DB17FE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DB17FEA4);
}

uint64_t sub_1DB17FEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905340);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DB17FF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DB17FF6C);
}

uint64_t sub_1DB17FF6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905340);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DB180018()
{
  sub_1DB17F6C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1DB1800C8()
{
  unint64_t result = qword_1EA905370;
  if (!qword_1EA905370)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905308);
    sub_1DB0E3C44(&qword_1EA905378, &qword_1EA905318);
    sub_1DB0E3C44(&qword_1EA905380, &qword_1EA905310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905370);
  }
  return result;
}

unint64_t sub_1DB180190()
{
  unint64_t result = qword_1EA905388;
  if (!qword_1EA905388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA905328);
    sub_1DB0E3C44(&qword_1EA905390, &qword_1EA905338);
    sub_1DB0E3C44(&qword_1EA905398, &qword_1EA905330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA905388);
  }
  return result;
}

uint64_t sub_1DB180254()
{
  return sub_1DB1802E4(&qword_1EA9053A0, (void (*)(uint64_t))type metadata accessor for SystemWideConsentView);
}

uint64_t sub_1DB18029C()
{
  return sub_1DB1802E4(&qword_1EA9053A8, (void (*)(uint64_t))type metadata accessor for SystemWideSheetView);
}

uint64_t sub_1DB1802E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DB18032C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB180394()
{
  uint64_t v1 = type metadata accessor for SystemWideSheetView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9052D8) + 32);
  uint64_t v4 = type metadata accessor for VisualTranslationModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t v5 = sub_1DB1EF570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
    uint64_t v6 = v3 + *(int *)(v4 + 24);
    uint64_t v7 = sub_1DB1EF520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v2 + *(int *)(v1 + 24))) {
    swift_release();
  }
  uint64_t v8 = v2 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1DB1EFB30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1DB1805BC()
{
  uint64_t v1 = *(void *)(type metadata accessor for SystemWideSheetView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DB17D354(v2);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1DB180634()
{
  uint64_t v1 = type metadata accessor for SystemWideConsentView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);

  swift_release();
  swift_release();
  if (*(void *)(v0 + v2 + 56)) {
    swift_release();
  }
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1DB1EFB30();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1DB180770()
{
  uint64_t v1 = *(void *)(type metadata accessor for SystemWideConsentView(0) - 8);
  unint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_1DB17C3F0(v2, v3);
}

BOOL static TaskHint.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TaskHint.hash(into:)()
{
  return sub_1DB1F1E90();
}

uint64_t TaskHint.hashValue.getter()
{
  return sub_1DB1F1EC0();
}

unint64_t sub_1DB180870()
{
  unint64_t result = qword_1EA9053D0;
  if (!qword_1EA9053D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9053D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TaskHint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB180990);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskHint()
{
  return &type metadata for TaskHint;
}

uint64_t getEnumTagSinglePayload for TextError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TextError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DB180B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextError()
{
  return &type metadata for TextError;
}

unint64_t sub_1DB180B5C(char a1)
{
  unint64_t result = 0x7165527974706D65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x756C63784564696CLL;
      break;
    case 2:
      unint64_t result = 0x6E6F636E4964696CLL;
      break;
    case 3:
      unint64_t result = 0x7365526F4E64696CLL;
      break;
    case 4:
      unint64_t result = 0x6544746F4E64696CLL;
      break;
    case 5:
      unint64_t result = 0x7075736E5564696CLL;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DB180CD4(char a1)
{
  unint64_t result = 0x7165527974706D65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x756C63784564696CLL;
      break;
    case 2:
      unint64_t result = 0x6E6F636E4964696CLL;
      break;
    case 3:
      unint64_t result = 0x7365526F4E64696CLL;
      break;
    case 4:
      unint64_t result = 0x6544746F4E64696CLL;
      break;
    case 5:
      unint64_t result = 0x7075736E5564696CLL;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DB180E4C()
{
  char v1 = *v0;
  sub_1DB1F1E80();
  sub_1DB180CD4(v1);
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB180EB0()
{
  sub_1DB180CD4(*v0);
  sub_1DB1F1360();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DB180F04()
{
  char v1 = *v0;
  sub_1DB1F1E80();
  sub_1DB180CD4(v1);
  sub_1DB1F1360();
  swift_bridgeObjectRelease();
  return sub_1DB1F1EC0();
}

uint64_t sub_1DB180F64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DB18111C();
  *a1 = result;
  return result;
}

unint64_t sub_1DB180F94@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DB180CD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1DB180FC0()
{
  return sub_1DB180B5C(*v0);
}

void sub_1DB180FC8(void *a1@<X8>)
{
  *a1 = &unk_1F3543928;
}

uint64_t sub_1DB180FD8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1DB180CD4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1DB180CD4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DB1F1DB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1DB181068()
{
  unint64_t result = qword_1EA9053D8;
  if (!qword_1EA9053D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA9053E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9053D8);
  }
  return result;
}

unint64_t sub_1DB1810C8()
{
  unint64_t result = qword_1EA9053E8;
  if (!qword_1EA9053E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA9053E8);
  }
  return result;
}

uint64_t sub_1DB18111C()
{
  unint64_t v0 = sub_1DB1F1C10();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t static LowConfidenceLID.maxLocalesToSuggest.getter()
{
  return 2;
}

uint64_t sub_1DB181170(uint64_t (*a1)(), uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4B0);
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  uint64_t v5 = *(void **)(v69 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v68 = (char *)&v62 - (((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Signpost();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v67 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (uint64_t)&v62 - v10;
  uint64_t v72 = type metadata accessor for TextModel();
  uint64_t v11 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a2 + 16);
  if (v14)
  {
    uint64_t v63 = v7;
    uint64_t v64 = v8;
    id v65 = v5;
    uint64_t v66 = a1;
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1DB12E9B8(0, v14, 0);
    uint64_t v15 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v16 = *(void *)(v11 + 72);
    uint64_t v17 = aBlock[0];
    uint64_t v62 = v15;
    uint64_t v18 = v15;
    do
    {
      sub_1DB1843B8(v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TextModel);
      long long v19 = &v13[*(int *)(v72 + 24)];
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *((void *)v19 + 1);
      swift_bridgeObjectRetain();
      sub_1DB184724((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TextModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E9B8(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = aBlock[0];
      }
      unint64_t v23 = *(void *)(v17 + 16);
      unint64_t v22 = *(void *)(v17 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1DB12E9B8(v22 > 1, v23 + 1, 1);
        uint64_t v17 = aBlock[0];
      }
      *(void *)(v17 + 16) = v23 + 1;
      uint64_t v24 = v17 + 16 * v23;
      *(void *)(v24 + 32) = v20;
      *(void *)(v24 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
      v18 += v16;
      --v14;
    }
    while (v14);
    uint64_t v25 = *(void *)(v62 + *(int *)(v72 + 48));
    goto LABEL_11;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (*(void *)(MEMORY[0x1E4FBC860] + 16))
  {
    uint64_t v63 = v7;
    uint64_t v64 = v8;
    id v65 = v5;
    uint64_t v66 = a1;
    uint64_t v25 = 0;
LABEL_11:
    if (qword_1EBA4E298 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1DB1EF810();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EBA4F3F0);
    uint64_t v27 = sub_1DB1EF7F0();
    os_log_type_t v28 = sub_1DB1F1700();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v72 = v25;
    if (v29)
    {
      long long v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v73 = v25;
      aBlock[0] = v31;
      *(_DWORD *)long long v30 = 136446210;
      type metadata accessor for _LTTextLanguageDetectorStrategy(0);
      uint64_t v32 = sub_1DB1F1300();
      uint64_t v73 = sub_1DB11F638(v32, v33, aBlock);
      sub_1DB1F1910();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DB0DC000, v27, v28, "Text LID request strategy: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v31, -1, -1);
      MEMORY[0x1E018CA60](v30, -1, -1);
    }

    id v35 = v65;
    uint64_t v34 = v66;
    uint64_t v36 = v63;
    uint64_t v37 = v64;
    uint64_t v38 = v71;
    sub_1DB173814(0, 0, v71);
    id v65 = self;
    uint64_t v64 = sub_1DB1F1480();
    uint64_t v66 = type metadata accessor for Signpost;
    uint64_t v39 = v67;
    sub_1DB1843B8(v38, v67, (uint64_t (*)(void))type metadata accessor for Signpost);
    uint64_t v41 = v68;
    uint64_t v40 = v69;
    uint64_t v42 = v34;
    uint64_t v43 = v70;
    (*(void (**)(char *, uint64_t (*)(), uint64_t))(v69 + 16))(v68, v42, v70);
    unint64_t v44 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    unint64_t v45 = (v37 + *(unsigned __int8 *)(v40 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    unint64_t v46 = ((unint64_t)v35 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = swift_allocObject();
    sub_1DB184CEC(v39, v47 + v44, (uint64_t (*)(void))type metadata accessor for Signpost);
    (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v47 + v45, v41, v43);
    *(void *)(v47 + v46) = v17;
    uint64_t v48 = v72;
    *(void *)(v47 + ((v46 + 15) & 0xFFFFFFFFFFFFFFF8)) = v72;
    aBlock[4] = (uint64_t)sub_1DB1845FC;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1DB1821F0;
    aBlock[3] = (uint64_t)&block_descriptor_9;
    long long v49 = _Block_copy(aBlock);
    swift_release();
    long long v50 = (void *)v64;
    objc_msgSend(v65, sel_languagesForText_usingModel_strategy_useDedicatedTextMachPort_completion_, v64, 1, v48, 1, v49);
    _Block_release(v49);

    return sub_1DB184724(v71, (uint64_t (*)(void))v66);
  }
  swift_bridgeObjectRelease();
  if (qword_1EBA4E298 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_1DB1EF810();
  __swift_project_value_buffer(v52, (uint64_t)qword_1EBA4F3F0);
  id v53 = sub_1DB1EF7F0();
  os_log_type_t v54 = sub_1DB1F1710();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 138412290;
    sub_1DB184784();
    uint64_t v57 = (void *)swift_allocError();
    unsigned char *v58 = 0;
    uint64_t v59 = sub_1DB1EF410();

    aBlock[0] = v59;
    sub_1DB1F1910();
    void *v56 = v59;
    _os_log_impl(&dword_1DB0DC000, v53, v54, "Failed to do LID since text is empty: %@", v55, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v56, -1, -1);
    MEMORY[0x1E018CA60](v55, -1, -1);
  }

  sub_1DB184784();
  uint64_t v60 = swift_allocError();
  *uint64_t v61 = 0;
  aBlock[0] = v60;
  return sub_1DB1F1520();
}

uint64_t sub_1DB181944(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v71 = a3;
  uint64_t v72 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E570);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DB1EF6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v63 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v63 - v19;
  if (a1)
  {
    id v70 = a1;
    id v21 = objc_msgSend(v70, sel_dominantLocale);
    if (v21)
    {
      unint64_t v22 = v21;
      uint64_t v69 = a5;
      sub_1DB1EF5F0();

      unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v23(v10, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        v23(v20, v10, v11);
        if (qword_1EBA4E298 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_1DB1EF810();
        __swift_project_value_buffer(v24, (uint64_t)qword_1EBA4F3F0);
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        v68(v14, v20, v11);
        swift_bridgeObjectRetain_n();
        uint64_t v25 = sub_1DB1EF7F0();
        os_log_type_t v26 = sub_1DB1F1700();
        int v27 = v26;
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v67 = v12 + 16;
          uint64_t v29 = v28;
          uint64_t v30 = swift_slowAlloc();
          uint64_t v66 = v30;
          *(_DWORD *)uint64_t v29 = 134349827;
          uint64_t v73 = *(void *)(a4 + 16);
          uint64_t v74 = v30;
          int v65 = v27;
          sub_1DB1F1910();
          *(_WORD *)(v29 + 12) = 2082;
          os_log_t v64 = v25;
          uint64_t v31 = sub_1DB1EF590();
          uint64_t v73 = sub_1DB11F638(v31, v32, &v74);
          sub_1DB1F1910();
          swift_bridgeObjectRelease();
          uint64_t v63 = *(void (**)(char *, uint64_t))(v12 + 8);
          v63(v14, v11);
          *(_WORD *)(v29 + 22) = 2082;
          uint64_t v73 = v69;
          type metadata accessor for _LTTextLanguageDetectorStrategy(0);
          uint64_t v33 = sub_1DB1F1300();
          uint64_t v73 = sub_1DB11F638(v33, v34, &v74);
          sub_1DB1F1910();
          swift_bridgeObjectRelease();
          *(_WORD *)(v29 + 32) = 2085;
          uint64_t v35 = swift_bridgeObjectRetain();
          uint64_t v36 = MEMORY[0x1E018B4B0](v35, MEMORY[0x1E4FBB1A0]);
          unint64_t v38 = v37;
          swift_bridgeObjectRelease();
          uint64_t v73 = sub_1DB11F638(v36, v38, &v74);
          sub_1DB1F1910();
          swift_bridgeObjectRelease_n();
          uint64_t v39 = v63;
          swift_bridgeObjectRelease();
          os_log_t v40 = v64;
          _os_log_impl(&dword_1DB0DC000, v64, (os_log_type_t)v65, "Successfully identified text of length %{public}ld as %{public}s using strategy: %{public}s; text: %{sensitive}s",
            (uint8_t *)v29,
            0x2Au);
          uint64_t v41 = v66;
          swift_arrayDestroy();
          MEMORY[0x1E018CA60](v41, -1, -1);
          MEMORY[0x1E018CA60](v29, -1, -1);
        }
        else
        {
          uint64_t v39 = *(void (**)(char *, uint64_t))(v12 + 8);
          v39(v14, v11);

          swift_bridgeObjectRelease_n();
        }
        v68(v17, v20, v11);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4B0);
        sub_1DB1F1530();

        v39(v20, v11);
        return sub_1DB173E68();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    sub_1DB0E8BD4((uint64_t)v10, &qword_1EBA4E570);
    if (qword_1EBA4E298 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_1DB1EF810();
    __swift_project_value_buffer(v52, (uint64_t)qword_1EBA4F3F0);
    id v53 = sub_1DB1EF7F0();
    os_log_type_t v54 = sub_1DB1F1710();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 138412290;
      sub_1DB184784();
      uint64_t v57 = (void *)swift_allocError();
      unsigned char *v58 = 2;
      uint64_t v59 = sub_1DB1EF410();

      uint64_t v74 = v59;
      sub_1DB1F1910();
      void *v56 = v59;
      _os_log_impl(&dword_1DB0DC000, v53, v54, "Failed to get dominant result for text LID: %@", v55, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v56, -1, -1);
      MEMORY[0x1E018CA60](v55, -1, -1);
    }

    sub_1DB184784();
    uint64_t v60 = swift_allocError();
    *uint64_t v61 = 2;
    uint64_t v74 = v60;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4B0);
    sub_1DB1F1520();
  }
  else
  {
    if (qword_1EBA4E298 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1DB1EF810();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBA4F3F0);
    uint64_t v43 = sub_1DB1EF7F0();
    os_log_type_t v44 = sub_1DB1F1710();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      unint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v45 = 138412290;
      sub_1DB184784();
      uint64_t v47 = (void *)swift_allocError();
      *uint64_t v48 = 3;
      uint64_t v49 = sub_1DB1EF410();

      uint64_t v74 = v49;
      sub_1DB1F1910();
      *unint64_t v46 = v49;
      _os_log_impl(&dword_1DB0DC000, v43, v44, "Faield to get result for text LID: %@", v45, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
      swift_arrayDestroy();
      MEMORY[0x1E018CA60](v46, -1, -1);
      MEMORY[0x1E018CA60](v45, -1, -1);
    }

    sub_1DB184784();
    uint64_t v50 = swift_allocError();
    *long long v51 = 3;
    uint64_t v74 = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4B0);
    sub_1DB1F1520();
  }
  return sub_1DB173E68();
}

void sub_1DB1821F0(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t static TextIdentificationService.identify(_:grouped:)(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4DD98);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned char v9[16] = a2;
  uint64_t v10 = a1;
  type metadata accessor for TextModel();
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBD028], v4);
  return sub_1DB1F15E0();
}

uint64_t sub_1DB18237C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DB1F1590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(unsigned char *)(v14 + 32) = a2;
  *(void *)(v14 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_bridgeObjectRetain();
  sub_1DB131F20((uint64_t)v11, (uint64_t)&unk_1EA905400, v14);
  return swift_release();
}

uint64_t sub_1DB182564(uint64_t a1)
{
  return sub_1DB18237C(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for LowConfidenceLID()
{
  return &type metadata for LowConfidenceLID;
}

ValueMetadata *type metadata accessor for TextIdentificationService()
{
  return &type metadata for TextIdentificationService;
}

uint64_t sub_1DB182590(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  *(unsigned char *)(v6 + 184) = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905408);
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = *(void *)(v7 - 8);
  *(void *)(v6 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for TextModel();
  *(void *)(v6 + 88) = v8;
  *(void *)(v6 + 96) = *(void *)(v8 - 8);
  *(void *)(v6 + 104) = swift_task_alloc();
  *(void *)(v6 + 112) = swift_task_alloc();
  uint64_t v9 = sub_1DB1EF6B0();
  *(void *)(v6 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
  *(void *)(v6 + 128) = *(void *)(v9 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  *(void *)(v6 + 144) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB182730, 0, 0);
}

uint64_t sub_1DB182730()
{
  int v1 = *(unsigned __int8 *)(v0 + 184);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = v2;
  *(void *)(v0 + 152) = v2;
  if (v1 == 1)
  {
    *(void *)(v2 + 16) = *(void *)(v0 + 48);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v4;
    void *v4 = v0;
    v4[1] = sub_1DB1828D8;
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 120);
    return MEMORY[0x1F4188160](v5, 0, 0, 0x796669746E656469, 0xEC000000293A5F28, sub_1DB184A6C, v3, v6);
  }
  else
  {
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1DB182E1C;
    return MEMORY[0x1F4187F28]();
  }
}

uint64_t sub_1DB1828D8()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DB182FE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1DB1829F4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB1829F4()
{
  uint64_t v39 = v0;
  if (qword_1EBA4E298 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 6;
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  uint64_t v6 = sub_1DB1EF810();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBA4F3F0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7(v3, v2, v4);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DB1EF7F0();
  os_log_type_t v9 = sub_1DB1F1700();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v36 = v0[15];
  uint64_t v13 = v0[6];
  uint64_t v35 = v7;
  if (v10)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v38 = v15;
    *(_DWORD *)uint64_t v14 = 134218242;
    v0[4] = *(void *)(v13 + 16);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v16 = sub_1DB1EF590();
    v0[5] = sub_1DB11F638(v16, v17, &v38);
    uint64_t v1 = v0 + 6;
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v18(v12, v36);
    _os_log_impl(&dword_1DB0DC000, v8, v9, "Successfully identified %ld text models as: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v15, -1, -1);
    MEMORY[0x1E018CA60](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v18(v12, v36);
  }

  uint64_t v19 = *(void *)(*v1 + 16);
  if (v19)
  {
    uint64_t v30 = v18;
    uint64_t v20 = v0[12];
    uint64_t v34 = v0[11];
    uint64_t v21 = *v1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    unint64_t v32 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v0[16] + 56);
    uint64_t v33 = *(void *)(v20 + 72);
    uint64_t v31 = (void (**)(uint64_t, uint64_t))(v0[9] + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v22 = v0[18];
      uint64_t v23 = v0[14];
      uint64_t v24 = v0[15];
      uint64_t v25 = v0[13];
      uint64_t v26 = v0[10];
      uint64_t v37 = v0[8];
      sub_1DB1843B8(v21, v23, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v27 = v23 + *(int *)(v34 + 28);
      sub_1DB0E8BD4(v27, &qword_1EBA4E570);
      v35(v27, v22, v24);
      (*v32)(v27, 0, 1, v24);
      sub_1DB1843B8(v23, v25, (uint64_t (*)(void))type metadata accessor for TextModel);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
      sub_1DB1F15A0();
      (*v31)(v26, v37);
      sub_1DB184724(v23, (uint64_t (*)(void))type metadata accessor for TextModel);
      v21 += v33;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v18 = v30;
  }
  v18(v0[18], v0[15]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  sub_1DB1F15B0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1DB182E1C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DB182F34, 0, 0);
}

uint64_t sub_1DB182F34()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  sub_1DB1F15B0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DB182FE4()
{
  swift_task_dealloc();
  if (qword_1EBA4E298 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = sub_1DB1EF810();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBA4F3F0);
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_1DB1EF7F0();
  os_log_type_t v5 = sub_1DB1F1710();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[21];
  uint64_t v8 = v0[6];
  if (v6)
  {
    uint64_t v9 = swift_slowAlloc();
    BOOL v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218242;
    v0[2] = *(void *)(v8 + 16);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    uint64_t v11 = sub_1DB1EF410();
    v0[3] = v11;
    sub_1DB1F1910();
    *BOOL v10 = v11;

    _os_log_impl(&dword_1DB0DC000, v4, v5, "Failed to identify text in %ld models: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v10, -1, -1);
    MEMORY[0x1E018CA60](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v0[6];
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = (void *)v0[21];
  if (v13)
  {
    uint64_t v15 = v0[12];
    uint64_t v28 = v0[11];
    uint64_t v16 = v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v0[9] + 8);
    uint64_t v27 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain();
    do
    {
      unint64_t v17 = (void *)v0[21];
      uint64_t v19 = v0[13];
      uint64_t v18 = v0[14];
      uint64_t v30 = v0[8];
      uint64_t v29 = v0[10];
      sub_1DB1843B8(v16, v18, (uint64_t (*)(void))type metadata accessor for TextModel);
      uint64_t v20 = v0;
      uint64_t v21 = *(int *)(v28 + 44);
      uint64_t v22 = *(void **)(v18 + v21);
      id v23 = v17;

      *(void *)(v18 + v21) = v14;
      uint64_t v0 = v20;
      sub_1DB1843B8(v18, v19, (uint64_t (*)(void))type metadata accessor for TextModel);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
      sub_1DB1F15A0();
      (*v26)(v29, v30);
      sub_1DB184724(v18, (uint64_t (*)(void))type metadata accessor for TextModel);
      v16 += v27;
      --v13;
    }
    while (v13);
    uint64_t v14 = (void *)v20[21];
    swift_bridgeObjectRelease();
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  sub_1DB1F15B0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1DB183364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(void *)(v6 + 64);
  v4[15] = swift_task_alloc();
  uint64_t v7 = *(void *)(type metadata accessor for TextModel() - 8);
  v4[16] = v7;
  v4[17] = *(void *)(v7 + 64);
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB1834D4, 0, 0);
}

uint64_t sub_1DB1834D4()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = v1 + v4;
    uint64_t v31 = *(void *)(v3 + 72);
    unint64_t v32 = v4;
    unint64_t v30 = v4 + *(void *)(v0 + 136);
    uint64_t v33 = *(void *)(v0 + 104);
    uint64_t v29 = *(void *)(v0 + 112) + 7;
    uint64_t v6 = sub_1DB1F1590();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v28 = *(void (**)(void))(v7 + 56);
    uint64_t v27 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v35 = v2;
      uint64_t v36 = *(void *)(v0 + 160);
      uint64_t v9 = v6;
      uint64_t v10 = *(void *)(v0 + 144);
      uint64_t v11 = *(void *)(v0 + 120);
      uint64_t v13 = *(void *)(v0 + 88);
      uint64_t v12 = *(void *)(v0 + 96);
      uint64_t v37 = *(void *)(v0 + 80);
      uint64_t v38 = *(void *)(v0 + 152);
      v28();
      uint64_t v34 = v5;
      sub_1DB1843B8(v5, v10, (uint64_t (*)(void))type metadata accessor for TextModel);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v11, v13, v12);
      unint64_t v14 = (v30 + *(unsigned __int8 *)(v33 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = 0;
      *(void *)(v15 + 24) = 0;
      uint64_t v16 = v10;
      uint64_t v6 = v9;
      sub_1DB184CEC(v16, v15 + v32, (uint64_t (*)(void))type metadata accessor for TextModel);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v33 + 32))(v15 + v14, v11, v12);
      *(void *)(v15 + ((v29 + v14) & 0xFFFFFFFFFFFFFFF8)) = v37;
      sub_1DB184EE0(v36, v38);
      LODWORD(v12) = (*v27)(v38, 1, v9);
      swift_bridgeObjectRetain();
      uint64_t v17 = *(void *)(v0 + 152);
      if (v12 == 1)
      {
        sub_1DB0E8BD4(*(void *)(v0 + 152), (uint64_t *)&unk_1EBA4E610);
      }
      else
      {
        sub_1DB1F1580();
        (*v26)(v17, v9);
      }
      if (*(void *)(v15 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v18 = sub_1DB1F1510();
        uint64_t v20 = v19;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v18 = 0;
        uint64_t v20 = 0;
      }
      uint64_t v21 = **(void **)(v0 + 72);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = &unk_1EA905428;
      *(void *)(v22 + 24) = v15;
      uint64_t v23 = v20 | v18;
      if (v20 | v18)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v18;
        *(void *)(v0 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v20;
      }
      uint64_t v8 = *(void *)(v0 + 160);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v21;
      swift_task_create();
      swift_release();
      sub_1DB0E8BD4(v8, (uint64_t *)&unk_1EBA4E610);
      uint64_t v5 = v34 + v31;
      uint64_t v2 = v35 - 1;
    }
    while (v35 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1DB1838C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905408);
  unsigned char v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for TextModel();
  v6[11] = v8;
  v6[12] = *(void *)(v8 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  uint64_t v9 = sub_1DB1EF6B0();
  v6[15] = v9;
  v6[16] = *(void *)(v9 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DB183A68, 0, 0);
}

uint64_t sub_1DB183A68()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4E0);
  int v3 = *(_DWORD *)(v1 + 80);
  *(_DWORD *)(v0 + 184) = v3;
  unint64_t v4 = (v3 + 32) & ~(unint64_t)v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 152) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1DB1F4170;
  sub_1DB1843B8(v2, v5 + v4, (uint64_t (*)(void))type metadata accessor for TextModel);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1DB183BC8;
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 120);
  return MEMORY[0x1F4188160](v8, 0, 0, 0x796669746E656469, 0xEC000000293A5F28, sub_1DB185038, v6, v9);
}

uint64_t sub_1DB183BC8()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DB184088;
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_task_dealloc();
    uint64_t v2 = sub_1DB183D2C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DB183D2C()
{
  uint64_t v33 = v0;
  if (qword_1EBA4E298 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = sub_1DB1EF810();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBA4F3F0);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v31(v1, v2, v3);
  uint64_t v6 = sub_1DB1EF7F0();
  os_log_type_t v7 = sub_1DB1F1700();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[16];
  uint64_t v9 = v0[17];
  if (v8)
  {
    uint64_t v29 = v0[15];
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v32 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v13 = sub_1DB1EF590();
    v0[4] = sub_1DB11F638(v13, v14, &v32);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    uint64_t v15 = v29;
    unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v30(v9, v15);
    _os_log_impl(&dword_1DB0DC000, v6, v7, "Successfully identified text as: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v12, -1, -1);
    MEMORY[0x1E018CA60](v11, -1, -1);
  }
  else
  {
    unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v30(v9, v0[15]);
  }

  uint64_t v16 = v0[18];
  uint64_t v18 = v0[15];
  uint64_t v17 = v0[16];
  uint64_t v20 = v0[13];
  uint64_t v19 = v0[14];
  uint64_t v21 = v0[10];
  uint64_t v22 = v0[11];
  uint64_t v23 = v0[9];
  uint64_t v28 = v0[8];
  sub_1DB1843B8(v0[5], v19, (uint64_t (*)(void))type metadata accessor for TextModel);
  uint64_t v24 = v19 + *(int *)(v22 + 28);
  sub_1DB0E8BD4(v24, &qword_1EBA4E570);
  v31(v24, v16, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v18);
  sub_1DB1843B8(v19, v20, (uint64_t (*)(void))type metadata accessor for TextModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  sub_1DB1F15A0();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v28);
  uint64_t v25 = v0[14];
  v30(v0[18], v0[15]);
  sub_1DB184724(v25, (uint64_t (*)(void))type metadata accessor for TextModel);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_1DB184088()
{
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (qword_1EBA4E298 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = sub_1DB1EF810();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBA4F3F0);
  id v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DB1EF7F0();
  os_log_type_t v5 = sub_1DB1F1710();
  BOOL v6 = os_log_type_enabled(v4, v5);
  os_log_type_t v7 = (void *)v0[22];
  uint64_t v8 = v0[7];
  if (v6)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134349314;
    v0[2] = *(void *)(v8 + 16);
    sub_1DB1F1910();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    uint64_t v11 = sub_1DB1EF410();
    v0[3] = v11;
    sub_1DB1F1910();
    *uint64_t v10 = v11;

    _os_log_impl(&dword_1DB0DC000, v4, v5, "Failed to identify language of %{public}ld models: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBA4E2A8);
    swift_arrayDestroy();
    MEMORY[0x1E018CA60](v10, -1, -1);
    MEMORY[0x1E018CA60](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = (void *)v0[22];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[14];
  uint64_t v15 = v0[11];
  uint64_t v16 = v0[9];
  sub_1DB1843B8(v0[5], v14, (uint64_t (*)(void))type metadata accessor for TextModel);
  uint64_t v17 = *(int *)(v15 + 44);
  uint64_t v18 = *(void **)(v14 + v17);
  id v19 = v12;

  *(void *)(v14 + v17) = v12;
  sub_1DB1843B8(v14, v13, (uint64_t (*)(void))type metadata accessor for TextModel);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  sub_1DB1F15A0();

  uint64_t v20 = v0[14];
  (*(void (**)(void, void))(v16 + 8))(v0[10], v0[8]);
  sub_1DB184724(v20, (uint64_t (*)(void))type metadata accessor for TextModel);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1DB1843B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB184420()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = v2 + *(void *)(*(void *)v1 + 64);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4B0);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_1DB1EF790();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + v1[7];
  uint64_t v10 = sub_1DB1EF760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB1845FC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Signpost() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA4E4B0) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + v8);
  uint64_t v10 = *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DB181944(a1, v1 + v4, v1 + v7, v9, v10);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1DB184724(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DB184784()
{
  unint64_t result = qword_1EBA4DE20;
  if (!qword_1EBA4DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA4DE20);
  }
  return result;
}

uint64_t sub_1DB1847D8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DB1848B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1DB1036D0;
  return sub_1DB182590(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1DB1849B8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1DB103C1C;
  return sub_1DB183364(a1, a2, v7, v6);
}

uint64_t sub_1DB184A6C(uint64_t (*a1)())
{
  return sub_1DB181170(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DB184A74()
{
  uint64_t v1 = (int *)type metadata accessor for TextModel();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v11 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0);
  uint64_t v3 = *(void *)(v12 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v2;
  uint64_t v6 = sub_1DB1EF570();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v2, v6);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[7];
  uint64_t v8 = sub_1DB1EF6B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5 + v1[9], v8);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + ((v2 + v11 + v4) & ~v4), v12);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DB184CEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DB184D54(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for TextModel() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA9053F0) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + v9;
  uint64_t v14 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_1DB103C1C;
  return sub_1DB1838C8(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_1DB184EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBA4E610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DB184F48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DB184F80(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DB1036D0;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA906178 + dword_1EA906178);
  return v6(a1, v4);
}

uint64_t sub_1DB18503C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for TextModel();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1DB12EA74(0, v10, 0);
    uint64_t v11 = v21;
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = a3 + v18;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1DB12EA74(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1DB188F48((uint64_t)v9, v11 + v18 + v15 * v13);
      v12 += v13;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1DB1851D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(int *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v12 = (uint64_t (*)(int *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      int v11 = *(_DWORD *)(a3 + 4 * v7 + 32);
      int v13 = v11;
      unint64_t result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v14 = v8;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_1DB12EA54(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v14;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          unint64_t result = sub_1DB12EA54(v9 > 1, v10 + 1, 1);
          uint64_t v8 = v14;
        }
        *(void *)(v8 + 16) = v10 + 1;
        *(_DWORD *)(v8 + 4 * v10 + 32) = v11;
        uint64_t v6 = v12;
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t Array<A>.sourceParagraph.getter(uint64_t a1)
{
  uint64_t v17 = type metadata accessor for TextModel();
  uint64_t v2 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1DB12E9B8(0, v5, 0);
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v8 = *(void *)(v2 + 72);
    uint64_t v6 = v18;
    do
    {
      sub_1DB188E34(v7, (uint64_t)v4);
      unint64_t v9 = &v4[*(int *)(v17 + 24)];
      uint64_t v11 = *(void *)v9;
      uint64_t v10 = *((void *)v9 + 1);
      swift_bridgeObjectRetain();
      sub_1DB188E98((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DB12E9B8(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v18;
      }
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1DB12E9B8(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v10;
      v7 += v8;
      --v5;
    }
    while (v5);
  }
  uint64_t v18 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA905438);
  sub_1DB0E3C44(&qword_1EA905440, &qword_1EA905438);
  uint64_t v15 = sub_1DB1F1210();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t type metadata accessor for TextModel()
{
  uint64_t result = qword_1EBA4E488;
  if (!qword_1EBA4E488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Array<A>.sourceLocale.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v4 = type metadata accessor for TextModel();
    uint64_t v5 = a1
       + *(int *)(v4 + 28)
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    return sub_1DB11FF38(v5, a2);
  }
  else
  {
    uint64_t v7 = sub_1DB1EF6B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    return v8(a2, 1, 1, v7);
  }
}

uint64_t Array<A>.targetLocale.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v4 = type metadata accessor for TextModel();
    unint64_t v5 = a1
       + *(int *)(v4 + 36)
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = sub_1DB1EF6B0();
    uint64_t v13 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(a2, v5, v6);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v8 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = v6;
  }
  else
  {
    uint64_t v11 = sub_1DB1EF6B0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v10 = v11;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

uint64_t TextModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DB1EF570();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TextModel.index.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TextModel() + 20));
}

uint64_t TextModel.sourceString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TextModel() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextModel.sourceString.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TextModel() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*TextModel.sourceString.modify())(double, double)
{
  return CGPointMake;
}

uint64_t TextModel.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TextModel() + 28);
  return sub_1DB11FF38(v3, a1);
}

uint64_t TextModel.sourceLocale.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TextModel() + 28);
  return sub_1DB106F4C(a1, v3);
}

double (*TextModel.sourceLocale.modify())(double, double)
{
  return CGPointMake;
}

uint64_t TextModel.targetString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TextModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextModel.targetString.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TextModel() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}